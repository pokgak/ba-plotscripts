<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 10:13:32.510" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.142" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:36.150" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:37.277" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:36.141" endtime="20201112 10:13:37.277"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.280" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:37.279" endtime="20201112 10:13:37.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.138" endtime="20201112 10:13:37.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:37.283" endtime="20201112 10:13:37.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.282" endtime="20201112 10:13:37.513"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.526" endtime="20201112 10:13:40.555"></status>
</kw>
<msg timestamp="20201112 10:13:40.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.525" endtime="20201112 10:13:40.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.561" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.558" endtime="20201112 10:13:40.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.568" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:40.564" endtime="20201112 10:13:40.569"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:37.522" endtime="20201112 10:13:40.570"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:37.519" endtime="20201112 10:13:40.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.518" endtime="20201112 10:13:40.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:40.581" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:40.579" endtime="20201112 10:13:40.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.574" endtime="20201112 10:13:40.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.517" endtime="20201112 10:13:40.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.517" endtime="20201112 10:13:40.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.584" endtime="20201112 10:13:40.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.515" endtime="20201112 10:13:40.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.590" endtime="20201112 10:13:40.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.513" endtime="20201112 10:13:40.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.136" endtime="20201112 10:13:40.596"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.610" endtime="20201112 10:13:40.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.607" endtime="20201112 10:13:40.633"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.661" endtime="20201112 10:13:43.690"></status>
</kw>
<msg timestamp="20201112 10:13:43.691" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.659" endtime="20201112 10:13:43.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.693" endtime="20201112 10:13:43.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.703" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:43.699" endtime="20201112 10:13:43.704"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:40.656" endtime="20201112 10:13:43.705"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:40.651" endtime="20201112 10:13:43.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.647" endtime="20201112 10:13:43.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:43.716" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:43.714" endtime="20201112 10:13:43.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.709" endtime="20201112 10:13:43.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.645" endtime="20201112 10:13:43.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.644" endtime="20201112 10:13:43.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.719" endtime="20201112 10:13:43.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.639" endtime="20201112 10:13:43.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.635" endtime="20201112 10:13:43.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.604" endtime="20201112 10:13:43.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.741" endtime="20201112 10:13:43.756"></status>
</kw>
<msg timestamp="20201112 10:13:43.757" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.738" endtime="20201112 10:13:43.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.763" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.760" endtime="20201112 10:13:43.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.766" endtime="20201112 10:13:43.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.732" endtime="20201112 10:13:43.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.728" endtime="20201112 10:13:43.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.781" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 10:13:43.779" endtime="20201112 10:13:43.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.785" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 10:13:43.783" endtime="20201112 10:13:43.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.773" endtime="20201112 10:13:43.787"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:40.597" endtime="20201112 10:13:43.789" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:32.621" endtime="20201112 10:13:43.797"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.861" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:43.869" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:44.942" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:43.859" endtime="20201112 10:13:44.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.946" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:44.943" endtime="20201112 10:13:44.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.858" endtime="20201112 10:13:44.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:44.949" endtime="20201112 10:13:45.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.947" endtime="20201112 10:13:45.171"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.183" endtime="20201112 10:13:48.213"></status>
</kw>
<msg timestamp="20201112 10:13:48.214" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.182" endtime="20201112 10:13:48.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.217" endtime="20201112 10:13:48.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:48.223" endtime="20201112 10:13:48.228"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:45.179" endtime="20201112 10:13:48.229"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:45.177" endtime="20201112 10:13:48.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.176" endtime="20201112 10:13:48.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:48.239" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:48.237" endtime="20201112 10:13:48.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.233" endtime="20201112 10:13:48.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.175" endtime="20201112 10:13:48.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.174" endtime="20201112 10:13:48.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.243" endtime="20201112 10:13:48.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.173" endtime="20201112 10:13:48.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.249" endtime="20201112 10:13:48.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.171" endtime="20201112 10:13:48.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.856" endtime="20201112 10:13:48.254"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.268" endtime="20201112 10:13:48.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.265" endtime="20201112 10:13:48.292"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.322" endtime="20201112 10:13:51.352"></status>
</kw>
<msg timestamp="20201112 10:13:51.353" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.317" endtime="20201112 10:13:51.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.358" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.355" endtime="20201112 10:13:51.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.365" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:51.361" endtime="20201112 10:13:51.366"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:48.312" endtime="20201112 10:13:51.367"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:48.306" endtime="20201112 10:13:51.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.304" endtime="20201112 10:13:51.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:51.377" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:51.375" endtime="20201112 10:13:51.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.371" endtime="20201112 10:13:51.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.302" endtime="20201112 10:13:51.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.300" endtime="20201112 10:13:51.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.381" endtime="20201112 10:13:51.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.297" endtime="20201112 10:13:51.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.293" endtime="20201112 10:13:51.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.262" endtime="20201112 10:13:51.387"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 10:13:51.392" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.409" endtime="20201112 10:13:51.425"></status>
</kw>
<msg timestamp="20201112 10:13:51.426" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.406" endtime="20201112 10:13:51.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.431" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.428" endtime="20201112 10:13:51.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.434" endtime="20201112 10:13:51.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.400" endtime="20201112 10:13:51.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.396" endtime="20201112 10:13:51.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.454" endtime="20201112 10:13:51.742"></status>
</kw>
<msg timestamp="20201112 10:13:51.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.130412986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.130421222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.450" endtime="20201112 10:13:51.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.130412986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.130421222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.745" endtime="20201112 10:13:51.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.751" endtime="20201112 10:13:51.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.445" endtime="20201112 10:13:51.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.441" endtime="20201112 10:13:51.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.758" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:51.757" endtime="20201112 10:13:51.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.762" level="INFO">VALUE: [{'time': 3.130412986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.130421222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999772758e-06, 'source_diff': 8.235999999772758e-06}, {'time': 3.130426736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000150787e-06, 'source_diff': 5.514000000150787e-06}, {'time': 3.130432319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.583000000086713e-06, 'source_diff': 5.583000000086713e-06}, {'time': 3.130436958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000139504e-06, 'source_diff': 4.639000000139504e-06}, {'time': 3.130440889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.930999999735008e-06, 'source_diff': 3.930999999735008e-06}, {'time': 3.130450236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000214933e-06, 'source_diff': 9.347000000214933e-06}, {'time': 3.130458125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.888999999927648e-06, 'source_diff': 7.888999999927648e-06}, {'time': 3.130458667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.130460639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9719999997391824e-06, 'source_diff': 1.9719999997391824e-06}, {'time': 3.130470444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.80500000036244e-06, 'source_diff': 9.80500000036244e-06}, {'time': 3.130477389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944999999980439e-06, 'source_diff': 6.944999999980439e-06}, {'time': 3.130484889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.499999999716067e-06, 'source_diff': 7.499999999716067e-06}, {'time': 3.130485431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.130494056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.62499999998434e-06, 'source_diff': 8.62499999998434e-06}, {'time': 3.130494597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000003536197e-07, 'source_diff': 5.410000003536197e-07}, {'time': 3.130498, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999995688343e-06, 'source_diff': 3.4029999995688343e-06}, {'time': 3.130503278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000163985e-06, 'source_diff': 5.278000000163985e-06}, {'time': 3.130512694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.41600000015086e-06, 'source_diff': 9.41600000015086e-06}, {'time': 3.130521375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999732819e-06, 'source_diff': 8.680999999732819e-06}, {'time': 3.130524319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9440000002267652e-06, 'source_diff': 2.9440000002267652e-06}, {'time': 3.130528458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000069615e-06, 'source_diff': 4.139000000069615e-06}, {'time': 3.130537778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.3199999997573e-06, 'source_diff': 9.3199999997573e-06}, {'time': 3.130543625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8470000001698e-06, 'source_diff': 5.8470000001698e-06}, {'time': 3.130550639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999916365e-06, 'source_diff': 7.013999999916365e-06}, {'time': 3.130553139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999053557e-06, 'source_diff': 2.4999999999053557e-06}, {'time': 3.130560639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000160156e-06, 'source_diff': 7.500000000160156e-06}, {'time': 3.130567611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.971999999993983e-06, 'source_diff': 6.971999999993983e-06}, {'time': 3.130570819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2079999998657627e-06, 'source_diff': 3.2079999998657627e-06}, {'time': 3.130573306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4870000001619985e-06, 'source_diff': 2.4870000001619985e-06}, {'time': 3.130578903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999912811e-06, 'source_diff': 5.596999999912811e-06}, {'time': 3.130584917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000220676e-06, 'source_diff': 6.014000000220676e-06}, {'time': 3.130594806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999763115e-06, 'source_diff': 9.888999999763115e-06}, {'time': 3.130602694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.887999999844908e-06, 'source_diff': 7.887999999844908e-06}, {'time': 3.130606069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3750000003607283e-06, 'source_diff': 3.3750000003607283e-06}, {'time': 3.130606611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.130615181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999874511e-06, 'source_diff': 8.569999999874511e-06}, {'time': 3.130617847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6659999998734918e-06, 'source_diff': 2.6659999998734918e-06}, {'time': 3.130626931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.084000000214587e-06, 'source_diff': 9.084000000214587e-06}, {'time': 3.130635097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.165999999754092e-06, 'source_diff': 8.165999999754092e-06}, {'time': 3.130644556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.459000000155982e-06, 'source_diff': 9.459000000155982e-06}, {'time': 3.130649181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.624999999869317e-06, 'source_diff': 4.624999999869317e-06}, {'time': 3.130658069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999984686e-06, 'source_diff': 8.887999999984686e-06}, {'time': 3.13066175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6809999999221077e-06, 'source_diff': 3.6809999999221077e-06}, {'time': 3.130669889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000184637e-06, 'source_diff': 8.139000000184637e-06}, {'time': 3.13067525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999926008e-06, 'source_diff': 5.360999999926008e-06}, {'time': 3.130679833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999946935e-06, 'source_diff': 4.582999999946935e-06}, {'time': 3.130687083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2500000003472564e-06, 'source_diff': 7.2500000003472564e-06}, {'time': 3.130696681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999666484e-06, 'source_diff': 9.597999999666484e-06}, {'time': 3.130705528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847000000145044e-06, 'source_diff': 8.847000000145044e-06}, {'time': 3.130712472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999897699e-06, 'source_diff': 6.943999999897699e-06}, {'time': 3.13071775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000163985e-06, 'source_diff': 5.278000000163985e-06}, {'time': 3.130723347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999912811e-06, 'source_diff': 5.596999999912811e-06}, {'time': 3.130729444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0969999999827e-06, 'source_diff': 6.0969999999827e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:51.760" endtime="20201112 10:13:51.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.754" endtime="20201112 10:13:51.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:51.779" level="INFO">${debug-compressed} = {'source_diff': [0, 8.235999999772758e-06, 5.514000000150787e-06, 5.583000000086713e-06, 4.639000000139504e-06, 3.930999999735008e-06, 9.347000000214933e-06, 7.888999999927648e-06, 5.419999999922709e-...</msg>
<status status="PASS" starttime="20201112 10:13:51.764" endtime="20201112 10:13:51.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.783" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:51.782" endtime="20201112 10:13:51.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.787" level="INFO">VALUE: {'source_diff': [0, 8.235999999772758e-06, 5.514000000150787e-06, 5.583000000086713e-06, 4.639000000139504e-06, 3.930999999735008e-06, 9.347000000214933e-06, 7.888999999927648e-06, 5.419999999922709e-07, 1.9719999997391824e-06, 9.80500000036244e-06, 6.944999999980439e-06, 7.499999999716067e-06, 5.419999999922709e-07, 8.62499999998434e-06, 5.410000003536197e-07, 3.4029999995688343e-06, 5.278000000163985e-06, 9.41600000015086e-06, 8.680999999732819e-06, 2.9440000002267652e-06, 4.139000000069615e-06, 9.3199999997573e-06, 5.8470000001698e-06, 7.013999999916365e-06, 2.4999999999053557e-06, 7.500000000160156e-06, 6.971999999993983e-06, 3.2079999998657627e-06, 2.4870000001619985e-06, 5.596999999912811e-06, 6.014000000220676e-06, 9.888999999763115e-06, 7.887999999844908e-06, 3.3750000003607283e-06, 5.419999999922709e-07, 8.569999999874511e-06, 2.6659999998734918e-06, 9.084000000214587e-06, 8.165999999754092e-06, 9.459000000155982e-06, 4.624999999869317e-06, 8.887999999984686e-06, 3.6809999999221077e-06, 8.139000000184637e-06, 5.360999999926008e-06, 4.582999999946935e-06, 7.2500000003472564e-06, 9.597999999666484e-06, 8.847000000145044e-06, 6.943999999897699e-06, 5.278000000163985e-06, 5.596999999912811e-06, 6.0969999999827e-06], 'sourcediff': [0, 8.235999999772758e-06, 5.514000000150787e-06, 5.583000000086713e-06, 4.639000000139504e-06, 3.930999999735008e-06, 9.347000000214933e-06, 7.888999999927648e-06, 5.419999999922709e-07, 1.9719999997391824e-06, 9.80500000036244e-06, 6.944999999980439e-06, 7.499999999716067e-06, 5.419999999922709e-07, 8.62499999998434e-06, 5.410000003536197e-07, 3.4029999995688343e-06, 5.278000000163985e-06, 9.41600000015086e-06, 8.680999999732819e-06, 2.9440000002267652e-06, 4.139000000069615e-06, 9.3199999997573e-06, 5.8470000001698e-06, 7.013999999916365e-06, 2.4999999999053557e-06, 7.500000000160156e-06, 6.971999999993983e-06, 3.2079999998657627e-06, 2.4870000001619985e-06, 5.596999999912811e-06, 6.014000000220676e-06, 9.888999999763115e-06, 7.887999999844908e-06, 3.3750000003607283e-06, 5.419999999922709e-07, 8.569999999874511e-06, 2.6659999998734918e-06, 9.084000000214587e-06, 8.165999999754092e-06, 9.459000000155982e-06, 4.624999999869317e-06, 8.887999999984686e-06, 3.6809999999221077e-06, 8.139000000184637e-06, 5.360999999926008e-06, 4.582999999946935e-06, 7.2500000003472564e-06, 9.597999999666484e-06, 8.847000000145044e-06, 6.943999999897699e-06, 5.278000000163985e-06, 5.596999999912811e-06, 6.0969999999827e-06], 'time': [3.130412986, 3.130421222, 3.130426736, 3.130432319, 3.130436958, 3.130440889, 3.130450236, 3.130458125, 3.130458667, 3.130460639, 3.130470444, 3.130477389, 3.130484889, 3.130485431, 3.130494056, 3.130494597, 3.130498, 3.130503278, 3.130512694, 3.130521375, 3.130524319, 3.130528458, 3.130537778, 3.130543625, 3.130550639, 3.130553139, 3.130560639, 3.130567611, 3.130570819, 3.130573306, 3.130578903, 3.130584917, 3.130594806, 3.130602694, 3.130606069, 3.130606611, 3.130615181, 3.130617847, 3.130626931, 3.130635097, 3.130644556, 3.130649181, 3.130658069, 3.13066175, 3.130669889, 3.13067525, 3.130679833, 3.130687083, 3.130696681, 3.130705528, 3.130712472, 3.13071775, 3.130723347, 3.130729444], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:51.784" endtime="20201112 10:13:51.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.780" endtime="20201112 10:13:51.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:51.791" level="INFO">${RESULT} = [{'time': 3.130421222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999772758e-06, 'source_diff': 8.235999999772758e-06}, {'time': 3.130432319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:51.788" endtime="20201112 10:13:51.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:51.800" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [8.235999999772758e-06, 5.583000000086713e-06, 3.930999999735008e-06, 7.888999999927648e-06, 1.9719999997391824e-06, 6.944999999980439e-06, 5.419999999922709e-07, 5.410000003536197e-07...</msg>
<status status="PASS" starttime="20201112 10:13:51.792" endtime="20201112 10:13:51.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.804" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:51.803" endtime="20201112 10:13:51.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.807" level="INFO">VALUE: [8.235999999772758e-06, 5.583000000086713e-06, 3.930999999735008e-06, 7.888999999927648e-06, 1.9719999997391824e-06, 6.944999999980439e-06, 5.419999999922709e-07, 5.410000003536197e-07, 5.278000000163985e-06, 8.680999999732819e-06, 4.139000000069615e-06, 5.8470000001698e-06, 2.4999999999053557e-06, 6.971999999993983e-06, 2.4870000001619985e-06, 6.014000000220676e-06, 7.887999999844908e-06, 5.419999999922709e-07, 2.6659999998734918e-06, 8.165999999754092e-06, 4.624999999869317e-06, 3.6809999999221077e-06, 5.360999999926008e-06, 7.2500000003472564e-06, 8.847000000145044e-06, 5.278000000163985e-06, 6.0969999999827e-06]</msg>
<status status="PASS" starttime="20201112 10:13:51.805" endtime="20201112 10:13:51.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.801" endtime="20201112 10:13:51.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.810" endtime="20201112 10:13:51.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.814" endtime="20201112 10:13:51.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.812" endtime="20201112 10:13:51.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.809" endtime="20201112 10:13:51.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.393" endtime="20201112 10:13:51.835"></status>
</kw>
<msg timestamp="20201112 10:13:51.835" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.844" endtime="20201112 10:13:51.854"></status>
</kw>
<msg timestamp="20201112 10:13:51.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.841" endtime="20201112 10:13:51.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.856" endtime="20201112 10:13:51.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.858" endtime="20201112 10:13:51.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.839" endtime="20201112 10:13:51.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.837" endtime="20201112 10:13:51.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.868" endtime="20201112 10:13:52.140"></status>
</kw>
<msg timestamp="20201112 10:13:52.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018898722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018906625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.866" endtime="20201112 10:13:52.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018898722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018906625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.143" endtime="20201112 10:13:52.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.149" endtime="20201112 10:13:52.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.863" endtime="20201112 10:13:52.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.861" endtime="20201112 10:13:52.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.156" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:52.155" endtime="20201112 10:13:52.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.160" level="INFO">VALUE: [{'time': 0.018898722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018906625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018915556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.018918222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.018926611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.018930556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.018933028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018938625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018941597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.0189465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018956125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.018959819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.018966528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018967069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018974514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.018983611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018992014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.018995847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.019003764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.019008806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019012889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.019013431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019019611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.019027819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.019028361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019030806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.019039667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019042333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.019052208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.019060181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.972999999997926e-06, 'source_diff': 7.972999999997926e-06}, {'time': 0.019060722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019062847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.019063389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019066, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.019075806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.019078722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.019083361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019092042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.019092583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019098611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019101042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.019109403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019109944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019112806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8619999999993095e-06, 'source_diff': 2.8619999999993095e-06}, {'time': 0.019120458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.019130278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.019139667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.019140208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019146931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.019147472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019152292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.019155264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.019162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.019163306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019169986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.019177944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.019181083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.139000000002695e-06, 'source_diff': 3.139000000002695e-06}, {'time': 0.0191905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.019193694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.194000000001501e-06, 'source_diff': 3.194000000001501e-06}, {'time': 0.019194236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019203042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:52.157" endtime="20201112 10:13:52.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.153" endtime="20201112 10:13:52.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:52.180" level="INFO">${debug-compressed} = {'source_diff': [0, 7.903000000000077e-06, 8.931000000000217e-06, 2.665999999998392e-06, 8.389000000001007e-06, 3.945000000001725e-06, 2.471999999999891e-06, 5.596999999999547e-06, 2.972000000000391e-...</msg>
<status status="PASS" starttime="20201112 10:13:52.163" endtime="20201112 10:13:52.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.184" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:52.183" endtime="20201112 10:13:52.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.187" level="INFO">VALUE: {'source_diff': [0, 7.903000000000077e-06, 8.931000000000217e-06, 2.665999999998392e-06, 8.389000000001007e-06, 3.945000000001725e-06, 2.471999999999891e-06, 5.596999999999547e-06, 2.972000000000391e-06, 4.903000000000546e-06, 9.624999999999218e-06, 3.693999999998532e-06, 6.709000000000576e-06, 5.409999999997361e-07, 7.445000000001756e-06, 9.096999999999578e-06, 8.403000000000577e-06, 3.832999999998227e-06, 7.916999999999647e-06, 5.042000000000241e-06, 4.083000000001946e-06, 5.419999999992098e-07, 6.179999999997993e-06, 8.208000000002602e-06, 5.419999999992098e-07, 2.4450000000002248e-06, 8.860999999998898e-06, 2.6660000000018613e-06, 9.874999999999468e-06, 7.972999999997926e-06, 5.409999999997361e-07, 2.125000000002125e-06, 5.419999999992098e-07, 2.610999999999586e-06, 9.806000000001092e-06, 2.915999999998642e-06, 4.639000000000726e-06, 8.680999999999967e-06, 5.409999999997361e-07, 6.028000000001671e-06, 2.4309999999971854e-06, 8.361000000001867e-06, 5.409999999997361e-07, 2.8619999999993095e-06, 7.652000000000353e-06, 9.820000000000662e-06, 9.388999999998537e-06, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 4.8200000000026e-06, 2.972000000000391e-06, 7.499999999997092e-06, 5.420000000026792e-07, 6.679999999998493e-06, 7.957999999998883e-06, 3.139000000002695e-06, 9.416999999997677e-06, 3.194000000001501e-06, 5.419999999992098e-07, 8.806000000000092e-06], 'sourcediff': [0, 7.903000000000077e-06, 8.931000000000217e-06, 2.665999999998392e-06, 8.389000000001007e-06, 3.945000000001725e-06, 2.471999999999891e-06, 5.596999999999547e-06, 2.972000000000391e-06, 4.903000000000546e-06, 9.624999999999218e-06, 3.693999999998532e-06, 6.709000000000576e-06, 5.409999999997361e-07, 7.445000000001756e-06, 9.096999999999578e-06, 8.403000000000577e-06, 3.832999999998227e-06, 7.916999999999647e-06, 5.042000000000241e-06, 4.083000000001946e-06, 5.419999999992098e-07, 6.179999999997993e-06, 8.208000000002602e-06, 5.419999999992098e-07, 2.4450000000002248e-06, 8.860999999998898e-06, 2.6660000000018613e-06, 9.874999999999468e-06, 7.972999999997926e-06, 5.409999999997361e-07, 2.125000000002125e-06, 5.419999999992098e-07, 2.610999999999586e-06, 9.806000000001092e-06, 2.915999999998642e-06, 4.639000000000726e-06, 8.680999999999967e-06, 5.409999999997361e-07, 6.028000000001671e-06, 2.4309999999971854e-06, 8.361000000001867e-06, 5.409999999997361e-07, 2.8619999999993095e-06, 7.652000000000353e-06, 9.820000000000662e-06, 9.388999999998537e-06, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 4.8200000000026e-06, 2.972000000000391e-06, 7.499999999997092e-06, 5.420000000026792e-07, 6.679999999998493e-06, 7.957999999998883e-06, 3.139000000002695e-06, 9.416999999997677e-06, 3.194000000001501e-06, 5.419999999992098e-07, 8.806000000000092e-06], 'time': [0.018898722, 0.018906625, 0.018915556, 0.018918222, 0.018926611, 0.018930556, 0.018933028, 0.018938625, 0.018941597, 0.0189465, 0.018956125, 0.018959819, 0.018966528, 0.018967069, 0.018974514, 0.018983611, 0.018992014, 0.018995847, 0.019003764, 0.019008806, 0.019012889, 0.019013431, 0.019019611, 0.019027819, 0.019028361, 0.019030806, 0.019039667, 0.019042333, 0.019052208, 0.019060181, 0.019060722, 0.019062847, 0.019063389, 0.019066, 0.019075806, 0.019078722, 0.019083361, 0.019092042, 0.019092583, 0.019098611, 0.019101042, 0.019109403, 0.019109944, 0.019112806, 0.019120458, 0.019130278, 0.019139667, 0.019140208, 0.019146931, 0.019147472, 0.019152292, 0.019155264, 0.019162764, 0.019163306, 0.019169986, 0.019177944, 0.019181083, 0.0191905, 0.019193694, 0.019194236, 0.019203042], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:52.185" endtime="20201112 10:13:52.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.181" endtime="20201112 10:13:52.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.192" level="INFO">${RESULT} = [{'time': 0.018906625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018918222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:52.189" endtime="20201112 10:13:52.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:52.201" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [7.903000000000077e-06, 2.665999999998392e-06, 3.945000000001725e-06, 5.596999999999547e-06, 4.903000000000546e-06, 3.693999999998532e-06, 5.409999999997361e-07, 9.096999999999578e-06,...</msg>
<status status="PASS" starttime="20201112 10:13:52.193" endtime="20201112 10:13:52.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.206" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:52.205" endtime="20201112 10:13:52.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.209" level="INFO">VALUE: [7.903000000000077e-06, 2.665999999998392e-06, 3.945000000001725e-06, 5.596999999999547e-06, 4.903000000000546e-06, 3.693999999998532e-06, 5.409999999997361e-07, 9.096999999999578e-06, 3.832999999998227e-06, 5.042000000000241e-06, 5.419999999992098e-07, 8.208000000002602e-06, 2.4450000000002248e-06, 2.6660000000018613e-06, 7.972999999997926e-06, 2.125000000002125e-06, 2.610999999999586e-06, 2.915999999998642e-06, 8.680999999999967e-06, 6.028000000001671e-06, 8.361000000001867e-06, 2.8619999999993095e-06, 9.820000000000662e-06, 5.409999999997361e-07, 5.409999999997361e-07, 2.972000000000391e-06, 5.420000000026792e-07, 7.957999999998883e-06, 9.416999999997677e-06, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201112 10:13:52.207" endtime="20201112 10:13:52.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.202" endtime="20201112 10:13:52.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.212" endtime="20201112 10:13:52.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:52.215" endtime="20201112 10:13:52.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.214" endtime="20201112 10:13:52.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.210" endtime="20201112 10:13:52.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.836" endtime="20201112 10:13:52.236"></status>
</kw>
<msg timestamp="20201112 10:13:52.237" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.245" endtime="20201112 10:13:52.255"></status>
</kw>
<msg timestamp="20201112 10:13:52.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.243" endtime="20201112 10:13:52.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.257" endtime="20201112 10:13:52.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.260" endtime="20201112 10:13:52.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.240" endtime="20201112 10:13:52.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.239" endtime="20201112 10:13:52.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.270" endtime="20201112 10:13:52.539"></status>
</kw>
<msg timestamp="20201112 10:13:52.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018026597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018034097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.267" endtime="20201112 10:13:52.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018026597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018034097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.542" endtime="20201112 10:13:52.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.548" endtime="20201112 10:13:52.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.265" endtime="20201112 10:13:52.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.263" endtime="20201112 10:13:52.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.555" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:52.554" endtime="20201112 10:13:52.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.559" level="INFO">VALUE: [{'time': 0.018026597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018034097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.018039694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018045778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018052708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.01805325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018061097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018065667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.018073889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.018076333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.018086125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.018089986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.018095597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.018104514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.018110417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018114431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018114972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018122667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.018126583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9160000000031114e-06, 'source_diff': 3.9160000000031114e-06}, {'time': 0.018134125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.018137292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.018137833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018144986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018152875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.018160125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018160667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018166389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.722000000003141e-06, 'source_diff': 5.722000000003141e-06}, {'time': 0.018174278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.018182972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018192389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.018198847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.018208181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.018208722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018213306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.018220264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.018225306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018234486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.018241236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.018243958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018246431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.018251, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018257792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018267597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.018275736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.018276278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0182815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.018288292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.018295319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.018301153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.01831025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018316319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.01832025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.018324833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018327792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.018337444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652000000002353e-06, 'source_diff': 9.652000000002353e-06}, {'time': 0.018343028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.018343569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:52.557" endtime="20201112 10:13:52.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.552" endtime="20201112 10:13:52.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:52.576" level="INFO">${debug-compressed} = {'source_diff': [0, 7.500000000000562e-06, 5.596999999999547e-06, 6.0839999999999506e-06, 6.930000000002212e-06, 5.419999999992098e-07, 7.847000000001797e-06, 4.5699999999988805e-06, 8.221999999998703...</msg>
<status status="PASS" starttime="20201112 10:13:52.562" endtime="20201112 10:13:52.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.581" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:52.579" endtime="20201112 10:13:52.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.584" level="INFO">VALUE: {'source_diff': [0, 7.500000000000562e-06, 5.596999999999547e-06, 6.0839999999999506e-06, 6.930000000002212e-06, 5.419999999992098e-07, 7.847000000001797e-06, 4.5699999999988805e-06, 8.221999999998703e-06, 2.444000000000751e-06, 9.792000000001522e-06, 3.8609999999973665e-06, 5.611000000002586e-06, 8.916999999997177e-06, 5.903000000001546e-06, 4.014000000000101e-06, 5.409999999997361e-07, 7.694999999998536e-06, 3.9160000000031114e-06, 7.5419999999992715e-06, 3.1669999999983656e-06, 5.409999999997361e-07, 7.1529999999993266e-06, 7.889000000000507e-06, 7.250000000000312e-06, 5.419999999992098e-07, 5.722000000003141e-06, 7.888999999997037e-06, 8.694000000000063e-06, 9.417000000001147e-06, 6.458000000000852e-06, 9.333999999999731e-06, 5.409999999997361e-07, 4.5839999999984504e-06, 6.958000000001352e-06, 5.042000000000241e-06, 9.180000000000993e-06, 6.749999999999812e-06, 2.722000000000141e-06, 2.4729999999993646e-06, 4.568999999999407e-06, 6.7919999999985214e-06, 9.805000000001618e-06, 8.139000000000757e-06, 5.419999999992098e-07, 5.221999999999172e-06, 6.792000000001991e-06, 7.026999999999728e-06, 5.8339999999997005e-06, 9.096999999999578e-06, 6.069000000000907e-06, 3.9309999999986855e-06, 4.582999999998977e-06, 2.9590000000002947e-06, 9.652000000002353e-06, 5.5839999999994505e-06, 5.409999999997361e-07], 'sourcediff': [0, 7.500000000000562e-06, 5.596999999999547e-06, 6.0839999999999506e-06, 6.930000000002212e-06, 5.419999999992098e-07, 7.847000000001797e-06, 4.5699999999988805e-06, 8.221999999998703e-06, 2.444000000000751e-06, 9.792000000001522e-06, 3.8609999999973665e-06, 5.611000000002586e-06, 8.916999999997177e-06, 5.903000000001546e-06, 4.014000000000101e-06, 5.409999999997361e-07, 7.694999999998536e-06, 3.9160000000031114e-06, 7.5419999999992715e-06, 3.1669999999983656e-06, 5.409999999997361e-07, 7.1529999999993266e-06, 7.889000000000507e-06, 7.250000000000312e-06, 5.419999999992098e-07, 5.722000000003141e-06, 7.888999999997037e-06, 8.694000000000063e-06, 9.417000000001147e-06, 6.458000000000852e-06, 9.333999999999731e-06, 5.409999999997361e-07, 4.5839999999984504e-06, 6.958000000001352e-06, 5.042000000000241e-06, 9.180000000000993e-06, 6.749999999999812e-06, 2.722000000000141e-06, 2.4729999999993646e-06, 4.568999999999407e-06, 6.7919999999985214e-06, 9.805000000001618e-06, 8.139000000000757e-06, 5.419999999992098e-07, 5.221999999999172e-06, 6.792000000001991e-06, 7.026999999999728e-06, 5.8339999999997005e-06, 9.096999999999578e-06, 6.069000000000907e-06, 3.9309999999986855e-06, 4.582999999998977e-06, 2.9590000000002947e-06, 9.652000000002353e-06, 5.5839999999994505e-06, 5.409999999997361e-07], 'time': [0.018026597, 0.018034097, 0.018039694, 0.018045778, 0.018052708, 0.01805325, 0.018061097, 0.018065667, 0.018073889, 0.018076333, 0.018086125, 0.018089986, 0.018095597, 0.018104514, 0.018110417, 0.018114431, 0.018114972, 0.018122667, 0.018126583, 0.018134125, 0.018137292, 0.018137833, 0.018144986, 0.018152875, 0.018160125, 0.018160667, 0.018166389, 0.018174278, 0.018182972, 0.018192389, 0.018198847, 0.018208181, 0.018208722, 0.018213306, 0.018220264, 0.018225306, 0.018234486, 0.018241236, 0.018243958, 0.018246431, 0.018251, 0.018257792, 0.018267597, 0.018275736, 0.018276278, 0.0182815, 0.018288292, 0.018295319, 0.018301153, 0.01831025, 0.018316319, 0.01832025, 0.018324833, 0.018327792, 0.018337444, 0.018343028, 0.018343569], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:52.582" endtime="20201112 10:13:52.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.577" endtime="20201112 10:13:52.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.589" level="INFO">${RESULT} = [{'time': 0.018034097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.018045778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:52.586" endtime="20201112 10:13:52.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:52.598" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [7.500000000000562e-06, 6.0839999999999506e-06, 5.419999999992098e-07, 4.5699999999988805e-06, 2.444000000000751e-06, 3.8609999999973665e-06, 8.916999999997177e-06, 4.014000000000101e-...</msg>
<status status="PASS" starttime="20201112 10:13:52.590" endtime="20201112 10:13:52.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.603" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:52.601" endtime="20201112 10:13:52.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.605" level="INFO">VALUE: [7.500000000000562e-06, 6.0839999999999506e-06, 5.419999999992098e-07, 4.5699999999988805e-06, 2.444000000000751e-06, 3.8609999999973665e-06, 8.916999999997177e-06, 4.014000000000101e-06, 7.694999999998536e-06, 7.5419999999992715e-06, 5.409999999997361e-07, 7.889000000000507e-06, 5.419999999992098e-07, 7.888999999997037e-06, 9.417000000001147e-06, 9.333999999999731e-06, 4.5839999999984504e-06, 5.042000000000241e-06, 6.749999999999812e-06, 2.4729999999993646e-06, 6.7919999999985214e-06, 8.139000000000757e-06, 5.221999999999172e-06, 7.026999999999728e-06, 9.096999999999578e-06, 3.9309999999986855e-06, 2.9590000000002947e-06, 5.5839999999994505e-06]</msg>
<status status="PASS" starttime="20201112 10:13:52.604" endtime="20201112 10:13:52.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.599" endtime="20201112 10:13:52.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.609" endtime="20201112 10:13:52.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:52.612" endtime="20201112 10:13:52.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.611" endtime="20201112 10:13:52.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.607" endtime="20201112 10:13:52.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.237" endtime="20201112 10:13:52.633"></status>
</kw>
<msg timestamp="20201112 10:13:52.634" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.642" endtime="20201112 10:13:52.653"></status>
</kw>
<msg timestamp="20201112 10:13:52.654" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.640" endtime="20201112 10:13:52.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.656" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.655" endtime="20201112 10:13:52.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.658" endtime="20201112 10:13:52.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.637" endtime="20201112 10:13:52.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.636" endtime="20201112 10:13:52.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.667" endtime="20201112 10:13:52.933"></status>
</kw>
<msg timestamp="20201112 10:13:52.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018180069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018180611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.665" endtime="20201112 10:13:52.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018180069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018180611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.936" endtime="20201112 10:13:52.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.942" endtime="20201112 10:13:52.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.663" endtime="20201112 10:13:52.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.661" endtime="20201112 10:13:52.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.949" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:52.948" endtime="20201112 10:13:52.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.953" level="INFO">VALUE: [{'time': 0.018180069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018180611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018186319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018190417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018200056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.018204639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.018213083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018222417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.018228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.018238292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.018238833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018242389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.018248722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.018251917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.195000000000975e-06, 'source_diff': 3.195000000000975e-06}, {'time': 0.018261806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.01826875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.018272153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018279639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018283083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.018283625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018291264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.018301042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.018308236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018311931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.018321264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018328722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.457999999998383e-06, 'source_diff': 7.457999999998383e-06}, {'time': 0.018337861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.018346014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018351861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018354986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.018357653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018363167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.018368056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018372694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.637999999997783e-06, 'source_diff': 4.637999999997783e-06}, {'time': 0.018382278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.018389528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018392069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.018395722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018399569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018400111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018408264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018408806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018417431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.018417972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018423514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.018426889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018434556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.018441347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.018449792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.018450333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018453417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.018459181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018467819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.637999999998314e-06, 'source_diff': 8.637999999998314e-06}, {'time': 0.01847125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.431000000001655e-06, 'source_diff': 3.431000000001655e-06}, {'time': 0.018479681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430999999999716e-06, 'source_diff': 8.430999999999716e-06}, {'time': 0.018486347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665999999998923e-06, 'source_diff': 6.665999999998923e-06}, {'time': 0.018489097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:52.950" endtime="20201112 10:13:52.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.946" endtime="20201112 10:13:52.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:52.971" level="INFO">${debug-compressed} = {'source_diff': [0, 5.419999999992098e-07, 5.708000000000102e-06, 4.09800000000099e-06, 9.638999999998787e-06, 4.583000000002446e-06, 8.443999999999813e-06, 9.333999999999731e-06, 6.0689999999974376e-...</msg>
<status status="PASS" starttime="20201112 10:13:52.956" endtime="20201112 10:13:52.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.975" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:52.973" endtime="20201112 10:13:52.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.978" level="INFO">VALUE: {'source_diff': [0, 5.419999999992098e-07, 5.708000000000102e-06, 4.09800000000099e-06, 9.638999999998787e-06, 4.583000000002446e-06, 8.443999999999813e-06, 9.333999999999731e-06, 6.0689999999974376e-06, 9.806000000001092e-06, 5.409999999997361e-07, 3.55600000000178e-06, 6.3329999999972575e-06, 3.195000000000975e-06, 9.888999999999037e-06, 6.944000000001782e-06, 3.4029999999990457e-06, 7.486000000000992e-06, 3.4439999999982818e-06, 5.420000000026792e-07, 7.639000000000257e-06, 9.777999999998482e-06, 7.193999999998563e-06, 3.695000000001475e-06, 9.333000000000258e-06, 7.457999999998383e-06, 9.139000000001757e-06, 8.153000000000327e-06, 5.846999999999797e-06, 3.124999999999656e-06, 2.667000000001335e-06, 5.5139999999981315e-06, 4.889000000000976e-06, 4.637999999997783e-06, 9.583999999999981e-06, 7.250000000000312e-06, 2.5410000000017363e-06, 3.6529999999992957e-06, 3.847000000001266e-06, 5.419999999992098e-07, 8.153000000000327e-06, 5.419999999992098e-07, 8.625000000001687e-06, 5.409999999997361e-07, 5.541999999997271e-06, 3.374999999999906e-06, 7.667000000002866e-06, 6.790999999999048e-06, 8.444999999999286e-06, 5.409999999997361e-07, 3.0840000000004197e-06, 5.764000000001851e-06, 8.637999999998314e-06, 3.431000000001655e-06, 8.430999999999716e-06, 6.665999999998923e-06, 2.749999999999281e-06], 'sourcediff': [0, 5.419999999992098e-07, 5.708000000000102e-06, 4.09800000000099e-06, 9.638999999998787e-06, 4.583000000002446e-06, 8.443999999999813e-06, 9.333999999999731e-06, 6.0689999999974376e-06, 9.806000000001092e-06, 5.409999999997361e-07, 3.55600000000178e-06, 6.3329999999972575e-06, 3.195000000000975e-06, 9.888999999999037e-06, 6.944000000001782e-06, 3.4029999999990457e-06, 7.486000000000992e-06, 3.4439999999982818e-06, 5.420000000026792e-07, 7.639000000000257e-06, 9.777999999998482e-06, 7.193999999998563e-06, 3.695000000001475e-06, 9.333000000000258e-06, 7.457999999998383e-06, 9.139000000001757e-06, 8.153000000000327e-06, 5.846999999999797e-06, 3.124999999999656e-06, 2.667000000001335e-06, 5.5139999999981315e-06, 4.889000000000976e-06, 4.637999999997783e-06, 9.583999999999981e-06, 7.250000000000312e-06, 2.5410000000017363e-06, 3.6529999999992957e-06, 3.847000000001266e-06, 5.419999999992098e-07, 8.153000000000327e-06, 5.419999999992098e-07, 8.625000000001687e-06, 5.409999999997361e-07, 5.541999999997271e-06, 3.374999999999906e-06, 7.667000000002866e-06, 6.790999999999048e-06, 8.444999999999286e-06, 5.409999999997361e-07, 3.0840000000004197e-06, 5.764000000001851e-06, 8.637999999998314e-06, 3.431000000001655e-06, 8.430999999999716e-06, 6.665999999998923e-06, 2.749999999999281e-06], 'time': [0.018180069, 0.018180611, 0.018186319, 0.018190417, 0.018200056, 0.018204639, 0.018213083, 0.018222417, 0.018228486, 0.018238292, 0.018238833, 0.018242389, 0.018248722, 0.018251917, 0.018261806, 0.01826875, 0.018272153, 0.018279639, 0.018283083, 0.018283625, 0.018291264, 0.018301042, 0.018308236, 0.018311931, 0.018321264, 0.018328722, 0.018337861, 0.018346014, 0.018351861, 0.018354986, 0.018357653, 0.018363167, 0.018368056, 0.018372694, 0.018382278, 0.018389528, 0.018392069, 0.018395722, 0.018399569, 0.018400111, 0.018408264, 0.018408806, 0.018417431, 0.018417972, 0.018423514, 0.018426889, 0.018434556, 0.018441347, 0.018449792, 0.018450333, 0.018453417, 0.018459181, 0.018467819, 0.01847125, 0.018479681, 0.018486347, 0.018489097], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:52.976" endtime="20201112 10:13:52.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.971" endtime="20201112 10:13:52.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.983" level="INFO">${RESULT} = [{'time': 0.018180611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018190417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:52.980" endtime="20201112 10:13:52.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:52.992" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.419999999992098e-07, 4.09800000000099e-06, 4.583000000002446e-06, 9.333999999999731e-06, 9.806000000001092e-06, 3.55600000000178e-06, 3.195000000000975e-06, 6.944000000001782e-06, 7...</msg>
<status status="PASS" starttime="20201112 10:13:52.984" endtime="20201112 10:13:52.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.996" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:52.995" endtime="20201112 10:13:52.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.999" level="INFO">VALUE: [5.419999999992098e-07, 4.09800000000099e-06, 4.583000000002446e-06, 9.333999999999731e-06, 9.806000000001092e-06, 3.55600000000178e-06, 3.195000000000975e-06, 6.944000000001782e-06, 7.486000000000992e-06, 5.420000000026792e-07, 9.777999999998482e-06, 3.695000000001475e-06, 7.457999999998383e-06, 8.153000000000327e-06, 3.124999999999656e-06, 5.5139999999981315e-06, 4.637999999997783e-06, 7.250000000000312e-06, 3.6529999999992957e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 3.374999999999906e-06, 6.790999999999048e-06, 5.409999999997361e-07, 5.764000000001851e-06, 3.431000000001655e-06, 6.665999999998923e-06]</msg>
<status status="PASS" starttime="20201112 10:13:52.997" endtime="20201112 10:13:52.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.993" endtime="20201112 10:13:53.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.002" endtime="20201112 10:13:53.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.006" endtime="20201112 10:13:53.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.004" endtime="20201112 10:13:53.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.001" endtime="20201112 10:13:53.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.634" endtime="20201112 10:13:53.027"></status>
</kw>
<msg timestamp="20201112 10:13:53.027" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.035" endtime="20201112 10:13:53.047"></status>
</kw>
<msg timestamp="20201112 10:13:53.047" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.034" endtime="20201112 10:13:53.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.050" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.049" endtime="20201112 10:13:53.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.051" endtime="20201112 10:13:53.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.031" endtime="20201112 10:13:53.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.029" endtime="20201112 10:13:53.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.061" endtime="20201112 10:13:53.330"></status>
</kw>
<msg timestamp="20201112 10:13:53.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019049194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019053528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.059" endtime="20201112 10:13:53.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019049194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019053528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.334" endtime="20201112 10:13:53.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.340" endtime="20201112 10:13:53.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.056" endtime="20201112 10:13:53.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.054" endtime="20201112 10:13:53.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.347" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:53.346" endtime="20201112 10:13:53.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.351" level="INFO">VALUE: [{'time': 0.019049194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019053528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.019054069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019059125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.019066556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.019072333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.777000000001947e-06, 'source_diff': 5.777000000001947e-06}, {'time': 0.019081667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.019088847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.019092569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.019095042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.019103417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.019106556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.019107097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019114778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.019122278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.019130417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019130958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019135542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.019140597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.019145236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019152181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.019152722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019158667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.019167347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.019167889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019171056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.019178708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.019182819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.019187875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.019192264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.019195236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.019203625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.019209708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.019215569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019223903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.3340000000022e-06, 'source_diff': 8.3340000000022e-06}, {'time': 0.019224444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019228, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.019236861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.019243181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.0192475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.019248042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019254528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019263403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019273194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.019273736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019277875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.019284875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019287861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.019291458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.019292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019295319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3189999999981568e-06, 'source_diff': 3.3189999999981568e-06}, {'time': 0.019300917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.59800000000249e-06, 'source_diff': 5.59800000000249e-06}, {'time': 0.019309778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019314653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.019315194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019323583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.019330861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.278000000002921e-06, 'source_diff': 7.278000000002921e-06}, {'time': 0.019333819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.019334361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019340139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.019346917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.778000000002421e-06, 'source_diff': 6.778000000002421e-06}, {'time': 0.019347458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:53.348" endtime="20201112 10:13:53.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.343" endtime="20201112 10:13:53.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:53.370" level="INFO">${debug-compressed} = {'source_diff': [0, 4.33400000000167e-06, 5.409999999997361e-07, 5.055999999999811e-06, 7.430999999998716e-06, 5.777000000001947e-06, 9.333999999999731e-06, 7.179999999998993e-06, 3.722000000001141e-0...</msg>
<status status="PASS" starttime="20201112 10:13:53.353" endtime="20201112 10:13:53.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.374" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:53.373" endtime="20201112 10:13:53.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.378" level="INFO">VALUE: {'source_diff': [0, 4.33400000000167e-06, 5.409999999997361e-07, 5.055999999999811e-06, 7.430999999998716e-06, 5.777000000001947e-06, 9.333999999999731e-06, 7.179999999998993e-06, 3.722000000001141e-06, 2.4729999999993646e-06, 8.375000000001437e-06, 3.1389999999992257e-06, 5.409999999997361e-07, 7.680999999998966e-06, 7.500000000000562e-06, 8.139000000000757e-06, 5.409999999997361e-07, 4.5839999999984504e-06, 5.055000000000337e-06, 4.639000000000726e-06, 6.945000000001256e-06, 5.409999999997361e-07, 5.945000000000256e-06, 8.680000000000493e-06, 5.419999999992098e-07, 3.1669999999983656e-06, 7.652000000000353e-06, 4.111000000001086e-06, 5.055999999999811e-06, 4.389000000000476e-06, 2.972000000000391e-06, 8.388999999997537e-06, 6.083000000000477e-06, 5.860999999999367e-06, 8.3340000000022e-06, 5.409999999997361e-07, 3.5559999999983105e-06, 8.861000000002367e-06, 6.320000000000631e-06, 4.318999999999157e-06, 5.419999999992098e-07, 6.485999999999992e-06, 8.874999999998467e-06, 9.791000000002048e-06, 5.419999999992098e-07, 4.139000000000226e-06, 7.000000000000062e-06, 2.985999999999961e-06, 3.597000000001016e-06, 5.419999999992098e-07, 3.3189999999981568e-06, 5.59800000000249e-06, 8.860999999998898e-06, 4.875000000001406e-06, 5.409999999997361e-07, 8.388999999997537e-06, 7.278000000002921e-06, 2.9579999999973516e-06, 5.420000000026792e-07, 5.7779999999979514e-06, 6.778000000002421e-06, 5.409999999997361e-07], 'sourcediff': [0, 4.33400000000167e-06, 5.409999999997361e-07, 5.055999999999811e-06, 7.430999999998716e-06, 5.777000000001947e-06, 9.333999999999731e-06, 7.179999999998993e-06, 3.722000000001141e-06, 2.4729999999993646e-06, 8.375000000001437e-06, 3.1389999999992257e-06, 5.409999999997361e-07, 7.680999999998966e-06, 7.500000000000562e-06, 8.139000000000757e-06, 5.409999999997361e-07, 4.5839999999984504e-06, 5.055000000000337e-06, 4.639000000000726e-06, 6.945000000001256e-06, 5.409999999997361e-07, 5.945000000000256e-06, 8.680000000000493e-06, 5.419999999992098e-07, 3.1669999999983656e-06, 7.652000000000353e-06, 4.111000000001086e-06, 5.055999999999811e-06, 4.389000000000476e-06, 2.972000000000391e-06, 8.388999999997537e-06, 6.083000000000477e-06, 5.860999999999367e-06, 8.3340000000022e-06, 5.409999999997361e-07, 3.5559999999983105e-06, 8.861000000002367e-06, 6.320000000000631e-06, 4.318999999999157e-06, 5.419999999992098e-07, 6.485999999999992e-06, 8.874999999998467e-06, 9.791000000002048e-06, 5.419999999992098e-07, 4.139000000000226e-06, 7.000000000000062e-06, 2.985999999999961e-06, 3.597000000001016e-06, 5.419999999992098e-07, 3.3189999999981568e-06, 5.59800000000249e-06, 8.860999999998898e-06, 4.875000000001406e-06, 5.409999999997361e-07, 8.388999999997537e-06, 7.278000000002921e-06, 2.9579999999973516e-06, 5.420000000026792e-07, 5.7779999999979514e-06, 6.778000000002421e-06, 5.409999999997361e-07], 'time': [0.019049194, 0.019053528, 0.019054069, 0.019059125, 0.019066556, 0.019072333, 0.019081667, 0.019088847, 0.019092569, 0.019095042, 0.019103417, 0.019106556, 0.019107097, 0.019114778, 0.019122278, 0.019130417, 0.019130958, 0.019135542, 0.019140597, 0.019145236, 0.019152181, 0.019152722, 0.019158667, 0.019167347, 0.019167889, 0.019171056, 0.019178708, 0.019182819, 0.019187875, 0.019192264, 0.019195236, 0.019203625, 0.019209708, 0.019215569, 0.019223903, 0.019224444, 0.019228, 0.019236861, 0.019243181, 0.0192475, 0.019248042, 0.019254528, 0.019263403, 0.019273194, 0.019273736, 0.019277875, 0.019284875, 0.019287861, 0.019291458, 0.019292, 0.019295319, 0.019300917, 0.019309778, 0.019314653, 0.019315194, 0.019323583, 0.019330861, 0.019333819, 0.019334361, 0.019340139, 0.019346917, 0.019347458], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:53.375" endtime="20201112 10:13:53.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.371" endtime="20201112 10:13:53.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:53.383" level="INFO">${RESULT} = [{'time': 0.019053528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.019059125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:53.379" endtime="20201112 10:13:53.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:53.392" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.33400000000167e-06, 5.055999999999811e-06, 5.777000000001947e-06, 7.179999999998993e-06, 2.4729999999993646e-06, 3.1389999999992257e-06, 7.680999999998966e-06, 8.139000000000757e-06...</msg>
<status status="PASS" starttime="20201112 10:13:53.384" endtime="20201112 10:13:53.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.397" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:53.395" endtime="20201112 10:13:53.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.399" level="INFO">VALUE: [4.33400000000167e-06, 5.055999999999811e-06, 5.777000000001947e-06, 7.179999999998993e-06, 2.4729999999993646e-06, 3.1389999999992257e-06, 7.680999999998966e-06, 8.139000000000757e-06, 4.5839999999984504e-06, 4.639000000000726e-06, 5.409999999997361e-07, 8.680000000000493e-06, 3.1669999999983656e-06, 4.111000000001086e-06, 4.389000000000476e-06, 8.388999999997537e-06, 5.860999999999367e-06, 5.409999999997361e-07, 8.861000000002367e-06, 4.318999999999157e-06, 6.485999999999992e-06, 9.791000000002048e-06, 4.139000000000226e-06, 2.985999999999961e-06, 5.419999999992098e-07, 5.59800000000249e-06, 4.875000000001406e-06, 8.388999999997537e-06, 2.9579999999973516e-06, 5.7779999999979514e-06, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 10:13:53.398" endtime="20201112 10:13:53.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.393" endtime="20201112 10:13:53.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.402" endtime="20201112 10:13:53.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.406" endtime="20201112 10:13:53.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.404" endtime="20201112 10:13:53.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.401" endtime="20201112 10:13:53.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.028" endtime="20201112 10:13:53.427"></status>
</kw>
<msg timestamp="20201112 10:13:53.427" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.435" endtime="20201112 10:13:53.446"></status>
</kw>
<msg timestamp="20201112 10:13:53.447" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.434" endtime="20201112 10:13:53.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.449" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.448" endtime="20201112 10:13:53.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.450" endtime="20201112 10:13:53.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.431" endtime="20201112 10:13:53.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.429" endtime="20201112 10:13:53.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.461" endtime="20201112 10:13:53.728"></status>
</kw>
<msg timestamp="20201112 10:13:53.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018085083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018088472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.459" endtime="20201112 10:13:53.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018085083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018088472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.731" endtime="20201112 10:13:53.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.737" endtime="20201112 10:13:53.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.455" endtime="20201112 10:13:53.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.454" endtime="20201112 10:13:53.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.744" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:53.743" endtime="20201112 10:13:53.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.748" level="INFO">VALUE: [{'time': 0.018085083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018088472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3890000000029452e-06, 'source_diff': 3.3890000000029452e-06}, {'time': 0.018093042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.018099819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.018103042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018110069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.018113681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6120000000000596e-06, 'source_diff': 3.6120000000000596e-06}, {'time': 0.018116431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018119903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018125944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.018133222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.018136111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.018141944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018149625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.018157278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018164069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.791000000002517e-06, 'source_diff': 6.791000000002517e-06}, {'time': 0.018169597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.018177806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.018186917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.018191486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018196097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.018204903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018214278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.018223625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018233403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.018238986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018242361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018248375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.0182565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.018257042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018259167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.018259708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018267153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.018272917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.018280903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.018290486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.018294847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018298889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.01830425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.018313597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018320139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.018324708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018333806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.09800000000252e-06, 'source_diff': 9.09800000000252e-06}, {'time': 0.018336528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018341319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.018347347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018350097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018353319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018359778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.018366736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.018369875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018374056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:53.745" endtime="20201112 10:13:53.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.740" endtime="20201112 10:13:53.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:53.764" level="INFO">${debug-compressed} = {'source_diff': [0, 3.3890000000029452e-06, 4.5699999999988805e-06, 6.776999999999478e-06, 3.2230000000001147e-06, 7.026999999999728e-06, 3.6120000000000596e-06, 2.749999999999281e-06, 3.4720000000008...</msg>
<status status="PASS" starttime="20201112 10:13:53.750" endtime="20201112 10:13:53.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.768" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:53.767" endtime="20201112 10:13:53.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.772" level="INFO">VALUE: {'source_diff': [0, 3.3890000000029452e-06, 4.5699999999988805e-06, 6.776999999999478e-06, 3.2230000000001147e-06, 7.026999999999728e-06, 3.6120000000000596e-06, 2.749999999999281e-06, 3.472000000000891e-06, 6.041000000001767e-06, 7.2779999999994516e-06, 2.8889999999989757e-06, 5.833000000000227e-06, 7.680999999998966e-06, 7.652999999999827e-06, 6.791000000002517e-06, 5.527999999997701e-06, 8.209000000002076e-06, 9.110999999999148e-06, 4.568999999999407e-06, 4.611000000001586e-06, 8.806000000000092e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.777999999998482e-06, 5.582999999999977e-06, 3.374999999999906e-06, 6.014000000002101e-06, 8.124999999997717e-06, 5.420000000026792e-07, 2.1249999999986557e-06, 5.409999999997361e-07, 7.445000000001756e-06, 5.7639999999983815e-06, 7.986000000001492e-06, 9.583000000000508e-06, 4.360999999997867e-06, 4.041999999999241e-06, 5.361000000002336e-06, 9.346999999999828e-06, 6.541999999998271e-06, 4.568999999999407e-06, 9.09800000000252e-06, 2.722000000000141e-06, 4.790999999997048e-06, 6.028000000001671e-06, 2.749999999999281e-06, 3.222000000000641e-06, 6.459000000000326e-06, 6.958000000001352e-06, 3.1389999999992257e-06, 4.1809999999989356e-06], 'sourcediff': [0, 3.3890000000029452e-06, 4.5699999999988805e-06, 6.776999999999478e-06, 3.2230000000001147e-06, 7.026999999999728e-06, 3.6120000000000596e-06, 2.749999999999281e-06, 3.472000000000891e-06, 6.041000000001767e-06, 7.2779999999994516e-06, 2.8889999999989757e-06, 5.833000000000227e-06, 7.680999999998966e-06, 7.652999999999827e-06, 6.791000000002517e-06, 5.527999999997701e-06, 8.209000000002076e-06, 9.110999999999148e-06, 4.568999999999407e-06, 4.611000000001586e-06, 8.806000000000092e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.777999999998482e-06, 5.582999999999977e-06, 3.374999999999906e-06, 6.014000000002101e-06, 8.124999999997717e-06, 5.420000000026792e-07, 2.1249999999986557e-06, 5.409999999997361e-07, 7.445000000001756e-06, 5.7639999999983815e-06, 7.986000000001492e-06, 9.583000000000508e-06, 4.360999999997867e-06, 4.041999999999241e-06, 5.361000000002336e-06, 9.346999999999828e-06, 6.541999999998271e-06, 4.568999999999407e-06, 9.09800000000252e-06, 2.722000000000141e-06, 4.790999999997048e-06, 6.028000000001671e-06, 2.749999999999281e-06, 3.222000000000641e-06, 6.459000000000326e-06, 6.958000000001352e-06, 3.1389999999992257e-06, 4.1809999999989356e-06], 'time': [0.018085083, 0.018088472, 0.018093042, 0.018099819, 0.018103042, 0.018110069, 0.018113681, 0.018116431, 0.018119903, 0.018125944, 0.018133222, 0.018136111, 0.018141944, 0.018149625, 0.018157278, 0.018164069, 0.018169597, 0.018177806, 0.018186917, 0.018191486, 0.018196097, 0.018204903, 0.018214278, 0.018223625, 0.018233403, 0.018238986, 0.018242361, 0.018248375, 0.0182565, 0.018257042, 0.018259167, 0.018259708, 0.018267153, 0.018272917, 0.018280903, 0.018290486, 0.018294847, 0.018298889, 0.01830425, 0.018313597, 0.018320139, 0.018324708, 0.018333806, 0.018336528, 0.018341319, 0.018347347, 0.018350097, 0.018353319, 0.018359778, 0.018366736, 0.018369875, 0.018374056], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:53.770" endtime="20201112 10:13:53.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.765" endtime="20201112 10:13:53.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:53.776" level="INFO">${RESULT} = [{'time': 0.018088472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3890000000029452e-06, 'source_diff': 3.3890000000029452e-06}, {'time': 0.018099819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:53.774" endtime="20201112 10:13:53.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:53.785" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.3890000000029452e-06, 6.776999999999478e-06, 7.026999999999728e-06, 2.749999999999281e-06, 6.041000000001767e-06, 2.8889999999989757e-06, 7.680999999998966e-06, 6.791000000002517e-0...</msg>
<status status="PASS" starttime="20201112 10:13:53.777" endtime="20201112 10:13:53.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.789" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:53.788" endtime="20201112 10:13:53.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.792" level="INFO">VALUE: [3.3890000000029452e-06, 6.776999999999478e-06, 7.026999999999728e-06, 2.749999999999281e-06, 6.041000000001767e-06, 2.8889999999989757e-06, 7.680999999998966e-06, 6.791000000002517e-06, 8.209000000002076e-06, 4.568999999999407e-06, 8.806000000000092e-06, 9.346999999999828e-06, 5.582999999999977e-06, 6.014000000002101e-06, 5.420000000026792e-07, 5.409999999997361e-07, 5.7639999999983815e-06, 9.583000000000508e-06, 4.041999999999241e-06, 9.346999999999828e-06, 4.568999999999407e-06, 2.722000000000141e-06, 6.028000000001671e-06, 3.222000000000641e-06, 6.958000000001352e-06, 4.1809999999989356e-06]</msg>
<status status="PASS" starttime="20201112 10:13:53.791" endtime="20201112 10:13:53.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.786" endtime="20201112 10:13:53.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.795" endtime="20201112 10:13:53.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.799" endtime="20201112 10:13:53.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.797" endtime="20201112 10:13:53.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.794" endtime="20201112 10:13:53.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.428" endtime="20201112 10:13:53.820"></status>
</kw>
<msg timestamp="20201112 10:13:53.820" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.829" endtime="20201112 10:13:53.841"></status>
</kw>
<msg timestamp="20201112 10:13:53.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.827" endtime="20201112 10:13:53.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.842" endtime="20201112 10:13:53.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.845" endtime="20201112 10:13:53.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.824" endtime="20201112 10:13:53.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.822" endtime="20201112 10:13:53.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.854" endtime="20201112 10:13:54.127"></status>
</kw>
<msg timestamp="20201112 10:13:54.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018787972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018797861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.853" endtime="20201112 10:13:54.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018787972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018797861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.130" endtime="20201112 10:13:54.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.137" endtime="20201112 10:13:54.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.850" endtime="20201112 10:13:54.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.848" endtime="20201112 10:13:54.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.143" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:54.142" endtime="20201112 10:13:54.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.147" level="INFO">VALUE: [{'time': 0.018787972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018797861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.018803444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018808097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018815833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.018818569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018826417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.018832944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.018833486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018840611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018841153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018847347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.018851972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018852514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018854639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.018855181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018858569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.388000000000002e-06, 'source_diff': 3.388000000000002e-06}, {'time': 0.018863708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018869764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.018876486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.018879639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018887597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.01889575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018899917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018909736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.018918889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.018925861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.018934528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.018935069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01894125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018948514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018957847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018963861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018970389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.018970931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018973861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.018979847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018986153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.018986694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018994347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.018996986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.018999403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.019005944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.019011083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.019016458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.019021972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.019029681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708999999998106e-06, 'source_diff': 7.708999999998106e-06}, {'time': 0.019030222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019035764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.019043431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.019049514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.019055736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.019062458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.019065125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019071375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.019080931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555999999997372e-06, 'source_diff': 9.555999999997372e-06}, {'time': 0.019087403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.019087944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019095625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:54.144" endtime="20201112 10:13:54.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.140" endtime="20201112 10:13:54.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:54.165" level="INFO">${debug-compressed} = {'source_diff': [0, 9.888999999999037e-06, 5.582999999999977e-06, 4.653000000000296e-06, 7.736000000001242e-06, 2.735999999999711e-06, 7.84800000000127e-06, 6.526999999999228e-06, 5.419999999992098e-0...</msg>
<status status="PASS" starttime="20201112 10:13:54.150" endtime="20201112 10:13:54.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.169" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:54.168" endtime="20201112 10:13:54.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.173" level="INFO">VALUE: {'source_diff': [0, 9.888999999999037e-06, 5.582999999999977e-06, 4.653000000000296e-06, 7.736000000001242e-06, 2.735999999999711e-06, 7.84800000000127e-06, 6.526999999999228e-06, 5.419999999992098e-07, 7.125000000000187e-06, 5.419999999992098e-07, 6.194000000001032e-06, 4.625000000001156e-06, 5.419999999992098e-07, 2.1249999999986557e-06, 5.419999999992098e-07, 3.388000000000002e-06, 5.139000000001226e-06, 6.056000000000811e-06, 6.722000000000672e-06, 3.1529999999987957e-06, 7.957999999998883e-06, 8.153000000000327e-06, 4.166999999999366e-06, 9.819000000001188e-06, 9.153000000001327e-06, 6.9719999999974525e-06, 8.667000000000397e-06, 5.409999999997361e-07, 6.181000000000936e-06, 7.263999999999882e-06, 9.333000000000258e-06, 6.0139999999986316e-06, 6.528000000002171e-06, 5.419999999992098e-07, 2.9300000000016813e-06, 5.985999999999492e-06, 6.305999999997591e-06, 5.409999999997361e-07, 7.653000000003296e-06, 2.6389999999987257e-06, 2.417000000001085e-06, 6.540999999998798e-06, 5.139000000001226e-06, 5.374999999998437e-06, 5.514000000001601e-06, 7.708999999998106e-06, 5.409999999997361e-07, 5.542000000000741e-06, 7.666999999999397e-06, 6.083000000000477e-06, 6.222000000000172e-06, 6.722000000000672e-06, 2.6669999999978655e-06, 6.250000000002781e-06, 9.555999999997372e-06, 6.472000000000422e-06, 5.409999999997361e-07, 7.681000000002436e-06], 'sourcediff': [0, 9.888999999999037e-06, 5.582999999999977e-06, 4.653000000000296e-06, 7.736000000001242e-06, 2.735999999999711e-06, 7.84800000000127e-06, 6.526999999999228e-06, 5.419999999992098e-07, 7.125000000000187e-06, 5.419999999992098e-07, 6.194000000001032e-06, 4.625000000001156e-06, 5.419999999992098e-07, 2.1249999999986557e-06, 5.419999999992098e-07, 3.388000000000002e-06, 5.139000000001226e-06, 6.056000000000811e-06, 6.722000000000672e-06, 3.1529999999987957e-06, 7.957999999998883e-06, 8.153000000000327e-06, 4.166999999999366e-06, 9.819000000001188e-06, 9.153000000001327e-06, 6.9719999999974525e-06, 8.667000000000397e-06, 5.409999999997361e-07, 6.181000000000936e-06, 7.263999999999882e-06, 9.333000000000258e-06, 6.0139999999986316e-06, 6.528000000002171e-06, 5.419999999992098e-07, 2.9300000000016813e-06, 5.985999999999492e-06, 6.305999999997591e-06, 5.409999999997361e-07, 7.653000000003296e-06, 2.6389999999987257e-06, 2.417000000001085e-06, 6.540999999998798e-06, 5.139000000001226e-06, 5.374999999998437e-06, 5.514000000001601e-06, 7.708999999998106e-06, 5.409999999997361e-07, 5.542000000000741e-06, 7.666999999999397e-06, 6.083000000000477e-06, 6.222000000000172e-06, 6.722000000000672e-06, 2.6669999999978655e-06, 6.250000000002781e-06, 9.555999999997372e-06, 6.472000000000422e-06, 5.409999999997361e-07, 7.681000000002436e-06], 'time': [0.018787972, 0.018797861, 0.018803444, 0.018808097, 0.018815833, 0.018818569, 0.018826417, 0.018832944, 0.018833486, 0.018840611, 0.018841153, 0.018847347, 0.018851972, 0.018852514, 0.018854639, 0.018855181, 0.018858569, 0.018863708, 0.018869764, 0.018876486, 0.018879639, 0.018887597, 0.01889575, 0.018899917, 0.018909736, 0.018918889, 0.018925861, 0.018934528, 0.018935069, 0.01894125, 0.018948514, 0.018957847, 0.018963861, 0.018970389, 0.018970931, 0.018973861, 0.018979847, 0.018986153, 0.018986694, 0.018994347, 0.018996986, 0.018999403, 0.019005944, 0.019011083, 0.019016458, 0.019021972, 0.019029681, 0.019030222, 0.019035764, 0.019043431, 0.019049514, 0.019055736, 0.019062458, 0.019065125, 0.019071375, 0.019080931, 0.019087403, 0.019087944, 0.019095625], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:54.170" endtime="20201112 10:13:54.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.166" endtime="20201112 10:13:54.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.177" level="INFO">${RESULT} = [{'time': 0.018797861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.018808097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:54.175" endtime="20201112 10:13:54.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:54.187" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [9.888999999999037e-06, 4.653000000000296e-06, 2.735999999999711e-06, 6.526999999999228e-06, 7.125000000000187e-06, 6.194000000001032e-06, 5.419999999992098e-07, 5.419999999992098e-07,...</msg>
<status status="PASS" starttime="20201112 10:13:54.178" endtime="20201112 10:13:54.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.192" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:54.190" endtime="20201112 10:13:54.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.194" level="INFO">VALUE: [9.888999999999037e-06, 4.653000000000296e-06, 2.735999999999711e-06, 6.526999999999228e-06, 7.125000000000187e-06, 6.194000000001032e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.139000000001226e-06, 6.722000000000672e-06, 7.957999999998883e-06, 4.166999999999366e-06, 9.153000000001327e-06, 8.667000000000397e-06, 6.181000000000936e-06, 9.333000000000258e-06, 6.528000000002171e-06, 2.9300000000016813e-06, 6.305999999997591e-06, 7.653000000003296e-06, 2.417000000001085e-06, 5.139000000001226e-06, 5.514000000001601e-06, 5.409999999997361e-07, 7.666999999999397e-06, 6.222000000000172e-06, 2.6669999999978655e-06, 9.555999999997372e-06, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 10:13:54.193" endtime="20201112 10:13:54.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.188" endtime="20201112 10:13:54.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.198" endtime="20201112 10:13:54.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.201" endtime="20201112 10:13:54.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.199" endtime="20201112 10:13:54.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.196" endtime="20201112 10:13:54.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.821" endtime="20201112 10:13:54.222"></status>
</kw>
<msg timestamp="20201112 10:13:54.222" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.230" endtime="20201112 10:13:54.241"></status>
</kw>
<msg timestamp="20201112 10:13:54.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.228" endtime="20201112 10:13:54.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.244" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.243" endtime="20201112 10:13:54.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.245" endtime="20201112 10:13:54.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.226" endtime="20201112 10:13:54.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.224" endtime="20201112 10:13:54.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.256" endtime="20201112 10:13:54.529"></status>
</kw>
<msg timestamp="20201112 10:13:54.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017861875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017867222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.253" endtime="20201112 10:13:54.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017861875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017867222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.532" endtime="20201112 10:13:54.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.538" endtime="20201112 10:13:54.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.250" endtime="20201112 10:13:54.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.249" endtime="20201112 10:13:54.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.545" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:54.544" endtime="20201112 10:13:54.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.549" level="INFO">VALUE: [{'time': 0.017861875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017867222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017873153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.017883028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.017888153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.017893444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.017896167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.017896708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017903194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.017912833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.017913375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017920528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.017926514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017934431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.017939236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.017949042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.017952889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017953431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017956056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.017959417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3609999999968665e-06, 'source_diff': 3.3609999999968665e-06}, {'time': 0.017963111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.017967292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.017971917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.017977528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017986847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.017989583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017990125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017995139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.018011875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.018020014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.018020556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018024847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018027611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.018037139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.018046528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.018053278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.018057667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018061292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018064736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4440000000017512e-06, 'source_diff': 3.4440000000017512e-06}, {'time': 0.018065278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018071569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.018080625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.018084, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018092222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.018101569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018110181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611999999998121e-06, 'source_diff': 8.611999999998121e-06}, {'time': 0.018116958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.018124708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.018128792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.018135042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018144625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.018149958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.0181505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018157222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.018157764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018160139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.018169556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:54.546" endtime="20201112 10:13:54.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.541" endtime="20201112 10:13:54.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:54.566" level="INFO">${debug-compressed} = {'source_diff': [0, 5.346999999999297e-06, 5.931000000000686e-06, 9.874999999999468e-06, 5.125000000001656e-06, 5.291000000001017e-06, 2.7229999999996146e-06, 5.409999999997361e-07, 6.485999999999992e...</msg>
<status status="PASS" starttime="20201112 10:13:54.551" endtime="20201112 10:13:54.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.570" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:54.569" endtime="20201112 10:13:54.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.573" level="INFO">VALUE: {'source_diff': [0, 5.346999999999297e-06, 5.931000000000686e-06, 9.874999999999468e-06, 5.125000000001656e-06, 5.291000000001017e-06, 2.7229999999996146e-06, 5.409999999997361e-07, 6.485999999999992e-06, 9.638999999998787e-06, 5.419999999992098e-07, 7.153000000002796e-06, 5.985999999999492e-06, 7.916999999999647e-06, 4.805000000000087e-06, 9.805999999997622e-06, 3.847000000001266e-06, 5.419999999992098e-07, 2.6250000000026252e-06, 3.3609999999968665e-06, 3.6940000000020012e-06, 4.1809999999989356e-06, 4.625000000001156e-06, 5.610999999999117e-06, 9.319000000000688e-06, 2.735999999999711e-06, 5.419999999992098e-07, 5.014000000001101e-06, 9.069000000000438e-06, 7.666999999999397e-06, 8.139000000000757e-06, 5.419999999992098e-07, 4.291000000000017e-06, 2.7639999999988507e-06, 9.528000000001702e-06, 9.388999999998537e-06, 6.749999999999812e-06, 4.389000000000476e-06, 3.625000000000156e-06, 3.4440000000017512e-06, 5.419999999992098e-07, 6.290999999998548e-06, 9.056000000000342e-06, 3.374999999999906e-06, 8.222000000002172e-06, 9.346999999999828e-06, 8.611999999998121e-06, 6.776999999999478e-06, 7.750000000000812e-06, 4.08400000000142e-06, 6.249999999999312e-06, 9.583000000000508e-06, 5.332999999999727e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.419999999992098e-07, 2.3749999999989058e-06, 9.417000000001147e-06], 'sourcediff': [0, 5.346999999999297e-06, 5.931000000000686e-06, 9.874999999999468e-06, 5.125000000001656e-06, 5.291000000001017e-06, 2.7229999999996146e-06, 5.409999999997361e-07, 6.485999999999992e-06, 9.638999999998787e-06, 5.419999999992098e-07, 7.153000000002796e-06, 5.985999999999492e-06, 7.916999999999647e-06, 4.805000000000087e-06, 9.805999999997622e-06, 3.847000000001266e-06, 5.419999999992098e-07, 2.6250000000026252e-06, 3.3609999999968665e-06, 3.6940000000020012e-06, 4.1809999999989356e-06, 4.625000000001156e-06, 5.610999999999117e-06, 9.319000000000688e-06, 2.735999999999711e-06, 5.419999999992098e-07, 5.014000000001101e-06, 9.069000000000438e-06, 7.666999999999397e-06, 8.139000000000757e-06, 5.419999999992098e-07, 4.291000000000017e-06, 2.7639999999988507e-06, 9.528000000001702e-06, 9.388999999998537e-06, 6.749999999999812e-06, 4.389000000000476e-06, 3.625000000000156e-06, 3.4440000000017512e-06, 5.419999999992098e-07, 6.290999999998548e-06, 9.056000000000342e-06, 3.374999999999906e-06, 8.222000000002172e-06, 9.346999999999828e-06, 8.611999999998121e-06, 6.776999999999478e-06, 7.750000000000812e-06, 4.08400000000142e-06, 6.249999999999312e-06, 9.583000000000508e-06, 5.332999999999727e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.419999999992098e-07, 2.3749999999989058e-06, 9.417000000001147e-06], 'time': [0.017861875, 0.017867222, 0.017873153, 0.017883028, 0.017888153, 0.017893444, 0.017896167, 0.017896708, 0.017903194, 0.017912833, 0.017913375, 0.017920528, 0.017926514, 0.017934431, 0.017939236, 0.017949042, 0.017952889, 0.017953431, 0.017956056, 0.017959417, 0.017963111, 0.017967292, 0.017971917, 0.017977528, 0.017986847, 0.017989583, 0.017990125, 0.017995139, 0.018004208, 0.018011875, 0.018020014, 0.018020556, 0.018024847, 0.018027611, 0.018037139, 0.018046528, 0.018053278, 0.018057667, 0.018061292, 0.018064736, 0.018065278, 0.018071569, 0.018080625, 0.018084, 0.018092222, 0.018101569, 0.018110181, 0.018116958, 0.018124708, 0.018128792, 0.018135042, 0.018144625, 0.018149958, 0.0181505, 0.018157222, 0.018157764, 0.018160139, 0.018169556], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:54.571" endtime="20201112 10:13:54.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.567" endtime="20201112 10:13:54.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.578" level="INFO">${RESULT} = [{'time': 0.017867222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017883028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:54.575" endtime="20201112 10:13:54.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:54.588" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.346999999999297e-06, 9.874999999999468e-06, 5.291000000001017e-06, 5.409999999997361e-07, 9.638999999998787e-06, 7.153000000002796e-06, 7.916999999999647e-06, 9.805999999997622e-06,...</msg>
<status status="PASS" starttime="20201112 10:13:54.579" endtime="20201112 10:13:54.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.592" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:54.591" endtime="20201112 10:13:54.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.595" level="INFO">VALUE: [5.346999999999297e-06, 9.874999999999468e-06, 5.291000000001017e-06, 5.409999999997361e-07, 9.638999999998787e-06, 7.153000000002796e-06, 7.916999999999647e-06, 9.805999999997622e-06, 5.419999999992098e-07, 3.3609999999968665e-06, 4.1809999999989356e-06, 5.610999999999117e-06, 2.735999999999711e-06, 5.014000000001101e-06, 7.666999999999397e-06, 5.419999999992098e-07, 2.7639999999988507e-06, 9.388999999998537e-06, 4.389000000000476e-06, 3.4440000000017512e-06, 6.290999999998548e-06, 3.374999999999906e-06, 9.346999999999828e-06, 6.776999999999478e-06, 4.08400000000142e-06, 9.583000000000508e-06, 5.419999999992098e-07, 5.419999999992098e-07, 9.417000000001147e-06]</msg>
<status status="PASS" starttime="20201112 10:13:54.593" endtime="20201112 10:13:54.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.589" endtime="20201112 10:13:54.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.598" endtime="20201112 10:13:54.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.602" endtime="20201112 10:13:54.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.600" endtime="20201112 10:13:54.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.596" endtime="20201112 10:13:54.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.223" endtime="20201112 10:13:54.622"></status>
</kw>
<msg timestamp="20201112 10:13:54.623" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.631" endtime="20201112 10:13:54.643"></status>
</kw>
<msg timestamp="20201112 10:13:54.644" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.629" endtime="20201112 10:13:54.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.646" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.645" endtime="20201112 10:13:54.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.647" endtime="20201112 10:13:54.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.626" endtime="20201112 10:13:54.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.625" endtime="20201112 10:13:54.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.657" endtime="20201112 10:13:54.928"></status>
</kw>
<msg timestamp="20201112 10:13:54.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018656167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.655" endtime="20201112 10:13:54.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018656167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.931" endtime="20201112 10:13:54.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.937" endtime="20201112 10:13:54.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.652" endtime="20201112 10:13:54.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.650" endtime="20201112 10:13:54.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.944" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:54.942" endtime="20201112 10:13:54.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.947" level="INFO">VALUE: [{'time': 0.018653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018656167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018666056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.018670389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018678292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018684833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541000000002267e-06, 'source_diff': 6.541000000002267e-06}, {'time': 0.018690431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018699292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018708736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000000813e-06, 'source_diff': 9.444000000000813e-06}, {'time': 0.018717556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.018720931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018724792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018731028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018734653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018742625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.018747278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018755431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018763569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138000000001283e-06, 'source_diff': 8.138000000001283e-06}, {'time': 0.018766056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4869999999989345e-06, 'source_diff': 2.4869999999989345e-06}, {'time': 0.018773319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.018781, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.018784444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4440000000017512e-06, 'source_diff': 3.4440000000017512e-06}, {'time': 0.018787833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018791333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.018796389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018796931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01880175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.018806083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.018808514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.018816972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.018820111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018829458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018838069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.018847944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018856681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.737000000001716e-06, 'source_diff': 8.737000000001716e-06}, {'time': 0.018866208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.526999999998759e-06, 'source_diff': 9.526999999998759e-06}, {'time': 0.01886675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018869597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8469999999967965e-06, 'source_diff': 2.8469999999967965e-06}, {'time': 0.018872736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.139000000002695e-06, 'source_diff': 3.139000000002695e-06}, {'time': 0.018879542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.018882667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.018885653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018889569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.018895653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018904583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.018909861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018913236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018913778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018919236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018919778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018923903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.018931167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018937458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.018942097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018942639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:54.945" endtime="20201112 10:13:54.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.940" endtime="20201112 10:13:54.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:54.965" level="INFO">${debug-compressed} = {'source_diff': [0, 2.431000000000655e-06, 9.888999999999037e-06, 4.332999999998727e-06, 7.903000000000077e-06, 6.541000000002267e-06, 5.5979999999990204e-06, 8.860999999998898e-06, 9.444000000000813e...</msg>
<status status="PASS" starttime="20201112 10:13:54.950" endtime="20201112 10:13:54.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.969" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:54.968" endtime="20201112 10:13:54.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.972" level="INFO">VALUE: {'source_diff': [0, 2.431000000000655e-06, 9.888999999999037e-06, 4.332999999998727e-06, 7.903000000000077e-06, 6.541000000002267e-06, 5.5979999999990204e-06, 8.860999999998898e-06, 9.444000000000813e-06, 8.819999999999661e-06, 3.374999999999906e-06, 3.861000000000836e-06, 6.235999999999742e-06, 3.625000000000156e-06, 7.971999999998453e-06, 4.653000000000296e-06, 8.153000000000327e-06, 8.138000000001283e-06, 2.4869999999989345e-06, 7.263000000000408e-06, 7.680999999998966e-06, 3.4440000000017512e-06, 3.3889999999994758e-06, 3.500000000000031e-06, 5.055999999999811e-06, 5.419999999992098e-07, 4.818999999999657e-06, 4.333000000002196e-06, 2.4309999999971854e-06, 8.458000000002852e-06, 3.1389999999992257e-06, 9.346999999999828e-06, 8.610999999998648e-06, 9.874999999999468e-06, 8.737000000001716e-06, 9.526999999998759e-06, 5.420000000026792e-07, 2.8469999999967965e-06, 3.139000000002695e-06, 6.805999999998091e-06, 3.124999999999656e-06, 2.985999999999961e-06, 3.915999999999642e-06, 6.0839999999999506e-06, 8.930000000000743e-06, 5.278000000000921e-06, 3.374999999999906e-06, 5.419999999992098e-07, 5.457999999999852e-06, 5.420000000026792e-07, 4.1249999999971865e-06, 7.263999999999882e-06, 6.291000000002017e-06, 4.639000000000726e-06, 5.419999999992098e-07], 'sourcediff': [0, 2.431000000000655e-06, 9.888999999999037e-06, 4.332999999998727e-06, 7.903000000000077e-06, 6.541000000002267e-06, 5.5979999999990204e-06, 8.860999999998898e-06, 9.444000000000813e-06, 8.819999999999661e-06, 3.374999999999906e-06, 3.861000000000836e-06, 6.235999999999742e-06, 3.625000000000156e-06, 7.971999999998453e-06, 4.653000000000296e-06, 8.153000000000327e-06, 8.138000000001283e-06, 2.4869999999989345e-06, 7.263000000000408e-06, 7.680999999998966e-06, 3.4440000000017512e-06, 3.3889999999994758e-06, 3.500000000000031e-06, 5.055999999999811e-06, 5.419999999992098e-07, 4.818999999999657e-06, 4.333000000002196e-06, 2.4309999999971854e-06, 8.458000000002852e-06, 3.1389999999992257e-06, 9.346999999999828e-06, 8.610999999998648e-06, 9.874999999999468e-06, 8.737000000001716e-06, 9.526999999998759e-06, 5.420000000026792e-07, 2.8469999999967965e-06, 3.139000000002695e-06, 6.805999999998091e-06, 3.124999999999656e-06, 2.985999999999961e-06, 3.915999999999642e-06, 6.0839999999999506e-06, 8.930000000000743e-06, 5.278000000000921e-06, 3.374999999999906e-06, 5.419999999992098e-07, 5.457999999999852e-06, 5.420000000026792e-07, 4.1249999999971865e-06, 7.263999999999882e-06, 6.291000000002017e-06, 4.639000000000726e-06, 5.419999999992098e-07], 'time': [0.018653736, 0.018656167, 0.018666056, 0.018670389, 0.018678292, 0.018684833, 0.018690431, 0.018699292, 0.018708736, 0.018717556, 0.018720931, 0.018724792, 0.018731028, 0.018734653, 0.018742625, 0.018747278, 0.018755431, 0.018763569, 0.018766056, 0.018773319, 0.018781, 0.018784444, 0.018787833, 0.018791333, 0.018796389, 0.018796931, 0.01880175, 0.018806083, 0.018808514, 0.018816972, 0.018820111, 0.018829458, 0.018838069, 0.018847944, 0.018856681, 0.018866208, 0.01886675, 0.018869597, 0.018872736, 0.018879542, 0.018882667, 0.018885653, 0.018889569, 0.018895653, 0.018904583, 0.018909861, 0.018913236, 0.018913778, 0.018919236, 0.018919778, 0.018923903, 0.018931167, 0.018937458, 0.018942097, 0.018942639], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:54.970" endtime="20201112 10:13:54.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.966" endtime="20201112 10:13:54.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.977" level="INFO">${RESULT} = [{'time': 0.018656167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018670389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:54.974" endtime="20201112 10:13:54.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:54.985" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.431000000000655e-06, 4.332999999998727e-06, 6.541000000002267e-06, 8.860999999998898e-06, 8.819999999999661e-06, 3.861000000000836e-06, 3.625000000000156e-06, 4.653000000000296e-06,...</msg>
<status status="PASS" starttime="20201112 10:13:54.978" endtime="20201112 10:13:54.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.990" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:54.989" endtime="20201112 10:13:54.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.992" level="INFO">VALUE: [2.431000000000655e-06, 4.332999999998727e-06, 6.541000000002267e-06, 8.860999999998898e-06, 8.819999999999661e-06, 3.861000000000836e-06, 3.625000000000156e-06, 4.653000000000296e-06, 8.138000000001283e-06, 7.263000000000408e-06, 3.4440000000017512e-06, 3.500000000000031e-06, 5.419999999992098e-07, 4.333000000002196e-06, 8.458000000002852e-06, 9.346999999999828e-06, 9.874999999999468e-06, 9.526999999998759e-06, 2.8469999999967965e-06, 6.805999999998091e-06, 2.985999999999961e-06, 6.0839999999999506e-06, 5.278000000000921e-06, 5.419999999992098e-07, 5.420000000026792e-07, 7.263999999999882e-06, 4.639000000000726e-06]</msg>
<status status="PASS" starttime="20201112 10:13:54.991" endtime="20201112 10:13:54.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.986" endtime="20201112 10:13:54.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.996" endtime="20201112 10:13:54.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.999" endtime="20201112 10:13:55.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.998" endtime="20201112 10:13:55.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.994" endtime="20201112 10:13:55.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.623" endtime="20201112 10:13:55.020"></status>
</kw>
<msg timestamp="20201112 10:13:55.021" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.029" endtime="20201112 10:13:55.040"></status>
</kw>
<msg timestamp="20201112 10:13:55.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.027" endtime="20201112 10:13:55.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.043" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.041" endtime="20201112 10:13:55.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.044" endtime="20201112 10:13:55.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.024" endtime="20201112 10:13:55.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.022" endtime="20201112 10:13:55.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.054" endtime="20201112 10:13:55.326"></status>
</kw>
<msg timestamp="20201112 10:13:55.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017921778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.053" endtime="20201112 10:13:55.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017921778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.329" endtime="20201112 10:13:55.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.335" endtime="20201112 10:13:55.337"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.050" endtime="20201112 10:13:55.337"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.048" endtime="20201112 10:13:55.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.342" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:55.341" endtime="20201112 10:13:55.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.346" level="INFO">VALUE: [{'time': 0.017921778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.01793075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.017935819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017941583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.017944764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.017945306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017952431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.017952972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017957083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.017963389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.017969944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.555000000001837e-06, 'source_diff': 6.555000000001837e-06}, {'time': 0.017979819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.017982958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.0179835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017989681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.017992889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.017993431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017999208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.018001639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018006278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018010403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018015736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018021806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.018029778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.018038903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.018041778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8750000000028753e-06, 'source_diff': 2.8750000000028753e-06}, {'time': 0.018050403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.018057431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018065806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.018069278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018073431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018077333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.018080028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.695000000000475e-06, 'source_diff': 2.695000000000475e-06}, {'time': 0.018085556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.018094972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416000000001673e-06, 'source_diff': 9.416000000001673e-06}, {'time': 0.018099361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018103306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.018110958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.018119167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.018119708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018123764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.018128792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018133431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389999999972564e-06, 'source_diff': 4.6389999999972564e-06}, {'time': 0.018133972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018143083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.018151694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.018152236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018159139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.018161569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.018164, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018171486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018180431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944999999999786e-06, 'source_diff': 8.944999999999786e-06}, {'time': 0.018189111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018196319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.018200236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.018206792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.555999999997841e-06, 'source_diff': 6.555999999997841e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:55.343" endtime="20201112 10:13:55.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.338" endtime="20201112 10:13:55.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:55.363" level="INFO">${debug-compressed} = {'source_diff': [0, 3.458000000001321e-06, 5.5139999999981315e-06, 5.068999999999907e-06, 5.764000000001851e-06, 3.1809999999979355e-06, 5.420000000026792e-07, 7.125000000000187e-06, 5.409999999997361...</msg>
<status status="PASS" starttime="20201112 10:13:55.348" endtime="20201112 10:13:55.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.367" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:55.366" endtime="20201112 10:13:55.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.371" level="INFO">VALUE: {'source_diff': [0, 3.458000000001321e-06, 5.5139999999981315e-06, 5.068999999999907e-06, 5.764000000001851e-06, 3.1809999999979355e-06, 5.420000000026792e-07, 7.125000000000187e-06, 5.409999999997361e-07, 4.1109999999976166e-06, 6.306000000001061e-06, 6.555000000001837e-06, 9.874999999999468e-06, 3.1389999999992257e-06, 5.419999999992098e-07, 6.181000000000936e-06, 3.208000000001071e-06, 5.419999999992098e-07, 5.776999999998478e-06, 2.431000000000655e-06, 4.639000000000726e-06, 4.125000000000656e-06, 5.332999999999727e-06, 6.070000000000381e-06, 7.971999999998453e-06, 9.124999999998717e-06, 2.8750000000028753e-06, 8.624999999998217e-06, 7.0279999999992016e-06, 8.375000000001437e-06, 3.472000000000891e-06, 4.152999999999796e-06, 3.902000000000072e-06, 2.695000000000475e-06, 5.527999999997701e-06, 9.416000000001673e-06, 4.389000000000476e-06, 3.9449999999982555e-06, 7.652000000000353e-06, 8.208999999998606e-06, 5.410000000032056e-07, 4.0559999999988106e-06, 5.028000000000671e-06, 4.6389999999972564e-06, 5.410000000032056e-07, 9.110999999999148e-06, 8.610999999998648e-06, 5.419999999992098e-07, 6.903000000002546e-06, 2.4299999999977118e-06, 2.431000000000655e-06, 7.486000000000992e-06, 8.944999999999786e-06, 8.680000000000493e-06, 7.2079999999981326e-06, 3.917000000002585e-06, 6.555999999997841e-06], 'sourcediff': [0, 3.458000000001321e-06, 5.5139999999981315e-06, 5.068999999999907e-06, 5.764000000001851e-06, 3.1809999999979355e-06, 5.420000000026792e-07, 7.125000000000187e-06, 5.409999999997361e-07, 4.1109999999976166e-06, 6.306000000001061e-06, 6.555000000001837e-06, 9.874999999999468e-06, 3.1389999999992257e-06, 5.419999999992098e-07, 6.181000000000936e-06, 3.208000000001071e-06, 5.419999999992098e-07, 5.776999999998478e-06, 2.431000000000655e-06, 4.639000000000726e-06, 4.125000000000656e-06, 5.332999999999727e-06, 6.070000000000381e-06, 7.971999999998453e-06, 9.124999999998717e-06, 2.8750000000028753e-06, 8.624999999998217e-06, 7.0279999999992016e-06, 8.375000000001437e-06, 3.472000000000891e-06, 4.152999999999796e-06, 3.902000000000072e-06, 2.695000000000475e-06, 5.527999999997701e-06, 9.416000000001673e-06, 4.389000000000476e-06, 3.9449999999982555e-06, 7.652000000000353e-06, 8.208999999998606e-06, 5.410000000032056e-07, 4.0559999999988106e-06, 5.028000000000671e-06, 4.6389999999972564e-06, 5.410000000032056e-07, 9.110999999999148e-06, 8.610999999998648e-06, 5.419999999992098e-07, 6.903000000002546e-06, 2.4299999999977118e-06, 2.431000000000655e-06, 7.486000000000992e-06, 8.944999999999786e-06, 8.680000000000493e-06, 7.2079999999981326e-06, 3.917000000002585e-06, 6.555999999997841e-06], 'time': [0.017921778, 0.017925236, 0.01793075, 0.017935819, 0.017941583, 0.017944764, 0.017945306, 0.017952431, 0.017952972, 0.017957083, 0.017963389, 0.017969944, 0.017979819, 0.017982958, 0.0179835, 0.017989681, 0.017992889, 0.017993431, 0.017999208, 0.018001639, 0.018006278, 0.018010403, 0.018015736, 0.018021806, 0.018029778, 0.018038903, 0.018041778, 0.018050403, 0.018057431, 0.018065806, 0.018069278, 0.018073431, 0.018077333, 0.018080028, 0.018085556, 0.018094972, 0.018099361, 0.018103306, 0.018110958, 0.018119167, 0.018119708, 0.018123764, 0.018128792, 0.018133431, 0.018133972, 0.018143083, 0.018151694, 0.018152236, 0.018159139, 0.018161569, 0.018164, 0.018171486, 0.018180431, 0.018189111, 0.018196319, 0.018200236, 0.018206792], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:55.368" endtime="20201112 10:13:55.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.364" endtime="20201112 10:13:55.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.375" level="INFO">${RESULT} = [{'time': 0.017925236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017935819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:55.373" endtime="20201112 10:13:55.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:55.385" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.458000000001321e-06, 5.068999999999907e-06, 3.1809999999979355e-06, 7.125000000000187e-06, 4.1109999999976166e-06, 6.555000000001837e-06, 3.1389999999992257e-06, 6.181000000000936e-...</msg>
<status status="PASS" starttime="20201112 10:13:55.376" endtime="20201112 10:13:55.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.389" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:55.388" endtime="20201112 10:13:55.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.392" level="INFO">VALUE: [3.458000000001321e-06, 5.068999999999907e-06, 3.1809999999979355e-06, 7.125000000000187e-06, 4.1109999999976166e-06, 6.555000000001837e-06, 3.1389999999992257e-06, 6.181000000000936e-06, 5.419999999992098e-07, 2.431000000000655e-06, 4.125000000000656e-06, 6.070000000000381e-06, 9.124999999998717e-06, 8.624999999998217e-06, 8.375000000001437e-06, 4.152999999999796e-06, 2.695000000000475e-06, 9.416000000001673e-06, 3.9449999999982555e-06, 8.208999999998606e-06, 4.0559999999988106e-06, 4.6389999999972564e-06, 9.110999999999148e-06, 5.419999999992098e-07, 2.4299999999977118e-06, 7.486000000000992e-06, 8.680000000000493e-06, 3.917000000002585e-06]</msg>
<status status="PASS" starttime="20201112 10:13:55.390" endtime="20201112 10:13:55.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.386" endtime="20201112 10:13:55.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.395" endtime="20201112 10:13:55.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.399" endtime="20201112 10:13:55.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.397" endtime="20201112 10:13:55.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.393" endtime="20201112 10:13:55.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.021" endtime="20201112 10:13:55.420"></status>
</kw>
<msg timestamp="20201112 10:13:55.420" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.428" endtime="20201112 10:13:55.439"></status>
</kw>
<msg timestamp="20201112 10:13:55.439" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.426" endtime="20201112 10:13:55.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.442" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.440" endtime="20201112 10:13:55.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.443" endtime="20201112 10:13:55.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.424" endtime="20201112 10:13:55.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.422" endtime="20201112 10:13:55.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.452" endtime="20201112 10:13:55.725"></status>
</kw>
<msg timestamp="20201112 10:13:55.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017974625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017983472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.451" endtime="20201112 10:13:55.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017974625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017983472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.728" endtime="20201112 10:13:55.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.735" endtime="20201112 10:13:55.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.448" endtime="20201112 10:13:55.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.446" endtime="20201112 10:13:55.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.742" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:55.741" endtime="20201112 10:13:55.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.747" level="INFO">VALUE: [{'time': 0.017974625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017983472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.017984014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017990681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.017994556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8749999999969365e-06, 'source_diff': 3.8749999999969365e-06}, {'time': 0.017998139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017998681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018003264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.018008153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8889999999975065e-06, 'source_diff': 4.8889999999975065e-06}, {'time': 0.018017083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.018026167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.018026708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018029639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018034361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018040917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.018046722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.018051556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.018054222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.018057597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018058139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01806225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.018070236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.018078694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018087125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.430999999999716e-06, 'source_diff': 8.430999999999716e-06}, {'time': 0.018087667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018090986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3189999999981568e-06, 'source_diff': 3.3189999999981568e-06}, {'time': 0.018095625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018096167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018099347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.018104139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.018111153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018111694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018116444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.018125375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.018128583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.018129125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018138528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.018147417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.018152514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018153056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018157806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.018166194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388000000001533e-06, 'source_diff': 8.388000000001533e-06}, {'time': 0.018168694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.0181735, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.018178792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018181208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4160000000016113e-06, 'source_diff': 2.4160000000016113e-06}, {'time': 0.01818175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018189597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018197264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.018200639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018201181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018208792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.018217417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.018224597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.018227333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018227875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018234542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.018241958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.018251528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.018252069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018257306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.237000000001685e-06, 'source_diff': 5.237000000001685e-06}, {'time': 0.018262417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.01826825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:55.743" endtime="20201112 10:13:55.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.738" endtime="20201112 10:13:55.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:55.765" level="INFO">${debug-compressed} = {'source_diff': [0, 8.846999999999328e-06, 5.419999999992098e-07, 6.667000000001866e-06, 3.8749999999969365e-06, 3.583000000001446e-06, 5.419999999992098e-07, 4.583000000002446e-06, 4.8889999999975065...</msg>
<status status="PASS" starttime="20201112 10:13:55.749" endtime="20201112 10:13:55.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.769" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:55.768" endtime="20201112 10:13:55.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.773" level="INFO">VALUE: {'source_diff': [0, 8.846999999999328e-06, 5.419999999992098e-07, 6.667000000001866e-06, 3.8749999999969365e-06, 3.583000000001446e-06, 5.419999999992098e-07, 4.583000000002446e-06, 4.8889999999975065e-06, 8.930000000000743e-06, 9.083999999999481e-06, 5.409999999997361e-07, 2.931000000001155e-06, 4.721999999998672e-06, 6.556000000001311e-06, 5.805000000001087e-06, 4.8339999999987004e-06, 2.6660000000018613e-06, 3.374999999999906e-06, 5.419999999992098e-07, 4.1109999999976166e-06, 7.986000000001492e-06, 8.457999999999383e-06, 8.430999999999716e-06, 5.420000000026792e-07, 3.3189999999981568e-06, 4.639000000000726e-06, 5.419999999992098e-07, 3.179999999998462e-06, 4.79200000000346e-06, 7.013999999999632e-06, 5.409999999997361e-07, 4.7499999999978115e-06, 8.931000000000217e-06, 3.208000000001071e-06, 5.419999999992098e-07, 9.403000000001577e-06, 8.888999999998037e-06, 5.097000000002516e-06, 5.419999999992098e-07, 4.7499999999978115e-06, 8.388000000001533e-06, 2.4999999999990308e-06, 4.805999999999561e-06, 5.292000000000491e-06, 2.4160000000016113e-06, 5.419999999992098e-07, 7.846999999998328e-06, 7.667000000002866e-06, 3.374999999999906e-06, 5.419999999992098e-07, 7.611000000001117e-06, 8.624999999998217e-06, 7.179999999998993e-06, 2.735999999999711e-06, 5.420000000026792e-07, 6.6669999999983964e-06, 7.415999999999673e-06, 9.570000000000412e-06, 5.409999999997361e-07, 5.237000000001685e-06, 5.110999999998617e-06, 5.833000000000227e-06], 'sourcediff': [0, 8.846999999999328e-06, 5.419999999992098e-07, 6.667000000001866e-06, 3.8749999999969365e-06, 3.583000000001446e-06, 5.419999999992098e-07, 4.583000000002446e-06, 4.8889999999975065e-06, 8.930000000000743e-06, 9.083999999999481e-06, 5.409999999997361e-07, 2.931000000001155e-06, 4.721999999998672e-06, 6.556000000001311e-06, 5.805000000001087e-06, 4.8339999999987004e-06, 2.6660000000018613e-06, 3.374999999999906e-06, 5.419999999992098e-07, 4.1109999999976166e-06, 7.986000000001492e-06, 8.457999999999383e-06, 8.430999999999716e-06, 5.420000000026792e-07, 3.3189999999981568e-06, 4.639000000000726e-06, 5.419999999992098e-07, 3.179999999998462e-06, 4.79200000000346e-06, 7.013999999999632e-06, 5.409999999997361e-07, 4.7499999999978115e-06, 8.931000000000217e-06, 3.208000000001071e-06, 5.419999999992098e-07, 9.403000000001577e-06, 8.888999999998037e-06, 5.097000000002516e-06, 5.419999999992098e-07, 4.7499999999978115e-06, 8.388000000001533e-06, 2.4999999999990308e-06, 4.805999999999561e-06, 5.292000000000491e-06, 2.4160000000016113e-06, 5.419999999992098e-07, 7.846999999998328e-06, 7.667000000002866e-06, 3.374999999999906e-06, 5.419999999992098e-07, 7.611000000001117e-06, 8.624999999998217e-06, 7.179999999998993e-06, 2.735999999999711e-06, 5.420000000026792e-07, 6.6669999999983964e-06, 7.415999999999673e-06, 9.570000000000412e-06, 5.409999999997361e-07, 5.237000000001685e-06, 5.110999999998617e-06, 5.833000000000227e-06], 'time': [0.017974625, 0.017983472, 0.017984014, 0.017990681, 0.017994556, 0.017998139, 0.017998681, 0.018003264, 0.018008153, 0.018017083, 0.018026167, 0.018026708, 0.018029639, 0.018034361, 0.018040917, 0.018046722, 0.018051556, 0.018054222, 0.018057597, 0.018058139, 0.01806225, 0.018070236, 0.018078694, 0.018087125, 0.018087667, 0.018090986, 0.018095625, 0.018096167, 0.018099347, 0.018104139, 0.018111153, 0.018111694, 0.018116444, 0.018125375, 0.018128583, 0.018129125, 0.018138528, 0.018147417, 0.018152514, 0.018153056, 0.018157806, 0.018166194, 0.018168694, 0.0181735, 0.018178792, 0.018181208, 0.01818175, 0.018189597, 0.018197264, 0.018200639, 0.018201181, 0.018208792, 0.018217417, 0.018224597, 0.018227333, 0.018227875, 0.018234542, 0.018241958, 0.018251528, 0.018252069, 0.018257306, 0.018262417, 0.01826825], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:55.770" endtime="20201112 10:13:55.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.766" endtime="20201112 10:13:55.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.777" level="INFO">${RESULT} = [{'time': 0.017983472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.017990681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:55.774" endtime="20201112 10:13:55.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:55.788" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [8.846999999999328e-06, 6.667000000001866e-06, 3.583000000001446e-06, 4.583000000002446e-06, 8.930000000000743e-06, 5.409999999997361e-07, 4.721999999998672e-06, 5.805000000001087e-06,...</msg>
<status status="PASS" starttime="20201112 10:13:55.778" endtime="20201112 10:13:55.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.793" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:55.791" endtime="20201112 10:13:55.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.796" level="INFO">VALUE: [8.846999999999328e-06, 6.667000000001866e-06, 3.583000000001446e-06, 4.583000000002446e-06, 8.930000000000743e-06, 5.409999999997361e-07, 4.721999999998672e-06, 5.805000000001087e-06, 2.6660000000018613e-06, 5.419999999992098e-07, 7.986000000001492e-06, 8.430999999999716e-06, 3.3189999999981568e-06, 5.419999999992098e-07, 4.79200000000346e-06, 5.409999999997361e-07, 8.931000000000217e-06, 5.419999999992098e-07, 8.888999999998037e-06, 5.419999999992098e-07, 8.388000000001533e-06, 4.805999999999561e-06, 2.4160000000016113e-06, 7.846999999998328e-06, 3.374999999999906e-06, 7.611000000001117e-06, 7.179999999998993e-06, 5.420000000026792e-07, 7.415999999999673e-06, 5.409999999997361e-07, 5.110999999998617e-06]</msg>
<status status="PASS" starttime="20201112 10:13:55.794" endtime="20201112 10:13:55.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.789" endtime="20201112 10:13:55.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.799" endtime="20201112 10:13:55.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.802" endtime="20201112 10:13:55.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.801" endtime="20201112 10:13:55.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.797" endtime="20201112 10:13:55.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.420" endtime="20201112 10:13:55.823"></status>
</kw>
<msg timestamp="20201112 10:13:55.824" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.832" endtime="20201112 10:13:55.843"></status>
</kw>
<msg timestamp="20201112 10:13:55.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.830" endtime="20201112 10:13:55.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.846" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.845" endtime="20201112 10:13:55.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.847" endtime="20201112 10:13:55.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.827" endtime="20201112 10:13:55.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.825" endtime="20201112 10:13:55.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.857" endtime="20201112 10:13:56.128"></status>
</kw>
<msg timestamp="20201112 10:13:56.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017883861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017891278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.855" endtime="20201112 10:13:56.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017883861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017891278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.131" endtime="20201112 10:13:56.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.137" endtime="20201112 10:13:56.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.852" endtime="20201112 10:13:56.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.851" endtime="20201112 10:13:56.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.145" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:56.143" endtime="20201112 10:13:56.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.149" level="INFO">VALUE: [{'time': 0.017883861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017891278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.017898819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.017906764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.944999999998786e-06, 'source_diff': 7.944999999998786e-06}, {'time': 0.017914542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.017919139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017929028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017935028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017939597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.01794775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.017953806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.017954347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017960361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017964764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017974403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.017974944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017983819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.017992444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.017997097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018002847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.018006, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.018009208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2079999999976017e-06, 'source_diff': 3.2079999999976017e-06}, {'time': 0.018014556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.018023958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.018027583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018034861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.018039486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018043889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018044431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018050681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018057944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.018062042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018067889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018073875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018079153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018079694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018083569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018086944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018091514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.018099194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.018106681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.018107222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018113167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.018118278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018127375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018133375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018133917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018138681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.018144736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.018149139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018158972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.832999999997288e-06, 'source_diff': 9.832999999997288e-06}, {'time': 0.018168597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.625000000002687e-06, 'source_diff': 9.625000000002687e-06}, {'time': 0.018173514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018181028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513999999996662e-06, 'source_diff': 7.513999999996662e-06}, {'time': 0.018183486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018186944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:56.146" endtime="20201112 10:13:56.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.141" endtime="20201112 10:13:56.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:56.166" level="INFO">${debug-compressed} = {'source_diff': [0, 7.4169999999991465e-06, 7.540999999999798e-06, 7.944999999998786e-06, 7.777999999999952e-06, 4.597000000002016e-06, 9.888999999999037e-06, 5.999999999999062e-06, 4.569000000002876e...</msg>
<status status="PASS" starttime="20201112 10:13:56.152" endtime="20201112 10:13:56.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.170" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:56.169" endtime="20201112 10:13:56.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.173" level="INFO">VALUE: {'source_diff': [0, 7.4169999999991465e-06, 7.540999999999798e-06, 7.944999999998786e-06, 7.777999999999952e-06, 4.597000000002016e-06, 9.888999999999037e-06, 5.999999999999062e-06, 4.569000000002876e-06, 8.152999999996857e-06, 6.056000000000811e-06, 5.409999999997361e-07, 6.014000000002101e-06, 4.403000000000046e-06, 9.638999999998787e-06, 5.409999999997361e-07, 8.875000000001937e-06, 8.624999999998217e-06, 4.653000000000296e-06, 5.749999999998812e-06, 3.153000000002265e-06, 3.2079999999976017e-06, 5.34800000000224e-06, 9.401999999998634e-06, 3.625000000000156e-06, 7.2779999999994516e-06, 4.625000000001156e-06, 4.403000000000046e-06, 5.419999999992098e-07, 6.249999999999312e-06, 7.263000000000408e-06, 4.09800000000099e-06, 5.846999999999797e-06, 5.985999999999492e-06, 5.278000000000921e-06, 5.409999999997361e-07, 3.875000000000406e-06, 3.374999999999906e-06, 4.5699999999988805e-06, 7.679999999999493e-06, 7.4870000000004655e-06, 5.409999999997361e-07, 5.945000000000256e-06, 5.111000000002086e-06, 9.096999999999578e-06, 5.999999999999062e-06, 5.419999999992098e-07, 4.764000000000851e-06, 6.055000000001337e-06, 4.403000000000046e-06, 9.832999999997288e-06, 9.625000000002687e-06, 4.917000000000116e-06, 7.513999999996662e-06, 2.458000000000321e-06, 3.458000000001321e-06], 'sourcediff': [0, 7.4169999999991465e-06, 7.540999999999798e-06, 7.944999999998786e-06, 7.777999999999952e-06, 4.597000000002016e-06, 9.888999999999037e-06, 5.999999999999062e-06, 4.569000000002876e-06, 8.152999999996857e-06, 6.056000000000811e-06, 5.409999999997361e-07, 6.014000000002101e-06, 4.403000000000046e-06, 9.638999999998787e-06, 5.409999999997361e-07, 8.875000000001937e-06, 8.624999999998217e-06, 4.653000000000296e-06, 5.749999999998812e-06, 3.153000000002265e-06, 3.2079999999976017e-06, 5.34800000000224e-06, 9.401999999998634e-06, 3.625000000000156e-06, 7.2779999999994516e-06, 4.625000000001156e-06, 4.403000000000046e-06, 5.419999999992098e-07, 6.249999999999312e-06, 7.263000000000408e-06, 4.09800000000099e-06, 5.846999999999797e-06, 5.985999999999492e-06, 5.278000000000921e-06, 5.409999999997361e-07, 3.875000000000406e-06, 3.374999999999906e-06, 4.5699999999988805e-06, 7.679999999999493e-06, 7.4870000000004655e-06, 5.409999999997361e-07, 5.945000000000256e-06, 5.111000000002086e-06, 9.096999999999578e-06, 5.999999999999062e-06, 5.419999999992098e-07, 4.764000000000851e-06, 6.055000000001337e-06, 4.403000000000046e-06, 9.832999999997288e-06, 9.625000000002687e-06, 4.917000000000116e-06, 7.513999999996662e-06, 2.458000000000321e-06, 3.458000000001321e-06], 'time': [0.017883861, 0.017891278, 0.017898819, 0.017906764, 0.017914542, 0.017919139, 0.017929028, 0.017935028, 0.017939597, 0.01794775, 0.017953806, 0.017954347, 0.017960361, 0.017964764, 0.017974403, 0.017974944, 0.017983819, 0.017992444, 0.017997097, 0.018002847, 0.018006, 0.018009208, 0.018014556, 0.018023958, 0.018027583, 0.018034861, 0.018039486, 0.018043889, 0.018044431, 0.018050681, 0.018057944, 0.018062042, 0.018067889, 0.018073875, 0.018079153, 0.018079694, 0.018083569, 0.018086944, 0.018091514, 0.018099194, 0.018106681, 0.018107222, 0.018113167, 0.018118278, 0.018127375, 0.018133375, 0.018133917, 0.018138681, 0.018144736, 0.018149139, 0.018158972, 0.018168597, 0.018173514, 0.018181028, 0.018183486, 0.018186944], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:56.171" endtime="20201112 10:13:56.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.167" endtime="20201112 10:13:56.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.178" level="INFO">${RESULT} = [{'time': 0.017891278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.017906764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:56.175" endtime="20201112 10:13:56.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:56.187" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [7.4169999999991465e-06, 7.944999999998786e-06, 4.597000000002016e-06, 5.999999999999062e-06, 8.152999999996857e-06, 5.409999999997361e-07, 4.403000000000046e-06, 5.409999999997361e-07...</msg>
<status status="PASS" starttime="20201112 10:13:56.179" endtime="20201112 10:13:56.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.191" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:56.190" endtime="20201112 10:13:56.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.194" level="INFO">VALUE: [7.4169999999991465e-06, 7.944999999998786e-06, 4.597000000002016e-06, 5.999999999999062e-06, 8.152999999996857e-06, 5.409999999997361e-07, 4.403000000000046e-06, 5.409999999997361e-07, 8.624999999998217e-06, 5.749999999998812e-06, 3.2079999999976017e-06, 9.401999999998634e-06, 7.2779999999994516e-06, 4.403000000000046e-06, 6.249999999999312e-06, 4.09800000000099e-06, 5.985999999999492e-06, 5.409999999997361e-07, 3.374999999999906e-06, 7.679999999999493e-06, 5.409999999997361e-07, 5.111000000002086e-06, 5.999999999999062e-06, 4.764000000000851e-06, 4.403000000000046e-06, 9.625000000002687e-06, 7.513999999996662e-06, 3.458000000001321e-06]</msg>
<status status="PASS" starttime="20201112 10:13:56.193" endtime="20201112 10:13:56.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.188" endtime="20201112 10:13:56.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.197" endtime="20201112 10:13:56.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.201" endtime="20201112 10:13:56.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.199" endtime="20201112 10:13:56.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.196" endtime="20201112 10:13:56.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.824" endtime="20201112 10:13:56.222"></status>
</kw>
<msg timestamp="20201112 10:13:56.222" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.232" endtime="20201112 10:13:56.241"></status>
</kw>
<msg timestamp="20201112 10:13:56.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.230" endtime="20201112 10:13:56.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.245" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.243" endtime="20201112 10:13:56.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.246" endtime="20201112 10:13:56.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.227" endtime="20201112 10:13:56.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.224" endtime="20201112 10:13:56.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.255" endtime="20201112 10:13:56.528"></status>
</kw>
<msg timestamp="20201112 10:13:56.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019438764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.254" endtime="20201112 10:13:56.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019438764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.531" endtime="20201112 10:13:56.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.538" endtime="20201112 10:13:56.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.251" endtime="20201112 10:13:56.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.249" endtime="20201112 10:13:56.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.544" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:56.543" endtime="20201112 10:13:56.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.549" level="INFO">VALUE: [{'time': 0.019438764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2079999999976017e-06, 'source_diff': 3.2079999999976017e-06}, {'time': 0.019448264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.019448806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019451736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.019458028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.019467431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.019467972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019472486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019475653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.019479083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4300000000021813e-06, 'source_diff': 3.4300000000021813e-06}, {'time': 0.019484444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019491153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.019500958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.0195015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019507458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9579999999968825e-06, 'source_diff': 5.9579999999968825e-06}, {'time': 0.019510583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1250000000031253e-06, 'source_diff': 3.1250000000031253e-06}, {'time': 0.019518014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.019526153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019526694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019532208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019541486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.019542028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019549181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.019556111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.019560681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.019561222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019566778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.019571639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.019578347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.019578889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019584194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.019586875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019593569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.019597194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6249999999966864e-06, 'source_diff': 3.6249999999966864e-06}, {'time': 0.019600889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.019606639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.019607181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019610333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.019617528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.194999999998036e-06, 'source_diff': 7.194999999998036e-06}, {'time': 0.019623292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019627639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.019637028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.019645403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.019645944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01965125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.019660431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.019666958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.019674944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.019684292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.019689389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.019698556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.019702014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.019709681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.019717889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.019718431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019721278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8469999999967965e-06, 'source_diff': 2.8469999999967965e-06}, {'time': 0.019729042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.019738181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.019743486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:56.546" endtime="20201112 10:13:56.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.541" endtime="20201112 10:13:56.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:56.567" level="INFO">${debug-compressed} = {'source_diff': [0, 3.2079999999976017e-06, 6.292000000001491e-06, 5.419999999992098e-07, 2.9300000000016813e-06, 6.291999999998021e-06, 9.403000000001577e-06, 5.409999999997361e-07, 4.514000000000601...</msg>
<status status="PASS" starttime="20201112 10:13:56.551" endtime="20201112 10:13:56.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.571" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:56.570" endtime="20201112 10:13:56.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.574" level="INFO">VALUE: {'source_diff': [0, 3.2079999999976017e-06, 6.292000000001491e-06, 5.419999999992098e-07, 2.9300000000016813e-06, 6.291999999998021e-06, 9.403000000001577e-06, 5.409999999997361e-07, 4.514000000000601e-06, 3.1669999999983656e-06, 3.4300000000021813e-06, 5.360999999998867e-06, 6.709000000000576e-06, 9.804999999998149e-06, 5.420000000026792e-07, 5.9579999999968825e-06, 3.1250000000031253e-06, 7.430999999998716e-06, 8.139000000000757e-06, 5.409999999997361e-07, 5.5139999999981315e-06, 9.278000000001452e-06, 5.419999999992098e-07, 7.1529999999993266e-06, 6.930000000002212e-06, 4.5699999999988805e-06, 5.409999999997361e-07, 5.556000000000311e-06, 4.860999999998367e-06, 6.708000000001102e-06, 5.419999999992098e-07, 5.305000000000587e-06, 2.681000000000905e-06, 6.694000000001532e-06, 3.6249999999966864e-06, 3.695000000001475e-06, 5.749999999998812e-06, 5.420000000026792e-07, 3.151999999999322e-06, 7.194999999998036e-06, 5.764000000001851e-06, 4.346999999998297e-06, 9.389000000002007e-06, 8.374999999997967e-06, 5.409999999997361e-07, 5.306000000000061e-06, 9.181000000000467e-06, 6.526999999999228e-06, 7.986000000001492e-06, 9.347999999999301e-06, 5.097000000002516e-06, 9.166999999997427e-06, 3.458000000001321e-06, 7.666999999999397e-06, 8.207999999999133e-06, 5.420000000026792e-07, 2.8469999999967965e-06, 7.764000000000382e-06, 9.139000000001757e-06, 5.305000000000587e-06], 'sourcediff': [0, 3.2079999999976017e-06, 6.292000000001491e-06, 5.419999999992098e-07, 2.9300000000016813e-06, 6.291999999998021e-06, 9.403000000001577e-06, 5.409999999997361e-07, 4.514000000000601e-06, 3.1669999999983656e-06, 3.4300000000021813e-06, 5.360999999998867e-06, 6.709000000000576e-06, 9.804999999998149e-06, 5.420000000026792e-07, 5.9579999999968825e-06, 3.1250000000031253e-06, 7.430999999998716e-06, 8.139000000000757e-06, 5.409999999997361e-07, 5.5139999999981315e-06, 9.278000000001452e-06, 5.419999999992098e-07, 7.1529999999993266e-06, 6.930000000002212e-06, 4.5699999999988805e-06, 5.409999999997361e-07, 5.556000000000311e-06, 4.860999999998367e-06, 6.708000000001102e-06, 5.419999999992098e-07, 5.305000000000587e-06, 2.681000000000905e-06, 6.694000000001532e-06, 3.6249999999966864e-06, 3.695000000001475e-06, 5.749999999998812e-06, 5.420000000026792e-07, 3.151999999999322e-06, 7.194999999998036e-06, 5.764000000001851e-06, 4.346999999998297e-06, 9.389000000002007e-06, 8.374999999997967e-06, 5.409999999997361e-07, 5.306000000000061e-06, 9.181000000000467e-06, 6.526999999999228e-06, 7.986000000001492e-06, 9.347999999999301e-06, 5.097000000002516e-06, 9.166999999997427e-06, 3.458000000001321e-06, 7.666999999999397e-06, 8.207999999999133e-06, 5.420000000026792e-07, 2.8469999999967965e-06, 7.764000000000382e-06, 9.139000000001757e-06, 5.305000000000587e-06], 'time': [0.019438764, 0.019441972, 0.019448264, 0.019448806, 0.019451736, 0.019458028, 0.019467431, 0.019467972, 0.019472486, 0.019475653, 0.019479083, 0.019484444, 0.019491153, 0.019500958, 0.0195015, 0.019507458, 0.019510583, 0.019518014, 0.019526153, 0.019526694, 0.019532208, 0.019541486, 0.019542028, 0.019549181, 0.019556111, 0.019560681, 0.019561222, 0.019566778, 0.019571639, 0.019578347, 0.019578889, 0.019584194, 0.019586875, 0.019593569, 0.019597194, 0.019600889, 0.019606639, 0.019607181, 0.019610333, 0.019617528, 0.019623292, 0.019627639, 0.019637028, 0.019645403, 0.019645944, 0.01965125, 0.019660431, 0.019666958, 0.019674944, 0.019684292, 0.019689389, 0.019698556, 0.019702014, 0.019709681, 0.019717889, 0.019718431, 0.019721278, 0.019729042, 0.019738181, 0.019743486], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:56.572" endtime="20201112 10:13:56.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.568" endtime="20201112 10:13:56.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.579" level="INFO">${RESULT} = [{'time': 0.019441972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2079999999976017e-06, 'source_diff': 3.2079999999976017e-06}, {'time': 0.019448806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:56.576" endtime="20201112 10:13:56.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:56.588" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.2079999999976017e-06, 5.419999999992098e-07, 6.291999999998021e-06, 5.409999999997361e-07, 3.1669999999983656e-06, 5.360999999998867e-06, 9.804999999998149e-06, 5.9579999999968825e-...</msg>
<status status="PASS" starttime="20201112 10:13:56.580" endtime="20201112 10:13:56.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.593" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:56.592" endtime="20201112 10:13:56.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.596" level="INFO">VALUE: [3.2079999999976017e-06, 5.419999999992098e-07, 6.291999999998021e-06, 5.409999999997361e-07, 3.1669999999983656e-06, 5.360999999998867e-06, 9.804999999998149e-06, 5.9579999999968825e-06, 7.430999999998716e-06, 5.409999999997361e-07, 9.278000000001452e-06, 7.1529999999993266e-06, 4.5699999999988805e-06, 5.556000000000311e-06, 6.708000000001102e-06, 5.305000000000587e-06, 6.694000000001532e-06, 3.695000000001475e-06, 5.420000000026792e-07, 7.194999999998036e-06, 4.346999999998297e-06, 8.374999999997967e-06, 5.306000000000061e-06, 6.526999999999228e-06, 9.347999999999301e-06, 9.166999999997427e-06, 7.666999999999397e-06, 5.420000000026792e-07, 7.764000000000382e-06, 5.305000000000587e-06]</msg>
<status status="PASS" starttime="20201112 10:13:56.594" endtime="20201112 10:13:56.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.589" endtime="20201112 10:13:56.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.599" endtime="20201112 10:13:56.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.602" endtime="20201112 10:13:56.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.601" endtime="20201112 10:13:56.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.597" endtime="20201112 10:13:56.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.223" endtime="20201112 10:13:56.623"></status>
</kw>
<msg timestamp="20201112 10:13:56.623" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.631" endtime="20201112 10:13:56.643"></status>
</kw>
<msg timestamp="20201112 10:13:56.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.630" endtime="20201112 10:13:56.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.646" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.644" endtime="20201112 10:13:56.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.647" endtime="20201112 10:13:56.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.627" endtime="20201112 10:13:56.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.625" endtime="20201112 10:13:56.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.657" endtime="20201112 10:13:56.929"></status>
</kw>
<msg timestamp="20201112 10:13:56.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017872625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017880806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.655" endtime="20201112 10:13:56.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017872625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017880806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.933" endtime="20201112 10:13:56.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.939" endtime="20201112 10:13:56.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.652" endtime="20201112 10:13:56.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.650" endtime="20201112 10:13:56.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.945" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:56.944" endtime="20201112 10:13:56.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.949" level="INFO">VALUE: [{'time': 0.017872625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017880806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.017886125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.017892917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.01789725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.017906889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.017914319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.017922222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.017925861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.01793025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.017938458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.017939, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017942875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017945542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.017954944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402000000002103e-06, 'source_diff': 9.402000000002103e-06}, {'time': 0.017959042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.017968917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.017978806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017986472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.017992236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018002042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.018011, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.018016097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018019778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.681000000001905e-06, 'source_diff': 3.681000000001905e-06}, {'time': 0.018024194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018026542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.018027083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018031833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.018034333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018041528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.018048306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.018048847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018055736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.018064903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.018065444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018071153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018075875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.018082736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.018083278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018091875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.018096889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018104806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.01811175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.018120153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.018125653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.018132917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018141528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.018151292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.018156625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018157167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018161917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.018171722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.018172264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018180181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.018184514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018190347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018199278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:56.947" endtime="20201112 10:13:56.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.942" endtime="20201112 10:13:56.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:56.966" level="INFO">${debug-compressed} = {'source_diff': [0, 8.180999999999466e-06, 5.319000000000157e-06, 6.792000000001991e-06, 4.332999999998727e-06, 9.638999999998787e-06, 7.430000000002712e-06, 7.903000000000077e-06, 3.6389999999997258e...</msg>
<status status="PASS" starttime="20201112 10:13:56.952" endtime="20201112 10:13:56.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.970" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:56.969" endtime="20201112 10:13:56.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.974" level="INFO">VALUE: {'source_diff': [0, 8.180999999999466e-06, 5.319000000000157e-06, 6.792000000001991e-06, 4.332999999998727e-06, 9.638999999998787e-06, 7.430000000002712e-06, 7.903000000000077e-06, 3.6389999999997258e-06, 4.388999999997006e-06, 8.208000000002602e-06, 5.419999999992098e-07, 3.875000000000406e-06, 2.6669999999978655e-06, 9.402000000002103e-06, 4.09800000000099e-06, 9.874999999999468e-06, 9.888999999999037e-06, 7.665999999999923e-06, 5.764000000001851e-06, 9.805999999997622e-06, 8.957999999999883e-06, 5.096999999999047e-06, 3.681000000001905e-06, 4.416000000000142e-06, 2.3479999999992396e-06, 5.409999999997361e-07, 4.750000000001281e-06, 2.4999999999990308e-06, 7.195000000001506e-06, 6.7779999999989515e-06, 5.409999999997361e-07, 6.888999999999507e-06, 9.167000000000897e-06, 5.409999999997361e-07, 5.7089999999995755e-06, 4.722000000002141e-06, 6.860999999996897e-06, 5.420000000026792e-07, 8.596999999999078e-06, 5.014000000001101e-06, 7.916999999999647e-06, 6.943999999998313e-06, 8.403000000000577e-06, 5.499999999998562e-06, 7.263999999999882e-06, 8.611000000002117e-06, 9.763999999998912e-06, 5.332999999999727e-06, 5.419999999992098e-07, 4.750000000001281e-06, 9.805000000001618e-06, 5.419999999992098e-07, 7.916999999999647e-06, 4.332999999998727e-06, 5.833000000000227e-06, 8.931000000000217e-06], 'sourcediff': [0, 8.180999999999466e-06, 5.319000000000157e-06, 6.792000000001991e-06, 4.332999999998727e-06, 9.638999999998787e-06, 7.430000000002712e-06, 7.903000000000077e-06, 3.6389999999997258e-06, 4.388999999997006e-06, 8.208000000002602e-06, 5.419999999992098e-07, 3.875000000000406e-06, 2.6669999999978655e-06, 9.402000000002103e-06, 4.09800000000099e-06, 9.874999999999468e-06, 9.888999999999037e-06, 7.665999999999923e-06, 5.764000000001851e-06, 9.805999999997622e-06, 8.957999999999883e-06, 5.096999999999047e-06, 3.681000000001905e-06, 4.416000000000142e-06, 2.3479999999992396e-06, 5.409999999997361e-07, 4.750000000001281e-06, 2.4999999999990308e-06, 7.195000000001506e-06, 6.7779999999989515e-06, 5.409999999997361e-07, 6.888999999999507e-06, 9.167000000000897e-06, 5.409999999997361e-07, 5.7089999999995755e-06, 4.722000000002141e-06, 6.860999999996897e-06, 5.420000000026792e-07, 8.596999999999078e-06, 5.014000000001101e-06, 7.916999999999647e-06, 6.943999999998313e-06, 8.403000000000577e-06, 5.499999999998562e-06, 7.263999999999882e-06, 8.611000000002117e-06, 9.763999999998912e-06, 5.332999999999727e-06, 5.419999999992098e-07, 4.750000000001281e-06, 9.805000000001618e-06, 5.419999999992098e-07, 7.916999999999647e-06, 4.332999999998727e-06, 5.833000000000227e-06, 8.931000000000217e-06], 'time': [0.017872625, 0.017880806, 0.017886125, 0.017892917, 0.01789725, 0.017906889, 0.017914319, 0.017922222, 0.017925861, 0.01793025, 0.017938458, 0.017939, 0.017942875, 0.017945542, 0.017954944, 0.017959042, 0.017968917, 0.017978806, 0.017986472, 0.017992236, 0.018002042, 0.018011, 0.018016097, 0.018019778, 0.018024194, 0.018026542, 0.018027083, 0.018031833, 0.018034333, 0.018041528, 0.018048306, 0.018048847, 0.018055736, 0.018064903, 0.018065444, 0.018071153, 0.018075875, 0.018082736, 0.018083278, 0.018091875, 0.018096889, 0.018104806, 0.01811175, 0.018120153, 0.018125653, 0.018132917, 0.018141528, 0.018151292, 0.018156625, 0.018157167, 0.018161917, 0.018171722, 0.018172264, 0.018180181, 0.018184514, 0.018190347, 0.018199278], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:56.971" endtime="20201112 10:13:56.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.967" endtime="20201112 10:13:56.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.979" level="INFO">${RESULT} = [{'time': 0.017880806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.017892917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:56.976" endtime="20201112 10:13:56.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:56.988" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [8.180999999999466e-06, 6.792000000001991e-06, 9.638999999998787e-06, 7.903000000000077e-06, 4.388999999997006e-06, 5.419999999992098e-07, 2.6669999999978655e-06, 4.09800000000099e-06,...</msg>
<status status="PASS" starttime="20201112 10:13:56.980" endtime="20201112 10:13:56.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.993" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:56.991" endtime="20201112 10:13:56.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.995" level="INFO">VALUE: [8.180999999999466e-06, 6.792000000001991e-06, 9.638999999998787e-06, 7.903000000000077e-06, 4.388999999997006e-06, 5.419999999992098e-07, 2.6669999999978655e-06, 4.09800000000099e-06, 9.888999999999037e-06, 5.764000000001851e-06, 8.957999999999883e-06, 3.681000000001905e-06, 2.3479999999992396e-06, 4.750000000001281e-06, 7.195000000001506e-06, 5.409999999997361e-07, 9.167000000000897e-06, 5.7089999999995755e-06, 6.860999999996897e-06, 8.596999999999078e-06, 7.916999999999647e-06, 8.403000000000577e-06, 7.263999999999882e-06, 9.763999999998912e-06, 5.419999999992098e-07, 9.805000000001618e-06, 7.916999999999647e-06, 5.833000000000227e-06]</msg>
<status status="PASS" starttime="20201112 10:13:56.994" endtime="20201112 10:13:56.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.989" endtime="20201112 10:13:56.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.999" endtime="20201112 10:13:57.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.002" endtime="20201112 10:13:57.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.001" endtime="20201112 10:13:57.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.997" endtime="20201112 10:13:57.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.624" endtime="20201112 10:13:57.023"></status>
</kw>
<msg timestamp="20201112 10:13:57.023" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.031" endtime="20201112 10:13:57.043"></status>
</kw>
<msg timestamp="20201112 10:13:57.043" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.030" endtime="20201112 10:13:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.046" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.044" endtime="20201112 10:13:57.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.047" endtime="20201112 10:13:57.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.027" endtime="20201112 10:13:57.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.025" endtime="20201112 10:13:57.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.056" endtime="20201112 10:13:57.324"></status>
</kw>
<msg timestamp="20201112 10:13:57.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018101431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018101972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.055" endtime="20201112 10:13:57.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018101431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018101972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.327" endtime="20201112 10:13:57.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.333" endtime="20201112 10:13:57.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.052" endtime="20201112 10:13:57.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.050" endtime="20201112 10:13:57.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.340" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:57.339" endtime="20201112 10:13:57.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.343" level="INFO">VALUE: [{'time': 0.018101431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018101972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018105847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018112861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018113403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018118236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018121458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018125069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.018130111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018136417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.018146222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.018146764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018150083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.018159736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.018166694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.018173486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018179958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.018186903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.0181925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018198875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.018207736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018215472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.018222444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018231764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.018237292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.018240444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1520000000027915e-06, 'source_diff': 3.1520000000027915e-06}, {'time': 0.018250319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018253458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018262431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972999999998926e-06, 'source_diff': 8.972999999998926e-06}, {'time': 0.018268458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.018271597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018274819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018283431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611999999998121e-06, 'source_diff': 8.611999999998121e-06}, {'time': 0.018288319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.888000000001502e-06, 'source_diff': 4.888000000001502e-06}, {'time': 0.018295833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018304931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.097999999999051e-06, 'source_diff': 9.097999999999051e-06}, {'time': 0.018314486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.018323583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018326083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018330958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018337986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018343111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.018349819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.018358278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.018367444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166000000001423e-06, 'source_diff': 9.166000000001423e-06}, {'time': 0.018377014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.018381181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018385306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.01839225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.018399417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.018399958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018402097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1389999999982257e-06, 'source_diff': 2.1389999999982257e-06}, {'time': 0.018408347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018416486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:57.341" endtime="20201112 10:13:57.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.336" endtime="20201112 10:13:57.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:57.361" level="INFO">${debug-compressed} = {'source_diff': [0, 5.409999999997361e-07, 3.875000000000406e-06, 7.013999999999632e-06, 5.419999999992098e-07, 4.832999999999227e-06, 3.222000000000641e-06, 3.611000000000586e-06, 5.042000000000241e-...</msg>
<status status="PASS" starttime="20201112 10:13:57.346" endtime="20201112 10:13:57.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.365" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:57.364" endtime="20201112 10:13:57.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.368" level="INFO">VALUE: {'source_diff': [0, 5.409999999997361e-07, 3.875000000000406e-06, 7.013999999999632e-06, 5.419999999992098e-07, 4.832999999999227e-06, 3.222000000000641e-06, 3.611000000000586e-06, 5.042000000000241e-06, 6.305999999997591e-06, 9.805000000001618e-06, 5.419999999992098e-07, 3.319000000001626e-06, 9.652999999998357e-06, 6.958000000001352e-06, 6.7919999999985214e-06, 6.472000000000422e-06, 6.945000000001256e-06, 5.596999999999547e-06, 6.374999999999437e-06, 8.860999999998898e-06, 7.736000000001242e-06, 6.972000000000922e-06, 9.320000000000161e-06, 5.527999999997701e-06, 3.1520000000027915e-06, 9.874999999999468e-06, 3.1389999999992257e-06, 8.972999999998926e-06, 6.027000000002197e-06, 3.1389999999992257e-06, 3.222000000000641e-06, 8.611999999998121e-06, 4.888000000001502e-06, 7.514000000000132e-06, 9.097999999999051e-06, 9.555000000001368e-06, 9.096999999999578e-06, 2.4999999999990308e-06, 4.875000000001406e-06, 7.0279999999992016e-06, 5.1249999999981866e-06, 6.708000000001102e-06, 8.458999999998856e-06, 9.166000000001423e-06, 9.570000000000412e-06, 4.166999999999366e-06, 4.125000000000656e-06, 6.943999999998313e-06, 7.167000000002366e-06, 5.409999999997361e-07, 2.1389999999982257e-06, 6.249999999999312e-06, 8.139000000000757e-06], 'sourcediff': [0, 5.409999999997361e-07, 3.875000000000406e-06, 7.013999999999632e-06, 5.419999999992098e-07, 4.832999999999227e-06, 3.222000000000641e-06, 3.611000000000586e-06, 5.042000000000241e-06, 6.305999999997591e-06, 9.805000000001618e-06, 5.419999999992098e-07, 3.319000000001626e-06, 9.652999999998357e-06, 6.958000000001352e-06, 6.7919999999985214e-06, 6.472000000000422e-06, 6.945000000001256e-06, 5.596999999999547e-06, 6.374999999999437e-06, 8.860999999998898e-06, 7.736000000001242e-06, 6.972000000000922e-06, 9.320000000000161e-06, 5.527999999997701e-06, 3.1520000000027915e-06, 9.874999999999468e-06, 3.1389999999992257e-06, 8.972999999998926e-06, 6.027000000002197e-06, 3.1389999999992257e-06, 3.222000000000641e-06, 8.611999999998121e-06, 4.888000000001502e-06, 7.514000000000132e-06, 9.097999999999051e-06, 9.555000000001368e-06, 9.096999999999578e-06, 2.4999999999990308e-06, 4.875000000001406e-06, 7.0279999999992016e-06, 5.1249999999981866e-06, 6.708000000001102e-06, 8.458999999998856e-06, 9.166000000001423e-06, 9.570000000000412e-06, 4.166999999999366e-06, 4.125000000000656e-06, 6.943999999998313e-06, 7.167000000002366e-06, 5.409999999997361e-07, 2.1389999999982257e-06, 6.249999999999312e-06, 8.139000000000757e-06], 'time': [0.018101431, 0.018101972, 0.018105847, 0.018112861, 0.018113403, 0.018118236, 0.018121458, 0.018125069, 0.018130111, 0.018136417, 0.018146222, 0.018146764, 0.018150083, 0.018159736, 0.018166694, 0.018173486, 0.018179958, 0.018186903, 0.0181925, 0.018198875, 0.018207736, 0.018215472, 0.018222444, 0.018231764, 0.018237292, 0.018240444, 0.018250319, 0.018253458, 0.018262431, 0.018268458, 0.018271597, 0.018274819, 0.018283431, 0.018288319, 0.018295833, 0.018304931, 0.018314486, 0.018323583, 0.018326083, 0.018330958, 0.018337986, 0.018343111, 0.018349819, 0.018358278, 0.018367444, 0.018377014, 0.018381181, 0.018385306, 0.01839225, 0.018399417, 0.018399958, 0.018402097, 0.018408347, 0.018416486], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:57.366" endtime="20201112 10:13:57.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.362" endtime="20201112 10:13:57.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.373" level="INFO">${RESULT} = [{'time': 0.018101972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018112861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:57.370" endtime="20201112 10:13:57.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:57.382" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.409999999997361e-07, 7.013999999999632e-06, 4.832999999999227e-06, 3.611000000000586e-06, 6.305999999997591e-06, 5.419999999992098e-07, 9.652999999998357e-06, 6.7919999999985214e-06...</msg>
<status status="PASS" starttime="20201112 10:13:57.374" endtime="20201112 10:13:57.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.386" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:57.385" endtime="20201112 10:13:57.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.389" level="INFO">VALUE: [5.409999999997361e-07, 7.013999999999632e-06, 4.832999999999227e-06, 3.611000000000586e-06, 6.305999999997591e-06, 5.419999999992098e-07, 9.652999999998357e-06, 6.7919999999985214e-06, 6.945000000001256e-06, 6.374999999999437e-06, 7.736000000001242e-06, 9.320000000000161e-06, 3.1520000000027915e-06, 3.1389999999992257e-06, 6.027000000002197e-06, 3.222000000000641e-06, 4.888000000001502e-06, 9.097999999999051e-06, 9.096999999999578e-06, 4.875000000001406e-06, 5.1249999999981866e-06, 8.458999999998856e-06, 9.570000000000412e-06, 4.125000000000656e-06, 7.167000000002366e-06, 2.1389999999982257e-06, 8.139000000000757e-06]</msg>
<status status="PASS" starttime="20201112 10:13:57.387" endtime="20201112 10:13:57.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.383" endtime="20201112 10:13:57.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.392" endtime="20201112 10:13:57.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.396" endtime="20201112 10:13:57.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.394" endtime="20201112 10:13:57.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.391" endtime="20201112 10:13:57.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.024" endtime="20201112 10:13:57.417"></status>
</kw>
<msg timestamp="20201112 10:13:57.417" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.425" endtime="20201112 10:13:57.437"></status>
</kw>
<msg timestamp="20201112 10:13:57.438" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.423" endtime="20201112 10:13:57.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.440" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.439" endtime="20201112 10:13:57.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.441" endtime="20201112 10:13:57.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.421" endtime="20201112 10:13:57.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.419" endtime="20201112 10:13:57.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.452" endtime="20201112 10:13:57.724"></status>
</kw>
<msg timestamp="20201112 10:13:57.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017916597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017919458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.450" endtime="20201112 10:13:57.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017916597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017919458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.727" endtime="20201112 10:13:57.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.733" endtime="20201112 10:13:57.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.447" endtime="20201112 10:13:57.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.445" endtime="20201112 10:13:57.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.740" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:57.739" endtime="20201112 10:13:57.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.744" level="INFO">VALUE: [{'time': 0.017916597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017919458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017925736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.017926278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017934375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.017942583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.017948181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.017955625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.017961986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.017969097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.017969639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017978722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.017983028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.017989486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4579999999973825e-06, 'source_diff': 6.4579999999973825e-06}, {'time': 0.017992875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017997194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.017997736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018003208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018006681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.018009153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018009694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018013486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018018319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.018023347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.018028639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018034403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018038806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018048611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.018051042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018057583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.018058125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018066931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018074111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.018074653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018082347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.018087944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.018092569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.018095722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.018105042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319999999996692e-06, 'source_diff': 9.319999999996692e-06}, {'time': 0.018105583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018109681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.018116806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018117347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018123361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.018129431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.018135028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018142722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.018150194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.018155319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.018160361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018165972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018169819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018179222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.018186653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.018195639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018201125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018206, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018213653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:57.741" endtime="20201112 10:13:57.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.737" endtime="20201112 10:13:57.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:57.762" level="INFO">${debug-compressed} = {'source_diff': [0, 2.860999999999836e-06, 6.278000000001921e-06, 5.419999999992098e-07, 8.096999999998578e-06, 8.208000000002602e-06, 5.5979999999990204e-06, 7.443999999998813e-06, 6.360999999999867e...</msg>
<status status="PASS" starttime="20201112 10:13:57.747" endtime="20201112 10:13:57.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.766" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:57.764" endtime="20201112 10:13:57.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.769" level="INFO">VALUE: {'source_diff': [0, 2.860999999999836e-06, 6.278000000001921e-06, 5.419999999992098e-07, 8.096999999998578e-06, 8.208000000002602e-06, 5.5979999999990204e-06, 7.443999999998813e-06, 6.360999999999867e-06, 7.111000000000617e-06, 5.419999999992098e-07, 9.083000000000008e-06, 4.30600000000253e-06, 6.4579999999973825e-06, 3.3889999999994758e-06, 4.319000000002626e-06, 5.419999999992098e-07, 5.471999999999422e-06, 3.4730000000003647e-06, 2.471999999999891e-06, 5.409999999997361e-07, 3.7919999999989906e-06, 4.833000000002696e-06, 5.027999999997201e-06, 5.292000000000491e-06, 5.764000000001851e-06, 4.403000000000046e-06, 9.804999999998149e-06, 2.431000000000655e-06, 6.540999999998798e-06, 5.420000000026792e-07, 8.806000000000092e-06, 7.179999999998993e-06, 5.419999999992098e-07, 7.693999999999063e-06, 5.597000000003016e-06, 4.6249999999976865e-06, 3.153000000002265e-06, 9.319999999996692e-06, 5.410000000032056e-07, 4.09799999999752e-06, 7.125000000000187e-06, 5.409999999997361e-07, 6.014000000002101e-06, 6.070000000000381e-06, 5.596999999999547e-06, 7.693999999999063e-06, 7.472000000001422e-06, 5.1249999999981866e-06, 5.042000000000241e-06, 5.610999999999117e-06, 3.847000000001266e-06, 9.402999999998107e-06, 7.431000000002186e-06, 8.985999999999023e-06, 5.485999999998992e-06, 4.875000000001406e-06, 7.652999999999827e-06], 'sourcediff': [0, 2.860999999999836e-06, 6.278000000001921e-06, 5.419999999992098e-07, 8.096999999998578e-06, 8.208000000002602e-06, 5.5979999999990204e-06, 7.443999999998813e-06, 6.360999999999867e-06, 7.111000000000617e-06, 5.419999999992098e-07, 9.083000000000008e-06, 4.30600000000253e-06, 6.4579999999973825e-06, 3.3889999999994758e-06, 4.319000000002626e-06, 5.419999999992098e-07, 5.471999999999422e-06, 3.4730000000003647e-06, 2.471999999999891e-06, 5.409999999997361e-07, 3.7919999999989906e-06, 4.833000000002696e-06, 5.027999999997201e-06, 5.292000000000491e-06, 5.764000000001851e-06, 4.403000000000046e-06, 9.804999999998149e-06, 2.431000000000655e-06, 6.540999999998798e-06, 5.420000000026792e-07, 8.806000000000092e-06, 7.179999999998993e-06, 5.419999999992098e-07, 7.693999999999063e-06, 5.597000000003016e-06, 4.6249999999976865e-06, 3.153000000002265e-06, 9.319999999996692e-06, 5.410000000032056e-07, 4.09799999999752e-06, 7.125000000000187e-06, 5.409999999997361e-07, 6.014000000002101e-06, 6.070000000000381e-06, 5.596999999999547e-06, 7.693999999999063e-06, 7.472000000001422e-06, 5.1249999999981866e-06, 5.042000000000241e-06, 5.610999999999117e-06, 3.847000000001266e-06, 9.402999999998107e-06, 7.431000000002186e-06, 8.985999999999023e-06, 5.485999999998992e-06, 4.875000000001406e-06, 7.652999999999827e-06], 'time': [0.017916597, 0.017919458, 0.017925736, 0.017926278, 0.017934375, 0.017942583, 0.017948181, 0.017955625, 0.017961986, 0.017969097, 0.017969639, 0.017978722, 0.017983028, 0.017989486, 0.017992875, 0.017997194, 0.017997736, 0.018003208, 0.018006681, 0.018009153, 0.018009694, 0.018013486, 0.018018319, 0.018023347, 0.018028639, 0.018034403, 0.018038806, 0.018048611, 0.018051042, 0.018057583, 0.018058125, 0.018066931, 0.018074111, 0.018074653, 0.018082347, 0.018087944, 0.018092569, 0.018095722, 0.018105042, 0.018105583, 0.018109681, 0.018116806, 0.018117347, 0.018123361, 0.018129431, 0.018135028, 0.018142722, 0.018150194, 0.018155319, 0.018160361, 0.018165972, 0.018169819, 0.018179222, 0.018186653, 0.018195639, 0.018201125, 0.018206, 0.018213653], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:57.767" endtime="20201112 10:13:57.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.762" endtime="20201112 10:13:57.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.774" level="INFO">${RESULT} = [{'time': 0.017919458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017926278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:57.771" endtime="20201112 10:13:57.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:57.783" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.860999999999836e-06, 5.419999999992098e-07, 8.208000000002602e-06, 7.443999999998813e-06, 7.111000000000617e-06, 9.083000000000008e-06, 6.4579999999973825e-06, 4.319000000002626e-06...</msg>
<status status="PASS" starttime="20201112 10:13:57.775" endtime="20201112 10:13:57.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.788" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:57.786" endtime="20201112 10:13:57.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.791" level="INFO">VALUE: [2.860999999999836e-06, 5.419999999992098e-07, 8.208000000002602e-06, 7.443999999998813e-06, 7.111000000000617e-06, 9.083000000000008e-06, 6.4579999999973825e-06, 4.319000000002626e-06, 5.471999999999422e-06, 2.471999999999891e-06, 3.7919999999989906e-06, 5.027999999997201e-06, 5.764000000001851e-06, 9.804999999998149e-06, 6.540999999998798e-06, 8.806000000000092e-06, 5.419999999992098e-07, 5.597000000003016e-06, 3.153000000002265e-06, 5.410000000032056e-07, 7.125000000000187e-06, 6.014000000002101e-06, 5.596999999999547e-06, 7.472000000001422e-06, 5.042000000000241e-06, 3.847000000001266e-06, 7.431000000002186e-06, 5.485999999998992e-06, 7.652999999999827e-06]</msg>
<status status="PASS" starttime="20201112 10:13:57.789" endtime="20201112 10:13:57.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.784" endtime="20201112 10:13:57.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.794" endtime="20201112 10:13:57.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.797" endtime="20201112 10:13:57.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.796" endtime="20201112 10:13:57.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.792" endtime="20201112 10:13:57.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.418" endtime="20201112 10:13:57.819"></status>
</kw>
<msg timestamp="20201112 10:13:57.819" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.828" endtime="20201112 10:13:57.838"></status>
</kw>
<msg timestamp="20201112 10:13:57.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.826" endtime="20201112 10:13:57.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.840" endtime="20201112 10:13:57.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.842" endtime="20201112 10:13:57.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.823" endtime="20201112 10:13:57.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.821" endtime="20201112 10:13:57.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.852" endtime="20201112 10:13:58.118"></status>
</kw>
<msg timestamp="20201112 10:13:58.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019039792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019045556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.850" endtime="20201112 10:13:58.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019039792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019045556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.121" endtime="20201112 10:13:58.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.127" endtime="20201112 10:13:58.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.848" endtime="20201112 10:13:58.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.846" endtime="20201112 10:13:58.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.133" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:58.132" endtime="20201112 10:13:58.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.137" level="INFO">VALUE: [{'time': 0.019039792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019045556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019055208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.019061278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019067111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.01907525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.019078944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.019086444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.019091486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019094653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.019100167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.019108861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.019116042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.019121611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.019126847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.019132222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.019141556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.019147319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.019156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.019157486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019163542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.019170931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.019179861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.019183375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.01918825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.019197375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.019201764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.019204431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019211694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.019218958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.019225028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019232014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.985999999997022e-06, 'source_diff': 6.985999999997022e-06}, {'time': 0.019236806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.019244722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916000000000173e-06, 'source_diff': 7.916000000000173e-06}, {'time': 0.019249333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.019249875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019252097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.221999999999641e-06, 'source_diff': 2.221999999999641e-06}, {'time': 0.019259528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.019267417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.019274847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.019281556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708999999997106e-06, 'source_diff': 6.708999999997106e-06}, {'time': 0.019286917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.019290625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.019293347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.019301611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.019308347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.019312681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.0193175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019320944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.019330514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.019338264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.019341875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:58.134" endtime="20201112 10:13:58.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.130" endtime="20201112 10:13:58.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:58.154" level="INFO">${debug-compressed} = {'source_diff': [0, 5.764000000001851e-06, 9.651999999998884e-06, 6.070000000000381e-06, 5.833000000000227e-06, 8.138999999997287e-06, 3.6940000000020012e-06, 7.500000000000562e-06, 5.042000000000241e...</msg>
<status status="PASS" starttime="20201112 10:13:58.140" endtime="20201112 10:13:58.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.158" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:58.157" endtime="20201112 10:13:58.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.161" level="INFO">VALUE: {'source_diff': [0, 5.764000000001851e-06, 9.651999999998884e-06, 6.070000000000381e-06, 5.833000000000227e-06, 8.138999999997287e-06, 3.6940000000020012e-06, 7.500000000000562e-06, 5.042000000000241e-06, 3.1669999999983656e-06, 5.514000000001601e-06, 8.694000000000063e-06, 7.180999999998466e-06, 5.569000000000407e-06, 5.235999999998742e-06, 5.375000000001906e-06, 9.333999999999731e-06, 5.762999999998908e-06, 9.624999999999218e-06, 5.420000000026792e-07, 6.055999999997341e-06, 7.389000000000007e-06, 8.930000000000743e-06, 3.5139999999996008e-06, 4.875000000001406e-06, 9.124999999998717e-06, 4.389000000000476e-06, 2.667000000001335e-06, 7.263000000000408e-06, 7.263999999999882e-06, 6.070000000000381e-06, 6.985999999997022e-06, 4.791999999999991e-06, 7.916000000000173e-06, 4.611000000001586e-06, 5.419999999992098e-07, 2.221999999999641e-06, 7.431000000002186e-06, 7.888999999997037e-06, 7.430000000002712e-06, 6.708999999997106e-06, 5.361000000002336e-06, 3.7079999999981017e-06, 2.722000000000141e-06, 8.264000000000882e-06, 6.736000000000242e-06, 4.33400000000167e-06, 4.818999999999657e-06, 3.4439999999982818e-06, 9.570000000000412e-06, 7.750000000000812e-06, 3.611000000000586e-06], 'sourcediff': [0, 5.764000000001851e-06, 9.651999999998884e-06, 6.070000000000381e-06, 5.833000000000227e-06, 8.138999999997287e-06, 3.6940000000020012e-06, 7.500000000000562e-06, 5.042000000000241e-06, 3.1669999999983656e-06, 5.514000000001601e-06, 8.694000000000063e-06, 7.180999999998466e-06, 5.569000000000407e-06, 5.235999999998742e-06, 5.375000000001906e-06, 9.333999999999731e-06, 5.762999999998908e-06, 9.624999999999218e-06, 5.420000000026792e-07, 6.055999999997341e-06, 7.389000000000007e-06, 8.930000000000743e-06, 3.5139999999996008e-06, 4.875000000001406e-06, 9.124999999998717e-06, 4.389000000000476e-06, 2.667000000001335e-06, 7.263000000000408e-06, 7.263999999999882e-06, 6.070000000000381e-06, 6.985999999997022e-06, 4.791999999999991e-06, 7.916000000000173e-06, 4.611000000001586e-06, 5.419999999992098e-07, 2.221999999999641e-06, 7.431000000002186e-06, 7.888999999997037e-06, 7.430000000002712e-06, 6.708999999997106e-06, 5.361000000002336e-06, 3.7079999999981017e-06, 2.722000000000141e-06, 8.264000000000882e-06, 6.736000000000242e-06, 4.33400000000167e-06, 4.818999999999657e-06, 3.4439999999982818e-06, 9.570000000000412e-06, 7.750000000000812e-06, 3.611000000000586e-06], 'time': [0.019039792, 0.019045556, 0.019055208, 0.019061278, 0.019067111, 0.01907525, 0.019078944, 0.019086444, 0.019091486, 0.019094653, 0.019100167, 0.019108861, 0.019116042, 0.019121611, 0.019126847, 0.019132222, 0.019141556, 0.019147319, 0.019156944, 0.019157486, 0.019163542, 0.019170931, 0.019179861, 0.019183375, 0.01918825, 0.019197375, 0.019201764, 0.019204431, 0.019211694, 0.019218958, 0.019225028, 0.019232014, 0.019236806, 0.019244722, 0.019249333, 0.019249875, 0.019252097, 0.019259528, 0.019267417, 0.019274847, 0.019281556, 0.019286917, 0.019290625, 0.019293347, 0.019301611, 0.019308347, 0.019312681, 0.0193175, 0.019320944, 0.019330514, 0.019338264, 0.019341875], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:58.159" endtime="20201112 10:13:58.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.155" endtime="20201112 10:13:58.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.166" level="INFO">${RESULT} = [{'time': 0.019045556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019061278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:58.163" endtime="20201112 10:13:58.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:58.174" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.764000000001851e-06, 6.070000000000381e-06, 8.138999999997287e-06, 7.500000000000562e-06, 3.1669999999983656e-06, 8.694000000000063e-06, 5.569000000000407e-06, 5.375000000001906e-06...</msg>
<status status="PASS" starttime="20201112 10:13:58.167" endtime="20201112 10:13:58.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.179" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:58.178" endtime="20201112 10:13:58.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.181" level="INFO">VALUE: [5.764000000001851e-06, 6.070000000000381e-06, 8.138999999997287e-06, 7.500000000000562e-06, 3.1669999999983656e-06, 8.694000000000063e-06, 5.569000000000407e-06, 5.375000000001906e-06, 5.762999999998908e-06, 5.420000000026792e-07, 7.389000000000007e-06, 3.5139999999996008e-06, 9.124999999998717e-06, 2.667000000001335e-06, 7.263999999999882e-06, 6.985999999997022e-06, 7.916000000000173e-06, 5.419999999992098e-07, 7.431000000002186e-06, 7.430000000002712e-06, 5.361000000002336e-06, 2.722000000000141e-06, 6.736000000000242e-06, 4.818999999999657e-06, 9.570000000000412e-06, 3.611000000000586e-06]</msg>
<status status="PASS" starttime="20201112 10:13:58.180" endtime="20201112 10:13:58.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.175" endtime="20201112 10:13:58.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.185" endtime="20201112 10:13:58.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.188" endtime="20201112 10:13:58.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.187" endtime="20201112 10:13:58.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.183" endtime="20201112 10:13:58.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.819" endtime="20201112 10:13:58.209"></status>
</kw>
<msg timestamp="20201112 10:13:58.209" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.217" endtime="20201112 10:13:58.228"></status>
</kw>
<msg timestamp="20201112 10:13:58.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.216" endtime="20201112 10:13:58.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.231" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.229" endtime="20201112 10:13:58.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.232" endtime="20201112 10:13:58.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.213" endtime="20201112 10:13:58.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.211" endtime="20201112 10:13:58.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.243" endtime="20201112 10:13:58.514"></status>
</kw>
<msg timestamp="20201112 10:13:58.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017943167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017948319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.241" endtime="20201112 10:13:58.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017943167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017948319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.517" endtime="20201112 10:13:58.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.523" endtime="20201112 10:13:58.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.237" endtime="20201112 10:13:58.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.235" endtime="20201112 10:13:58.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.530" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:58.529" endtime="20201112 10:13:58.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.534" level="INFO">VALUE: [{'time': 0.017943167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017948319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.017954819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.017963458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.017969236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.017978597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.017984625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017990875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017994569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.018000333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.0180075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.018008042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018011597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.018017681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018023986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.018028153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}, {'time': 0.018035097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.018035639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018038014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.018044014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018052625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.018060847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.018068542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.018074583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.018083444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018089486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.018093778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.018098819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.018099361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018102931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5699999999978804e-06, 'source_diff': 3.5699999999978804e-06}, {'time': 0.018110667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.018115944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.018119639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.018122139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018130042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018136292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018144903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.018152806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018158875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.018159417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018161611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.194000000000501e-06, 'source_diff': 2.194000000000501e-06}, {'time': 0.018162153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018167139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018177028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.889000000002507e-06, 'source_diff': 9.889000000002507e-06}, {'time': 0.018181361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018184097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018186528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018192056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018199806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.018206333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.527000000002697e-06, 'source_diff': 6.527000000002697e-06}, {'time': 0.018208833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018209375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018211569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.194000000000501e-06, 'source_diff': 2.194000000000501e-06}, {'time': 0.018212111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018220194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.018223667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.018231861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:58.531" endtime="20201112 10:13:58.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.526" endtime="20201112 10:13:58.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:58.551" level="INFO">${debug-compressed} = {'source_diff': [0, 5.152000000001322e-06, 6.499999999999562e-06, 8.639000000001257e-06, 5.7779999999979514e-06, 9.360999999999398e-06, 6.028000000001671e-06, 6.249999999999312e-06, 3.693999999998532e...</msg>
<status status="PASS" starttime="20201112 10:13:58.536" endtime="20201112 10:13:58.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.555" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:58.554" endtime="20201112 10:13:58.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.559" level="INFO">VALUE: {'source_diff': [0, 5.152000000001322e-06, 6.499999999999562e-06, 8.639000000001257e-06, 5.7779999999979514e-06, 9.360999999999398e-06, 6.028000000001671e-06, 6.249999999999312e-06, 3.693999999998532e-06, 5.764000000001851e-06, 7.1669999999988965e-06, 5.419999999992098e-07, 3.5550000000023063e-06, 6.0839999999999506e-06, 6.304999999998118e-06, 4.167000000002835e-06, 6.943999999998313e-06, 5.419999999992098e-07, 2.375000000002375e-06, 5.999999999999062e-06, 8.610999999998648e-06, 8.222000000002172e-06, 7.694999999998536e-06, 6.041000000001767e-06, 8.860999999998898e-06, 6.041999999997771e-06, 4.29200000000296e-06, 5.040999999997298e-06, 5.420000000026792e-07, 3.5699999999978804e-06, 7.736000000001242e-06, 5.276999999997978e-06, 3.695000000001475e-06, 2.4999999999990308e-06, 7.903000000000077e-06, 6.249999999999312e-06, 8.611000000002117e-06, 7.903000000000077e-06, 6.069000000000907e-06, 5.419999999992098e-07, 2.194000000000501e-06, 5.419999999992098e-07, 4.985999999998492e-06, 9.889000000002507e-06, 4.332999999998727e-06, 2.735999999999711e-06, 2.431000000000655e-06, 5.528000000001171e-06, 7.749999999997342e-06, 6.527000000002697e-06, 2.4999999999990308e-06, 5.419999999992098e-07, 2.194000000000501e-06, 5.419999999992098e-07, 8.082999999999008e-06, 3.4730000000003647e-06, 8.193999999999563e-06], 'sourcediff': [0, 5.152000000001322e-06, 6.499999999999562e-06, 8.639000000001257e-06, 5.7779999999979514e-06, 9.360999999999398e-06, 6.028000000001671e-06, 6.249999999999312e-06, 3.693999999998532e-06, 5.764000000001851e-06, 7.1669999999988965e-06, 5.419999999992098e-07, 3.5550000000023063e-06, 6.0839999999999506e-06, 6.304999999998118e-06, 4.167000000002835e-06, 6.943999999998313e-06, 5.419999999992098e-07, 2.375000000002375e-06, 5.999999999999062e-06, 8.610999999998648e-06, 8.222000000002172e-06, 7.694999999998536e-06, 6.041000000001767e-06, 8.860999999998898e-06, 6.041999999997771e-06, 4.29200000000296e-06, 5.040999999997298e-06, 5.420000000026792e-07, 3.5699999999978804e-06, 7.736000000001242e-06, 5.276999999997978e-06, 3.695000000001475e-06, 2.4999999999990308e-06, 7.903000000000077e-06, 6.249999999999312e-06, 8.611000000002117e-06, 7.903000000000077e-06, 6.069000000000907e-06, 5.419999999992098e-07, 2.194000000000501e-06, 5.419999999992098e-07, 4.985999999998492e-06, 9.889000000002507e-06, 4.332999999998727e-06, 2.735999999999711e-06, 2.431000000000655e-06, 5.528000000001171e-06, 7.749999999997342e-06, 6.527000000002697e-06, 2.4999999999990308e-06, 5.419999999992098e-07, 2.194000000000501e-06, 5.419999999992098e-07, 8.082999999999008e-06, 3.4730000000003647e-06, 8.193999999999563e-06], 'time': [0.017943167, 0.017948319, 0.017954819, 0.017963458, 0.017969236, 0.017978597, 0.017984625, 0.017990875, 0.017994569, 0.018000333, 0.0180075, 0.018008042, 0.018011597, 0.018017681, 0.018023986, 0.018028153, 0.018035097, 0.018035639, 0.018038014, 0.018044014, 0.018052625, 0.018060847, 0.018068542, 0.018074583, 0.018083444, 0.018089486, 0.018093778, 0.018098819, 0.018099361, 0.018102931, 0.018110667, 0.018115944, 0.018119639, 0.018122139, 0.018130042, 0.018136292, 0.018144903, 0.018152806, 0.018158875, 0.018159417, 0.018161611, 0.018162153, 0.018167139, 0.018177028, 0.018181361, 0.018184097, 0.018186528, 0.018192056, 0.018199806, 0.018206333, 0.018208833, 0.018209375, 0.018211569, 0.018212111, 0.018220194, 0.018223667, 0.018231861], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING']}</msg>
<status status="PASS" starttime="20201112 10:13:58.557" endtime="20201112 10:13:58.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.552" endtime="20201112 10:13:58.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.564" level="INFO">${RESULT} = [{'time': 0.017948319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.017963458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:58.561" endtime="20201112 10:13:58.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:58.573" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.152000000001322e-06, 8.639000000001257e-06, 9.360999999999398e-06, 6.249999999999312e-06, 5.764000000001851e-06, 5.419999999992098e-07, 6.0839999999999506e-06, 4.167000000002835e-06...</msg>
<status status="PASS" starttime="20201112 10:13:58.565" endtime="20201112 10:13:58.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.577" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:58.576" endtime="20201112 10:13:58.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.580" level="INFO">VALUE: [5.152000000001322e-06, 8.639000000001257e-06, 9.360999999999398e-06, 6.249999999999312e-06, 5.764000000001851e-06, 5.419999999992098e-07, 6.0839999999999506e-06, 4.167000000002835e-06, 5.419999999992098e-07, 5.999999999999062e-06, 8.222000000002172e-06, 6.041000000001767e-06, 6.041999999997771e-06, 5.040999999997298e-06, 3.5699999999978804e-06, 5.276999999997978e-06, 2.4999999999990308e-06, 6.249999999999312e-06, 7.903000000000077e-06, 5.419999999992098e-07, 5.419999999992098e-07, 9.889000000002507e-06, 2.735999999999711e-06, 5.528000000001171e-06, 6.527000000002697e-06, 5.419999999992098e-07, 5.419999999992098e-07, 3.4730000000003647e-06]</msg>
<status status="PASS" starttime="20201112 10:13:58.578" endtime="20201112 10:13:58.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.574" endtime="20201112 10:13:58.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.583" endtime="20201112 10:13:58.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.587" endtime="20201112 10:13:58.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.585" endtime="20201112 10:13:58.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.582" endtime="20201112 10:13:58.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.210" endtime="20201112 10:13:58.608"></status>
</kw>
<msg timestamp="20201112 10:13:58.608" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.616" endtime="20201112 10:13:58.628"></status>
</kw>
<msg timestamp="20201112 10:13:58.629" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.614" endtime="20201112 10:13:58.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.631" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.630" endtime="20201112 10:13:58.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.632" endtime="20201112 10:13:58.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.612" endtime="20201112 10:13:58.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.610" endtime="20201112 10:13:58.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.642" endtime="20201112 10:13:58.914"></status>
</kw>
<msg timestamp="20201112 10:13:58.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017933542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017943194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.640" endtime="20201112 10:13:58.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017933542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017943194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.918" endtime="20201112 10:13:58.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.924" endtime="20201112 10:13:58.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.637" endtime="20201112 10:13:58.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.636" endtime="20201112 10:13:58.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.930" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:58.929" endtime="20201112 10:13:58.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.934" level="INFO">VALUE: [{'time': 0.017933542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017943194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.017950847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.017960736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.889000000002507e-06, 'source_diff': 9.889000000002507e-06}, {'time': 0.017967208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.471999999996952e-06, 'source_diff': 6.471999999996952e-06}, {'time': 0.017973222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017983028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.017989556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.017990097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017993736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017996403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018002403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018008639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018012333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.018019583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018020125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018028208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.018031361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018038611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018039153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018043986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.018053083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018062875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791999999998052e-06, 'source_diff': 9.791999999998052e-06}, {'time': 0.018063417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018072764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000003297e-06, 'source_diff': 9.347000000003297e-06}, {'time': 0.018082569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.018083111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018091194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083000000002477e-06, 'source_diff': 8.083000000002477e-06}, {'time': 0.018096958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.018102722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018111583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018119792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.0181275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.018136333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.018142639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.018147681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018152333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018159847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018165903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.018172236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.018174625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.018175167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018177292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.018177833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018180222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.018183889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.018184431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018193222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.790999999997579e-06, 'source_diff': 8.790999999997579e-06}, {'time': 0.018193764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018198278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.018200778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.018209653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018216361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.018218847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018219389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018221278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018230458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.018239139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018245208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.0182505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:58.932" endtime="20201112 10:13:58.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.927" endtime="20201112 10:13:58.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:58.953" level="INFO">${debug-compressed} = {'source_diff': [0, 9.651999999998884e-06, 7.652999999999827e-06, 9.889000000002507e-06, 6.471999999996952e-06, 6.014000000002101e-06, 9.806000000001092e-06, 6.5279999999987015e-06, 5.409999999997361e...</msg>
<status status="PASS" starttime="20201112 10:13:58.937" endtime="20201112 10:13:58.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.957" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:58.956" endtime="20201112 10:13:58.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.960" level="INFO">VALUE: {'source_diff': [0, 9.651999999998884e-06, 7.652999999999827e-06, 9.889000000002507e-06, 6.471999999996952e-06, 6.014000000002101e-06, 9.806000000001092e-06, 6.5279999999987015e-06, 5.409999999997361e-07, 3.6389999999997258e-06, 2.667000000001335e-06, 5.999999999999062e-06, 6.235999999999742e-06, 3.693999999998532e-06, 7.250000000000312e-06, 5.420000000026792e-07, 8.082999999999008e-06, 3.1529999999987957e-06, 7.250000000000312e-06, 5.419999999992098e-07, 4.833000000002696e-06, 9.096999999999578e-06, 9.791999999998052e-06, 5.419999999992098e-07, 9.347000000003297e-06, 9.804999999998149e-06, 5.419999999992098e-07, 8.083000000002477e-06, 5.7639999999983815e-06, 5.764000000001851e-06, 8.860999999998898e-06, 8.208999999998606e-06, 7.708000000002102e-06, 8.832999999999758e-06, 6.305999999997591e-06, 5.042000000000241e-06, 4.652000000000822e-06, 7.514000000000132e-06, 6.056000000000811e-06, 6.333000000000727e-06, 2.3889999999984757e-06, 5.419999999992098e-07, 2.125000000002125e-06, 5.409999999997361e-07, 2.3889999999984757e-06, 3.667000000002335e-06, 5.419999999992098e-07, 8.790999999997579e-06, 5.420000000026792e-07, 4.513999999997131e-06, 2.5000000000025002e-06, 8.874999999998467e-06, 6.708000000001102e-06, 2.485999999999461e-06, 5.419999999992098e-07, 1.889000000001445e-06, 9.180000000000993e-06, 8.680999999999967e-06, 6.0689999999974376e-06, 5.292000000000491e-06], 'sourcediff': [0, 9.651999999998884e-06, 7.652999999999827e-06, 9.889000000002507e-06, 6.471999999996952e-06, 6.014000000002101e-06, 9.806000000001092e-06, 6.5279999999987015e-06, 5.409999999997361e-07, 3.6389999999997258e-06, 2.667000000001335e-06, 5.999999999999062e-06, 6.235999999999742e-06, 3.693999999998532e-06, 7.250000000000312e-06, 5.420000000026792e-07, 8.082999999999008e-06, 3.1529999999987957e-06, 7.250000000000312e-06, 5.419999999992098e-07, 4.833000000002696e-06, 9.096999999999578e-06, 9.791999999998052e-06, 5.419999999992098e-07, 9.347000000003297e-06, 9.804999999998149e-06, 5.419999999992098e-07, 8.083000000002477e-06, 5.7639999999983815e-06, 5.764000000001851e-06, 8.860999999998898e-06, 8.208999999998606e-06, 7.708000000002102e-06, 8.832999999999758e-06, 6.305999999997591e-06, 5.042000000000241e-06, 4.652000000000822e-06, 7.514000000000132e-06, 6.056000000000811e-06, 6.333000000000727e-06, 2.3889999999984757e-06, 5.419999999992098e-07, 2.125000000002125e-06, 5.409999999997361e-07, 2.3889999999984757e-06, 3.667000000002335e-06, 5.419999999992098e-07, 8.790999999997579e-06, 5.420000000026792e-07, 4.513999999997131e-06, 2.5000000000025002e-06, 8.874999999998467e-06, 6.708000000001102e-06, 2.485999999999461e-06, 5.419999999992098e-07, 1.889000000001445e-06, 9.180000000000993e-06, 8.680999999999967e-06, 6.0689999999974376e-06, 5.292000000000491e-06], 'time': [0.017933542, 0.017943194, 0.017950847, 0.017960736, 0.017967208, 0.017973222, 0.017983028, 0.017989556, 0.017990097, 0.017993736, 0.017996403, 0.018002403, 0.018008639, 0.018012333, 0.018019583, 0.018020125, 0.018028208, 0.018031361, 0.018038611, 0.018039153, 0.018043986, 0.018053083, 0.018062875, 0.018063417, 0.018072764, 0.018082569, 0.018083111, 0.018091194, 0.018096958, 0.018102722, 0.018111583, 0.018119792, 0.0181275, 0.018136333, 0.018142639, 0.018147681, 0.018152333, 0.018159847, 0.018165903, 0.018172236, 0.018174625, 0.018175167, 0.018177292, 0.018177833, 0.018180222, 0.018183889, 0.018184431, 0.018193222, 0.018193764, 0.018198278, 0.018200778, 0.018209653, 0.018216361, 0.018218847, 0.018219389, 0.018221278, 0.018230458, 0.018239139, 0.018245208, 0.0182505], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:58.958" endtime="20201112 10:13:58.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.954" endtime="20201112 10:13:58.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.965" level="INFO">${RESULT} = [{'time': 0.017943194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.017960736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:58.962" endtime="20201112 10:13:58.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:58.974" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [9.651999999998884e-06, 9.889000000002507e-06, 6.014000000002101e-06, 6.5279999999987015e-06, 3.6389999999997258e-06, 5.999999999999062e-06, 3.693999999998532e-06, 5.420000000026792e-0...</msg>
<status status="PASS" starttime="20201112 10:13:58.966" endtime="20201112 10:13:58.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.979" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:58.978" endtime="20201112 10:13:58.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.982" level="INFO">VALUE: [9.651999999998884e-06, 9.889000000002507e-06, 6.014000000002101e-06, 6.5279999999987015e-06, 3.6389999999997258e-06, 5.999999999999062e-06, 3.693999999998532e-06, 5.420000000026792e-07, 3.1529999999987957e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 9.804999999998149e-06, 8.083000000002477e-06, 5.764000000001851e-06, 8.208999999998606e-06, 8.832999999999758e-06, 5.042000000000241e-06, 7.514000000000132e-06, 6.333000000000727e-06, 5.419999999992098e-07, 5.409999999997361e-07, 3.667000000002335e-06, 8.790999999997579e-06, 4.513999999997131e-06, 8.874999999998467e-06, 2.485999999999461e-06, 1.889000000001445e-06, 8.680999999999967e-06, 5.292000000000491e-06]</msg>
<status status="PASS" starttime="20201112 10:13:58.980" endtime="20201112 10:13:58.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.975" endtime="20201112 10:13:58.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.985" endtime="20201112 10:13:58.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.989" endtime="20201112 10:13:59.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.988" endtime="20201112 10:13:59.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.983" endtime="20201112 10:13:59.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.608" endtime="20201112 10:13:59.010"></status>
</kw>
<msg timestamp="20201112 10:13:59.010" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.018" endtime="20201112 10:13:59.029"></status>
</kw>
<msg timestamp="20201112 10:13:59.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.017" endtime="20201112 10:13:59.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.031" endtime="20201112 10:13:59.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.033" endtime="20201112 10:13:59.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.014" endtime="20201112 10:13:59.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.012" endtime="20201112 10:13:59.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.043" endtime="20201112 10:13:59.312"></status>
</kw>
<msg timestamp="20201112 10:13:59.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018016792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018023986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.041" endtime="20201112 10:13:59.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018016792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018023986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.315" endtime="20201112 10:13:59.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.321" endtime="20201112 10:13:59.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.039" endtime="20201112 10:13:59.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.037" endtime="20201112 10:13:59.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.328" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:59.327" endtime="20201112 10:13:59.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.332" level="INFO">VALUE: [{'time': 0.018016792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018023986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018033083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.01804075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.018046833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018051194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018060486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.018070139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.018074069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.930000000002681e-06, 'source_diff': 3.930000000002681e-06}, {'time': 0.018076736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.018080431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.01808975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018090292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018094319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.018094861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018102819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.018108375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.018112556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.01811625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.018118736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018124097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018130097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.018134903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.018144708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.01814525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018147139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018154333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.018156833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018165958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.018168917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.018176806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.018177347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018180903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.018181444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018183653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2089999999995447e-06, 'source_diff': 2.2089999999995447e-06}, {'time': 0.018192986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018195972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018201972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018209222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018212194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018215194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.018223792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.018226722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.018233681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.018242819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.137999999998814e-06, 'source_diff': 9.137999999998814e-06}, {'time': 0.018247236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018253722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018259542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.018264431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018269472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.018275306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.83400000000317e-06, 'source_diff': 5.83400000000317e-06}, {'time': 0.018280583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.018288806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.018294083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.018294625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0182985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:59.329" endtime="20201112 10:13:59.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.324" endtime="20201112 10:13:59.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:59.349" level="INFO">${debug-compressed} = {'source_diff': [0, 7.193999999998563e-06, 9.096999999999578e-06, 7.667000000002866e-06, 6.083000000000477e-06, 4.360999999997867e-06, 9.292000000001022e-06, 9.652999999998357e-06, 3.930000000002681e-...</msg>
<status status="PASS" starttime="20201112 10:13:59.334" endtime="20201112 10:13:59.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.353" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:59.352" endtime="20201112 10:13:59.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.356" level="INFO">VALUE: {'source_diff': [0, 7.193999999998563e-06, 9.096999999999578e-06, 7.667000000002866e-06, 6.083000000000477e-06, 4.360999999997867e-06, 9.292000000001022e-06, 9.652999999998357e-06, 3.930000000002681e-06, 2.6669999999978655e-06, 3.695000000001475e-06, 9.319000000000688e-06, 5.419999999992098e-07, 4.027000000000197e-06, 5.419999999992098e-07, 7.957999999998883e-06, 5.556000000000311e-06, 4.1809999999989356e-06, 3.6940000000020012e-06, 2.485999999999461e-06, 5.360999999998867e-06, 6.000000000002531e-06, 4.805999999999561e-06, 9.804999999998149e-06, 5.420000000026792e-07, 1.8889999999979756e-06, 7.194000000002032e-06, 2.4999999999990308e-06, 9.124999999998717e-06, 2.9590000000002947e-06, 7.889000000000507e-06, 5.409999999997361e-07, 3.55600000000178e-06, 5.409999999997361e-07, 2.2089999999995447e-06, 9.333000000000258e-06, 2.985999999999961e-06, 5.999999999999062e-06, 7.250000000000312e-06, 2.972000000000391e-06, 2.999999999999531e-06, 8.597999999998551e-06, 2.9300000000016813e-06, 6.959000000000826e-06, 9.137999999998814e-06, 4.416999999999616e-06, 6.485999999999992e-06, 5.820000000000131e-06, 4.889000000000976e-06, 5.040999999997298e-06, 5.83400000000317e-06, 5.276999999997978e-06, 8.223000000001646e-06, 5.276999999997978e-06, 5.419999999992098e-07, 3.875000000000406e-06], 'sourcediff': [0, 7.193999999998563e-06, 9.096999999999578e-06, 7.667000000002866e-06, 6.083000000000477e-06, 4.360999999997867e-06, 9.292000000001022e-06, 9.652999999998357e-06, 3.930000000002681e-06, 2.6669999999978655e-06, 3.695000000001475e-06, 9.319000000000688e-06, 5.419999999992098e-07, 4.027000000000197e-06, 5.419999999992098e-07, 7.957999999998883e-06, 5.556000000000311e-06, 4.1809999999989356e-06, 3.6940000000020012e-06, 2.485999999999461e-06, 5.360999999998867e-06, 6.000000000002531e-06, 4.805999999999561e-06, 9.804999999998149e-06, 5.420000000026792e-07, 1.8889999999979756e-06, 7.194000000002032e-06, 2.4999999999990308e-06, 9.124999999998717e-06, 2.9590000000002947e-06, 7.889000000000507e-06, 5.409999999997361e-07, 3.55600000000178e-06, 5.409999999997361e-07, 2.2089999999995447e-06, 9.333000000000258e-06, 2.985999999999961e-06, 5.999999999999062e-06, 7.250000000000312e-06, 2.972000000000391e-06, 2.999999999999531e-06, 8.597999999998551e-06, 2.9300000000016813e-06, 6.959000000000826e-06, 9.137999999998814e-06, 4.416999999999616e-06, 6.485999999999992e-06, 5.820000000000131e-06, 4.889000000000976e-06, 5.040999999997298e-06, 5.83400000000317e-06, 5.276999999997978e-06, 8.223000000001646e-06, 5.276999999997978e-06, 5.419999999992098e-07, 3.875000000000406e-06], 'time': [0.018016792, 0.018023986, 0.018033083, 0.01804075, 0.018046833, 0.018051194, 0.018060486, 0.018070139, 0.018074069, 0.018076736, 0.018080431, 0.01808975, 0.018090292, 0.018094319, 0.018094861, 0.018102819, 0.018108375, 0.018112556, 0.01811625, 0.018118736, 0.018124097, 0.018130097, 0.018134903, 0.018144708, 0.01814525, 0.018147139, 0.018154333, 0.018156833, 0.018165958, 0.018168917, 0.018176806, 0.018177347, 0.018180903, 0.018181444, 0.018183653, 0.018192986, 0.018195972, 0.018201972, 0.018209222, 0.018212194, 0.018215194, 0.018223792, 0.018226722, 0.018233681, 0.018242819, 0.018247236, 0.018253722, 0.018259542, 0.018264431, 0.018269472, 0.018275306, 0.018280583, 0.018288806, 0.018294083, 0.018294625, 0.0182985], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 10:13:59.354" endtime="20201112 10:13:59.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.350" endtime="20201112 10:13:59.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.361" level="INFO">${RESULT} = [{'time': 0.018023986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.01804075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:13:59.358" endtime="20201112 10:13:59.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:59.371" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [7.193999999998563e-06, 7.667000000002866e-06, 4.360999999997867e-06, 9.652999999998357e-06, 2.6669999999978655e-06, 9.319000000000688e-06, 4.027000000000197e-06, 7.957999999998883e-06...</msg>
<status status="PASS" starttime="20201112 10:13:59.362" endtime="20201112 10:13:59.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.375" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:59.374" endtime="20201112 10:13:59.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.377" level="INFO">VALUE: [7.193999999998563e-06, 7.667000000002866e-06, 4.360999999997867e-06, 9.652999999998357e-06, 2.6669999999978655e-06, 9.319000000000688e-06, 4.027000000000197e-06, 7.957999999998883e-06, 4.1809999999989356e-06, 2.485999999999461e-06, 6.000000000002531e-06, 9.804999999998149e-06, 1.8889999999979756e-06, 2.4999999999990308e-06, 2.9590000000002947e-06, 5.409999999997361e-07, 5.409999999997361e-07, 9.333000000000258e-06, 5.999999999999062e-06, 2.972000000000391e-06, 8.597999999998551e-06, 6.959000000000826e-06, 4.416999999999616e-06, 5.820000000000131e-06, 5.040999999997298e-06, 5.276999999997978e-06, 5.276999999997978e-06, 3.875000000000406e-06]</msg>
<status status="PASS" starttime="20201112 10:13:59.376" endtime="20201112 10:13:59.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.372" endtime="20201112 10:13:59.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.381" endtime="20201112 10:13:59.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.385" endtime="20201112 10:13:59.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.383" endtime="20201112 10:13:59.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.379" endtime="20201112 10:13:59.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.011" endtime="20201112 10:13:59.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.390" endtime="20201112 10:13:59.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.412" endtime="20201112 10:13:59.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.410" endtime="20201112 10:13:59.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.408" endtime="20201112 10:13:59.432"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:48.255" endtime="20201112 10:13:59.433" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.441" endtime="20201112 10:13:59.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.439" endtime="20201112 10:13:59.461"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.475" endtime="20201112 10:14:02.504"></status>
</kw>
<msg timestamp="20201112 10:14:02.505" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.474" endtime="20201112 10:14:02.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.508" endtime="20201112 10:14:02.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.518" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:02.513" endtime="20201112 10:14:02.518"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:59.471" endtime="20201112 10:14:02.520"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:59.468" endtime="20201112 10:14:02.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.466" endtime="20201112 10:14:02.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:02.530" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:02.528" endtime="20201112 10:14:02.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.523" endtime="20201112 10:14:02.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.466" endtime="20201112 10:14:02.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.465" endtime="20201112 10:14:02.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.533" endtime="20201112 10:14:02.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.463" endtime="20201112 10:14:02.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.462" endtime="20201112 10:14:02.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.438" endtime="20201112 10:14:02.539"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 10:14:02.546" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.571" endtime="20201112 10:14:02.587"></status>
</kw>
<msg timestamp="20201112 10:14:02.588" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.560" endtime="20201112 10:14:02.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.593" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.590" endtime="20201112 10:14:02.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.596" endtime="20201112 10:14:02.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.554" endtime="20201112 10:14:02.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.550" endtime="20201112 10:14:02.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.608" endtime="20201112 10:14:02.913"></status>
</kw>
<msg timestamp="20201112 10:14:02.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.121371014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.121372639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.607" endtime="20201112 10:14:02.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.121371014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.121372639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.917" endtime="20201112 10:14:02.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.926" endtime="20201112 10:14:02.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.604" endtime="20201112 10:14:02.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.602" endtime="20201112 10:14:02.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.933" level="INFO">${RESULT} = [{'time': 3.121372639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999998940723e-06, 'source_diff': 1.6249999998940723e-06}, {'time': 3.121376875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:02.930" endtime="20201112 10:14:02.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:02.947" level="INFO">${OVERHEAD} = {'source_diff': [1.6249999998940723e-06, 1.6250000003381615e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.6249999998940723e-06, 1.639000000164259e-06, 1.6529999999903566e-06, 1.6380000000815187...</msg>
<status status="PASS" starttime="20201112 10:14:02.934" endtime="20201112 10:14:02.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.952" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:02.951" endtime="20201112 10:14:02.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.955" level="INFO">VALUE: [1.6249999998940723e-06, 1.6250000003381615e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.6249999998940723e-06, 1.639000000164259e-06, 1.6529999999903566e-06, 1.6380000000815187e-06, 1.6380000000815187e-06, 1.6519999999076163e-06, 1.6529999999903566e-06, 1.6519999999076163e-06, 1.6250000003381615e-06, 1.596999999797788e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.6669999998164542e-06, 1.639000000164259e-06, 1.6389999997201699e-06, 1.6389999997201699e-06, 1.6110000000679747e-06, 1.6380000000815187e-06, 1.6389999997201699e-06, 1.6249999998940723e-06, 1.6519999999076163e-06, 1.6669999998164542e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.6389999997201699e-06, 1.6250000003381615e-06, 1.6659999997337138e-06, 1.6529999999903566e-06, 1.6530000004344458e-06, 1.639000000164259e-06, 1.6659999997337138e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.6529999999903566e-06, 1.6249999998940723e-06, 1.6669999998164542e-06, 1.6380000000815187e-06, 1.6529999999903566e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.639000000164259e-06, 1.6380000000815187e-06, 1.6389999997201699e-06, 1.6529999999903566e-06]</msg>
<status status="PASS" starttime="20201112 10:14:02.953" endtime="20201112 10:14:02.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.948" endtime="20201112 10:14:02.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.958" endtime="20201112 10:14:02.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.961" endtime="20201112 10:14:02.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.960" endtime="20201112 10:14:02.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.956" endtime="20201112 10:14:02.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.547" endtime="20201112 10:14:02.982"></status>
</kw>
<msg timestamp="20201112 10:14:02.983" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.991" endtime="20201112 10:14:03.004"></status>
</kw>
<msg timestamp="20201112 10:14:03.004" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.989" endtime="20201112 10:14:03.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.007" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.005" endtime="20201112 10:14:03.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.008" endtime="20201112 10:14:03.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.987" endtime="20201112 10:14:03.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.985" endtime="20201112 10:14:03.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.017" endtime="20201112 10:14:03.308"></status>
</kw>
<msg timestamp="20201112 10:14:03.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.016" endtime="20201112 10:14:03.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.312" endtime="20201112 10:14:03.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.320" endtime="20201112 10:14:03.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.013" endtime="20201112 10:14:03.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.011" endtime="20201112 10:14:03.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.327" level="INFO">${RESULT} = [{'time': 0.019586208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019595708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.324" endtime="20201112 10:14:03.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:03.341" level="INFO">${OVERHEAD} = {'source_diff': [1.639000000001195e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6800000000004311e...</msg>
<status status="PASS" starttime="20201112 10:14:03.328" endtime="20201112 10:14:03.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.346" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:03.344" endtime="20201112 10:14:03.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.348" level="INFO">VALUE: [1.639000000001195e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.6660000000008612e-06, 1.653000000000765e-06, 1.6800000000004311e-06, 1.6389999999977256e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.598000000001959e-06, 1.6250000000016251e-06, 1.6949999999994747e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6380000000017214e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6659999999973918e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.347" endtime="20201112 10:14:03.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.342" endtime="20201112 10:14:03.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.352" endtime="20201112 10:14:03.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.356" endtime="20201112 10:14:03.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.354" endtime="20201112 10:14:03.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.350" endtime="20201112 10:14:03.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.983" endtime="20201112 10:14:03.377"></status>
</kw>
<msg timestamp="20201112 10:14:03.377" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.385" endtime="20201112 10:14:03.397"></status>
</kw>
<msg timestamp="20201112 10:14:03.397" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.383" endtime="20201112 10:14:03.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.400" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.398" endtime="20201112 10:14:03.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.401" endtime="20201112 10:14:03.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.381" endtime="20201112 10:14:03.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.379" endtime="20201112 10:14:03.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.410" endtime="20201112 10:14:03.698"></status>
</kw>
<msg timestamp="20201112 10:14:03.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018484778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018486417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.409" endtime="20201112 10:14:03.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018484778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018486417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.703" endtime="20201112 10:14:03.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.711" endtime="20201112 10:14:03.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.406" endtime="20201112 10:14:03.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.404" endtime="20201112 10:14:03.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.718" level="INFO">${RESULT} = [{'time': 0.018486417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018497417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.715" endtime="20201112 10:14:03.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:03.732" level="INFO">${OVERHEAD} = {'source_diff': [1.639000000001195e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6660000000008612e-06, 1.6120000000015289e-06, 1.62499999999815...</msg>
<status status="PASS" starttime="20201112 10:14:03.719" endtime="20201112 10:14:03.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.736" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:03.735" endtime="20201112 10:14:03.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.739" level="INFO">VALUE: [1.639000000001195e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6660000000008612e-06, 1.6120000000015289e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.6250000000016251e-06, 1.568999999999876e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.6380000000017214e-06, 1.7089999999990446e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.582999999999446e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.737" endtime="20201112 10:14:03.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.733" endtime="20201112 10:14:03.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.743" endtime="20201112 10:14:03.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.746" endtime="20201112 10:14:03.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.745" endtime="20201112 10:14:03.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.741" endtime="20201112 10:14:03.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.377" endtime="20201112 10:14:03.767"></status>
</kw>
<msg timestamp="20201112 10:14:03.767" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.775" endtime="20201112 10:14:03.786"></status>
</kw>
<msg timestamp="20201112 10:14:03.787" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.774" endtime="20201112 10:14:03.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.789" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.788" endtime="20201112 10:14:03.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.791" endtime="20201112 10:14:03.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.771" endtime="20201112 10:14:03.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.769" endtime="20201112 10:14:03.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.800" endtime="20201112 10:14:04.088"></status>
</kw>
<msg timestamp="20201112 10:14:04.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018457153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018458778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.798" endtime="20201112 10:14:04.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018457153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018458778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.093" endtime="20201112 10:14:04.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.101" endtime="20201112 10:14:04.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.796" endtime="20201112 10:14:04.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.794" endtime="20201112 10:14:04.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.108" level="INFO">${RESULT} = [{'time': 0.018458778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018462597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:04.105" endtime="20201112 10:14:04.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:04.124" level="INFO">${OVERHEAD} = {'source_diff': [1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.6389999999977256e-...</msg>
<status status="PASS" starttime="20201112 10:14:04.109" endtime="20201112 10:14:04.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.128" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:04.127" endtime="20201112 10:14:04.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.131" level="INFO">VALUE: [1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.7220000000026103e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.129" endtime="20201112 10:14:04.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.124" endtime="20201112 10:14:04.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.134" endtime="20201112 10:14:04.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.138" endtime="20201112 10:14:04.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.136" endtime="20201112 10:14:04.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.133" endtime="20201112 10:14:04.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.768" endtime="20201112 10:14:04.159"></status>
</kw>
<msg timestamp="20201112 10:14:04.159" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.167" endtime="20201112 10:14:04.179"></status>
</kw>
<msg timestamp="20201112 10:14:04.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.165" endtime="20201112 10:14:04.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.182" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.180" endtime="20201112 10:14:04.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.183" endtime="20201112 10:14:04.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.163" endtime="20201112 10:14:04.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.161" endtime="20201112 10:14:04.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.192" endtime="20201112 10:14:04.480"></status>
</kw>
<msg timestamp="20201112 10:14:04.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018399792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018401431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.190" endtime="20201112 10:14:04.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018399792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018401431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.484" endtime="20201112 10:14:04.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.493" endtime="20201112 10:14:04.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.188" endtime="20201112 10:14:04.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.186" endtime="20201112 10:14:04.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.500" level="INFO">${RESULT} = [{'time': 0.018401431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018407833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:04.496" endtime="20201112 10:14:04.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:04.513" level="INFO">${OVERHEAD} = {'source_diff': [1.6389999999977256e-06, 1.6519999999978219e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e...</msg>
<status status="PASS" starttime="20201112 10:14:04.501" endtime="20201112 10:14:04.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.518" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:04.517" endtime="20201112 10:14:04.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.520" level="INFO">VALUE: [1.6389999999977256e-06, 1.6519999999978219e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.7359999999987108e-06, 1.6389999999977256e-06, 1.584000000002389e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.519" endtime="20201112 10:14:04.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.514" endtime="20201112 10:14:04.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.524" endtime="20201112 10:14:04.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.528" endtime="20201112 10:14:04.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.526" endtime="20201112 10:14:04.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.522" endtime="20201112 10:14:04.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.160" endtime="20201112 10:14:04.549"></status>
</kw>
<msg timestamp="20201112 10:14:04.549" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.557" endtime="20201112 10:14:04.568"></status>
</kw>
<msg timestamp="20201112 10:14:04.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.555" endtime="20201112 10:14:04.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.570" endtime="20201112 10:14:04.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.572" endtime="20201112 10:14:04.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.552" endtime="20201112 10:14:04.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.551" endtime="20201112 10:14:04.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.582" endtime="20201112 10:14:04.872"></status>
</kw>
<msg timestamp="20201112 10:14:04.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018600111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.580" endtime="20201112 10:14:04.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018600111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.877" endtime="20201112 10:14:04.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.885" endtime="20201112 10:14:04.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.577" endtime="20201112 10:14:04.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.576" endtime="20201112 10:14:04.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.892" level="INFO">${RESULT} = [{'time': 0.018600111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018609944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:04.889" endtime="20201112 10:14:04.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:04.906" level="INFO">${OVERHEAD} = {'source_diff': [1.6249999999981557e-06, 1.6660000000008612e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.638999999997725...</msg>
<status status="PASS" starttime="20201112 10:14:04.893" endtime="20201112 10:14:04.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.911" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:04.910" endtime="20201112 10:14:04.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.913" level="INFO">VALUE: [1.6249999999981557e-06, 1.6660000000008612e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6669999999968654e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.637999999998252e-06, 1.6519999999978219e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.637999999998252e-06, 1.6520000000012913e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.912" endtime="20201112 10:14:04.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.907" endtime="20201112 10:14:04.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.917" endtime="20201112 10:14:04.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.921" endtime="20201112 10:14:04.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.919" endtime="20201112 10:14:04.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.915" endtime="20201112 10:14:04.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.549" endtime="20201112 10:14:04.941"></status>
</kw>
<msg timestamp="20201112 10:14:04.942" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.950" endtime="20201112 10:14:04.961"></status>
</kw>
<msg timestamp="20201112 10:14:04.962" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.948" endtime="20201112 10:14:04.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.964" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.963" endtime="20201112 10:14:04.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.966" endtime="20201112 10:14:04.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.945" endtime="20201112 10:14:04.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.943" endtime="20201112 10:14:04.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.975" endtime="20201112 10:14:05.261"></status>
</kw>
<msg timestamp="20201112 10:14:05.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018336944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018338583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.974" endtime="20201112 10:14:05.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018336944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018338583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.265" endtime="20201112 10:14:05.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.274" endtime="20201112 10:14:05.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.971" endtime="20201112 10:14:05.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.969" endtime="20201112 10:14:05.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.281" level="INFO">${RESULT} = [{'time': 0.018338583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018342597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:05.277" endtime="20201112 10:14:05.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:05.295" level="INFO">${OVERHEAD} = {'source_diff': [1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.610999999998585...</msg>
<status status="PASS" starttime="20201112 10:14:05.282" endtime="20201112 10:14:05.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.299" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:05.298" endtime="20201112 10:14:05.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.302" level="INFO">VALUE: [1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.5699999999993497e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.5969999999990159e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.568999999999876e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201112 10:14:05.300" endtime="20201112 10:14:05.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.296" endtime="20201112 10:14:05.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.305" endtime="20201112 10:14:05.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.309" endtime="20201112 10:14:05.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.307" endtime="20201112 10:14:05.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.304" endtime="20201112 10:14:05.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.942" endtime="20201112 10:14:05.330"></status>
</kw>
<msg timestamp="20201112 10:14:05.330" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.338" endtime="20201112 10:14:05.350"></status>
</kw>
<msg timestamp="20201112 10:14:05.351" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.337" endtime="20201112 10:14:05.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.353" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.352" endtime="20201112 10:14:05.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.355" endtime="20201112 10:14:05.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.334" endtime="20201112 10:14:05.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.332" endtime="20201112 10:14:05.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.364" endtime="20201112 10:14:05.652"></status>
</kw>
<msg timestamp="20201112 10:14:05.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018841833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018843472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.362" endtime="20201112 10:14:05.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018841833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018843472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.656" endtime="20201112 10:14:05.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.665" endtime="20201112 10:14:05.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.360" endtime="20201112 10:14:05.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.358" endtime="20201112 10:14:05.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.672" level="INFO">${RESULT} = [{'time': 0.018843472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018847792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:05.668" endtime="20201112 10:14:05.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:05.687" level="INFO">${OVERHEAD} = {'source_diff': [1.639000000001195e-06, 1.5699999999993497e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.598000000001959e-06, 1.568999999999876e-...</msg>
<status status="PASS" starttime="20201112 10:14:05.673" endtime="20201112 10:14:05.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.691" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:05.690" endtime="20201112 10:14:05.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.694" level="INFO">VALUE: [1.639000000001195e-06, 1.5699999999993497e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.598000000001959e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6119999999980594e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.5970000000024853e-06, 1.7359999999987108e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6520000000012913e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.582999999999446e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 10:14:05.692" endtime="20201112 10:14:05.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.688" endtime="20201112 10:14:05.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.697" endtime="20201112 10:14:05.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.701" endtime="20201112 10:14:05.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.699" endtime="20201112 10:14:05.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.696" endtime="20201112 10:14:05.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.331" endtime="20201112 10:14:05.722"></status>
</kw>
<msg timestamp="20201112 10:14:05.722" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.730" endtime="20201112 10:14:05.743"></status>
</kw>
<msg timestamp="20201112 10:14:05.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.729" endtime="20201112 10:14:05.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.746" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.744" endtime="20201112 10:14:05.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.747" endtime="20201112 10:14:05.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.726" endtime="20201112 10:14:05.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.724" endtime="20201112 10:14:05.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.757" endtime="20201112 10:14:06.042"></status>
</kw>
<msg timestamp="20201112 10:14:06.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01837175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018373403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:05.755" endtime="20201112 10:14:06.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01837175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018373403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:06.047" endtime="20201112 10:14:06.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.055" endtime="20201112 10:14:06.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.752" endtime="20201112 10:14:06.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.750" endtime="20201112 10:14:06.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.062" level="INFO">${RESULT} = [{'time': 0.018373403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018379319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:06.059" endtime="20201112 10:14:06.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:06.076" level="INFO">${OVERHEAD} = {'source_diff': [1.653000000000765e-06, 1.6380000000017214e-06, 1.6380000000017214e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.667000000000334...</msg>
<status status="PASS" starttime="20201112 10:14:06.063" endtime="20201112 10:14:06.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.080" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:06.079" endtime="20201112 10:14:06.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.083" level="INFO">VALUE: [1.653000000000765e-06, 1.6380000000017214e-06, 1.6380000000017214e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.707999999999571e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6519999999978219e-06, 1.6110000000020552e-06, 1.5970000000024853e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6380000000017214e-06, 1.598000000001959e-06, 1.6520000000012913e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6110000000020552e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.6669999999968654e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 10:14:06.081" endtime="20201112 10:14:06.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.077" endtime="20201112 10:14:06.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.087" endtime="20201112 10:14:06.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.090" endtime="20201112 10:14:06.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.089" endtime="20201112 10:14:06.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.085" endtime="20201112 10:14:06.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.723" endtime="20201112 10:14:06.111"></status>
</kw>
<msg timestamp="20201112 10:14:06.111" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.119" endtime="20201112 10:14:06.132"></status>
</kw>
<msg timestamp="20201112 10:14:06.133" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.118" endtime="20201112 10:14:06.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.136" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.134" endtime="20201112 10:14:06.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.137" endtime="20201112 10:14:06.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.115" endtime="20201112 10:14:06.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.113" endtime="20201112 10:14:06.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.146" endtime="20201112 10:14:06.433"></status>
</kw>
<msg timestamp="20201112 10:14:06.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018408083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018409653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.144" endtime="20201112 10:14:06.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018408083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018409653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.437" endtime="20201112 10:14:06.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.446" endtime="20201112 10:14:06.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.142" endtime="20201112 10:14:06.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.140" endtime="20201112 10:14:06.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.453" level="INFO">${RESULT} = [{'time': 0.018409653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.018414375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:06.449" endtime="20201112 10:14:06.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:06.466" level="INFO">${OVERHEAD} = {'source_diff': [1.5700000000028191e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.62499999999815...</msg>
<status status="PASS" starttime="20201112 10:14:06.454" endtime="20201112 10:14:06.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.471" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:06.470" endtime="20201112 10:14:06.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.473" level="INFO">VALUE: [1.5700000000028191e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.5979999999984895e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6519999999978219e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.637999999998252e-06, 1.707999999999571e-06, 1.6660000000008612e-06, 1.6520000000012913e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201112 10:14:06.472" endtime="20201112 10:14:06.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.467" endtime="20201112 10:14:06.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.477" endtime="20201112 10:14:06.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.481" endtime="20201112 10:14:06.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.479" endtime="20201112 10:14:06.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.475" endtime="20201112 10:14:06.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.112" endtime="20201112 10:14:06.502"></status>
</kw>
<msg timestamp="20201112 10:14:06.502" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.510" endtime="20201112 10:14:06.522"></status>
</kw>
<msg timestamp="20201112 10:14:06.523" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.508" endtime="20201112 10:14:06.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.525" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.524" endtime="20201112 10:14:06.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.527" endtime="20201112 10:14:06.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.506" endtime="20201112 10:14:06.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.504" endtime="20201112 10:14:06.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.536" endtime="20201112 10:14:06.827"></status>
</kw>
<msg timestamp="20201112 10:14:06.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018530292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018531931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.534" endtime="20201112 10:14:06.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018530292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018531931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.831" endtime="20201112 10:14:06.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.839" endtime="20201112 10:14:06.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.532" endtime="20201112 10:14:06.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.530" endtime="20201112 10:14:06.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.846" level="INFO">${RESULT} = [{'time': 0.018531931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018538306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:06.843" endtime="20201112 10:14:06.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:06.860" level="INFO">${OVERHEAD} = {'source_diff': [1.639000000001195e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.694000000000001e-...</msg>
<status status="PASS" starttime="20201112 10:14:06.848" endtime="20201112 10:14:06.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.865" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:06.864" endtime="20201112 10:14:06.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.867" level="INFO">VALUE: [1.639000000001195e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.5839999999989196e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06]</msg>
<status status="PASS" starttime="20201112 10:14:06.866" endtime="20201112 10:14:06.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.861" endtime="20201112 10:14:06.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.871" endtime="20201112 10:14:06.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.875" endtime="20201112 10:14:06.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.873" endtime="20201112 10:14:06.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.869" endtime="20201112 10:14:06.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.502" endtime="20201112 10:14:06.895"></status>
</kw>
<msg timestamp="20201112 10:14:06.896" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.904" endtime="20201112 10:14:06.916"></status>
</kw>
<msg timestamp="20201112 10:14:06.916" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.902" endtime="20201112 10:14:06.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.919" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.917" endtime="20201112 10:14:06.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.920" endtime="20201112 10:14:06.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.899" endtime="20201112 10:14:06.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.898" endtime="20201112 10:14:06.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.929" endtime="20201112 10:14:07.217"></status>
</kw>
<msg timestamp="20201112 10:14:07.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018405181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.928" endtime="20201112 10:14:07.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018405181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.221" endtime="20201112 10:14:07.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.230" endtime="20201112 10:14:07.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.925" endtime="20201112 10:14:07.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.923" endtime="20201112 10:14:07.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.237" level="INFO">${RESULT} = [{'time': 0.018405181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018414431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:07.233" endtime="20201112 10:14:07.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:07.251" level="INFO">${OVERHEAD} = {'source_diff': [1.6249999999981557e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.624999999998155...</msg>
<status status="PASS" starttime="20201112 10:14:07.238" endtime="20201112 10:14:07.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.256" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:07.255" endtime="20201112 10:14:07.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.259" level="INFO">VALUE: [1.6249999999981557e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6669999999968654e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6660000000008612e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.6950000000029442e-06, 1.639000000001195e-06, 1.5700000000028191e-06, 1.653000000000765e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 10:14:07.257" endtime="20201112 10:14:07.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.252" endtime="20201112 10:14:07.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.262" endtime="20201112 10:14:07.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.266" endtime="20201112 10:14:07.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.264" endtime="20201112 10:14:07.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.261" endtime="20201112 10:14:07.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.896" endtime="20201112 10:14:07.287"></status>
</kw>
<msg timestamp="20201112 10:14:07.287" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.295" endtime="20201112 10:14:07.308"></status>
</kw>
<msg timestamp="20201112 10:14:07.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.293" endtime="20201112 10:14:07.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.311" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.310" endtime="20201112 10:14:07.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.312" endtime="20201112 10:14:07.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.291" endtime="20201112 10:14:07.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.289" endtime="20201112 10:14:07.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.322" endtime="20201112 10:14:07.607"></status>
</kw>
<msg timestamp="20201112 10:14:07.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018320861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018322444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.320" endtime="20201112 10:14:07.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018320861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018322444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.611" endtime="20201112 10:14:07.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.620" endtime="20201112 10:14:07.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.317" endtime="20201112 10:14:07.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.315" endtime="20201112 10:14:07.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.627" level="INFO">${RESULT} = [{'time': 0.018322444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018327417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:07.623" endtime="20201112 10:14:07.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:07.640" level="INFO">${OVERHEAD} = {'source_diff': [1.582999999999446e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.582999999999446e-...</msg>
<status status="PASS" starttime="20201112 10:14:07.628" endtime="20201112 10:14:07.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.645" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:07.644" endtime="20201112 10:14:07.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.647" level="INFO">VALUE: [1.582999999999446e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6519999999978219e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.6810000000033742e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201112 10:14:07.646" endtime="20201112 10:14:07.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.641" endtime="20201112 10:14:07.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.655" endtime="20201112 10:14:07.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.659" endtime="20201112 10:14:07.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.657" endtime="20201112 10:14:07.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.653" endtime="20201112 10:14:07.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.288" endtime="20201112 10:14:07.680"></status>
</kw>
<msg timestamp="20201112 10:14:07.680" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.688" endtime="20201112 10:14:07.701"></status>
</kw>
<msg timestamp="20201112 10:14:07.702" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.686" endtime="20201112 10:14:07.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.703" endtime="20201112 10:14:07.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.705" endtime="20201112 10:14:07.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.684" endtime="20201112 10:14:07.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.682" endtime="20201112 10:14:07.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.715" endtime="20201112 10:14:08.005"></status>
</kw>
<msg timestamp="20201112 10:14:08.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018530208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018531847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.713" endtime="20201112 10:14:08.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018530208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018531847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.010" endtime="20201112 10:14:08.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.019" endtime="20201112 10:14:08.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.710" endtime="20201112 10:14:08.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.709" endtime="20201112 10:14:08.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.026" level="INFO">${RESULT} = [{'time': 0.018531847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018535694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:08.022" endtime="20201112 10:14:08.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:08.039" level="INFO">${OVERHEAD} = {'source_diff': [1.639000000001195e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.639000000001195e...</msg>
<status status="PASS" starttime="20201112 10:14:08.027" endtime="20201112 10:14:08.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.044" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:08.043" endtime="20201112 10:14:08.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.046" level="INFO">VALUE: [1.639000000001195e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.5970000000024853e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.582999999999446e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.6519999999978219e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201112 10:14:08.045" endtime="20201112 10:14:08.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.040" endtime="20201112 10:14:08.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.050" endtime="20201112 10:14:08.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.054" endtime="20201112 10:14:08.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.052" endtime="20201112 10:14:08.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.048" endtime="20201112 10:14:08.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.680" endtime="20201112 10:14:08.074"></status>
</kw>
<msg timestamp="20201112 10:14:08.075" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.083" endtime="20201112 10:14:08.095"></status>
</kw>
<msg timestamp="20201112 10:14:08.096" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.081" endtime="20201112 10:14:08.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.098" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.097" endtime="20201112 10:14:08.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.100" endtime="20201112 10:14:08.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.078" endtime="20201112 10:14:08.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.077" endtime="20201112 10:14:08.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.109" endtime="20201112 10:14:08.394"></status>
</kw>
<msg timestamp="20201112 10:14:08.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019210403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019212042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.108" endtime="20201112 10:14:08.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019210403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019212042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.398" endtime="20201112 10:14:08.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.407" endtime="20201112 10:14:08.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.105" endtime="20201112 10:14:08.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.103" endtime="20201112 10:14:08.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.414" level="INFO">${RESULT} = [{'time': 0.019212042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019221389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:08.410" endtime="20201112 10:14:08.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:08.428" level="INFO">${OVERHEAD} = {'source_diff': [1.6389999999977256e-06, 1.6669999999968654e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.653000000000765e...</msg>
<status status="PASS" starttime="20201112 10:14:08.415" endtime="20201112 10:14:08.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.432" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:08.431" endtime="20201112 10:14:08.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.435" level="INFO">VALUE: [1.6389999999977256e-06, 1.6669999999968654e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6520000000012913e-06, 1.6119999999980594e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6380000000017214e-06, 1.6659999999973918e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6380000000017214e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.5979999999984895e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6520000000012913e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.5979999999984895e-06]</msg>
<status status="PASS" starttime="20201112 10:14:08.433" endtime="20201112 10:14:08.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.429" endtime="20201112 10:14:08.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.438" endtime="20201112 10:14:08.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.442" endtime="20201112 10:14:08.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.440" endtime="20201112 10:14:08.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.437" endtime="20201112 10:14:08.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.075" endtime="20201112 10:14:08.463"></status>
</kw>
<msg timestamp="20201112 10:14:08.463" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.471" endtime="20201112 10:14:08.483"></status>
</kw>
<msg timestamp="20201112 10:14:08.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.470" endtime="20201112 10:14:08.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.485" endtime="20201112 10:14:08.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.487" endtime="20201112 10:14:08.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.467" endtime="20201112 10:14:08.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.465" endtime="20201112 10:14:08.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.497" endtime="20201112 10:14:08.786"></status>
</kw>
<msg timestamp="20201112 10:14:08.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018505514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.495" endtime="20201112 10:14:08.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018505514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.790" endtime="20201112 10:14:08.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.799" endtime="20201112 10:14:08.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.492" endtime="20201112 10:14:08.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.490" endtime="20201112 10:14:08.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.806" level="INFO">${RESULT} = [{'time': 0.018507139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018514014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:08.802" endtime="20201112 10:14:08.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:08.821" level="INFO">${OVERHEAD} = {'source_diff': [1.6249999999981557e-06, 1.6529999999972955e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.62499999999815...</msg>
<status status="PASS" starttime="20201112 10:14:08.807" endtime="20201112 10:14:08.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.826" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:08.824" endtime="20201112 10:14:08.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.828" level="INFO">VALUE: [1.6249999999981557e-06, 1.6529999999972955e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.6659999999973918e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6660000000008612e-06]</msg>
<status status="PASS" starttime="20201112 10:14:08.827" endtime="20201112 10:14:08.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.822" endtime="20201112 10:14:08.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.832" endtime="20201112 10:14:08.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.835" endtime="20201112 10:14:08.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.834" endtime="20201112 10:14:08.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.830" endtime="20201112 10:14:08.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.464" endtime="20201112 10:14:08.856"></status>
</kw>
<msg timestamp="20201112 10:14:08.857" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.865" endtime="20201112 10:14:08.876"></status>
</kw>
<msg timestamp="20201112 10:14:08.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.863" endtime="20201112 10:14:08.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.878" endtime="20201112 10:14:08.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.880" endtime="20201112 10:14:08.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.860" endtime="20201112 10:14:08.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.858" endtime="20201112 10:14:08.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.890" endtime="20201112 10:14:09.182"></status>
</kw>
<msg timestamp="20201112 10:14:09.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018572069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018573708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.888" endtime="20201112 10:14:09.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018572069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018573708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.186" endtime="20201112 10:14:09.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.195" endtime="20201112 10:14:09.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.886" endtime="20201112 10:14:09.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.884" endtime="20201112 10:14:09.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.202" level="INFO">${RESULT} = [{'time': 0.018573708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018578681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:09.198" endtime="20201112 10:14:09.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:09.216" level="INFO">${OVERHEAD} = {'source_diff': [1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-...</msg>
<status status="PASS" starttime="20201112 10:14:09.203" endtime="20201112 10:14:09.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.220" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:09.219" endtime="20201112 10:14:09.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.223" level="INFO">VALUE: [1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.6520000000012913e-06, 1.6120000000015289e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.5830000000029154e-06, 1.582999999999446e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.5700000000028191e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6519999999978219e-06, 1.639000000001195e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 10:14:09.221" endtime="20201112 10:14:09.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.217" endtime="20201112 10:14:09.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.226" endtime="20201112 10:14:09.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.230" endtime="20201112 10:14:09.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.228" endtime="20201112 10:14:09.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.225" endtime="20201112 10:14:09.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.857" endtime="20201112 10:14:09.251"></status>
</kw>
<msg timestamp="20201112 10:14:09.251" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.259" endtime="20201112 10:14:09.271"></status>
</kw>
<msg timestamp="20201112 10:14:09.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.258" endtime="20201112 10:14:09.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.273" endtime="20201112 10:14:09.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.276" endtime="20201112 10:14:09.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.255" endtime="20201112 10:14:09.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.253" endtime="20201112 10:14:09.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.285" endtime="20201112 10:14:09.573"></status>
</kw>
<msg timestamp="20201112 10:14:09.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018822333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018823972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.283" endtime="20201112 10:14:09.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018822333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018823972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.578" endtime="20201112 10:14:09.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.586" endtime="20201112 10:14:09.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.281" endtime="20201112 10:14:09.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.279" endtime="20201112 10:14:09.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.593" level="INFO">${RESULT} = [{'time': 0.018823972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018830694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:09.589" endtime="20201112 10:14:09.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:09.607" level="INFO">${OVERHEAD} = {'source_diff': [1.639000000001195e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.5970000000024853e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6529999999972955e-...</msg>
<status status="PASS" starttime="20201112 10:14:09.594" endtime="20201112 10:14:09.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.611" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:09.610" endtime="20201112 10:14:09.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.614" level="INFO">VALUE: [1.639000000001195e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.5970000000024853e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6660000000008612e-06, 1.6799999999969617e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.6380000000017214e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.582999999999446e-06, 1.6809999999999048e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6660000000008612e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6660000000008612e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.5559999999997798e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.5700000000028191e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.6520000000012913e-06]</msg>
<status status="PASS" starttime="20201112 10:14:09.612" endtime="20201112 10:14:09.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.608" endtime="20201112 10:14:09.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.618" endtime="20201112 10:14:09.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.621" endtime="20201112 10:14:09.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.619" endtime="20201112 10:14:09.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.616" endtime="20201112 10:14:09.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.252" endtime="20201112 10:14:09.642"></status>
</kw>
<msg timestamp="20201112 10:14:09.642" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.650" endtime="20201112 10:14:09.663"></status>
</kw>
<msg timestamp="20201112 10:14:09.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.649" endtime="20201112 10:14:09.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.667" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.665" endtime="20201112 10:14:09.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.668" endtime="20201112 10:14:09.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.646" endtime="20201112 10:14:09.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.644" endtime="20201112 10:14:09.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.677" endtime="20201112 10:14:09.967"></status>
</kw>
<msg timestamp="20201112 10:14:09.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.676" endtime="20201112 10:14:09.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.971" endtime="20201112 10:14:09.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.979" endtime="20201112 10:14:09.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.673" endtime="20201112 10:14:09.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.671" endtime="20201112 10:14:09.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.986" level="INFO">${RESULT} = [{'time': 0.018467181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018474361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:09.983" endtime="20201112 10:14:09.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:10.000" level="INFO">${OVERHEAD} = {'source_diff': [1.6389999999977256e-06, 1.6250000000016251e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e...</msg>
<status status="PASS" starttime="20201112 10:14:09.988" endtime="20201112 10:14:10.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.005" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:10.004" endtime="20201112 10:14:10.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.007" level="INFO">VALUE: [1.6389999999977256e-06, 1.6250000000016251e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.7370000000016539e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.6110000000020552e-06, 1.637999999998252e-06, 1.5979999999984895e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.5979999999984895e-06, 1.6520000000012913e-06, 1.6520000000012913e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6660000000008612e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 10:14:10.006" endtime="20201112 10:14:10.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.001" endtime="20201112 10:14:10.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.011" endtime="20201112 10:14:10.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.015" endtime="20201112 10:14:10.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.013" endtime="20201112 10:14:10.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.010" endtime="20201112 10:14:10.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.643" endtime="20201112 10:14:10.036"></status>
</kw>
<msg timestamp="20201112 10:14:10.037" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.045" endtime="20201112 10:14:10.057"></status>
</kw>
<msg timestamp="20201112 10:14:10.058" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.044" endtime="20201112 10:14:10.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.060" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.059" endtime="20201112 10:14:10.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.062" endtime="20201112 10:14:10.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.041" endtime="20201112 10:14:10.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.039" endtime="20201112 10:14:10.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.071" endtime="20201112 10:14:10.363"></status>
</kw>
<msg timestamp="20201112 10:14:10.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019520153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.070" endtime="20201112 10:14:10.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019520153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.367" endtime="20201112 10:14:10.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.376" endtime="20201112 10:14:10.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.067" endtime="20201112 10:14:10.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.065" endtime="20201112 10:14:10.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.382" level="INFO">${RESULT} = [{'time': 0.019521792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019529903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:10.379" endtime="20201112 10:14:10.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:10.398" level="INFO">${OVERHEAD} = {'source_diff': [1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.6109999999985858e-06, 1.653000000000765e-...</msg>
<status status="PASS" starttime="20201112 10:14:10.383" endtime="20201112 10:14:10.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.402" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:10.401" endtime="20201112 10:14:10.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.405" level="INFO">VALUE: [1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.5979999999984895e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.5970000000024853e-06, 1.5979999999984895e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.6389999999977256e-06, 1.6659999999973918e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 10:14:10.403" endtime="20201112 10:14:10.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.399" endtime="20201112 10:14:10.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.408" endtime="20201112 10:14:10.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.412" endtime="20201112 10:14:10.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.410" endtime="20201112 10:14:10.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.407" endtime="20201112 10:14:10.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.037" endtime="20201112 10:14:10.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.543" endtime="20201112 10:14:10.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.438" endtime="20201112 10:14:10.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.436" endtime="20201112 10:14:10.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.434" endtime="20201112 10:14:10.458"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:59.435" endtime="20201112 10:14:10.459" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.467" endtime="20201112 10:14:10.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.465" endtime="20201112 10:14:10.487"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.500" endtime="20201112 10:14:13.532"></status>
</kw>
<msg timestamp="20201112 10:14:13.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.499" endtime="20201112 10:14:13.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.536" endtime="20201112 10:14:13.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.546" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:13.542" endtime="20201112 10:14:13.546"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:10.496" endtime="20201112 10:14:13.548"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:10.493" endtime="20201112 10:14:13.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.492" endtime="20201112 10:14:13.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:13.558" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:13.556" endtime="20201112 10:14:13.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.552" endtime="20201112 10:14:13.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.491" endtime="20201112 10:14:13.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.491" endtime="20201112 10:14:13.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.562" endtime="20201112 10:14:13.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.489" endtime="20201112 10:14:13.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.488" endtime="20201112 10:14:13.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.463" endtime="20201112 10:14:13.568"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.589" endtime="20201112 10:14:13.613"></status>
</kw>
<msg timestamp="20201112 10:14:13.614" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.584" endtime="20201112 10:14:13.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.620" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.616" endtime="20201112 10:14:13.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.622" endtime="20201112 10:14:13.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.578" endtime="20201112 10:14:13.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.574" endtime="20201112 10:14:13.626"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.628" endtime="20201112 10:14:13.630"></status>
</kw>
<msg timestamp="20201112 10:14:13.630" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:13.627" endtime="20201112 10:14:13.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.634" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:13.633" endtime="20201112 10:14:13.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.637" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:13.636" endtime="20201112 10:14:13.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.631" endtime="20201112 10:14:13.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.641" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:13.640" endtime="20201112 10:14:13.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.644" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:13.643" endtime="20201112 10:14:13.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.638" endtime="20201112 10:14:13.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.651" endtime="20201112 10:14:13.943"></status>
</kw>
<msg timestamp="20201112 10:14:13.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.11377375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113777778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:13.650" endtime="20201112 10:14:13.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.11377375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113777778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:13.948" endtime="20201112 10:14:13.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.956" endtime="20201112 10:14:13.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.647" endtime="20201112 10:14:13.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.645" endtime="20201112 10:14:13.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.963" level="INFO">${RESULT} = [{'time': 3.113777778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.028000000211307e-06, 'source_diff': 4.028000000211307e-06}, {'time': 3.113790722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:13.960" endtime="20201112 10:14:13.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:13.977" level="INFO">${OVERHEAD} = {'source_diff': [4.028000000211307e-06, 4.179999999909256e-06, 4.1389999996255256e-06, 4.16699999972181e-06, 4.1659999996390695e-06, 4.208000000005541e-06, 4.194999999818094e-06, 4.180999999991997e-06...</msg>
<status status="PASS" starttime="20201112 10:14:13.964" endtime="20201112 10:14:13.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.982" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 10:14:13.981" endtime="20201112 10:14:13.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.985" level="INFO">VALUE: [4.028000000211307e-06, 4.179999999909256e-06, 4.1389999996255256e-06, 4.16699999972181e-06, 4.1659999996390695e-06, 4.208000000005541e-06, 4.194999999818094e-06, 4.180999999991997e-06, 4.180999999991997e-06, 4.152999999895712e-06, 4.180999999991997e-06, 4.16699999972181e-06, 4.236999999740476e-06, 4.1530000003398015e-06, 4.167000000165899e-06, 4.180999999991997e-06, 4.167000000165899e-06, 4.180999999991997e-06, 4.179999999909256e-06, 4.181000000436086e-06, 4.152000000257061e-06, 4.194000000179443e-06, 4.179999999909256e-06, 4.180999999991997e-06, 4.166000000083159e-06, 4.237000000184565e-06, 4.1800000003533455e-06, 4.167000000165899e-06, 4.166000000083159e-06, 4.137999999986874e-06, 4.166000000083159e-06, 4.16699999972181e-06, 4.16699999972181e-06, 4.1659999996390695e-06, 4.166000000083159e-06, 4.179999999909256e-06, 4.167000000165899e-06, 4.152999999895712e-06, 4.152999999895712e-06, 4.167000000165899e-06, 4.166000000083159e-06, 4.167000000165899e-06, 4.139000000069615e-06, 4.166000000083159e-06, 4.180999999991997e-06, 4.139000000069615e-06, 4.167000000165899e-06, 4.180999999991997e-06, 4.167000000165899e-06, 4.167000000165899e-06]</msg>
<status status="PASS" starttime="20201112 10:14:13.983" endtime="20201112 10:14:13.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.978" endtime="20201112 10:14:13.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.988" endtime="20201112 10:14:13.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.992" endtime="20201112 10:14:14.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.990" endtime="20201112 10:14:14.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.987" endtime="20201112 10:14:14.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.570" endtime="20201112 10:14:14.013"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:10.461" endtime="20201112 10:14:14.013" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.021" endtime="20201112 10:14:14.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.020" endtime="20201112 10:14:14.042"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.056" endtime="20201112 10:14:17.086"></status>
</kw>
<msg timestamp="20201112 10:14:17.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.053" endtime="20201112 10:14:17.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.089" endtime="20201112 10:14:17.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.099" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:17.095" endtime="20201112 10:14:17.100"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:14.051" endtime="20201112 10:14:17.101"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:14.048" endtime="20201112 10:14:17.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.047" endtime="20201112 10:14:17.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:17.111" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:17.109" endtime="20201112 10:14:17.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.105" endtime="20201112 10:14:17.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.046" endtime="20201112 10:14:17.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.046" endtime="20201112 10:14:17.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.115" endtime="20201112 10:14:17.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.044" endtime="20201112 10:14:17.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.042" endtime="20201112 10:14:17.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.018" endtime="20201112 10:14:17.121"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.142" endtime="20201112 10:14:17.210"></status>
</kw>
<msg timestamp="20201112 10:14:17.211" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.138" endtime="20201112 10:14:17.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.214" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.212" endtime="20201112 10:14:17.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.215" endtime="20201112 10:14:17.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.132" endtime="20201112 10:14:17.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.127" endtime="20201112 10:14:17.218"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.220" endtime="20201112 10:14:17.222"></status>
</kw>
<msg timestamp="20201112 10:14:17.222" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:17.219" endtime="20201112 10:14:17.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.227" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:17.226" endtime="20201112 10:14:17.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.229" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:17.228" endtime="20201112 10:14:17.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.223" endtime="20201112 10:14:17.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.234" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:17.233" endtime="20201112 10:14:17.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.236" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:17.235" endtime="20201112 10:14:17.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.231" endtime="20201112 10:14:17.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.244" endtime="20201112 10:14:17.547"></status>
</kw>
<msg timestamp="20201112 10:14:17.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113197042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113232028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.242" endtime="20201112 10:14:17.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113197042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113232028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.552" endtime="20201112 10:14:17.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.560" endtime="20201112 10:14:17.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.239" endtime="20201112 10:14:17.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.238" endtime="20201112 10:14:17.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.567" level="INFO">${RESULT} = [{'time': 3.113232028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.498600000018115e-05, 'source_diff': 3.498600000018115e-05}, {'time': 3.114198653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:17.563" endtime="20201112 10:14:17.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:17.581" level="INFO">${OVERHEAD} = {'source_diff': [3.498600000018115e-05, 3.5070000000025914e-05, 3.505599999975573e-05, 3.5056000000199816e-05, 3.508299999976927e-05, 3.5070000000025914e-05, 3.504199999992963e-05, 3.5070000000025914e...</msg>
<status status="PASS" starttime="20201112 10:14:17.568" endtime="20201112 10:14:17.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.586" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 10:14:17.585" endtime="20201112 10:14:17.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.588" level="INFO">VALUE: [3.498600000018115e-05, 3.5070000000025914e-05, 3.505599999975573e-05, 3.5056000000199816e-05, 3.508299999976927e-05, 3.5070000000025914e-05, 3.504199999992963e-05, 3.5070000000025914e-05, 3.5070000000025914e-05, 3.5070000000025914e-05, 3.498600000018115e-05, 3.5068999999943173e-05, 3.5068999999943173e-05, 3.504199999992963e-05, 3.505499999967299e-05, 3.502800000010353e-05, 3.512500000013574e-05, 3.505499999967299e-05, 3.505499999967299e-05, 3.505599999975573e-05, 3.500000000000725e-05, 3.5070000000025914e-05, 3.5070000000025914e-05, 3.512499999969165e-05, 3.5055000000117076e-05, 3.5068999999943173e-05, 3.500000000000725e-05, 3.5068999999943173e-05, 3.505599999975573e-05, 3.5055000000117076e-05, 3.5068999999943173e-05, 3.505599999975573e-05, 3.5068999999943173e-05, 3.508299999976927e-05, 3.5055000000117076e-05, 3.504199999992963e-05, 3.504099999984689e-05, 3.5055000000117076e-05, 3.5056000000199816e-05, 3.508299999976927e-05, 3.5070000000025914e-05, 3.5070000000025914e-05, 3.498599999973706e-05, 3.504199999992963e-05, 3.5068999999943173e-05, 3.504199999992963e-05, 3.5070000000025914e-05, 3.5068999999943173e-05, 3.5068999999943173e-05, 3.505599999975573e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.587" endtime="20201112 10:14:17.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.582" endtime="20201112 10:14:17.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.592" endtime="20201112 10:14:17.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.595" endtime="20201112 10:14:17.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.594" endtime="20201112 10:14:17.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.590" endtime="20201112 10:14:17.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.122" endtime="20201112 10:14:17.616"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:14.015" endtime="20201112 10:14:17.617" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.625" endtime="20201112 10:14:17.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.623" endtime="20201112 10:14:17.645"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.660" endtime="20201112 10:14:20.688"></status>
</kw>
<msg timestamp="20201112 10:14:20.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.658" endtime="20201112 10:14:20.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.691" endtime="20201112 10:14:20.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.701" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:20.697" endtime="20201112 10:14:20.701"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:17.654" endtime="20201112 10:14:20.703"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:17.652" endtime="20201112 10:14:20.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.651" endtime="20201112 10:14:20.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:20.713" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:20.711" endtime="20201112 10:14:20.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.707" endtime="20201112 10:14:20.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.650" endtime="20201112 10:14:20.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.649" endtime="20201112 10:14:20.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.717" endtime="20201112 10:14:20.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.648" endtime="20201112 10:14:20.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.646" endtime="20201112 10:14:20.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.622" endtime="20201112 10:14:20.723"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.742" endtime="20201112 10:14:20.940"></status>
</kw>
<msg timestamp="20201112 10:14:20.941" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.740" endtime="20201112 10:14:20.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.943" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.942" endtime="20201112 10:14:20.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.944" endtime="20201112 10:14:20.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.736" endtime="20201112 10:14:20.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.731" endtime="20201112 10:14:20.947"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.949" endtime="20201112 10:14:20.951"></status>
</kw>
<msg timestamp="20201112 10:14:20.951" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:20.948" endtime="20201112 10:14:20.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.956" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:20.955" endtime="20201112 10:14:20.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.958" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:20.957" endtime="20201112 10:14:20.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.952" endtime="20201112 10:14:20.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.963" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:20.962" endtime="20201112 10:14:20.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.965" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:20.964" endtime="20201112 10:14:20.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.959" endtime="20201112 10:14:20.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.973" endtime="20201112 10:14:21.276"></status>
</kw>
<msg timestamp="20201112 10:14:21.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110298444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110366167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.972" endtime="20201112 10:14:21.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110298444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110366167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.280" endtime="20201112 10:14:21.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.288" endtime="20201112 10:14:21.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.968" endtime="20201112 10:14:21.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.966" endtime="20201112 10:14:21.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.295" level="INFO">${RESULT} = [{'time': 3.110366167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.77229999999085e-05, 'source_diff': 6.77229999999085e-05}, {'time': 3.113979347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:21.292" endtime="20201112 10:14:21.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:21.312" level="INFO">${OVERHEAD} = {'source_diff': [6.77229999999085e-05, 6.713899999999384e-05, 6.712500000016774e-05, 6.711099999989756e-05, 6.712499999972366e-05, 6.712500000016774e-05, 6.708299999980127e-05, 6.715300000026403e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:21.297" endtime="20201112 10:14:21.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.317" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:21.315" endtime="20201112 10:14:21.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.319" level="INFO">VALUE: [6.77229999999085e-05, 6.713899999999384e-05, 6.712500000016774e-05, 6.711099999989756e-05, 6.712499999972366e-05, 6.712500000016774e-05, 6.708299999980127e-05, 6.715300000026403e-05, 6.713899999999384e-05, 6.713899999999384e-05, 6.713899999999384e-05, 6.713899999999384e-05, 6.712500000016774e-05, 6.709700000007146e-05, 6.712500000016774e-05, 6.712500000016774e-05, 6.712500000016774e-05, 6.712500000016774e-05, 6.712499999972366e-05, 6.711099999989756e-05, 6.712500000016774e-05, 6.711099999989756e-05, 6.715200000018129e-05, 6.713899999999384e-05, 6.708300000024536e-05, 6.712500000016774e-05, 6.712500000016774e-05, 6.713899999999384e-05, 6.712500000016774e-05, 6.712500000016774e-05, 6.712500000016774e-05, 6.71519999997372e-05, 6.711099999989756e-05, 6.71119999999803e-05, 6.712499999972366e-05, 6.719399999965958e-05, 6.713899999999384e-05, 6.711099999989756e-05, 6.71119999999803e-05, 6.711099999989756e-05, 6.716699999964604e-05, 6.716700000009013e-05, 6.712500000016774e-05, 6.712499999972366e-05, 6.713899999999384e-05, 6.708299999980127e-05, 6.711100000034165e-05, 6.711099999989756e-05, 6.711100000034165e-05, 6.712500000016774e-05]</msg>
<status status="PASS" starttime="20201112 10:14:21.318" endtime="20201112 10:14:21.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.313" endtime="20201112 10:14:21.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.323" endtime="20201112 10:14:21.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.327" endtime="20201112 10:14:21.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.325" endtime="20201112 10:14:21.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.321" endtime="20201112 10:14:21.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.726" endtime="20201112 10:14:21.348"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:17.619" endtime="20201112 10:14:21.349" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.357" endtime="20201112 10:14:21.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.355" endtime="20201112 10:14:21.377"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.391" endtime="20201112 10:14:24.420"></status>
</kw>
<msg timestamp="20201112 10:14:24.421" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.390" endtime="20201112 10:14:24.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.423" endtime="20201112 10:14:24.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.434" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:24.429" endtime="20201112 10:14:24.435"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:21.386" endtime="20201112 10:14:24.436"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:21.383" endtime="20201112 10:14:24.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.382" endtime="20201112 10:14:24.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:24.447" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:24.445" endtime="20201112 10:14:24.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.440" endtime="20201112 10:14:24.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.381" endtime="20201112 10:14:24.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.381" endtime="20201112 10:14:24.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.451" endtime="20201112 10:14:24.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.379" endtime="20201112 10:14:24.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.378" endtime="20201112 10:14:24.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.354" endtime="20201112 10:14:24.457"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.479" endtime="20201112 10:14:24.500"></status>
</kw>
<msg timestamp="20201112 10:14:24.500" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.475" endtime="20201112 10:14:24.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.503" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.501" endtime="20201112 10:14:24.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.504" endtime="20201112 10:14:24.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.470" endtime="20201112 10:14:24.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.464" endtime="20201112 10:14:24.507"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.509" endtime="20201112 10:14:24.510"></status>
</kw>
<msg timestamp="20201112 10:14:24.511" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:24.507" endtime="20201112 10:14:24.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.515" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:24.514" endtime="20201112 10:14:24.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.517" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:24.516" endtime="20201112 10:14:24.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.512" endtime="20201112 10:14:24.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.522" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:24.521" endtime="20201112 10:14:24.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.524" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:24.523" endtime="20201112 10:14:24.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.519" endtime="20201112 10:14:24.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.532" endtime="20201112 10:14:24.831"></status>
</kw>
<msg timestamp="20201112 10:14:24.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114285347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.11428625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:24.530" endtime="20201112 10:14:24.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114285347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.11428625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:24.835" endtime="20201112 10:14:24.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.844" endtime="20201112 10:14:24.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.528" endtime="20201112 10:14:24.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.526" endtime="20201112 10:14:24.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.852" level="INFO">${RESULT} = [{'time': 3.11428625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000001075678e-07, 'source_diff': 9.030000001075678e-07}, {'time': 3.114295194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:24.848" endtime="20201112 10:14:24.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:24.865" level="INFO">${OVERHEAD} = {'source_diff': [9.030000001075678e-07, 9.020000000248274e-07, 9.030000001075678e-07, 9.440000003912985e-07, 9.030000001075678e-07, 9.169999999336653e-07, 9.030000001075678e-07, 9.030000001075678e-07,...</msg>
<status status="PASS" starttime="20201112 10:14:24.853" endtime="20201112 10:14:24.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.870" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 10:14:24.869" endtime="20201112 10:14:24.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.873" level="INFO">VALUE: [9.030000001075678e-07, 9.020000000248274e-07, 9.030000001075678e-07, 9.440000003912985e-07, 9.030000001075678e-07, 9.169999999336653e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.020000000248274e-07, 9.029999996634785e-07, 9.020000000248274e-07, 9.020000000248274e-07, 8.879999997546406e-07, 9.310000002038521e-07, 8.750000000112834e-07, 9.020000000248274e-07, 9.300000001211117e-07, 9.030000001075678e-07, 8.890000002814702e-07, 8.890000002814702e-07, 8.890000002814702e-07, 8.88999999837381e-07, 9.020000000248274e-07, 9.160000002950142e-07, 9.029999996634785e-07, 9.030000001075678e-07, 8.750000000112834e-07, 8.890000002814702e-07, 9.029999996634785e-07, 9.169999999336653e-07, 8.750000000112834e-07, 9.169999999336653e-07, 9.169999999336653e-07, 9.030000001075678e-07, 8.890000002814702e-07, 8.470000003590883e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.169999999336653e-07, 9.15999999850925e-07, 9.029999996634785e-07, 9.169999999336653e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.15999999850925e-07, 9.160000002950142e-07, 9.160000002950142e-07, 9.169999999336653e-07, 9.020000000248274e-07]</msg>
<status status="PASS" starttime="20201112 10:14:24.871" endtime="20201112 10:14:24.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.866" endtime="20201112 10:14:24.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.876" endtime="20201112 10:14:24.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.879" endtime="20201112 10:14:24.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.878" endtime="20201112 10:14:24.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.874" endtime="20201112 10:14:24.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.460" endtime="20201112 10:14:24.900"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:21.351" endtime="20201112 10:14:24.901" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.909" endtime="20201112 10:14:24.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.908" endtime="20201112 10:14:24.929"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.943" endtime="20201112 10:14:27.973"></status>
</kw>
<msg timestamp="20201112 10:14:27.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.941" endtime="20201112 10:14:27.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.977" endtime="20201112 10:14:27.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.986" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:27.982" endtime="20201112 10:14:27.987"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:24.938" endtime="20201112 10:14:27.989"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:24.936" endtime="20201112 10:14:27.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.935" endtime="20201112 10:14:27.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:27.999" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:27.998" endtime="20201112 10:14:28.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.993" endtime="20201112 10:14:28.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.934" endtime="20201112 10:14:28.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.933" endtime="20201112 10:14:28.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.004" endtime="20201112 10:14:28.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.932" endtime="20201112 10:14:28.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.930" endtime="20201112 10:14:28.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.906" endtime="20201112 10:14:28.010"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.031" endtime="20201112 10:14:28.101"></status>
</kw>
<msg timestamp="20201112 10:14:28.101" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.028" endtime="20201112 10:14:28.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.104" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.103" endtime="20201112 10:14:28.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.105" endtime="20201112 10:14:28.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.022" endtime="20201112 10:14:28.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.017" endtime="20201112 10:14:28.108"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.110" endtime="20201112 10:14:28.112"></status>
</kw>
<msg timestamp="20201112 10:14:28.112" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:28.109" endtime="20201112 10:14:28.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.117" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:28.115" endtime="20201112 10:14:28.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.119" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:28.118" endtime="20201112 10:14:28.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.113" endtime="20201112 10:14:28.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.124" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:28.123" endtime="20201112 10:14:28.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.126" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:28.125" endtime="20201112 10:14:28.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.120" endtime="20201112 10:14:28.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.133" endtime="20201112 10:14:28.438"></status>
</kw>
<msg timestamp="20201112 10:14:28.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.115052917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.115064861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.132" endtime="20201112 10:14:28.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.115052917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.115064861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.442" endtime="20201112 10:14:28.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.451" endtime="20201112 10:14:28.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.129" endtime="20201112 10:14:28.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.127" endtime="20201112 10:14:28.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.458" level="INFO">${RESULT} = [{'time': 3.115064861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.19440000001525e-05, 'source_diff': 1.19440000001525e-05}, {'time': 3.116037653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:28.454" endtime="20201112 10:14:28.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:28.472" level="INFO">${OVERHEAD} = {'source_diff': [1.19440000001525e-05, 1.1902999999868769e-05, 1.1903000000312858e-05, 1.1875000000216573e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.191700000013895...</msg>
<status status="PASS" starttime="20201112 10:14:28.459" endtime="20201112 10:14:28.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.476" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 10:14:28.475" endtime="20201112 10:14:28.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.479" level="INFO">VALUE: [1.19440000001525e-05, 1.1902999999868769e-05, 1.1903000000312858e-05, 1.1875000000216573e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.1917000000138955e-05, 1.1888999999598582e-05, 1.1889000000042671e-05, 1.1903000000312858e-05, 1.1916000000056215e-05, 1.1889000000042671e-05, 1.1874999999772484e-05, 1.1889000000042671e-05, 1.1902000000230117e-05, 1.1901999999786028e-05, 1.1901999999786028e-05, 1.1902999999868769e-05, 1.1832999999850102e-05, 1.1902999999868769e-05, 1.1916999999694866e-05, 1.1888999999598582e-05, 1.1902000000230117e-05, 1.1889000000042671e-05, 1.1903000000312858e-05, 1.1930999999965053e-05, 1.1902999999868769e-05, 1.1860999999946387e-05, 1.194500000023524e-05, 1.1916999999694866e-05, 1.1917000000138955e-05, 1.1916999999694866e-05, 1.1833999999932843e-05, 1.1889000000042671e-05, 1.1901999999786028e-05, 1.1916000000056215e-05, 1.1889000000042671e-05, 1.1847000000120289e-05, 1.1889000000042671e-05, 1.1860999999946387e-05, 1.1902999999868769e-05, 1.1903000000312858e-05, 1.188799999995993e-05, 1.1889000000042671e-05, 1.1889000000042671e-05, 1.1875000000216573e-05, 1.1860999999946387e-05, 1.188799999995993e-05, 1.1889000000042671e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.478" endtime="20201112 10:14:28.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.472" endtime="20201112 10:14:28.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.482" endtime="20201112 10:14:28.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.486" endtime="20201112 10:14:28.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.484" endtime="20201112 10:14:28.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.481" endtime="20201112 10:14:28.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.012" endtime="20201112 10:14:28.507"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:24.903" endtime="20201112 10:14:28.508" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.516" endtime="20201112 10:14:28.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.514" endtime="20201112 10:14:28.536"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.551" endtime="20201112 10:14:31.582"></status>
</kw>
<msg timestamp="20201112 10:14:31.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.549" endtime="20201112 10:14:31.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.589" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.585" endtime="20201112 10:14:31.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.596" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:31.592" endtime="20201112 10:14:31.596"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:28.546" endtime="20201112 10:14:31.598"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:28.543" endtime="20201112 10:14:31.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.542" endtime="20201112 10:14:31.600"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:31.608" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:31.606" endtime="20201112 10:14:31.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.602" endtime="20201112 10:14:31.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.541" endtime="20201112 10:14:31.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.540" endtime="20201112 10:14:31.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.612" endtime="20201112 10:14:31.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.539" endtime="20201112 10:14:31.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.537" endtime="20201112 10:14:31.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.513" endtime="20201112 10:14:31.618"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.639" endtime="20201112 10:14:31.845"></status>
</kw>
<msg timestamp="20201112 10:14:31.846" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.635" endtime="20201112 10:14:31.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.852" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.849" endtime="20201112 10:14:31.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.854" endtime="20201112 10:14:31.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.629" endtime="20201112 10:14:31.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.624" endtime="20201112 10:14:31.860"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.865" endtime="20201112 10:14:31.869"></status>
</kw>
<msg timestamp="20201112 10:14:31.870" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:31.862" endtime="20201112 10:14:31.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.878" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:31.876" endtime="20201112 10:14:31.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.883" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:31.881" endtime="20201112 10:14:31.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.871" endtime="20201112 10:14:31.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.893" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:31.891" endtime="20201112 10:14:31.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.898" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:31.896" endtime="20201112 10:14:31.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.886" endtime="20201112 10:14:31.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.914" endtime="20201112 10:14:32.220"></status>
</kw>
<msg timestamp="20201112 10:14:32.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.119077931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.119101153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.911" endtime="20201112 10:14:32.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.119077931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.119101153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.224" endtime="20201112 10:14:32.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.232" endtime="20201112 10:14:32.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.905" endtime="20201112 10:14:32.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.901" endtime="20201112 10:14:32.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.239" level="INFO">${RESULT} = [{'time': 3.119101153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3221999999822884e-05, 'source_diff': 2.3221999999822884e-05}, {'time': 3.12273775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:32.235" endtime="20201112 10:14:32.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:32.255" level="INFO">${OVERHEAD} = {'source_diff': [2.3221999999822884e-05, 2.3167000000157145e-05, 2.3207999999996787e-05, 2.3125000000234763e-05, 2.3180999999983243e-05, 2.3207999999996787e-05, 2.3180999999983243e-05, 2.3209000000079...</msg>
<status status="PASS" starttime="20201112 10:14:32.240" endtime="20201112 10:14:32.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.260" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:32.259" endtime="20201112 10:14:32.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.263" level="INFO">VALUE: [2.3221999999822884e-05, 2.3167000000157145e-05, 2.3207999999996787e-05, 2.3125000000234763e-05, 2.3180999999983243e-05, 2.3207999999996787e-05, 2.3180999999983243e-05, 2.3209000000079527e-05, 2.319500000025343e-05, 2.319500000025343e-05, 2.3207999999996787e-05, 2.3167000000157145e-05, 2.31939999997266e-05, 2.323700000017581e-05, 2.3207999999996787e-05, 2.3209000000079527e-05, 2.3207999999996787e-05, 2.319499999980934e-05, 2.3264000000189355e-05, 2.3209000000079527e-05, 2.319500000025343e-05, 2.31939999997266e-05, 2.3207999999996787e-05, 2.3207999999996787e-05, 2.3263999999745266e-05, 2.323600000009307e-05, 2.323600000009307e-05, 2.3180999999983243e-05, 2.3209000000079527e-05, 2.31939999997266e-05, 2.3207999999996787e-05, 2.3207999999996787e-05, 2.3222000000266974e-05, 2.3207999999996787e-05, 2.319499999980934e-05, 2.3222000000266974e-05, 2.319400000017069e-05, 2.3278000000015453e-05, 2.3221999999822884e-05, 2.319499999980934e-05, 2.319499999980934e-05, 2.3207999999996787e-05, 2.3207999999996787e-05, 2.3222000000266974e-05, 2.3179999999900502e-05, 2.3222000000266974e-05, 2.319400000017069e-05, 2.319400000017069e-05, 2.3222999999905625e-05, 2.3207999999996787e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.261" endtime="20201112 10:14:32.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.256" endtime="20201112 10:14:32.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.266" endtime="20201112 10:14:32.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.270" endtime="20201112 10:14:32.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.268" endtime="20201112 10:14:32.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.264" endtime="20201112 10:14:32.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.620" endtime="20201112 10:14:32.291"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:28.510" endtime="20201112 10:14:32.291" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:43.813" endtime="20201112 10:14:32.301"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.374" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:32.382" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:33.538" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:32.373" endtime="20201112 10:14:33.540"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.545" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:33.542" endtime="20201112 10:14:33.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.372" endtime="20201112 10:14:33.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.550" endtime="20201112 10:14:33.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.548" endtime="20201112 10:14:33.735"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.748" endtime="20201112 10:14:36.777"></status>
</kw>
<msg timestamp="20201112 10:14:36.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.746" endtime="20201112 10:14:36.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.780" endtime="20201112 10:14:36.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.791" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:36.786" endtime="20201112 10:14:36.792"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:33.744" endtime="20201112 10:14:36.793"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:33.741" endtime="20201112 10:14:36.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.740" endtime="20201112 10:14:36.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:36.804" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:36.803" endtime="20201112 10:14:36.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.798" endtime="20201112 10:14:36.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.739" endtime="20201112 10:14:36.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.739" endtime="20201112 10:14:36.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.808" endtime="20201112 10:14:36.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.737" endtime="20201112 10:14:36.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.814" endtime="20201112 10:14:36.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.735" endtime="20201112 10:14:36.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.370" endtime="20201112 10:14:36.817"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.827" endtime="20201112 10:14:36.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.825" endtime="20201112 10:14:36.847"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.861" endtime="20201112 10:14:39.890"></status>
</kw>
<msg timestamp="20201112 10:14:39.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.859" endtime="20201112 10:14:39.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.897" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.894" endtime="20201112 10:14:39.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.905" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:39.900" endtime="20201112 10:14:39.906"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:36.856" endtime="20201112 10:14:39.908"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:36.854" endtime="20201112 10:14:39.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.853" endtime="20201112 10:14:39.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:39.918" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:39.916" endtime="20201112 10:14:39.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.912" endtime="20201112 10:14:39.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.852" endtime="20201112 10:14:39.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.851" endtime="20201112 10:14:39.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.922" endtime="20201112 10:14:39.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.850" endtime="20201112 10:14:39.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.848" endtime="20201112 10:14:39.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.822" endtime="20201112 10:14:39.928"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.940" endtime="20201112 10:14:39.956"></status>
</kw>
<msg timestamp="20201112 10:14:39.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.939" endtime="20201112 10:14:39.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.957" endtime="20201112 10:14:39.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.960" endtime="20201112 10:14:39.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.936" endtime="20201112 10:14:39.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.933" endtime="20201112 10:14:39.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.969" endtime="20201112 10:14:40.266"></status>
</kw>
<msg timestamp="20201112 10:14:40.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105667139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105670056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.968" endtime="20201112 10:14:40.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105667139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105670056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.270" endtime="20201112 10:14:40.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.279" endtime="20201112 10:14:40.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.965" endtime="20201112 10:14:40.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.963" endtime="20201112 10:14:40.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.286" level="INFO">${RESULT} = [{'time': 3.105670056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9170000002132213e-06, 'source_diff': 2.9170000002132213e-06}, {'time': 3.105680944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:40.282" endtime="20201112 10:14:40.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.300" level="INFO">${ACCURACY} = {'source_diff': [2.9170000002132213e-06, 2.6250000000338503e-06, 2.596999999937566e-06, 2.3330000002985685e-06, 2.3339999999372196e-06, 2.9440000002267652e-06, 2.6110000002077527e-06, 2.92999999995657...</msg>
<status status="PASS" starttime="20201112 10:14:40.287" endtime="20201112 10:14:40.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.305" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.303" endtime="20201112 10:14:40.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.308" level="INFO">VALUE: [2.9170000002132213e-06, 2.6250000000338503e-06, 2.596999999937566e-06, 2.3330000002985685e-06, 2.3339999999372196e-06, 2.9440000002267652e-06, 2.6110000002077527e-06, 2.9299999999565784e-06, 2.639000000304037e-06, 2.9440000002267652e-06, 3.167000000026121e-06, 2.320000000111122e-06, 2.9719999998789604e-06, 2.9719999998789604e-06, 2.6520000000473942e-06, 2.638999999859948e-06, 3.1800000002135675e-06, 2.943999999782676e-06, 2.931000000039319e-06, 2.6250000000338503e-06, 2.916000000130481e-06, 2.916000000130481e-06, 2.6109999997636635e-06, 2.3330000002985685e-06, 2.943999999782676e-06, 2.916999999769132e-06, 2.3329999998544793e-06, 2.3329999998544793e-06, 2.9029999999430345e-06, 3.2219999996918602e-06, 2.9029999999430345e-06, 2.6250000000338503e-06, 2.931000000039319e-06, 2.3330000002985685e-06, 2.638999999859948e-06, 2.9299999999565784e-06, 2.6250000000338503e-06, 2.3329999998544793e-06, 2.9299999999565784e-06, 2.3339999999372196e-06, 2.6250000000338503e-06, 2.6250000000338503e-06, 2.3609999999507636e-06, 2.916000000130481e-06, 2.3339999999372196e-06, 2.916999999769132e-06, 3.2220000001359494e-06, 2.582999999667379e-06, 2.320000000111122e-06, 2.916000000130481e-06]</msg>
<status status="PASS" starttime="20201112 10:14:40.306" endtime="20201112 10:14:40.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.301" endtime="20201112 10:14:40.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.311" endtime="20201112 10:14:40.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.314" endtime="20201112 10:14:40.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.313" endtime="20201112 10:14:40.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.309" endtime="20201112 10:14:40.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.931" endtime="20201112 10:14:40.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.930" endtime="20201112 10:14:40.336"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.344" endtime="20201112 10:14:40.358"></status>
</kw>
<msg timestamp="20201112 10:14:40.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.343" endtime="20201112 10:14:40.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.360" endtime="20201112 10:14:40.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.362" endtime="20201112 10:14:40.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.340" endtime="20201112 10:14:40.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.338" endtime="20201112 10:14:40.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.373" endtime="20201112 10:14:40.656"></status>
</kw>
<msg timestamp="20201112 10:14:40.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020039222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.371" endtime="20201112 10:14:40.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020039222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.660" endtime="20201112 10:14:40.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.668" endtime="20201112 10:14:40.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.369" endtime="20201112 10:14:40.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.367" endtime="20201112 10:14:40.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.675" level="INFO">${RESULT} = [{'time': 0.020043028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.80600000000203e-06, 'source_diff': 3.80600000000203e-06}, {'time': 0.020054792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:40.672" endtime="20201112 10:14:40.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.690" level="INFO">${ACCURACY} = {'source_diff': [3.80600000000203e-06, 3.8059999999985605e-06, 4.179999999999462e-06, 3.236000000000211e-06, 3.52800000000264e-06, 4.111000000001086e-06, 3.526999999999697e-06, 3.222000000000641e-06, ...</msg>
<status status="PASS" starttime="20201112 10:14:40.677" endtime="20201112 10:14:40.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.695" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.693" endtime="20201112 10:14:40.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.697" level="INFO">VALUE: [3.80600000000203e-06, 3.8059999999985605e-06, 4.179999999999462e-06, 3.236000000000211e-06, 3.52800000000264e-06, 4.111000000001086e-06, 3.526999999999697e-06, 3.222000000000641e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.097000000001516e-06, 3.236000000000211e-06, 3.236000000000211e-06, 4.125000000000656e-06, 3.80600000000203e-06, 3.5559999999983105e-06, 4.111000000001086e-06, 4.125000000000656e-06, 3.833000000001696e-06, 3.818999999998657e-06, 3.1529999999987957e-06, 3.8199999999981304e-06, 4.111000000001086e-06, 3.83400000000117e-06, 3.5139999999996008e-06, 3.833000000001696e-06, 4.179999999999462e-06, 3.249999999999781e-06, 3.832999999998227e-06, 4.139000000000226e-06, 4.152000000000322e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5140000000030702e-06, 3.472000000000891e-06, 3.540999999999267e-06, 4.111000000001086e-06, 3.5139999999996008e-06, 3.5419999999987406e-06, 3.5279999999991707e-06, 4.0699999999983805e-06, 3.52800000000264e-06, 3.8200000000016e-06, 3.8199999999981304e-06, 3.8339999999977e-06, 3.5279999999991707e-06, 3.832999999998227e-06, 3.52800000000264e-06]</msg>
<status status="PASS" starttime="20201112 10:14:40.696" endtime="20201112 10:14:40.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.691" endtime="20201112 10:14:40.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.700" endtime="20201112 10:14:40.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.704" endtime="20201112 10:14:40.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.702" endtime="20201112 10:14:40.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.699" endtime="20201112 10:14:40.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.337" endtime="20201112 10:14:40.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.336" endtime="20201112 10:14:40.725"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.734" endtime="20201112 10:14:40.748"></status>
</kw>
<msg timestamp="20201112 10:14:40.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.733" endtime="20201112 10:14:40.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.750" endtime="20201112 10:14:40.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.752" endtime="20201112 10:14:40.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.730" endtime="20201112 10:14:40.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.728" endtime="20201112 10:14:40.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.763" endtime="20201112 10:14:41.051"></status>
</kw>
<msg timestamp="20201112 10:14:41.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.761" endtime="20201112 10:14:41.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.055" endtime="20201112 10:14:41.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.064" endtime="20201112 10:14:41.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.759" endtime="20201112 10:14:41.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.757" endtime="20201112 10:14:41.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.071" level="INFO">${RESULT} = [{'time': 0.020238889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.020250847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.068" endtime="20201112 10:14:41.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.086" level="INFO">${ACCURACY} = {'source_diff': [5.014000000001101e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.708000000002571e-06, 4.957999999999352e-06, 4.709000000002045e-06, 4.402000000000572e-06, 4.6949999999990055e-06...</msg>
<status status="PASS" starttime="20201112 10:14:41.072" endtime="20201112 10:14:41.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.091" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.090" endtime="20201112 10:14:41.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.093" level="INFO">VALUE: [5.014000000001101e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.708000000002571e-06, 4.957999999999352e-06, 4.709000000002045e-06, 4.402000000000572e-06, 4.6949999999990055e-06, 4.458000000002321e-06, 5.304999999997118e-06, 4.9999999999980616e-06, 4.443999999999282e-06, 5.000000000001531e-06, 5.014000000001101e-06, 4.9999999999980616e-06, 4.707999999999102e-06, 5.014000000001101e-06, 4.416999999999616e-06, 4.737000000001185e-06, 4.416999999999616e-06, 5.027999999997201e-06, 4.680999999999436e-06, 4.723000000001615e-06, 5.028000000000671e-06, 5.306000000000061e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.721999999998672e-06, 4.791999999999991e-06, 4.971999999998922e-06, 4.943999999999782e-06, 4.6949999999990055e-06, 4.125000000000656e-06, 4.416000000000142e-06, 4.430000000003181e-06, 4.403000000000046e-06, 5.028000000000671e-06, 4.179999999999462e-06, 5.028000000000671e-06, 5.028000000000671e-06, 4.152000000000322e-06, 5.0139999999976315e-06, 5.306000000000061e-06, 4.7089999999985754e-06, 5.0139999999976315e-06, 5.028000000000671e-06, 4.416000000000142e-06, 4.7499999999978115e-06, 4.416000000000142e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 10:14:41.092" endtime="20201112 10:14:41.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.087" endtime="20201112 10:14:41.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.097" endtime="20201112 10:14:41.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.100" endtime="20201112 10:14:41.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.099" endtime="20201112 10:14:41.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.095" endtime="20201112 10:14:41.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.726" endtime="20201112 10:14:41.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.725" endtime="20201112 10:14:41.121"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.130" endtime="20201112 10:14:41.145"></status>
</kw>
<msg timestamp="20201112 10:14:41.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.129" endtime="20201112 10:14:41.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.146" endtime="20201112 10:14:41.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.149" endtime="20201112 10:14:41.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.126" endtime="20201112 10:14:41.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.124" endtime="20201112 10:14:41.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.159" endtime="20201112 10:14:41.445"></status>
</kw>
<msg timestamp="20201112 10:14:41.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020173125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020179042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.158" endtime="20201112 10:14:41.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020173125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020179042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.450" endtime="20201112 10:14:41.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.459" endtime="20201112 10:14:41.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.155" endtime="20201112 10:14:41.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.153" endtime="20201112 10:14:41.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.466" level="INFO">${RESULT} = [{'time': 0.020179042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.020191222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.462" endtime="20201112 10:14:41.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.480" level="INFO">${ACCURACY} = {'source_diff': [5.917000000001116e-06, 5.903000000001546e-06, 5.596999999999547e-06, 5.346999999999297e-06, 5.596999999999547e-06, 5.319999999999631e-06, 5.610999999999117e-06, 5.846999999999797e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:41.467" endtime="20201112 10:14:41.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.484" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.483" endtime="20201112 10:14:41.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.487" level="INFO">VALUE: [5.917000000001116e-06, 5.903000000001546e-06, 5.596999999999547e-06, 5.346999999999297e-06, 5.596999999999547e-06, 5.319999999999631e-06, 5.610999999999117e-06, 5.846999999999797e-06, 5.319000000000157e-06, 5.931000000000686e-06, 5.610999999999117e-06, 5.624999999998687e-06, 6.208000000000602e-06, 5.9029999999980765e-06, 5.610999999999117e-06, 5.306000000000061e-06, 5.596999999999547e-06, 5.916000000001642e-06, 6.2090000000000756e-06, 5.610999999999117e-06, 5.319999999999631e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.916999999997646e-06, 6.222000000000172e-06, 5.61199999999859e-06, 5.389000000001476e-06, 5.596999999999547e-06, 5.860999999999367e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.9029999999980765e-06, 5.319000000000157e-06, 5.319999999999631e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 5.610999999999117e-06, 5.903000000001546e-06, 5.610999999999117e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.596999999999547e-06, 5.610999999999117e-06, 6.1529999999983265e-06, 6.194000000001032e-06]</msg>
<status status="PASS" starttime="20201112 10:14:41.485" endtime="20201112 10:14:41.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.481" endtime="20201112 10:14:41.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.490" endtime="20201112 10:14:41.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.494" endtime="20201112 10:14:41.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.492" endtime="20201112 10:14:41.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.488" endtime="20201112 10:14:41.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.122" endtime="20201112 10:14:41.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.122" endtime="20201112 10:14:41.515"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.524" endtime="20201112 10:14:41.538"></status>
</kw>
<msg timestamp="20201112 10:14:41.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.522" endtime="20201112 10:14:41.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.539" endtime="20201112 10:14:41.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.542" endtime="20201112 10:14:41.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.519" endtime="20201112 10:14:41.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.517" endtime="20201112 10:14:41.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.553" endtime="20201112 10:14:41.838"></status>
</kw>
<msg timestamp="20201112 10:14:41.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020001806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.551" endtime="20201112 10:14:41.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020001806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.842" endtime="20201112 10:14:41.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.851" endtime="20201112 10:14:41.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.548" endtime="20201112 10:14:41.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.546" endtime="20201112 10:14:41.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.858" level="INFO">${RESULT} = [{'time': 0.020001806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0980000000005206e-06, 'source_diff': 7.0980000000005206e-06}, {'time': 0.020012972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:41.854" endtime="20201112 10:14:41.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.872" level="INFO">${ACCURACY} = {'source_diff': [7.0980000000005206e-06, 6.7779999999989515e-06, 6.151999999998853e-06, 6.512999999999658e-06, 6.139000000002226e-06, 6.806000000001561e-06, 6.806000000001561e-06, 7.0829999999980076e-...</msg>
<status status="PASS" starttime="20201112 10:14:41.859" endtime="20201112 10:14:41.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.877" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.875" endtime="20201112 10:14:41.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.879" level="INFO">VALUE: [7.0980000000005206e-06, 6.7779999999989515e-06, 6.151999999998853e-06, 6.512999999999658e-06, 6.139000000002226e-06, 6.806000000001561e-06, 6.806000000001561e-06, 7.0829999999980076e-06, 6.513999999999132e-06, 6.429999999998243e-06, 6.790999999999048e-06, 6.806000000001561e-06, 6.499999999999562e-06, 6.7779999999989515e-06, 6.847000000000797e-06, 6.833000000001227e-06, 6.499999999999562e-06, 6.805999999998091e-06, 6.514000000002601e-06, 6.526999999999228e-06, 7.070000000001381e-06, 6.1389999999987566e-06, 7.084000000000951e-06, 6.804999999998618e-06, 6.499999999999562e-06, 7.097000000001047e-06, 6.485999999999992e-06, 6.764000000002851e-06, 7.083000000001477e-06, 6.790999999999048e-06, 6.792000000001991e-06, 7.125000000000187e-06, 6.485999999999992e-06, 6.7919999999985214e-06, 6.7919999999985214e-06, 7.013999999999632e-06, 7.125000000000187e-06, 6.485999999999992e-06, 6.805000000002087e-06, 7.084000000000951e-06, 6.2090000000000756e-06, 7.097000000001047e-06, 6.513999999999132e-06, 7.097000000001047e-06, 7.125000000000187e-06, 6.7919999999985214e-06, 6.7919999999985214e-06, 7.111000000000617e-06, 6.513999999999132e-06, 7.151999999999853e-06]</msg>
<status status="PASS" starttime="20201112 10:14:41.878" endtime="20201112 10:14:41.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.873" endtime="20201112 10:14:41.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.882" endtime="20201112 10:14:41.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.886" endtime="20201112 10:14:41.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.884" endtime="20201112 10:14:41.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.881" endtime="20201112 10:14:41.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.516" endtime="20201112 10:14:41.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.515" endtime="20201112 10:14:41.907"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.916" endtime="20201112 10:14:41.931"></status>
</kw>
<msg timestamp="20201112 10:14:41.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.915" endtime="20201112 10:14:41.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.933" endtime="20201112 10:14:41.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.936" endtime="20201112 10:14:41.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.912" endtime="20201112 10:14:41.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.910" endtime="20201112 10:14:41.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.947" endtime="20201112 10:14:42.232"></status>
</kw>
<msg timestamp="20201112 10:14:42.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020573, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020580681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:41.945" endtime="20201112 10:14:42.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020573, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020580681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:42.236" endtime="20201112 10:14:42.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.245" endtime="20201112 10:14:42.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.943" endtime="20201112 10:14:42.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.941" endtime="20201112 10:14:42.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.252" level="INFO">${RESULT} = [{'time': 0.020580681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.020591792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.248" endtime="20201112 10:14:42.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.266" level="INFO">${ACCURACY} = {'source_diff': [7.680999999998966e-06, 7.681000000002436e-06, 7.097000000001047e-06, 7.402999999999577e-06, 7.693999999999063e-06, 7.985999999998022e-06, 7.110999999997147e-06, 7.429999999999243e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:42.253" endtime="20201112 10:14:42.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.270" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.269" endtime="20201112 10:14:42.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.273" level="INFO">VALUE: [7.680999999998966e-06, 7.681000000002436e-06, 7.097000000001047e-06, 7.402999999999577e-06, 7.693999999999063e-06, 7.985999999998022e-06, 7.110999999997147e-06, 7.429999999999243e-06, 7.402999999999577e-06, 7.972000000001922e-06, 7.665999999999923e-06, 7.986000000001492e-06, 8.277000000000978e-06, 8.291000000000548e-06, 8.291000000000548e-06, 7.971999999998453e-06, 7.402999999999577e-06, 7.625000000000687e-06, 8.028000000000202e-06, 7.415999999999673e-06, 7.403000000003046e-06, 7.986000000001492e-06, 7.681000000002436e-06, 7.694999999998536e-06, 7.986000000001492e-06, 7.389000000000007e-06, 7.694999999998536e-06, 7.986999999997496e-06, 7.680999999998966e-06, 7.375000000000437e-06, 7.943999999999313e-06, 7.986000000001492e-06, 7.999999999997592e-06, 7.402999999999577e-06, 7.679999999999493e-06, 7.971999999998453e-06, 7.375000000000437e-06, 7.693999999999063e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.986000000001492e-06, 8.305000000000118e-06, 7.972000000001922e-06, 7.987000000000966e-06, 8.000000000001062e-06, 7.972000000001922e-06, 7.389000000000007e-06, 7.986000000001492e-06, 7.681000000002436e-06, 7.972000000001922e-06]</msg>
<status status="PASS" starttime="20201112 10:14:42.271" endtime="20201112 10:14:42.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.267" endtime="20201112 10:14:42.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.276" endtime="20201112 10:14:42.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.280" endtime="20201112 10:14:42.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.278" endtime="20201112 10:14:42.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.274" endtime="20201112 10:14:42.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.908" endtime="20201112 10:14:42.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.908" endtime="20201112 10:14:42.301"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.310" endtime="20201112 10:14:42.325"></status>
</kw>
<msg timestamp="20201112 10:14:42.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.308" endtime="20201112 10:14:42.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.327" endtime="20201112 10:14:42.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.329" endtime="20201112 10:14:42.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.306" endtime="20201112 10:14:42.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.303" endtime="20201112 10:14:42.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.340" endtime="20201112 10:14:42.626"></status>
</kw>
<msg timestamp="20201112 10:14:42.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.338" endtime="20201112 10:14:42.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.630" endtime="20201112 10:14:42.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.639" endtime="20201112 10:14:42.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.336" endtime="20201112 10:14:42.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.334" endtime="20201112 10:14:42.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.646" level="INFO">${RESULT} = [{'time': 0.020079819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.020098639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.643" endtime="20201112 10:14:42.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.661" level="INFO">${ACCURACY} = {'source_diff': [8.860999999998898e-06, 8.875000000001937e-06, 8.582999999999508e-06, 8.290999999997078e-06, 9.208000000000133e-06, 8.264000000000882e-06, 8.860999999998898e-06, 8.582999999999508e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:42.647" endtime="20201112 10:14:42.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.666" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.665" endtime="20201112 10:14:42.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.668" level="INFO">VALUE: [8.860999999998898e-06, 8.875000000001937e-06, 8.582999999999508e-06, 8.290999999997078e-06, 9.208000000000133e-06, 8.264000000000882e-06, 8.860999999998898e-06, 8.582999999999508e-06, 8.262999999997939e-06, 9.167000000000897e-06, 8.249999999997842e-06, 8.34800000000177e-06, 9.096999999999578e-06, 8.58400000000245e-06, 8.874999999998467e-06, 8.276999999997509e-06, 8.875000000001937e-06, 8.86200000000184e-06, 8.889000000001507e-06, 8.861000000002367e-06, 9.180999999996997e-06, 8.597000000002547e-06, 9.180999999996997e-06, 9.194000000000563e-06, 8.292000000000022e-06, 8.582999999999508e-06, 8.568999999999938e-06, 9.194000000000563e-06, 8.291000000000548e-06, 8.583999999998981e-06, 8.888999999998037e-06, 8.570000000002881e-06, 8.888999999998037e-06, 8.305000000000118e-06, 8.583999999998981e-06, 8.318999999999688e-06, 8.860999999998898e-06, 8.596999999999078e-06, 8.583000000002977e-06, 9.179999999997523e-06, 8.888999999998037e-06, 9.165999999997954e-06, 8.874999999998467e-06, 8.596999999999078e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.888000000002033e-06, 8.291000000000548e-06, 8.582999999999508e-06, 8.569999999999411e-06]</msg>
<status status="PASS" starttime="20201112 10:14:42.667" endtime="20201112 10:14:42.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.662" endtime="20201112 10:14:42.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.671" endtime="20201112 10:14:42.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.675" endtime="20201112 10:14:42.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.673" endtime="20201112 10:14:42.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.670" endtime="20201112 10:14:42.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.302" endtime="20201112 10:14:42.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.301" endtime="20201112 10:14:42.696"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.706" endtime="20201112 10:14:42.719"></status>
</kw>
<msg timestamp="20201112 10:14:42.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.704" endtime="20201112 10:14:42.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.721" endtime="20201112 10:14:42.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.723" endtime="20201112 10:14:42.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.701" endtime="20201112 10:14:42.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.699" endtime="20201112 10:14:42.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.734" endtime="20201112 10:14:43.021"></status>
</kw>
<msg timestamp="20201112 10:14:43.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020839, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020849097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:42.732" endtime="20201112 10:14:43.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020839, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020849097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:43.025" endtime="20201112 10:14:43.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.034" endtime="20201112 10:14:43.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.730" endtime="20201112 10:14:43.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.728" endtime="20201112 10:14:43.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.041" level="INFO">${RESULT} = [{'time': 0.020849097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.020864194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:43.037" endtime="20201112 10:14:43.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.055" level="INFO">${ACCURACY} = {'source_diff': [1.0097000000000578e-05, 9.762999999999439e-06, 1.0070000000000912e-05, 1.0056000000001342e-05, 9.777999999998482e-06, 9.778000000001952e-06, 1.0069000000001438e-05, 1.0069000000001438...</msg>
<status status="PASS" starttime="20201112 10:14:43.042" endtime="20201112 10:14:43.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.059" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.058" endtime="20201112 10:14:43.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.062" level="INFO">VALUE: [1.0097000000000578e-05, 9.762999999999439e-06, 1.0070000000000912e-05, 1.0056000000001342e-05, 9.777999999998482e-06, 9.778000000001952e-06, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0055999999997872e-05, 9.471999999999953e-06, 9.695000000000537e-06, 1.0027999999998732e-05, 1.0153000000002327e-05, 9.181000000000467e-06, 1.0083000000001008e-05, 1.0069000000001438e-05, 9.471999999999953e-06, 1.0069000000001438e-05, 1.0041999999998302e-05, 1.0056000000001342e-05, 9.485999999999523e-06, 9.485999999999523e-06, 9.471999999999953e-06, 9.195000000000036e-06, 1.0083000000001008e-05, 1.0098000000000051e-05, 9.791999999998052e-06, 9.167000000000897e-06, 9.195000000000036e-06, 9.499999999999093e-06, 9.777999999998482e-06, 1.0055999999997872e-05, 9.485999999999523e-06, 9.485999999999523e-06, 9.485999999999523e-06, 1.0083000000001008e-05, 9.777999999998482e-06, 9.763999999998912e-06, 9.763999999998912e-06, 9.471999999999953e-06, 9.485999999999523e-06, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0068999999997968e-05, 9.458000000000383e-06, 9.471999999999953e-06, 9.694999999997067e-06, 9.458000000000383e-06, 1.0068999999997968e-05, 9.458999999999856e-06]</msg>
<status status="PASS" starttime="20201112 10:14:43.061" endtime="20201112 10:14:43.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.056" endtime="20201112 10:14:43.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.065" endtime="20201112 10:14:43.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.069" endtime="20201112 10:14:43.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.067" endtime="20201112 10:14:43.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.063" endtime="20201112 10:14:43.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.697" endtime="20201112 10:14:43.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.696" endtime="20201112 10:14:43.090"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.099" endtime="20201112 10:14:43.113"></status>
</kw>
<msg timestamp="20201112 10:14:43.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.098" endtime="20201112 10:14:43.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.114" endtime="20201112 10:14:43.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.117" endtime="20201112 10:14:43.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.095" endtime="20201112 10:14:43.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.093" endtime="20201112 10:14:43.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.127" endtime="20201112 10:14:43.416"></status>
</kw>
<msg timestamp="20201112 10:14:43.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020348458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020358847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.126" endtime="20201112 10:14:43.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020348458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020358847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.420" endtime="20201112 10:14:43.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.429" endtime="20201112 10:14:43.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.123" endtime="20201112 10:14:43.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.121" endtime="20201112 10:14:43.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.436" level="INFO">${RESULT} = [{'time': 0.020358847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.020371986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:43.432" endtime="20201112 10:14:43.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.450" level="INFO">${ACCURACY} = {'source_diff': [1.0388999999999537e-05, 1.0680000000002493e-05, 1.0958000000001883e-05, 1.0681000000001967e-05, 1.0957999999998413e-05, 1.0347999999996832e-05, 1.0374999999999968e-05, 1.0333000000001...</msg>
<status status="PASS" starttime="20201112 10:14:43.437" endtime="20201112 10:14:43.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.455" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.454" endtime="20201112 10:14:43.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.457" level="INFO">VALUE: [1.0388999999999537e-05, 1.0680000000002493e-05, 1.0958000000001883e-05, 1.0681000000001967e-05, 1.0957999999998413e-05, 1.0347999999996832e-05, 1.0374999999999968e-05, 1.0333000000001258e-05, 1.0347999999996832e-05, 1.1264000000000413e-05, 1.0332999999997788e-05, 1.1318999999999219e-05, 1.0638999999999788e-05, 1.0347999999996832e-05, 1.0987000000000496e-05, 1.0333000000001258e-05, 1.0625000000000218e-05, 1.0957999999998413e-05, 1.0361000000000398e-05, 1.0681000000001967e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0611000000000648e-05, 1.0374999999999968e-05, 1.0957999999998413e-05, 1.0374999999999968e-05, 1.0667000000002397e-05, 1.0666999999998927e-05, 1.0361000000000398e-05, 1.0986000000001023e-05, 1.0666999999998927e-05, 1.1264000000000413e-05, 1.0957999999998413e-05, 1.0374999999999968e-05, 1.0348000000000301e-05, 1.0597000000001078e-05, 1.0652999999999357e-05, 1.1264000000000413e-05, 1.0680000000002493e-05, 1.0972000000001453e-05, 1.0986000000001023e-05, 1.0958000000001883e-05, 1.1000000000000593e-05, 1.0666999999998927e-05, 1.0625000000000218e-05, 1.0972000000001453e-05, 1.0333000000001258e-05, 1.0680000000002493e-05, 1.0679999999999024e-05, 1.0374999999999968e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.456" endtime="20201112 10:14:43.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.451" endtime="20201112 10:14:43.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.461" endtime="20201112 10:14:43.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.465" endtime="20201112 10:14:43.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.463" endtime="20201112 10:14:43.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.459" endtime="20201112 10:14:43.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.091" endtime="20201112 10:14:43.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.091" endtime="20201112 10:14:43.486"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.495" endtime="20201112 10:14:43.509"></status>
</kw>
<msg timestamp="20201112 10:14:43.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.493" endtime="20201112 10:14:43.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.510" endtime="20201112 10:14:43.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.513" endtime="20201112 10:14:43.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.491" endtime="20201112 10:14:43.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.488" endtime="20201112 10:14:43.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.523" endtime="20201112 10:14:43.810"></status>
</kw>
<msg timestamp="20201112 10:14:43.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02018675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:43.522" endtime="20201112 10:14:43.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02018675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:43.814" endtime="20201112 10:14:43.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.823" endtime="20201112 10:14:43.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.519" endtime="20201112 10:14:43.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.517" endtime="20201112 10:14:43.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.830" level="INFO">${RESULT} = [{'time': 0.020198611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.020213389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:43.826" endtime="20201112 10:14:43.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.844" level="INFO">${ACCURACY} = {'source_diff': [1.1861000000001898e-05, 1.1277999999999982e-05, 1.1541999999999802e-05, 1.1860999999998428e-05, 1.1264000000000413e-05, 1.1875000000001468e-05, 1.2097999999998582e-05, 1.1305999999999...</msg>
<status status="PASS" starttime="20201112 10:14:43.831" endtime="20201112 10:14:43.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.848" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.847" endtime="20201112 10:14:43.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.851" level="INFO">VALUE: [1.1861000000001898e-05, 1.1277999999999982e-05, 1.1541999999999802e-05, 1.1860999999998428e-05, 1.1264000000000413e-05, 1.1875000000001468e-05, 1.2097999999998582e-05, 1.1305999999999122e-05, 1.1583999999998512e-05, 1.1555999999999372e-05, 1.2138999999997818e-05, 1.1555999999999372e-05, 1.1264000000000413e-05, 1.1805999999999622e-05, 1.1596999999998608e-05, 1.1582999999999039e-05, 1.1235999999997803e-05, 1.1846999999998858e-05, 1.1541999999999802e-05, 1.1832999999999289e-05, 1.2166000000000954e-05, 1.1861000000001898e-05, 1.2124999999998248e-05, 1.2153000000000858e-05, 1.1777000000001009e-05, 1.1541999999999802e-05, 1.1582999999999039e-05, 1.1861000000001898e-05, 1.2124999999998248e-05, 1.2152000000001384e-05, 1.1582999999999039e-05, 1.1277999999999982e-05, 1.1568999999999469e-05, 1.2166000000000954e-05, 1.1264000000000413e-05, 1.1860999999998428e-05, 1.1264000000000413e-05, 1.1861000000001898e-05, 1.1333999999998262e-05, 1.1554999999999899e-05, 1.2167000000000427e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1570000000002412e-05, 1.1264000000000413e-05, 1.2194000000000094e-05, 1.1264000000000413e-05, 1.1805000000000149e-05, 1.1860999999998428e-05, 1.1541999999999802e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.850" endtime="20201112 10:14:43.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.845" endtime="20201112 10:14:43.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.855" endtime="20201112 10:14:43.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.858" endtime="20201112 10:14:43.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.857" endtime="20201112 10:14:43.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.853" endtime="20201112 10:14:43.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.487" endtime="20201112 10:14:43.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.486" endtime="20201112 10:14:43.879"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.888" endtime="20201112 10:14:43.902"></status>
</kw>
<msg timestamp="20201112 10:14:43.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.887" endtime="20201112 10:14:43.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.904" endtime="20201112 10:14:43.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.907" endtime="20201112 10:14:43.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.884" endtime="20201112 10:14:43.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.882" endtime="20201112 10:14:43.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.917" endtime="20201112 10:14:44.203"></status>
</kw>
<msg timestamp="20201112 10:14:44.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020207181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02022025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:43.915" endtime="20201112 10:14:44.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020207181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02022025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:44.208" endtime="20201112 10:14:44.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.216" endtime="20201112 10:14:44.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.913" endtime="20201112 10:14:44.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.911" endtime="20201112 10:14:44.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.223" level="INFO">${RESULT} = [{'time': 0.02022025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.30689999999975e-05, 'source_diff': 1.30689999999975e-05}, {'time': 0.020242208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:44.220" endtime="20201112 10:14:44.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.238" level="INFO">${ACCURACY} = {'source_diff': [1.30689999999975e-05, 1.3069000000000969e-05, 1.2750000000002343e-05, 1.3042000000001303e-05, 1.2457999999999914e-05, 1.277699999999854e-05, 1.3042000000001303e-05, 1.3124999999999248...</msg>
<status status="PASS" starttime="20201112 10:14:44.224" endtime="20201112 10:14:44.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.243" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.242" endtime="20201112 10:14:44.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.246" level="INFO">VALUE: [1.30689999999975e-05, 1.3069000000000969e-05, 1.2750000000002343e-05, 1.3042000000001303e-05, 1.2457999999999914e-05, 1.277699999999854e-05, 1.3042000000001303e-05, 1.3124999999999248e-05, 1.3124999999999248e-05, 1.2444000000000344e-05, 1.3097000000000109e-05, 1.2444000000000344e-05, 1.2180000000000524e-05, 1.2138000000001814e-05, 1.2486000000002523e-05, 1.2499999999998623e-05, 1.2235999999998803e-05, 1.3055999999997403e-05, 1.2457999999999914e-05, 1.2735999999999303e-05, 1.3070000000000442e-05, 1.3347999999999832e-05, 1.304099999999836e-05, 1.2152999999997388e-05, 1.3069000000000969e-05, 1.2721999999999734e-05, 1.2736000000002773e-05, 1.2736999999998777e-05, 1.3346999999996889e-05, 1.2820000000000192e-05, 1.3028000000001733e-05, 1.2457999999999914e-05, 1.2777999999998013e-05, 1.2417000000000677e-05, 1.3013999999998693e-05, 1.2806000000000622e-05, 1.2444999999999817e-05, 1.2721999999999734e-05, 1.3056000000000872e-05, 1.2695000000000067e-05, 1.2749999999998873e-05, 1.2430000000000774e-05, 1.2735999999999303e-05, 1.3069000000000969e-05, 1.2737000000002247e-05, 1.2500000000002093e-05, 1.2513999999998193e-05, 1.2153000000000858e-05, 1.3013999999998693e-05, 1.3042000000001303e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.244" endtime="20201112 10:14:44.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.239" endtime="20201112 10:14:44.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.249" endtime="20201112 10:14:44.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.253" endtime="20201112 10:14:44.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.251" endtime="20201112 10:14:44.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.248" endtime="20201112 10:14:44.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.880" endtime="20201112 10:14:44.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.880" endtime="20201112 10:14:44.274"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.283" endtime="20201112 10:14:44.298"></status>
</kw>
<msg timestamp="20201112 10:14:44.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.281" endtime="20201112 10:14:44.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.299" endtime="20201112 10:14:44.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.302" endtime="20201112 10:14:44.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.279" endtime="20201112 10:14:44.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.277" endtime="20201112 10:14:44.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.312" endtime="20201112 10:14:44.598"></status>
</kw>
<msg timestamp="20201112 10:14:44.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.311" endtime="20201112 10:14:44.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.602" endtime="20201112 10:14:44.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.611" endtime="20201112 10:14:44.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.308" endtime="20201112 10:14:44.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.306" endtime="20201112 10:14:44.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.618" level="INFO">${RESULT} = [{'time': 0.020047875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.020068931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:44.614" endtime="20201112 10:14:44.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.631" level="INFO">${ACCURACY} = {'source_diff': [1.3693999999998124e-05, 1.3625000000003218e-05, 1.3374999999999498e-05, 1.3930999999998278e-05, 1.3347999999999832e-05, 1.3333000000000789e-05, 1.4000000000000123e-05, 1.3957999999997...</msg>
<status status="PASS" starttime="20201112 10:14:44.619" endtime="20201112 10:14:44.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.636" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.635" endtime="20201112 10:14:44.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.639" level="INFO">VALUE: [1.3693999999998124e-05, 1.3625000000003218e-05, 1.3374999999999498e-05, 1.3930999999998278e-05, 1.3347999999999832e-05, 1.3333000000000789e-05, 1.4000000000000123e-05, 1.3957999999997944e-05, 1.3347999999999832e-05, 1.3945000000001317e-05, 1.3930999999998278e-05, 1.3347000000000359e-05, 1.3639000000002788e-05, 1.4236000000000804e-05, 1.3347000000000359e-05, 1.3360999999999928e-05, 1.3347000000000359e-05, 1.3347000000000359e-05, 1.3639000000002788e-05, 1.3944999999997848e-05, 1.3360999999999928e-05, 1.3666999999998458e-05, 1.3347000000000359e-05, 1.3611000000000179e-05, 1.3347000000000359e-05, 1.3709000000000637e-05, 1.4236000000000804e-05, 1.3722000000000734e-05, 1.3624999999999748e-05, 1.3360999999999928e-05, 1.3971999999997514e-05, 1.3596999999997139e-05, 1.3736000000000304e-05, 1.3347000000000359e-05, 1.3360999999999928e-05, 1.3389000000002538e-05, 1.3637999999999845e-05, 1.3347000000000359e-05, 1.3944000000001844e-05, 1.3638999999999318e-05, 1.3957999999997944e-05, 1.3652000000002884e-05, 1.3958000000001414e-05, 1.3652999999998888e-05, 1.4236000000000804e-05, 1.4221999999997764e-05, 1.3958000000001414e-05, 1.3637999999999845e-05, 1.3333000000000789e-05, 1.3666999999998458e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.637" endtime="20201112 10:14:44.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.632" endtime="20201112 10:14:44.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.643" endtime="20201112 10:14:44.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.646" endtime="20201112 10:14:44.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.645" endtime="20201112 10:14:44.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.641" endtime="20201112 10:14:44.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.275" endtime="20201112 10:14:44.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.274" endtime="20201112 10:14:44.667"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.676" endtime="20201112 10:14:44.691"></status>
</kw>
<msg timestamp="20201112 10:14:44.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.675" endtime="20201112 10:14:44.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.693" endtime="20201112 10:14:44.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.695" endtime="20201112 10:14:44.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.672" endtime="20201112 10:14:44.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.670" endtime="20201112 10:14:44.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.706" endtime="20201112 10:14:44.991"></status>
</kw>
<msg timestamp="20201112 10:14:44.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020184069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.704" endtime="20201112 10:14:44.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020184069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.996" endtime="20201112 10:14:45.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.004" endtime="20201112 10:14:45.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.701" endtime="20201112 10:14:45.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.699" endtime="20201112 10:14:45.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.011" level="INFO">${RESULT} = [{'time': 0.020184069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4235999999997334e-05, 'source_diff': 1.4235999999997334e-05}, {'time': 0.020202194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:45.008" endtime="20201112 10:14:45.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.025" level="INFO">${ACCURACY} = {'source_diff': [1.4235999999997334e-05, 1.4861000000001429e-05, 1.454099999999986e-05, 1.4541999999999333e-05, 1.4541999999999333e-05, 1.4471999999998014e-05, 1.5138999999997349e-05, 1.48330000000022...</msg>
<status status="PASS" starttime="20201112 10:14:45.012" endtime="20201112 10:14:45.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.030" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.029" endtime="20201112 10:14:45.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.032" level="INFO">VALUE: [1.4235999999997334e-05, 1.4861000000001429e-05, 1.454099999999986e-05, 1.4541999999999333e-05, 1.4541999999999333e-05, 1.4471999999998014e-05, 1.5138999999997349e-05, 1.4833000000002289e-05, 1.4527999999999763e-05, 1.4541999999999333e-05, 1.5166999999999958e-05, 1.5139000000000818e-05, 1.4527999999999763e-05, 1.483299999999882e-05, 1.4514000000000193e-05, 1.4833000000002289e-05, 1.4833000000002289e-05, 1.4541999999999333e-05, 1.4541999999999333e-05, 1.4791999999999583e-05, 1.4541999999999333e-05, 1.4833000000002289e-05, 1.5124999999997779e-05, 1.5153000000000388e-05, 1.5180999999999528e-05, 1.4237000000000277e-05, 1.4237000000000277e-05, 1.4250000000000373e-05, 1.4237000000000277e-05, 1.4250000000000373e-05, 1.4151999999999915e-05, 1.4833999999998293e-05, 1.4236000000000804e-05, 1.4527999999999763e-05, 1.4556000000002373e-05, 1.4527999999999763e-05, 1.4250000000000373e-05, 1.4861000000001429e-05, 1.4250000000000373e-05, 1.5111000000001679e-05, 1.455499999999943e-05, 1.4847999999997863e-05, 1.4791999999999583e-05, 1.4541999999999333e-05, 1.4250000000000373e-05, 1.481899999999925e-05, 1.4541999999999333e-05, 1.5111000000001679e-05, 1.484699999999839e-05, 1.4457999999998444e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.031" endtime="20201112 10:14:45.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.026" endtime="20201112 10:14:45.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.043" endtime="20201112 10:14:45.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.046" endtime="20201112 10:14:45.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.045" endtime="20201112 10:14:45.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.041" endtime="20201112 10:14:45.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.668" endtime="20201112 10:14:45.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.668" endtime="20201112 10:14:45.068"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.077" endtime="20201112 10:14:45.091"></status>
</kw>
<msg timestamp="20201112 10:14:45.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.075" endtime="20201112 10:14:45.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.093" endtime="20201112 10:14:45.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.095" endtime="20201112 10:14:45.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.072" endtime="20201112 10:14:45.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.070" endtime="20201112 10:14:45.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.106" endtime="20201112 10:14:45.391"></status>
</kw>
<msg timestamp="20201112 10:14:45.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02020475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:45.104" endtime="20201112 10:14:45.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02020475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:45.395" endtime="20201112 10:14:45.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.404" endtime="20201112 10:14:45.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.101" endtime="20201112 10:14:45.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.100" endtime="20201112 10:14:45.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.411" level="INFO">${RESULT} = [{'time': 0.02020475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6028000000001263e-05, 'source_diff': 1.6028000000001263e-05}, {'time': 0.020228958, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:45.407" endtime="20201112 10:14:45.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.424" level="INFO">${ACCURACY} = {'source_diff': [1.6028000000001263e-05, 1.6013999999998224e-05, 1.5457999999999444e-05, 1.633300000000032e-05, 1.5430999999999778e-05, 1.5430999999999778e-05, 1.541700000000021e-05, 1.604200000000083...</msg>
<status status="PASS" starttime="20201112 10:14:45.412" endtime="20201112 10:14:45.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.429" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.428" endtime="20201112 10:14:45.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.432" level="INFO">VALUE: [1.6028000000001263e-05, 1.6013999999998224e-05, 1.5457999999999444e-05, 1.633300000000032e-05, 1.5430999999999778e-05, 1.5430999999999778e-05, 1.541700000000021e-05, 1.6042000000000833e-05, 1.5444999999999348e-05, 1.5430999999999778e-05, 1.5736000000002304e-05, 1.5763999999997974e-05, 1.631900000000075e-05, 1.5430000000000305e-05, 1.5694000000000125e-05, 1.6264000000001944e-05, 1.6028000000001263e-05, 1.5153000000000388e-05, 1.5430999999999778e-05, 1.6042000000000833e-05, 1.6027999999997794e-05, 1.5722999999998738e-05, 1.5431000000003248e-05, 1.5430999999999778e-05, 1.5749999999998404e-05, 1.5459000000002387e-05, 1.5721999999999264e-05, 1.5721999999999264e-05, 1.6028000000001263e-05, 1.5430999999999778e-05, 1.6027999999997794e-05, 1.5749999999998404e-05, 1.6320000000000223e-05, 1.6028000000001263e-05, 1.5722999999998738e-05, 1.6013999999998224e-05, 1.5999999999998654e-05, 1.604100000000136e-05, 1.541700000000021e-05, 1.5430999999999778e-05, 1.5722000000002734e-05, 1.5430000000000305e-05, 1.6027999999997794e-05, 1.579100000000111e-05, 1.5722000000002734e-05, 1.602699999999832e-05, 1.5430999999999778e-05, 1.5749999999998404e-05, 1.6028000000001263e-05, 1.6028000000001263e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.430" endtime="20201112 10:14:45.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.425" endtime="20201112 10:14:45.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.435" endtime="20201112 10:14:45.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.439" endtime="20201112 10:14:45.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.438" endtime="20201112 10:14:45.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.434" endtime="20201112 10:14:45.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.068" endtime="20201112 10:14:45.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.068" endtime="20201112 10:14:45.460"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.469" endtime="20201112 10:14:45.484"></status>
</kw>
<msg timestamp="20201112 10:14:45.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.468" endtime="20201112 10:14:45.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.486" endtime="20201112 10:14:45.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.489" endtime="20201112 10:14:45.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.465" endtime="20201112 10:14:45.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.463" endtime="20201112 10:14:45.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.499" endtime="20201112 10:14:45.784"></status>
</kw>
<msg timestamp="20201112 10:14:45.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020173583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020190528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.498" endtime="20201112 10:14:45.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020173583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020190528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.789" endtime="20201112 10:14:45.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.797" endtime="20201112 10:14:45.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.495" endtime="20201112 10:14:45.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.493" endtime="20201112 10:14:45.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.804" level="INFO">${RESULT} = [{'time': 0.020190528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6945000000000848e-05, 'source_diff': 1.6945000000000848e-05}, {'time': 0.020211583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:45.801" endtime="20201112 10:14:45.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.819" level="INFO">${ACCURACY} = {'source_diff': [1.6945000000000848e-05, 1.662500000000275e-05, 1.6901999999999195e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.631900000000075e-05, 1.693100000000128e-05, 1.662499999999928e-0...</msg>
<status status="PASS" starttime="20201112 10:14:45.805" endtime="20201112 10:14:45.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.824" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.823" endtime="20201112 10:14:45.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.826" level="INFO">VALUE: [1.6945000000000848e-05, 1.662500000000275e-05, 1.6901999999999195e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.631900000000075e-05, 1.693100000000128e-05, 1.662499999999928e-05, 1.7223000000000238e-05, 1.691699999999824e-05, 1.636099999999946e-05, 1.7222000000000764e-05, 1.7195000000001098e-05, 1.636100000000293e-05, 1.691700000000171e-05, 1.631900000000075e-05, 1.6958000000000945e-05, 1.690299999999867e-05, 1.7306000000001653e-05, 1.683300000000082e-05, 1.662499999999928e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.7208000000001195e-05, 1.662499999999928e-05, 1.7207999999997725e-05, 1.693100000000128e-05, 1.662500000000275e-05, 1.690299999999867e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.630500000000118e-05, 1.6959000000000418e-05, 1.630500000000118e-05, 1.6959000000000418e-05, 1.6263999999998474e-05, 1.7222000000000764e-05, 1.693099999999781e-05, 1.662499999999928e-05, 1.6333999999999793e-05, 1.665299999999842e-05, 1.663899999999885e-05, 1.662500000000275e-05, 1.662499999999928e-05, 1.690300000000214e-05, 1.691699999999824e-05, 1.6915999999998765e-05, 1.7222000000000764e-05, 1.662499999999928e-05, 1.693100000000128e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.825" endtime="20201112 10:14:45.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.820" endtime="20201112 10:14:45.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.830" endtime="20201112 10:14:45.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.834" endtime="20201112 10:14:45.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.832" endtime="20201112 10:14:45.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.828" endtime="20201112 10:14:45.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.461" endtime="20201112 10:14:45.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.461" endtime="20201112 10:14:45.855"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.864" endtime="20201112 10:14:45.878"></status>
</kw>
<msg timestamp="20201112 10:14:45.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.862" endtime="20201112 10:14:45.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.880" endtime="20201112 10:14:45.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.882" endtime="20201112 10:14:45.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.859" endtime="20201112 10:14:45.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.857" endtime="20201112 10:14:45.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.893" endtime="20201112 10:14:46.179"></status>
</kw>
<msg timestamp="20201112 10:14:46.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020725722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020743833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.891" endtime="20201112 10:14:46.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020725722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020743833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.183" endtime="20201112 10:14:46.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.192" endtime="20201112 10:14:46.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.889" endtime="20201112 10:14:46.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.887" endtime="20201112 10:14:46.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.199" level="INFO">${RESULT} = [{'time': 0.020743833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.811100000000121e-05, 'source_diff': 1.811100000000121e-05}, {'time': 0.020764903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.196" endtime="20201112 10:14:46.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.213" level="INFO">${ACCURACY} = {'source_diff': [1.811100000000121e-05, 1.811100000000121e-05, 1.7527999999999294e-05, 1.751299999999678e-05, 1.7513999999999724e-05, 1.7527999999999294e-05, 1.7542000000002334e-05, 1.7513999999999724...</msg>
<status status="PASS" starttime="20201112 10:14:46.200" endtime="20201112 10:14:46.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.218" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.217" endtime="20201112 10:14:46.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.220" level="INFO">VALUE: [1.811100000000121e-05, 1.811100000000121e-05, 1.7527999999999294e-05, 1.751299999999678e-05, 1.7513999999999724e-05, 1.7527999999999294e-05, 1.7542000000002334e-05, 1.7513999999999724e-05, 1.7819999999998254e-05, 1.7513999999999724e-05, 1.7513999999999724e-05, 1.7527999999999294e-05, 1.751300000000025e-05, 1.780499999999921e-05, 1.781899999999878e-05, 1.7500000000000154e-05, 1.752699999999982e-05, 1.7458000000001445e-05, 1.811100000000121e-05, 1.811100000000121e-05, 1.7513999999999724e-05, 1.7236000000000334e-05, 1.7458000000001445e-05, 1.812500000000078e-05, 1.7527999999999294e-05, 1.756899999999853e-05, 1.751300000000025e-05, 1.780499999999921e-05, 1.7805999999998684e-05, 1.7236999999999808e-05, 1.7513999999999724e-05, 1.7792000000002584e-05, 1.7513999999999724e-05, 1.7513999999999724e-05, 1.7777999999999544e-05, 1.7208000000001195e-05, 1.781899999999878e-05, 1.7513999999999724e-05, 1.7209000000000668e-05, 1.7514000000003194e-05, 1.780500000000268e-05, 1.7777999999999544e-05, 1.7527999999999294e-05, 1.811100000000121e-05, 1.7514000000003194e-05, 1.7527999999999294e-05, 1.811100000000121e-05, 1.7222000000000764e-05, 1.811100000000121e-05, 1.7208000000001195e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.219" endtime="20201112 10:14:46.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.214" endtime="20201112 10:14:46.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.224" endtime="20201112 10:14:46.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.228" endtime="20201112 10:14:46.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.226" endtime="20201112 10:14:46.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.222" endtime="20201112 10:14:46.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.856" endtime="20201112 10:14:46.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.855" endtime="20201112 10:14:46.249"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.258" endtime="20201112 10:14:46.274"></status>
</kw>
<msg timestamp="20201112 10:14:46.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.256" endtime="20201112 10:14:46.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.276" endtime="20201112 10:14:46.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.278" endtime="20201112 10:14:46.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.253" endtime="20201112 10:14:46.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.251" endtime="20201112 10:14:46.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.289" endtime="20201112 10:14:46.574"></status>
</kw>
<msg timestamp="20201112 10:14:46.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020864486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.287" endtime="20201112 10:14:46.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020864486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.578" endtime="20201112 10:14:46.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.587" endtime="20201112 10:14:46.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.284" endtime="20201112 10:14:46.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.282" endtime="20201112 10:14:46.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.594" level="INFO">${RESULT} = [{'time': 0.020883208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8721999999998795e-05, 'source_diff': 1.8721999999998795e-05}, {'time': 0.020908306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:46.590" endtime="20201112 10:14:46.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.608" level="INFO">${ACCURACY} = {'source_diff': [1.8721999999998795e-05, 1.9278000000001044e-05, 1.9292000000000614e-05, 1.8708000000002695e-05, 1.931900000000028e-05, 1.8693999999999655e-05, 1.833299999999885e-05, 1.841699999999974...</msg>
<status status="PASS" starttime="20201112 10:14:46.595" endtime="20201112 10:14:46.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.612" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.611" endtime="20201112 10:14:46.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.615" level="INFO">VALUE: [1.8721999999998795e-05, 1.9278000000001044e-05, 1.9292000000000614e-05, 1.8708000000002695e-05, 1.931900000000028e-05, 1.8693999999999655e-05, 1.833299999999885e-05, 1.841699999999974e-05, 1.8722000000002265e-05, 1.9000000000001654e-05, 1.841699999999974e-05, 1.9292000000000614e-05, 1.8693999999999655e-05, 1.83890000000006e-05, 1.869499999999913e-05, 1.8429999999999835e-05, 1.86950000000026e-05, 1.811100000000121e-05, 1.8485999999998115e-05, 1.8401999999997226e-05, 1.8722000000002265e-05, 1.8943999999999905e-05, 1.83890000000006e-05, 1.9014000000001224e-05, 1.8680000000000085e-05, 1.870900000000217e-05, 1.836099999999799e-05, 1.872299999999827e-05, 1.838899999999713e-05, 1.9014000000001224e-05, 1.9000000000001654e-05, 1.9306000000000184e-05, 1.9000000000001654e-05, 1.8112000000000683e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.8999999999998185e-05, 1.8722000000002265e-05, 1.9277999999997575e-05, 1.844500000000235e-05, 1.8485999999998115e-05, 1.8957999999999475e-05, 1.8999999999998185e-05, 1.8999999999998185e-05, 1.8764000000000974e-05, 1.8999999999998185e-05, 1.86950000000026e-05, 1.8402000000000696e-05, 1.8999999999998185e-05, 1.8387999999997656e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.614" endtime="20201112 10:14:46.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.609" endtime="20201112 10:14:46.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.619" endtime="20201112 10:14:46.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.622" endtime="20201112 10:14:46.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.621" endtime="20201112 10:14:46.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.617" endtime="20201112 10:14:46.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.250" endtime="20201112 10:14:46.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.249" endtime="20201112 10:14:46.643"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.652" endtime="20201112 10:14:46.668"></status>
</kw>
<msg timestamp="20201112 10:14:46.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.651" endtime="20201112 10:14:46.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.669" endtime="20201112 10:14:46.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.672" endtime="20201112 10:14:46.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.648" endtime="20201112 10:14:46.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.646" endtime="20201112 10:14:46.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.682" endtime="20201112 10:14:46.968"></status>
</kw>
<msg timestamp="20201112 10:14:46.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020157028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.681" endtime="20201112 10:14:46.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020157028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.972" endtime="20201112 10:14:46.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.981" endtime="20201112 10:14:46.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.678" endtime="20201112 10:14:46.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.676" endtime="20201112 10:14:46.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.988" level="INFO">${RESULT} = [{'time': 0.020177222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0194000000001155e-05, 'source_diff': 2.0194000000001155e-05}, {'time': 0.020202292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:46.984" endtime="20201112 10:14:46.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.002" level="INFO">${ACCURACY} = {'source_diff': [2.0194000000001155e-05, 1.990300000000167e-05, 1.9278000000001044e-05, 1.9306000000000184e-05, 1.9292000000000614e-05, 1.961100000000271e-05, 1.9957999999997006e-05, 1.95830000000001e...</msg>
<status status="PASS" starttime="20201112 10:14:46.989" endtime="20201112 10:14:47.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.007" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.006" endtime="20201112 10:14:47.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.010" level="INFO">VALUE: [2.0194000000001155e-05, 1.990300000000167e-05, 1.9278000000001044e-05, 1.9306000000000184e-05, 1.9292000000000614e-05, 1.961100000000271e-05, 1.9957999999997006e-05, 1.95830000000001e-05, 1.9235999999998865e-05, 1.934699999999942e-05, 1.988899999999863e-05, 1.9597999999999144e-05, 1.988899999999863e-05, 1.9915999999998296e-05, 1.959699999999967e-05, 2.0263999999999005e-05, 1.98890000000021e-05, 1.98890000000021e-05, 1.930500000000071e-05, 1.98890000000021e-05, 1.9278000000001044e-05, 1.98890000000021e-05, 1.98890000000021e-05, 2.016699999999802e-05, 1.9583999999999574e-05, 1.9944000000000905e-05, 1.988899999999863e-05, 2.018100000000106e-05, 1.961099999999924e-05, 1.9306000000000184e-05, 1.929099999999767e-05, 2.018099999999759e-05, 1.959699999999967e-05, 1.929100000000114e-05, 2.0208000000000725e-05, 1.991700000000124e-05, 2.0222000000000295e-05, 1.9319999999999754e-05, 2.0194000000001155e-05, 1.959700000000314e-05, 1.9306000000000184e-05, 1.959699999999967e-05, 1.9306000000000184e-05, 2.0194000000001155e-05, 1.9292000000000614e-05, 1.959699999999967e-05, 2.0193999999997686e-05, 1.929100000000114e-05, 1.961099999999924e-05, 1.9597999999999144e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.009" endtime="20201112 10:14:47.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.003" endtime="20201112 10:14:47.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.014" endtime="20201112 10:14:47.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.018" endtime="20201112 10:14:47.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.016" endtime="20201112 10:14:47.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.012" endtime="20201112 10:14:47.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.644" endtime="20201112 10:14:47.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.644" endtime="20201112 10:14:47.039"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.048" endtime="20201112 10:14:47.064"></status>
</kw>
<msg timestamp="20201112 10:14:47.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.046" endtime="20201112 10:14:47.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.066" endtime="20201112 10:14:47.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.069" endtime="20201112 10:14:47.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.044" endtime="20201112 10:14:47.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.041" endtime="20201112 10:14:47.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.079" endtime="20201112 10:14:47.367"></status>
</kw>
<msg timestamp="20201112 10:14:47.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021256611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.078" endtime="20201112 10:14:47.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021256611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.371" endtime="20201112 10:14:47.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.380" endtime="20201112 10:14:47.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.075" endtime="20201112 10:14:47.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.073" endtime="20201112 10:14:47.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.387" level="INFO">${RESULT} = [{'time': 0.021277042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.043099999999784e-05, 'source_diff': 2.043099999999784e-05}, {'time': 0.021307208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:47.383" endtime="20201112 10:14:47.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.402" level="INFO">${ACCURACY} = {'source_diff': [2.043099999999784e-05, 2.0486000000000115e-05, 2.018100000000106e-05, 2.108299999999813e-05, 2.043100000000131e-05, 2.1070000000001504e-05, 2.108299999999813e-05, 2.0499999999999685e-...</msg>
<status status="PASS" starttime="20201112 10:14:47.388" endtime="20201112 10:14:47.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.406" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.405" endtime="20201112 10:14:47.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.409" level="INFO">VALUE: [2.043099999999784e-05, 2.0486000000000115e-05, 2.018100000000106e-05, 2.108299999999813e-05, 2.043100000000131e-05, 2.1070000000001504e-05, 2.108299999999813e-05, 2.0499999999999685e-05, 2.07769999999996e-05, 2.109700000000117e-05, 2.10830000000016e-05, 2.080500000000221e-05, 2.1084000000001074e-05, 2.0792000000002114e-05, 2.0207999999997256e-05, 2.07769999999996e-05, 2.072300000000027e-05, 2.0486000000000115e-05, 2.109700000000117e-05, 2.108299999999813e-05, 2.109700000000117e-05, 2.108299999999813e-05, 2.0180000000001586e-05, 2.0193999999997686e-05, 2.0180000000001586e-05, 2.013899999999888e-05, 2.0791999999998645e-05, 2.019500000000063e-05, 2.10830000000016e-05, 2.0777999999999075e-05, 2.084700000000092e-05, 2.0527999999998825e-05, 2.0486000000000115e-05, 2.0792000000002114e-05, 2.0472000000000545e-05, 2.0805999999998215e-05, 2.10830000000016e-05, 2.108299999999813e-05, 2.015300000000192e-05, 2.079099999999917e-05, 2.0777999999999075e-05, 2.0486000000000115e-05, 2.109700000000117e-05, 2.0194000000001155e-05, 2.0514000000002724e-05, 2.0499999999999685e-05, 2.0791999999998645e-05, 2.018100000000106e-05, 2.105499999999899e-05, 2.0458000000000975e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.407" endtime="20201112 10:14:47.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.402" endtime="20201112 10:14:47.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.413" endtime="20201112 10:14:47.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.416" endtime="20201112 10:14:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.415" endtime="20201112 10:14:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.411" endtime="20201112 10:14:47.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.040" endtime="20201112 10:14:47.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.039" endtime="20201112 10:14:47.437"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.446" endtime="20201112 10:14:47.462"></status>
</kw>
<msg timestamp="20201112 10:14:47.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.445" endtime="20201112 10:14:47.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.463" endtime="20201112 10:14:47.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.466" endtime="20201112 10:14:47.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.442" endtime="20201112 10:14:47.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.440" endtime="20201112 10:14:47.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.476" endtime="20201112 10:14:47.764"></status>
</kw>
<msg timestamp="20201112 10:14:47.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.475" endtime="20201112 10:14:47.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.769" endtime="20201112 10:14:47.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.777" endtime="20201112 10:14:47.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.472" endtime="20201112 10:14:47.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.470" endtime="20201112 10:14:47.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.784" level="INFO">${RESULT} = [{'time': 0.020439111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1679999999999616e-05, 'source_diff': 2.1679999999999616e-05}, {'time': 0.020468042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:47.780" endtime="20201112 10:14:47.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.798" level="INFO">${ACCURACY} = {'source_diff': [2.1679999999999616e-05, 2.166699999999952e-05, 2.1971999999998576e-05, 2.2278000000000575e-05, 2.1679999999999616e-05, 2.1749999999997466e-05, 2.1708000000002226e-05, 2.13890000000001...</msg>
<status status="PASS" starttime="20201112 10:14:47.785" endtime="20201112 10:14:47.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.803" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.801" endtime="20201112 10:14:47.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.805" level="INFO">VALUE: [2.1679999999999616e-05, 2.166699999999952e-05, 2.1971999999998576e-05, 2.2278000000000575e-05, 2.1679999999999616e-05, 2.1749999999997466e-05, 2.1708000000002226e-05, 2.138900000000013e-05, 2.1999999999997716e-05, 2.138900000000013e-05, 2.2361999999997995e-05, 2.138900000000013e-05, 2.137500000000056e-05, 2.166699999999952e-05, 2.137500000000056e-05, 2.1679999999999616e-05, 2.136100000000099e-05, 2.137500000000056e-05, 2.166699999999952e-05, 2.1679999999999616e-05, 2.138900000000013e-05, 2.197299999999805e-05, 2.1680000000003086e-05, 2.168100000000256e-05, 2.137500000000056e-05, 2.197299999999805e-05, 2.197300000000152e-05, 2.2014000000000755e-05, 2.1985999999998146e-05, 2.1957999999999006e-05, 2.1666000000000046e-05, 2.194500000000238e-05, 2.1972000000002045e-05, 2.1707999999998756e-05, 2.1999999999997716e-05, 2.1971999999998576e-05, 2.138900000000013e-05, 2.1986000000001615e-05, 2.197299999999805e-05, 2.1971999999998576e-05, 2.137500000000056e-05, 2.168099999999909e-05, 2.1986000000001615e-05, 2.195899999999848e-05, 2.1985999999998146e-05, 2.2249999999997966e-05, 2.1722000000001795e-05, 2.1679999999999616e-05, 2.169500000000213e-05, 2.138900000000013e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.804" endtime="20201112 10:14:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.799" endtime="20201112 10:14:47.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.809" endtime="20201112 10:14:47.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.813" endtime="20201112 10:14:47.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.811" endtime="20201112 10:14:47.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.807" endtime="20201112 10:14:47.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.438" endtime="20201112 10:14:47.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.438" endtime="20201112 10:14:47.834"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.843" endtime="20201112 10:14:47.859"></status>
</kw>
<msg timestamp="20201112 10:14:47.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.841" endtime="20201112 10:14:47.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.860" endtime="20201112 10:14:47.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.863" endtime="20201112 10:14:47.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.838" endtime="20201112 10:14:47.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.836" endtime="20201112 10:14:47.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.873" endtime="20201112 10:14:48.159"></status>
</kw>
<msg timestamp="20201112 10:14:48.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.871" endtime="20201112 10:14:48.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.164" endtime="20201112 10:14:48.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.172" endtime="20201112 10:14:48.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.869" endtime="20201112 10:14:48.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.867" endtime="20201112 10:14:48.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.179" level="INFO">${RESULT} = [{'time': 0.020635722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.020661819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.176" endtime="20201112 10:14:48.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.193" level="INFO">${ACCURACY} = {'source_diff': [2.2235999999998396e-05, 2.3166000000001546e-05, 2.2235999999998396e-05, 2.254100000000092e-05, 2.251300000000178e-05, 2.2583999999999105e-05, 2.316700000000102e-05, 2.261099999999877e...</msg>
<status status="PASS" starttime="20201112 10:14:48.180" endtime="20201112 10:14:48.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.198" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.197" endtime="20201112 10:14:48.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.200" level="INFO">VALUE: [2.2235999999998396e-05, 2.3166000000001546e-05, 2.2235999999998396e-05, 2.254100000000092e-05, 2.251300000000178e-05, 2.2583999999999105e-05, 2.316700000000102e-05, 2.261099999999877e-05, 2.258299999999963e-05, 2.316700000000102e-05, 2.294499999999991e-05, 2.2916000000001296e-05, 2.2612000000001714e-05, 2.2222000000002295e-05, 2.230500000000024e-05, 2.261099999999877e-05, 2.3179999999997647e-05, 2.2235999999998396e-05, 2.3235999999999396e-05, 2.319500000000016e-05, 2.291700000000077e-05, 2.2264000000001005e-05, 2.286099999999902e-05, 2.287500000000206e-05, 2.256900000000006e-05, 2.2278000000000575e-05, 2.262499999999834e-05, 2.288899999999816e-05, 2.2848000000002394e-05, 2.256900000000006e-05, 2.2292000000000145e-05, 2.3166000000001546e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.2555999999999965e-05, 2.2569999999999535e-05, 2.294499999999991e-05, 2.256900000000006e-05, 2.259700000000267e-05, 2.315300000000145e-05, 2.2290999999997202e-05, 2.313900000000188e-05, 2.258299999999963e-05, 2.2861999999998495e-05, 2.287499999999859e-05, 2.256900000000006e-05, 2.25830000000031e-05, 2.318100000000059e-05, 2.316700000000102e-05, 2.258299999999963e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.199" endtime="20201112 10:14:48.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.194" endtime="20201112 10:14:48.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.204" endtime="20201112 10:14:48.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.208" endtime="20201112 10:14:48.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.206" endtime="20201112 10:14:48.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.202" endtime="20201112 10:14:48.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.834" endtime="20201112 10:14:48.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.834" endtime="20201112 10:14:48.229"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.238" endtime="20201112 10:14:48.253"></status>
</kw>
<msg timestamp="20201112 10:14:48.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.236" endtime="20201112 10:14:48.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.254" endtime="20201112 10:14:48.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.257" endtime="20201112 10:14:48.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.233" endtime="20201112 10:14:48.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.231" endtime="20201112 10:14:48.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.267" endtime="20201112 10:14:48.553"></status>
</kw>
<msg timestamp="20201112 10:14:48.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.266" endtime="20201112 10:14:48.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.557" endtime="20201112 10:14:48.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.566" endtime="20201112 10:14:48.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.263" endtime="20201112 10:14:48.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.261" endtime="20201112 10:14:48.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.573" level="INFO">${RESULT} = [{'time': 0.020150958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3999999999999716e-05, 'source_diff': 2.3999999999999716e-05}, {'time': 0.020182903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.569" endtime="20201112 10:14:48.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.587" level="INFO">${ACCURACY} = {'source_diff': [2.3999999999999716e-05, 2.3777999999998606e-05, 2.3763999999999036e-05, 2.3458000000000506e-05, 2.4054999999998522e-05, 2.3472000000000076e-05, 2.3777999999998606e-05, 2.4138999999999...</msg>
<status status="PASS" starttime="20201112 10:14:48.574" endtime="20201112 10:14:48.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.591" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.590" endtime="20201112 10:14:48.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.594" level="INFO">VALUE: [2.3999999999999716e-05, 2.3777999999998606e-05, 2.3763999999999036e-05, 2.3458000000000506e-05, 2.4054999999998522e-05, 2.3472000000000076e-05, 2.3777999999998606e-05, 2.413899999999941e-05, 2.3151999999998507e-05, 2.3430000000001366e-05, 2.312500000000231e-05, 2.3165999999998077e-05, 2.4054999999998522e-05, 2.4054999999998522e-05, 2.3763999999999036e-05, 2.318100000000059e-05, 2.4041999999998426e-05, 2.3777999999998606e-05, 2.3778000000002075e-05, 2.4056000000001465e-05, 2.3749999999999466e-05, 2.3458000000000506e-05, 2.3763999999999036e-05, 2.4055999999997996e-05, 2.3778000000002075e-05, 2.406900000000156e-05, 2.4068999999998092e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3749999999999466e-05, 2.316700000000102e-05, 2.3429999999997897e-05, 2.3820000000000785e-05, 2.3832999999997412e-05, 2.3472000000000076e-05, 2.4054999999998522e-05, 2.406900000000156e-05, 2.3805999999997746e-05, 2.3458000000000506e-05, 2.318100000000059e-05, 2.4041999999998426e-05, 2.3457999999997037e-05, 2.3207999999996787e-05, 2.3430000000001366e-05, 2.340299999999823e-05, 2.3472000000000076e-05, 2.3444000000000936e-05, 2.3763999999999036e-05, 2.3749999999999466e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.593" endtime="20201112 10:14:48.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.588" endtime="20201112 10:14:48.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.598" endtime="20201112 10:14:48.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.602" endtime="20201112 10:14:48.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.600" endtime="20201112 10:14:48.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.596" endtime="20201112 10:14:48.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.230" endtime="20201112 10:14:48.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.229" endtime="20201112 10:14:48.623"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.632" endtime="20201112 10:14:48.646"></status>
</kw>
<msg timestamp="20201112 10:14:48.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.630" endtime="20201112 10:14:48.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.648" endtime="20201112 10:14:48.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.650" endtime="20201112 10:14:48.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.627" endtime="20201112 10:14:48.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.625" endtime="20201112 10:14:48.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.661" endtime="20201112 10:14:48.948"></status>
</kw>
<msg timestamp="20201112 10:14:48.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020079056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:48.659" endtime="20201112 10:14:48.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020079056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:48.952" endtime="20201112 10:14:48.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.961" endtime="20201112 10:14:48.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.656" endtime="20201112 10:14:48.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.655" endtime="20201112 10:14:48.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.968" level="INFO">${RESULT} = [{'time': 0.020104, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4943999999998967e-05, 'source_diff': 2.4943999999998967e-05}, {'time': 0.020138069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:48.965" endtime="20201112 10:14:48.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.983" level="INFO">${ACCURACY} = {'source_diff': [2.4943999999998967e-05, 2.4388000000000187e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4958000000002006e-05, 2.437500000000009e-05, 2.49169999999993e-05, 2.4957999999998537e-...</msg>
<status status="PASS" starttime="20201112 10:14:48.969" endtime="20201112 10:14:48.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.988" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.987" endtime="20201112 10:14:48.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.990" level="INFO">VALUE: [2.4943999999998967e-05, 2.4388000000000187e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4958000000002006e-05, 2.437500000000009e-05, 2.49169999999993e-05, 2.4957999999998537e-05, 2.5235999999997927e-05, 2.4943999999998967e-05, 2.4680000000002617e-05, 2.434700000000095e-05, 2.4986000000001146e-05, 2.465299999999948e-05, 2.4943999999998967e-05, 2.468100000000209e-05, 2.436100000000052e-05, 2.5207999999998787e-05, 2.4929999999999397e-05, 2.4972000000001576e-05, 2.468099999999862e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.441700000000227e-05, 2.434700000000095e-05, 2.493099999999887e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.4929999999999397e-05, 2.437500000000009e-05, 2.494499999999844e-05, 2.4707999999998287e-05, 2.436100000000052e-05, 2.5249999999997497e-05, 2.4943999999998967e-05, 2.463899999999991e-05, 2.5249999999997497e-05, 2.4348000000000425e-05, 2.465300000000295e-05, 2.463899999999991e-05, 2.436100000000052e-05, 2.465299999999948e-05, 2.437500000000009e-05, 2.495899999999801e-05, 2.465299999999948e-05, 2.497300000000105e-05, 2.433300000000138e-05, 2.4679999999999147e-05, 2.463899999999991e-05, 2.4957999999998537e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.989" endtime="20201112 10:14:48.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.984" endtime="20201112 10:14:48.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.994" endtime="20201112 10:14:48.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.998" endtime="20201112 10:14:49.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.997" endtime="20201112 10:14:49.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.992" endtime="20201112 10:14:49.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.624" endtime="20201112 10:14:49.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.623" endtime="20201112 10:14:49.019"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.029" endtime="20201112 10:14:49.045"></status>
</kw>
<msg timestamp="20201112 10:14:49.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.027" endtime="20201112 10:14:49.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.047" endtime="20201112 10:14:49.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.049" endtime="20201112 10:14:49.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.024" endtime="20201112 10:14:49.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.022" endtime="20201112 10:14:49.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.061" endtime="20201112 10:14:49.348"></status>
</kw>
<msg timestamp="20201112 10:14:49.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020986194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021012056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.059" endtime="20201112 10:14:49.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020986194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021012056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.353" endtime="20201112 10:14:49.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.361" endtime="20201112 10:14:49.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.056" endtime="20201112 10:14:49.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.053" endtime="20201112 10:14:49.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.368" level="INFO">${RESULT} = [{'time': 0.021012056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5862000000001495e-05, 'source_diff': 2.5862000000001495e-05}, {'time': 0.021040111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:49.365" endtime="20201112 10:14:49.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.382" level="INFO">${ACCURACY} = {'source_diff': [2.5862000000001495e-05, 2.5541999999999926e-05, 2.5249999999997497e-05, 2.5805000000000272e-05, 2.612500000000184e-05, 2.5541000000000452e-05, 2.547300000000155e-05, 2.525000000000096...</msg>
<status status="PASS" starttime="20201112 10:14:49.369" endtime="20201112 10:14:49.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.387" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.386" endtime="20201112 10:14:49.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.389" level="INFO">VALUE: [2.5862000000001495e-05, 2.5541999999999926e-05, 2.5249999999997497e-05, 2.5805000000000272e-05, 2.612500000000184e-05, 2.5541000000000452e-05, 2.547300000000155e-05, 2.5250000000000966e-05, 2.5833999999998886e-05, 2.5541999999999926e-05, 2.59170000000003e-05, 2.5834000000002355e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.5291999999999676e-05, 2.613900000000141e-05, 2.5235999999997927e-05, 2.5528000000000356e-05, 2.5847999999998456e-05, 2.5846999999998982e-05, 2.5528000000000356e-05, 2.5555999999999496e-05, 2.5527000000000882e-05, 2.5250000000000966e-05, 2.5846999999998982e-05, 2.5846999999998982e-05, 2.5582999999999162e-05, 2.5556000000002965e-05, 2.5847999999998456e-05, 2.5528000000000356e-05, 2.6096999999999232e-05, 2.520900000000173e-05, 2.5833999999998886e-05, 2.613900000000141e-05, 2.5833999999998886e-05, 2.5236000000001396e-05, 2.6221999999999357e-05, 2.5556000000002965e-05, 2.5569999999999066e-05, 2.5555999999999496e-05, 2.613899999999794e-05, 2.5277000000000632e-05, 2.5263000000001062e-05, 2.618100000000012e-05, 2.613899999999794e-05, 2.5555999999999496e-05, 2.5555000000000022e-05, 2.5792000000000176e-05, 2.615300000000098e-05, 2.616700000000055e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.388" endtime="20201112 10:14:49.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.383" endtime="20201112 10:14:49.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.393" endtime="20201112 10:14:49.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.397" endtime="20201112 10:14:49.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.395" endtime="20201112 10:14:49.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.391" endtime="20201112 10:14:49.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.020" endtime="20201112 10:14:49.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.020" endtime="20201112 10:14:49.418"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.427" endtime="20201112 10:14:49.444"></status>
</kw>
<msg timestamp="20201112 10:14:49.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.425" endtime="20201112 10:14:49.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.446" endtime="20201112 10:14:49.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.449" endtime="20201112 10:14:49.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.423" endtime="20201112 10:14:49.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.421" endtime="20201112 10:14:49.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.459" endtime="20201112 10:14:49.746"></status>
</kw>
<msg timestamp="20201112 10:14:49.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020927028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02095375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:49.457" endtime="20201112 10:14:49.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020927028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02095375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:49.750" endtime="20201112 10:14:49.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.759" endtime="20201112 10:14:49.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.455" endtime="20201112 10:14:49.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.453" endtime="20201112 10:14:49.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.766" level="INFO">${RESULT} = [{'time': 0.02095375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6721999999999857e-05, 'source_diff': 2.6721999999999857e-05}, {'time': 0.020985889, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:49.762" endtime="20201112 10:14:49.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.780" level="INFO">${ACCURACY} = {'source_diff': [2.6721999999999857e-05, 2.7042000000001426e-05, 2.6430000000000897e-05, 2.6721999999999857e-05, 2.7042000000001426e-05, 2.6680000000001147e-05, 2.7041000000001952e-05, 2.6388999999998...</msg>
<status status="PASS" starttime="20201112 10:14:49.767" endtime="20201112 10:14:49.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.784" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.783" endtime="20201112 10:14:49.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.787" level="INFO">VALUE: [2.6721999999999857e-05, 2.7042000000001426e-05, 2.6430000000000897e-05, 2.6721999999999857e-05, 2.7042000000001426e-05, 2.6680000000001147e-05, 2.7041000000001952e-05, 2.638899999999819e-05, 2.7333000000000912e-05, 2.7041999999997957e-05, 2.6735999999999427e-05, 2.7054999999998053e-05, 2.643100000000037e-05, 2.7055000000001522e-05, 2.7041000000001952e-05, 2.644499999999994e-05, 2.6458000000000037e-05, 2.7056000000000996e-05, 2.7056000000000996e-05, 2.6735999999999427e-05, 2.697299999999958e-05, 2.7041999999997957e-05, 2.6735999999999427e-05, 2.644499999999994e-05, 2.644499999999994e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.643100000000037e-05, 2.616700000000055e-05, 2.7028000000001856e-05, 2.7013999999998817e-05, 2.7041999999997957e-05, 2.7028000000001856e-05, 2.613899999999794e-05, 2.6735999999999427e-05, 2.7347000000000482e-05, 2.7041999999997957e-05, 2.6444000000000467e-05, 2.644499999999994e-05, 2.645899999999951e-05, 2.7042000000001426e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.7028000000001856e-05, 2.6444000000000467e-05, 2.64309999999969e-05, 2.6749999999998997e-05, 2.6749999999998997e-05, 2.6444000000000467e-05, 2.6735999999999427e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.785" endtime="20201112 10:14:49.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.781" endtime="20201112 10:14:49.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.791" endtime="20201112 10:14:49.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.794" endtime="20201112 10:14:49.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.793" endtime="20201112 10:14:49.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.789" endtime="20201112 10:14:49.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.419" endtime="20201112 10:14:49.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.418" endtime="20201112 10:14:49.815"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.824" endtime="20201112 10:14:49.841"></status>
</kw>
<msg timestamp="20201112 10:14:49.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.823" endtime="20201112 10:14:49.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.843" endtime="20201112 10:14:49.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.846" endtime="20201112 10:14:49.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.820" endtime="20201112 10:14:49.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.818" endtime="20201112 10:14:49.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.856" endtime="20201112 10:14:50.142"></status>
</kw>
<msg timestamp="20201112 10:14:50.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020960375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020988625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.855" endtime="20201112 10:14:50.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020960375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020988625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.147" endtime="20201112 10:14:50.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.155" endtime="20201112 10:14:50.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.852" endtime="20201112 10:14:50.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.850" endtime="20201112 10:14:50.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.162" level="INFO">${RESULT} = [{'time': 0.020988625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8250000000000497e-05, 'source_diff': 2.8250000000000497e-05}, {'time': 0.021024458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:50.159" endtime="20201112 10:14:50.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.176" level="INFO">${ACCURACY} = {'source_diff': [2.8250000000000497e-05, 2.7333000000000912e-05, 2.8263000000000593e-05, 2.7611000000000302e-05, 2.7944000000001967e-05, 2.7638999999999442e-05, 2.7638999999999442e-05, 2.8236000000000...</msg>
<status status="PASS" starttime="20201112 10:14:50.163" endtime="20201112 10:14:50.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.181" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.180" endtime="20201112 10:14:50.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.183" level="INFO">VALUE: [2.8250000000000497e-05, 2.7333000000000912e-05, 2.8263000000000593e-05, 2.7611000000000302e-05, 2.7944000000001967e-05, 2.7638999999999442e-05, 2.7638999999999442e-05, 2.8236000000000927e-05, 2.7333000000000912e-05, 2.793100000000187e-05, 2.818100000000212e-05, 2.7320000000000816e-05, 2.7986000000000677e-05, 2.7319000000001342e-05, 2.7332999999997443e-05, 2.7652999999999012e-05, 2.7332999999997443e-05, 2.7943999999998498e-05, 2.7638999999999442e-05, 2.7930000000002397e-05, 2.7347999999999956e-05, 2.7611000000000302e-05, 2.7929999999998928e-05, 2.8222000000001357e-05, 2.7624999999999872e-05, 2.7929999999998928e-05, 2.766699999999858e-05, 2.769500000000119e-05, 2.7638999999999442e-05, 2.7929999999998928e-05, 2.8000000000000247e-05, 2.8250000000000497e-05, 2.795900000000101e-05, 2.7652999999999012e-05, 2.7333000000000912e-05, 2.7611000000000302e-05, 2.7652999999999012e-05, 2.7638999999999442e-05, 2.8222000000001357e-05, 2.8236000000000927e-05, 2.7333000000000912e-05, 2.8221999999997888e-05, 2.7902999999999262e-05, 2.7638999999999442e-05, 2.7944000000001967e-05, 2.8221999999997888e-05, 2.8235999999997458e-05, 2.7333000000000912e-05, 2.7652999999999012e-05, 2.7860999999997083e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.182" endtime="20201112 10:14:50.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.177" endtime="20201112 10:14:50.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.191" endtime="20201112 10:14:50.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.195" endtime="20201112 10:14:50.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.193" endtime="20201112 10:14:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.189" endtime="20201112 10:14:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.816" endtime="20201112 10:14:50.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.816" endtime="20201112 10:14:50.216"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.225" endtime="20201112 10:14:50.240"></status>
</kw>
<msg timestamp="20201112 10:14:50.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.223" endtime="20201112 10:14:50.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.241" endtime="20201112 10:14:50.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.244" endtime="20201112 10:14:50.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.221" endtime="20201112 10:14:50.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.218" endtime="20201112 10:14:50.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.255" endtime="20201112 10:14:50.542"></status>
</kw>
<msg timestamp="20201112 10:14:50.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.253" endtime="20201112 10:14:50.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.546" endtime="20201112 10:14:50.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.555" endtime="20201112 10:14:50.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.250" endtime="20201112 10:14:50.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.249" endtime="20201112 10:14:50.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.562" level="INFO">${RESULT} = [{'time': 0.020234764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8819999999998847e-05, 'source_diff': 2.8819999999998847e-05}, {'time': 0.020266056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:50.558" endtime="20201112 10:14:50.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.577" level="INFO">${ACCURACY} = {'source_diff': [2.8819999999998847e-05, 2.8584000000001636e-05, 2.9125000000001372e-05, 2.8819000000002842e-05, 2.8847000000001982e-05, 2.9125000000001372e-05, 2.9110999999998333e-05, 2.8819999999998...</msg>
<status status="PASS" starttime="20201112 10:14:50.563" endtime="20201112 10:14:50.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.581" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.580" endtime="20201112 10:14:50.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.584" level="INFO">VALUE: [2.8819999999998847e-05, 2.8584000000001636e-05, 2.9125000000001372e-05, 2.8819000000002842e-05, 2.8847000000001982e-05, 2.9125000000001372e-05, 2.9110999999998333e-05, 2.8819999999998847e-05, 2.8819000000002842e-05, 2.8527999999999887e-05, 2.8527999999999887e-05, 2.9167000000000082e-05, 2.8264000000000067e-05, 2.9125000000001372e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8819999999998847e-05, 2.9111000000001802e-05, 2.8250000000000497e-05, 2.8832999999998943e-05, 2.8832999999998943e-05, 2.919499999999922e-05, 2.820899999999779e-05, 2.8818999999999373e-05, 2.8527999999999887e-05, 2.9139000000000942e-05, 2.9138000000001468e-05, 2.9125000000001372e-05, 2.8514000000000317e-05, 2.8819000000002842e-05, 2.8847000000001982e-05, 2.8526999999996944e-05, 2.8527000000000413e-05, 2.8832999999998943e-05, 2.8527000000000413e-05, 2.9124999999997903e-05, 2.8832999999998943e-05, 2.8804999999999803e-05, 2.8804999999999803e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8527999999999887e-05, 2.8791999999999707e-05, 2.8820000000002316e-05, 2.8500000000000747e-05, 2.8570000000002066e-05, 2.8471999999998138e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.583" endtime="20201112 10:14:50.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.578" endtime="20201112 10:14:50.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.588" endtime="20201112 10:14:50.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.591" endtime="20201112 10:14:50.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.590" endtime="20201112 10:14:50.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.586" endtime="20201112 10:14:50.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.217" endtime="20201112 10:14:50.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.216" endtime="20201112 10:14:50.612"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.621" endtime="20201112 10:14:50.636"></status>
</kw>
<msg timestamp="20201112 10:14:50.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.620" endtime="20201112 10:14:50.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.638" endtime="20201112 10:14:50.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.640" endtime="20201112 10:14:50.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.617" endtime="20201112 10:14:50.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.615" endtime="20201112 10:14:50.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.651" endtime="20201112 10:14:50.937"></status>
</kw>
<msg timestamp="20201112 10:14:50.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.650" endtime="20201112 10:14:50.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.941" endtime="20201112 10:14:50.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.950" endtime="20201112 10:14:50.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.647" endtime="20201112 10:14:50.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.645" endtime="20201112 10:14:50.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.957" level="INFO">${RESULT} = [{'time': 0.020163972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9402999999997292e-05, 'source_diff': 2.9402999999997292e-05}, {'time': 0.020197014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:50.953" endtime="20201112 10:14:50.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.971" level="INFO">${ACCURACY} = {'source_diff': [2.9402999999997292e-05, 3.0027999999997917e-05, 2.969399999999678e-05, 2.998699999999868e-05, 3.0027000000001913e-05, 2.9443999999999998e-05, 2.944499999999947e-05, 3.0014000000001817...</msg>
<status status="PASS" starttime="20201112 10:14:50.958" endtime="20201112 10:14:50.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.975" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.974" endtime="20201112 10:14:50.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.978" level="INFO">VALUE: [2.9402999999997292e-05, 3.0027999999997917e-05, 2.969399999999678e-05, 2.998699999999868e-05, 3.0027000000001913e-05, 2.9443999999999998e-05, 2.944499999999947e-05, 3.0014000000001817e-05, 3.0000000000002247e-05, 3.0027999999997917e-05, 2.9388999999997723e-05, 2.9389000000001192e-05, 2.9639000000001442e-05, 2.9417000000000332e-05, 2.9375000000001622e-05, 2.9417000000000332e-05, 3.0013999999998348e-05, 3.0028000000001387e-05, 3.0013999999998348e-05, 3.0014000000001817e-05, 2.9694000000000248e-05, 2.9707999999999818e-05, 3.0027999999997917e-05, 3.0013999999998348e-05, 2.972299999999886e-05, 2.970899999999929e-05, 2.9417000000000332e-05, 2.9958000000000068e-05, 2.9416000000000858e-05, 3.0027999999997917e-05, 3.0026999999998444e-05, 3.0306000000000777e-05, 2.9417000000000332e-05, 2.9430000000000428e-05, 3.0013999999998348e-05, 2.9417000000000332e-05, 2.973699999999843e-05, 2.9430000000000428e-05, 2.970900000000276e-05, 2.9721999999999388e-05, 2.9443999999999998e-05, 3.0014000000001817e-05, 2.9666000000001108e-05, 2.9680000000000678e-05, 3.0013999999998348e-05, 2.9735999999998958e-05, 2.9722000000002857e-05, 3.0014000000001817e-05, 3.0235999999999458e-05, 3.0319000000000873e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.976" endtime="20201112 10:14:50.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.972" endtime="20201112 10:14:50.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.982" endtime="20201112 10:14:50.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.985" endtime="20201112 10:14:51.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.984" endtime="20201112 10:14:51.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.980" endtime="20201112 10:14:51.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.613" endtime="20201112 10:14:51.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.613" endtime="20201112 10:14:51.007"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.015" endtime="20201112 10:14:51.031"></status>
</kw>
<msg timestamp="20201112 10:14:51.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.014" endtime="20201112 10:14:51.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.033" endtime="20201112 10:14:51.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.035" endtime="20201112 10:14:51.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.011" endtime="20201112 10:14:51.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.009" endtime="20201112 10:14:51.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.046" endtime="20201112 10:14:51.332"></status>
</kw>
<msg timestamp="20201112 10:14:51.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020307514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020338486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.044" endtime="20201112 10:14:51.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020307514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020338486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.337" endtime="20201112 10:14:51.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.345" endtime="20201112 10:14:51.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.042" endtime="20201112 10:14:51.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.040" endtime="20201112 10:14:51.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.352" level="INFO">${RESULT} = [{'time': 0.020338486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097200000000064e-05, 'source_diff': 3.097200000000064e-05}, {'time': 0.020373361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:51.349" endtime="20201112 10:14:51.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.366" level="INFO">${ACCURACY} = {'source_diff': [3.097200000000064e-05, 3.0304999999997834e-05, 3.09310000000014e-05, 3.061099999999983e-05, 3.090299999999879e-05, 3.0347000000000013e-05, 3.090300000000226e-05, 3.06249999999994e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:51.353" endtime="20201112 10:14:51.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.371" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.370" endtime="20201112 10:14:51.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.374" level="INFO">VALUE: [3.097200000000064e-05, 3.0304999999997834e-05, 3.09310000000014e-05, 3.061099999999983e-05, 3.090299999999879e-05, 3.0347000000000013e-05, 3.090300000000226e-05, 3.06249999999994e-05, 3.056900000000112e-05, 3.0277999999998167e-05, 3.088899999999922e-05, 3.06249999999994e-05, 3.120899999999732e-05, 3.0306000000000777e-05, 3.0318999999997404e-05, 3.0276999999998694e-05, 3.090299999999879e-05, 3.088899999999922e-05, 3.0305000000001303e-05, 3.0333999999999917e-05, 3.061099999999983e-05, 3.0304999999997834e-05, 3.090299999999879e-05, 3.088799999999975e-05, 3.0305000000001303e-05, 3.061099999999983e-05, 3.0305000000001303e-05, 3.091700000000183e-05, 3.12639999999996e-05, 3.066699999999811e-05, 3.0611999999999306e-05, 3.063900000000244e-05, 3.0333000000000443e-05, 3.093000000000193e-05, 3.058300000000069e-05, 3.082000000000085e-05, 3.0292000000001207e-05, 3.0319999999996877e-05, 3.120799999999785e-05, 3.117999999999871e-05, 3.06249999999994e-05, 3.068000000000168e-05, 3.090300000000226e-05, 3.0305000000001303e-05, 3.119500000000122e-05, 3.120899999999732e-05, 3.0333000000000443e-05, 3.119499999999775e-05, 3.0597999999999737e-05, 3.090299999999879e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.372" endtime="20201112 10:14:51.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.367" endtime="20201112 10:14:51.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.377" endtime="20201112 10:14:51.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.381" endtime="20201112 10:14:51.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.379" endtime="20201112 10:14:51.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.376" endtime="20201112 10:14:51.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.007" endtime="20201112 10:14:51.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.007" endtime="20201112 10:14:51.402"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.411" endtime="20201112 10:14:51.427"></status>
</kw>
<msg timestamp="20201112 10:14:51.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.409" endtime="20201112 10:14:51.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.428" endtime="20201112 10:14:51.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.431" endtime="20201112 10:14:51.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.407" endtime="20201112 10:14:51.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.404" endtime="20201112 10:14:51.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.441" endtime="20201112 10:14:51.726"></status>
</kw>
<msg timestamp="20201112 10:14:51.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020197111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020231903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.440" endtime="20201112 10:14:51.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020197111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020231903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.730" endtime="20201112 10:14:51.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.739" endtime="20201112 10:14:51.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.437" endtime="20201112 10:14:51.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.435" endtime="20201112 10:14:51.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.746" level="INFO">${RESULT} = [{'time': 0.020231903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.479199999999877e-05, 'source_diff': 3.479199999999877e-05}, {'time': 0.020273931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:51.742" endtime="20201112 10:14:51.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.760" level="INFO">${ACCURACY} = {'source_diff': [3.479199999999877e-05, 3.543099999999896e-05, 3.470799999999788e-05, 3.475000000000006e-05, 3.513800000000053e-05, 3.4888999999999754e-05, 3.4555000000002084e-05, 3.47779999999992e-05...</msg>
<status status="PASS" starttime="20201112 10:14:51.747" endtime="20201112 10:14:51.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.764" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.763" endtime="20201112 10:14:51.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.767" level="INFO">VALUE: [3.479199999999877e-05, 3.543099999999896e-05, 3.470799999999788e-05, 3.475000000000006e-05, 3.513800000000053e-05, 3.4888999999999754e-05, 3.4555000000002084e-05, 3.47779999999992e-05, 3.4611000000000364e-05, 3.492999999999899e-05, 3.4819000000001904e-05, 3.4569000000001654e-05, 3.4790999999999295e-05, 3.4832999999998004e-05, 3.5069000000002154e-05, 3.491700000000236e-05, 3.444400000000153e-05, 3.4624999999999934e-05, 3.5069000000002154e-05, 3.494399999999856e-05, 3.481999999999791e-05, 3.5111000000000864e-05, 3.4611000000000364e-05, 3.5347000000001544e-05, 3.495799999999813e-05, 3.491699999999889e-05, 3.4875000000000184e-05, 3.5389000000000254e-05, 3.4624999999999934e-05, 3.526400000000013e-05, 3.4861000000000614e-05, 3.523700000000046e-05, 3.5111000000000864e-05, 3.525000000000056e-05, 3.445799999999763e-05, 3.4624999999999934e-05, 3.44719999999972e-05, 3.5290999999999795e-05, 3.5277000000000225e-05, 3.5152999999999573e-05, 3.470800000000135e-05, 3.4582999999997754e-05, 3.498600000000074e-05, 3.4611000000000364e-05, 3.4568999999998185e-05, 3.479199999999877e-05, 3.4583000000001224e-05, 3.4861000000000614e-05, 3.44719999999972e-05, 3.4361000000000114e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.766" endtime="20201112 10:14:51.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.761" endtime="20201112 10:14:51.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.771" endtime="20201112 10:14:51.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.774" endtime="20201112 10:14:51.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.773" endtime="20201112 10:14:51.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.769" endtime="20201112 10:14:51.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.403" endtime="20201112 10:14:51.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.402" endtime="20201112 10:14:51.795"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.805" endtime="20201112 10:14:51.821"></status>
</kw>
<msg timestamp="20201112 10:14:51.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.803" endtime="20201112 10:14:51.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.823" endtime="20201112 10:14:51.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.826" endtime="20201112 10:14:51.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.800" endtime="20201112 10:14:51.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.798" endtime="20201112 10:14:51.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.836" endtime="20201112 10:14:52.124"></status>
</kw>
<msg timestamp="20201112 10:14:52.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020440069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.834" endtime="20201112 10:14:52.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020440069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.128" endtime="20201112 10:14:52.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.136" endtime="20201112 10:14:52.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.832" endtime="20201112 10:14:52.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.830" endtime="20201112 10:14:52.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.143" level="INFO">${RESULT} = [{'time': 0.020475764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.569499999999878e-05, 'source_diff': 3.569499999999878e-05}, {'time': 0.020519792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.140" endtime="20201112 10:14:52.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.158" level="INFO">${ACCURACY} = {'source_diff': [3.569499999999878e-05, 3.570899999999835e-05, 3.558399999999823e-05, 3.593099999999946e-05, 3.5445000000002e-05, 3.62780000000007e-05, 3.600000000000131e-05, 3.6346999999999074e-05, 3...</msg>
<status status="PASS" starttime="20201112 10:14:52.144" endtime="20201112 10:14:52.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.163" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.162" endtime="20201112 10:14:52.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.166" level="INFO">VALUE: [3.569499999999878e-05, 3.570899999999835e-05, 3.558399999999823e-05, 3.593099999999946e-05, 3.5445000000002e-05, 3.62780000000007e-05, 3.600000000000131e-05, 3.6346999999999074e-05, 3.601400000000088e-05, 3.6332999999999505e-05, 3.547200000000167e-05, 3.570799999999888e-05, 3.5889000000000754e-05, 3.620800000000285e-05, 3.576400000000063e-05, 3.6361000000002114e-05, 3.5625000000000934e-05, 3.5582999999998755e-05, 3.6167000000000143e-05, 3.569399999999931e-05, 3.547200000000167e-05, 3.60840000000022e-05, 3.6153000000000574e-05, 3.572199999999845e-05, 3.581999999999891e-05, 3.624999999999809e-05, 3.576400000000063e-05, 3.573699999999749e-05, 3.599999999999784e-05, 3.576400000000063e-05, 3.620899999999885e-05, 3.592999999999999e-05, 3.5874999999997714e-05, 3.6347000000002544e-05, 3.6305000000000365e-05, 3.5554999999999615e-05, 3.6445000000003e-05, 3.6375000000001684e-05, 3.542999999999949e-05, 3.59450000000025e-05, 3.6389000000001254e-05, 3.5639000000000504e-05, 3.5889000000000754e-05, 3.6167000000000143e-05, 3.5889000000000754e-05, 3.5916999999999893e-05, 3.5610999999997894e-05, 3.543099999999896e-05, 3.6360999999998644e-05, 3.5625000000000934e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.164" endtime="20201112 10:14:52.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.159" endtime="20201112 10:14:52.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.169" endtime="20201112 10:14:52.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.173" endtime="20201112 10:14:52.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.171" endtime="20201112 10:14:52.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.168" endtime="20201112 10:14:52.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.796" endtime="20201112 10:14:52.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.796" endtime="20201112 10:14:52.194"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.203" endtime="20201112 10:14:52.219"></status>
</kw>
<msg timestamp="20201112 10:14:52.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.202" endtime="20201112 10:14:52.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.220" endtime="20201112 10:14:52.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.223" endtime="20201112 10:14:52.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.199" endtime="20201112 10:14:52.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.197" endtime="20201112 10:14:52.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.233" endtime="20201112 10:14:52.520"></status>
</kw>
<msg timestamp="20201112 10:14:52.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.232" endtime="20201112 10:14:52.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.524" endtime="20201112 10:14:52.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.532" endtime="20201112 10:14:52.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.229" endtime="20201112 10:14:52.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.227" endtime="20201112 10:14:52.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.539" level="INFO">${RESULT} = [{'time': 0.020334694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7262999999999186e-05, 'source_diff': 3.7262999999999186e-05}, {'time': 0.020382722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:52.536" endtime="20201112 10:14:52.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.553" level="INFO">${ACCURACY} = {'source_diff': [3.7262999999999186e-05, 3.6874999999998714e-05, 3.7332999999997035e-05, 3.71659999999982e-05, 3.7430999999997494e-05, 3.722199999999995e-05, 3.6860999999999144e-05, 3.699999999999884e...</msg>
<status status="PASS" starttime="20201112 10:14:52.540" endtime="20201112 10:14:52.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.558" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.557" endtime="20201112 10:14:52.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.561" level="INFO">VALUE: [3.7262999999999186e-05, 3.6874999999998714e-05, 3.7332999999997035e-05, 3.71659999999982e-05, 3.7430999999997494e-05, 3.722199999999995e-05, 3.6860999999999144e-05, 3.699999999999884e-05, 3.655600000000009e-05, 3.680600000000034e-05, 3.676400000000163e-05, 3.6903000000001324e-05, 3.648599999999877e-05, 3.6582999999999755e-05, 3.6596999999999325e-05, 3.655600000000009e-05, 3.726399999999866e-05, 3.654200000000052e-05, 3.702800000000145e-05, 3.6931000000000463e-05, 3.6777000000001725e-05, 3.7110999999999394e-05, 3.672199999999945e-05, 3.6555000000000615e-05, 3.6791000000001295e-05, 3.7305000000001365e-05, 3.683399999999948e-05, 3.7096999999999825e-05, 3.6611000000002364e-05, 3.681999999999991e-05, 3.726400000000213e-05, 3.6625000000001934e-05, 3.6667000000000644e-05, 3.6916999999997424e-05, 3.6888999999998284e-05, 3.7139000000002004e-05, 3.6944999999996564e-05, 3.7360999999999644e-05, 3.6667000000000644e-05, 3.7153000000001574e-05, 3.7402999999998354e-05, 3.650000000000181e-05, 3.702800000000145e-05, 3.72780000000017e-05, 3.7389000000002254e-05, 3.6541000000001045e-05, 3.69719999999997e-05, 3.676399999999816e-05, 3.645799999999963e-05, 3.7124999999998964e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.559" endtime="20201112 10:14:52.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.554" endtime="20201112 10:14:52.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.564" endtime="20201112 10:14:52.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.568" endtime="20201112 10:14:52.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.567" endtime="20201112 10:14:52.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.563" endtime="20201112 10:14:52.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.195" endtime="20201112 10:14:52.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.194" endtime="20201112 10:14:52.589"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.598" endtime="20201112 10:14:52.615"></status>
</kw>
<msg timestamp="20201112 10:14:52.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.596" endtime="20201112 10:14:52.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.617" endtime="20201112 10:14:52.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.620" endtime="20201112 10:14:52.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.594" endtime="20201112 10:14:52.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.592" endtime="20201112 10:14:52.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.630" endtime="20201112 10:14:52.915"></status>
</kw>
<msg timestamp="20201112 10:14:52.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020967389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021005139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.629" endtime="20201112 10:14:52.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020967389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021005139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.920" endtime="20201112 10:14:52.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.928" endtime="20201112 10:14:52.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.626" endtime="20201112 10:14:52.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.624" endtime="20201112 10:14:52.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.935" level="INFO">${RESULT} = [{'time': 0.021005139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.774999999999959e-05, 'source_diff': 3.774999999999959e-05}, {'time': 0.021050167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.932" endtime="20201112 10:14:52.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.949" level="INFO">${ACCURACY} = {'source_diff': [3.774999999999959e-05, 3.8111000000000395e-05, 3.827799999999923e-05, 3.8361000000000645e-05, 3.7638999999999034e-05, 3.808400000000073e-05, 3.8083000000001255e-05, 3.822200000000095e...</msg>
<status status="PASS" starttime="20201112 10:14:52.936" endtime="20201112 10:14:52.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.954" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.953" endtime="20201112 10:14:52.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.956" level="INFO">VALUE: [3.774999999999959e-05, 3.8111000000000395e-05, 3.827799999999923e-05, 3.8361000000000645e-05, 3.7638999999999034e-05, 3.808400000000073e-05, 3.8083000000001255e-05, 3.822200000000095e-05, 3.7403000000001824e-05, 3.8375000000000214e-05, 3.774999999999959e-05, 3.751399999999891e-05, 3.7847000000000575e-05, 3.794399999999809e-05, 3.751399999999891e-05, 3.794399999999809e-05, 3.797199999999723e-05, 3.7638999999999034e-05, 3.7638999999999034e-05, 3.827799999999923e-05, 3.825000000000009e-05, 3.831999999999794e-05, 3.8153000000002574e-05, 3.826399999999966e-05, 3.751399999999891e-05, 3.7445000000000533e-05, 3.797300000000017e-05, 3.825000000000009e-05, 3.8138999999999534e-05, 3.805600000000159e-05, 3.773699999999949e-05, 3.782000000000091e-05, 3.7833000000001005e-05, 3.826399999999966e-05, 3.823600000000052e-05, 3.7402999999998354e-05, 3.7889000000002754e-05, 3.8361000000000645e-05, 3.819400000000181e-05, 3.8083000000001255e-05, 3.8124999999999964e-05, 3.7903000000002324e-05, 3.755600000000109e-05, 3.7583000000000755e-05, 3.8319000000001935e-05, 3.783400000000048e-05, 3.820799999999791e-05, 3.832000000000141e-05, 3.7624999999999464e-05, 3.826399999999966e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.955" endtime="20201112 10:14:52.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.950" endtime="20201112 10:14:52.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.960" endtime="20201112 10:14:52.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.964" endtime="20201112 10:14:52.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.962" endtime="20201112 10:14:52.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.958" endtime="20201112 10:14:52.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.590" endtime="20201112 10:14:52.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.589" endtime="20201112 10:14:52.985"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.994" endtime="20201112 10:14:53.010"></status>
</kw>
<msg timestamp="20201112 10:14:53.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.992" endtime="20201112 10:14:53.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.011" endtime="20201112 10:14:53.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.014" endtime="20201112 10:14:53.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.990" endtime="20201112 10:14:53.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.987" endtime="20201112 10:14:53.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.024" endtime="20201112 10:14:53.311"></status>
</kw>
<msg timestamp="20201112 10:14:53.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020409639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.023" endtime="20201112 10:14:53.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020409639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.315" endtime="20201112 10:14:53.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.324" endtime="20201112 10:14:53.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.020" endtime="20201112 10:14:53.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.018" endtime="20201112 10:14:53.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.331" level="INFO">${RESULT} = [{'time': 0.020409639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.882000000000191e-05, 'source_diff': 3.882000000000191e-05}, {'time': 0.020454611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:53.327" endtime="20201112 10:14:53.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.345" level="INFO">${ACCURACY} = {'source_diff': [3.882000000000191e-05, 3.927800000000023e-05, 3.8583000000001755e-05, 3.8930999999998994e-05, 3.8666999999999174e-05, 3.876399999999669e-05, 3.8931000000002464e-05, 3.902799999999998e...</msg>
<status status="PASS" starttime="20201112 10:14:53.332" endtime="20201112 10:14:53.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.349" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.348" endtime="20201112 10:14:53.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.352" level="INFO">VALUE: [3.882000000000191e-05, 3.927800000000023e-05, 3.8583000000001755e-05, 3.8930999999998994e-05, 3.8666999999999174e-05, 3.876399999999669e-05, 3.8931000000002464e-05, 3.902799999999998e-05, 3.8416999999998924e-05, 3.906999999999869e-05, 3.9153000000000104e-05, 3.926400000000066e-05, 3.931999999999894e-05, 3.941600000000045e-05, 3.8944999999998564e-05, 3.8568999999998715e-05, 3.891599999999995e-05, 3.923599999999805e-05, 3.8652999999999604e-05, 3.892999999999952e-05, 3.9346999999998605e-05, 3.8902999999999854e-05, 3.8832999999998535e-05, 3.877799999999973e-05, 3.9139000000000534e-05, 3.8846999999998105e-05, 3.931999999999894e-05, 3.8402999999999354e-05, 3.854200000000252e-05, 3.904199999999955e-05, 3.9374999999997745e-05, 3.8916999999999424e-05, 3.883400000000148e-05, 3.8459000000001103e-05, 3.9139000000000534e-05, 3.8847000000001575e-05, 3.8568999999998715e-05, 3.875000000000059e-05, 3.91660000000002e-05, 3.850000000000034e-05, 3.8790999999999826e-05, 3.9346999999998605e-05, 3.8818999999998965e-05, 3.9347000000002075e-05, 3.879200000000277e-05, 3.941600000000045e-05, 3.9139000000000534e-05, 3.87780000000032e-05, 3.9125000000000965e-05, 3.895799999999866e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.350" endtime="20201112 10:14:53.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.346" endtime="20201112 10:14:53.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.356" endtime="20201112 10:14:53.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.359" endtime="20201112 10:14:53.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.358" endtime="20201112 10:14:53.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.354" endtime="20201112 10:14:53.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.986" endtime="20201112 10:14:53.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.985" endtime="20201112 10:14:53.380"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.389" endtime="20201112 10:14:53.406"></status>
</kw>
<msg timestamp="20201112 10:14:53.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.388" endtime="20201112 10:14:53.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.408" endtime="20201112 10:14:53.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.411" endtime="20201112 10:14:53.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.385" endtime="20201112 10:14:53.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.383" endtime="20201112 10:14:53.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.421" endtime="20201112 10:14:53.707"></status>
</kw>
<msg timestamp="20201112 10:14:53.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021021125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.419" endtime="20201112 10:14:53.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021021125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.712" endtime="20201112 10:14:53.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.720" endtime="20201112 10:14:53.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.417" endtime="20201112 10:14:53.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.415" endtime="20201112 10:14:53.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.727" level="INFO">${RESULT} = [{'time': 0.021060694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9568999999999716e-05, 'source_diff': 3.9568999999999716e-05}, {'time': 0.02111175, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:53.723" endtime="20201112 10:14:53.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.742" level="INFO">${ACCURACY} = {'source_diff': [3.9568999999999716e-05, 3.977799999999726e-05, 3.9639000000001035e-05, 4.040199999999841e-05, 4.0082999999999785e-05, 4.020799999999991e-05, 3.9861000000002145e-05, 4.01660000000012e-...</msg>
<status status="PASS" starttime="20201112 10:14:53.728" endtime="20201112 10:14:53.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.747" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.746" endtime="20201112 10:14:53.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.749" level="INFO">VALUE: [3.9568999999999716e-05, 3.977799999999726e-05, 3.9639000000001035e-05, 4.040199999999841e-05, 4.0082999999999785e-05, 4.020799999999991e-05, 3.9861000000002145e-05, 4.01660000000012e-05, 4.0138999999998065e-05, 4.0069000000000216e-05, 3.9847000000002575e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.956999999999919e-05, 4.02920000000008e-05, 3.9930999999999994e-05, 3.9582999999999285e-05, 3.9889000000001285e-05, 4.0138999999998065e-05, 3.9694999999999314e-05, 4.0222999999998954e-05, 3.988800000000181e-05, 4.0054999999997176e-05, 4.034799999999908e-05, 4.0319000000000466e-05, 4.0290999999997856e-05, 3.9611000000001895e-05, 3.9680999999999744e-05, 4.0125000000001965e-05, 4.022199999999948e-05, 3.9874999999998245e-05, 3.970799999999941e-05, 3.9846999999999105e-05, 3.9555000000000146e-05, 3.955599999999962e-05, 4.036199999999865e-05, 4.0360999999999175e-05, 3.99859999999988e-05, 4.0319000000000466e-05, 3.9430999999999494e-05, 3.9444999999999064e-05, 3.954200000000005e-05, 4.009799999999883e-05, 3.9639000000001035e-05, 3.9708999999998884e-05, 3.9639000000001035e-05, 3.9555000000000146e-05, 4.0305000000000896e-05, 4.015199999999816e-05, 4.020799999999991e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.748" endtime="20201112 10:14:53.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.743" endtime="20201112 10:14:53.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.753" endtime="20201112 10:14:53.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.757" endtime="20201112 10:14:53.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.755" endtime="20201112 10:14:53.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.751" endtime="20201112 10:14:53.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.381" endtime="20201112 10:14:53.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.381" endtime="20201112 10:14:53.778"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.787" endtime="20201112 10:14:53.804"></status>
</kw>
<msg timestamp="20201112 10:14:53.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.785" endtime="20201112 10:14:53.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.805" endtime="20201112 10:14:53.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.808" endtime="20201112 10:14:53.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.783" endtime="20201112 10:14:53.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.780" endtime="20201112 10:14:53.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.818" endtime="20201112 10:14:54.105"></status>
</kw>
<msg timestamp="20201112 10:14:54.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020962194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.817" endtime="20201112 10:14:54.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020962194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.109" endtime="20201112 10:14:54.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.118" endtime="20201112 10:14:54.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.814" endtime="20201112 10:14:54.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.812" endtime="20201112 10:14:54.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.125" level="INFO">${RESULT} = [{'time': 0.020962194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.093000000000152e-05, 'source_diff': 4.093000000000152e-05}, {'time': 0.021012222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.122" endtime="20201112 10:14:54.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.139" level="INFO">${ACCURACY} = {'source_diff': [4.093000000000152e-05, 4.127800000000223e-05, 4.069400000000084e-05, 4.0624999999998995e-05, 4.1083000000000786e-05, 4.093000000000152e-05, 4.0653000000001605e-05, 4.101399999999894e-...</msg>
<status status="PASS" starttime="20201112 10:14:54.126" endtime="20201112 10:14:54.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.144" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.143" endtime="20201112 10:14:54.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.147" level="INFO">VALUE: [4.093000000000152e-05, 4.127800000000223e-05, 4.069400000000084e-05, 4.0624999999998995e-05, 4.1083000000000786e-05, 4.093000000000152e-05, 4.0653000000001605e-05, 4.101399999999894e-05, 4.047199999999973e-05, 4.101399999999894e-05, 4.0667000000001174e-05, 4.0638999999998565e-05, 4.0624999999998995e-05, 4.0653000000001605e-05, 4.0625000000002465e-05, 4.0723000000002924e-05, 4.0861000000003145e-05, 4.108400000000026e-05, 4.09859999999998e-05, 4.1138999999999065e-05, 4.127799999999876e-05, 4.105599999999765e-05, 4.06799999999978e-05, 4.0540999999998106e-05, 4.115199999999916e-05, 4.1138999999999065e-05, 4.0653000000001605e-05, 4.0638999999998565e-05, 4.0554999999997676e-05, 4.1097000000000355e-05, 4.0652999999998135e-05, 4.132000000000094e-05, 4.0917000000001424e-05, 4.1124999999999495e-05, 4.0931000000000994e-05, 4.049999999999887e-05, 4.080600000000087e-05, 4.082000000000044e-05, 4.082000000000044e-05, 4.124999999999962e-05, 4.0888999999998815e-05, 4.0527000000002006e-05, 4.0972999999999704e-05, 4.091600000000195e-05, 4.0916999999997955e-05, 4.116599999999873e-05, 4.06799999999978e-05, 4.101400000000241e-05, 4.0860999999999675e-05, 4.0902999999998385e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.145" endtime="20201112 10:14:54.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.140" endtime="20201112 10:14:54.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.150" endtime="20201112 10:14:54.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.154" endtime="20201112 10:14:54.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.152" endtime="20201112 10:14:54.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.149" endtime="20201112 10:14:54.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.779" endtime="20201112 10:14:54.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.778" endtime="20201112 10:14:54.175"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.184" endtime="20201112 10:14:54.201"></status>
</kw>
<msg timestamp="20201112 10:14:54.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.183" endtime="20201112 10:14:54.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.202" endtime="20201112 10:14:54.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.205" endtime="20201112 10:14:54.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.180" endtime="20201112 10:14:54.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.178" endtime="20201112 10:14:54.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.216" endtime="20201112 10:14:54.502"></status>
</kw>
<msg timestamp="20201112 10:14:54.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020903028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.214" endtime="20201112 10:14:54.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020903028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.506" endtime="20201112 10:14:54.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.515" endtime="20201112 10:14:54.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.211" endtime="20201112 10:14:54.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.210" endtime="20201112 10:14:54.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.522" level="INFO">${RESULT} = [{'time': 0.020944611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1582999999997816e-05, 'source_diff': 4.1582999999997816e-05}, {'time': 0.020993556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:54.519" endtime="20201112 10:14:54.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.536" level="INFO">${ACCURACY} = {'source_diff': [4.1582999999997816e-05, 4.205599999999865e-05, 4.1931000000001994e-05, 4.1624999999999995e-05, 4.1541000000002576e-05, 4.2346999999998136e-05, 4.149999999999987e-05, 4.223599999999758...</msg>
<status status="PASS" starttime="20201112 10:14:54.523" endtime="20201112 10:14:54.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.540" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.539" endtime="20201112 10:14:54.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.543" level="INFO">VALUE: [4.1582999999997816e-05, 4.205599999999865e-05, 4.1931000000001994e-05, 4.1624999999999995e-05, 4.1541000000002576e-05, 4.2346999999998136e-05, 4.149999999999987e-05, 4.223599999999758e-05, 4.219400000000234e-05, 4.226400000000019e-05, 4.1611000000000425e-05, 4.154199999999858e-05, 4.1611000000000425e-05, 4.2125000000000495e-05, 4.151399999999944e-05, 4.2389000000000315e-05, 4.2361000000001175e-05, 4.155600000000162e-05, 4.1597000000000856e-05, 4.155599999999815e-05, 4.205600000000212e-05, 4.155599999999815e-05, 4.2194999999998345e-05, 4.183400000000101e-05, 4.176399999999969e-05, 4.2040999999999606e-05, 4.1582999999997816e-05, 4.170800000000141e-05, 4.1819000000001966e-05, 4.1790999999999356e-05, 4.177799999999926e-05, 4.2054999999999176e-05, 4.1790999999999356e-05, 4.1931000000001994e-05, 4.2375000000000745e-05, 4.2152999999999635e-05, 4.2082999999998316e-05, 4.1431000000001494e-05, 4.229199999999933e-05, 4.220799999999844e-05, 4.2125000000000495e-05, 4.201399999999994e-05, 4.1930999999998525e-05, 4.2388999999996846e-05, 4.2110999999997456e-05, 4.184800000000058e-05, 4.2027000000000037e-05, 4.1611000000000425e-05, 4.2139000000000065e-05, 4.191599999999948e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.542" endtime="20201112 10:14:54.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.537" endtime="20201112 10:14:54.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.547" endtime="20201112 10:14:54.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.550" endtime="20201112 10:14:54.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.549" endtime="20201112 10:14:54.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.545" endtime="20201112 10:14:54.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.176" endtime="20201112 10:14:54.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.175" endtime="20201112 10:14:54.571"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.580" endtime="20201112 10:14:54.598"></status>
</kw>
<msg timestamp="20201112 10:14:54.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.579" endtime="20201112 10:14:54.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.599" endtime="20201112 10:14:54.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.602" endtime="20201112 10:14:54.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.576" endtime="20201112 10:14:54.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.574" endtime="20201112 10:14:54.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.612" endtime="20201112 10:14:54.898"></status>
</kw>
<msg timestamp="20201112 10:14:54.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020786083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.611" endtime="20201112 10:14:54.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020786083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.902" endtime="20201112 10:14:54.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.911" endtime="20201112 10:14:54.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.608" endtime="20201112 10:14:54.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.606" endtime="20201112 10:14:54.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.918" level="INFO">${RESULT} = [{'time': 0.020786083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.325000000000162e-05, 'source_diff': 4.325000000000162e-05}, {'time': 0.020837097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.914" endtime="20201112 10:14:54.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.932" level="INFO">${ACCURACY} = {'source_diff': [4.325000000000162e-05, 4.242999999999955e-05, 4.273600000000155e-05, 4.2874999999997776e-05, 4.3153000000000635e-05, 4.329200000000033e-05, 4.2610999999997956e-05, 4.3082999999999316e...</msg>
<status status="PASS" starttime="20201112 10:14:54.919" endtime="20201112 10:14:54.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.937" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.935" endtime="20201112 10:14:54.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.939" level="INFO">VALUE: [4.325000000000162e-05, 4.242999999999955e-05, 4.273600000000155e-05, 4.2874999999997776e-05, 4.3153000000000635e-05, 4.329200000000033e-05, 4.2610999999997956e-05, 4.3082999999999316e-05, 4.334799999999861e-05, 4.281999999999897e-05, 4.331999999999947e-05, 4.255599999999915e-05, 4.258399999999829e-05, 4.3360999999998706e-05, 4.2638999999997096e-05, 4.251399999999697e-05, 4.293000000000005e-05, 4.3374999999998276e-05, 4.269400000000284e-05, 4.3139000000001065e-05, 4.2791000000000357e-05, 4.3068999999999746e-05, 4.2875000000001245e-05, 4.3374999999998276e-05, 4.326399999999772e-05, 4.2889000000000815e-05, 4.3124999999998026e-05, 4.331999999999947e-05, 4.2639000000000565e-05, 4.332000000000294e-05, 4.333399999999904e-05, 4.254199999999958e-05, 4.3374999999998276e-05, 4.2611000000001426e-05, 4.2431000000002494e-05, 4.2889000000000815e-05, 4.26120000000009e-05, 4.305599999999965e-05, 4.3138999999997596e-05, 4.290200000000091e-05, 4.3291000000000857e-05, 4.291600000000048e-05, 4.322199999999901e-05, 4.242999999999955e-05, 4.3305000000000426e-05, 4.29860000000018e-05, 4.3125000000001495e-05, 4.3417000000000455e-05, 4.3375000000001745e-05, 4.2916999999999955e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.938" endtime="20201112 10:14:54.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.933" endtime="20201112 10:14:54.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.943" endtime="20201112 10:14:54.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.947" endtime="20201112 10:14:54.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.945" endtime="20201112 10:14:54.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.941" endtime="20201112 10:14:54.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.572" endtime="20201112 10:14:54.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.572" endtime="20201112 10:14:54.968"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.977" endtime="20201112 10:14:54.992"></status>
</kw>
<msg timestamp="20201112 10:14:54.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.975" endtime="20201112 10:14:54.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.994" endtime="20201112 10:14:54.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.996" endtime="20201112 10:14:54.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.972" endtime="20201112 10:14:55.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.970" endtime="20201112 10:14:55.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.007" endtime="20201112 10:14:55.293"></status>
</kw>
<msg timestamp="20201112 10:14:55.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.005" endtime="20201112 10:14:55.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.298" endtime="20201112 10:14:55.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.306" endtime="20201112 10:14:55.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.002" endtime="20201112 10:14:55.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.001" endtime="20201112 10:14:55.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.313" level="INFO">${RESULT} = [{'time': 0.020196486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3653000000001135e-05, 'source_diff': 4.3653000000001135e-05}, {'time': 0.020249417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:55.310" endtime="20201112 10:14:55.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.328" level="INFO">${ACCURACY} = {'source_diff': [4.3653000000001135e-05, 4.3945000000000095e-05, 4.4153000000001635e-05, 4.401400000000194e-05, 4.3541000000001107e-05, 4.350000000000187e-05, 4.3833000000000066e-05, 4.344399999999665...</msg>
<status status="PASS" starttime="20201112 10:14:55.314" endtime="20201112 10:14:55.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.333" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.332" endtime="20201112 10:14:55.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.335" level="INFO">VALUE: [4.3653000000001135e-05, 4.3945000000000095e-05, 4.4153000000001635e-05, 4.401400000000194e-05, 4.3541000000001107e-05, 4.350000000000187e-05, 4.3833000000000066e-05, 4.344399999999665e-05, 4.39999999999989e-05, 4.3888999999998346e-05, 4.344400000000012e-05, 4.402799999999804e-05, 4.379200000000083e-05, 4.43060000000009e-05, 4.373599999999908e-05, 4.404199999999761e-05, 4.43329999999971e-05, 4.3888999999998346e-05, 4.38060000000004e-05, 4.400000000000237e-05, 4.4222999999999485e-05, 4.352800000000101e-05, 4.405600000000065e-05, 4.356999999999972e-05, 4.4139000000002065e-05, 4.4388999999998846e-05, 4.420800000000044e-05, 4.3874999999998776e-05, 4.4347000000000136e-05, 4.3833000000000066e-05, 4.424999999999915e-05, 4.383399999999954e-05, 4.419400000000087e-05, 4.4096999999999886e-05, 4.3931000000000525e-05, 4.423599999999958e-05, 4.4347000000000136e-05, 4.4333000000000566e-05, 4.436200000000265e-05, 4.4374999999999276e-05, 4.376400000000169e-05, 4.398599999999933e-05, 4.432000000000047e-05, 4.3916999999997486e-05, 4.3846999999999636e-05, 4.4055000000001177e-05, 4.3625000000001996e-05, 4.4096999999999886e-05, 4.398599999999933e-05, 4.4360999999999706e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.334" endtime="20201112 10:14:55.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.329" endtime="20201112 10:14:55.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.343" endtime="20201112 10:14:55.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.347" endtime="20201112 10:14:55.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.345" endtime="20201112 10:14:55.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.341" endtime="20201112 10:14:55.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.969" endtime="20201112 10:14:55.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.968" endtime="20201112 10:14:55.368"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.377" endtime="20201112 10:14:55.393"></status>
</kw>
<msg timestamp="20201112 10:14:55.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.375" endtime="20201112 10:14:55.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.395" endtime="20201112 10:14:55.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.398" endtime="20201112 10:14:55.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.372" endtime="20201112 10:14:55.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.370" endtime="20201112 10:14:55.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.408" endtime="20201112 10:14:55.695"></status>
</kw>
<msg timestamp="20201112 10:14:55.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02026875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020314014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:55.406" endtime="20201112 10:14:55.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02026875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020314014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:55.699" endtime="20201112 10:14:55.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.708" endtime="20201112 10:14:55.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.404" endtime="20201112 10:14:55.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.402" endtime="20201112 10:14:55.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.714" level="INFO">${RESULT} = [{'time': 0.020314014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.526399999999972e-05, 'source_diff': 4.526399999999972e-05}, {'time': 0.020369014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:55.711" endtime="20201112 10:14:55.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.728" level="INFO">${ACCURACY} = {'source_diff': [4.526399999999972e-05, 4.49999999999999e-05, 4.536099999999724e-05, 4.459699999999692e-05, 4.458399999999682e-05, 4.4695000000000845e-05, 4.452799999999854e-05, 4.520800000000144e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:55.716" endtime="20201112 10:14:55.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.733" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.732" endtime="20201112 10:14:55.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.736" level="INFO">VALUE: [4.526399999999972e-05, 4.49999999999999e-05, 4.536099999999724e-05, 4.459699999999692e-05, 4.458399999999682e-05, 4.4695000000000845e-05, 4.452799999999854e-05, 4.520800000000144e-05, 4.5153000000002635e-05, 4.4736999999999555e-05, 4.538800000000037e-05, 4.4624999999999526e-05, 4.495800000000119e-05, 4.4847000000000636e-05, 4.4597000000000386e-05, 4.44999999999994e-05, 4.456899999999778e-05, 4.536099999999724e-05, 4.4389000000002315e-05, 4.5180999999998306e-05, 4.4861000000000206e-05, 4.469400000000137e-05, 4.455600000000115e-05, 4.49999999999999e-05, 4.4431000000001025e-05, 4.5153000000002635e-05, 4.504200000000208e-05, 4.459799999999986e-05, 4.4624999999999526e-05, 4.531899999999853e-05, 4.455599999999768e-05, 4.497200000000076e-05, 4.4819000000001497e-05, 4.4695000000000845e-05, 4.5083000000001316e-05, 4.51939999999984e-05, 4.502799999999904e-05, 4.480500000000193e-05, 4.44999999999994e-05, 4.526399999999972e-05, 4.484699999999717e-05, 4.4624999999999526e-05, 4.501400000000294e-05, 4.483400000000054e-05, 4.4917000000001955e-05, 4.456999999999725e-05, 4.482000000000097e-05, 4.502799999999904e-05, 4.448599999999983e-05, 4.5152999999999166e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.734" endtime="20201112 10:14:55.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.729" endtime="20201112 10:14:55.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.739" endtime="20201112 10:14:55.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.743" endtime="20201112 10:14:55.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.741" endtime="20201112 10:14:55.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.738" endtime="20201112 10:14:55.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.369" endtime="20201112 10:14:55.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.368" endtime="20201112 10:14:55.764"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.773" endtime="20201112 10:14:55.790"></status>
</kw>
<msg timestamp="20201112 10:14:55.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.771" endtime="20201112 10:14:55.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.791" endtime="20201112 10:14:55.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.794" endtime="20201112 10:14:55.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.769" endtime="20201112 10:14:55.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.767" endtime="20201112 10:14:55.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.804" endtime="20201112 10:14:56.089"></status>
</kw>
<msg timestamp="20201112 10:14:56.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019904625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.802" endtime="20201112 10:14:56.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019904625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.093" endtime="20201112 10:14:56.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.102" endtime="20201112 10:14:56.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.800" endtime="20201112 10:14:56.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.798" endtime="20201112 10:14:56.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.108" level="INFO">${RESULT} = [{'time': 0.019904625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.634699999999867e-05, 'source_diff': 4.634699999999867e-05}, {'time': 0.019962639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:56.105" endtime="20201112 10:14:56.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.122" level="INFO">${ACCURACY} = {'source_diff': [4.634699999999867e-05, 4.5902999999999916e-05, 4.5695000000001845e-05, 4.572200000000151e-05, 4.58060000000024e-05, 4.5445000000001595e-05, 4.612499999999756e-05, 4.555500000000268e-0...</msg>
<status status="PASS" starttime="20201112 10:14:56.109" endtime="20201112 10:14:56.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.126" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.125" endtime="20201112 10:14:56.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.129" level="INFO">VALUE: [4.634699999999867e-05, 4.5902999999999916e-05, 4.5695000000001845e-05, 4.572200000000151e-05, 4.58060000000024e-05, 4.5445000000001595e-05, 4.612499999999756e-05, 4.555500000000268e-05, 4.613800000000112e-05, 4.591600000000001e-05, 4.6125000000001026e-05, 4.626300000000125e-05, 4.634699999999867e-05, 4.599999999999743e-05, 4.551399999999997e-05, 4.592999999999958e-05, 4.594400000000262e-05, 4.5402999999999416e-05, 4.5889000000000346e-05, 4.556899999999878e-05, 4.586099999999774e-05, 4.551399999999997e-05, 4.5416999999998986e-05, 4.6139000000000596e-05, 4.58199999999985e-05, 4.567999999999933e-05, 4.552799999999954e-05, 4.559800000000086e-05, 4.6125000000001026e-05, 4.606899999999928e-05, 4.544400000000212e-05, 4.595800000000219e-05, 4.555499999999921e-05, 4.579099999999989e-05, 4.617999999999983e-05, 4.625000000000115e-05, 4.5902999999999916e-05, 4.6361000000001706e-05, 4.606899999999928e-05, 4.622200000000201e-05, 4.629199999999986e-05, 4.5916999999999486e-05, 4.626400000000072e-05, 4.584699999999817e-05, 4.6013999999997e-05, 4.5709000000001415e-05, 4.584799999999764e-05, 4.5737000000000555e-05, 4.6125000000001026e-05, 4.605599999999918e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.127" endtime="20201112 10:14:56.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.123" endtime="20201112 10:14:56.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.132" endtime="20201112 10:14:56.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.136" endtime="20201112 10:14:56.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.134" endtime="20201112 10:14:56.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.131" endtime="20201112 10:14:56.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.765" endtime="20201112 10:14:56.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.764" endtime="20201112 10:14:56.157"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.166" endtime="20201112 10:14:56.186"></status>
</kw>
<msg timestamp="20201112 10:14:56.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.164" endtime="20201112 10:14:56.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.189" endtime="20201112 10:14:56.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.194" endtime="20201112 10:14:56.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.162" endtime="20201112 10:14:56.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.160" endtime="20201112 10:14:56.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.215" endtime="20201112 10:14:56.508"></status>
</kw>
<msg timestamp="20201112 10:14:56.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021228111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:56.212" endtime="20201112 10:14:56.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021228111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:56.512" endtime="20201112 10:14:56.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.520" endtime="20201112 10:14:56.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.206" endtime="20201112 10:14:56.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.203" endtime="20201112 10:14:56.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.526" level="INFO">${RESULT} = [{'time': 0.0212755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.738899999999838e-05, 'source_diff': 4.738899999999838e-05}, {'time': 0.0213345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201112 10:14:56.523" endtime="20201112 10:14:56.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.540" level="INFO">${ACCURACY} = {'source_diff': [4.738899999999838e-05, 4.705600000000018e-05, 4.720799999999997e-05, 4.708299999999985e-05, 4.655599999999968e-05, 4.699999999999843e-05, 4.732e-05, 4.730600000000043e-05, 4.695900000...</msg>
<status status="PASS" starttime="20201112 10:14:56.527" endtime="20201112 10:14:56.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.544" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.543" endtime="20201112 10:14:56.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.547" level="INFO">VALUE: [4.738899999999838e-05, 4.705600000000018e-05, 4.720799999999997e-05, 4.708299999999985e-05, 4.655599999999968e-05, 4.699999999999843e-05, 4.732e-05, 4.730600000000043e-05, 4.6959000000002665e-05, 4.662499999999806e-05, 4.644399999999965e-05, 4.640200000000094e-05, 4.654100000000064e-05, 4.6847000000002637e-05, 4.6903000000000916e-05, 4.726400000000172e-05, 4.65000000000014e-05, 4.677800000000079e-05, 4.7167000000000736e-05, 4.670799999999947e-05, 4.7375000000002276e-05, 4.724999999999868e-05, 4.6944999999999626e-05, 4.724999999999868e-05, 4.733399999999957e-05, 4.729200000000086e-05, 4.691699999999702e-05, 4.684699999999917e-05, 4.691699999999702e-05, 4.726299999999878e-05, 4.666600000000076e-05, 4.693000000000058e-05, 4.702700000000157e-05, 4.720799999999997e-05, 4.724999999999868e-05, 4.71529999999977e-05, 4.658299999999935e-05, 4.648599999999836e-05, 4.68329999999996e-05, 4.71940000000004e-05, 4.7389000000001846e-05, 4.648600000000183e-05, 4.697200000000276e-05, 4.6875000000001776e-05, 4.6694999999999376e-05, 4.698600000000233e-05, 4.730600000000043e-05, 4.670799999999947e-05, 4.734799999999914e-05, 4.726400000000172e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.545" endtime="20201112 10:14:56.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.541" endtime="20201112 10:14:56.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.550" endtime="20201112 10:14:56.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.554" endtime="20201112 10:14:56.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.552" endtime="20201112 10:14:56.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.549" endtime="20201112 10:14:56.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.158" endtime="20201112 10:14:56.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.158" endtime="20201112 10:14:56.575"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.583" endtime="20201112 10:14:56.600"></status>
</kw>
<msg timestamp="20201112 10:14:56.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.582" endtime="20201112 10:14:56.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.602" endtime="20201112 10:14:56.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.604" endtime="20201112 10:14:56.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.579" endtime="20201112 10:14:56.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.577" endtime="20201112 10:14:56.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.614" endtime="20201112 10:14:56.900"></status>
</kw>
<msg timestamp="20201112 10:14:56.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.613" endtime="20201112 10:14:56.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.904" endtime="20201112 10:14:56.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.912" endtime="20201112 10:14:56.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.610" endtime="20201112 10:14:56.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.609" endtime="20201112 10:14:56.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.919" level="INFO">${RESULT} = [{'time': 0.020188722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.81529999999987e-05, 'source_diff': 4.81529999999987e-05}, {'time': 0.020242736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:56.915" endtime="20201112 10:14:56.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.933" level="INFO">${ACCURACY} = {'source_diff': [4.81529999999987e-05, 4.762499999999906e-05, 4.743000000000108e-05, 4.76529999999982e-05, 4.799999999999943e-05, 4.816699999999827e-05, 4.7944999999997157e-05, 4.817999999999836e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:56.920" endtime="20201112 10:14:56.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.938" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.937" endtime="20201112 10:14:56.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.940" level="INFO">VALUE: [4.81529999999987e-05, 4.762499999999906e-05, 4.743000000000108e-05, 4.76529999999982e-05, 4.799999999999943e-05, 4.816699999999827e-05, 4.7944999999997157e-05, 4.817999999999836e-05, 4.748599999999936e-05, 4.786099999999974e-05, 4.78469999999967e-05, 4.76529999999982e-05, 4.813899999999913e-05, 4.816599999999879e-05, 4.787499999999931e-05, 4.763899999999863e-05, 4.745800000000022e-05, 4.795800000000072e-05, 4.759699999999992e-05, 4.7903000000001916e-05, 4.831899999999806e-05, 4.758300000000035e-05, 4.748599999999936e-05, 4.83330000000011e-05, 4.8125000000003026e-05, 4.776399999999875e-05, 4.833400000000057e-05, 4.8167000000001736e-05, 4.837499999999981e-05, 4.818000000000183e-05, 4.7889000000002346e-05, 4.7695000000000376e-05, 4.784700000000017e-05, 4.783400000000007e-05, 4.751400000000197e-05, 4.762499999999906e-05, 4.815199999999922e-05, 4.815199999999922e-05, 4.81529999999987e-05, 4.76529999999982e-05, 4.7653000000001666e-05, 4.805600000000118e-05, 4.806900000000128e-05, 4.7653000000001666e-05, 4.7708999999999946e-05, 4.755599999999721e-05, 4.7931000000001056e-05, 4.826399999999925e-05, 4.802799999999857e-05, 4.784700000000017e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.939" endtime="20201112 10:14:56.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.934" endtime="20201112 10:14:56.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.944" endtime="20201112 10:14:56.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.947" endtime="20201112 10:14:56.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.946" endtime="20201112 10:14:56.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.942" endtime="20201112 10:14:56.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.575" endtime="20201112 10:14:56.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.575" endtime="20201112 10:14:56.968"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.977" endtime="20201112 10:14:56.994"></status>
</kw>
<msg timestamp="20201112 10:14:56.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.975" endtime="20201112 10:14:56.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.996" endtime="20201112 10:14:56.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.998" endtime="20201112 10:14:57.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.972" endtime="20201112 10:14:57.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.970" endtime="20201112 10:14:57.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.008" endtime="20201112 10:14:57.295"></status>
</kw>
<msg timestamp="20201112 10:14:57.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020517458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.007" endtime="20201112 10:14:57.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020517458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.299" endtime="20201112 10:14:57.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.307" endtime="20201112 10:14:57.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.004" endtime="20201112 10:14:57.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.003" endtime="20201112 10:14:57.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.314" level="INFO">${RESULT} = [{'time': 0.020517458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.923599999999764e-05, 'source_diff': 4.923599999999764e-05}, {'time': 0.020573458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:57.310" endtime="20201112 10:14:57.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.327" level="INFO">${ACCURACY} = {'source_diff': [4.923599999999764e-05, 4.844399999999818e-05, 4.877699999999985e-05, 4.938900000000038e-05, 4.898599999999739e-05, 4.892999999999911e-05, 4.862500000000006e-05, 4.841699999999852e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:57.315" endtime="20201112 10:14:57.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.332" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.331" endtime="20201112 10:14:57.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.334" level="INFO">VALUE: [4.923599999999764e-05, 4.844399999999818e-05, 4.877699999999985e-05, 4.938900000000038e-05, 4.898599999999739e-05, 4.892999999999911e-05, 4.862500000000006e-05, 4.841699999999852e-05, 4.848600000000036e-05, 4.93469999999982e-05, 4.8473000000000266e-05, 4.941600000000004e-05, 4.927799999999982e-05, 4.858400000000082e-05, 4.886200000000021e-05, 4.856899999999831e-05, 4.9153000000003166e-05, 4.8695000000001376e-05, 4.937500000000081e-05, 4.917999999999936e-05, 4.929099999999992e-05, 4.847200000000079e-05, 4.843000000000208e-05, 4.880500000000246e-05, 4.842999999999861e-05, 4.927799999999982e-05, 4.897199999999782e-05, 4.876399999999975e-05, 4.906999999999828e-05, 4.904200000000261e-05, 4.862500000000006e-05, 4.8973000000000766e-05, 4.933299999999863e-05, 4.8459000000000696e-05, 4.884800000000064e-05, 4.8403000000002416e-05, 4.842999999999861e-05, 4.884700000000117e-05, 4.926400000000025e-05, 4.934700000000167e-05, 4.887500000000031e-05, 4.856900000000178e-05, 4.900000000000043e-05, 4.905500000000271e-05, 4.847200000000079e-05, 4.916699999999927e-05, 4.879200000000236e-05, 4.9209000000001446e-05, 4.855600000000168e-05, 4.937500000000081e-05]</msg>
<status status="PASS" starttime="20201112 10:14:57.333" endtime="20201112 10:14:57.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.328" endtime="20201112 10:14:57.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.338" endtime="20201112 10:14:57.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.341" endtime="20201112 10:14:57.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.339" endtime="20201112 10:14:57.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.336" endtime="20201112 10:14:57.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.969" endtime="20201112 10:14:57.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.968" endtime="20201112 10:14:57.362"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.370" endtime="20201112 10:14:57.388"></status>
</kw>
<msg timestamp="20201112 10:14:57.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.369" endtime="20201112 10:14:57.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.389" endtime="20201112 10:14:57.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.391" endtime="20201112 10:14:57.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.366" endtime="20201112 10:14:57.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.364" endtime="20201112 10:14:57.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.401" endtime="20201112 10:14:57.686"></status>
</kw>
<msg timestamp="20201112 10:14:57.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.400" endtime="20201112 10:14:57.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.690" endtime="20201112 10:14:57.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.698" endtime="20201112 10:14:57.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.397" endtime="20201112 10:14:57.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.396" endtime="20201112 10:14:57.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.705" level="INFO">${RESULT} = [{'time': 0.019558306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9973000000001766e-05, 'source_diff': 4.9973000000001766e-05}, {'time': 0.019615319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:57.702" endtime="20201112 10:14:57.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.718" level="INFO">${ACCURACY} = {'source_diff': [4.9973000000001766e-05, 5.016600000000079e-05, 4.998599999999839e-05, 4.950000000000093e-05, 5.019399999999993e-05, 5.024999999999821e-05, 4.993000000000011e-05, 4.96530000000002e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:57.706" endtime="20201112 10:14:57.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.723" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.722" endtime="20201112 10:14:57.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.725" level="INFO">VALUE: [4.9973000000001766e-05, 5.016600000000079e-05, 4.998599999999839e-05, 4.950000000000093e-05, 5.019399999999993e-05, 5.024999999999821e-05, 4.993000000000011e-05, 4.96530000000002e-05, 4.948600000000136e-05, 4.995799999999925e-05, 5.022199999999907e-05, 4.987499999999784e-05, 4.998599999999839e-05, 4.963899999999716e-05, 4.987499999999784e-05, 4.959800000000139e-05, 4.998600000000186e-05, 4.987499999999784e-05, 4.9888000000001403e-05, 5.019399999999993e-05, 4.979099999999695e-05, 4.986099999999827e-05, 4.950000000000093e-05, 4.976400000000075e-05, 4.956899999999931e-05, 4.966699999999977e-05, 4.983299999999913e-05, 5.02079999999995e-05, 4.95140000000005e-05, 4.968099999999934e-05, 5.036099999999877e-05, 5.031999999999953e-05, 4.98339999999986e-05, 4.9487000000000836e-05, 4.999999999999796e-05, 5.03339999999991e-05, 5.030599999999996e-05, 4.997200000000229e-05, 4.95270000000006e-05, 5.026300000000178e-05, 5.013899999999766e-05, 4.962499999999759e-05, 5.001399999999753e-05, 4.975000000000118e-05, 4.947199999999832e-05, 5.01530000000007e-05, 4.944499999999866e-05, 5.036099999999877e-05, 5.018099999999984e-05, 5.005599999999971e-05]</msg>
<status status="PASS" starttime="20201112 10:14:57.724" endtime="20201112 10:14:57.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.719" endtime="20201112 10:14:57.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.729" endtime="20201112 10:14:57.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.732" endtime="20201112 10:14:57.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.731" endtime="20201112 10:14:57.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.727" endtime="20201112 10:14:57.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.363" endtime="20201112 10:14:57.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.362" endtime="20201112 10:14:57.753"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.762" endtime="20201112 10:14:57.777"></status>
</kw>
<msg timestamp="20201112 10:14:57.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.760" endtime="20201112 10:14:57.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.779" endtime="20201112 10:14:57.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.781" endtime="20201112 10:14:57.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.758" endtime="20201112 10:14:57.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.756" endtime="20201112 10:14:57.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.791" endtime="20201112 10:14:58.077"></status>
</kw>
<msg timestamp="20201112 10:14:58.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.790" endtime="20201112 10:14:58.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.081" endtime="20201112 10:14:58.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.090" endtime="20201112 10:14:58.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.787" endtime="20201112 10:14:58.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.785" endtime="20201112 10:14:58.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.096" level="INFO">${RESULT} = [{'time': 0.019778264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.094500000000016e-05, 'source_diff': 5.094500000000016e-05}, {'time': 0.019837264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:58.093" endtime="20201112 10:14:58.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.110" level="INFO">${ACCURACY} = {'source_diff': [5.094500000000016e-05, 5.113899999999866e-05, 5.062500000000206e-05, 5.094500000000016e-05, 5.094500000000016e-05, 5.140299999999848e-05, 5.099999999999896e-05, 5.126399999999878e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:58.097" endtime="20201112 10:14:58.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.114" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.113" endtime="20201112 10:14:58.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.117" level="INFO">VALUE: [5.094500000000016e-05, 5.113899999999866e-05, 5.062500000000206e-05, 5.094500000000016e-05, 5.094500000000016e-05, 5.140299999999848e-05, 5.099999999999896e-05, 5.126399999999878e-05, 5.061200000000196e-05, 5.050000000000193e-05, 5.048600000000236e-05, 5.077700000000185e-05, 5.058299999999988e-05, 5.084700000000317e-05, 5.111099999999952e-05, 5.052800000000107e-05, 5.075000000000218e-05, 5.108300000000038e-05, 5.145900000000023e-05, 5.097199999999982e-05, 5.05140000000015e-05, 5.083300000000013e-05, 5.08339999999996e-05, 5.093100000000059e-05, 5.056999999999978e-05, 5.129200000000139e-05, 5.069499999999991e-05, 5.113899999999866e-05, 5.134799999999967e-05, 5.108399999999985e-05, 5.086099999999927e-05, 5.0402000000001473e-05, 5.063900000000163e-05, 5.05409999999977e-05, 5.072199999999957e-05, 5.045899999999923e-05, 5.080600000000046e-05, 5.119500000000041e-05, 5.129199999999792e-05, 5.098599999999939e-05, 5.124999999999921e-05, 5.043100000000009e-05, 5.062500000000206e-05, 5.093100000000059e-05, 5.091700000000102e-05, 5.105600000000071e-05, 5.138899999999891e-05, 5.093000000000111e-05, 5.112500000000256e-05, 5.056900000000031e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.115" endtime="20201112 10:14:58.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.110" endtime="20201112 10:14:58.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.120" endtime="20201112 10:14:58.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.124" endtime="20201112 10:14:58.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.122" endtime="20201112 10:14:58.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.119" endtime="20201112 10:14:58.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.754" endtime="20201112 10:14:58.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.754" endtime="20201112 10:14:58.144"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.153" endtime="20201112 10:14:58.170"></status>
</kw>
<msg timestamp="20201112 10:14:58.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.151" endtime="20201112 10:14:58.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.172" endtime="20201112 10:14:58.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.175" endtime="20201112 10:14:58.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.149" endtime="20201112 10:14:58.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.147" endtime="20201112 10:14:58.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.184" endtime="20201112 10:14:58.469"></status>
</kw>
<msg timestamp="20201112 10:14:58.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.183" endtime="20201112 10:14:58.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.473" endtime="20201112 10:14:58.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.482" endtime="20201112 10:14:58.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.180" endtime="20201112 10:14:58.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.179" endtime="20201112 10:14:58.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.488" level="INFO">${RESULT} = [{'time': 0.020394292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.161100000000002e-05, 'source_diff': 5.161100000000002e-05}, {'time': 0.020455333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:58.485" endtime="20201112 10:14:58.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.503" level="INFO">${ACCURACY} = {'source_diff': [5.161100000000002e-05, 5.156899999999784e-05, 5.226399999999978e-05, 5.229099999999945e-05, 5.163899999999916e-05, 5.208300000000138e-05, 5.180499999999852e-05, 5.21530000000027e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:58.489" endtime="20201112 10:14:58.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.507" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.506" endtime="20201112 10:14:58.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.510" level="INFO">VALUE: [5.161100000000002e-05, 5.156899999999784e-05, 5.226399999999978e-05, 5.229099999999945e-05, 5.163899999999916e-05, 5.208300000000138e-05, 5.180499999999852e-05, 5.21530000000027e-05, 5.211099999999705e-05, 5.155500000000174e-05, 5.205599999999824e-05, 5.191699999999855e-05, 5.179200000000189e-05, 5.172200000000057e-05, 5.2207999999998034e-05, 5.238899999999991e-05, 5.181999999999756e-05, 5.213899999999966e-05, 5.212500000000009e-05, 5.198600000000039e-05, 5.226399999999978e-05, 5.201300000000006e-05, 5.156900000000131e-05, 5.145800000000075e-05, 5.155500000000174e-05, 5.22080000000015e-05, 5.233300000000163e-05, 5.212500000000009e-05, 5.199999999999996e-05, 5.237500000000034e-05, 5.199999999999996e-05, 5.201399999999953e-05, 5.222200000000107e-05, 5.170900000000048e-05, 5.158400000000035e-05, 5.162499999999959e-05, 5.198600000000039e-05, 5.162500000000306e-05, 5.225000000000021e-05, 5.205499999999877e-05, 5.226399999999978e-05, 5.172200000000057e-05, 5.145800000000075e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.238899999999991e-05, 5.162499999999959e-05, 5.205600000000171e-05, 5.198600000000039e-05, 5.159699999999698e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.508" endtime="20201112 10:14:58.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.503" endtime="20201112 10:14:58.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.513" endtime="20201112 10:14:58.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.517" endtime="20201112 10:14:58.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.515" endtime="20201112 10:14:58.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.511" endtime="20201112 10:14:58.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.145" endtime="20201112 10:14:58.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.145" endtime="20201112 10:14:58.537"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.546" endtime="20201112 10:14:58.563"></status>
</kw>
<msg timestamp="20201112 10:14:58.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.544" endtime="20201112 10:14:58.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.565" endtime="20201112 10:14:58.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.567" endtime="20201112 10:14:58.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.542" endtime="20201112 10:14:58.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.540" endtime="20201112 10:14:58.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.577" endtime="20201112 10:14:58.863"></status>
</kw>
<msg timestamp="20201112 10:14:58.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01945175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:58.576" endtime="20201112 10:14:58.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01945175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:58.867" endtime="20201112 10:14:58.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.875" endtime="20201112 10:14:58.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.573" endtime="20201112 10:14:58.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.571" endtime="20201112 10:14:58.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.882" level="INFO">${RESULT} = [{'time': 0.019504208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2457999999998284e-05, 'source_diff': 5.2457999999998284e-05}, {'time': 0.019569208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:58.878" endtime="20201112 10:14:58.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.895" level="INFO">${ACCURACY} = {'source_diff': [5.2457999999998284e-05, 5.323600000000164e-05, 5.333299999999916e-05, 5.338900000000091e-05, 5.3207999999999034e-05, 5.330599999999949e-05, 5.287499999999737e-05, 5.331999999999906e-0...</msg>
<status status="PASS" starttime="20201112 10:14:58.883" endtime="20201112 10:14:58.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.899" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.898" endtime="20201112 10:14:58.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.902" level="INFO">VALUE: [5.2457999999998284e-05, 5.323600000000164e-05, 5.333299999999916e-05, 5.338900000000091e-05, 5.3207999999999034e-05, 5.330599999999949e-05, 5.287499999999737e-05, 5.331999999999906e-05, 5.294499999999869e-05, 5.244499999999819e-05, 5.287500000000084e-05, 5.308399999999838e-05, 5.3429999999996675e-05, 5.244499999999819e-05, 5.301299999999759e-05, 5.265299999999973e-05, 5.280499999999952e-05, 5.298600000000139e-05, 5.311100000000152e-05, 5.272200000000157e-05, 5.244400000000218e-05, 5.309699999999848e-05, 5.28470000000017e-05, 5.2985999999997924e-05, 5.2735999999997674e-05, 5.256899999999884e-05, 5.334699999999873e-05, 5.255600000000221e-05, 5.307000000000228e-05, 5.2902000000000504e-05, 5.287500000000084e-05, 5.287499999999737e-05, 5.31669999999998e-05, 5.270900000000148e-05, 5.331899999999959e-05, 5.247200000000132e-05, 5.279099999999995e-05, 5.3152000000000754e-05, 5.311100000000152e-05, 5.315300000000023e-05, 5.268099999999887e-05, 5.2708000000002e-05, 5.255599999999874e-05, 5.244500000000166e-05, 5.283399999999813e-05, 5.31669999999998e-05, 5.327800000000035e-05, 5.250000000000046e-05, 5.279199999999942e-05, 5.312499999999762e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.901" endtime="20201112 10:14:58.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.896" endtime="20201112 10:14:58.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.905" endtime="20201112 10:14:58.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.909" endtime="20201112 10:14:58.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.907" endtime="20201112 10:14:58.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.904" endtime="20201112 10:14:58.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.538" endtime="20201112 10:14:58.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.538" endtime="20201112 10:14:58.930"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.938" endtime="20201112 10:14:58.955"></status>
</kw>
<msg timestamp="20201112 10:14:58.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.937" endtime="20201112 10:14:58.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.957" endtime="20201112 10:14:58.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.959" endtime="20201112 10:14:58.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.934" endtime="20201112 10:14:58.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.932" endtime="20201112 10:14:58.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.969" endtime="20201112 10:14:59.256"></status>
</kw>
<msg timestamp="20201112 10:14:59.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.968" endtime="20201112 10:14:59.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.260" endtime="20201112 10:14:59.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.268" endtime="20201112 10:14:59.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.965" endtime="20201112 10:14:59.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.963" endtime="20201112 10:14:59.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.275" level="INFO">${RESULT} = [{'time': 0.019714667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.386100000000227e-05, 'source_diff': 5.386100000000227e-05}, {'time': 0.019778722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:59.271" endtime="20201112 10:14:59.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.288" level="INFO">${ACCURACY} = {'source_diff': [5.386100000000227e-05, 5.362499999999812e-05, 5.40410000000012e-05, 5.3680000000000394e-05, 5.427699999999841e-05, 5.352700000000113e-05, 5.3971999999999354e-05, 5.377800000000085e-05...</msg>
<status status="PASS" starttime="20201112 10:14:59.276" endtime="20201112 10:14:59.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.293" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.292" endtime="20201112 10:14:59.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.295" level="INFO">VALUE: [5.386100000000227e-05, 5.362499999999812e-05, 5.40410000000012e-05, 5.3680000000000394e-05, 5.427699999999841e-05, 5.352700000000113e-05, 5.3971999999999354e-05, 5.377800000000085e-05, 5.375000000000171e-05, 5.398600000000239e-05, 5.379200000000042e-05, 5.358299999999941e-05, 5.412499999999862e-05, 5.365300000000073e-05, 5.358400000000235e-05, 5.380599999999999e-05, 5.375000000000171e-05, 5.4249999999998744e-05, 5.438900000000191e-05, 5.400000000000196e-05, 5.3901999999998035e-05, 5.380500000000052e-05, 5.4443999999997245e-05, 5.431899999999712e-05, 5.3430000000000144e-05, 5.416699999999733e-05, 5.4235999999999174e-05, 5.4013999999998064e-05, 5.43609999999993e-05, 5.3721999999999104e-05, 5.419499999999994e-05, 5.36670000000003e-05, 5.440299999999801e-05, 5.441700000000105e-05, 5.432000000000006e-05, 5.354200000000017e-05, 5.383299999999966e-05, 5.3416000000000574e-05, 5.350000000000146e-05, 5.3443999999999714e-05, 5.388900000000141e-05, 5.363900000000116e-05, 5.3971999999999354e-05, 5.415300000000123e-05, 5.40419999999972e-05, 5.440300000000148e-05, 5.370899999999901e-05, 5.36670000000003e-05, 5.411099999999905e-05, 5.43479999999992e-05]</msg>
<status status="PASS" starttime="20201112 10:14:59.294" endtime="20201112 10:14:59.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.289" endtime="20201112 10:14:59.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.299" endtime="20201112 10:14:59.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.302" endtime="20201112 10:14:59.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.300" endtime="20201112 10:14:59.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.297" endtime="20201112 10:14:59.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.931" endtime="20201112 10:14:59.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.930" endtime="20201112 10:14:59.323"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.331" endtime="20201112 10:14:59.348"></status>
</kw>
<msg timestamp="20201112 10:14:59.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.330" endtime="20201112 10:14:59.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.350" endtime="20201112 10:14:59.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.352" endtime="20201112 10:14:59.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.327" endtime="20201112 10:14:59.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.325" endtime="20201112 10:14:59.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.362" endtime="20201112 10:14:59.648"></status>
</kw>
<msg timestamp="20201112 10:14:59.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019521764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.361" endtime="20201112 10:14:59.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019521764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.652" endtime="20201112 10:14:59.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.660" endtime="20201112 10:14:59.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.358" endtime="20201112 10:14:59.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.357" endtime="20201112 10:14:59.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.667" level="INFO">${RESULT} = [{'time': 0.019576583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.481900000000109e-05, 'source_diff': 5.481900000000109e-05}, {'time': 0.019643583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:59.663" endtime="20201112 10:14:59.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.680" level="INFO">${ACCURACY} = {'source_diff': [5.481900000000109e-05, 5.456900000000084e-05, 5.5236000000000174e-05, 5.541699999999858e-05, 5.48609999999998e-05, 5.522300000000008e-05, 5.463899999999869e-05, 5.533399999999716e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:59.668" endtime="20201112 10:14:59.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.684" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.683" endtime="20201112 10:14:59.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.687" level="INFO">VALUE: [5.481900000000109e-05, 5.456900000000084e-05, 5.5236000000000174e-05, 5.541699999999858e-05, 5.48609999999998e-05, 5.522300000000008e-05, 5.463899999999869e-05, 5.533399999999716e-05, 5.457000000000031e-05, 5.455600000000074e-05, 5.480600000000099e-05, 5.5305999999998023e-05, 5.536199999999977e-05, 5.490299999999851e-05, 5.538899999999944e-05, 5.477699999999891e-05, 5.451300000000256e-05, 5.505600000000124e-05, 5.515300000000223e-05, 5.5222000000000604e-05, 5.5207999999997565e-05, 5.534699999999726e-05, 5.4708000000000534e-05, 5.4708000000000534e-05, 5.490300000000198e-05, 5.469500000000044e-05, 5.470900000000001e-05, 5.5027999999998634e-05, 5.500000000000296e-05, 5.480600000000099e-05, 5.520900000000051e-05, 5.494500000000069e-05, 5.512499999999962e-05, 5.456900000000084e-05, 5.511100000000005e-05, 5.508299999999744e-05, 5.5165999999998855e-05, 5.477800000000185e-05, 5.479200000000142e-05, 5.53610000000003e-05, 5.465300000000173e-05, 5.4943999999997745e-05, 5.507000000000081e-05, 5.508300000000091e-05, 5.4485999999999424e-05, 5.538899999999944e-05, 5.537499999999987e-05, 5.512499999999962e-05, 5.457000000000031e-05, 5.4985999999999924e-05]</msg>
<status status="PASS" starttime="20201112 10:14:59.686" endtime="20201112 10:14:59.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.681" endtime="20201112 10:14:59.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.691" endtime="20201112 10:14:59.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.694" endtime="20201112 10:14:59.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.692" endtime="20201112 10:14:59.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.689" endtime="20201112 10:14:59.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.324" endtime="20201112 10:14:59.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.323" endtime="20201112 10:14:59.715"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.723" endtime="20201112 10:14:59.739"></status>
</kw>
<msg timestamp="20201112 10:14:59.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.722" endtime="20201112 10:14:59.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.741" endtime="20201112 10:14:59.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.743" endtime="20201112 10:14:59.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.719" endtime="20201112 10:14:59.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.717" endtime="20201112 10:14:59.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.753" endtime="20201112 10:15:00.039"></status>
</kw>
<msg timestamp="20201112 10:15:00.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.752" endtime="20201112 10:15:00.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.043" endtime="20201112 10:15:00.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.051" endtime="20201112 10:15:00.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.749" endtime="20201112 10:15:00.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.747" endtime="20201112 10:15:00.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.058" level="INFO">${RESULT} = [{'time': 0.019558139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.56809999999984e-05, 'source_diff': 5.56809999999984e-05}, {'time': 0.019627181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:00.054" endtime="20201112 10:15:00.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.072" level="INFO">${ACCURACY} = {'source_diff': [5.56809999999984e-05, 5.6305999999999023e-05, 5.602700000000016e-05, 5.555600000000174e-05, 5.590299999999951e-05, 5.565300000000273e-05, 5.5471999999997385e-05, 5.613900000000019e-05...</msg>
<status status="PASS" starttime="20201112 10:15:00.059" endtime="20201112 10:15:00.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.077" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.076" endtime="20201112 10:15:00.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.079" level="INFO">VALUE: [5.56809999999984e-05, 5.6305999999999023e-05, 5.602700000000016e-05, 5.555600000000174e-05, 5.590299999999951e-05, 5.565300000000273e-05, 5.5471999999997385e-05, 5.613900000000019e-05, 5.6250000000000744e-05, 5.630499999999955e-05, 5.629099999999998e-05, 5.641699999999958e-05, 5.55410000000027e-05, 5.63610000000013e-05, 5.613900000000019e-05, 5.5805999999998523e-05, 5.587500000000037e-05, 5.612500000000062e-05, 5.5943999999998745e-05, 5.622300000000108e-05, 5.612499999999715e-05, 5.63480000000012e-05, 5.547299999999686e-05, 5.6236000000001174e-05, 5.634799999999773e-05, 5.562500000000012e-05, 5.6000000000000494e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.584700000000123e-05, 5.612500000000062e-05, 5.5805999999998523e-05, 5.6207999999998565e-05, 5.587500000000037e-05, 5.561100000000055e-05, 5.5957999999998315e-05, 5.5986000000000924e-05, 5.593100000000212e-05, 5.605600000000224e-05, 5.5763999999999814e-05, 5.605500000000277e-05, 5.60549999999993e-05, 5.6221999999998135e-05, 5.630499999999955e-05, 5.615299999999976e-05, 5.558399999999741e-05, 5.5707999999998065e-05, 5.554200000000217e-05, 5.6193999999998995e-05, 5.593100000000212e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.078" endtime="20201112 10:15:00.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.073" endtime="20201112 10:15:00.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.083" endtime="20201112 10:15:00.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.086" endtime="20201112 10:15:00.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.084" endtime="20201112 10:15:00.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.081" endtime="20201112 10:15:00.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.716" endtime="20201112 10:15:00.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.715" endtime="20201112 10:15:00.107"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.115" endtime="20201112 10:15:00.132"></status>
</kw>
<msg timestamp="20201112 10:15:00.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.114" endtime="20201112 10:15:00.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.134" endtime="20201112 10:15:00.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.136" endtime="20201112 10:15:00.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.111" endtime="20201112 10:15:00.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.109" endtime="20201112 10:15:00.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.146" endtime="20201112 10:15:00.431"></status>
</kw>
<msg timestamp="20201112 10:15:00.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019563125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.144" endtime="20201112 10:15:00.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019563125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.435" endtime="20201112 10:15:00.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.443" endtime="20201112 10:15:00.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.142" endtime="20201112 10:15:00.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.140" endtime="20201112 10:15:00.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.450" level="INFO">${RESULT} = [{'time': 0.019563125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.73610000000023e-05, 'source_diff': 5.73610000000023e-05}, {'time': 0.019633139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:00.447" endtime="20201112 10:15:00.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.463" level="INFO">${ACCURACY} = {'source_diff': [5.73610000000023e-05, 5.713900000000119e-05, 5.688900000000094e-05, 5.659799999999798e-05, 5.6569999999998843e-05, 5.704099999999726e-05, 5.7208000000003034e-05, 5.711100000000205e-05...</msg>
<status status="PASS" starttime="20201112 10:15:00.451" endtime="20201112 10:15:00.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.468" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.467" endtime="20201112 10:15:00.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.470" level="INFO">VALUE: [5.73610000000023e-05, 5.713900000000119e-05, 5.688900000000094e-05, 5.659799999999798e-05, 5.6569999999998843e-05, 5.704099999999726e-05, 5.7208000000003034e-05, 5.711100000000205e-05, 5.679100000000048e-05, 5.68610000000018e-05, 5.65549999999998e-05, 5.7264000000001314e-05, 5.663900000000069e-05, 5.688899999999747e-05, 5.691700000000008e-05, 5.688899999999747e-05, 5.7207999999999565e-05, 5.68610000000018e-05, 5.6555999999999274e-05, 5.695899999999879e-05, 5.7042000000000204e-05, 5.672299999999811e-05, 5.723699999999818e-05, 5.658400000000188e-05, 5.6707999999999065e-05, 5.691700000000008e-05, 5.6443999999999245e-05, 5.654100000000023e-05, 5.657000000000231e-05, 5.6957999999999315e-05, 5.6555999999999274e-05, 5.736099999999883e-05, 5.712499999999815e-05, 5.6514000000000564e-05, 5.657000000000231e-05, 5.711100000000205e-05, 5.659699999999851e-05, 5.7264000000001314e-05, 5.719499999999947e-05, 5.7207999999999565e-05, 5.64870000000009e-05, 5.7208000000003034e-05, 5.6735999999998205e-05, 5.65549999999998e-05, 5.7014000000001064e-05, 5.7055999999999774e-05, 5.7055999999999774e-05, 5.6693999999999495e-05, 5.7221999999999135e-05, 5.740300000000101e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.469" endtime="20201112 10:15:00.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.464" endtime="20201112 10:15:00.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.497" endtime="20201112 10:15:00.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.501" endtime="20201112 10:15:00.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.499" endtime="20201112 10:15:00.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.495" endtime="20201112 10:15:00.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.108" endtime="20201112 10:15:00.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.107" endtime="20201112 10:15:00.522"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.530" endtime="20201112 10:15:00.546"></status>
</kw>
<msg timestamp="20201112 10:15:00.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.529" endtime="20201112 10:15:00.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.547" endtime="20201112 10:15:00.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.550" endtime="20201112 10:15:00.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.526" endtime="20201112 10:15:00.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.524" endtime="20201112 10:15:00.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.560" endtime="20201112 10:15:00.846"></status>
</kw>
<msg timestamp="20201112 10:15:00.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019600736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.558" endtime="20201112 10:15:00.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019600736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.850" endtime="20201112 10:15:00.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.858" endtime="20201112 10:15:00.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.556" endtime="20201112 10:15:00.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.554" endtime="20201112 10:15:00.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.865" level="INFO">${RESULT} = [{'time': 0.019600736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7778000000001384e-05, 'source_diff': 5.7778000000001384e-05}, {'time': 0.019665736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:00.861" endtime="20201112 10:15:00.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.878" level="INFO">${ACCURACY} = {'source_diff': [5.7778000000001384e-05, 5.838899999999897e-05, 5.8208000000000565e-05, 5.7485999999998955e-05, 5.811099999999958e-05, 5.8056000000000774e-05, 5.788900000000194e-05, 5.7485999999998955...</msg>
<status status="PASS" starttime="20201112 10:15:00.866" endtime="20201112 10:15:00.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.883" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.882" endtime="20201112 10:15:00.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.885" level="INFO">VALUE: [5.7778000000001384e-05, 5.838899999999897e-05, 5.8208000000000565e-05, 5.7485999999998955e-05, 5.811099999999958e-05, 5.8056000000000774e-05, 5.788900000000194e-05, 5.7485999999998955e-05, 5.836099999999983e-05, 5.811099999999958e-05, 5.76810000000004e-05, 5.745899999999929e-05, 5.759799999999898e-05, 5.7985999999999455e-05, 5.838899999999897e-05, 5.834700000000026e-05, 5.762499999999865e-05, 5.8013999999998594e-05, 5.819500000000047e-05, 5.7777999999997914e-05, 5.787500000000237e-05, 5.834700000000026e-05, 5.7556000000000274e-05, 5.831900000000112e-05, 5.8264000000002314e-05, 5.8306000000001024e-05, 5.793100000000065e-05, 5.7735999999999205e-05, 5.766700000000083e-05, 5.758299999999994e-05, 5.7415999999997636e-05, 5.806900000000087e-05, 5.8137999999999246e-05, 5.761099999999908e-05, 5.7457999999999815e-05, 5.7721999999999635e-05, 5.8027999999998164e-05, 5.791700000000108e-05, 5.8263999999998844e-05, 5.784699999999976e-05, 5.83749999999994e-05, 5.766700000000083e-05, 5.8222000000000135e-05, 5.8028000000001634e-05, 5.7999999999999025e-05, 5.820900000000004e-05, 5.783300000000019e-05, 5.7694000000000495e-05, 5.7971999999999885e-05, 5.813899999999872e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.884" endtime="20201112 10:15:00.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.879" endtime="20201112 10:15:00.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.889" endtime="20201112 10:15:00.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.892" endtime="20201112 10:15:00.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.890" endtime="20201112 10:15:00.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.887" endtime="20201112 10:15:00.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.522" endtime="20201112 10:15:00.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.522" endtime="20201112 10:15:00.913"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.921" endtime="20201112 10:15:00.939"></status>
</kw>
<msg timestamp="20201112 10:15:00.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.920" endtime="20201112 10:15:00.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.940" endtime="20201112 10:15:00.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.943" endtime="20201112 10:15:00.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.917" endtime="20201112 10:15:00.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.915" endtime="20201112 10:15:00.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.953" endtime="20201112 10:15:01.239"></status>
</kw>
<msg timestamp="20201112 10:15:01.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.951" endtime="20201112 10:15:01.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.243" endtime="20201112 10:15:01.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.252" endtime="20201112 10:15:01.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.949" endtime="20201112 10:15:01.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.947" endtime="20201112 10:15:01.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.258" level="INFO">${RESULT} = [{'time': 0.020458792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8777999999998914e-05, 'source_diff': 5.8777999999998914e-05}, {'time': 0.020527806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:01.255" endtime="20201112 10:15:01.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.272" level="INFO">${ACCURACY} = {'source_diff': [5.8777999999998914e-05, 5.8597999999999983e-05, 5.9055999999998304e-05, 5.852699999999919e-05, 5.9013999999999595e-05, 5.940300000000301e-05, 5.936100000000083e-05, 5.9264000000003314...</msg>
<status status="PASS" starttime="20201112 10:15:01.259" endtime="20201112 10:15:01.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.276" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.275" endtime="20201112 10:15:01.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.279" level="INFO">VALUE: [5.8777999999998914e-05, 5.8597999999999983e-05, 5.9055999999998304e-05, 5.852699999999919e-05, 5.9013999999999595e-05, 5.940300000000301e-05, 5.936100000000083e-05, 5.9264000000003314e-05, 5.908299999999797e-05, 5.8472000000000385e-05, 5.891699999999861e-05, 5.890299999999904e-05, 5.912500000000015e-05, 5.9305999999998554e-05, 5.9334000000001164e-05, 5.912500000000015e-05, 5.930500000000255e-05, 5.844500000000072e-05, 5.8986000000000455e-05, 5.929099999999951e-05, 5.8722000000000635e-05, 5.909700000000101e-05, 5.8679999999998456e-05, 5.8778000000002384e-05, 5.8778000000002384e-05, 5.9222000000001135e-05, 5.913899999999972e-05, 5.886099999999686e-05, 5.891700000000208e-05, 5.9263999999999845e-05, 5.86810000000014e-05, 5.920900000000104e-05, 5.887500000000337e-05, 5.844500000000072e-05, 5.931899999999865e-05, 5.862499999999965e-05, 5.929099999999951e-05, 5.9415999999999636e-05, 5.9263999999999845e-05, 5.8986000000000455e-05, 5.931899999999865e-05, 5.8806000000001524e-05, 5.9041999999998734e-05, 5.858300000000094e-05, 5.911100000000058e-05, 5.93750000000004e-05, 5.897300000000036e-05, 5.8542000000001704e-05, 5.876299999999987e-05, 5.8749999999999775e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.277" endtime="20201112 10:15:01.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.273" endtime="20201112 10:15:01.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.282" endtime="20201112 10:15:01.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.286" endtime="20201112 10:15:01.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.284" endtime="20201112 10:15:01.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.281" endtime="20201112 10:15:01.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.914" endtime="20201112 10:15:01.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.913" endtime="20201112 10:15:01.307"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.315" endtime="20201112 10:15:01.333"></status>
</kw>
<msg timestamp="20201112 10:15:01.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.314" endtime="20201112 10:15:01.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.334" endtime="20201112 10:15:01.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.337" endtime="20201112 10:15:01.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.311" endtime="20201112 10:15:01.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.309" endtime="20201112 10:15:01.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.347" endtime="20201112 10:15:01.631"></status>
</kw>
<msg timestamp="20201112 10:15:01.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020558444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020618819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.345" endtime="20201112 10:15:01.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020558444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020618819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.635" endtime="20201112 10:15:01.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.644" endtime="20201112 10:15:01.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.343" endtime="20201112 10:15:01.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.341" endtime="20201112 10:15:01.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.650" level="INFO">${RESULT} = [{'time': 0.020618819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.03750000000014e-05, 'source_diff': 6.03750000000014e-05}, {'time': 0.020689833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:01.647" endtime="20201112 10:15:01.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.665" level="INFO">${ACCURACY} = {'source_diff': [6.03750000000014e-05, 6.005499999999983e-05, 5.9429999999999206e-05, 5.95689999999989e-05, 6.0236000000001705e-05, 6.0208000000002565e-05, 5.966699999999936e-05, 6.0264000000000845e-0...</msg>
<status status="PASS" starttime="20201112 10:15:01.651" endtime="20201112 10:15:01.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.669" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.668" endtime="20201112 10:15:01.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.672" level="INFO">VALUE: [6.03750000000014e-05, 6.005499999999983e-05, 5.9429999999999206e-05, 5.95689999999989e-05, 6.0236000000001705e-05, 6.0208000000002565e-05, 5.966699999999936e-05, 6.0264000000000845e-05, 6.0305999999999554e-05, 5.9528000000003134e-05, 5.9722000000001635e-05, 6.041700000000011e-05, 5.991699999999961e-05, 6.0333999999998694e-05, 6.0291999999999984e-05, 6.0264000000000845e-05, 5.9443999999998776e-05, 5.93750000000004e-05, 5.9791999999999484e-05, 5.9665999999999886e-05, 5.990300000000004e-05, 6.03750000000014e-05, 5.941699999999911e-05, 6.018099999999943e-05, 6.038900000000097e-05, 5.995899999999832e-05, 5.970899999999807e-05, 6.0070000000002344e-05, 6.0083999999998444e-05, 5.998700000000093e-05, 6.0250000000001275e-05, 6.0014000000000595e-05, 5.9957999999998846e-05, 6.027700000000094e-05, 6.013900000000072e-05, 5.995900000000179e-05, 5.963900000000022e-05, 5.962500000000065e-05, 5.9485999999997485e-05, 6.0208000000002565e-05, 5.965299999999979e-05, 6.00689999999994e-05, 6.012500000000115e-05, 6.0319999999999124e-05, 5.947299999999739e-05, 6.0278000000000415e-05, 5.984700000000176e-05, 5.9916000000000136e-05, 5.9486000000000955e-05, 6.0416000000000636e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.670" endtime="20201112 10:15:01.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.666" endtime="20201112 10:15:01.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.675" endtime="20201112 10:15:01.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.679" endtime="20201112 10:15:01.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.677" endtime="20201112 10:15:01.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.674" endtime="20201112 10:15:01.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.308" endtime="20201112 10:15:01.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.307" endtime="20201112 10:15:01.700"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.708" endtime="20201112 10:15:01.726"></status>
</kw>
<msg timestamp="20201112 10:15:01.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.707" endtime="20201112 10:15:01.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.727" endtime="20201112 10:15:01.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.730" endtime="20201112 10:15:01.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.704" endtime="20201112 10:15:01.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.702" endtime="20201112 10:15:01.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.740" endtime="20201112 10:15:02.026"></status>
</kw>
<msg timestamp="20201112 10:15:02.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019643292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.738" endtime="20201112 10:15:02.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019643292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.030" endtime="20201112 10:15:02.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.038" endtime="20201112 10:15:02.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.736" endtime="20201112 10:15:02.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.734" endtime="20201112 10:15:02.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.045" level="INFO">${RESULT} = [{'time': 0.019643292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0764000000001345e-05, 'source_diff': 6.0764000000001345e-05}, {'time': 0.019714292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:02.041" endtime="20201112 10:15:02.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.058" level="INFO">${ACCURACY} = {'source_diff': [6.0764000000001345e-05, 6.095900000000279e-05, 6.105500000000083e-05, 6.0792000000000485e-05, 6.08750000000019e-05, 6.0471999999998916e-05, 6.0443999999999776e-05, 6.0694000000000026e...</msg>
<status status="PASS" starttime="20201112 10:15:02.046" endtime="20201112 10:15:02.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.063" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.062" endtime="20201112 10:15:02.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.065" level="INFO">VALUE: [6.0764000000001345e-05, 6.095900000000279e-05, 6.105500000000083e-05, 6.0792000000000485e-05, 6.08750000000019e-05, 6.0471999999998916e-05, 6.0443999999999776e-05, 6.0694000000000026e-05, 6.0471999999998916e-05, 6.0499999999998055e-05, 6.0749999999998305e-05, 6.0778000000000915e-05, 6.138900000000197e-05, 6.083299999999972e-05, 6.126400000000184e-05, 6.072299999999864e-05, 6.109800000000248e-05, 6.0542000000000235e-05, 6.108299999999997e-05, 6.0986000000002455e-05, 6.0721999999999166e-05, 6.090300000000104e-05, 6.112500000000215e-05, 6.055500000000033e-05, 6.10690000000004e-05, 6.108299999999997e-05, 6.0583999999998944e-05, 6.06949999999995e-05, 6.118100000000043e-05, 6.12080000000001e-05, 6.1195e-05, 6.111099999999911e-05, 6.072299999999864e-05, 6.088799999999853e-05, 6.130499999999761e-05, 6.116699999999739e-05, 6.0680000000000456e-05, 6.12080000000001e-05, 6.0985999999998985e-05, 6.13750000000024e-05, 6.0888999999998e-05, 6.115300000000129e-05, 6.134699999999979e-05, 6.1014000000001595e-05, 6.13889999999985e-05, 6.105500000000083e-05, 6.041700000000011e-05, 6.08750000000019e-05, 6.10690000000004e-05, 6.052699999999772e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.064" endtime="20201112 10:15:02.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.059" endtime="20201112 10:15:02.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.069" endtime="20201112 10:15:02.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.072" endtime="20201112 10:15:02.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.070" endtime="20201112 10:15:02.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.067" endtime="20201112 10:15:02.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.700" endtime="20201112 10:15:02.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.700" endtime="20201112 10:15:02.093"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.101" endtime="20201112 10:15:02.118"></status>
</kw>
<msg timestamp="20201112 10:15:02.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.100" endtime="20201112 10:15:02.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.120" endtime="20201112 10:15:02.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.122" endtime="20201112 10:15:02.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.097" endtime="20201112 10:15:02.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.095" endtime="20201112 10:15:02.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.132" endtime="20201112 10:15:02.417"></status>
</kw>
<msg timestamp="20201112 10:15:02.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:02.131" endtime="20201112 10:15:02.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:02.421" endtime="20201112 10:15:02.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.429" endtime="20201112 10:15:02.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.128" endtime="20201112 10:15:02.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.126" endtime="20201112 10:15:02.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.436" level="INFO">${RESULT} = [{'time': 0.019893681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.193100000000118e-05, 'source_diff': 6.193100000000118e-05}, {'time': 0.019968722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:02.432" endtime="20201112 10:15:02.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.449" level="INFO">${ACCURACY} = {'source_diff': [6.193100000000118e-05, 6.199999999999956e-05, 6.212499999999968e-05, 6.150000000000252e-05, 6.237499999999993e-05, 6.205499999999836e-05, 6.158399999999994e-05, 6.190299999999857e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:02.437" endtime="20201112 10:15:02.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.453" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.452" endtime="20201112 10:15:02.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.456" level="INFO">VALUE: [6.193100000000118e-05, 6.199999999999956e-05, 6.212499999999968e-05, 6.150000000000252e-05, 6.237499999999993e-05, 6.205499999999836e-05, 6.158399999999994e-05, 6.190299999999857e-05, 6.1888999999999e-05, 6.179200000000148e-05, 6.16950000000005e-05, 6.152800000000166e-05, 6.197199999999695e-05, 6.237499999999993e-05, 6.198700000000293e-05, 6.226399999999938e-05, 6.198599999999999e-05, 6.172200000000017e-05, 6.158300000000047e-05, 6.206899999999793e-05, 6.191700000000161e-05, 6.215299999999882e-05, 6.17499999999993e-05, 6.176400000000234e-05, 6.231999999999766e-05, 6.20279999999987e-05, 6.152800000000166e-05, 6.212499999999968e-05, 6.236199999999983e-05, 6.158300000000047e-05, 6.187499999999943e-05, 6.163899999999875e-05, 6.199999999999956e-05, 6.191599999999867e-05, 6.177700000000244e-05, 6.169399999999756e-05, 6.147199999999992e-05, 6.226399999999938e-05, 6.220799999999763e-05, 6.148599999999949e-05, 6.234700000000079e-05, 6.190300000000204e-05, 6.229200000000198e-05, 6.17080000000006e-05, 6.236100000000036e-05, 6.141699999999764e-05, 6.204100000000226e-05, 6.212499999999968e-05, 6.22080000000011e-05, 6.209700000000054e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.455" endtime="20201112 10:15:02.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.450" endtime="20201112 10:15:02.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.460" endtime="20201112 10:15:02.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.463" endtime="20201112 10:15:02.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.461" endtime="20201112 10:15:02.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.458" endtime="20201112 10:15:02.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.094" endtime="20201112 10:15:02.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.093" endtime="20201112 10:15:02.484"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.492" endtime="20201112 10:15:02.508"></status>
</kw>
<msg timestamp="20201112 10:15:02.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.491" endtime="20201112 10:15:02.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.510" endtime="20201112 10:15:02.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.512" endtime="20201112 10:15:02.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.488" endtime="20201112 10:15:02.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.486" endtime="20201112 10:15:02.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.522" endtime="20201112 10:15:02.808"></status>
</kw>
<msg timestamp="20201112 10:15:02.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01956775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:02.521" endtime="20201112 10:15:02.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01956775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:02.813" endtime="20201112 10:15:02.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.821" endtime="20201112 10:15:02.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.518" endtime="20201112 10:15:02.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.517" endtime="20201112 10:15:02.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.827" level="INFO">${RESULT} = [{'time': 0.01956775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.283299999999825e-05, 'source_diff': 6.283299999999825e-05}, {'time': 0.01964175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:02.824" endtime="20201112 10:15:02.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.841" level="INFO">${ACCURACY} = {'source_diff': [6.283299999999825e-05, 6.255599999999834e-05, 6.27219999999977e-05, 6.30699999999984e-05, 6.297200000000142e-05, 6.279200000000248e-05, 6.329100000000004e-05, 6.32500000000008e-05, 6....</msg>
<status status="PASS" starttime="20201112 10:15:02.828" endtime="20201112 10:15:02.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.845" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.844" endtime="20201112 10:15:02.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.848" level="INFO">VALUE: [6.283299999999825e-05, 6.255599999999834e-05, 6.27219999999977e-05, 6.30699999999984e-05, 6.297200000000142e-05, 6.279200000000248e-05, 6.329100000000004e-05, 6.32500000000008e-05, 6.25560000000018e-05, 6.255499999999886e-05, 6.241599999999917e-05, 6.311100000000111e-05, 6.265299999999932e-05, 6.290299999999957e-05, 6.245800000000135e-05, 6.336099999999789e-05, 6.258399999999747e-05, 6.316699999999939e-05, 6.333299999999875e-05, 6.265299999999932e-05, 6.308399999999798e-05, 6.25560000000018e-05, 6.259800000000051e-05, 6.3276999999997e-05, 6.301400000000013e-05, 6.334700000000179e-05, 6.256899999999843e-05, 6.305499999999936e-05, 6.304200000000273e-05, 6.284800000000076e-05, 6.277799999999945e-05, 6.306899999999893e-05, 6.301400000000013e-05, 6.250000000000006e-05, 6.245799999999788e-05, 6.284700000000129e-05, 6.312499999999721e-05, 6.323600000000124e-05, 6.276399999999988e-05, 6.281899999999868e-05, 6.287500000000043e-05, 6.270799999999813e-05, 6.30829999999985e-05, 6.280499999999911e-05, 6.255499999999886e-05, 6.27500000000003e-05, 6.25560000000018e-05, 6.320799999999863e-05, 6.2889e-05, 6.33890000000005e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.846" endtime="20201112 10:15:02.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.842" endtime="20201112 10:15:02.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.851" endtime="20201112 10:15:02.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.855" endtime="20201112 10:15:02.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.853" endtime="20201112 10:15:02.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.850" endtime="20201112 10:15:02.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.485" endtime="20201112 10:15:02.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.484" endtime="20201112 10:15:02.876"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.884" endtime="20201112 10:15:02.901"></status>
</kw>
<msg timestamp="20201112 10:15:02.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.882" endtime="20201112 10:15:02.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.903" endtime="20201112 10:15:02.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.905" endtime="20201112 10:15:02.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.880" endtime="20201112 10:15:02.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.878" endtime="20201112 10:15:02.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.915" endtime="20201112 10:15:03.201"></status>
</kw>
<msg timestamp="20201112 10:15:03.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019451667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.914" endtime="20201112 10:15:03.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019451667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.205" endtime="20201112 10:15:03.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.213" endtime="20201112 10:15:03.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.911" endtime="20201112 10:15:03.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.910" endtime="20201112 10:15:03.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.220" level="INFO">${RESULT} = [{'time': 0.019515097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.342999999999974e-05, 'source_diff': 6.342999999999974e-05}, {'time': 0.019587111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.217" endtime="20201112 10:15:03.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.235" level="INFO">${ACCURACY} = {'source_diff': [6.342999999999974e-05, 6.39439999999998e-05, 6.434699999999932e-05, 6.351400000000063e-05, 6.393099999999971e-05, 6.344500000000225e-05, 6.434700000000279e-05, 6.384700000000229e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:03.221" endtime="20201112 10:15:03.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.240" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.238" endtime="20201112 10:15:03.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.242" level="INFO">VALUE: [6.342999999999974e-05, 6.39439999999998e-05, 6.434699999999932e-05, 6.351400000000063e-05, 6.393099999999971e-05, 6.344500000000225e-05, 6.434700000000279e-05, 6.384700000000229e-05, 6.354199999999977e-05, 6.367999999999999e-05, 6.362500000000118e-05, 6.412500000000168e-05, 6.40829999999995e-05, 6.398600000000199e-05, 6.372200000000217e-05, 6.349999999999759e-05, 6.345799999999888e-05, 6.387499999999796e-05, 6.356899999999943e-05, 6.436100000000236e-05, 6.426400000000138e-05, 6.362499999999771e-05, 6.391700000000014e-05, 6.404200000000027e-05, 6.437500000000193e-05, 6.398599999999852e-05, 6.400000000000156e-05, 6.438899999999803e-05, 6.387499999999796e-05, 6.384699999999882e-05, 6.430499999999714e-05, 6.42219999999992e-05, 6.42639999999979e-05, 6.40829999999995e-05, 6.370799999999913e-05, 6.440300000000107e-05, 6.386100000000186e-05, 6.341699999999964e-05, 6.3889000000001e-05, 6.405599999999984e-05, 6.422299999999867e-05, 6.431900000000018e-05, 6.3582999999999e-05, 6.42219999999992e-05, 6.351399999999716e-05, 6.416600000000092e-05, 6.3582999999999e-05, 6.427800000000095e-05, 6.424999999999834e-05, 6.383299999999925e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.241" endtime="20201112 10:15:03.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.236" endtime="20201112 10:15:03.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.246" endtime="20201112 10:15:03.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.250" endtime="20201112 10:15:03.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.248" endtime="20201112 10:15:03.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.244" endtime="20201112 10:15:03.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.876" endtime="20201112 10:15:03.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.876" endtime="20201112 10:15:03.271"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.280" endtime="20201112 10:15:03.298"></status>
</kw>
<msg timestamp="20201112 10:15:03.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.278" endtime="20201112 10:15:03.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.299" endtime="20201112 10:15:03.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.302" endtime="20201112 10:15:03.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.276" endtime="20201112 10:15:03.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.274" endtime="20201112 10:15:03.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.312" endtime="20201112 10:15:03.596"></status>
</kw>
<msg timestamp="20201112 10:15:03.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.310" endtime="20201112 10:15:03.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.600" endtime="20201112 10:15:03.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.608" endtime="20201112 10:15:03.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.308" endtime="20201112 10:15:03.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.306" endtime="20201112 10:15:03.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.615" level="INFO">${RESULT} = [{'time': 0.019654528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.466700000000089e-05, 'source_diff': 6.466700000000089e-05}, {'time': 0.019726625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.612" endtime="20201112 10:15:03.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.628" level="INFO">${ACCURACY} = {'source_diff': [6.466700000000089e-05, 6.493100000000071e-05, 6.529199999999805e-05, 6.462499999999871e-05, 6.499999999999909e-05, 6.511099999999964e-05, 6.486099999999939e-05, 6.53890000000025e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:03.616" endtime="20201112 10:15:03.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.633" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.632" endtime="20201112 10:15:03.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.635" level="INFO">VALUE: [6.466700000000089e-05, 6.493100000000071e-05, 6.529199999999805e-05, 6.462499999999871e-05, 6.499999999999909e-05, 6.511099999999964e-05, 6.486099999999939e-05, 6.53890000000025e-05, 6.536099999999989e-05, 6.455500000000086e-05, 6.448599999999902e-05, 6.527800000000195e-05, 6.484699999999982e-05, 6.527800000000195e-05, 6.516699999999792e-05, 6.469500000000003e-05, 6.530599999999762e-05, 6.49440000000008e-05, 6.497299999999942e-05, 6.509799999999955e-05, 6.456899999999696e-05, 6.536099999999989e-05, 6.459699999999957e-05, 6.450000000000206e-05, 6.509700000000007e-05, 6.445799999999988e-05, 6.506899999999746e-05, 6.47219999999997e-05, 6.541699999999817e-05, 6.447200000000292e-05, 6.504200000000127e-05, 6.477800000000145e-05, 6.491700000000114e-05, 6.501399999999866e-05, 6.527800000000195e-05, 6.54159999999987e-05, 6.509700000000007e-05, 6.44440000000003e-05, 6.481900000000068e-05, 6.536099999999989e-05, 6.470800000000013e-05, 6.473599999999927e-05, 6.519500000000053e-05, 6.50700000000004e-05, 6.515299999999835e-05, 6.533400000000023e-05, 6.455500000000086e-05, 6.537499999999946e-05, 6.47769999999985e-05, 6.455600000000034e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.634" endtime="20201112 10:15:03.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.629" endtime="20201112 10:15:03.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.639" endtime="20201112 10:15:03.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.642" endtime="20201112 10:15:03.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.641" endtime="20201112 10:15:03.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.637" endtime="20201112 10:15:03.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.272" endtime="20201112 10:15:03.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.271" endtime="20201112 10:15:03.663"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.672" endtime="20201112 10:15:03.688"></status>
</kw>
<msg timestamp="20201112 10:15:03.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.670" endtime="20201112 10:15:03.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.689" endtime="20201112 10:15:03.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.692" endtime="20201112 10:15:03.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.668" endtime="20201112 10:15:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.666" endtime="20201112 10:15:03.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.702" endtime="20201112 10:15:03.987"></status>
</kw>
<msg timestamp="20201112 10:15:03.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.700" endtime="20201112 10:15:03.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.991" endtime="20201112 10:15:03.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.999" endtime="20201112 10:15:04.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.698" endtime="20201112 10:15:04.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.696" endtime="20201112 10:15:04.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.006" level="INFO">${RESULT} = [{'time': 0.019595097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.638900000000003e-05, 'source_diff': 6.638900000000003e-05}, {'time': 0.019667125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.002" endtime="20201112 10:15:04.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.019" level="INFO">${ACCURACY} = {'source_diff': [6.638900000000003e-05, 6.556900000000143e-05, 6.617999999999902e-05, 6.55700000000009e-05, 6.637500000000046e-05, 6.581999999999769e-05, 6.62090000000011e-05, 6.632000000000166e-05, 6...</msg>
<status status="PASS" starttime="20201112 10:15:04.007" endtime="20201112 10:15:04.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.024" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.023" endtime="20201112 10:15:04.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.026" level="INFO">VALUE: [6.638900000000003e-05, 6.556900000000143e-05, 6.617999999999902e-05, 6.55700000000009e-05, 6.637500000000046e-05, 6.581999999999769e-05, 6.62090000000011e-05, 6.632000000000166e-05, 6.586199999999987e-05, 6.561100000000014e-05, 6.641699999999917e-05, 6.602700000000322e-05, 6.602699999999975e-05, 6.579099999999907e-05, 6.586100000000039e-05, 6.606900000000193e-05, 6.543000000000174e-05, 6.604200000000227e-05, 6.583300000000125e-05, 6.59029999999991e-05, 6.633299999999828e-05, 6.615299999999935e-05, 6.584699999999735e-05, 6.593099999999824e-05, 6.565299999999885e-05, 6.587499999999996e-05, 6.593000000000224e-05, 6.547199999999698e-05, 6.569399999999809e-05, 6.581900000000168e-05, 6.57220000000007e-05, 6.573600000000027e-05, 6.637500000000046e-05, 6.579199999999855e-05, 6.630599999999862e-05, 6.62639999999999e-05, 6.57639999999994e-05, 6.559800000000005e-05, 6.58480000000003e-05, 6.598599999999705e-05, 6.598600000000052e-05, 6.633400000000123e-05, 6.579099999999907e-05, 6.630500000000261e-05, 6.64159999999997e-05, 6.587499999999996e-05, 6.613900000000325e-05, 6.612500000000021e-05, 6.632000000000166e-05, 6.591700000000214e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.025" endtime="20201112 10:15:04.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.020" endtime="20201112 10:15:04.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.030" endtime="20201112 10:15:04.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.033" endtime="20201112 10:15:04.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.032" endtime="20201112 10:15:04.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.028" endtime="20201112 10:15:04.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.664" endtime="20201112 10:15:04.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.663" endtime="20201112 10:15:04.054"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.062" endtime="20201112 10:15:04.080"></status>
</kw>
<msg timestamp="20201112 10:15:04.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.061" endtime="20201112 10:15:04.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.081" endtime="20201112 10:15:04.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.084" endtime="20201112 10:15:04.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.059" endtime="20201112 10:15:04.087"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.056" endtime="20201112 10:15:04.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.094" endtime="20201112 10:15:04.380"></status>
</kw>
<msg timestamp="20201112 10:15:04.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019488736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019555375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.092" endtime="20201112 10:15:04.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019488736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019555375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.384" endtime="20201112 10:15:04.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.392" endtime="20201112 10:15:04.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.090" endtime="20201112 10:15:04.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.088" endtime="20201112 10:15:04.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.399" level="INFO">${RESULT} = [{'time': 0.019555375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.663900000000028e-05, 'source_diff': 6.663900000000028e-05}, {'time': 0.019629389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.396" endtime="20201112 10:15:04.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.412" level="INFO">${ACCURACY} = {'source_diff': [6.663900000000028e-05, 6.730599999999962e-05, 6.687499999999749e-05, 6.70700000000024e-05, 6.734799999999833e-05, 6.683400000000173e-05, 6.722199999999873e-05, 6.734699999999885e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:04.400" endtime="20201112 10:15:04.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.417" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.416" endtime="20201112 10:15:04.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.419" level="INFO">VALUE: [6.663900000000028e-05, 6.730599999999962e-05, 6.687499999999749e-05, 6.70700000000024e-05, 6.734799999999833e-05, 6.683400000000173e-05, 6.722199999999873e-05, 6.734699999999885e-05, 6.680500000000311e-05, 6.686099999999792e-05, 6.712500000000121e-05, 6.72640000000009e-05, 6.70419999999998e-05, 6.663900000000028e-05, 6.659700000000157e-05, 6.727800000000048e-05, 6.718099999999949e-05, 6.65700000000019e-05, 6.70700000000024e-05, 6.72640000000009e-05, 6.684799999999783e-05, 6.681899999999921e-05, 6.726399999999744e-05, 6.673600000000127e-05, 6.69030000000001e-05, 6.711100000000164e-05, 6.658299999999853e-05, 6.663900000000028e-05, 6.699999999999762e-05, 6.741700000000017e-05, 6.690200000000063e-05, 6.643099999999874e-05, 6.733299999999928e-05, 6.738900000000103e-05, 6.662500000000071e-05, 6.679100000000007e-05, 6.645800000000188e-05, 6.687500000000096e-05, 6.645800000000188e-05, 6.677799999999998e-05, 6.661099999999767e-05, 6.69030000000001e-05, 6.680599999999912e-05, 6.684700000000182e-05, 6.684699999999835e-05, 6.682000000000216e-05, 6.644499999999831e-05, 6.647300000000092e-05, 6.702800000000023e-05, 6.69160000000002e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.418" endtime="20201112 10:15:04.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.413" endtime="20201112 10:15:04.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.423" endtime="20201112 10:15:04.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.426" endtime="20201112 10:15:04.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.424" endtime="20201112 10:15:04.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.421" endtime="20201112 10:15:04.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.055" endtime="20201112 10:15:04.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.054" endtime="20201112 10:15:04.447"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.455" endtime="20201112 10:15:04.473"></status>
</kw>
<msg timestamp="20201112 10:15:04.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.454" endtime="20201112 10:15:04.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.475" endtime="20201112 10:15:04.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.477" endtime="20201112 10:15:04.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.451" endtime="20201112 10:15:04.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.449" endtime="20201112 10:15:04.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.487" endtime="20201112 10:15:04.773"></status>
</kw>
<msg timestamp="20201112 10:15:04.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019570847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.486" endtime="20201112 10:15:04.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019570847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.777" endtime="20201112 10:15:04.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.785" endtime="20201112 10:15:04.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.483" endtime="20201112 10:15:04.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.482" endtime="20201112 10:15:04.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.792" level="INFO">${RESULT} = [{'time': 0.019570847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.836099999999942e-05, 'source_diff': 6.836099999999942e-05}, {'time': 0.019644847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.788" endtime="20201112 10:15:04.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.806" level="INFO">${ACCURACY} = {'source_diff': [6.836099999999942e-05, 6.783299999999978e-05, 6.769400000000009e-05, 6.790299999999763e-05, 6.780600000000012e-05, 6.766700000000042e-05, 6.750000000000159e-05, 6.779200000000055e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:04.792" endtime="20201112 10:15:04.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.810" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.809" endtime="20201112 10:15:04.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.813" level="INFO">VALUE: [6.836099999999942e-05, 6.783299999999978e-05, 6.769400000000009e-05, 6.790299999999763e-05, 6.780600000000012e-05, 6.766700000000042e-05, 6.750000000000159e-05, 6.779200000000055e-05, 6.763900000000128e-05, 6.802799999999776e-05, 6.813800000000231e-05, 6.80420000000008e-05, 6.754100000000082e-05, 6.800000000000209e-05, 6.752700000000125e-05, 6.791599999999773e-05, 6.780500000000064e-05, 6.787499999999849e-05, 6.806900000000046e-05, 6.815299999999788e-05, 6.762499999999824e-05, 6.755599999999987e-05, 6.818100000000049e-05, 6.756899999999996e-05, 6.800000000000209e-05, 6.812500000000221e-05, 6.804099999999785e-05, 6.794400000000034e-05, 6.8277000000002e-05, 6.748599999999855e-05, 6.781900000000021e-05, 6.806899999999699e-05, 6.818100000000049e-05, 6.75420000000003e-05, 6.77359999999988e-05, 6.823600000000277e-05, 6.7583999999999e-05, 6.819399999999712e-05, 6.797300000000242e-05, 6.77359999999988e-05, 6.811099999999917e-05, 6.766600000000095e-05, 6.805500000000089e-05, 6.755500000000039e-05, 6.805600000000037e-05, 6.768000000000052e-05, 6.780500000000064e-05, 6.827799999999801e-05, 6.830600000000062e-05, 6.786099999999892e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.811" endtime="20201112 10:15:04.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.807" endtime="20201112 10:15:04.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.816" endtime="20201112 10:15:04.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.820" endtime="20201112 10:15:04.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.818" endtime="20201112 10:15:04.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.815" endtime="20201112 10:15:04.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.448" endtime="20201112 10:15:04.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.447" endtime="20201112 10:15:04.841"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.849" endtime="20201112 10:15:04.867"></status>
</kw>
<msg timestamp="20201112 10:15:04.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.848" endtime="20201112 10:15:04.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.869" endtime="20201112 10:15:04.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.871" endtime="20201112 10:15:04.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.845" endtime="20201112 10:15:04.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.843" endtime="20201112 10:15:04.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.881" endtime="20201112 10:15:05.167"></status>
</kw>
<msg timestamp="20201112 10:15:05.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.880" endtime="20201112 10:15:05.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.171" endtime="20201112 10:15:05.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.179" endtime="20201112 10:15:05.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.877" endtime="20201112 10:15:05.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.875" endtime="20201112 10:15:05.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.186" level="INFO">${RESULT} = [{'time': 0.019621389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.920800000000116e-05, 'source_diff': 6.920800000000116e-05}, {'time': 0.019697375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.183" endtime="20201112 10:15:05.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.199" level="INFO">${ACCURACY} = {'source_diff': [6.920800000000116e-05, 6.90970000000006e-05, 6.926399999999944e-05, 6.909800000000008e-05, 6.898600000000005e-05, 6.866700000000142e-05, 6.908299999999756e-05, 6.8584e-05, 6.859800000...</msg>
<status status="PASS" starttime="20201112 10:15:05.187" endtime="20201112 10:15:05.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.204" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.203" endtime="20201112 10:15:05.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.206" level="INFO">VALUE: [6.920800000000116e-05, 6.90970000000006e-05, 6.926399999999944e-05, 6.909800000000008e-05, 6.898600000000005e-05, 6.866700000000142e-05, 6.908299999999756e-05, 6.8584e-05, 6.859800000000305e-05, 6.855499999999792e-05, 6.883300000000078e-05, 6.89160000000022e-05, 6.866700000000142e-05, 6.906899999999799e-05, 6.893099999999777e-05, 6.848599999999955e-05, 6.920800000000116e-05, 6.87359999999998e-05, 6.922199999999726e-05, 6.870900000000013e-05, 6.905499999999842e-05, 6.886099999999992e-05, 6.918099999999802e-05, 6.933300000000128e-05, 6.861099999999967e-05, 6.883300000000078e-05, 6.913899999999931e-05, 6.918099999999802e-05, 6.89299999999983e-05, 6.887499999999949e-05, 6.890299999999863e-05, 6.927800000000248e-05, 6.937499999999999e-05, 6.857000000000044e-05, 6.886099999999992e-05, 6.894500000000081e-05, 6.868099999999752e-05, 6.920800000000116e-05, 6.840199999999866e-05, 6.905500000000189e-05, 6.879200000000155e-05, 6.934700000000085e-05, 6.872200000000023e-05, 6.894400000000134e-05, 6.915300000000235e-05, 6.926399999999944e-05, 6.888899999999906e-05, 6.851399999999869e-05, 6.857000000000044e-05, 6.843100000000074e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.205" endtime="20201112 10:15:05.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.200" endtime="20201112 10:15:05.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.210" endtime="20201112 10:15:05.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.213" endtime="20201112 10:15:05.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.212" endtime="20201112 10:15:05.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.208" endtime="20201112 10:15:05.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.842" endtime="20201112 10:15:05.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.841" endtime="20201112 10:15:05.234"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.243" endtime="20201112 10:15:05.261"></status>
</kw>
<msg timestamp="20201112 10:15:05.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.241" endtime="20201112 10:15:05.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.262" endtime="20201112 10:15:05.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.265" endtime="20201112 10:15:05.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.239" endtime="20201112 10:15:05.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.237" endtime="20201112 10:15:05.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.276" endtime="20201112 10:15:05.562"></status>
</kw>
<msg timestamp="20201112 10:15:05.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.274" endtime="20201112 10:15:05.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.566" endtime="20201112 10:15:05.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.574" endtime="20201112 10:15:05.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.271" endtime="20201112 10:15:05.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.269" endtime="20201112 10:15:05.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.581" level="INFO">${RESULT} = [{'time': 0.019782722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.008299999999856e-05, 'source_diff': 7.008299999999856e-05}, {'time': 0.019862736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.578" endtime="20201112 10:15:05.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.594" level="INFO">${ACCURACY} = {'source_diff': [7.008299999999856e-05, 7.030499999999967e-05, 6.96109999999972e-05, 7.04169999999997e-05, 6.979199999999908e-05, 6.998600000000105e-05, 6.995799999999844e-05, 7.036099999999795e-05, 7...</msg>
<status status="PASS" starttime="20201112 10:15:05.582" endtime="20201112 10:15:05.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.599" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.598" endtime="20201112 10:15:05.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.601" level="INFO">VALUE: [7.008299999999856e-05, 7.030499999999967e-05, 6.96109999999972e-05, 7.04169999999997e-05, 6.979199999999908e-05, 6.998600000000105e-05, 6.995799999999844e-05, 7.036099999999795e-05, 7.011100000000117e-05, 6.95559999999984e-05, 6.948700000000002e-05, 7.015200000000041e-05, 6.998599999999758e-05, 6.941599999999923e-05, 6.963899999999981e-05, 7.034699999999838e-05, 6.973599999999733e-05, 7.006999999999847e-05, 7.006899999999899e-05, 7.02499999999974e-05, 7.016699999999945e-05, 7.015299999999988e-05, 7.040300000000013e-05, 6.999999999999715e-05, 7.004099999999985e-05, 6.945799999999794e-05, 6.962500000000024e-05, 6.97909999999996e-05, 6.959699999999763e-05, 7.001400000000019e-05, 6.956999999999797e-05, 6.994400000000234e-05, 6.956900000000196e-05, 7.011100000000117e-05, 7.020899999999816e-05, 6.994399999999887e-05, 6.99169999999992e-05, 7.00559999999989e-05, 7.041600000000023e-05, 6.947200000000098e-05, 7.023599999999783e-05, 6.965199999999991e-05, 7.038900000000056e-05, 6.972200000000123e-05, 7.015299999999988e-05, 6.984700000000135e-05, 6.99030000000031e-05, 7.025000000000087e-05, 6.988900000000006e-05, 6.993099999999877e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.600" endtime="20201112 10:15:05.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.595" endtime="20201112 10:15:05.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.612" endtime="20201112 10:15:05.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.615" endtime="20201112 10:15:05.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.614" endtime="20201112 10:15:05.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.610" endtime="20201112 10:15:05.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.235" endtime="20201112 10:15:05.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.234" endtime="20201112 10:15:05.636"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.645" endtime="20201112 10:15:05.663"></status>
</kw>
<msg timestamp="20201112 10:15:05.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.643" endtime="20201112 10:15:05.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.664" endtime="20201112 10:15:05.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.667" endtime="20201112 10:15:05.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.641" endtime="20201112 10:15:05.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.639" endtime="20201112 10:15:05.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.677" endtime="20201112 10:15:05.964"></status>
</kw>
<msg timestamp="20201112 10:15:05.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020643264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.675" endtime="20201112 10:15:05.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020643264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.968" endtime="20201112 10:15:05.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.976" endtime="20201112 10:15:05.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.673" endtime="20201112 10:15:05.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.671" endtime="20201112 10:15:05.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.983" level="INFO">${RESULT} = [{'time': 0.020643264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.041700000000317e-05, 'source_diff': 7.041700000000317e-05}, {'time': 0.020721361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.980" endtime="20201112 10:15:05.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.996" level="INFO">${ACCURACY} = {'source_diff': [7.041700000000317e-05, 7.095799999999944e-05, 7.10559999999999e-05, 7.036099999999795e-05, 7.084799999999836e-05, 7.120899999999916e-05, 7.091600000000073e-05, 7.086100000000192e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:05.984" endtime="20201112 10:15:05.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.001" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.000" endtime="20201112 10:15:06.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.003" level="INFO">VALUE: [7.041700000000317e-05, 7.095799999999944e-05, 7.10559999999999e-05, 7.036099999999795e-05, 7.084799999999836e-05, 7.120899999999916e-05, 7.091600000000073e-05, 7.086100000000192e-05, 7.12499999999984e-05, 7.137500000000199e-05, 7.068099999999952e-05, 7.066699999999995e-05, 7.076400000000094e-05, 7.137499999999852e-05, 7.066699999999995e-05, 7.062500000000124e-05, 7.104200000000033e-05, 7.127800000000101e-05, 7.120799999999969e-05, 7.084799999999836e-05, 7.127799999999754e-05, 7.051299999999774e-05, 7.077800000000051e-05, 7.136099999999895e-05, 7.136100000000242e-05, 7.079200000000008e-05, 7.134699999999938e-05, 7.129200000000058e-05, 7.070799999999919e-05, 7.127799999999754e-05, 7.088900000000106e-05, 7.054199999999983e-05, 7.120899999999916e-05, 7.099999999999815e-05, 7.081899999999974e-05, 7.104099999999738e-05, 7.1069e-05, 7.133299999999981e-05, 7.119400000000012e-05, 7.094399999999987e-05, 7.107000000000294e-05, 7.062500000000124e-05, 7.106999999999947e-05, 7.077800000000051e-05, 7.066699999999995e-05, 7.102799999999729e-05, 7.087499999999802e-05, 7.136099999999895e-05, 7.120800000000316e-05, 7.084699999999888e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.002" endtime="20201112 10:15:06.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.997" endtime="20201112 10:15:06.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.007" endtime="20201112 10:15:06.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.010" endtime="20201112 10:15:06.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.009" endtime="20201112 10:15:06.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.005" endtime="20201112 10:15:06.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.637" endtime="20201112 10:15:06.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.637" endtime="20201112 10:15:06.031"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.040" endtime="20201112 10:15:06.058"></status>
</kw>
<msg timestamp="20201112 10:15:06.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.038" endtime="20201112 10:15:06.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.060" endtime="20201112 10:15:06.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.062" endtime="20201112 10:15:06.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.036" endtime="20201112 10:15:06.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.034" endtime="20201112 10:15:06.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.072" endtime="20201112 10:15:06.359"></status>
</kw>
<msg timestamp="20201112 10:15:06.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.071" endtime="20201112 10:15:06.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.363" endtime="20201112 10:15:06.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.371" endtime="20201112 10:15:06.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.068" endtime="20201112 10:15:06.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.067" endtime="20201112 10:15:06.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.378" level="INFO">${RESULT} = [{'time': 0.019513028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.226400000000244e-05, 'source_diff': 7.226400000000244e-05}, {'time': 0.019598028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:06.375" endtime="20201112 10:15:06.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.392" level="INFO">${ACCURACY} = {'source_diff': [7.226400000000244e-05, 7.222200000000026e-05, 7.201399999999872e-05, 7.156999999999997e-05, 7.186199999999893e-05, 7.184699999999988e-05, 7.231899999999777e-05, 7.21109999999997e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:06.379" endtime="20201112 10:15:06.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.397" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.396" endtime="20201112 10:15:06.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.399" level="INFO">VALUE: [7.226400000000244e-05, 7.222200000000026e-05, 7.201399999999872e-05, 7.156999999999997e-05, 7.186199999999893e-05, 7.184699999999988e-05, 7.231899999999777e-05, 7.21109999999997e-05, 7.17360000000028e-05, 7.155499999999745e-05, 7.218100000000102e-05, 7.143100000000027e-05, 7.233299999999734e-05, 7.207000000000047e-05, 7.193100000000077e-05, 7.232000000000072e-05, 7.233400000000029e-05, 7.204199999999786e-05, 7.201399999999872e-05, 7.220800000000069e-05, 7.236099999999995e-05, 7.14300000000008e-05, 7.16109999999992e-05, 7.19439999999974e-05, 7.165300000000138e-05, 7.173599999999933e-05, 7.238899999999909e-05, 7.215299999999841e-05, 7.233400000000029e-05, 7.163799999999887e-05, 7.201399999999872e-05, 7.184799999999936e-05, 7.208300000000056e-05, 7.222200000000026e-05, 7.218000000000155e-05, 7.159699999999963e-05, 7.220800000000069e-05, 7.188899999999859e-05, 7.215300000000188e-05, 7.197200000000001e-05, 7.215200000000241e-05, 7.156999999999997e-05, 7.237500000000299e-05, 7.183399999999979e-05, 7.195800000000044e-05, 7.222200000000026e-05, 7.19300000000013e-05, 7.163900000000181e-05, 7.191599999999826e-05, 7.18049999999977e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.398" endtime="20201112 10:15:06.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.393" endtime="20201112 10:15:06.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.403" endtime="20201112 10:15:06.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.406" endtime="20201112 10:15:06.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.405" endtime="20201112 10:15:06.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.401" endtime="20201112 10:15:06.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.032" endtime="20201112 10:15:06.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.032" endtime="20201112 10:15:06.427"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.436" endtime="20201112 10:15:06.453"></status>
</kw>
<msg timestamp="20201112 10:15:06.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.434" endtime="20201112 10:15:06.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.455" endtime="20201112 10:15:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.458" endtime="20201112 10:15:06.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.432" endtime="20201112 10:15:06.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.430" endtime="20201112 10:15:06.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.467" endtime="20201112 10:15:06.754"></status>
</kw>
<msg timestamp="20201112 10:15:06.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.466" endtime="20201112 10:15:06.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.758" endtime="20201112 10:15:06.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.766" endtime="20201112 10:15:06.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.463" endtime="20201112 10:15:06.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.462" endtime="20201112 10:15:06.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.773" level="INFO">${RESULT} = [{'time': 0.019750917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.277799999999904e-05, 'source_diff': 7.277799999999904e-05}, {'time': 0.019835917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:06.770" endtime="20201112 10:15:06.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.786" level="INFO">${ACCURACY} = {'source_diff': [7.277799999999904e-05, 7.276400000000294e-05, 7.284700000000088e-05, 7.270800000000119e-05, 7.308300000000156e-05, 7.317999999999908e-05, 7.301399999999972e-05, 7.322200000000126e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:06.774" endtime="20201112 10:15:06.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.791" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.790" endtime="20201112 10:15:06.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.793" level="INFO">VALUE: [7.277799999999904e-05, 7.276400000000294e-05, 7.284700000000088e-05, 7.270800000000119e-05, 7.308300000000156e-05, 7.317999999999908e-05, 7.301399999999972e-05, 7.322200000000126e-05, 7.326399999999997e-05, 7.317999999999908e-05, 7.255599999999793e-05, 7.313899999999984e-05, 7.323600000000083e-05, 7.26110000000002e-05, 7.312500000000027e-05, 7.284800000000036e-05, 7.255499999999845e-05, 7.309700000000113e-05, 7.255499999999845e-05, 7.316599999999951e-05, 7.284700000000088e-05, 7.315300000000288e-05, 7.337500000000052e-05, 7.313899999999984e-05, 7.255599999999793e-05, 7.259700000000063e-05, 7.257000000000097e-05, 7.284800000000036e-05, 7.262499999999977e-05, 7.286199999999993e-05, 7.279099999999913e-05, 7.323600000000083e-05, 7.306899999999852e-05, 7.338900000000009e-05, 7.263899999999934e-05, 7.259700000000063e-05, 7.319400000000212e-05, 7.316699999999898e-05, 7.276399999999947e-05, 7.279199999999861e-05, 7.336099999999748e-05, 7.329199999999911e-05, 7.25560000000014e-05, 7.318099999999855e-05, 7.245799999999747e-05, 7.319399999999865e-05, 7.294400000000187e-05, 7.288899999999959e-05, 7.30829999999981e-05, 7.262499999999977e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.792" endtime="20201112 10:15:06.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.787" endtime="20201112 10:15:06.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.797" endtime="20201112 10:15:06.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.800" endtime="20201112 10:15:06.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.799" endtime="20201112 10:15:06.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.795" endtime="20201112 10:15:06.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.428" endtime="20201112 10:15:06.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.428" endtime="20201112 10:15:06.821"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.830" endtime="20201112 10:15:06.848"></status>
</kw>
<msg timestamp="20201112 10:15:06.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.828" endtime="20201112 10:15:06.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.849" endtime="20201112 10:15:06.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.852" endtime="20201112 10:15:06.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.825" endtime="20201112 10:15:06.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.823" endtime="20201112 10:15:06.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.862" endtime="20201112 10:15:07.147"></status>
</kw>
<msg timestamp="20201112 10:15:07.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019673458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.860" endtime="20201112 10:15:07.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019673458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.151" endtime="20201112 10:15:07.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.159" endtime="20201112 10:15:07.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.858" endtime="20201112 10:15:07.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.856" endtime="20201112 10:15:07.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.166" level="INFO">${RESULT} = [{'time': 0.019673458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.426400000000097e-05, 'source_diff': 7.426400000000097e-05}, {'time': 0.019758458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:07.163" endtime="20201112 10:15:07.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.179" level="INFO">${ACCURACY} = {'source_diff': [7.426400000000097e-05, 7.422199999999879e-05, 7.362500000000077e-05, 7.39309999999993e-05, 7.39029999999967e-05, 7.433399999999882e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7...</msg>
<status status="PASS" starttime="20201112 10:15:07.167" endtime="20201112 10:15:07.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.184" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.183" endtime="20201112 10:15:07.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.186" level="INFO">VALUE: [7.426400000000097e-05, 7.422199999999879e-05, 7.362500000000077e-05, 7.39309999999993e-05, 7.39029999999967e-05, 7.433399999999882e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.408400000000204e-05, 7.34309999999988e-05, 7.359800000000111e-05, 7.345899999999794e-05, 7.386200000000093e-05, 7.400000000000115e-05, 7.35690000000025e-05, 7.38049999999997e-05, 7.413900000000084e-05, 7.401400000000072e-05, 7.427800000000054e-05, 7.376400000000047e-05, 7.368099999999905e-05, 7.394499999999887e-05, 7.349999999999718e-05, 7.419499999999912e-05, 7.405499999999995e-05, 7.420799999999922e-05, 7.42370000000013e-05, 7.351400000000022e-05, 7.377800000000004e-05, 7.412500000000127e-05, 7.386099999999798e-05, 7.343100000000227e-05, 7.359700000000163e-05, 7.39309999999993e-05, 7.441700000000023e-05, 7.383400000000179e-05, 7.398600000000158e-05, 7.373599999999786e-05, 7.434699999999891e-05, 7.372300000000123e-05, 7.363800000000087e-05, 7.41249999999978e-05, 7.434699999999891e-05, 7.40829999999991e-05, 7.350000000000065e-05, 7.424999999999793e-05, 7.447199999999904e-05, 7.41249999999978e-05, 7.44439999999999e-05, 7.369399999999915e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.185" endtime="20201112 10:15:07.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.180" endtime="20201112 10:15:07.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.190" endtime="20201112 10:15:07.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.193" endtime="20201112 10:15:07.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.192" endtime="20201112 10:15:07.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.188" endtime="20201112 10:15:07.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.822" endtime="20201112 10:15:07.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.821" endtime="20201112 10:15:07.214"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.223" endtime="20201112 10:15:07.239"></status>
</kw>
<msg timestamp="20201112 10:15:07.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.221" endtime="20201112 10:15:07.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.241" endtime="20201112 10:15:07.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.243" endtime="20201112 10:15:07.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.219" endtime="20201112 10:15:07.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.217" endtime="20201112 10:15:07.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.253" endtime="20201112 10:15:07.539"></status>
</kw>
<msg timestamp="20201112 10:15:07.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.252" endtime="20201112 10:15:07.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.543" endtime="20201112 10:15:07.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.551" endtime="20201112 10:15:07.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.249" endtime="20201112 10:15:07.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.247" endtime="20201112 10:15:07.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.558" level="INFO">${RESULT} = [{'time': 0.019575958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.462500000000177e-05, 'source_diff': 7.462500000000177e-05}, {'time': 0.019659958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:07.555" endtime="20201112 10:15:07.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.571" level="INFO">${ACCURACY} = {'source_diff': [7.462500000000177e-05, 7.462500000000177e-05, 7.509699999999966e-05, 7.470799999999972e-05, 7.53890000000021e-05, 7.515300000000141e-05, 7.529200000000111e-05, 7.470799999999972e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:07.559" endtime="20201112 10:15:07.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.576" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.575" endtime="20201112 10:15:07.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.578" level="INFO">VALUE: [7.462500000000177e-05, 7.462500000000177e-05, 7.509699999999966e-05, 7.470799999999972e-05, 7.53890000000021e-05, 7.515300000000141e-05, 7.529200000000111e-05, 7.470799999999972e-05, 7.483399999999932e-05, 7.498600000000258e-05, 7.465300000000091e-05, 7.490200000000169e-05, 7.523599999999936e-05, 7.498600000000258e-05, 7.518100000000055e-05, 7.486099999999898e-05, 7.455500000000045e-05, 7.502800000000129e-05, 7.479200000000061e-05, 7.542999999999786e-05, 7.491700000000073e-05, 7.507e-05, 7.469499999999962e-05, 7.53890000000021e-05, 7.541699999999776e-05, 7.536099999999948e-05, 7.531900000000077e-05, 7.497199999999954e-05, 7.512500000000227e-05, 7.518100000000055e-05, 7.518100000000055e-05, 7.486100000000245e-05, 7.530600000000068e-05, 7.527799999999807e-05, 7.518100000000055e-05, 7.484699999999941e-05, 7.527700000000206e-05, 7.529200000000111e-05, 7.486099999999898e-05, 7.473600000000233e-05, 7.441600000000076e-05, 7.44439999999999e-05, 7.523600000000283e-05, 7.497199999999954e-05, 7.455599999999993e-05, 7.50830000000001e-05, 7.488899999999812e-05, 7.507e-05, 7.459799999999864e-05, 7.49310000000003e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.577" endtime="20201112 10:15:07.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.572" endtime="20201112 10:15:07.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.582" endtime="20201112 10:15:07.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.585" endtime="20201112 10:15:07.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.584" endtime="20201112 10:15:07.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.580" endtime="20201112 10:15:07.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.215" endtime="20201112 10:15:07.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.215" endtime="20201112 10:15:07.606"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.614" endtime="20201112 10:15:07.633"></status>
</kw>
<msg timestamp="20201112 10:15:07.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.613" endtime="20201112 10:15:07.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.634" endtime="20201112 10:15:07.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.637" endtime="20201112 10:15:07.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.611" endtime="20201112 10:15:07.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.608" endtime="20201112 10:15:07.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.647" endtime="20201112 10:15:07.933"></status>
</kw>
<msg timestamp="20201112 10:15:07.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.645" endtime="20201112 10:15:07.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.937" endtime="20201112 10:15:07.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.945" endtime="20201112 10:15:07.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.643" endtime="20201112 10:15:07.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.641" endtime="20201112 10:15:07.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.952" level="INFO">${RESULT} = [{'time': 0.020495111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.622200000000079e-05, 'source_diff': 7.622200000000079e-05}, {'time': 0.020579125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:07.948" endtime="20201112 10:15:07.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.966" level="INFO">${ACCURACY} = {'source_diff': [7.622200000000079e-05, 7.59029999999987e-05, 7.587499999999955e-05, 7.55700000000005e-05, 7.579199999999814e-05, 7.605599999999796e-05, 7.648600000000061e-05, 7.63189999999983e-05, 7....</msg>
<status status="PASS" starttime="20201112 10:15:07.953" endtime="20201112 10:15:07.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.971" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.970" endtime="20201112 10:15:07.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.973" level="INFO">VALUE: [7.622200000000079e-05, 7.59029999999987e-05, 7.587499999999955e-05, 7.55700000000005e-05, 7.579199999999814e-05, 7.605599999999796e-05, 7.648600000000061e-05, 7.63189999999983e-05, 7.584800000000336e-05, 7.555500000000145e-05, 7.556900000000102e-05, 7.591599999999879e-05, 7.597200000000054e-05, 7.611100000000023e-05, 7.58890000000026e-05, 7.55700000000005e-05, 7.58890000000026e-05, 7.59310000000013e-05, 7.591700000000173e-05, 7.61249999999998e-05, 7.584700000000041e-05, 7.597300000000001e-05, 7.542999999999786e-05, 7.611100000000023e-05, 7.588899999999912e-05, 7.584700000000041e-05, 7.638899999999962e-05, 7.593099999999783e-05, 7.559700000000016e-05, 7.638899999999962e-05, 7.624999999999993e-05, 7.613899999999937e-05, 7.55700000000005e-05, 7.598699999999958e-05, 7.613899999999937e-05, 7.636100000000048e-05, 7.636100000000048e-05, 7.637500000000005e-05, 7.634700000000091e-05, 7.60830000000011e-05, 7.587500000000302e-05, 7.59310000000013e-05, 7.605599999999796e-05, 7.619499999999765e-05, 7.547200000000004e-05, 7.548699999999908e-05, 7.548700000000255e-05, 7.637500000000005e-05, 7.563899999999887e-05, 7.629100000000263e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.972" endtime="20201112 10:15:07.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.967" endtime="20201112 10:15:07.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.977" endtime="20201112 10:15:07.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.980" endtime="20201112 10:15:07.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.978" endtime="20201112 10:15:08.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.975" endtime="20201112 10:15:08.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.607" endtime="20201112 10:15:08.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.606" endtime="20201112 10:15:08.001"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.010" endtime="20201112 10:15:08.028"></status>
</kw>
<msg timestamp="20201112 10:15:08.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.008" endtime="20201112 10:15:08.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.030" endtime="20201112 10:15:08.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.032" endtime="20201112 10:15:08.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.006" endtime="20201112 10:15:08.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.003" endtime="20201112 10:15:08.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.042" endtime="20201112 10:15:08.328"></status>
</kw>
<msg timestamp="20201112 10:15:08.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.041" endtime="20201112 10:15:08.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.332" endtime="20201112 10:15:08.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.340" endtime="20201112 10:15:08.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.038" endtime="20201112 10:15:08.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.037" endtime="20201112 10:15:08.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.347" level="INFO">${RESULT} = [{'time': 0.019669444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.700000000000068e-05, 'source_diff': 7.700000000000068e-05}, {'time': 0.019758486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:08.343" endtime="20201112 10:15:08.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.360" level="INFO">${ACCURACY} = {'source_diff': [7.700000000000068e-05, 7.734699999999844e-05, 7.698600000000111e-05, 7.655499999999898e-05, 7.720799999999875e-05, 7.679199999999914e-05, 7.683300000000184e-05, 7.679200000000261e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:08.348" endtime="20201112 10:15:08.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.364" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.363" endtime="20201112 10:15:08.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.367" level="INFO">VALUE: [7.700000000000068e-05, 7.734699999999844e-05, 7.698600000000111e-05, 7.655499999999898e-05, 7.720799999999875e-05, 7.679199999999914e-05, 7.683300000000184e-05, 7.679200000000261e-05, 7.64449999999979e-05, 7.659700000000116e-05, 7.69449999999984e-05, 7.684800000000089e-05, 7.704099999999992e-05, 7.702700000000035e-05, 7.66250000000003e-05, 7.71389999999969e-05, 7.656899999999855e-05, 7.691699999999926e-05, 7.643099999999833e-05, 7.722200000000179e-05, 7.663899999999987e-05, 7.681900000000227e-05, 7.658400000000107e-05, 7.654099999999942e-05, 7.67770000000001e-05, 7.679100000000313e-05, 7.659700000000116e-05, 7.706899999999905e-05, 7.698599999999764e-05, 7.727800000000007e-05, 7.698600000000111e-05, 7.697199999999807e-05, 7.730599999999921e-05, 7.715299999999994e-05, 7.66250000000003e-05, 7.684800000000089e-05, 7.720899999999822e-05, 7.69579999999985e-05, 7.698600000000111e-05, 7.72770000000006e-05, 7.643000000000233e-05, 7.694500000000187e-05, 7.661100000000073e-05, 7.69579999999985e-05, 7.687500000000055e-05, 7.652800000000279e-05, 7.647199999999757e-05, 7.654200000000236e-05, 7.652799999999932e-05, 7.669399999999868e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.366" endtime="20201112 10:15:08.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.361" endtime="20201112 10:15:08.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.370" endtime="20201112 10:15:08.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.374" endtime="20201112 10:15:08.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.372" endtime="20201112 10:15:08.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.369" endtime="20201112 10:15:08.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.002" endtime="20201112 10:15:08.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.001" endtime="20201112 10:15:08.395"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.403" endtime="20201112 10:15:08.422"></status>
</kw>
<msg timestamp="20201112 10:15:08.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.402" endtime="20201112 10:15:08.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.424" endtime="20201112 10:15:08.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.426" endtime="20201112 10:15:08.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.399" endtime="20201112 10:15:08.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.397" endtime="20201112 10:15:08.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.436" endtime="20201112 10:15:08.722"></status>
</kw>
<msg timestamp="20201112 10:15:08.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019476917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019555069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.435" endtime="20201112 10:15:08.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019476917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019555069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.726" endtime="20201112 10:15:08.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.734" endtime="20201112 10:15:08.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.432" endtime="20201112 10:15:08.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.430" endtime="20201112 10:15:08.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.741" level="INFO">${RESULT} = [{'time': 0.019555069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.815200000000147e-05, 'source_diff': 7.815200000000147e-05}, {'time': 0.019641069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:08.738" endtime="20201112 10:15:08.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.754" level="INFO">${ACCURACY} = {'source_diff': [7.815200000000147e-05, 7.791600000000079e-05, 7.806900000000006e-05, 7.786100000000198e-05, 7.755499999999999e-05, 7.741599999999682e-05, 7.827800000000107e-05, 7.748600000000161e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:08.742" endtime="20201112 10:15:08.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.759" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.758" endtime="20201112 10:15:08.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.761" level="INFO">VALUE: [7.815200000000147e-05, 7.791600000000079e-05, 7.806900000000006e-05, 7.786100000000198e-05, 7.755499999999999e-05, 7.741599999999682e-05, 7.827800000000107e-05, 7.748600000000161e-05, 7.7764000000001e-05, 7.768099999999958e-05, 7.791700000000026e-05, 7.800000000000168e-05, 7.805599999999996e-05, 7.777699999999763e-05, 7.79579999999995e-05, 7.81250000000018e-05, 7.758299999999912e-05, 7.744399999999943e-05, 7.797199999999907e-05, 7.804200000000039e-05, 7.758299999999912e-05, 7.81389999999979e-05, 7.784799999999842e-05, 7.827800000000107e-05, 7.836100000000248e-05, 7.797300000000201e-05, 7.786199999999799e-05, 7.826300000000203e-05, 7.847199999999957e-05, 7.766600000000054e-05, 7.748599999999814e-05, 7.7457999999999e-05, 7.756999999999903e-05, 7.815300000000094e-05, 7.81389999999979e-05, 7.780599999999971e-05, 7.751400000000075e-05, 7.745899999999847e-05, 7.827699999999813e-05, 7.7457999999999e-05, 7.763900000000087e-05, 7.79030000000007e-05, 7.816599999999757e-05, 7.833299999999987e-05, 7.819400000000018e-05, 7.779200000000014e-05, 7.75700000000025e-05, 7.836099999999901e-05, 7.812499999999833e-05, 7.81250000000018e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.760" endtime="20201112 10:15:08.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.755" endtime="20201112 10:15:08.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.765" endtime="20201112 10:15:08.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.768" endtime="20201112 10:15:08.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.767" endtime="20201112 10:15:08.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.763" endtime="20201112 10:15:08.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.396" endtime="20201112 10:15:08.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.395" endtime="20201112 10:15:08.789"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.798" endtime="20201112 10:15:08.815"></status>
</kw>
<msg timestamp="20201112 10:15:08.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.796" endtime="20201112 10:15:08.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.817" endtime="20201112 10:15:08.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.819" endtime="20201112 10:15:08.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.794" endtime="20201112 10:15:08.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.792" endtime="20201112 10:15:08.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.829" endtime="20201112 10:15:09.115"></status>
</kw>
<msg timestamp="20201112 10:15:09.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019792542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.828" endtime="20201112 10:15:09.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019792542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.120" endtime="20201112 10:15:09.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.128" endtime="20201112 10:15:09.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.825" endtime="20201112 10:15:09.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.823" endtime="20201112 10:15:09.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.135" level="INFO">${RESULT} = [{'time': 0.019871264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.872199999999982e-05, 'source_diff': 7.872199999999982e-05}, {'time': 0.019963292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:09.131" endtime="20201112 10:15:09.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.148" level="INFO">${ACCURACY} = {'source_diff': [7.872199999999982e-05, 7.898599999999964e-05, 7.901399999999878e-05, 7.886099999999951e-05, 7.867999999999764e-05, 7.905500000000149e-05, 7.913900000000237e-05, 7.883300000000037e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:09.136" endtime="20201112 10:15:09.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.153" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.152" endtime="20201112 10:15:09.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.155" level="INFO">VALUE: [7.872199999999982e-05, 7.898599999999964e-05, 7.901399999999878e-05, 7.886099999999951e-05, 7.867999999999764e-05, 7.905500000000149e-05, 7.913900000000237e-05, 7.883300000000037e-05, 7.870800000000025e-05, 7.923599999999989e-05, 7.879199999999767e-05, 7.85969999999997e-05, 7.918100000000108e-05, 7.85839999999996e-05, 7.879200000000114e-05, 7.905600000000096e-05, 7.931999999999731e-05, 7.941600000000229e-05, 7.858300000000012e-05, 7.894400000000093e-05, 7.930499999999827e-05, 7.933300000000088e-05, 7.887500000000255e-05, 7.85969999999997e-05, 7.893099999999736e-05, 7.920800000000075e-05, 7.933400000000035e-05, 7.866600000000154e-05, 7.90840000000001e-05, 7.899999999999921e-05, 7.863900000000187e-05, 7.868000000000111e-05, 7.920800000000075e-05, 7.87909999999982e-05, 7.85969999999997e-05, 7.936100000000001e-05, 7.84030000000012e-05, 7.920800000000075e-05, 7.89030000000017e-05, 7.906900000000106e-05, 7.893100000000083e-05, 7.909799999999967e-05, 7.84449999999999e-05, 7.868000000000111e-05, 7.863900000000187e-05, 7.911099999999976e-05, 7.870799999999678e-05, 7.938900000000262e-05, 7.87229999999993e-05, 7.929199999999817e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.154" endtime="20201112 10:15:09.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.149" endtime="20201112 10:15:09.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.159" endtime="20201112 10:15:09.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.163" endtime="20201112 10:15:09.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.161" endtime="20201112 10:15:09.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.157" endtime="20201112 10:15:09.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.790" endtime="20201112 10:15:09.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.790" endtime="20201112 10:15:09.184"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.193" endtime="20201112 10:15:09.211"></status>
</kw>
<msg timestamp="20201112 10:15:09.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.191" endtime="20201112 10:15:09.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.213" endtime="20201112 10:15:09.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.215" endtime="20201112 10:15:09.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.189" endtime="20201112 10:15:09.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.187" endtime="20201112 10:15:09.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.226" endtime="20201112 10:15:09.512"></status>
</kw>
<msg timestamp="20201112 10:15:09.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.224" endtime="20201112 10:15:09.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.516" endtime="20201112 10:15:09.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.525" endtime="20201112 10:15:09.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.221" endtime="20201112 10:15:09.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.220" endtime="20201112 10:15:09.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.532" level="INFO">${RESULT} = [{'time': 0.019958222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.943000000000186e-05, 'source_diff': 7.943000000000186e-05}, {'time': 0.020046236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:09.528" endtime="20201112 10:15:09.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.547" level="INFO">${ACCURACY} = {'source_diff': [7.943000000000186e-05, 8.037499999999712e-05, 7.955600000000146e-05, 8.037500000000058e-05, 8.02779999999996e-05, 7.966699999999854e-05, 7.99450000000014e-05, 8.002800000000282e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:09.533" endtime="20201112 10:15:09.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.552" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.550" endtime="20201112 10:15:09.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.554" level="INFO">VALUE: [7.943000000000186e-05, 8.037499999999712e-05, 7.955600000000146e-05, 8.037500000000058e-05, 8.02779999999996e-05, 7.966699999999854e-05, 7.99450000000014e-05, 8.002800000000282e-05, 8.041599999999982e-05, 7.994399999999846e-05, 7.99450000000014e-05, 7.955499999999852e-05, 8.012499999999687e-05, 7.993099999999836e-05, 8.025000000000046e-05, 7.958300000000113e-05, 7.993099999999836e-05, 7.955600000000146e-05, 8.023600000000089e-05, 7.994499999999793e-05, 8.012500000000033e-05, 8.0152e-05, 8.0152e-05, 8.019399999999871e-05, 8.006900000000206e-05, 7.990299999999922e-05, 8.029199999999917e-05, 8.002799999999935e-05, 7.987500000000008e-05, 8.005599999999849e-05, 8.04169999999993e-05, 8.030599999999874e-05, 7.947200000000057e-05, 8.041599999999982e-05, 7.952699999999938e-05, 8.037499999999712e-05, 7.970800000000125e-05, 7.944399999999796e-05, 8.01389999999999e-05, 8.025000000000046e-05, 7.951399999999928e-05, 7.984699999999748e-05, 8.036100000000101e-05, 7.941700000000176e-05, 7.977699999999963e-05, 8.023700000000036e-05, 8.006899999999859e-05, 7.993000000000236e-05, 7.956900000000156e-05, 7.987500000000008e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.553" endtime="20201112 10:15:09.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.548" endtime="20201112 10:15:09.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.558" endtime="20201112 10:15:09.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.561" endtime="20201112 10:15:09.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.560" endtime="20201112 10:15:09.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.556" endtime="20201112 10:15:09.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.185" endtime="20201112 10:15:09.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.185" endtime="20201112 10:15:09.583"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.592" endtime="20201112 10:15:09.611"></status>
</kw>
<msg timestamp="20201112 10:15:09.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.590" endtime="20201112 10:15:09.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.612" endtime="20201112 10:15:09.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.615" endtime="20201112 10:15:09.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.587" endtime="20201112 10:15:09.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.585" endtime="20201112 10:15:09.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.625" endtime="20201112 10:15:09.935"></status>
</kw>
<msg timestamp="20201112 10:15:09.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:09.624" endtime="20201112 10:15:09.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:09.940" endtime="20201112 10:15:09.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.948" endtime="20201112 10:15:09.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.621" endtime="20201112 10:15:09.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.619" endtime="20201112 10:15:09.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.955" level="INFO">${RESULT} = [{'time': 0.0204945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054199999999942e-05, 'source_diff': 8.054199999999942e-05}, {'time': 0.020582472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:09.952" endtime="20201112 10:15:09.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.969" level="INFO">${ACCURACY} = {'source_diff': [8.054199999999942e-05, 8.044400000000243e-05, 8.108300000000263e-05, 8.084699999999848e-05, 8.079199999999967e-05, 8.125000000000146e-05, 8.086099999999805e-05, 8.038900000000015e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:09.956" endtime="20201112 10:15:09.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.974" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.973" endtime="20201112 10:15:09.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.976" level="INFO">VALUE: [8.054199999999942e-05, 8.044400000000243e-05, 8.108300000000263e-05, 8.084699999999848e-05, 8.079199999999967e-05, 8.125000000000146e-05, 8.086099999999805e-05, 8.038900000000015e-05, 8.081999999999881e-05, 8.12780000000006e-05, 8.062500000000083e-05, 8.07910000000002e-05, 8.100000000000121e-05, 8.048599999999767e-05, 8.084799999999795e-05, 8.045900000000147e-05, 8.066699999999954e-05, 8.134700000000245e-05, 8.108399999999863e-05, 8.12780000000006e-05, 8.080599999999924e-05, 8.067999999999964e-05, 8.048600000000114e-05, 8.108300000000263e-05, 8.04719999999981e-05, 8.115300000000047e-05, 8.129099999999723e-05, 8.137500000000158e-05, 8.116700000000004e-05, 8.044499999999843e-05, 8.097299999999807e-05, 8.098599999999817e-05, 8.101400000000078e-05, 8.057000000000203e-05, 8.042999999999939e-05, 8.098599999999817e-05, 8.05970000000017e-05, 8.087500000000108e-05, 8.126400000000103e-05, 8.080599999999924e-05, 8.095799999999903e-05, 8.086100000000151e-05, 8.12780000000006e-05, 8.038900000000015e-05, 8.076400000000053e-05, 8.083300000000238e-05, 8.127700000000113e-05, 8.095799999999903e-05, 8.134699999999898e-05, 8.070899999999825e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.975" endtime="20201112 10:15:09.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.970" endtime="20201112 10:15:09.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.980" endtime="20201112 10:15:09.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.984" endtime="20201112 10:15:10.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.982" endtime="20201112 10:15:10.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.978" endtime="20201112 10:15:10.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.584" endtime="20201112 10:15:10.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.583" endtime="20201112 10:15:10.005"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.014" endtime="20201112 10:15:10.032"></status>
</kw>
<msg timestamp="20201112 10:15:10.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.012" endtime="20201112 10:15:10.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.033" endtime="20201112 10:15:10.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.036" endtime="20201112 10:15:10.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.010" endtime="20201112 10:15:10.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.008" endtime="20201112 10:15:10.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.047" endtime="20201112 10:15:10.334"></status>
</kw>
<msg timestamp="20201112 10:15:10.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.045" endtime="20201112 10:15:10.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.339" endtime="20201112 10:15:10.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.348" endtime="20201112 10:15:10.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.042" endtime="20201112 10:15:10.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.041" endtime="20201112 10:15:10.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.355" level="INFO">${RESULT} = [{'time': 0.020327736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.140300000000072e-05, 'source_diff': 8.140300000000072e-05}, {'time': 0.02041875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:10.352" endtime="20201112 10:15:10.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.369" level="INFO">${ACCURACY} = {'source_diff': [8.140300000000072e-05, 8.172199999999935e-05, 8.14170000000003e-05, 8.14170000000003e-05, 8.240300000000172e-05, 8.219400000000071e-05, 8.232000000000031e-05, 8.181900000000034e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:10.356" endtime="20201112 10:15:10.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.374" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.373" endtime="20201112 10:15:10.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.376" level="INFO">VALUE: [8.140300000000072e-05, 8.172199999999935e-05, 8.14170000000003e-05, 8.14170000000003e-05, 8.240300000000172e-05, 8.219400000000071e-05, 8.232000000000031e-05, 8.181900000000034e-05, 8.151399999999781e-05, 8.241699999999783e-05, 8.234699999999998e-05, 8.174999999999849e-05, 8.162500000000183e-05, 8.16390000000014e-05, 8.212499999999887e-05, 8.194499999999993e-05, 8.243100000000086e-05, 8.191699999999733e-05, 8.180600000000024e-05, 8.193100000000036e-05, 8.213899999999844e-05, 8.195800000000003e-05, 8.202800000000135e-05, 8.219400000000071e-05, 8.204200000000092e-05, 8.22780000000016e-05, 8.215300000000147e-05, 8.234699999999998e-05, 8.205599999999702e-05, 8.202800000000135e-05, 8.169499999999968e-05, 8.200000000000221e-05, 8.156900000000009e-05, 8.205499999999755e-05, 8.152700000000138e-05, 8.173599999999892e-05, 8.231899999999737e-05, 8.184699999999948e-05, 8.206900000000059e-05, 8.151400000000128e-05, 8.201400000000178e-05, 8.162499999999837e-05, 8.229200000000117e-05, 8.202700000000188e-05, 8.201399999999831e-05, 8.222199999999985e-05, 8.173599999999892e-05, 8.165300000000097e-05, 8.16529999999975e-05, 8.170799999999978e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.375" endtime="20201112 10:15:10.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.370" endtime="20201112 10:15:10.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.380" endtime="20201112 10:15:10.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.384" endtime="20201112 10:15:10.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.382" endtime="20201112 10:15:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.379" endtime="20201112 10:15:10.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.006" endtime="20201112 10:15:10.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.005" endtime="20201112 10:15:10.405"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.414" endtime="20201112 10:15:10.433"></status>
</kw>
<msg timestamp="20201112 10:15:10.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.412" endtime="20201112 10:15:10.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.435" endtime="20201112 10:15:10.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.438" endtime="20201112 10:15:10.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.410" endtime="20201112 10:15:10.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.408" endtime="20201112 10:15:10.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.448" endtime="20201112 10:15:10.734"></status>
</kw>
<msg timestamp="20201112 10:15:10.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020176361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.447" endtime="20201112 10:15:10.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020176361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.739" endtime="20201112 10:15:10.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.747" endtime="20201112 10:15:10.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.444" endtime="20201112 10:15:10.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.442" endtime="20201112 10:15:10.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.754" level="INFO">${RESULT} = [{'time': 0.020176361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.294400000000146e-05, 'source_diff': 8.294400000000146e-05}, {'time': 0.020270361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:10.751" endtime="20201112 10:15:10.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.768" level="INFO">${ACCURACY} = {'source_diff': [8.294400000000146e-05, 8.329200000000217e-05, 8.29309999999979e-05, 8.338899999999969e-05, 8.332000000000131e-05, 8.293100000000136e-05, 8.263800000000293e-05, 8.282000000000081e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:10.755" endtime="20201112 10:15:10.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.773" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.772" endtime="20201112 10:15:10.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.775" level="INFO">VALUE: [8.294400000000146e-05, 8.329200000000217e-05, 8.29309999999979e-05, 8.338899999999969e-05, 8.332000000000131e-05, 8.293100000000136e-05, 8.263800000000293e-05, 8.282000000000081e-05, 8.329099999999923e-05, 8.263899999999894e-05, 8.299999999999974e-05, 8.26109999999998e-05, 8.3152999999999e-05, 8.33049999999988e-05, 8.274999999999949e-05, 8.33469999999975e-05, 8.282000000000081e-05, 8.320900000000075e-05, 8.291699999999833e-05, 8.332000000000131e-05, 8.336100000000055e-05, 8.308300000000116e-05, 8.266600000000207e-05, 8.284700000000048e-05, 8.322200000000085e-05, 8.324999999999999e-05, 8.312500000000334e-05, 8.29590000000005e-05, 8.31390000000029e-05, 8.329099999999923e-05, 8.283399999999691e-05, 8.308400000000063e-05, 8.263899999999894e-05, 8.287499999999962e-05, 8.338899999999969e-05, 8.293100000000136e-05, 8.318099999999815e-05, 8.308300000000116e-05, 8.284700000000048e-05, 8.287499999999962e-05, 8.32919999999987e-05, 8.250000000000271e-05, 8.338899999999969e-05, 8.304099999999898e-05, 8.29720000000006e-05, 8.280500000000177e-05, 8.33469999999975e-05, 8.245800000000053e-05, 8.291699999999833e-05, 8.279200000000167e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.774" endtime="20201112 10:15:10.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.769" endtime="20201112 10:15:10.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.783" endtime="20201112 10:15:10.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.787" endtime="20201112 10:15:10.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.786" endtime="20201112 10:15:10.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.782" endtime="20201112 10:15:10.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.406" endtime="20201112 10:15:10.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.405" endtime="20201112 10:15:10.808"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.817" endtime="20201112 10:15:10.836"></status>
</kw>
<msg timestamp="20201112 10:15:10.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.816" endtime="20201112 10:15:10.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.837" endtime="20201112 10:15:10.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.840" endtime="20201112 10:15:10.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.813" endtime="20201112 10:15:10.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.811" endtime="20201112 10:15:10.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.850" endtime="20201112 10:15:11.137"></status>
</kw>
<msg timestamp="20201112 10:15:11.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020832833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020917222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.849" endtime="20201112 10:15:11.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020832833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020917222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.141" endtime="20201112 10:15:11.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.150" endtime="20201112 10:15:11.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.846" endtime="20201112 10:15:11.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.844" endtime="20201112 10:15:11.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.157" level="INFO">${RESULT} = [{'time': 0.020917222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.438900000000069e-05, 'source_diff': 8.438900000000069e-05}, {'time': 0.02100925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:11.153" endtime="20201112 10:15:11.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.171" level="INFO">${ACCURACY} = {'source_diff': [8.438900000000069e-05, 8.422200000000185e-05, 8.384700000000148e-05, 8.406999999999859e-05, 8.34170000000023e-05, 8.358299999999819e-05, 8.425000000000099e-05, 8.420799999999881e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:11.158" endtime="20201112 10:15:11.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.176" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.175" endtime="20201112 10:15:11.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.179" level="INFO">VALUE: [8.438900000000069e-05, 8.422200000000185e-05, 8.384700000000148e-05, 8.406999999999859e-05, 8.34170000000023e-05, 8.358299999999819e-05, 8.425000000000099e-05, 8.420799999999881e-05, 8.342999999999892e-05, 8.391599999999985e-05, 8.372199999999788e-05, 8.354099999999948e-05, 8.4153e-05, 8.368100000000211e-05, 8.39859999999977e-05, 8.372199999999788e-05, 8.438900000000069e-05, 8.351399999999981e-05, 8.363899999999994e-05, 8.34309999999984e-05, 8.405599999999902e-05, 8.341599999999935e-05, 8.392999999999942e-05, 8.406900000000259e-05, 8.388900000000019e-05, 8.416699999999958e-05, 8.418099999999915e-05, 8.377799999999963e-05, 8.409699999999826e-05, 8.340300000000272e-05, 8.395799999999856e-05, 8.3459000000001e-05, 8.417999999999967e-05, 8.365200000000003e-05, 8.36529999999995e-05, 8.402799999999988e-05, 8.387500000000062e-05, 8.423600000000142e-05, 8.409700000000173e-05, 8.390299999999976e-05, 8.387500000000062e-05, 8.386200000000052e-05, 8.377799999999963e-05, 8.436099999999808e-05, 8.423599999999795e-05, 8.379099999999973e-05, 8.406900000000259e-05, 8.433299999999894e-05, 8.376400000000006e-05, 8.427800000000013e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.177" endtime="20201112 10:15:11.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.172" endtime="20201112 10:15:11.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.183" endtime="20201112 10:15:11.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.186" endtime="20201112 10:15:11.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.184" endtime="20201112 10:15:11.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.181" endtime="20201112 10:15:11.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.809" endtime="20201112 10:15:11.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.809" endtime="20201112 10:15:11.207"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.216" endtime="20201112 10:15:11.235"></status>
</kw>
<msg timestamp="20201112 10:15:11.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.215" endtime="20201112 10:15:11.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.237" endtime="20201112 10:15:11.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.239" endtime="20201112 10:15:11.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.212" endtime="20201112 10:15:11.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.210" endtime="20201112 10:15:11.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.250" endtime="20201112 10:15:11.536"></status>
</kw>
<msg timestamp="20201112 10:15:11.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020150236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.248" endtime="20201112 10:15:11.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020150236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.540" endtime="20201112 10:15:11.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.548" endtime="20201112 10:15:11.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.246" endtime="20201112 10:15:11.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.244" endtime="20201112 10:15:11.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.555" level="INFO">${RESULT} = [{'time': 0.020235458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.522200000000285e-05, 'source_diff': 8.522200000000285e-05}, {'time': 0.020331486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:11.552" endtime="20201112 10:15:11.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.569" level="INFO">${ACCURACY} = {'source_diff': [8.522200000000285e-05, 8.51249999999984e-05, 8.501400000000131e-05, 8.487499999999815e-05, 8.538900000000169e-05, 8.513900000000144e-05, 8.447300000000157e-05, 8.484799999999848e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:11.556" endtime="20201112 10:15:11.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.574" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.573" endtime="20201112 10:15:11.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.576" level="INFO">VALUE: [8.522200000000285e-05, 8.51249999999984e-05, 8.501400000000131e-05, 8.487499999999815e-05, 8.538900000000169e-05, 8.513900000000144e-05, 8.447300000000157e-05, 8.484799999999848e-05, 8.506900000000012e-05, 8.462500000000137e-05, 8.469399999999974e-05, 8.476400000000106e-05, 8.512500000000187e-05, 8.515299999999754e-05, 8.502799999999741e-05, 8.498600000000217e-05, 8.505600000000002e-05, 8.533399999999941e-05, 8.486100000000205e-05, 8.506900000000012e-05, 8.486100000000205e-05, 8.468000000000017e-05, 8.540199999999831e-05, 8.459700000000223e-05, 8.486099999999858e-05, 8.536099999999908e-05, 8.455599999999952e-05, 8.448600000000167e-05, 8.486099999999858e-05, 8.486100000000205e-05, 8.469499999999922e-05, 8.490300000000076e-05, 8.497199999999913e-05, 8.537499999999865e-05, 8.463899999999747e-05, 8.462500000000137e-05, 8.51249999999984e-05, 8.494399999999999e-05, 8.508399999999916e-05, 8.481999999999934e-05, 8.459699999999876e-05, 8.491700000000033e-05, 8.520899999999929e-05, 8.529099999999776e-05, 8.441699999999983e-05, 8.481899999999987e-05, 8.477800000000063e-05, 8.459699999999876e-05, 8.51669999999971e-05, 8.498600000000217e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.575" endtime="20201112 10:15:11.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.570" endtime="20201112 10:15:11.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.580" endtime="20201112 10:15:11.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.584" endtime="20201112 10:15:11.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.582" endtime="20201112 10:15:11.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.578" endtime="20201112 10:15:11.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.208" endtime="20201112 10:15:11.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.208" endtime="20201112 10:15:11.605"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.614" endtime="20201112 10:15:11.633"></status>
</kw>
<msg timestamp="20201112 10:15:11.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.612" endtime="20201112 10:15:11.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.634" endtime="20201112 10:15:11.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.637" endtime="20201112 10:15:11.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.610" endtime="20201112 10:15:11.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.608" endtime="20201112 10:15:11.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.647" endtime="20201112 10:15:11.934"></status>
</kw>
<msg timestamp="20201112 10:15:11.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020173542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:11.646" endtime="20201112 10:15:11.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020173542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:11.938" endtime="20201112 10:15:11.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.947" endtime="20201112 10:15:11.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.643" endtime="20201112 10:15:11.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.641" endtime="20201112 10:15:11.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.954" level="INFO">${RESULT} = [{'time': 0.020259, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.545800000000006e-05, 'source_diff': 8.545800000000006e-05}, {'time': 0.020354, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.5...</msg>
<status status="PASS" starttime="20201112 10:15:11.950" endtime="20201112 10:15:11.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.968" level="INFO">${ACCURACY} = {'source_diff': [8.545800000000006e-05, 8.574999999999902e-05, 8.613899999999897e-05, 8.602799999999841e-05, 8.611099999999983e-05, 8.586199999999905e-05, 8.608300000000069e-05, 8.563900000000194e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:11.955" endtime="20201112 10:15:11.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.972" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.971" endtime="20201112 10:15:11.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.975" level="INFO">VALUE: [8.545800000000006e-05, 8.574999999999902e-05, 8.613899999999897e-05, 8.602799999999841e-05, 8.611099999999983e-05, 8.586199999999905e-05, 8.608300000000069e-05, 8.563900000000194e-05, 8.544400000000049e-05, 8.548600000000267e-05, 8.586099999999958e-05, 8.609700000000026e-05, 8.54720000000031e-05, 8.59859999999997e-05, 8.632000000000084e-05, 8.619500000000072e-05, 8.54310000000004e-05, 8.595900000000004e-05, 8.583300000000044e-05, 8.561099999999933e-05, 8.563899999999847e-05, 8.572200000000335e-05, 8.583399999999991e-05, 8.574999999999902e-05, 8.590199999999881e-05, 8.627799999999866e-05, 8.638899999999922e-05, 8.613899999999897e-05, 8.607000000000059e-05, 8.555500000000105e-05, 8.586099999999958e-05, 8.5847e-05, 8.576400000000206e-05, 8.56530000000015e-05, 8.570799999999684e-05, 8.582000000000034e-05, 8.587499999999915e-05, 8.636100000000008e-05, 8.582000000000034e-05, 8.574999999999902e-05, 8.563900000000194e-05, 8.633300000000094e-05, 8.61249999999994e-05, 8.611099999999983e-05, 8.565299999999804e-05, 8.601400000000231e-05, 8.573600000000292e-05, 8.63189999999979e-05, 8.636100000000008e-05, 8.56669999999976e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.973" endtime="20201112 10:15:11.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.969" endtime="20201112 10:15:11.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.979" endtime="20201112 10:15:11.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.982" endtime="20201112 10:15:12.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.981" endtime="20201112 10:15:12.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.977" endtime="20201112 10:15:12.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.606" endtime="20201112 10:15:12.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.605" endtime="20201112 10:15:12.003"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.012" endtime="20201112 10:15:12.030"></status>
</kw>
<msg timestamp="20201112 10:15:12.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.011" endtime="20201112 10:15:12.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.032" endtime="20201112 10:15:12.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.035" endtime="20201112 10:15:12.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.008" endtime="20201112 10:15:12.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.006" endtime="20201112 10:15:12.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.045" endtime="20201112 10:15:12.331"></status>
</kw>
<msg timestamp="20201112 10:15:12.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020375028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.044" endtime="20201112 10:15:12.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020375028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.335" endtime="20201112 10:15:12.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.344" endtime="20201112 10:15:12.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.041" endtime="20201112 10:15:12.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.039" endtime="20201112 10:15:12.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.351" level="INFO">${RESULT} = [{'time': 0.020375028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.686100000000058e-05, 'source_diff': 8.686100000000058e-05}, {'time': 0.020473042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.347" endtime="20201112 10:15:12.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.364" level="INFO">${ACCURACY} = {'source_diff': [8.686100000000058e-05, 8.661100000000033e-05, 8.693099999999843e-05, 8.713899999999997e-05, 8.641599999999888e-05, 8.734699999999804e-05, 8.677699999999969e-05, 8.713899999999997e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:12.352" endtime="20201112 10:15:12.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.369" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.368" endtime="20201112 10:15:12.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.372" level="INFO">VALUE: [8.686100000000058e-05, 8.661100000000033e-05, 8.693099999999843e-05, 8.713899999999997e-05, 8.641599999999888e-05, 8.734699999999804e-05, 8.677699999999969e-05, 8.713899999999997e-05, 8.655499999999858e-05, 8.72920000000027e-05, 8.645800000000106e-05, 8.705599999999855e-05, 8.652799999999891e-05, 8.69730000000006e-05, 8.672300000000036e-05, 8.68189999999984e-05, 8.64860000000002e-05, 8.652699999999944e-05, 8.705499999999908e-05, 8.701399999999984e-05, 8.66669999999986e-05, 8.707000000000159e-05, 8.704199999999898e-05, 8.672200000000088e-05, 8.71669999999991e-05, 8.644500000000097e-05, 8.722299999999739e-05, 8.647299999999664e-05, 8.719399999999877e-05, 8.676399999999959e-05, 8.645799999999759e-05, 8.743099999999893e-05, 8.734699999999804e-05, 8.694399999999852e-05, 8.651399999999934e-05, 8.722199999999791e-05, 8.695900000000104e-05, 8.691699999999886e-05, 8.690199999999981e-05, 8.704099999999951e-05, 8.708300000000169e-05, 8.661100000000033e-05, 8.73189999999989e-05, 8.706900000000212e-05, 8.744399999999902e-05, 8.73470000000015e-05, 8.695900000000104e-05, 8.651399999999934e-05, 8.690299999999929e-05, 8.698700000000018e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.371" endtime="20201112 10:15:12.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.365" endtime="20201112 10:15:12.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.377" endtime="20201112 10:15:12.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.381" endtime="20201112 10:15:12.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.379" endtime="20201112 10:15:12.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.375" endtime="20201112 10:15:12.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.004" endtime="20201112 10:15:12.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.004" endtime="20201112 10:15:12.402"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.411" endtime="20201112 10:15:12.430"></status>
</kw>
<msg timestamp="20201112 10:15:12.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.409" endtime="20201112 10:15:12.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.431" endtime="20201112 10:15:12.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.434" endtime="20201112 10:15:12.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.407" endtime="20201112 10:15:12.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.404" endtime="20201112 10:15:12.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.445" endtime="20201112 10:15:12.731"></status>
</kw>
<msg timestamp="20201112 10:15:12.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.443" endtime="20201112 10:15:12.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.735" endtime="20201112 10:15:12.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.743" endtime="20201112 10:15:12.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.440" endtime="20201112 10:15:12.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.438" endtime="20201112 10:15:12.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.750" level="INFO">${RESULT} = [{'time': 0.020501639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.834699999999904e-05, 'source_diff': 8.834699999999904e-05}, {'time': 0.020599583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.747" endtime="20201112 10:15:12.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.765" level="INFO">${ACCURACY} = {'source_diff': [8.834699999999904e-05, 8.822200000000238e-05, 8.750000000000077e-05, 8.81670000000001e-05, 8.740299999999979e-05, 8.795799999999909e-05, 8.743099999999893e-05, 8.81250000000014e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:12.751" endtime="20201112 10:15:12.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.770" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.769" endtime="20201112 10:15:12.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.773" level="INFO">VALUE: [8.834699999999904e-05, 8.822200000000238e-05, 8.750000000000077e-05, 8.81670000000001e-05, 8.740299999999979e-05, 8.795799999999909e-05, 8.743099999999893e-05, 8.81250000000014e-05, 8.827800000000066e-05, 8.798599999999823e-05, 8.790300000000029e-05, 8.742999999999945e-05, 8.81389999999975e-05, 8.820799999999934e-05, 8.827700000000119e-05, 8.741599999999988e-05, 8.800000000000127e-05, 8.841700000000036e-05, 8.832000000000284e-05, 8.756999999999862e-05, 8.777800000000016e-05, 8.841600000000088e-05, 8.76250000000009e-05, 8.792999999999995e-05, 8.81800000000002e-05, 8.805599999999955e-05, 8.806899999999965e-05, 8.745800000000206e-05, 8.809700000000226e-05, 8.755600000000252e-05, 8.825000000000152e-05, 8.820899999999882e-05, 8.808299999999922e-05, 8.776400000000059e-05, 8.804199999999998e-05, 8.786099999999811e-05, 8.811100000000183e-05, 8.784700000000201e-05, 8.797199999999866e-05, 8.770799999999884e-05, 8.802800000000041e-05, 8.772200000000188e-05, 8.787499999999768e-05, 8.791699999999986e-05, 8.819499999999925e-05, 8.747299999999764e-05, 8.837500000000165e-05, 8.836099999999861e-05, 8.812499999999793e-05, 8.751400000000034e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.771" endtime="20201112 10:15:12.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.766" endtime="20201112 10:15:12.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.777" endtime="20201112 10:15:12.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.780" endtime="20201112 10:15:12.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.779" endtime="20201112 10:15:12.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.775" endtime="20201112 10:15:12.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.403" endtime="20201112 10:15:12.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.402" endtime="20201112 10:15:12.801"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.810" endtime="20201112 10:15:12.829"></status>
</kw>
<msg timestamp="20201112 10:15:12.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.809" endtime="20201112 10:15:12.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.831" endtime="20201112 10:15:12.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.833" endtime="20201112 10:15:12.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.806" endtime="20201112 10:15:12.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.804" endtime="20201112 10:15:12.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.844" endtime="20201112 10:15:13.130"></status>
</kw>
<msg timestamp="20201112 10:15:13.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.842" endtime="20201112 10:15:13.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.134" endtime="20201112 10:15:13.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.143" endtime="20201112 10:15:13.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.840" endtime="20201112 10:15:13.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.838" endtime="20201112 10:15:13.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.150" level="INFO">${RESULT} = [{'time': 0.020262903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.852799999999744e-05, 'source_diff': 8.852799999999744e-05}, {'time': 0.020363931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:13.146" endtime="20201112 10:15:13.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.164" level="INFO">${ACCURACY} = {'source_diff': [8.852799999999744e-05, 8.861199999999833e-05, 8.905600000000055e-05, 8.86800000000007e-05, 8.918100000000068e-05, 8.91670000000011e-05, 8.893000000000095e-05, 8.912499999999893e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:13.151" endtime="20201112 10:15:13.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.168" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.167" endtime="20201112 10:15:13.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.171" level="INFO">VALUE: [8.852799999999744e-05, 8.861199999999833e-05, 8.905600000000055e-05, 8.86800000000007e-05, 8.918100000000068e-05, 8.91670000000011e-05, 8.893000000000095e-05, 8.912499999999893e-05, 8.883299999999997e-05, 8.855600000000005e-05, 8.88060000000003e-05, 8.855600000000005e-05, 8.922199999999991e-05, 8.922299999999939e-05, 8.879100000000126e-05, 8.900000000000227e-05, 8.866600000000113e-05, 8.926399999999862e-05, 8.911099999999936e-05, 8.912499999999893e-05, 8.88190000000004e-05, 8.859699999999929e-05, 8.862499999999843e-05, 8.881999999999987e-05, 8.86670000000006e-05, 8.873599999999898e-05, 8.937499999999918e-05, 8.880500000000083e-05, 8.855499999999711e-05, 8.86250000000019e-05, 8.898599999999923e-05, 8.861100000000233e-05, 8.872199999999941e-05, 8.843099999999993e-05, 8.874999999999855e-05, 8.920899999999982e-05, 8.938900000000222e-05, 8.920899999999982e-05, 8.902699999999847e-05, 8.850000000000177e-05, 8.877699999999822e-05, 8.934700000000004e-05, 8.88060000000003e-05, 8.88060000000003e-05, 8.91389999999985e-05, 8.908399999999969e-05, 8.883399999999944e-05, 8.886099999999911e-05, 8.898599999999923e-05, 8.876299999999865e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.169" endtime="20201112 10:15:13.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.164" endtime="20201112 10:15:13.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.175" endtime="20201112 10:15:13.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.178" endtime="20201112 10:15:13.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.177" endtime="20201112 10:15:13.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.173" endtime="20201112 10:15:13.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.802" endtime="20201112 10:15:13.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.802" endtime="20201112 10:15:13.199"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.208" endtime="20201112 10:15:13.227"></status>
</kw>
<msg timestamp="20201112 10:15:13.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.207" endtime="20201112 10:15:13.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.228" endtime="20201112 10:15:13.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.231" endtime="20201112 10:15:13.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.204" endtime="20201112 10:15:13.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.202" endtime="20201112 10:15:13.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.246" endtime="20201112 10:15:13.532"></status>
</kw>
<msg timestamp="20201112 10:15:13.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.244" endtime="20201112 10:15:13.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.537" endtime="20201112 10:15:13.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.545" endtime="20201112 10:15:13.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.241" endtime="20201112 10:15:13.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.240" endtime="20201112 10:15:13.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.552" level="INFO">${RESULT} = [{'time': 0.020383278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.963900000000247e-05, 'source_diff': 8.963900000000247e-05}, {'time': 0.020485306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:13.549" endtime="20201112 10:15:13.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.566" level="INFO">${ACCURACY} = {'source_diff': [8.963900000000247e-05, 8.986199999999958e-05, 9.033399999999747e-05, 8.977699999999922e-05, 9.020800000000134e-05, 9.01519999999996e-05, 9.023599999999701e-05, 9.034800000000051e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:13.553" endtime="20201112 10:15:13.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.571" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.570" endtime="20201112 10:15:13.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.573" level="INFO">VALUE: [8.963900000000247e-05, 8.986199999999958e-05, 9.033399999999747e-05, 8.977699999999922e-05, 9.020800000000134e-05, 9.01519999999996e-05, 9.023599999999701e-05, 9.034800000000051e-05, 8.958300000000072e-05, 9.043099999999846e-05, 8.979199999999826e-05, 9.007000000000112e-05, 9.020900000000082e-05, 8.959799999999976e-05, 9.002699999999947e-05, 8.945799999999712e-05, 8.991599999999891e-05, 9.011100000000036e-05, 9.033300000000147e-05, 8.951400000000234e-05, 9.027800000000266e-05, 8.943100000000093e-05, 8.979199999999826e-05, 8.977799999999869e-05, 9.005499999999861e-05, 8.984700000000054e-05, 8.954099999999854e-05, 9.020800000000134e-05, 9.027799999999919e-05, 8.956900000000115e-05, 8.969400000000127e-05, 8.981899999999793e-05, 8.951399999999887e-05, 9.002800000000241e-05, 8.98060000000013e-05, 8.984800000000001e-05, 8.98190000000014e-05, 8.948599999999973e-05, 8.970800000000084e-05, 8.966600000000213e-05, 8.959700000000029e-05, 9.001399999999937e-05, 8.9638999999999e-05, 9.025000000000005e-05, 9.037500000000018e-05, 8.984700000000054e-05, 9.025000000000005e-05, 9.013800000000002e-05, 9.022199999999744e-05, 9.009700000000079e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.572" endtime="20201112 10:15:13.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.567" endtime="20201112 10:15:13.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.577" endtime="20201112 10:15:13.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.581" endtime="20201112 10:15:13.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.579" endtime="20201112 10:15:13.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.575" endtime="20201112 10:15:13.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.200" endtime="20201112 10:15:13.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.200" endtime="20201112 10:15:13.602"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.611" endtime="20201112 10:15:13.629"></status>
</kw>
<msg timestamp="20201112 10:15:13.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.609" endtime="20201112 10:15:13.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.631" endtime="20201112 10:15:13.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.633" endtime="20201112 10:15:13.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.606" endtime="20201112 10:15:13.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.604" endtime="20201112 10:15:13.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.644" endtime="20201112 10:15:13.930"></status>
</kw>
<msg timestamp="20201112 10:15:13.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.642" endtime="20201112 10:15:13.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.934" endtime="20201112 10:15:13.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.943" endtime="20201112 10:15:13.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.640" endtime="20201112 10:15:13.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.638" endtime="20201112 10:15:13.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.950" level="INFO">${RESULT} = [{'time': 0.020204028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.099999999999733e-05, 'source_diff': 9.099999999999733e-05}, {'time': 0.020305042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:13.946" endtime="20201112 10:15:13.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.963" level="INFO">${ACCURACY} = {'source_diff': [9.099999999999733e-05, 9.080599999999883e-05, 9.092999999999948e-05, 9.101400000000037e-05, 9.061100000000086e-05, 9.056900000000215e-05, 9.123600000000148e-05, 9.138900000000075e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:13.951" endtime="20201112 10:15:13.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.968" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.967" endtime="20201112 10:15:13.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.971" level="INFO">VALUE: [9.099999999999733e-05, 9.080599999999883e-05, 9.092999999999948e-05, 9.101400000000037e-05, 9.061100000000086e-05, 9.056900000000215e-05, 9.123600000000148e-05, 9.138900000000075e-05, 9.130599999999933e-05, 9.066699999999914e-05, 9.062500000000043e-05, 9.111200000000083e-05, 9.073700000000046e-05, 9.043100000000193e-05, 9.126399999999715e-05, 9.073599999999751e-05, 9.141600000000041e-05, 9.054199999999901e-05, 9.130599999999933e-05, 9.138899999999728e-05, 9.094499999999853e-05, 9.101400000000037e-05, 9.079199999999926e-05, 9.109800000000126e-05, 9.087500000000068e-05, 9.043000000000245e-05, 9.138900000000075e-05, 9.069400000000227e-05, 9.056899999999868e-05, 9.065300000000304e-05, 9.041699999999889e-05, 9.093099999999896e-05, 9.067999999999923e-05, 9.084699999999807e-05, 9.131899999999943e-05, 9.136100000000161e-05, 9.073600000000098e-05, 9.138900000000075e-05, 9.115300000000007e-05, 9.080499999999936e-05, 9.061099999999739e-05, 9.077800000000316e-05, 9.11390000000005e-05, 9.06670000000026e-05, 9.105599999999908e-05, 9.109800000000126e-05, 9.109799999999779e-05, 9.127700000000072e-05, 9.084699999999807e-05, 9.129100000000029e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.969" endtime="20201112 10:15:13.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.964" endtime="20201112 10:15:13.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.975" endtime="20201112 10:15:13.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.978" endtime="20201112 10:15:13.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.977" endtime="20201112 10:15:13.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.973" endtime="20201112 10:15:13.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.602" endtime="20201112 10:15:13.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.602" endtime="20201112 10:15:13.999"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.008" endtime="20201112 10:15:14.027"></status>
</kw>
<msg timestamp="20201112 10:15:14.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.007" endtime="20201112 10:15:14.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.029" endtime="20201112 10:15:14.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.031" endtime="20201112 10:15:14.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.004" endtime="20201112 10:15:14.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.002" endtime="20201112 10:15:14.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.042" endtime="20201112 10:15:14.326"></status>
</kw>
<msg timestamp="20201112 10:15:14.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020263375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020355653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.040" endtime="20201112 10:15:14.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020263375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020355653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.330" endtime="20201112 10:15:14.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.339" endtime="20201112 10:15:14.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.037" endtime="20201112 10:15:14.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.035" endtime="20201112 10:15:14.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.346" level="INFO">${RESULT} = [{'time': 0.020355653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.227800000000119e-05, 'source_diff': 9.227800000000119e-05}, {'time': 0.020454681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.342" endtime="20201112 10:15:14.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.361" level="INFO">${ACCURACY} = {'source_diff': [9.227800000000119e-05, 9.168099999999971e-05, 9.18879999999983e-05, 9.18329999999995e-05, 9.238900000000175e-05, 9.162500000000143e-05, 9.193000000000048e-05, 9.226400000000162e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:15:14.347" endtime="20201112 10:15:14.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.365" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.364" endtime="20201112 10:15:14.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.368" level="INFO">VALUE: [9.227800000000119e-05, 9.168099999999971e-05, 9.18879999999983e-05, 9.18329999999995e-05, 9.238900000000175e-05, 9.162500000000143e-05, 9.193000000000048e-05, 9.226400000000162e-05, 9.216700000000064e-05, 9.172299999999842e-05, 9.176400000000112e-05, 9.154200000000001e-05, 9.148599999999826e-05, 9.172299999999842e-05, 9.216600000000116e-05, 9.191700000000039e-05, 9.237500000000218e-05, 9.162499999999796e-05, 9.240300000000132e-05, 9.213899999999803e-05, 9.1639000000001e-05, 9.21390000000015e-05, 9.188899999999778e-05, 9.177800000000069e-05, 9.138899999999728e-05, 9.215199999999812e-05, 9.21659999999977e-05, 9.208299999999975e-05, 9.194400000000005e-05, 9.143099999999946e-05, 9.181899999999993e-05, 9.209699999999932e-05, 9.170899999999885e-05, 9.179200000000026e-05, 9.198600000000223e-05, 9.23199999999999e-05, 9.14719999999987e-05, 9.175000000000155e-05, 9.206900000000018e-05, 9.15000000000013e-05, 9.193099999999996e-05, 9.226400000000162e-05, 9.204200000000051e-05, 9.2333e-05, 9.202800000000094e-05, 9.184699999999907e-05, 9.18329999999995e-05, 9.229099999999782e-05, 9.241599999999794e-05, 9.148600000000173e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.367" endtime="20201112 10:15:14.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.362" endtime="20201112 10:15:14.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.372" endtime="20201112 10:15:14.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.375" endtime="20201112 10:15:14.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.374" endtime="20201112 10:15:14.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.370" endtime="20201112 10:15:14.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.000" endtime="20201112 10:15:14.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.000" endtime="20201112 10:15:14.397"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.406" endtime="20201112 10:15:14.427"></status>
</kw>
<msg timestamp="20201112 10:15:14.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.405" endtime="20201112 10:15:14.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.428" endtime="20201112 10:15:14.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.431" endtime="20201112 10:15:14.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.402" endtime="20201112 10:15:14.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.399" endtime="20201112 10:15:14.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.441" endtime="20201112 10:15:14.728"></status>
</kw>
<msg timestamp="20201112 10:15:14.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021604986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.440" endtime="20201112 10:15:14.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021604986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.732" endtime="20201112 10:15:14.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.741" endtime="20201112 10:15:14.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.437" endtime="20201112 10:15:14.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.435" endtime="20201112 10:15:14.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.748" level="INFO">${RESULT} = [{'time': 0.021604986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.252799999999797e-05, 'source_diff': 9.252799999999797e-05}, {'time': 0.021703972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.744" endtime="20201112 10:15:14.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.762" level="INFO">${ACCURACY} = {'source_diff': [9.252799999999797e-05, 9.274999999999908e-05, 9.312499999999946e-05, 9.257000000000015e-05, 9.305599999999761e-05, 9.326399999999915e-05, 9.24719999999997e-05, 9.283399999999997e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:14.749" endtime="20201112 10:15:14.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.766" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.765" endtime="20201112 10:15:14.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.769" level="INFO">VALUE: [9.252799999999797e-05, 9.274999999999908e-05, 9.312499999999946e-05, 9.257000000000015e-05, 9.305599999999761e-05, 9.326399999999915e-05, 9.24719999999997e-05, 9.283399999999997e-05, 9.283399999999997e-05, 9.280600000000083e-05, 9.256900000000068e-05, 9.259699999999982e-05, 9.316600000000216e-05, 9.315300000000207e-05, 9.305499999999814e-05, 9.309699999999685e-05, 9.306900000000118e-05, 9.336100000000014e-05, 9.307000000000065e-05, 9.254200000000101e-05, 9.326399999999915e-05, 9.266699999999767e-05, 9.306900000000118e-05, 9.322199999999697e-05, 9.293000000000148e-05, 9.29590000000001e-05, 9.307000000000065e-05, 9.308299999999728e-05, 9.243100000000046e-05, 9.330599999999786e-05, 9.309700000000032e-05, 9.334700000000057e-05, 9.305500000000161e-05, 9.258300000000025e-05, 9.336100000000014e-05, 9.28469999999966e-05, 9.273599999999951e-05, 9.312499999999946e-05, 9.261100000000286e-05, 9.248600000000273e-05, 9.304200000000151e-05, 9.272299999999942e-05, 9.287499999999921e-05, 9.272199999999994e-05, 9.280500000000136e-05, 9.326399999999915e-05, 9.290299999999835e-05, 9.31529999999986e-05, 9.330600000000133e-05, 9.336100000000014e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.768" endtime="20201112 10:15:14.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.763" endtime="20201112 10:15:14.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.773" endtime="20201112 10:15:14.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.776" endtime="20201112 10:15:14.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.775" endtime="20201112 10:15:14.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.771" endtime="20201112 10:15:14.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.397" endtime="20201112 10:15:14.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.397" endtime="20201112 10:15:14.797"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.806" endtime="20201112 10:15:14.825"></status>
</kw>
<msg timestamp="20201112 10:15:14.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.805" endtime="20201112 10:15:14.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.827" endtime="20201112 10:15:14.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.829" endtime="20201112 10:15:14.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.802" endtime="20201112 10:15:14.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.800" endtime="20201112 10:15:14.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.840" endtime="20201112 10:15:15.126"></status>
</kw>
<msg timestamp="20201112 10:15:15.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.838" endtime="20201112 10:15:15.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.130" endtime="20201112 10:15:15.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.139" endtime="20201112 10:15:15.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.835" endtime="20201112 10:15:15.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.834" endtime="20201112 10:15:15.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.146" level="INFO">${RESULT} = [{'time': 0.020270833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.356899999999821e-05, 'source_diff': 9.356899999999821e-05}, {'time': 0.020372847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:15.142" endtime="20201112 10:15:15.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.160" level="INFO">${ACCURACY} = {'source_diff': [9.356899999999821e-05, 9.36529999999991e-05, 9.405599999999861e-05, 9.397199999999772e-05, 9.344500000000103e-05, 9.379199999999879e-05, 9.412500000000046e-05, 9.379199999999879e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:15.147" endtime="20201112 10:15:15.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.164" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.163" endtime="20201112 10:15:15.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.167" level="INFO">VALUE: [9.356899999999821e-05, 9.36529999999991e-05, 9.405599999999861e-05, 9.397199999999772e-05, 9.344500000000103e-05, 9.379199999999879e-05, 9.412500000000046e-05, 9.379199999999879e-05, 9.39720000000012e-05, 9.437499999999724e-05, 9.39720000000012e-05, 9.420800000000187e-05, 9.388899999999978e-05, 9.357000000000115e-05, 9.356999999999768e-05, 9.354199999999854e-05, 9.39859999999973e-05, 9.438900000000028e-05, 9.426400000000015e-05, 9.427700000000025e-05, 9.349999999999983e-05, 9.35139999999994e-05, 9.438899999999681e-05, 9.41529999999996e-05, 9.406899999999871e-05, 9.412500000000046e-05, 9.413900000000003e-05, 9.440299999999985e-05, 9.354199999999854e-05, 9.425000000000058e-05, 9.438900000000028e-05, 9.429099999999982e-05, 9.362499999999996e-05, 9.392999999999901e-05, 9.366699999999867e-05, 9.404199999999904e-05, 9.39720000000012e-05, 9.347199999999722e-05, 9.348600000000026e-05, 9.412500000000046e-05, 9.394400000000205e-05, 9.377699999999975e-05, 9.384700000000107e-05, 9.370800000000137e-05, 9.377800000000269e-05, 9.406899999999871e-05, 9.406900000000218e-05, 9.390299999999935e-05, 9.372300000000042e-05, 9.434700000000157e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.165" endtime="20201112 10:15:15.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.161" endtime="20201112 10:15:15.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.171" endtime="20201112 10:15:15.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.174" endtime="20201112 10:15:15.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.173" endtime="20201112 10:15:15.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.169" endtime="20201112 10:15:15.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.798" endtime="20201112 10:15:15.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.798" endtime="20201112 10:15:15.195"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.204" endtime="20201112 10:15:15.225"></status>
</kw>
<msg timestamp="20201112 10:15:15.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.203" endtime="20201112 10:15:15.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.227" endtime="20201112 10:15:15.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.229" endtime="20201112 10:15:15.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.200" endtime="20201112 10:15:15.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.198" endtime="20201112 10:15:15.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.240" endtime="20201112 10:15:15.526"></status>
</kw>
<msg timestamp="20201112 10:15:15.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021132097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021227306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.238" endtime="20201112 10:15:15.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021132097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021227306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.530" endtime="20201112 10:15:15.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.539" endtime="20201112 10:15:15.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.235" endtime="20201112 10:15:15.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.234" endtime="20201112 10:15:15.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.546" level="INFO">${RESULT} = [{'time': 0.021227306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.520900000000235e-05, 'source_diff': 9.520900000000235e-05}, {'time': 0.021331306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:15.542" endtime="20201112 10:15:15.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.560" level="INFO">${ACCURACY} = {'source_diff': [9.520900000000235e-05, 9.470900000000185e-05, 9.538900000000128e-05, 9.509699999999885e-05, 9.530500000000039e-05, 9.481900000000293e-05, 9.462500000000096e-05, 9.53469999999991e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:15.547" endtime="20201112 10:15:15.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.564" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.563" endtime="20201112 10:15:15.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.567" level="INFO">VALUE: [9.520900000000235e-05, 9.470900000000185e-05, 9.538900000000128e-05, 9.509699999999885e-05, 9.530500000000039e-05, 9.481900000000293e-05, 9.462500000000096e-05, 9.53469999999991e-05, 9.49859999999983e-05, 9.491699999999992e-05, 9.481999999999893e-05, 9.472199999999847e-05, 9.47079999999989e-05, 9.491600000000044e-05, 9.451399999999693e-05, 9.463900000000053e-05, 9.476400000000065e-05, 9.536099999999867e-05, 9.475000000000108e-05, 9.523600000000201e-05, 9.480599999999936e-05, 9.488900000000078e-05, 9.487500000000121e-05, 9.497199999999872e-05, 9.445799999999865e-05, 9.529100000000082e-05, 9.495799999999915e-05, 9.526400000000115e-05, 9.537500000000171e-05, 9.472199999999847e-05, 9.48469999999986e-05, 9.534800000000204e-05, 9.49729999999982e-05, 9.486200000000111e-05, 9.506899999999971e-05, 9.51530000000006e-05, 9.448600000000126e-05, 9.469399999999933e-05, 9.481900000000293e-05, 9.484700000000207e-05, 9.48339999999985e-05, 9.443099999999899e-05, 9.48469999999986e-05, 9.523599999999854e-05, 9.499999999999786e-05, 9.493000000000001e-05, 9.46660000000002e-05, 9.448600000000126e-05, 9.526400000000115e-05, 9.509699999999885e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.565" endtime="20201112 10:15:15.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.561" endtime="20201112 10:15:15.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.571" endtime="20201112 10:15:15.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.574" endtime="20201112 10:15:15.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.573" endtime="20201112 10:15:15.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.569" endtime="20201112 10:15:15.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.196" endtime="20201112 10:15:15.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.196" endtime="20201112 10:15:15.595"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.604" endtime="20201112 10:15:15.623"></status>
</kw>
<msg timestamp="20201112 10:15:15.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.603" endtime="20201112 10:15:15.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.625" endtime="20201112 10:15:15.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.627" endtime="20201112 10:15:15.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.600" endtime="20201112 10:15:15.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.598" endtime="20201112 10:15:15.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.638" endtime="20201112 10:15:15.924"></status>
</kw>
<msg timestamp="20201112 10:15:15.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.636" endtime="20201112 10:15:15.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.929" endtime="20201112 10:15:15.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.937" endtime="20201112 10:15:15.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.633" endtime="20201112 10:15:15.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.632" endtime="20201112 10:15:15.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.944" level="INFO">${RESULT} = [{'time': 0.020389833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.631900000000096e-05, 'source_diff': 9.631900000000096e-05}, {'time': 0.020494875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:15.940" endtime="20201112 10:15:15.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.959" level="INFO">${ACCURACY} = {'source_diff': [9.631900000000096e-05, 9.629199999999782e-05, 9.602800000000147e-05, 9.562499999999849e-05, 9.612499999999899e-05, 9.644500000000056e-05, 9.591700000000092e-05, 9.569499999999981e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:15.945" endtime="20201112 10:15:15.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.964" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.963" endtime="20201112 10:15:15.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.966" level="INFO">VALUE: [9.631900000000096e-05, 9.629199999999782e-05, 9.602800000000147e-05, 9.562499999999849e-05, 9.612499999999899e-05, 9.644500000000056e-05, 9.591700000000092e-05, 9.569499999999981e-05, 9.574999999999861e-05, 9.611099999999942e-05, 9.602800000000147e-05, 9.595899999999963e-05, 9.609699999999985e-05, 9.634799999999957e-05, 9.57079999999999e-05, 9.6334e-05, 9.566700000000067e-05, 9.559800000000229e-05, 9.633300000000053e-05, 9.58469999999996e-05, 9.565299999999763e-05, 9.550000000000183e-05, 9.57079999999999e-05, 9.633300000000053e-05, 9.563899999999806e-05, 9.629199999999782e-05, 9.555600000000011e-05, 9.563900000000153e-05, 9.593099999999702e-05, 9.586199999999864e-05, 9.579100000000132e-05, 9.586099999999917e-05, 9.637499999999924e-05, 9.58469999999996e-05, 9.591700000000092e-05, 9.569499999999981e-05, 9.60140000000019e-05, 9.587499999999874e-05, 9.543099999999999e-05, 9.602800000000147e-05, 9.637499999999924e-05, 9.583300000000003e-05, 9.61530000000016e-05, 9.554200000000054e-05, 9.58469999999996e-05, 9.61669999999977e-05, 9.627799999999825e-05, 9.601399999999843e-05, 9.636099999999967e-05, 9.616700000000117e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.965" endtime="20201112 10:15:15.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.960" endtime="20201112 10:15:15.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.975" endtime="20201112 10:15:15.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.978" endtime="20201112 10:15:15.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.977" endtime="20201112 10:15:15.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.973" endtime="20201112 10:15:15.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.596" endtime="20201112 10:15:15.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.596" endtime="20201112 10:15:15.999"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.009" endtime="20201112 10:15:16.028"></status>
</kw>
<msg timestamp="20201112 10:15:16.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.007" endtime="20201112 10:15:16.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.030" endtime="20201112 10:15:16.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.032" endtime="20201112 10:15:16.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.004" endtime="20201112 10:15:16.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.002" endtime="20201112 10:15:16.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.043" endtime="20201112 10:15:16.329"></status>
</kw>
<msg timestamp="20201112 10:15:16.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.041" endtime="20201112 10:15:16.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.333" endtime="20201112 10:15:16.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.342" endtime="20201112 10:15:16.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.039" endtime="20201112 10:15:16.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.037" endtime="20201112 10:15:16.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.349" level="INFO">${RESULT} = [{'time': 0.020367264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736100000000067e-05, 'source_diff': 9.736100000000067e-05}, {'time': 0.020474278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:16.345" endtime="20201112 10:15:16.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.363" level="INFO">${ACCURACY} = {'source_diff': [9.736100000000067e-05, 9.698599999999682e-05, 9.672200000000047e-05, 9.649999999999936e-05, 9.687499999999974e-05, 9.69860000000003e-05, 9.65140000000024e-05, 9.729099999999935e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:15:16.350" endtime="20201112 10:15:16.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.367" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.366" endtime="20201112 10:15:16.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.370" level="INFO">VALUE: [9.736100000000067e-05, 9.698599999999682e-05, 9.672200000000047e-05, 9.649999999999936e-05, 9.687499999999974e-05, 9.69860000000003e-05, 9.65140000000024e-05, 9.729099999999935e-05, 9.71669999999987e-05, 9.715299999999913e-05, 9.654199999999807e-05, 9.68470000000006e-05, 9.661099999999992e-05, 9.737500000000024e-05, 9.669500000000081e-05, 9.694400000000158e-05, 9.673600000000004e-05, 9.715299999999913e-05, 9.719400000000183e-05, 9.66669999999982e-05, 9.64859999999998e-05, 9.672200000000047e-05, 9.661099999999992e-05, 9.708399999999728e-05, 9.650000000000283e-05, 9.699999999999986e-05, 9.64859999999998e-05, 9.700000000000333e-05, 9.715299999999913e-05, 9.693000000000201e-05, 9.680600000000136e-05, 9.690300000000235e-05, 9.712499999999999e-05, 9.723700000000002e-05, 9.669500000000081e-05, 9.657000000000068e-05, 9.672200000000047e-05, 9.740299999999938e-05, 9.69860000000003e-05, 9.719399999999837e-05, 9.715299999999913e-05, 9.727800000000272e-05, 9.723599999999707e-05, 9.677799999999875e-05, 9.731999999999796e-05, 9.687499999999974e-05, 9.706900000000171e-05, 9.679099999999885e-05, 9.741599999999948e-05, 9.655499999999817e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.369" endtime="20201112 10:15:16.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.364" endtime="20201112 10:15:16.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.374" endtime="20201112 10:15:16.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.377" endtime="20201112 10:15:16.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.376" endtime="20201112 10:15:16.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.372" endtime="20201112 10:15:16.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.001" endtime="20201112 10:15:16.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.000" endtime="20201112 10:15:16.398"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.407" endtime="20201112 10:15:16.426"></status>
</kw>
<msg timestamp="20201112 10:15:16.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.406" endtime="20201112 10:15:16.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.428" endtime="20201112 10:15:16.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.431" endtime="20201112 10:15:16.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.403" endtime="20201112 10:15:16.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.401" endtime="20201112 10:15:16.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.442" endtime="20201112 10:15:16.729"></status>
</kw>
<msg timestamp="20201112 10:15:16.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020222403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.440" endtime="20201112 10:15:16.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020222403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.733" endtime="20201112 10:15:16.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.742" endtime="20201112 10:15:16.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.437" endtime="20201112 10:15:16.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.435" endtime="20201112 10:15:16.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.749" level="INFO">${RESULT} = [{'time': 0.020320069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.766599999999973e-05, 'source_diff': 9.766599999999973e-05}, {'time': 0.020430125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:16.745" endtime="20201112 10:15:16.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.763" level="INFO">${ACCURACY} = {'source_diff': [9.766599999999973e-05, 9.797200000000172e-05, 9.805599999999914e-05, 9.765299999999963e-05, 9.830499999999992e-05, 9.758299999999831e-05, 9.759700000000135e-05, 9.745800000000165e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:16.750" endtime="20201112 10:15:16.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.768" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.767" endtime="20201112 10:15:16.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.770" level="INFO">VALUE: [9.766599999999973e-05, 9.797200000000172e-05, 9.805599999999914e-05, 9.765299999999963e-05, 9.830499999999992e-05, 9.758299999999831e-05, 9.759700000000135e-05, 9.745800000000165e-05, 9.777799999999975e-05, 9.788900000000031e-05, 9.83470000000021e-05, 9.808299999999881e-05, 9.756899999999874e-05, 9.783300000000203e-05, 9.743000000000251e-05, 9.768099999999877e-05, 9.769399999999887e-05, 9.768100000000224e-05, 9.791699999999945e-05, 9.822300000000145e-05, 9.756900000000221e-05, 9.797200000000172e-05, 9.837500000000124e-05, 9.813900000000056e-05, 9.8028e-05, 9.820799999999894e-05, 9.762500000000049e-05, 9.743099999999852e-05, 9.743100000000199e-05, 9.823600000000154e-05, 9.837499999999777e-05, 9.783399999999803e-05, 9.755499999999917e-05, 9.790299999999988e-05, 9.83609999999982e-05, 9.813900000000056e-05, 9.827800000000025e-05, 9.8028e-05, 9.815300000000013e-05, 9.791699999999945e-05, 9.801400000000043e-05, 9.756900000000221e-05, 9.758299999999831e-05, 9.765200000000016e-05, 9.78470000000016e-05, 9.813900000000056e-05, 9.754200000000254e-05, 9.829199999999982e-05, 9.7721999999998e-05, 9.83470000000021e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.769" endtime="20201112 10:15:16.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.764" endtime="20201112 10:15:16.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.774" endtime="20201112 10:15:16.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.778" endtime="20201112 10:15:16.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.776" endtime="20201112 10:15:16.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.772" endtime="20201112 10:15:16.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.399" endtime="20201112 10:15:16.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.399" endtime="20201112 10:15:16.799"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.808" endtime="20201112 10:15:16.828"></status>
</kw>
<msg timestamp="20201112 10:15:16.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.806" endtime="20201112 10:15:16.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.829" endtime="20201112 10:15:16.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.832" endtime="20201112 10:15:16.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.804" endtime="20201112 10:15:16.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.801" endtime="20201112 10:15:16.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.842" endtime="20201112 10:15:17.129"></status>
</kw>
<msg timestamp="20201112 10:15:17.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.841" endtime="20201112 10:15:17.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.134" endtime="20201112 10:15:17.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.142" endtime="20201112 10:15:17.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.838" endtime="20201112 10:15:17.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.836" endtime="20201112 10:15:17.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.149" level="INFO">${RESULT} = [{'time': 0.020351833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.893000000000055e-05, 'source_diff': 9.893000000000055e-05}, {'time': 0.020458847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:17.146" endtime="20201112 10:15:17.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.163" level="INFO">${ACCURACY} = {'source_diff': [9.893000000000055e-05, 9.844399999999962e-05, 9.900000000000186e-05, 9.891700000000045e-05, 9.861100000000192e-05, 9.937499999999877e-05, 9.927799999999778e-05, 9.863899999999759e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:17.150" endtime="20201112 10:15:17.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.168" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.167" endtime="20201112 10:15:17.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.170" level="INFO">VALUE: [9.893000000000055e-05, 9.844399999999962e-05, 9.900000000000186e-05, 9.891700000000045e-05, 9.861100000000192e-05, 9.937499999999877e-05, 9.927799999999778e-05, 9.863899999999759e-05, 9.908399999999928e-05, 9.9415999999998e-05, 9.905500000000067e-05, 9.886100000000217e-05, 9.933300000000006e-05, 9.854200000000007e-05, 9.884699999999913e-05, 9.863900000000106e-05, 9.93609999999992e-05, 9.905600000000014e-05, 9.913900000000156e-05, 9.943000000000105e-05, 9.883299999999956e-05, 9.929100000000135e-05, 9.880500000000042e-05, 9.901400000000143e-05, 9.93609999999992e-05, 9.88470000000026e-05, 9.93609999999992e-05, 9.890300000000088e-05, 9.86670000000002e-05, 9.929200000000082e-05, 9.887499999999827e-05, 9.941600000000148e-05, 9.923599999999907e-05, 9.89999999999984e-05, 9.859700000000235e-05, 9.937500000000224e-05, 9.88059999999999e-05, 9.93060000000004e-05, 9.845899999999866e-05, 9.943000000000105e-05, 9.879200000000032e-05, 9.843000000000005e-05, 9.897199999999926e-05, 9.893100000000002e-05, 9.906999999999971e-05, 9.868099999999977e-05, 9.944399999999715e-05, 9.881999999999946e-05, 9.93479999999991e-05, 9.88479999999986e-05]</msg>
<status status="PASS" starttime="20201112 10:15:17.169" endtime="20201112 10:15:17.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.164" endtime="20201112 10:15:17.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.174" endtime="20201112 10:15:17.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.178" endtime="20201112 10:15:17.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.176" endtime="20201112 10:15:17.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.172" endtime="20201112 10:15:17.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.800" endtime="20201112 10:15:17.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.799" endtime="20201112 10:15:17.199"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.208" endtime="20201112 10:15:17.228"></status>
</kw>
<msg timestamp="20201112 10:15:17.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.206" endtime="20201112 10:15:17.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.230" endtime="20201112 10:15:17.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.232" endtime="20201112 10:15:17.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.204" endtime="20201112 10:15:17.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.201" endtime="20201112 10:15:17.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.243" endtime="20201112 10:15:17.529"></status>
</kw>
<msg timestamp="20201112 10:15:17.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020393639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.241" endtime="20201112 10:15:17.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020393639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.533" endtime="20201112 10:15:17.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.542" endtime="20201112 10:15:17.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.239" endtime="20201112 10:15:17.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.237" endtime="20201112 10:15:17.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.549" level="INFO">${RESULT} = [{'time': 0.020393639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001001670000000017, 'source_diff': 0.0001001670000000017}, {'time': 0.020504681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:17.545" endtime="20201112 10:15:17.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.564" level="INFO">${ACCURACY} = {'source_diff': [0.0001001670000000017, 9.99999999999994e-05, 9.954200000000107e-05, 0.0001003610000000002, 9.979099999999838e-05, 0.00010026399999999921, 9.993000000000155e-05, 9.958300000000031e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:17.550" endtime="20201112 10:15:17.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.568" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.567" endtime="20201112 10:15:17.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.571" level="INFO">VALUE: [0.0001001670000000017, 9.99999999999994e-05, 9.954200000000107e-05, 0.0001003610000000002, 9.979099999999838e-05, 0.00010026399999999921, 9.993000000000155e-05, 9.958300000000031e-05, 0.00010002799999999853, 0.00010041700000000195, 0.00010020800000000094, 0.00010012499999999952, 9.998599999999983e-05, 0.00010032000000000096, 9.958300000000031e-05, 0.00010040199999999944, 0.00010034700000000063, 0.0001000549999999982, 0.00010030499999999845, 9.970800000000044e-05, 9.977800000000175e-05, 9.983400000000003e-05, 9.988899999999884e-05, 9.948599999999932e-05, 0.0001003610000000002, 0.00010013799999999962, 0.00010023600000000008, 9.95549999999977e-05, 9.9415999999998e-05, 0.0001003610000000002, 0.00010001400000000243, 9.983400000000003e-05, 9.977799999999828e-05, 0.00010024999999999964, 9.965200000000216e-05, 0.00010002699999999906, 0.0001000549999999982, 9.952700000000203e-05, 0.00010016600000000223, 0.00010013899999999909, 9.962500000000249e-05, 0.00010037499999999977, 9.991700000000145e-05, 0.00010020899999999694, 0.00010009799999999985, 0.00010005500000000167, 9.948599999999932e-05, 9.938900000000181e-05, 0.00010012499999999952, 9.968100000000077e-05]</msg>
<status status="PASS" starttime="20201112 10:15:17.569" endtime="20201112 10:15:17.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.564" endtime="20201112 10:15:17.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.575" endtime="20201112 10:15:17.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.578" endtime="20201112 10:15:17.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.577" endtime="20201112 10:15:17.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.573" endtime="20201112 10:15:17.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.200" endtime="20201112 10:15:17.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.199" endtime="20201112 10:15:17.599"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.608" endtime="20201112 10:15:17.629"></status>
</kw>
<msg timestamp="20201112 10:15:17.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.607" endtime="20201112 10:15:17.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.631" endtime="20201112 10:15:17.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.634" endtime="20201112 10:15:17.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.604" endtime="20201112 10:15:17.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.602" endtime="20201112 10:15:17.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.644" endtime="20201112 10:15:17.930"></status>
</kw>
<msg timestamp="20201112 10:15:17.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021197764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021298264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.642" endtime="20201112 10:15:17.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021197764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021298264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.935" endtime="20201112 10:15:17.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.943" endtime="20201112 10:15:17.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.640" endtime="20201112 10:15:17.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.638" endtime="20201112 10:15:17.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.950" level="INFO">${RESULT} = [{'time': 0.021298264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001004999999999999, 'source_diff': 0.0001004999999999999}, {'time': 0.02140525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:17.946" endtime="20201112 10:15:17.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.963" level="INFO">${ACCURACY} = {'source_diff': [0.0001004999999999999, 0.00010134700000000163, 0.000100722000000001, 0.00010058300000000131, 0.00010058400000000078, 0.00010069499999999787, 0.00010088899999999984, 0.0001012770000000...</msg>
<status status="PASS" starttime="20201112 10:15:17.951" endtime="20201112 10:15:17.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.968" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.967" endtime="20201112 10:15:17.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.971" level="INFO">VALUE: [0.0001004999999999999, 0.00010134700000000163, 0.000100722000000001, 0.00010058300000000131, 0.00010058400000000078, 0.00010069499999999787, 0.00010088899999999984, 0.00010127700000000031, 0.00010092999999999908, 0.00010126400000000021, 0.00010043000000000205, 0.00010098600000000083, 0.00010113900000000009, 0.00010048600000000033, 0.0001013610000000012, 0.00010094500000000159, 0.00010136200000000067, 0.00010108300000000181, 0.00010095799999999822, 0.00010084700000000113, 0.00010141699999999948, 0.0001010000000000004, 0.00010052799999999903, 0.00010069500000000134, 0.00010045900000000066, 0.00010112500000000052, 0.000101416, 0.00010051299999999999, 0.0001013749999999973, 0.00010136099999999773, 0.0001012220000000015, 0.00010062500000000002, 0.00010072199999999754, 0.00010115300000000313, 0.00010101399999999996, 0.00010077799999999928, 0.00010045799999999772, 0.00010083300000000156, 0.00010133299999999859, 0.00010106899999999877, 0.00010062500000000002, 0.00010063899999999959, 0.0001007359999999971, 0.00010083399999999756, 0.00010072300000000048, 0.00010076399999999971, 0.0001011939999999989, 0.00010126400000000021, 0.00010077799999999928, 0.0001004999999999999]</msg>
<status status="PASS" starttime="20201112 10:15:17.969" endtime="20201112 10:15:17.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.964" endtime="20201112 10:15:17.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.974" endtime="20201112 10:15:17.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.978" endtime="20201112 10:15:17.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.976" endtime="20201112 10:15:17.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.973" endtime="20201112 10:15:17.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.600" endtime="20201112 10:15:17.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.600" endtime="20201112 10:15:17.999"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.008" endtime="20201112 10:15:18.027"></status>
</kw>
<msg timestamp="20201112 10:15:18.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.007" endtime="20201112 10:15:18.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.029" endtime="20201112 10:15:18.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.031" endtime="20201112 10:15:18.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.004" endtime="20201112 10:15:18.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.002" endtime="20201112 10:15:18.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.042" endtime="20201112 10:15:18.328"></status>
</kw>
<msg timestamp="20201112 10:15:18.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.040" endtime="20201112 10:15:18.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.332" endtime="20201112 10:15:18.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.341" endtime="20201112 10:15:18.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.038" endtime="20201112 10:15:18.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.036" endtime="20201112 10:15:18.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.347" level="INFO">${RESULT} = [{'time': 0.020595472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010234699999999916, 'source_diff': 0.00010234699999999916}, {'time': 0.020708472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:18.344" endtime="20201112 10:15:18.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.361" level="INFO">${ACCURACY} = {'source_diff': [0.00010234699999999916, 0.00010156899999999927, 0.00010213900000000109, 0.00010199999999999793, 0.0001023199999999995, 0.00010212499999999805, 0.00010199999999999793, 0.00010159800000...</msg>
<status status="PASS" starttime="20201112 10:15:18.348" endtime="20201112 10:15:18.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.366" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.365" endtime="20201112 10:15:18.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.368" level="INFO">VALUE: [0.00010234699999999916, 0.00010156899999999927, 0.00010213900000000109, 0.00010199999999999793, 0.0001023199999999995, 0.00010212499999999805, 0.00010199999999999793, 0.00010159800000000135, 0.0001018879999999979, 0.00010199999999999793, 0.000101722000000002, 0.00010241700000000048, 0.00010163900000000059, 0.00010159699999999841, 0.00010206999999999924, 0.00010229200000000035, 0.00010165200000000069, 0.0001015549999999997, 0.00010225000000000165, 0.00010201299999999802, 0.00010194399999999965, 0.00010162500000000102, 0.00010231900000000002, 0.00010220799999999947, 0.00010176400000000071, 0.0001023749999999983, 0.00010152800000000003, 0.00010190200000000094, 0.00010166600000000026, 0.00010234699999999916, 0.00010229099999999741, 0.00010165300000000016, 0.00010220799999999947, 0.00010227800000000078, 0.00010227800000000078, 0.00010143099999999905, 0.000101819999999999, 0.00010172199999999854, 0.00010229100000000088, 0.0001019160000000005, 0.00010165300000000016, 0.0001022359999999986, 0.00010144399999999915, 0.00010170799999999897, 0.00010227800000000078, 0.00010226400000000122, 0.0001023199999999995, 0.00010188900000000084, 0.00010145800000000219, 0.00010209700000000238]</msg>
<status status="PASS" starttime="20201112 10:15:18.367" endtime="20201112 10:15:18.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.362" endtime="20201112 10:15:18.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.372" endtime="20201112 10:15:18.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.376" endtime="20201112 10:15:18.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.374" endtime="20201112 10:15:18.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.370" endtime="20201112 10:15:18.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.000" endtime="20201112 10:15:18.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.999" endtime="20201112 10:15:18.397"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.406" endtime="20201112 10:15:18.425"></status>
</kw>
<msg timestamp="20201112 10:15:18.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.404" endtime="20201112 10:15:18.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.426" endtime="20201112 10:15:18.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.429" endtime="20201112 10:15:18.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.402" endtime="20201112 10:15:18.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.399" endtime="20201112 10:15:18.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.439" endtime="20201112 10:15:18.726"></status>
</kw>
<msg timestamp="20201112 10:15:18.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.438" endtime="20201112 10:15:18.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.730" endtime="20201112 10:15:18.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.738" endtime="20201112 10:15:18.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.435" endtime="20201112 10:15:18.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.433" endtime="20201112 10:15:18.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.745" level="INFO">${RESULT} = [{'time': 0.020523181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010288900000000184, 'source_diff': 0.00010288900000000184}, {'time': 0.020638194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:18.742" endtime="20201112 10:15:18.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.760" level="INFO">${ACCURACY} = {'source_diff': [0.00010288900000000184, 0.00010279099999999791, 0.00010325000000000265, 0.00010301299999999902, 0.00010301400000000197, 0.00010315299999999819, 0.0001025689999999968, 0.00010245799999...</msg>
<status status="PASS" starttime="20201112 10:15:18.746" endtime="20201112 10:15:18.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.767" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.765" endtime="20201112 10:15:18.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.770" level="INFO">VALUE: [0.00010288900000000184, 0.00010279099999999791, 0.00010325000000000265, 0.00010301299999999902, 0.00010301400000000197, 0.00010315299999999819, 0.0001025689999999968, 0.00010245799999999972, 0.00010320899999999994, 0.00010326399999999875, 0.00010309799999999938, 0.00010295899999999969, 0.00010302699999999859, 0.00010259699999999941, 0.00010298599999999936, 0.00010252800000000103, 0.00010334700000000016, 0.0001027359999999991, 0.00010324999999999918, 0.00010270900000000291, 0.00010244499999999962, 0.00010279200000000085, 0.00010299999999999893, 0.00010283300000000009, 0.00010272199999999954, 0.00010338899999999887, 0.00010266700000000073, 0.0001025420000000006, 0.0001030000000000024, 0.00010302799999999807, 0.00010306900000000077, 0.00010327799999999832, 0.00010301300000000249, 0.00010330499999999798, 0.00010338899999999887, 0.00010294400000000065, 0.00010306900000000077, 0.00010255600000000017, 0.00010241700000000048, 0.00010334799999999963, 0.00010272299999999901, 0.00010312500000000252, 0.00010316600000000176, 0.00010266600000000126, 0.00010249999999999843, 0.0001030689999999973, 0.00010324999999999918, 0.00010255600000000017, 0.00010325000000000265, 0.00010263899999999812]</msg>
<status status="PASS" starttime="20201112 10:15:18.768" endtime="20201112 10:15:18.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.762" endtime="20201112 10:15:18.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.774" endtime="20201112 10:15:18.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.777" endtime="20201112 10:15:18.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.776" endtime="20201112 10:15:18.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.772" endtime="20201112 10:15:18.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.398" endtime="20201112 10:15:18.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.397" endtime="20201112 10:15:18.798"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.808" endtime="20201112 10:15:18.827"></status>
</kw>
<msg timestamp="20201112 10:15:18.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.806" endtime="20201112 10:15:18.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.828" endtime="20201112 10:15:18.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.831" endtime="20201112 10:15:18.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.803" endtime="20201112 10:15:18.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.801" endtime="20201112 10:15:18.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.841" endtime="20201112 10:15:19.127"></status>
</kw>
<msg timestamp="20201112 10:15:19.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020486153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020590028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.840" endtime="20201112 10:15:19.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020486153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020590028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.131" endtime="20201112 10:15:19.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.140" endtime="20201112 10:15:19.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.837" endtime="20201112 10:15:19.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.835" endtime="20201112 10:15:19.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.146" level="INFO">${RESULT} = [{'time': 0.020590028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001038749999999998, 'source_diff': 0.0001038749999999998}, {'time': 0.020705028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:19.143" endtime="20201112 10:15:19.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.161" level="INFO">${ACCURACY} = {'source_diff': [0.0001038749999999998, 0.00010355600000000117, 0.0001041949999999979, 0.00010441699999999901, 0.00010386100000000023, 0.00010412500000000005, 0.00010347200000000029, 0.000103624999999...</msg>
<status status="PASS" starttime="20201112 10:15:19.147" endtime="20201112 10:15:19.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.166" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.165" endtime="20201112 10:15:19.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.168" level="INFO">VALUE: [0.0001038749999999998, 0.00010355600000000117, 0.0001041949999999979, 0.00010441699999999901, 0.00010386100000000023, 0.00010412500000000005, 0.00010347200000000029, 0.00010362499999999955, 0.00010434699999999769, 0.00010422200000000104, 0.00010349999999999943, 0.00010358400000000031, 0.00010411099999999701, 0.00010368099999999783, 0.0001040139999999995, 0.00010431900000000202, 0.00010344400000000115, 0.00010426399999999975, 0.00010430500000000245, 0.00010427799999999932, 0.00010379199999999839, 0.0001043750000000003, 0.00010361199999999945, 0.00010408299999999787, 0.00010377699999999934, 0.00010358300000000084, 0.00010384700000000066, 0.0001035559999999977, 0.00010407000000000124, 0.00010404099999999916, 0.00010440299999999944, 0.00010394499999999765, 0.00010363900000000259, 0.0001043750000000003, 0.00010416699999999876, 0.00010397200000000079, 0.00010359699999999694, 0.00010429199999999889, 0.00010438899999999987, 0.00010362499999999955, 0.00010365299999999869, 0.00010434800000000063, 0.0001042360000000006, 0.00010425000000000018, 0.00010415199999999972, 0.0001038749999999998, 0.000104207999999998, 0.00010390299999999894, 0.00010413899999999962, 0.00010384700000000066]</msg>
<status status="PASS" starttime="20201112 10:15:19.167" endtime="20201112 10:15:19.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.162" endtime="20201112 10:15:19.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.172" endtime="20201112 10:15:19.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.176" endtime="20201112 10:15:19.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.174" endtime="20201112 10:15:19.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.171" endtime="20201112 10:15:19.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.799" endtime="20201112 10:15:19.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.799" endtime="20201112 10:15:19.197"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.206" endtime="20201112 10:15:19.227"></status>
</kw>
<msg timestamp="20201112 10:15:19.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.204" endtime="20201112 10:15:19.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.228" endtime="20201112 10:15:19.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.231" endtime="20201112 10:15:19.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.202" endtime="20201112 10:15:19.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.199" endtime="20201112 10:15:19.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.242" endtime="20201112 10:15:19.528"></status>
</kw>
<msg timestamp="20201112 10:15:19.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021151875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021256514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.240" endtime="20201112 10:15:19.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021151875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021256514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.532" endtime="20201112 10:15:19.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.540" endtime="20201112 10:15:19.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.237" endtime="20201112 10:15:19.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.235" endtime="20201112 10:15:19.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.547" level="INFO">${RESULT} = [{'time': 0.021256514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010463900000000012, 'source_diff': 0.00010463900000000012}, {'time': 0.021374556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:19.544" endtime="20201112 10:15:19.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.561" level="INFO">${ACCURACY} = {'source_diff': [0.00010463900000000012, 0.00010498700000000083, 0.00010538900000000087, 0.00010462500000000055, 0.00010501299999999755, 0.00010462500000000055, 0.00010533300000000259, 0.0001053610000...</msg>
<status status="PASS" starttime="20201112 10:15:19.548" endtime="20201112 10:15:19.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.566" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.565" endtime="20201112 10:15:19.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.568" level="INFO">VALUE: [0.00010463900000000012, 0.00010498700000000083, 0.00010538900000000087, 0.00010462500000000055, 0.00010501299999999755, 0.00010462500000000055, 0.00010533300000000259, 0.00010536100000000173, 0.00010512499999999758, 0.00010466699999999926, 0.00010457000000000174, 0.00010529199999999989, 0.00010527800000000032, 0.00010507000000000224, 0.00010527700000000084, 0.00010450000000000043, 0.00010458299999999837, 0.00010505499999999973, 0.00010486099999999776, 0.00010502800000000007, 0.0001053750000000013, 0.00010497300000000126, 0.00010490200000000047, 0.0001047079999999985, 0.00010448600000000086, 0.00010500000000000093, 0.00010515300000000019, 0.0001052499999999977, 0.00010445799999999825, 0.00010511099999999801, 0.00010493099999999908, 0.00010500000000000093, 0.00010466699999999926, 0.00010502700000000059, 0.00010469399999999893, 0.00010484700000000166, 0.0001053750000000013, 0.00010476400000000025, 0.00010472199999999807, 0.00010462500000000055, 0.00010457000000000174, 0.00010461100000000098, 0.00010466599999999979, 0.00010526400000000075, 0.00010497200000000179, 0.00010534699999999869, 0.00010527800000000032, 0.00010461099999999751, 0.00010462500000000055, 0.0001050559999999992]</msg>
<status status="PASS" starttime="20201112 10:15:19.567" endtime="20201112 10:15:19.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.562" endtime="20201112 10:15:19.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.572" endtime="20201112 10:15:19.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.576" endtime="20201112 10:15:19.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.574" endtime="20201112 10:15:19.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.570" endtime="20201112 10:15:19.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.198" endtime="20201112 10:15:19.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.197" endtime="20201112 10:15:19.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.929" endtime="20201112 10:15:19.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.601" endtime="20201112 10:15:19.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.600" endtime="20201112 10:15:19.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.598" endtime="20201112 10:15:19.622"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:36.818" endtime="20201112 10:15:19.622" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.630" endtime="20201112 10:15:19.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.629" endtime="20201112 10:15:19.650"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.665" endtime="20201112 10:15:22.694"></status>
</kw>
<msg timestamp="20201112 10:15:22.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.664" endtime="20201112 10:15:22.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.697" endtime="20201112 10:15:22.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.707" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:22.703" endtime="20201112 10:15:22.707"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:19.661" endtime="20201112 10:15:22.709"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:19.658" endtime="20201112 10:15:22.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.657" endtime="20201112 10:15:22.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:22.719" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:22.718" endtime="20201112 10:15:22.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.713" endtime="20201112 10:15:22.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.656" endtime="20201112 10:15:22.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.654" endtime="20201112 10:15:22.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.723" endtime="20201112 10:15:22.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.653" endtime="20201112 10:15:22.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.651" endtime="20201112 10:15:22.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.627" endtime="20201112 10:15:22.729"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.753" endtime="20201112 10:15:22.773"></status>
</kw>
<msg timestamp="20201112 10:15:22.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.750" endtime="20201112 10:15:22.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.776" endtime="20201112 10:15:22.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.781" endtime="20201112 10:15:22.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.743" endtime="20201112 10:15:22.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.738" endtime="20201112 10:15:22.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.804" endtime="20201112 10:15:23.098"></status>
</kw>
<msg timestamp="20201112 10:15:23.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.115658792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.115664403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.798" endtime="20201112 10:15:23.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.115658792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.115664403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.102" endtime="20201112 10:15:23.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.110" endtime="20201112 10:15:23.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.792" endtime="20201112 10:15:23.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.788" endtime="20201112 10:15:23.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.117" level="INFO">${RESULT} = [{'time': 3.115664403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999738908e-06, 'source_diff': 5.610999999738908e-06}, {'time': 3.115676153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:23.113" endtime="20201112 10:15:23.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.130" level="INFO">${ACCURACY} = {'source_diff': [5.610999999738908e-06, 5.041999999733093e-06, 5.6389999998351925e-06, 5.94400000020201e-06, 5.639000000279282e-06, 5.360999999926008e-06, 5.653000000105379e-06, 5.94500000028475e-06, ...</msg>
<status status="PASS" starttime="20201112 10:15:23.118" endtime="20201112 10:15:23.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.134" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.133" endtime="20201112 10:15:23.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.137" level="INFO">VALUE: [5.610999999738908e-06, 5.041999999733093e-06, 5.6389999998351925e-06, 5.94400000020201e-06, 5.639000000279282e-06, 5.360999999926008e-06, 5.653000000105379e-06, 5.94500000028475e-06, 5.638000000196541e-06, 5.639000000279282e-06, 5.666000000292826e-06, 5.874999999821995e-06, 5.040999999650353e-06, 5.653000000105379e-06, 5.943999999757921e-06, 5.971999999854205e-06, 5.041000000094442e-06, 5.6389999998351925e-06, 5.9580000000281075e-06, 4.985999999984614e-06, 5.05600000000328e-06, 5.637999999752452e-06, 5.3610000003700975e-06, 5.653000000105379e-06, 5.027000000268345e-06, 5.027999999906996e-06, 5.94400000020201e-06, 5.3469999996558215e-06, 5.596999999912811e-06, 5.6389999998351925e-06, 5.653000000105379e-06, 5.347000000099911e-06, 5.666999999931477e-06, 5.360999999926008e-06, 5.6389999998351925e-06, 5.124999999939206e-06, 5.6389999998351925e-06, 5.360999999926008e-06, 5.319000000003626e-06, 5.0420000001771825e-06, 5.333999999912464e-06, 5.30599999981618e-06, 5.6389999998351925e-06, 5.347000000099911e-06, 5.6389999998351925e-06, 4.985999999984614e-06, 5.041000000094442e-06, 5.347000000099911e-06, 5.6389999998351925e-06, 5.6389999998351925e-06]</msg>
<status status="PASS" starttime="20201112 10:15:23.135" endtime="20201112 10:15:23.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.131" endtime="20201112 10:15:23.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.140" endtime="20201112 10:15:23.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.143" endtime="20201112 10:15:23.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.142" endtime="20201112 10:15:23.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.138" endtime="20201112 10:15:23.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.735" endtime="20201112 10:15:23.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.733" endtime="20201112 10:15:23.164"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.173" endtime="20201112 10:15:23.188"></status>
</kw>
<msg timestamp="20201112 10:15:23.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.171" endtime="20201112 10:15:23.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.190" endtime="20201112 10:15:23.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.192" endtime="20201112 10:15:23.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.169" endtime="20201112 10:15:23.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.167" endtime="20201112 10:15:23.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.201" endtime="20201112 10:15:23.486"></status>
</kw>
<msg timestamp="20201112 10:15:23.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.200" endtime="20201112 10:15:23.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.490" endtime="20201112 10:15:23.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.498" endtime="20201112 10:15:23.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.197" endtime="20201112 10:15:23.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.196" endtime="20201112 10:15:23.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.504" level="INFO">${RESULT} = [{'time': 0.020034278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.834000000000701e-06, 'source_diff': 6.834000000000701e-06}, {'time': 0.020047167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:23.501" endtime="20201112 10:15:23.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.518" level="INFO">${ACCURACY} = {'source_diff': [6.834000000000701e-06, 6.834000000000701e-06, 6.235999999999742e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 5.944000000000782e-06, 6.500000000003031e-06...</msg>
<status status="PASS" starttime="20201112 10:15:23.506" endtime="20201112 10:15:23.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.522" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.521" endtime="20201112 10:15:23.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.525" level="INFO">VALUE: [6.834000000000701e-06, 6.834000000000701e-06, 6.235999999999742e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 5.944000000000782e-06, 6.500000000003031e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.458000000000852e-06, 6.540999999998798e-06, 6.833999999997231e-06, 6.2779999999984515e-06, 5.945000000000256e-06, 6.820000000001131e-06, 6.499999999999562e-06, 6.2229999999996455e-06, 6.8469999999973274e-06, 6.472000000000422e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.540999999998798e-06, 6.264000000002351e-06, 6.833000000001227e-06, 6.542000000001741e-06, 6.5279999999987015e-06, 6.249999999999312e-06, 6.542000000001741e-06, 6.250000000002781e-06, 6.5279999999987015e-06, 6.833000000001227e-06, 6.833000000001227e-06, 5.929999999997743e-06, 5.903000000001546e-06, 6.834000000000701e-06, 5.930000000001212e-06, 6.235999999999742e-06, 6.833000000001227e-06, 6.819000000001657e-06, 6.8480000000002705e-06, 6.541999999998271e-06, 6.2229999999996455e-06, 6.499999999999562e-06, 6.570000000000881e-06, 5.945000000000256e-06, 6.5279999999987015e-06, 6.194000000001032e-06, 6.806000000001561e-06, 6.555000000001837e-06]</msg>
<status status="PASS" starttime="20201112 10:15:23.523" endtime="20201112 10:15:23.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.519" endtime="20201112 10:15:23.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.528" endtime="20201112 10:15:23.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.532" endtime="20201112 10:15:23.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.530" endtime="20201112 10:15:23.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.527" endtime="20201112 10:15:23.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.165" endtime="20201112 10:15:23.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.165" endtime="20201112 10:15:23.553"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.561" endtime="20201112 10:15:23.577"></status>
</kw>
<msg timestamp="20201112 10:15:23.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.560" endtime="20201112 10:15:23.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.578" endtime="20201112 10:15:23.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.581" endtime="20201112 10:15:23.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.557" endtime="20201112 10:15:23.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.555" endtime="20201112 10:15:23.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.590" endtime="20201112 10:15:23.880"></status>
</kw>
<msg timestamp="20201112 10:15:23.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020245056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.588" endtime="20201112 10:15:23.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020245056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.884" endtime="20201112 10:15:23.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.892" endtime="20201112 10:15:23.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.586" endtime="20201112 10:15:23.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.584" endtime="20201112 10:15:23.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.899" level="INFO">${RESULT} = [{'time': 0.020245056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.020256944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:23.895" endtime="20201112 10:15:23.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.956" level="INFO">${ACCURACY} = {'source_diff': [7.4870000000004655e-06, 7.138000000000283e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.415999999999673e-06, 7.402999999999577e-06, 7.500000000000562e-06, 7.138000000000283e-06...</msg>
<status status="PASS" starttime="20201112 10:15:23.900" endtime="20201112 10:15:23.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.961" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.960" endtime="20201112 10:15:23.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.963" level="INFO">VALUE: [7.4870000000004655e-06, 7.138000000000283e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.415999999999673e-06, 7.402999999999577e-06, 7.500000000000562e-06, 7.138000000000283e-06, 7.166000000002892e-06, 7.443999999998813e-06, 7.138999999999757e-06, 7.429999999999243e-06, 7.389000000000007e-06, 7.667000000002866e-06, 7.429999999999243e-06, 7.138999999999757e-06, 7.735999999997772e-06, 7.443999999998813e-06, 7.723000000001146e-06, 7.415999999999673e-06, 7.138999999999757e-06, 7.402999999999577e-06, 7.125000000000187e-06, 7.458999999997856e-06, 7.472000000001422e-06, 7.443999999998813e-06, 7.707999999998633e-06, 7.415999999999673e-06, 7.722000000001672e-06, 7.111000000000617e-06, 7.138000000000283e-06, 7.431000000002186e-06, 6.762999999999908e-06, 7.361000000000867e-06, 7.736000000001242e-06, 7.431000000002186e-06, 7.680999999998966e-06, 7.429999999999243e-06, 7.721999999998203e-06, 7.735999999997772e-06, 7.125000000000187e-06, 7.679999999999493e-06, 7.721999999998203e-06, 7.1120000000000905e-06, 7.430999999998716e-06, 7.666999999999397e-06, 7.722000000001672e-06, 7.138999999999757e-06, 7.138000000000283e-06, 7.375000000000437e-06]</msg>
<status status="PASS" starttime="20201112 10:15:23.962" endtime="20201112 10:15:23.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.957" endtime="20201112 10:15:23.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.967" endtime="20201112 10:15:23.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.970" endtime="20201112 10:15:23.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.969" endtime="20201112 10:15:23.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.965" endtime="20201112 10:15:23.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.554" endtime="20201112 10:15:23.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.553" endtime="20201112 10:15:23.991"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.001" endtime="20201112 10:15:24.015"></status>
</kw>
<msg timestamp="20201112 10:15:24.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.999" endtime="20201112 10:15:24.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.017" endtime="20201112 10:15:24.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.019" endtime="20201112 10:15:24.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.996" endtime="20201112 10:15:24.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.994" endtime="20201112 10:15:24.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.028" endtime="20201112 10:15:24.316"></status>
</kw>
<msg timestamp="20201112 10:15:24.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.027" endtime="20201112 10:15:24.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.320" endtime="20201112 10:15:24.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.328" endtime="20201112 10:15:24.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.024" endtime="20201112 10:15:24.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.022" endtime="20201112 10:15:24.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.334" level="INFO">${RESULT} = [{'time': 0.020368944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.020380875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:24.331" endtime="20201112 10:15:24.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:24.348" level="INFO">${ACCURACY} = {'source_diff': [8.346999999998828e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.624999999998217e-06, 8.041000000000298e-06, 8.917000000000647e-06, 8.32000000000263e-06, ...</msg>
<status status="PASS" starttime="20201112 10:15:24.335" endtime="20201112 10:15:24.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.352" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 10:15:24.351" endtime="20201112 10:15:24.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.355" level="INFO">VALUE: [8.346999999998828e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.624999999998217e-06, 8.041000000000298e-06, 8.917000000000647e-06, 8.32000000000263e-06, 8.611000000002117e-06, 8.346999999998828e-06, 8.041000000000298e-06, 8.582999999999508e-06, 7.986000000001492e-06, 8.917000000000647e-06, 8.333999999998731e-06, 8.028000000000202e-06, 8.319999999999161e-06, 8.319999999999161e-06, 8.014000000000632e-06, 8.596999999999078e-06, 8.096999999998578e-06, 8.624999999998217e-06, 8.000000000001062e-06, 8.069999999998911e-06, 8.610999999998648e-06, 8.027000000000728e-06, 8.041999999999772e-06, 8.638000000001783e-06, 8.611000000002117e-06, 8.028000000000202e-06, 8.917000000000647e-06, 8.638999999997787e-06, 8.610999999998648e-06, 8.625000000001687e-06, 8.000000000001062e-06, 8.333000000002727e-06, 8.014000000000632e-06, 8.028000000000202e-06, 8.847999999998801e-06, 8.569999999999411e-06, 8.901999999998134e-06, 8.319999999999161e-06, 8.639000000001257e-06, 8.625000000001687e-06, 8.318999999999688e-06, 7.986000000001492e-06, 8.625000000001687e-06, 7.985999999998022e-06, 8.319999999999161e-06, 8.637999999998314e-06]</msg>
<status status="PASS" starttime="20201112 10:15:24.353" endtime="20201112 10:15:24.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.349" endtime="20201112 10:15:24.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.358" endtime="20201112 10:15:24.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.362" endtime="20201112 10:15:24.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.360" endtime="20201112 10:15:24.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.357" endtime="20201112 10:15:24.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.992" endtime="20201112 10:15:24.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.992" endtime="20201112 10:15:24.382"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.393" endtime="20201112 10:15:24.409"></status>
</kw>
<msg timestamp="20201112 10:15:24.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.391" endtime="20201112 10:15:24.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.410" endtime="20201112 10:15:24.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.413" endtime="20201112 10:15:24.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.388" endtime="20201112 10:15:24.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.385" endtime="20201112 10:15:24.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.422" endtime="20201112 10:15:24.709"></status>
</kw>
<msg timestamp="20201112 10:15:24.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.420" endtime="20201112 10:15:24.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.713" endtime="20201112 10:15:24.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.721" endtime="20201112 10:15:24.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.418" endtime="20201112 10:15:24.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.416" endtime="20201112 10:15:24.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.728" level="INFO">${RESULT} = [{'time': 0.022057861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.022070792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:24.724" endtime="20201112 10:15:24.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:24.741" level="INFO">${ACCURACY} = {'source_diff': [9.778000000001952e-06, 9.222999999999176e-06, 9.514000000002132e-06, 9.222000000003172e-06, 9.222999999999176e-06, 9.834000000000231e-06, 8.903000000001077e-06, 9.499999999999093e-06,...</msg>
<status status="PASS" starttime="20201112 10:15:24.729" endtime="20201112 10:15:24.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.746" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 10:15:24.745" endtime="20201112 10:15:24.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.748" level="INFO">VALUE: [9.778000000001952e-06, 9.222999999999176e-06, 9.514000000002132e-06, 9.222000000003172e-06, 9.222999999999176e-06, 9.834000000000231e-06, 8.903000000001077e-06, 9.499999999999093e-06, 8.917000000000647e-06, 9.792000000001522e-06, 9.513999999998662e-06, 9.194000000000563e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.792000000001522e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.778000000001952e-06, 9.806000000001092e-06, 9.222999999999176e-06, 9.818999999997718e-06, 9.222000000003172e-06, 9.500000000002562e-06, 9.472999999999426e-06, 9.195000000000036e-06, 9.804999999998149e-06, 8.916000000001173e-06, 9.527000000002228e-06, 9.208000000000133e-06, 9.806000000001092e-06, 9.221999999999703e-06, 9.819999999997192e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.778000000001952e-06, 9.194000000000563e-06, 9.181000000000467e-06, 9.193999999997093e-06, 8.931000000000217e-06, 8.903000000001077e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.888999999999037e-06, 8.917000000000647e-06, 9.528000000001702e-06, 9.221999999999703e-06, 8.931000000000217e-06, 9.499999999999093e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201112 10:15:24.747" endtime="20201112 10:15:24.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.742" endtime="20201112 10:15:24.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.752" endtime="20201112 10:15:24.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.755" endtime="20201112 10:15:24.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.753" endtime="20201112 10:15:24.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.750" endtime="20201112 10:15:24.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.383" endtime="20201112 10:15:24.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.383" endtime="20201112 10:15:24.776"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.784" endtime="20201112 10:15:24.802"></status>
</kw>
<msg timestamp="20201112 10:15:24.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.783" endtime="20201112 10:15:24.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.803" endtime="20201112 10:15:24.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.806" endtime="20201112 10:15:24.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.780" endtime="20201112 10:15:24.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.778" endtime="20201112 10:15:24.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.815" endtime="20201112 10:15:25.100"></status>
</kw>
<msg timestamp="20201112 10:15:25.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021500042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.813" endtime="20201112 10:15:25.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021500042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.104" endtime="20201112 10:15:25.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.112" endtime="20201112 10:15:25.114"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.811" endtime="20201112 10:15:25.114"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.809" endtime="20201112 10:15:25.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.119" level="INFO">${RESULT} = [{'time': 0.021510444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.021525556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:25.116" endtime="20201112 10:15:25.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.132" level="INFO">${ACCURACY} = {'source_diff': [1.0401999999999634e-05, 1.0695000000001537e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0403000000002577e-05, 1.0680000000002493e-05, 1.0708000000001633e-05, 1.0124999999999...</msg>
<status status="PASS" starttime="20201112 10:15:25.120" endtime="20201112 10:15:25.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.137" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.136" endtime="20201112 10:15:25.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.139" level="INFO">VALUE: [1.0401999999999634e-05, 1.0695000000001537e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0403000000002577e-05, 1.0680000000002493e-05, 1.0708000000001633e-05, 1.0124999999999718e-05, 1.0137999999999814e-05, 1.0082999999997538e-05, 1.0708000000001633e-05, 1.0694000000002063e-05, 1.0957999999998413e-05, 1.0709000000001107e-05, 1.0403000000002577e-05, 1.0709000000001107e-05, 1.0124999999999718e-05, 1.0083000000001008e-05, 1.0986000000001023e-05, 1.0680999999998497e-05, 1.0693999999998594e-05, 1.0415999999999204e-05, 1.0417000000002147e-05, 1.0694000000002063e-05, 1.0097000000000578e-05, 1.0111000000000148e-05, 1.0486999999999996e-05, 1.0111000000000148e-05, 9.805999999997622e-06, 1.0111000000000148e-05, 1.0097000000000578e-05, 1.0693999999998594e-05, 1.1014000000000163e-05, 1.0402999999999107e-05, 1.0403000000002577e-05, 1.0402999999999107e-05, 1.0708000000001633e-05, 1.0694999999998067e-05, 1.0695000000001537e-05, 1.0166999999998427e-05, 1.0402000000003103e-05, 1.0402999999999107e-05, 1.0415999999999204e-05, 1.1014000000000163e-05, 1.0069000000001438e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0694000000002063e-05, 1.0388999999999537e-05, 1.0111999999999621e-05]</msg>
<status status="PASS" starttime="20201112 10:15:25.138" endtime="20201112 10:15:25.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.133" endtime="20201112 10:15:25.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.143" endtime="20201112 10:15:25.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.146" endtime="20201112 10:15:25.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.144" endtime="20201112 10:15:25.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.141" endtime="20201112 10:15:25.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.777" endtime="20201112 10:15:25.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.776" endtime="20201112 10:15:25.167"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.175" endtime="20201112 10:15:25.191"></status>
</kw>
<msg timestamp="20201112 10:15:25.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.174" endtime="20201112 10:15:25.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.192" endtime="20201112 10:15:25.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.195" endtime="20201112 10:15:25.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.171" endtime="20201112 10:15:25.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.169" endtime="20201112 10:15:25.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.204" endtime="20201112 10:15:25.489"></status>
</kw>
<msg timestamp="20201112 10:15:25.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020077639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.202" endtime="20201112 10:15:25.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020077639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.493" endtime="20201112 10:15:25.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.501" endtime="20201112 10:15:25.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.200" endtime="20201112 10:15:25.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.198" endtime="20201112 10:15:25.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.508" level="INFO">${RESULT} = [{'time': 0.020089236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1596999999998608e-05, 'source_diff': 1.1596999999998608e-05}, {'time': 0.020107222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:25.504" endtime="20201112 10:15:25.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.522" level="INFO">${ACCURACY} = {'source_diff': [1.1596999999998608e-05, 1.1000000000000593e-05, 1.0999999999997123e-05, 1.1610999999998178e-05, 1.1596999999998608e-05, 1.1597000000002078e-05, 1.1304999999999649e-05, 1.1958000000002...</msg>
<status status="PASS" starttime="20201112 10:15:25.509" endtime="20201112 10:15:25.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.527" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.526" endtime="20201112 10:15:25.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.529" level="INFO">VALUE: [1.1596999999998608e-05, 1.1000000000000593e-05, 1.0999999999997123e-05, 1.1610999999998178e-05, 1.1596999999998608e-05, 1.1597000000002078e-05, 1.1304999999999649e-05, 1.1958000000002883e-05, 1.1610999999998178e-05, 1.1874999999997998e-05, 1.1598000000001552e-05, 1.1582999999999039e-05, 1.1305000000003118e-05, 1.1291000000000079e-05, 1.0986000000001023e-05, 1.1305999999999122e-05, 1.1291000000000079e-05, 1.1846999999998858e-05, 1.0985999999997553e-05, 1.1888999999997568e-05, 1.1014000000000163e-05, 1.1903000000000608e-05, 1.1597000000002078e-05, 1.1903000000000608e-05, 1.1598000000001552e-05, 1.1304999999999649e-05, 1.1598000000001552e-05, 1.1596999999998608e-05, 1.1304999999999649e-05, 1.1596999999998608e-05, 1.1957999999999414e-05, 1.1084000000001482e-05, 1.1304999999999649e-05, 1.1596999999998608e-05, 1.1597000000002078e-05, 1.1306000000002592e-05, 1.1583000000002508e-05, 1.1291999999999552e-05, 1.1889000000001038e-05, 1.1083999999998012e-05, 1.1597000000002078e-05, 1.1624999999997748e-05, 1.1597000000002078e-05, 1.1596999999998608e-05, 1.1277999999999982e-05, 1.1598000000001552e-05, 1.0944999999998317e-05, 1.0986000000001023e-05, 1.1000000000000593e-05, 1.1304999999999649e-05]</msg>
<status status="PASS" starttime="20201112 10:15:25.528" endtime="20201112 10:15:25.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.523" endtime="20201112 10:15:25.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.533" endtime="20201112 10:15:25.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.536" endtime="20201112 10:15:25.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.534" endtime="20201112 10:15:25.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.531" endtime="20201112 10:15:25.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.168" endtime="20201112 10:15:25.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.167" endtime="20201112 10:15:25.557"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.566" endtime="20201112 10:15:25.581"></status>
</kw>
<msg timestamp="20201112 10:15:25.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.564" endtime="20201112 10:15:25.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.582" endtime="20201112 10:15:25.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.584" endtime="20201112 10:15:25.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.561" endtime="20201112 10:15:25.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.559" endtime="20201112 10:15:25.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.594" endtime="20201112 10:15:25.880"></status>
</kw>
<msg timestamp="20201112 10:15:25.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.593" endtime="20201112 10:15:25.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.884" endtime="20201112 10:15:25.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.892" endtime="20201112 10:15:25.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.590" endtime="20201112 10:15:25.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.589" endtime="20201112 10:15:25.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.899" level="INFO">${RESULT} = [{'time': 0.019708431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1958999999998887e-05, 'source_diff': 1.1958999999998887e-05}, {'time': 0.019728528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:25.896" endtime="20201112 10:15:25.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.912" level="INFO">${ACCURACY} = {'source_diff': [1.1958999999998887e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2805000000001149e-05, 1.2485999999999053e-05, 1.2208999999999137e-05, 1.2166000000000...</msg>
<status status="PASS" starttime="20201112 10:15:25.900" endtime="20201112 10:15:25.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.917" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.916" endtime="20201112 10:15:25.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.919" level="INFO">VALUE: [1.1958999999998887e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2805000000001149e-05, 1.2485999999999053e-05, 1.2208999999999137e-05, 1.2166000000000954e-05, 1.2153000000000858e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2806000000000622e-05, 1.2513999999998193e-05, 1.279099999999811e-05, 1.2486000000002523e-05, 1.279099999999811e-05, 1.2194000000000094e-05, 1.2485999999999053e-05, 1.2221999999999233e-05, 1.2194000000000094e-05, 1.2235999999998803e-05, 1.2792000000001053e-05, 1.1903000000000608e-05, 1.1902999999997138e-05, 1.2193999999996624e-05, 1.2472000000002953e-05, 1.254099999999786e-05, 1.1902000000001134e-05, 1.2791999999997583e-05, 1.2194999999999567e-05, 1.2485999999999053e-05, 1.1805999999999622e-05, 1.2763000000002439e-05, 1.2528000000001233e-05, 1.1833999999998762e-05, 1.1889000000001038e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2792000000001053e-05, 1.2778000000001483e-05, 1.2806000000000622e-05, 1.2513999999998193e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2180000000000524e-05, 1.2792000000001053e-05, 1.2180999999999997e-05, 1.2778000000001483e-05]</msg>
<status status="PASS" starttime="20201112 10:15:25.918" endtime="20201112 10:15:25.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.913" endtime="20201112 10:15:25.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.923" endtime="20201112 10:15:25.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.926" endtime="20201112 10:15:25.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.925" endtime="20201112 10:15:25.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.921" endtime="20201112 10:15:25.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.558" endtime="20201112 10:15:25.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.557" endtime="20201112 10:15:25.947"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.956" endtime="20201112 10:15:25.970"></status>
</kw>
<msg timestamp="20201112 10:15:25.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.954" endtime="20201112 10:15:25.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.972" endtime="20201112 10:15:25.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.974" endtime="20201112 10:15:25.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.951" endtime="20201112 10:15:25.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.949" endtime="20201112 10:15:25.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.984" endtime="20201112 10:15:26.270"></status>
</kw>
<msg timestamp="20201112 10:15:26.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.983" endtime="20201112 10:15:26.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.274" endtime="20201112 10:15:26.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.282" endtime="20201112 10:15:26.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.980" endtime="20201112 10:15:26.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.979" endtime="20201112 10:15:26.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.289" level="INFO">${RESULT} = [{'time': 0.019617972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019633972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:26.285" endtime="20201112 10:15:26.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.302" level="INFO">${ACCURACY} = {'source_diff': [1.3360999999999928e-05, 1.3069000000000969e-05, 1.3360999999999928e-05, 1.3652999999998888e-05, 1.3680999999998028e-05, 1.3151999999998915e-05, 1.3110999999999678e-05, 1.4028000000002...</msg>
<status status="PASS" starttime="20201112 10:15:26.290" endtime="20201112 10:15:26.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.307" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.306" endtime="20201112 10:15:26.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.309" level="INFO">VALUE: [1.3360999999999928e-05, 1.3069000000000969e-05, 1.3360999999999928e-05, 1.3652999999998888e-05, 1.3680999999998028e-05, 1.3151999999998915e-05, 1.3110999999999678e-05, 1.4028000000002733e-05, 1.3971999999997514e-05, 1.3987000000000027e-05, 1.3083000000000539e-05, 1.3444000000001344e-05, 1.308299999999707e-05, 1.3097000000000109e-05, 1.3722000000000734e-05, 1.3680999999998028e-05, 1.3111000000003148e-05, 1.3389000000002538e-05, 1.3083000000000539e-05, 1.3639000000002788e-05, 1.3388999999999068e-05, 1.3097000000000109e-05, 1.3958000000001414e-05, 1.3360999999999928e-05, 1.3694999999997598e-05, 1.3986000000000554e-05, 1.3374999999999498e-05, 1.3985999999997084e-05, 1.3680999999998028e-05, 1.3709000000000637e-05, 1.3679999999998554e-05, 1.3083000000000539e-05, 1.30689999999975e-05, 1.3388999999999068e-05, 1.3083000000000539e-05, 1.3097000000000109e-05, 1.3681000000001498e-05, 1.3959000000000887e-05, 1.3374999999999498e-05, 1.3679999999998554e-05, 1.3070000000000442e-05, 1.3694999999997598e-05, 1.3681000000001498e-05, 1.3083000000000539e-05, 1.3083000000000539e-05, 1.3624999999999748e-05, 1.3125000000002718e-05, 1.3679999999998554e-05, 1.3944999999997848e-05, 1.3084000000000012e-05]</msg>
<status status="PASS" starttime="20201112 10:15:26.308" endtime="20201112 10:15:26.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.303" endtime="20201112 10:15:26.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.313" endtime="20201112 10:15:26.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.316" endtime="20201112 10:15:26.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.314" endtime="20201112 10:15:26.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.311" endtime="20201112 10:15:26.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.948" endtime="20201112 10:15:26.337"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.947" endtime="20201112 10:15:26.337"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.345" endtime="20201112 10:15:26.359"></status>
</kw>
<msg timestamp="20201112 10:15:26.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.344" endtime="20201112 10:15:26.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.361" endtime="20201112 10:15:26.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.363" endtime="20201112 10:15:26.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.341" endtime="20201112 10:15:26.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.339" endtime="20201112 10:15:26.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.373" endtime="20201112 10:15:26.658"></status>
</kw>
<msg timestamp="20201112 10:15:26.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.372" endtime="20201112 10:15:26.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.663" endtime="20201112 10:15:26.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.671" endtime="20201112 10:15:26.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.369" endtime="20201112 10:15:26.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.367" endtime="20201112 10:15:26.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.678" level="INFO">${RESULT} = [{'time': 0.019878736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4819000000002719e-05, 'source_diff': 1.4819000000002719e-05}, {'time': 0.019899639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:26.674" endtime="20201112 10:15:26.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.691" level="INFO">${ACCURACY} = {'source_diff': [1.4819000000002719e-05, 1.4570000000001943e-05, 1.4597000000001609e-05, 1.3986000000000554e-05, 1.4291999999999083e-05, 1.3986000000000554e-05, 1.4277999999999513e-05, 1.4291000000003...</msg>
<status status="PASS" starttime="20201112 10:15:26.679" endtime="20201112 10:15:26.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.695" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.694" endtime="20201112 10:15:26.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.698" level="INFO">VALUE: [1.4819000000002719e-05, 1.4570000000001943e-05, 1.4597000000001609e-05, 1.3986000000000554e-05, 1.4291999999999083e-05, 1.3986000000000554e-05, 1.4277999999999513e-05, 1.4291000000003079e-05, 1.3972000000000984e-05, 1.4874999999997529e-05, 1.3959000000000887e-05, 1.4555999999998903e-05, 1.4889000000000568e-05, 1.4195000000001567e-05, 1.3972000000000984e-05, 1.4862000000000902e-05, 1.3972000000000984e-05, 1.4570000000001943e-05, 1.4250000000000373e-05, 1.4569999999998473e-05, 1.429099999999961e-05, 1.4263999999999943e-05, 1.458299999999857e-05, 1.4569000000002469e-05, 1.4568999999999e-05, 1.4555999999998903e-05, 1.4569000000002469e-05, 1.4568999999999e-05, 1.4583000000002039e-05, 1.4555999999998903e-05, 1.4847999999997863e-05, 1.4583999999998043e-05, 1.4263999999999943e-05, 1.4278000000002983e-05, 1.4277999999999513e-05, 1.4570000000001943e-05, 1.458299999999857e-05, 1.4013999999999693e-05, 1.4568999999999e-05, 1.4291000000003079e-05, 1.429099999999961e-05, 1.4569000000002469e-05, 1.4916000000000235e-05, 1.483299999999882e-05, 1.4056000000001873e-05, 1.3972000000000984e-05, 1.4875000000000999e-05, 1.4584000000001512e-05, 1.427700000000004e-05, 1.3973000000000457e-05]</msg>
<status status="PASS" starttime="20201112 10:15:26.696" endtime="20201112 10:15:26.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.692" endtime="20201112 10:15:26.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.701" endtime="20201112 10:15:26.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.705" endtime="20201112 10:15:26.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.703" endtime="20201112 10:15:26.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.700" endtime="20201112 10:15:26.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.338" endtime="20201112 10:15:26.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.337" endtime="20201112 10:15:26.726"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.734" endtime="20201112 10:15:26.749"></status>
</kw>
<msg timestamp="20201112 10:15:26.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.733" endtime="20201112 10:15:26.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.750" endtime="20201112 10:15:26.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.753" endtime="20201112 10:15:26.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.730" endtime="20201112 10:15:26.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.728" endtime="20201112 10:15:26.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.763" endtime="20201112 10:15:27.048"></status>
</kw>
<msg timestamp="20201112 10:15:27.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020316028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.761" endtime="20201112 10:15:27.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020316028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.052" endtime="20201112 10:15:27.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.061" endtime="20201112 10:15:27.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.759" endtime="20201112 10:15:27.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.757" endtime="20201112 10:15:27.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:27.068" level="INFO">${RESULT} = [{'time': 0.020331194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5166000000000485e-05, 'source_diff': 1.5166000000000485e-05}, {'time': 0.020350125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:27.064" endtime="20201112 10:15:27.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:27.082" level="INFO">${ACCURACY} = {'source_diff': [1.5166000000000485e-05, 1.5764000000001444e-05, 1.5180000000000055e-05, 1.5458999999998918e-05, 1.4943999999999374e-05, 1.4875000000000999e-05, 1.5486000000002054e-05, 1.5166999999999...</msg>
<status status="PASS" starttime="20201112 10:15:27.069" endtime="20201112 10:15:27.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.086" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 10:15:27.085" endtime="20201112 10:15:27.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.089" level="INFO">VALUE: [1.5166000000000485e-05, 1.5764000000001444e-05, 1.5180000000000055e-05, 1.5458999999998918e-05, 1.4943999999999374e-05, 1.4875000000000999e-05, 1.5486000000002054e-05, 1.5166999999999958e-05, 1.5471999999999014e-05, 1.5457999999999444e-05, 1.5166999999999958e-05, 1.5749999999998404e-05, 1.5471999999999014e-05, 1.5153000000000388e-05, 1.540300000000064e-05, 1.5473000000001957e-05, 1.5763999999997974e-05, 1.508299999999907e-05, 1.5707999999999694e-05, 1.5166999999999958e-05, 1.4861000000001429e-05, 1.5180999999999528e-05, 1.5500000000001624e-05, 1.5471999999999014e-05, 1.4943999999999374e-05, 1.5166999999999958e-05, 1.5778000000001013e-05, 1.5166000000000485e-05, 1.5471999999999014e-05, 1.6056000000000403e-05, 1.5166999999999958e-05, 1.5139000000000818e-05, 1.5763999999997974e-05, 1.5458000000002914e-05, 1.5193999999999624e-05, 1.5458999999998918e-05, 1.5194999999999098e-05, 1.4875000000000999e-05, 1.5430999999999778e-05, 1.5137999999997875e-05, 1.5471999999999014e-05, 1.5764000000001444e-05, 1.4874999999997529e-05, 1.5749999999998404e-05, 1.576300000000197e-05, 1.5444999999999348e-05, 1.5458999999998918e-05, 1.605500000000093e-05, 1.5457999999999444e-05, 1.581900000000025e-05]</msg>
<status status="PASS" starttime="20201112 10:15:27.088" endtime="20201112 10:15:27.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.083" endtime="20201112 10:15:27.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.092" endtime="20201112 10:15:27.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.096" endtime="20201112 10:15:27.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.094" endtime="20201112 10:15:27.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.091" endtime="20201112 10:15:27.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.727" endtime="20201112 10:15:27.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.726" endtime="20201112 10:15:27.117"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.125" endtime="20201112 10:15:27.141"></status>
</kw>
<msg timestamp="20201112 10:15:27.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.124" endtime="20201112 10:15:27.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.142" endtime="20201112 10:15:27.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.145" endtime="20201112 10:15:27.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.121" endtime="20201112 10:15:27.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.119" endtime="20201112 10:15:27.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.154" endtime="20201112 10:15:27.440"></status>
</kw>
<msg timestamp="20201112 10:15:27.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.153" endtime="20201112 10:15:27.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.444" endtime="20201112 10:15:27.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.452" endtime="20201112 10:15:27.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.151" endtime="20201112 10:15:27.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.149" endtime="20201112 10:15:27.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:27.459" level="INFO">${RESULT} = [{'time': 0.019740639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.636099999999946e-05, 'source_diff': 1.636099999999946e-05}, {'time': 0.019763486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:27.456" endtime="20201112 10:15:27.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:27.472" level="INFO">${ACCURACY} = {'source_diff': [1.636099999999946e-05, 1.636099999999946e-05, 1.668100000000103e-05, 1.6958000000000945e-05, 1.60690000000005e-05, 1.636099999999946e-05, 1.6028000000001263e-05, 1.605500000000093e-05...</msg>
<status status="PASS" starttime="20201112 10:15:27.460" endtime="20201112 10:15:27.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.477" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 10:15:27.476" endtime="20201112 10:15:27.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.479" level="INFO">VALUE: [1.636099999999946e-05, 1.636099999999946e-05, 1.668100000000103e-05, 1.6958000000000945e-05, 1.60690000000005e-05, 1.636099999999946e-05, 1.6028000000001263e-05, 1.605500000000093e-05, 1.665299999999842e-05, 1.636100000000293e-05, 1.6651999999998945e-05, 1.605500000000093e-05, 1.5985999999999084e-05, 1.634699999999989e-05, 1.605500000000093e-05, 1.665299999999842e-05, 1.6333999999999793e-05, 1.6959000000000418e-05, 1.6666000000001985e-05, 1.605500000000093e-05, 1.636099999999946e-05, 1.636100000000293e-05, 1.665300000000189e-05, 1.6028000000001263e-05, 1.637499999999903e-05, 1.6945000000000848e-05, 1.608300000000007e-05, 1.6652000000002415e-05, 1.668100000000103e-05, 1.6055999999996934e-05, 1.6972000000000514e-05, 1.6055999999996934e-05, 1.5999999999998654e-05, 1.6665999999998515e-05, 1.609699999999964e-05, 1.638900000000207e-05, 1.6056000000000403e-05, 1.6959000000000418e-05, 1.665300000000189e-05, 1.6665999999998515e-05, 1.641699999999774e-05, 1.665299999999842e-05, 1.60690000000005e-05, 1.6651999999998945e-05, 1.6362000000002402e-05, 1.636099999999946e-05, 1.666699999999799e-05, 1.637499999999903e-05, 1.60690000000005e-05, 1.663899999999885e-05]</msg>
<status status="PASS" starttime="20201112 10:15:27.478" endtime="20201112 10:15:27.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.473" endtime="20201112 10:15:27.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.483" endtime="20201112 10:15:27.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.486" endtime="20201112 10:15:27.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.485" endtime="20201112 10:15:27.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.481" endtime="20201112 10:15:27.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.118" endtime="20201112 10:15:27.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.117" endtime="20201112 10:15:27.507"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.516" endtime="20201112 10:15:27.531"></status>
</kw>
<msg timestamp="20201112 10:15:27.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.514" endtime="20201112 10:15:27.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.532" endtime="20201112 10:15:27.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.535" endtime="20201112 10:15:27.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.512" endtime="20201112 10:15:27.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.510" endtime="20201112 10:15:27.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.545" endtime="20201112 10:15:27.830"></status>
</kw>
<msg timestamp="20201112 10:15:27.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.543" endtime="20201112 10:15:27.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.834" endtime="20201112 10:15:27.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.843" endtime="20201112 10:15:27.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.541" endtime="20201112 10:15:27.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.539" endtime="20201112 10:15:27.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:27.849" level="INFO">${RESULT} = [{'time': 0.019674444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.730499999999871e-05, 'source_diff': 1.730499999999871e-05}, {'time': 0.019701292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:27.846" endtime="20201112 10:15:27.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:27.863" level="INFO">${ACCURACY} = {'source_diff': [1.730499999999871e-05, 1.7236000000000334e-05, 1.7541999999998864e-05, 1.7263999999999474e-05, 1.7527999999999294e-05, 1.7847999999997394e-05, 1.755499999999896e-05, 1.724999999999990...</msg>
<status status="PASS" starttime="20201112 10:15:27.850" endtime="20201112 10:15:27.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.867" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 10:15:27.866" endtime="20201112 10:15:27.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.870" level="INFO">VALUE: [1.730499999999871e-05, 1.7236000000000334e-05, 1.7541999999998864e-05, 1.7263999999999474e-05, 1.7527999999999294e-05, 1.7847999999997394e-05, 1.755499999999896e-05, 1.7249999999999904e-05, 1.6958000000000945e-05, 1.7513999999999724e-05, 1.7277999999999044e-05, 1.7556000000001903e-05, 1.6944000000001375e-05, 1.7249999999999904e-05, 1.7209000000000668e-05, 1.784699999999792e-05, 1.755499999999896e-05, 1.7236000000000334e-05, 1.7236000000000334e-05, 1.7249999999999904e-05, 1.761099999999724e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7541999999998864e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.786100000000096e-05, 1.7569000000002e-05, 1.693100000000128e-05, 1.6958000000000945e-05, 1.784699999999792e-05, 1.7541999999998864e-05, 1.7249999999999904e-05, 1.755499999999896e-05, 1.7263999999999474e-05, 1.6986000000000084e-05, 1.7556000000001903e-05, 1.6945000000000848e-05, 1.7263e-05, 1.7847999999997394e-05, 1.7249999999999904e-05, 1.6945000000000848e-05, 1.7555999999998434e-05, 1.7527999999999294e-05, 1.755499999999896e-05, 1.7264000000002944e-05, 1.7014000000002694e-05, 1.7791999999999114e-05, 1.784699999999792e-05]</msg>
<status status="PASS" starttime="20201112 10:15:27.868" endtime="20201112 10:15:27.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.864" endtime="20201112 10:15:27.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.877" endtime="20201112 10:15:27.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.880" endtime="20201112 10:15:27.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.879" endtime="20201112 10:15:27.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.875" endtime="20201112 10:15:27.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.508" endtime="20201112 10:15:27.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.508" endtime="20201112 10:15:27.901"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.910" endtime="20201112 10:15:27.925"></status>
</kw>
<msg timestamp="20201112 10:15:27.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.908" endtime="20201112 10:15:27.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.927" endtime="20201112 10:15:27.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.929" endtime="20201112 10:15:27.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.906" endtime="20201112 10:15:27.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.904" endtime="20201112 10:15:27.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.939" endtime="20201112 10:15:28.224"></status>
</kw>
<msg timestamp="20201112 10:15:28.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020729, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020747444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:27.938" endtime="20201112 10:15:28.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020729, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020747444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:28.229" endtime="20201112 10:15:28.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.237" endtime="20201112 10:15:28.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.935" endtime="20201112 10:15:28.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.933" endtime="20201112 10:15:28.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.244" level="INFO">${RESULT} = [{'time': 0.020747444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8443999999999405e-05, 'source_diff': 1.8443999999999405e-05}, {'time': 0.020772431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:28.240" endtime="20201112 10:15:28.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.257" level="INFO">${ACCURACY} = {'source_diff': [1.8443999999999405e-05, 1.8737000000001308e-05, 1.8778000000000544e-05, 1.815299999999992e-05, 1.8764000000000974e-05, 1.8736000000001835e-05, 1.8792000000000114e-05, 1.87079999999992...</msg>
<status status="PASS" starttime="20201112 10:15:28.245" endtime="20201112 10:15:28.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.262" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.261" endtime="20201112 10:15:28.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.264" level="INFO">VALUE: [1.8443999999999405e-05, 1.8737000000001308e-05, 1.8778000000000544e-05, 1.815299999999992e-05, 1.8764000000000974e-05, 1.8736000000001835e-05, 1.8792000000000114e-05, 1.8707999999999225e-05, 1.8485999999998115e-05, 1.812499999999731e-05, 1.815299999999992e-05, 1.8473000000001488e-05, 1.8693999999999655e-05, 1.8098000000001113e-05, 1.815299999999992e-05, 1.844499999999888e-05, 1.815299999999992e-05, 1.844499999999888e-05, 1.866699999999999e-05, 1.8721999999998795e-05, 1.811100000000121e-05, 1.813900000000035e-05, 1.8736000000001835e-05, 1.9028000000000794e-05, 1.8805999999999684e-05, 1.8999999999998185e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.90829999999996e-05, 1.8721999999998795e-05, 1.813899999999688e-05, 1.815299999999992e-05, 1.843100000000278e-05, 1.843100000000278e-05, 1.813900000000035e-05, 1.904100000000089e-05, 1.8444000000002875e-05, 1.812500000000078e-05, 1.80690000000025e-05, 1.812500000000078e-05, 1.8721999999998795e-05, 1.8764000000000974e-05, 1.8221999999998295e-05, 1.8416000000000265e-05, 1.784699999999792e-05, 1.8152000000000446e-05, 1.8388000000001126e-05, 1.8778000000000544e-05, 1.8457999999998975e-05, 1.816699999999949e-05]</msg>
<status status="PASS" starttime="20201112 10:15:28.263" endtime="20201112 10:15:28.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.258" endtime="20201112 10:15:28.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.268" endtime="20201112 10:15:28.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.271" endtime="20201112 10:15:28.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.270" endtime="20201112 10:15:28.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.266" endtime="20201112 10:15:28.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.902" endtime="20201112 10:15:28.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.902" endtime="20201112 10:15:28.292"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.301" endtime="20201112 10:15:28.316"></status>
</kw>
<msg timestamp="20201112 10:15:28.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.299" endtime="20201112 10:15:28.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.318" endtime="20201112 10:15:28.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.320" endtime="20201112 10:15:28.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.297" endtime="20201112 10:15:28.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.295" endtime="20201112 10:15:28.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.330" endtime="20201112 10:15:28.615"></status>
</kw>
<msg timestamp="20201112 10:15:28.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019997889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.329" endtime="20201112 10:15:28.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019997889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.620" endtime="20201112 10:15:28.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.628" endtime="20201112 10:15:28.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.326" endtime="20201112 10:15:28.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.324" endtime="20201112 10:15:28.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.635" level="INFO">${RESULT} = [{'time': 0.020017528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.963899999999838e-05, 'source_diff': 1.963899999999838e-05}, {'time': 0.0200395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:28.631" endtime="20201112 10:15:28.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.649" level="INFO">${ACCURACY} = {'source_diff': [1.963899999999838e-05, 1.9055999999999934e-05, 1.963900000000185e-05, 1.963899999999838e-05, 1.962500000000228e-05, 1.904100000000089e-05, 1.933299999999985e-05, 1.98890000000021e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:28.636" endtime="20201112 10:15:28.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.653" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.652" endtime="20201112 10:15:28.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.656" level="INFO">VALUE: [1.963899999999838e-05, 1.9055999999999934e-05, 1.963900000000185e-05, 1.963899999999838e-05, 1.962500000000228e-05, 1.904100000000089e-05, 1.933299999999985e-05, 1.98890000000021e-05, 1.961099999999924e-05, 1.965300000000142e-05, 1.9028000000000794e-05, 1.963899999999838e-05, 1.961099999999924e-05, 1.962499999999881e-05, 1.9055999999999934e-05, 1.9651999999998476e-05, 1.98890000000021e-05, 1.9333999999999324e-05, 1.931900000000028e-05, 1.933299999999985e-05, 1.9042000000000364e-05, 1.963900000000185e-05, 1.9042000000000364e-05, 1.963900000000185e-05, 1.933299999999985e-05, 1.9930000000001336e-05, 1.9972000000000045e-05, 1.9333999999999324e-05, 1.933299999999985e-05, 1.9055999999999934e-05, 1.904100000000089e-05, 1.909699999999917e-05, 1.9637999999998906e-05, 1.933299999999985e-05, 1.962500000000228e-05, 1.962500000000228e-05, 1.995899999999995e-05, 1.905500000000046e-05, 1.9319999999999754e-05, 1.993100000000081e-05, 1.962499999999881e-05, 1.95830000000001e-05, 1.9042000000000364e-05, 1.963899999999838e-05, 1.962500000000228e-05, 1.930500000000071e-05, 1.963899999999838e-05, 1.9637999999998906e-05, 1.931900000000028e-05, 1.962500000000228e-05]</msg>
<status status="PASS" starttime="20201112 10:15:28.654" endtime="20201112 10:15:28.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.650" endtime="20201112 10:15:28.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.659" endtime="20201112 10:15:28.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.663" endtime="20201112 10:15:28.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.661" endtime="20201112 10:15:28.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.658" endtime="20201112 10:15:28.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.293" endtime="20201112 10:15:28.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.293" endtime="20201112 10:15:28.684"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.692" endtime="20201112 10:15:28.707"></status>
</kw>
<msg timestamp="20201112 10:15:28.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.691" endtime="20201112 10:15:28.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.709" endtime="20201112 10:15:28.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.711" endtime="20201112 10:15:28.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.688" endtime="20201112 10:15:28.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.686" endtime="20201112 10:15:28.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.721" endtime="20201112 10:15:29.008"></status>
</kw>
<msg timestamp="20201112 10:15:29.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.719" endtime="20201112 10:15:29.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.012" endtime="20201112 10:15:29.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.020" endtime="20201112 10:15:29.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.717" endtime="20201112 10:15:29.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.715" endtime="20201112 10:15:29.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.029" level="INFO">${RESULT} = [{'time': 0.020412486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0249999999999435e-05, 'source_diff': 2.0249999999999435e-05}, {'time': 0.020441528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:29.025" endtime="20201112 10:15:29.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.044" level="INFO">${ACCURACY} = {'source_diff': [2.0249999999999435e-05, 2.0834000000000824e-05, 2.081899999999831e-05, 2.022299999999977e-05, 2.079099999999917e-05, 2.0527999999998825e-05, 2.0222000000000295e-05, 2.083300000000135e...</msg>
<status status="PASS" starttime="20201112 10:15:29.030" endtime="20201112 10:15:29.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.049" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.048" endtime="20201112 10:15:29.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.052" level="INFO">VALUE: [2.0249999999999435e-05, 2.0834000000000824e-05, 2.081899999999831e-05, 2.022299999999977e-05, 2.079099999999917e-05, 2.0527999999998825e-05, 2.0222000000000295e-05, 2.083300000000135e-05, 2.0222000000000295e-05, 2.0236000000003335e-05, 2.0541999999998395e-05, 2.081899999999831e-05, 2.059700000000067e-05, 2.084700000000092e-05, 2.0763999999999505e-05, 2.0249999999999435e-05, 2.023699999999934e-05, 2.02090000000002e-05, 2.0443999999997936e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 2.0179999999998116e-05, 2.0235999999999865e-05, 2.0792000000002114e-05, 2.0820000000001254e-05, 2.0820000000001254e-05, 2.080500000000221e-05, 2.052699999999935e-05, 2.022299999999977e-05, 2.0249999999999435e-05, 1.99029999999982e-05, 2.081899999999831e-05, 2.0222000000000295e-05, 2.0208000000000725e-05, 2.051299999999978e-05, 2.0806000000001684e-05, 2.0527999999998825e-05, 2.029100000000214e-05, 2.0527999999998825e-05, 2.080499999999874e-05, 2.0820000000001254e-05, 1.994500000000038e-05, 2.081899999999831e-05, 2.084699999999745e-05, 2.0235999999999865e-05, 2.052700000000282e-05, 2.0207999999997256e-05, 2.0513999999999255e-05, 2.0806000000001684e-05, 2.0541999999998395e-05]</msg>
<status status="PASS" starttime="20201112 10:15:29.050" endtime="20201112 10:15:29.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.045" endtime="20201112 10:15:29.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.055" endtime="20201112 10:15:29.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.059" endtime="20201112 10:15:29.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.057" endtime="20201112 10:15:29.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.054" endtime="20201112 10:15:29.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.685" endtime="20201112 10:15:29.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.684" endtime="20201112 10:15:29.080"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.089" endtime="20201112 10:15:29.103"></status>
</kw>
<msg timestamp="20201112 10:15:29.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.087" endtime="20201112 10:15:29.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.105" endtime="20201112 10:15:29.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.107" endtime="20201112 10:15:29.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.084" endtime="20201112 10:15:29.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.082" endtime="20201112 10:15:29.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.117" endtime="20201112 10:15:29.420"></status>
</kw>
<msg timestamp="20201112 10:15:29.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.116" endtime="20201112 10:15:29.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.425" endtime="20201112 10:15:29.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.433" endtime="20201112 10:15:29.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.113" endtime="20201112 10:15:29.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.112" endtime="20201112 10:15:29.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.440" level="INFO">${RESULT} = [{'time': 0.020002069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1722000000001795e-05, 'source_diff': 2.1722000000001795e-05}, {'time': 0.020029111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:29.437" endtime="20201112 10:15:29.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.454" level="INFO">${ACCURACY} = {'source_diff': [2.1722000000001795e-05, 2.141699999999927e-05, 2.1443999999998936e-05, 2.141699999999927e-05, 2.14029999999997e-05, 2.172300000000127e-05, 2.2084000000002074e-05, 2.14029999999997e-05...</msg>
<status status="PASS" starttime="20201112 10:15:29.441" endtime="20201112 10:15:29.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.459" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.458" endtime="20201112 10:15:29.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.461" level="INFO">VALUE: [2.1722000000001795e-05, 2.141699999999927e-05, 2.1443999999998936e-05, 2.141699999999927e-05, 2.14029999999997e-05, 2.172300000000127e-05, 2.2084000000002074e-05, 2.14029999999997e-05, 2.1722000000001795e-05, 2.113899999999988e-05, 2.141699999999927e-05, 2.143099999999884e-05, 2.1415999999999796e-05, 2.109700000000117e-05, 2.1429999999999366e-05, 2.111099999999727e-05, 2.1084000000001074e-05, 2.1708000000002226e-05, 2.111100000000074e-05, 2.143099999999884e-05, 2.143099999999884e-05, 2.1708000000002226e-05, 2.111100000000074e-05, 2.169499999999866e-05, 2.113899999999988e-05, 2.1415999999999796e-05, 2.111100000000074e-05, 2.2055999999999465e-05, 2.112499999999684e-05, 2.1708000000002226e-05, 2.17090000000017e-05, 2.141699999999927e-05, 2.0848000000000394e-05, 2.143099999999884e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.205499999999999e-05, 2.112500000000031e-05, 2.1415999999999796e-05, 2.137500000000056e-05, 2.1722000000001795e-05, 2.2014000000000755e-05, 2.112500000000031e-05, 2.113899999999988e-05, 2.1415999999999796e-05, 2.1472000000001545e-05, 2.109700000000117e-05, 2.170899999999823e-05, 2.1194000000002156e-05, 2.143100000000231e-05]</msg>
<status status="PASS" starttime="20201112 10:15:29.460" endtime="20201112 10:15:29.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.455" endtime="20201112 10:15:29.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.465" endtime="20201112 10:15:29.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.469" endtime="20201112 10:15:29.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.467" endtime="20201112 10:15:29.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.463" endtime="20201112 10:15:29.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.081" endtime="20201112 10:15:29.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.080" endtime="20201112 10:15:29.490"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.499" endtime="20201112 10:15:29.514"></status>
</kw>
<msg timestamp="20201112 10:15:29.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.498" endtime="20201112 10:15:29.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.515" endtime="20201112 10:15:29.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.518" endtime="20201112 10:15:29.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.495" endtime="20201112 10:15:29.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.493" endtime="20201112 10:15:29.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.529" endtime="20201112 10:15:29.815"></status>
</kw>
<msg timestamp="20201112 10:15:29.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020948111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020970403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.527" endtime="20201112 10:15:29.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020948111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020970403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.819" endtime="20201112 10:15:29.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.828" endtime="20201112 10:15:29.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.524" endtime="20201112 10:15:29.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.522" endtime="20201112 10:15:29.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.835" level="INFO">${RESULT} = [{'time': 0.020970403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2292000000000145e-05, 'source_diff': 2.2292000000000145e-05}, {'time': 0.020998569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:29.831" endtime="20201112 10:15:29.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.848" level="INFO">${ACCURACY} = {'source_diff': [2.2292000000000145e-05, 2.261100000000224e-05, 2.2304999999996772e-05, 2.2013999999997286e-05, 2.265300000000095e-05, 2.2014000000000755e-05, 2.231899999999981e-05, 2.205499999999999e...</msg>
<status status="PASS" starttime="20201112 10:15:29.836" endtime="20201112 10:15:29.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.853" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.852" endtime="20201112 10:15:29.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.856" level="INFO">VALUE: [2.2292000000000145e-05, 2.261100000000224e-05, 2.2304999999996772e-05, 2.2013999999997286e-05, 2.265300000000095e-05, 2.2014000000000755e-05, 2.231899999999981e-05, 2.205499999999999e-05, 2.25969999999992e-05, 2.2028000000000325e-05, 2.29030000000012e-05, 2.286099999999902e-05, 2.2916000000001296e-05, 2.290299999999773e-05, 2.2598000000002144e-05, 2.237500000000156e-05, 2.2250000000001435e-05, 2.2305999999999715e-05, 2.2319999999999285e-05, 2.261100000000224e-05, 2.261100000000224e-05, 2.2014000000000755e-05, 2.230500000000024e-05, 2.261099999999877e-05, 2.268100000000009e-05, 2.288900000000163e-05, 2.259700000000267e-05, 2.204100000000042e-05, 2.2305999999999715e-05, 2.261100000000224e-05, 2.2319999999999285e-05, 2.226300000000153e-05, 2.25969999999992e-05, 2.231899999999981e-05, 2.287499999999859e-05, 2.2915999999997827e-05, 2.230500000000024e-05, 2.291700000000077e-05, 2.2305999999999715e-05, 2.233299999999938e-05, 2.291700000000077e-05, 2.2555999999999965e-05, 2.231899999999981e-05, 2.266699999999705e-05, 2.261099999999877e-05, 2.25969999999992e-05, 2.2611999999998245e-05, 2.25969999999992e-05, 2.2305999999999715e-05, 2.231899999999981e-05]</msg>
<status status="PASS" starttime="20201112 10:15:29.854" endtime="20201112 10:15:29.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.849" endtime="20201112 10:15:29.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.860" endtime="20201112 10:15:29.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.863" endtime="20201112 10:15:29.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.862" endtime="20201112 10:15:29.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.858" endtime="20201112 10:15:29.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.491" endtime="20201112 10:15:29.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.490" endtime="20201112 10:15:29.884"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.893" endtime="20201112 10:15:29.909"></status>
</kw>
<msg timestamp="20201112 10:15:29.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.892" endtime="20201112 10:15:29.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.911" endtime="20201112 10:15:29.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.913" endtime="20201112 10:15:29.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.889" endtime="20201112 10:15:29.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.887" endtime="20201112 10:15:29.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.924" endtime="20201112 10:15:30.210"></status>
</kw>
<msg timestamp="20201112 10:15:30.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.922" endtime="20201112 10:15:30.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.215" endtime="20201112 10:15:30.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.223" endtime="20201112 10:15:30.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.919" endtime="20201112 10:15:30.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.918" endtime="20201112 10:15:30.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:30.230" level="INFO">${RESULT} = [{'time': 0.020595278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3250000000002435e-05, 'source_diff': 2.3250000000002435e-05}, {'time': 0.020628139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:30.227" endtime="20201112 10:15:30.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:30.245" level="INFO">${ACCURACY} = {'source_diff': [2.3250000000002435e-05, 2.3777999999998606e-05, 2.319500000000016e-05, 2.2930000000000866e-05, 2.3208000000000256e-05, 2.319500000000016e-05, 2.3834000000000355e-05, 2.355500000000149...</msg>
<status status="PASS" starttime="20201112 10:15:30.231" endtime="20201112 10:15:30.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.250" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 10:15:30.249" endtime="20201112 10:15:30.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.253" level="INFO">VALUE: [2.3250000000002435e-05, 2.3777999999998606e-05, 2.319500000000016e-05, 2.2930000000000866e-05, 2.3208000000000256e-05, 2.319500000000016e-05, 2.3834000000000355e-05, 2.355500000000149e-05, 2.37770000000026e-05, 2.3499999999999216e-05, 2.3513999999998786e-05, 2.3194000000000686e-05, 2.3541999999997926e-05, 2.3806000000001215e-05, 2.3263999999998536e-05, 2.290299999999773e-05, 2.348699999999912e-05, 2.312499999999884e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.3806000000001215e-05, 2.2901999999998257e-05, 2.3151999999998507e-05, 2.290299999999773e-05, 2.3499999999999216e-05, 2.3806000000001215e-05, 2.379100000000217e-05, 2.3499999999999216e-05, 2.3792000000001645e-05, 2.3540999999998452e-05, 2.383300000000088e-05, 2.3221999999999826e-05, 2.320899999999973e-05, 2.3749999999999466e-05, 2.3513999999998786e-05, 2.2847999999998925e-05, 2.3499999999999216e-05, 2.287500000000206e-05, 2.316699999999755e-05, 2.29030000000012e-05, 2.3499999999999216e-05, 2.3499999999999216e-05, 2.3513999999998786e-05, 2.3805999999997746e-05, 2.3208000000000256e-05, 2.3778000000002075e-05, 2.288899999999816e-05, 2.3542000000001395e-05, 2.3194000000000686e-05, 2.3790999999998702e-05]</msg>
<status status="PASS" starttime="20201112 10:15:30.251" endtime="20201112 10:15:30.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.246" endtime="20201112 10:15:30.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.256" endtime="20201112 10:15:30.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:30.260" endtime="20201112 10:15:30.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.258" endtime="20201112 10:15:30.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.255" endtime="20201112 10:15:30.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.885" endtime="20201112 10:15:30.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.885" endtime="20201112 10:15:30.281"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.290" endtime="20201112 10:15:30.304"></status>
</kw>
<msg timestamp="20201112 10:15:30.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.288" endtime="20201112 10:15:30.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.306" endtime="20201112 10:15:30.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.308" endtime="20201112 10:15:30.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.286" endtime="20201112 10:15:30.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.283" endtime="20201112 10:15:30.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.319" endtime="20201112 10:15:30.606"></status>
</kw>
<msg timestamp="20201112 10:15:30.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020469347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020494042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.317" endtime="20201112 10:15:30.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020469347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020494042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.610" endtime="20201112 10:15:30.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.619" endtime="20201112 10:15:30.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.314" endtime="20201112 10:15:30.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.313" endtime="20201112 10:15:30.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:30.626" level="INFO">${RESULT} = [{'time': 0.020494042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.469500000000166e-05, 'source_diff': 2.469500000000166e-05}, {'time': 0.020520958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:30.622" endtime="20201112 10:15:30.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:30.640" level="INFO">${ACCURACY} = {'source_diff': [2.469500000000166e-05, 2.4401999999999757e-05, 2.465299999999948e-05, 2.438899999999966e-05, 2.4416000000002797e-05, 2.4764000000000036e-05, 2.4679999999999147e-05, 2.4707999999998287...</msg>
<status status="PASS" starttime="20201112 10:15:30.627" endtime="20201112 10:15:30.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.645" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 10:15:30.644" endtime="20201112 10:15:30.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.647" level="INFO">VALUE: [2.469500000000166e-05, 2.4401999999999757e-05, 2.465299999999948e-05, 2.438899999999966e-05, 2.4416000000002797e-05, 2.4764000000000036e-05, 2.4679999999999147e-05, 2.4707999999998287e-05, 2.413899999999941e-05, 2.4693999999998717e-05, 2.4707999999998287e-05, 2.438899999999966e-05, 2.4679999999999147e-05, 2.4693999999998717e-05, 2.443100000000184e-05, 2.469500000000166e-05, 2.470899999999776e-05, 2.447300000000055e-05, 2.4694000000002186e-05, 2.413899999999941e-05, 2.4693999999998717e-05, 2.469499999999819e-05, 2.4764000000000036e-05, 2.4735999999997427e-05, 2.468099999999862e-05, 2.440299999999923e-05, 2.444500000000141e-05, 2.4693999999998717e-05, 2.4084000000000605e-05, 2.4098000000000175e-05, 2.4098000000000175e-05, 2.4443999999998467e-05, 2.386100000000002e-05, 2.4971999999998107e-05, 2.3792000000001645e-05, 2.4042000000001895e-05, 2.40970000000007e-05, 2.4652000000000007e-05, 2.4084000000000605e-05, 2.4098000000000175e-05, 2.4401999999999757e-05, 2.40970000000007e-05, 2.469500000000166e-05, 2.4388000000000187e-05, 2.4693999999998717e-05, 2.4388000000000187e-05, 2.4708000000001756e-05, 2.412499999999984e-05, 2.438900000000313e-05, 2.4013999999999286e-05]</msg>
<status status="PASS" starttime="20201112 10:15:30.646" endtime="20201112 10:15:30.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.641" endtime="20201112 10:15:30.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.651" endtime="20201112 10:15:30.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:30.655" endtime="20201112 10:15:30.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.653" endtime="20201112 10:15:30.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.649" endtime="20201112 10:15:30.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.282" endtime="20201112 10:15:30.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.281" endtime="20201112 10:15:30.676"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.685" endtime="20201112 10:15:30.700"></status>
</kw>
<msg timestamp="20201112 10:15:30.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.683" endtime="20201112 10:15:30.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.702" endtime="20201112 10:15:30.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.705" endtime="20201112 10:15:30.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.680" endtime="20201112 10:15:30.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.678" endtime="20201112 10:15:30.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.716" endtime="20201112 10:15:31.001"></status>
</kw>
<msg timestamp="20201112 10:15:31.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020607806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.714" endtime="20201112 10:15:31.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020607806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.006" endtime="20201112 10:15:31.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.014" endtime="20201112 10:15:31.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.711" endtime="20201112 10:15:31.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.709" endtime="20201112 10:15:31.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.021" level="INFO">${RESULT} = [{'time': 0.020633694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5888000000001687e-05, 'source_diff': 2.5888000000001687e-05}, {'time': 0.020666667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:31.018" endtime="20201112 10:15:31.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.035" level="INFO">${ACCURACY} = {'source_diff': [2.5888000000001687e-05, 2.5291999999999676e-05, 2.5555999999999496e-05, 2.5304999999999772e-05, 2.5278000000000106e-05, 2.5582999999999162e-05, 2.4972000000001576e-05, 2.5584000000002...</msg>
<status status="PASS" starttime="20201112 10:15:31.022" endtime="20201112 10:15:31.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.040" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.039" endtime="20201112 10:15:31.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.043" level="INFO">VALUE: [2.5888000000001687e-05, 2.5291999999999676e-05, 2.5555999999999496e-05, 2.5304999999999772e-05, 2.5278000000000106e-05, 2.5582999999999162e-05, 2.4972000000001576e-05, 2.5584000000002105e-05, 2.4972000000001576e-05, 2.5584000000002105e-05, 2.5291999999999676e-05, 2.587500000000159e-05, 2.5291000000000202e-05, 2.5056000000002465e-05, 2.5583999999998636e-05, 2.4986000000001146e-05, 2.534700000000195e-05, 2.4929999999999397e-05, 2.5318999999999342e-05, 2.5596999999998732e-05, 2.5291999999999676e-05, 2.5000000000000716e-05, 2.5346999999998482e-05, 2.495899999999801e-05, 2.59170000000003e-05, 2.5930000000000397e-05, 2.561100000000177e-05, 2.55970000000022e-05, 2.5027999999999856e-05, 2.5568999999999592e-05, 2.5318999999999342e-05, 2.5013999999996817e-05, 2.5000000000000716e-05, 2.5596999999998732e-05, 2.530500000000324e-05, 2.5568999999999592e-05, 2.5000000000000716e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.4999999999997247e-05, 2.494499999999844e-05, 2.588899999999769e-05, 2.5568999999999592e-05, 2.588900000000116e-05, 2.4957999999998537e-05, 2.5584000000002105e-05, 2.5291999999999676e-05, 2.4986000000001146e-05, 2.5291999999999676e-05, 2.5291999999999676e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.041" endtime="20201112 10:15:31.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.036" endtime="20201112 10:15:31.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.046" endtime="20201112 10:15:31.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.050" endtime="20201112 10:15:31.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.048" endtime="20201112 10:15:31.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.045" endtime="20201112 10:15:31.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.677" endtime="20201112 10:15:31.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.676" endtime="20201112 10:15:31.071"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.080" endtime="20201112 10:15:31.096"></status>
</kw>
<msg timestamp="20201112 10:15:31.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.079" endtime="20201112 10:15:31.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.097" endtime="20201112 10:15:31.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.100" endtime="20201112 10:15:31.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.076" endtime="20201112 10:15:31.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.074" endtime="20201112 10:15:31.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.111" endtime="20201112 10:15:31.397"></status>
</kw>
<msg timestamp="20201112 10:15:31.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020639819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.109" endtime="20201112 10:15:31.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020639819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.401" endtime="20201112 10:15:31.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.409" endtime="20201112 10:15:31.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.106" endtime="20201112 10:15:31.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.104" endtime="20201112 10:15:31.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.416" level="INFO">${RESULT} = [{'time': 0.020639819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6180000000000647e-05, 'source_diff': 2.6180000000000647e-05}, {'time': 0.020670708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:31.413" endtime="20201112 10:15:31.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.430" level="INFO">${ACCURACY} = {'source_diff': [2.6180000000000647e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.6791999999997707e-05, 2.6750000000002466e-05, 2.6763000000002563e-05, 2.6763999999998567e-05, 2.61389999999979...</msg>
<status status="PASS" starttime="20201112 10:15:31.417" endtime="20201112 10:15:31.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.435" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.434" endtime="20201112 10:15:31.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.438" level="INFO">VALUE: [2.6180000000000647e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.6791999999997707e-05, 2.6750000000002466e-05, 2.6763000000002563e-05, 2.6763999999998567e-05, 2.613899999999794e-05, 2.6819000000000842e-05, 2.6791999999997707e-05, 2.6776999999998663e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.588899999999769e-05, 2.6763999999998567e-05, 2.6790999999998233e-05, 2.6735999999999427e-05, 2.6778000000001606e-05, 2.616700000000055e-05, 2.6791999999997707e-05, 2.619499999999969e-05, 2.6471999999999607e-05, 2.6471999999999607e-05, 2.6792000000001176e-05, 2.6499999999998747e-05, 2.618100000000012e-05, 2.6166000000001077e-05, 2.647299999999908e-05, 2.7070000000000566e-05, 2.6792000000001176e-05, 2.6806000000000746e-05, 2.618100000000012e-05, 2.588900000000116e-05, 2.618100000000012e-05, 2.6500000000002216e-05, 2.6778000000001606e-05, 2.6458000000000037e-05, 2.6180000000000647e-05, 2.6499999999998747e-05, 2.6471999999999607e-05, 2.6792000000001176e-05, 2.647299999999908e-05, 2.6499999999998747e-05, 2.6820000000000316e-05, 2.6485999999999177e-05, 2.6777000000002132e-05, 2.6485999999999177e-05, 2.6249999999998497e-05, 2.6763999999998567e-05, 2.6790999999998233e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.436" endtime="20201112 10:15:31.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.431" endtime="20201112 10:15:31.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.442" endtime="20201112 10:15:31.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.445" endtime="20201112 10:15:31.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.444" endtime="20201112 10:15:31.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.440" endtime="20201112 10:15:31.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.072" endtime="20201112 10:15:31.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.071" endtime="20201112 10:15:31.466"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.475" endtime="20201112 10:15:31.491"></status>
</kw>
<msg timestamp="20201112 10:15:31.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.474" endtime="20201112 10:15:31.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.492" endtime="20201112 10:15:31.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.495" endtime="20201112 10:15:31.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.471" endtime="20201112 10:15:31.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.469" endtime="20201112 10:15:31.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.505" endtime="20201112 10:15:31.791"></status>
</kw>
<msg timestamp="20201112 10:15:31.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02060425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020631639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:31.504" endtime="20201112 10:15:31.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02060425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020631639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:31.795" endtime="20201112 10:15:31.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.803" endtime="20201112 10:15:31.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.501" endtime="20201112 10:15:31.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.499" endtime="20201112 10:15:31.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.811" level="INFO">${RESULT} = [{'time': 0.020631639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7388999999999192e-05, 'source_diff': 2.7388999999999192e-05}, {'time': 0.020662764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:31.807" endtime="20201112 10:15:31.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.825" level="INFO">${ACCURACY} = {'source_diff': [2.7388999999999192e-05, 2.7986000000000677e-05, 2.7652999999999012e-05, 2.7611000000000302e-05, 2.7972000000001107e-05, 2.7374999999999622e-05, 2.7679999999998678e-05, 2.7084000000000...</msg>
<status status="PASS" starttime="20201112 10:15:31.812" endtime="20201112 10:15:31.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.830" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.829" endtime="20201112 10:15:31.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.833" level="INFO">VALUE: [2.7388999999999192e-05, 2.7986000000000677e-05, 2.7652999999999012e-05, 2.7611000000000302e-05, 2.7972000000001107e-05, 2.7374999999999622e-05, 2.7679999999998678e-05, 2.7084000000000136e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7680000000002147e-05, 2.7652999999999012e-05, 2.7374999999999622e-05, 2.768099999999815e-05, 2.769499999999772e-05, 2.7013999999998817e-05, 2.8013999999999817e-05, 2.7665999999999108e-05, 2.7374999999999622e-05, 2.7069000000001092e-05, 2.769500000000119e-05, 2.737500000000309e-05, 2.7334000000000386e-05, 2.7665999999999108e-05, 2.7666000000002577e-05, 2.766699999999858e-05, 2.7651999999999538e-05, 2.7347000000000482e-05, 2.7292000000001676e-05, 2.7068999999997623e-05, 2.7083000000000662e-05, 2.7069999999997096e-05, 2.7055000000001522e-05, 2.7388999999999192e-05, 2.7679999999998678e-05, 2.7665999999999108e-05, 2.768099999999815e-05, 2.7388999999999192e-05, 2.7652999999999012e-05, 2.7374999999999622e-05, 2.7972000000001107e-05, 2.766699999999858e-05, 2.7971999999997638e-05, 2.7374999999999622e-05, 2.7054999999998053e-05, 2.7374999999999622e-05, 2.7333000000000912e-05, 2.7374999999999622e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.831" endtime="20201112 10:15:31.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.827" endtime="20201112 10:15:31.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.837" endtime="20201112 10:15:31.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.840" endtime="20201112 10:15:31.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.839" endtime="20201112 10:15:31.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.835" endtime="20201112 10:15:31.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.467" endtime="20201112 10:15:31.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.467" endtime="20201112 10:15:31.861"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.870" endtime="20201112 10:15:31.886"></status>
</kw>
<msg timestamp="20201112 10:15:31.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.869" endtime="20201112 10:15:31.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.888" endtime="20201112 10:15:31.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.890" endtime="20201112 10:15:31.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.866" endtime="20201112 10:15:31.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.864" endtime="20201112 10:15:31.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.901" endtime="20201112 10:15:32.187"></status>
</kw>
<msg timestamp="20201112 10:15:32.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.899" endtime="20201112 10:15:32.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.192" endtime="20201112 10:15:32.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.200" endtime="20201112 10:15:32.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.896" endtime="20201112 10:15:32.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.894" endtime="20201112 10:15:32.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.207" level="INFO">${RESULT} = [{'time': 0.020337417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8277999999999637e-05, 'source_diff': 2.8277999999999637e-05}, {'time': 0.020369417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:32.204" endtime="20201112 10:15:32.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.221" level="INFO">${ACCURACY} = {'source_diff': [2.8277999999999637e-05, 2.8848000000001456e-05, 2.8264000000000067e-05, 2.8555999999999027e-05, 2.8554999999999553e-05, 2.8847000000001982e-05, 2.8929999999999928e-05, 2.7957999999998...</msg>
<status status="PASS" starttime="20201112 10:15:32.208" endtime="20201112 10:15:32.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.226" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.225" endtime="20201112 10:15:32.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.229" level="INFO">VALUE: [2.8277999999999637e-05, 2.8848000000001456e-05, 2.8264000000000067e-05, 2.8555999999999027e-05, 2.8554999999999553e-05, 2.8847000000001982e-05, 2.8929999999999928e-05, 2.7957999999998068e-05, 2.8582999999998693e-05, 2.7944000000001967e-05, 2.8568999999999123e-05, 2.8806000000002746e-05, 2.8250000000000497e-05, 2.8554999999999553e-05, 2.8250000000000497e-05, 2.8555999999999027e-05, 2.8277000000000163e-05, 2.8514000000000317e-05, 2.8264000000000067e-05, 2.8554999999999553e-05, 2.7957999999998068e-05, 2.8570000000002066e-05, 2.8860999999998083e-05, 2.8277000000000163e-05, 2.8846999999998513e-05, 2.8874999999997653e-05, 2.8555999999999027e-05, 2.8264000000000067e-05, 2.8874999999997653e-05, 2.8596999999998263e-05, 2.7957999999998068e-05, 2.7958000000001537e-05, 2.8554999999999553e-05, 2.8612000000000776e-05, 2.8860999999998083e-05, 2.8264000000000067e-05, 2.7971999999997638e-05, 2.8861000000001552e-05, 2.8304999999999303e-05, 2.8500000000000747e-05, 2.8568999999999123e-05, 2.8569999999998597e-05, 2.7986000000000677e-05, 2.8555999999999027e-05, 2.8264000000000067e-05, 2.8584000000001636e-05, 2.8569999999998597e-05, 2.8555999999999027e-05, 2.8333999999997916e-05, 2.7972000000001107e-05]</msg>
<status status="PASS" starttime="20201112 10:15:32.227" endtime="20201112 10:15:32.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.222" endtime="20201112 10:15:32.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.232" endtime="20201112 10:15:32.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.236" endtime="20201112 10:15:32.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.234" endtime="20201112 10:15:32.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.231" endtime="20201112 10:15:32.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.862" endtime="20201112 10:15:32.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.862" endtime="20201112 10:15:32.257"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.266" endtime="20201112 10:15:32.282"></status>
</kw>
<msg timestamp="20201112 10:15:32.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.264" endtime="20201112 10:15:32.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.284" endtime="20201112 10:15:32.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.286" endtime="20201112 10:15:32.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.262" endtime="20201112 10:15:32.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.260" endtime="20201112 10:15:32.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.297" endtime="20201112 10:15:32.583"></status>
</kw>
<msg timestamp="20201112 10:15:32.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.295" endtime="20201112 10:15:32.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.587" endtime="20201112 10:15:32.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.596" endtime="20201112 10:15:32.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.293" endtime="20201112 10:15:32.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.291" endtime="20201112 10:15:32.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.603" level="INFO">${RESULT} = [{'time': 0.020418833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9443999999999998e-05, 'source_diff': 2.9443999999999998e-05}, {'time': 0.020457972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:32.599" endtime="20201112 10:15:32.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.617" level="INFO">${ACCURACY} = {'source_diff': [2.9443999999999998e-05, 2.9458000000003037e-05, 2.9153000000000512e-05, 2.944499999999947e-05, 2.9153000000000512e-05, 2.9764000000001567e-05, 2.9763999999998098e-05, 2.91530000000005...</msg>
<status status="PASS" starttime="20201112 10:15:32.604" endtime="20201112 10:15:32.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.621" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.620" endtime="20201112 10:15:32.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.624" level="INFO">VALUE: [2.9443999999999998e-05, 2.9458000000003037e-05, 2.9153000000000512e-05, 2.944499999999947e-05, 2.9153000000000512e-05, 2.9764000000001567e-05, 2.9763999999998098e-05, 2.9153000000000512e-05, 2.9750000000001997e-05, 2.945899999999904e-05, 2.9153000000000512e-05, 2.9180000000000178e-05, 2.918099999999965e-05, 2.8861000000001552e-05, 2.9443999999999998e-05, 2.9166000000000608e-05, 2.9804999999997334e-05, 2.8860999999998083e-05, 2.9749999999998528e-05, 2.9167000000000082e-05, 3.0040999999998014e-05, 2.94309999999999e-05, 2.9166000000000608e-05, 2.9167000000000082e-05, 2.9819999999999847e-05, 2.9360999999998583e-05, 2.9749999999998528e-05, 2.945900000000251e-05, 2.9152000000001038e-05, 2.9207999999999318e-05, 2.8862000000001026e-05, 2.9471999999999138e-05, 2.9167000000000082e-05, 2.944499999999947e-05, 2.9125000000001372e-05, 2.972300000000233e-05, 2.9152000000001038e-05, 2.9167000000000082e-05, 2.9166000000000608e-05, 2.9167000000000082e-05, 2.9457999999999568e-05, 2.9694000000000248e-05, 2.915199999999757e-05, 2.8860999999998083e-05, 2.9750000000001997e-05, 3.0055000000001053e-05, 2.9750000000001997e-05, 2.9180000000000178e-05, 2.9139000000000942e-05, 2.9374999999998153e-05]</msg>
<status status="PASS" starttime="20201112 10:15:32.623" endtime="20201112 10:15:32.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.618" endtime="20201112 10:15:32.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.628" endtime="20201112 10:15:32.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.632" endtime="20201112 10:15:32.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.630" endtime="20201112 10:15:32.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.626" endtime="20201112 10:15:32.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.258" endtime="20201112 10:15:32.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.257" endtime="20201112 10:15:32.653"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.662" endtime="20201112 10:15:32.679"></status>
</kw>
<msg timestamp="20201112 10:15:32.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.660" endtime="20201112 10:15:32.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.681" endtime="20201112 10:15:32.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.683" endtime="20201112 10:15:32.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.657" endtime="20201112 10:15:32.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.655" endtime="20201112 10:15:32.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.694" endtime="20201112 10:15:32.980"></status>
</kw>
<msg timestamp="20201112 10:15:32.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:32.692" endtime="20201112 10:15:32.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:32.984" endtime="20201112 10:15:32.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.993" endtime="20201112 10:15:32.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.689" endtime="20201112 10:15:32.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.688" endtime="20201112 10:15:32.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.000" level="INFO">${RESULT} = [{'time': 0.021297639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.021337806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:32.996" endtime="20201112 10:15:33.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:33.014" level="INFO">${ACCURACY} = {'source_diff': [3.063899999999897e-05, 3.09310000000014e-05, 3.062500000000287e-05, 3.093099999999793e-05, 3.0055000000001053e-05, 3.097200000000064e-05, 3.0347000000000013e-05, 3.0333000000000443e-0...</msg>
<status status="PASS" starttime="20201112 10:15:33.001" endtime="20201112 10:15:33.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.019" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 10:15:33.018" endtime="20201112 10:15:33.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.021" level="INFO">VALUE: [3.063899999999897e-05, 3.09310000000014e-05, 3.062500000000287e-05, 3.093099999999793e-05, 3.0055000000001053e-05, 3.097200000000064e-05, 3.0347000000000013e-05, 3.0333000000000443e-05, 3.063899999999897e-05, 3.065300000000201e-05, 3.066700000000158e-05, 3.063900000000244e-05, 3.0041000000001483e-05, 3.0096999999999763e-05, 3.095800000000107e-05, 3.063899999999897e-05, 3.0055000000001053e-05, 3.0041000000001483e-05, 3.0333000000000443e-05, 3.09440000000015e-05, 3.063899999999897e-05, 3.094399999999803e-05, 3.063800000000297e-05, 3.065299999999854e-05, 3.0388999999998723e-05, 3.0041000000001483e-05, 3.041599999999839e-05, 3.0124999999998903e-05, 3.0347000000000013e-05, 3.094500000000097e-05, 3.09579999999976e-05, 3.0042000000000957e-05, 3.070900000000029e-05, 3.0333000000000443e-05, 3.0611999999999306e-05, 3.095800000000107e-05, 3.0347000000000013e-05, 3.0041999999997487e-05, 3.094399999999803e-05, 3.065300000000201e-05, 3.063899999999897e-05, 2.9985999999999208e-05, 3.065299999999854e-05, 3.065199999999907e-05, 3.063900000000244e-05, 3.066599999999864e-05, 3.0041999999997487e-05, 3.0347000000000013e-05, 3.0333000000000443e-05, 3.0055999999997057e-05]</msg>
<status status="PASS" starttime="20201112 10:15:33.020" endtime="20201112 10:15:33.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.015" endtime="20201112 10:15:33.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.025" endtime="20201112 10:15:33.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.029" endtime="20201112 10:15:33.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.027" endtime="20201112 10:15:33.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.023" endtime="20201112 10:15:33.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.654" endtime="20201112 10:15:33.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.653" endtime="20201112 10:15:33.050"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.059" endtime="20201112 10:15:33.076"></status>
</kw>
<msg timestamp="20201112 10:15:33.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.057" endtime="20201112 10:15:33.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.078" endtime="20201112 10:15:33.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.081" endtime="20201112 10:15:33.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.054" endtime="20201112 10:15:33.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.052" endtime="20201112 10:15:33.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.091" endtime="20201112 10:15:33.378"></status>
</kw>
<msg timestamp="20201112 10:15:33.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021333181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02136475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:33.089" endtime="20201112 10:15:33.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021333181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02136475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:33.382" endtime="20201112 10:15:33.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.391" endtime="20201112 10:15:33.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.087" endtime="20201112 10:15:33.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.085" endtime="20201112 10:15:33.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.398" level="INFO">${RESULT} = [{'time': 0.02136475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1568999999998654e-05, 'source_diff': 3.1568999999998654e-05}, {'time': 0.021403833, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:15:33.394" endtime="20201112 10:15:33.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:33.413" level="INFO">${ACCURACY} = {'source_diff': [3.1568999999998654e-05, 3.1818999999998904e-05, 3.091599999999889e-05, 3.1846999999998044e-05, 3.183300000000194e-05, 3.154199999999899e-05, 3.123600000000046e-05, 3.152799999999942e-...</msg>
<status status="PASS" starttime="20201112 10:15:33.399" endtime="20201112 10:15:33.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.417" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 10:15:33.416" endtime="20201112 10:15:33.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.420" level="INFO">VALUE: [3.1568999999998654e-05, 3.1818999999998904e-05, 3.091599999999889e-05, 3.1846999999998044e-05, 3.183300000000194e-05, 3.154199999999899e-05, 3.123600000000046e-05, 3.152799999999942e-05, 3.183300000000194e-05, 3.151399999999985e-05, 3.1512999999996905e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.123600000000046e-05, 3.154100000000298e-05, 3.155599999999856e-05, 3.125000000000003e-05, 3.154100000000298e-05, 3.1554999999999084e-05, 3.177799999999967e-05, 3.093000000000193e-05, 3.1846999999998044e-05, 3.183399999999795e-05, 3.094500000000097e-05, 3.155599999999856e-05, 3.15700000000016e-05, 3.1526999999999944e-05, 3.09449999999975e-05, 3.098600000000021e-05, 3.154199999999899e-05, 3.1832999999998474e-05, 3.1832999999998474e-05, 3.1832999999998474e-05, 3.183300000000194e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.123600000000046e-05, 3.183300000000194e-05, 3.181999999999838e-05, 3.179199999999924e-05, 3.179200000000271e-05, 3.095800000000107e-05, 3.123599999999699e-05, 3.125000000000003e-05, 3.180599999999881e-05, 3.154199999999899e-05, 3.1526999999999944e-05, 3.154100000000298e-05, 3.1526999999999944e-05, 3.122200000000089e-05]</msg>
<status status="PASS" starttime="20201112 10:15:33.419" endtime="20201112 10:15:33.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.414" endtime="20201112 10:15:33.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.424" endtime="20201112 10:15:33.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.427" endtime="20201112 10:15:33.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.426" endtime="20201112 10:15:33.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.422" endtime="20201112 10:15:33.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.051" endtime="20201112 10:15:33.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.050" endtime="20201112 10:15:33.448"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.457" endtime="20201112 10:15:33.474"></status>
</kw>
<msg timestamp="20201112 10:15:33.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.456" endtime="20201112 10:15:33.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.476" endtime="20201112 10:15:33.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.478" endtime="20201112 10:15:33.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.453" endtime="20201112 10:15:33.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.451" endtime="20201112 10:15:33.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.489" endtime="20201112 10:15:33.774"></status>
</kw>
<msg timestamp="20201112 10:15:33.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021194125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021226236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.487" endtime="20201112 10:15:33.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021194125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021226236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.779" endtime="20201112 10:15:33.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.788" endtime="20201112 10:15:33.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.485" endtime="20201112 10:15:33.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.483" endtime="20201112 10:15:33.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.795" level="INFO">${RESULT} = [{'time': 0.021226236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2110999999997863e-05, 'source_diff': 3.2110999999997863e-05}, {'time': 0.021265167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:33.791" endtime="20201112 10:15:33.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:33.808" level="INFO">${ACCURACY} = {'source_diff': [3.2110999999997863e-05, 3.24310000000029e-05, 3.247199999999867e-05, 3.244399999999953e-05, 3.273699999999796e-05, 3.21519999999971e-05, 3.243099999999943e-05, 3.273600000000196e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:33.796" endtime="20201112 10:15:33.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.813" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 10:15:33.812" endtime="20201112 10:15:33.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.816" level="INFO">VALUE: [3.2110999999997863e-05, 3.24310000000029e-05, 3.247199999999867e-05, 3.244399999999953e-05, 3.273699999999796e-05, 3.21519999999971e-05, 3.243099999999943e-05, 3.273600000000196e-05, 3.272199999999892e-05, 3.273600000000196e-05, 3.272299999999839e-05, 3.2138000000001e-05, 3.242999999999996e-05, 3.273599999999849e-05, 3.2818999999999904e-05, 3.215200000000057e-05, 3.243099999999943e-05, 3.2110999999997863e-05, 3.273600000000196e-05, 3.2112000000000807e-05, 3.242999999999996e-05, 3.242999999999996e-05, 3.213900000000047e-05, 3.273599999999849e-05, 3.218000000000318e-05, 3.273600000000196e-05, 3.243099999999943e-05, 3.274999999999806e-05, 3.219400000000275e-05, 3.211100000000133e-05, 3.273599999999849e-05, 3.247199999999867e-05, 3.272200000000239e-05, 3.242999999999996e-05, 3.241600000000039e-05, 3.2110999999997863e-05, 3.250000000000128e-05, 3.275000000000153e-05, 3.272199999999892e-05, 3.277800000000067e-05, 3.20839999999982e-05, 3.241699999999986e-05, 3.209800000000124e-05, 3.215300000000004e-05, 3.302800000000092e-05, 3.3055000000000584e-05, 3.2138999999997e-05, 3.272299999999839e-05, 3.268000000000021e-05, 3.215300000000004e-05]</msg>
<status status="PASS" starttime="20201112 10:15:33.814" endtime="20201112 10:15:33.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.809" endtime="20201112 10:15:33.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.819" endtime="20201112 10:15:33.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.823" endtime="20201112 10:15:33.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.821" endtime="20201112 10:15:33.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.818" endtime="20201112 10:15:33.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.449" endtime="20201112 10:15:33.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.449" endtime="20201112 10:15:33.844"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.853" endtime="20201112 10:15:33.868"></status>
</kw>
<msg timestamp="20201112 10:15:33.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.851" endtime="20201112 10:15:33.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.870" endtime="20201112 10:15:33.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.872" endtime="20201112 10:15:33.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.849" endtime="20201112 10:15:33.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.847" endtime="20201112 10:15:33.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.883" endtime="20201112 10:15:34.169"></status>
</kw>
<msg timestamp="20201112 10:15:34.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020346861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.881" endtime="20201112 10:15:34.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020346861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.173" endtime="20201112 10:15:34.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.182" endtime="20201112 10:15:34.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.879" endtime="20201112 10:15:34.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.877" endtime="20201112 10:15:34.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.189" level="INFO">${RESULT} = [{'time': 0.020346861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3319000000000404e-05, 'source_diff': 3.3319000000000404e-05}, {'time': 0.020383639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:34.185" endtime="20201112 10:15:34.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.203" level="INFO">${ACCURACY} = {'source_diff': [3.3319000000000404e-05, 3.331999999999988e-05, 3.331999999999988e-05, 3.334799999999902e-05, 3.3305000000000834e-05, 3.3319000000000404e-05, 3.391699999999789e-05, 3.302800000000092e-...</msg>
<status status="PASS" starttime="20201112 10:15:34.190" endtime="20201112 10:15:34.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.208" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.206" endtime="20201112 10:15:34.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.210" level="INFO">VALUE: [3.3319000000000404e-05, 3.331999999999988e-05, 3.331999999999988e-05, 3.334799999999902e-05, 3.3305000000000834e-05, 3.3319000000000404e-05, 3.391699999999789e-05, 3.302800000000092e-05, 3.3027000000001444e-05, 3.391700000000136e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.3332999999999974e-05, 3.331999999999988e-05, 3.302799999999745e-05, 3.361100000000283e-05, 3.333399999999945e-05, 3.3610999999999364e-05, 3.333399999999945e-05, 3.390299999999832e-05, 3.3610999999999364e-05, 3.3624999999998934e-05, 3.302800000000092e-05, 3.3624999999998934e-05, 3.3027000000001444e-05, 3.3332999999999974e-05, 3.302800000000092e-05, 3.3332999999999974e-05, 3.3332999999999974e-05, 3.333399999999945e-05, 3.3332999999999974e-05, 3.302800000000092e-05, 3.297199999999917e-05, 3.302800000000092e-05, 3.3624999999998934e-05, 3.302800000000092e-05, 3.3332999999999974e-05, 3.36250000000024e-05, 3.361199999999884e-05, 3.302800000000092e-05, 3.3610999999999364e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.3388999999998253e-05, 3.302800000000092e-05, 3.361199999999884e-05, 3.301399999999788e-05, 3.324999999999856e-05, 3.3319000000000404e-05]</msg>
<status status="PASS" starttime="20201112 10:15:34.209" endtime="20201112 10:15:34.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.204" endtime="20201112 10:15:34.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.214" endtime="20201112 10:15:34.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.218" endtime="20201112 10:15:34.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.216" endtime="20201112 10:15:34.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.212" endtime="20201112 10:15:34.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.845" endtime="20201112 10:15:34.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.844" endtime="20201112 10:15:34.239"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.248" endtime="20201112 10:15:34.265"></status>
</kw>
<msg timestamp="20201112 10:15:34.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.246" endtime="20201112 10:15:34.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.266" endtime="20201112 10:15:34.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.269" endtime="20201112 10:15:34.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.243" endtime="20201112 10:15:34.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.241" endtime="20201112 10:15:34.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.279" endtime="20201112 10:15:34.566"></status>
</kw>
<msg timestamp="20201112 10:15:34.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021247583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021290708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.278" endtime="20201112 10:15:34.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021247583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021290708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.570" endtime="20201112 10:15:34.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.579" endtime="20201112 10:15:34.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.275" endtime="20201112 10:15:34.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.273" endtime="20201112 10:15:34.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.586" level="INFO">${RESULT} = [{'time': 0.021290708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3124999999998026e-05, 'source_diff': 4.3124999999998026e-05}, {'time': 0.021340722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:34.582" endtime="20201112 10:15:34.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.600" level="INFO">${ACCURACY} = {'source_diff': [4.3124999999998026e-05, 4.252800000000001e-05, 4.2611000000001426e-05, 4.3347000000002606e-05, 4.3194999999999345e-05, 4.272200000000198e-05, 4.2554999999999676e-05, 4.274999999999765...</msg>
<status status="PASS" starttime="20201112 10:15:34.587" endtime="20201112 10:15:34.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.604" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.603" endtime="20201112 10:15:34.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.607" level="INFO">VALUE: [4.3124999999998026e-05, 4.252800000000001e-05, 4.2611000000001426e-05, 4.3347000000002606e-05, 4.3194999999999345e-05, 4.272200000000198e-05, 4.2554999999999676e-05, 4.274999999999765e-05, 4.272199999999851e-05, 4.2639000000000565e-05, 4.2680999999999275e-05, 4.24860000000013e-05, 4.245799999999869e-05, 4.2832999999999066e-05, 4.33059999999999e-05, 4.283400000000201e-05, 4.276400000000069e-05, 4.2944999999999095e-05, 4.2568999999999246e-05, 4.245800000000216e-05, 4.254199999999958e-05, 4.33059999999999e-05, 4.29860000000018e-05, 4.2611000000001426e-05, 4.247200000000173e-05, 4.266600000000023e-05, 4.3111000000001926e-05, 4.2653000000000135e-05, 4.252800000000001e-05, 4.3082999999999316e-05, 4.297199999999876e-05, 4.2554999999999676e-05, 4.2639000000000565e-05, 4.2723000000001454e-05, 4.2611000000001426e-05, 4.3110999999998456e-05, 4.248599999999783e-05, 4.333399999999904e-05, 4.2625000000000995e-05, 4.3138999999997596e-05, 4.2639000000000565e-05, 4.256999999999872e-05, 4.2625000000000995e-05, 4.236199999999718e-05, 4.3125000000001495e-05, 4.2832999999999066e-05, 4.3082999999999316e-05, 4.2861000000001676e-05, 4.266600000000023e-05, 4.327700000000129e-05]</msg>
<status status="PASS" starttime="20201112 10:15:34.605" endtime="20201112 10:15:34.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.601" endtime="20201112 10:15:34.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.611" endtime="20201112 10:15:34.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.614" endtime="20201112 10:15:34.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.613" endtime="20201112 10:15:34.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.609" endtime="20201112 10:15:34.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.239" endtime="20201112 10:15:34.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.239" endtime="20201112 10:15:34.635"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.644" endtime="20201112 10:15:34.662"></status>
</kw>
<msg timestamp="20201112 10:15:34.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.643" endtime="20201112 10:15:34.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.663" endtime="20201112 10:15:34.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.666" endtime="20201112 10:15:34.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.640" endtime="20201112 10:15:34.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.638" endtime="20201112 10:15:34.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.676" endtime="20201112 10:15:34.962"></status>
</kw>
<msg timestamp="20201112 10:15:34.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0211245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:34.675" endtime="20201112 10:15:34.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0211245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:34.967" endtime="20201112 10:15:34.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.975" endtime="20201112 10:15:34.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.672" endtime="20201112 10:15:34.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.670" endtime="20201112 10:15:34.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.982" level="INFO">${RESULT} = [{'time': 0.021168083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3582999999999816e-05, 'source_diff': 4.3582999999999816e-05}, {'time': 0.021219083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:34.979" endtime="20201112 10:15:34.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.997" level="INFO">${ACCURACY} = {'source_diff': [4.3582999999999816e-05, 4.377699999999832e-05, 4.394400000000062e-05, 4.4124999999999026e-05, 4.3833000000000066e-05, 4.3874999999998776e-05, 4.39999999999989e-05, 4.3846999999999636e...</msg>
<status status="PASS" starttime="20201112 10:15:34.984" endtime="20201112 10:15:34.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.002" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.001" endtime="20201112 10:15:35.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.005" level="INFO">VALUE: [4.3582999999999816e-05, 4.377699999999832e-05, 4.394400000000062e-05, 4.4124999999999026e-05, 4.3833000000000066e-05, 4.3874999999998776e-05, 4.39999999999989e-05, 4.3846999999999636e-05, 4.3611000000002426e-05, 4.354200000000058e-05, 4.347200000000273e-05, 4.383399999999954e-05, 4.3431000000000025e-05, 4.426400000000219e-05, 4.4139000000002065e-05, 4.402799999999804e-05, 4.4110999999999456e-05, 4.355600000000015e-05, 4.4360999999999706e-05, 4.366600000000123e-05, 4.417999999999783e-05, 4.344400000000012e-05, 4.4166999999997736e-05, 4.404099999999814e-05, 4.3374999999998276e-05, 4.4333000000000566e-05, 4.4305000000001427e-05, 4.3625000000001996e-05, 4.3389000000001315e-05, 4.355600000000015e-05, 4.3402999999997416e-05, 4.398599999999933e-05, 4.3638999999998096e-05, 4.381999999999997e-05, 4.33059999999999e-05, 4.350000000000187e-05, 4.3958999999999665e-05, 4.384799999999911e-05, 4.379200000000083e-05, 4.359800000000233e-05, 4.381999999999997e-05, 4.374999999999865e-05, 4.3624999999998526e-05, 4.394400000000062e-05, 4.3874999999998776e-05, 4.341600000000098e-05, 4.3596999999999386e-05, 4.3833000000000066e-05, 4.34999999999984e-05, 4.377800000000126e-05]</msg>
<status status="PASS" starttime="20201112 10:15:35.003" endtime="20201112 10:15:35.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.998" endtime="20201112 10:15:35.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.009" endtime="20201112 10:15:35.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:35.012" endtime="20201112 10:15:35.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.011" endtime="20201112 10:15:35.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.007" endtime="20201112 10:15:35.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.636" endtime="20201112 10:15:35.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.636" endtime="20201112 10:15:35.033"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.042" endtime="20201112 10:15:35.059"></status>
</kw>
<msg timestamp="20201112 10:15:35.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.041" endtime="20201112 10:15:35.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.061" endtime="20201112 10:15:35.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.063" endtime="20201112 10:15:35.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.038" endtime="20201112 10:15:35.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.036" endtime="20201112 10:15:35.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.074" endtime="20201112 10:15:35.360"></status>
</kw>
<msg timestamp="20201112 10:15:35.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021157431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.072" endtime="20201112 10:15:35.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021157431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.365" endtime="20201112 10:15:35.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.373" endtime="20201112 10:15:35.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.070" endtime="20201112 10:15:35.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.068" endtime="20201112 10:15:35.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.380" level="INFO">${RESULT} = [{'time': 0.021157431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4945000000001095e-05, 'source_diff': 4.4945000000001095e-05}, {'time': 0.021207431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:35.377" endtime="20201112 10:15:35.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:35.394" level="INFO">${ACCURACY} = {'source_diff': [4.4945000000001095e-05, 4.534799999999714e-05, 4.53060000000019e-05, 4.4403000000001885e-05, 4.44999999999994e-05, 4.51939999999984e-05, 4.516599999999926e-05, 4.4597000000000386e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:35.381" endtime="20201112 10:15:35.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.399" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.398" endtime="20201112 10:15:35.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.401" level="INFO">VALUE: [4.4945000000001095e-05, 4.534799999999714e-05, 4.53060000000019e-05, 4.4403000000001885e-05, 4.44999999999994e-05, 4.51939999999984e-05, 4.516599999999926e-05, 4.4597000000000386e-05, 4.445800000000069e-05, 4.5361000000000706e-05, 4.447200000000026e-05, 4.4610999999999956e-05, 4.498600000000033e-05, 4.476399999999922e-05, 4.4833000000001066e-05, 4.4888999999999346e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.474999999999965e-05, 4.447199999999679e-05, 4.455599999999768e-05, 4.4667000000001705e-05, 4.474999999999965e-05, 4.4902999999998916e-05, 4.4388999999998846e-05, 4.520800000000144e-05, 4.4610999999999956e-05, 4.450000000000287e-05, 4.459699999999692e-05, 4.44999999999994e-05, 4.531899999999853e-05, 4.501399999999947e-05, 4.451400000000244e-05, 4.5180999999998306e-05, 4.529099999999939e-05, 4.522200000000101e-05, 4.4833000000001066e-05, 4.477799999999879e-05, 4.480599999999793e-05, 4.504199999999861e-05, 4.523600000000058e-05, 4.508400000000079e-05, 4.4653000000002135e-05, 4.522199999999754e-05, 4.502799999999904e-05, 4.507000000000122e-05, 4.509800000000036e-05, 4.484699999999717e-05, 4.466599999999876e-05, 4.530499999999896e-05]</msg>
<status status="PASS" starttime="20201112 10:15:35.400" endtime="20201112 10:15:35.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.395" endtime="20201112 10:15:35.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.405" endtime="20201112 10:15:35.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:35.409" endtime="20201112 10:15:35.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.407" endtime="20201112 10:15:35.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.403" endtime="20201112 10:15:35.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.034" endtime="20201112 10:15:35.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.034" endtime="20201112 10:15:35.430"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.439" endtime="20201112 10:15:35.456"></status>
</kw>
<msg timestamp="20201112 10:15:35.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.437" endtime="20201112 10:15:35.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.458" endtime="20201112 10:15:35.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.460" endtime="20201112 10:15:35.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.435" endtime="20201112 10:15:35.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.432" endtime="20201112 10:15:35.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.471" endtime="20201112 10:15:35.758"></status>
</kw>
<msg timestamp="20201112 10:15:35.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.469" endtime="20201112 10:15:35.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.762" endtime="20201112 10:15:35.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.771" endtime="20201112 10:15:35.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.467" endtime="20201112 10:15:35.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.465" endtime="20201112 10:15:35.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.779" level="INFO">${RESULT} = [{'time': 0.021153389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5917000000002955e-05, 'source_diff': 4.5917000000002955e-05}, {'time': 0.021201389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:35.775" endtime="20201112 10:15:35.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:35.793" level="INFO">${ACCURACY} = {'source_diff': [4.5917000000002955e-05, 4.572200000000151e-05, 4.5375000000000276e-05, 4.592999999999958e-05, 4.5889000000000346e-05, 4.625000000000115e-05, 4.580499999999946e-05, 4.5889000000000346e...</msg>
<status status="PASS" starttime="20201112 10:15:35.780" endtime="20201112 10:15:35.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.798" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.797" endtime="20201112 10:15:35.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.800" level="INFO">VALUE: [4.5917000000002955e-05, 4.572200000000151e-05, 4.5375000000000276e-05, 4.592999999999958e-05, 4.5889000000000346e-05, 4.625000000000115e-05, 4.580499999999946e-05, 4.5889000000000346e-05, 4.55000000000004e-05, 4.622200000000201e-05, 4.545799999999822e-05, 4.5875000000000776e-05, 4.5847000000001636e-05, 4.627699999999735e-05, 4.552799999999954e-05, 4.593000000000305e-05, 4.584699999999817e-05, 4.570799999999847e-05, 4.5889000000000346e-05, 4.555599999999868e-05, 4.629199999999986e-05, 4.636099999999824e-05, 4.594399999999915e-05, 4.551399999999997e-05, 4.552800000000301e-05, 4.562499999999706e-05, 4.6166999999999736e-05, 4.5695000000001845e-05, 4.5931000000002525e-05, 4.565200000000019e-05, 4.559699999999792e-05, 4.541599999999951e-05, 4.592999999999958e-05, 4.584699999999817e-05, 4.5583000000001817e-05, 4.580599999999893e-05, 4.595799999999872e-05, 4.6097000000001886e-05, 4.56800000000028e-05, 4.579199999999936e-05, 4.6319999999999e-05, 4.63329999999991e-05, 4.579199999999936e-05, 4.579199999999936e-05, 4.633399999999857e-05, 4.557000000000172e-05, 4.629199999999986e-05, 4.6111000000001456e-05, 4.612499999999756e-05, 4.577799999999979e-05]</msg>
<status status="PASS" starttime="20201112 10:15:35.799" endtime="20201112 10:15:35.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.794" endtime="20201112 10:15:35.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.804" endtime="20201112 10:15:35.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:35.808" endtime="20201112 10:15:35.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.806" endtime="20201112 10:15:35.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.802" endtime="20201112 10:15:35.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.431" endtime="20201112 10:15:35.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.430" endtime="20201112 10:15:35.829"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.838" endtime="20201112 10:15:35.854"></status>
</kw>
<msg timestamp="20201112 10:15:35.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.836" endtime="20201112 10:15:35.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.855" endtime="20201112 10:15:35.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.858" endtime="20201112 10:15:35.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.833" endtime="20201112 10:15:35.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.831" endtime="20201112 10:15:35.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.868" endtime="20201112 10:15:36.154"></status>
</kw>
<msg timestamp="20201112 10:15:36.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.867" endtime="20201112 10:15:36.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.158" endtime="20201112 10:15:36.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.167" endtime="20201112 10:15:36.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.864" endtime="20201112 10:15:36.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.862" endtime="20201112 10:15:36.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.174" level="INFO">${RESULT} = [{'time': 0.020548611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.683300000000307e-05, 'source_diff': 4.683300000000307e-05}, {'time': 0.020599625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:36.170" endtime="20201112 10:15:36.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.188" level="INFO">${ACCURACY} = {'source_diff': [4.683300000000307e-05, 4.706900000000028e-05, 4.680599999999993e-05, 4.6416999999999986e-05, 4.6361000000001706e-05, 4.672199999999904e-05, 4.652799999999707e-05, 4.683399999999907e-0...</msg>
<status status="PASS" starttime="20201112 10:15:36.175" endtime="20201112 10:15:36.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.192" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.191" endtime="20201112 10:15:36.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.195" level="INFO">VALUE: [4.683300000000307e-05, 4.706900000000028e-05, 4.680599999999993e-05, 4.6416999999999986e-05, 4.6361000000001706e-05, 4.672199999999904e-05, 4.652799999999707e-05, 4.683399999999907e-05, 4.727800000000129e-05, 4.6680999999999806e-05, 4.641600000000051e-05, 4.655599999999968e-05, 4.6416999999999986e-05, 4.681900000000003e-05, 4.720799999999997e-05, 4.722199999999954e-05, 4.680500000000046e-05, 4.679099999999742e-05, 4.6653000000000666e-05, 4.655500000000021e-05, 4.6680999999999806e-05, 4.680500000000046e-05, 4.656899999999978e-05, 4.68199999999995e-05, 4.654200000000011e-05, 4.732e-05, 4.7139000000001596e-05, 4.677800000000079e-05, 4.727700000000182e-05, 4.736099999999924e-05, 4.7209000000002915e-05, 4.731899999999706e-05, 4.677700000000132e-05, 4.690200000000144e-05, 4.645799999999922e-05, 4.654100000000064e-05, 4.655499999999674e-05, 4.731900000000053e-05, 4.7153000000001166e-05, 4.668000000000033e-05, 4.6597000000002387e-05, 4.711099999999899e-05, 4.6680999999999806e-05, 4.6944999999999626e-05, 4.672199999999904e-05, 4.680599999999993e-05, 4.640299999999695e-05, 4.6625000000001526e-05, 4.6694999999999376e-05, 4.729200000000086e-05]</msg>
<status status="PASS" starttime="20201112 10:15:36.194" endtime="20201112 10:15:36.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.189" endtime="20201112 10:15:36.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.199" endtime="20201112 10:15:36.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.202" endtime="20201112 10:15:36.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.201" endtime="20201112 10:15:36.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.197" endtime="20201112 10:15:36.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.830" endtime="20201112 10:15:36.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.829" endtime="20201112 10:15:36.223"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.232" endtime="20201112 10:15:36.248"></status>
</kw>
<msg timestamp="20201112 10:15:36.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.231" endtime="20201112 10:15:36.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.249" endtime="20201112 10:15:36.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.252" endtime="20201112 10:15:36.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.228" endtime="20201112 10:15:36.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.226" endtime="20201112 10:15:36.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.262" endtime="20201112 10:15:36.548"></status>
</kw>
<msg timestamp="20201112 10:15:36.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.261" endtime="20201112 10:15:36.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.553" endtime="20201112 10:15:36.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.561" endtime="20201112 10:15:36.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.258" endtime="20201112 10:15:36.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.256" endtime="20201112 10:15:36.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.568" level="INFO">${RESULT} = [{'time': 0.020283597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.793000000000158e-05, 'source_diff': 4.793000000000158e-05}, {'time': 0.020334625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:36.565" endtime="20201112 10:15:36.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.583" level="INFO">${ACCURACY} = {'source_diff': [4.793000000000158e-05, 4.763899999999863e-05, 4.786099999999974e-05, 4.799999999999943e-05, 4.8167000000001736e-05, 4.805600000000118e-05, 4.7889000000002346e-05, 4.830599999999796e-0...</msg>
<status status="PASS" starttime="20201112 10:15:36.569" endtime="20201112 10:15:36.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.588" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.587" endtime="20201112 10:15:36.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.591" level="INFO">VALUE: [4.793000000000158e-05, 4.763899999999863e-05, 4.786099999999974e-05, 4.799999999999943e-05, 4.8167000000001736e-05, 4.805600000000118e-05, 4.7889000000002346e-05, 4.830599999999796e-05, 4.797200000000029e-05, 4.824999999999968e-05, 4.836100000000024e-05, 4.802799999999857e-05, 4.754099999999817e-05, 4.749999999999893e-05, 4.7625000000002526e-05, 4.736099999999924e-05, 4.795800000000072e-05, 4.806900000000128e-05, 4.784700000000017e-05, 4.763899999999863e-05, 4.745800000000022e-05, 4.756900000000078e-05, 4.791699999999802e-05, 4.786099999999974e-05, 4.756900000000078e-05, 4.76529999999982e-05, 4.786099999999974e-05, 4.737499999999881e-05, 4.7403000000001416e-05, 4.7417000000000986e-05, 4.748600000000283e-05, 4.804200000000161e-05, 4.763899999999863e-05, 4.809799999999989e-05, 4.776399999999875e-05, 4.779099999999842e-05, 4.808300000000085e-05, 4.775000000000265e-05, 4.829099999999892e-05, 4.756900000000078e-05, 4.809700000000042e-05, 4.805499999999824e-05, 4.75139999999985e-05, 4.737499999999881e-05, 4.836100000000024e-05, 4.762499999999906e-05, 4.827799999999882e-05, 4.780600000000093e-05, 4.8209000000000446e-05, 4.754200000000111e-05]</msg>
<status status="PASS" starttime="20201112 10:15:36.589" endtime="20201112 10:15:36.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.584" endtime="20201112 10:15:36.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.594" endtime="20201112 10:15:36.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.598" endtime="20201112 10:15:36.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.596" endtime="20201112 10:15:36.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.593" endtime="20201112 10:15:36.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.224" endtime="20201112 10:15:36.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.224" endtime="20201112 10:15:36.619"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.628" endtime="20201112 10:15:36.644"></status>
</kw>
<msg timestamp="20201112 10:15:36.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.626" endtime="20201112 10:15:36.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.646" endtime="20201112 10:15:36.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.648" endtime="20201112 10:15:36.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.624" endtime="20201112 10:15:36.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.621" endtime="20201112 10:15:36.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.659" endtime="20201112 10:15:36.945"></status>
</kw>
<msg timestamp="20201112 10:15:36.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020546806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.657" endtime="20201112 10:15:36.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020546806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.949" endtime="20201112 10:15:36.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.958" endtime="20201112 10:15:36.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.654" endtime="20201112 10:15:36.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.653" endtime="20201112 10:15:36.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.965" level="INFO">${RESULT} = [{'time': 0.020595153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.834700000000067e-05, 'source_diff': 4.834700000000067e-05}, {'time': 0.020653153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:36.961" endtime="20201112 10:15:36.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.979" level="INFO">${ACCURACY} = {'source_diff': [4.834700000000067e-05, 4.907000000000175e-05, 4.930499999999949e-05, 4.904200000000261e-05, 4.931999999999853e-05, 4.937500000000081e-05, 4.841699999999852e-05, 4.900000000000043e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:36.966" endtime="20201112 10:15:36.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.983" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.982" endtime="20201112 10:15:36.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.986" level="INFO">VALUE: [4.834700000000067e-05, 4.907000000000175e-05, 4.930499999999949e-05, 4.904200000000261e-05, 4.931999999999853e-05, 4.937500000000081e-05, 4.841699999999852e-05, 4.900000000000043e-05, 4.849999999999993e-05, 4.890199999999997e-05, 4.929099999999992e-05, 4.837499999999981e-05, 4.920800000000197e-05, 4.848600000000036e-05, 4.937500000000081e-05, 4.872199999999757e-05, 4.925000000000068e-05, 4.8459000000000696e-05, 4.862500000000006e-05, 4.857000000000125e-05, 4.920800000000197e-05, 4.907000000000175e-05, 4.8473000000000266e-05, 4.837499999999981e-05, 4.879199999999889e-05, 4.876399999999975e-05, 4.841699999999852e-05, 4.870800000000147e-05, 4.897199999999782e-05, 4.859700000000092e-05, 4.873600000000061e-05, 4.852799999999907e-05, 4.911100000000099e-05, 4.908299999999838e-05, 4.85139999999995e-05, 4.930499999999949e-05, 4.930600000000243e-05, 4.86529999999992e-05, 4.858300000000135e-05, 4.925000000000068e-05, 4.849999999999993e-05, 4.840299999999895e-05, 4.880599999999846e-05, 4.8945000000001626e-05, 4.8695000000001376e-05, 4.8486999999999836e-05, 4.848600000000036e-05, 4.899999999999696e-05, 4.866600000000276e-05, 4.884700000000117e-05]</msg>
<status status="PASS" starttime="20201112 10:15:36.984" endtime="20201112 10:15:36.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.980" endtime="20201112 10:15:36.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.990" endtime="20201112 10:15:36.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.994" endtime="20201112 10:15:37.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.992" endtime="20201112 10:15:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.988" endtime="20201112 10:15:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.620" endtime="20201112 10:15:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.619" endtime="20201112 10:15:37.015"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.024" endtime="20201112 10:15:37.040"></status>
</kw>
<msg timestamp="20201112 10:15:37.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.022" endtime="20201112 10:15:37.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.042" endtime="20201112 10:15:37.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.045" endtime="20201112 10:15:37.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.019" endtime="20201112 10:15:37.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.017" endtime="20201112 10:15:37.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.055" endtime="20201112 10:15:37.341"></status>
</kw>
<msg timestamp="20201112 10:15:37.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02058475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:37.053" endtime="20201112 10:15:37.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02058475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:37.345" endtime="20201112 10:15:37.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.353" endtime="20201112 10:15:37.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.051" endtime="20201112 10:15:37.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.049" endtime="20201112 10:15:37.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.360" level="INFO">${RESULT} = [{'time': 0.02058475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.969399999999943e-05, 'source_diff': 4.969399999999943e-05}, {'time': 0.020638764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:37.357" endtime="20201112 10:15:37.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:37.374" level="INFO">${ACCURACY} = {'source_diff': [4.969399999999943e-05, 4.983299999999913e-05, 4.991700000000002e-05, 5.013900000000113e-05, 5.006999999999928e-05, 4.931999999999853e-05, 4.954100000000017e-05, 4.954199999999964e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:37.361" endtime="20201112 10:15:37.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.379" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 10:15:37.378" endtime="20201112 10:15:37.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.381" level="INFO">VALUE: [4.969399999999943e-05, 4.983299999999913e-05, 4.991700000000002e-05, 5.013900000000113e-05, 5.006999999999928e-05, 4.931999999999853e-05, 4.954100000000017e-05, 4.954199999999964e-05, 5.018099999999984e-05, 5.008299999999938e-05, 5.033299999999963e-05, 4.961100000000149e-05, 5.011099999999852e-05, 4.952800000000007e-05, 4.937500000000081e-05, 5.030500000000049e-05, 5.013900000000113e-05, 4.976400000000075e-05, 4.954199999999964e-05, 4.936100000000124e-05, 5.018099999999984e-05, 5.019499999999941e-05, 4.980599999999946e-05, 4.975000000000118e-05, 4.990300000000045e-05, 4.943099999999909e-05, 5.006999999999928e-05, 4.988900000000088e-05, 4.993000000000011e-05, 5.031999999999953e-05, 5.029100000000092e-05, 5.026400000000125e-05, 4.959700000000192e-05, 4.98469999999987e-05, 4.950000000000093e-05, 4.944399999999918e-05, 4.98469999999987e-05, 4.940299999999995e-05, 4.976400000000075e-05, 5.012500000000156e-05, 4.957000000000225e-05, 5.0387999999998434e-05, 4.941699999999952e-05, 4.986100000000174e-05, 5.016700000000027e-05, 5.027800000000082e-05, 4.991700000000002e-05, 4.958299999999888e-05, 5.001299999999806e-05, 4.954100000000017e-05]</msg>
<status status="PASS" starttime="20201112 10:15:37.380" endtime="20201112 10:15:37.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.375" endtime="20201112 10:15:37.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.385" endtime="20201112 10:15:37.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.389" endtime="20201112 10:15:37.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.387" endtime="20201112 10:15:37.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.383" endtime="20201112 10:15:37.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.016" endtime="20201112 10:15:37.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.015" endtime="20201112 10:15:37.410"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.419" endtime="20201112 10:15:37.436"></status>
</kw>
<msg timestamp="20201112 10:15:37.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.417" endtime="20201112 10:15:37.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.438" endtime="20201112 10:15:37.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.440" endtime="20201112 10:15:37.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.415" endtime="20201112 10:15:37.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.413" endtime="20201112 10:15:37.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.451" endtime="20201112 10:15:37.737"></status>
</kw>
<msg timestamp="20201112 10:15:37.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020385847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.449" endtime="20201112 10:15:37.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020385847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.741" endtime="20201112 10:15:37.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.750" endtime="20201112 10:15:37.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.447" endtime="20201112 10:15:37.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.445" endtime="20201112 10:15:37.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.757" level="INFO">${RESULT} = [{'time': 0.020385847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.133299999999716e-05, 'source_diff': 5.133299999999716e-05}, {'time': 0.020438847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:37.753" endtime="20201112 10:15:37.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:37.771" level="INFO">${ACCURACY} = {'source_diff': [5.133299999999716e-05, 5.074999999999871e-05, 5.076399999999828e-05, 5.054199999999717e-05, 5.063900000000163e-05, 5.073599999999914e-05, 5.062499999999859e-05, 5.132000000000053e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:37.758" endtime="20201112 10:15:37.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.776" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 10:15:37.774" endtime="20201112 10:15:37.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.778" level="INFO">VALUE: [5.133299999999716e-05, 5.074999999999871e-05, 5.076399999999828e-05, 5.054199999999717e-05, 5.063900000000163e-05, 5.073599999999914e-05, 5.062499999999859e-05, 5.132000000000053e-05, 5.108300000000038e-05, 5.091699999999755e-05, 5.05140000000015e-05, 5.082000000000003e-05, 5.043100000000009e-05, 5.129199999999792e-05, 5.113899999999866e-05, 5.055600000000021e-05, 5.062500000000206e-05, 5.1236999999999117e-05, 5.1137999999999184e-05, 5.058299999999988e-05, 5.0651999999998254e-05, 5.106900000000081e-05, 5.052800000000107e-05, 5.073599999999914e-05, 5.123599999999964e-05, 5.113899999999866e-05, 5.062500000000206e-05, 5.086099999999927e-05, 5.134800000000314e-05, 5.095899999999973e-05, 5.077800000000132e-05, 5.080600000000046e-05, 5.124999999999921e-05, 5.079200000000089e-05, 5.061100000000249e-05, 5.063900000000163e-05, 5.068100000000034e-05, 5.111099999999952e-05, 5.13470000000002e-05, 5.076299999999881e-05, 5.044400000000018e-05, 5.050000000000193e-05, 5.123599999999964e-05, 5.077799999999785e-05, 5.097199999999982e-05, 5.068000000000086e-05, 5.062500000000206e-05, 5.072299999999905e-05, 5.037499999999834e-05, 5.105600000000071e-05]</msg>
<status status="PASS" starttime="20201112 10:15:37.777" endtime="20201112 10:15:37.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.772" endtime="20201112 10:15:37.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.782" endtime="20201112 10:15:37.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.786" endtime="20201112 10:15:37.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.784" endtime="20201112 10:15:37.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.780" endtime="20201112 10:15:37.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.411" endtime="20201112 10:15:37.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.410" endtime="20201112 10:15:37.807"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.817" endtime="20201112 10:15:37.833"></status>
</kw>
<msg timestamp="20201112 10:15:37.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.815" endtime="20201112 10:15:37.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.835" endtime="20201112 10:15:37.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.838" endtime="20201112 10:15:37.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.812" endtime="20201112 10:15:37.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.810" endtime="20201112 10:15:37.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.848" endtime="20201112 10:15:38.135"></status>
</kw>
<msg timestamp="20201112 10:15:38.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021455583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021507528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.847" endtime="20201112 10:15:38.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021455583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021507528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.140" endtime="20201112 10:15:38.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.148" endtime="20201112 10:15:38.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.844" endtime="20201112 10:15:38.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.842" endtime="20201112 10:15:38.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.155" level="INFO">${RESULT} = [{'time': 0.021507528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194500000000116e-05, 'source_diff': 5.194500000000116e-05}, {'time': 0.021568556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:38.151" endtime="20201112 10:15:38.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:38.170" level="INFO">${ACCURACY} = {'source_diff': [5.194500000000116e-05, 5.230599999999849e-05, 5.1679999999998394e-05, 5.152800000000207e-05, 5.204200000000214e-05, 5.156899999999784e-05, 5.1708000000001e-05, 5.2014000000003e-05, 5....</msg>
<status status="PASS" starttime="20201112 10:15:38.156" endtime="20201112 10:15:38.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.175" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 10:15:38.173" endtime="20201112 10:15:38.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.177" level="INFO">VALUE: [5.194500000000116e-05, 5.230599999999849e-05, 5.1679999999998394e-05, 5.152800000000207e-05, 5.204200000000214e-05, 5.156899999999784e-05, 5.1708000000001e-05, 5.2014000000003e-05, 5.1416000000002043e-05, 5.211099999999705e-05, 5.161100000000002e-05, 5.199999999999996e-05, 5.190299999999898e-05, 5.226399999999978e-05, 5.190299999999898e-05, 5.169499999999744e-05, 5.186100000000027e-05, 5.188900000000288e-05, 5.145800000000075e-05, 5.193100000000159e-05, 5.162499999999959e-05, 5.180599999999799e-05, 5.176400000000275e-05, 5.230499999999902e-05, 5.1887999999999934e-05, 5.219400000000193e-05, 5.149999999999946e-05, 5.1901999999999504e-05, 5.207000000000128e-05, 5.193099999999812e-05, 5.176399999999928e-05, 5.166700000000177e-05, 5.148599999999989e-05, 5.16669999999983e-05, 5.177799999999885e-05, 5.204199999999867e-05, 5.184699999999723e-05, 5.165299999999873e-05, 5.148599999999989e-05, 5.229199999999892e-05, 5.158400000000035e-05, 5.194400000000168e-05, 5.207000000000128e-05, 5.219400000000193e-05, 5.1915999999999074e-05, 5.202699999999963e-05, 5.206900000000181e-05, 5.1665999999998824e-05, 5.161100000000002e-05, 5.215299999999923e-05]</msg>
<status status="PASS" starttime="20201112 10:15:38.176" endtime="20201112 10:15:38.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.171" endtime="20201112 10:15:38.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.185" endtime="20201112 10:15:38.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.189" endtime="20201112 10:15:38.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.187" endtime="20201112 10:15:38.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.183" endtime="20201112 10:15:38.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.808" endtime="20201112 10:15:38.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.807" endtime="20201112 10:15:38.210"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.219" endtime="20201112 10:15:38.234"></status>
</kw>
<msg timestamp="20201112 10:15:38.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.217" endtime="20201112 10:15:38.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.236" endtime="20201112 10:15:38.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.239" endtime="20201112 10:15:38.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.215" endtime="20201112 10:15:38.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.212" endtime="20201112 10:15:38.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.249" endtime="20201112 10:15:38.536"></status>
</kw>
<msg timestamp="20201112 10:15:38.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.248" endtime="20201112 10:15:38.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.540" endtime="20201112 10:15:38.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.549" endtime="20201112 10:15:38.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.245" endtime="20201112 10:15:38.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.243" endtime="20201112 10:15:38.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.556" level="INFO">${RESULT} = [{'time': 0.020349264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.261099999999755e-05, 'source_diff': 5.261099999999755e-05}, {'time': 0.020411278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:38.552" endtime="20201112 10:15:38.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:38.569" level="INFO">${ACCURACY} = {'source_diff': [5.261099999999755e-05, 5.290299999999998e-05, 5.272300000000105e-05, 5.3166000000000324e-05, 5.315300000000023e-05, 5.293099999999912e-05, 5.333300000000263e-05, 5.247200000000132e-05...</msg>
<status status="PASS" starttime="20201112 10:15:38.557" endtime="20201112 10:15:38.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.574" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 10:15:38.573" endtime="20201112 10:15:38.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.577" level="INFO">VALUE: [5.261099999999755e-05, 5.290299999999998e-05, 5.272300000000105e-05, 5.3166000000000324e-05, 5.315300000000023e-05, 5.293099999999912e-05, 5.333300000000263e-05, 5.247200000000132e-05, 5.2499999999996994e-05, 5.256899999999884e-05, 5.309699999999848e-05, 5.291699999999955e-05, 5.252800000000307e-05, 5.308299999999891e-05, 5.330500000000002e-05, 5.248600000000089e-05, 5.250000000000046e-05, 5.298600000000139e-05, 5.268100000000234e-05, 5.279200000000289e-05, 5.245800000000175e-05, 5.308399999999838e-05, 5.301400000000053e-05, 5.291699999999955e-05, 5.252700000000013e-05, 5.301400000000053e-05, 5.254199999999917e-05, 5.305499999999977e-05, 5.273600000000114e-05, 5.333299999999916e-05, 5.259699999999798e-05, 5.305499999999977e-05, 5.297200000000182e-05, 5.245800000000175e-05, 5.261099999999755e-05, 5.238899999999991e-05, 5.254199999999917e-05, 5.308300000000238e-05, 5.2749999999997244e-05, 5.280499999999952e-05, 5.24730000000008e-05, 5.330599999999949e-05, 5.330599999999949e-05, 5.333399999999863e-05, 5.337500000000134e-05, 5.286100000000127e-05, 5.277700000000038e-05, 5.237499999999687e-05, 5.272200000000157e-05, 5.2457999999998284e-05]</msg>
<status status="PASS" starttime="20201112 10:15:38.575" endtime="20201112 10:15:38.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.570" endtime="20201112 10:15:38.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.580" endtime="20201112 10:15:38.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.584" endtime="20201112 10:15:38.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.582" endtime="20201112 10:15:38.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.579" endtime="20201112 10:15:38.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.211" endtime="20201112 10:15:38.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.210" endtime="20201112 10:15:38.605"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.614" endtime="20201112 10:15:38.631"></status>
</kw>
<msg timestamp="20201112 10:15:38.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.612" endtime="20201112 10:15:38.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.632" endtime="20201112 10:15:38.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.635" endtime="20201112 10:15:38.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.610" endtime="20201112 10:15:38.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.608" endtime="20201112 10:15:38.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.646" endtime="20201112 10:15:38.932"></status>
</kw>
<msg timestamp="20201112 10:15:38.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020589708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:38.644" endtime="20201112 10:15:38.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020589708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:38.936" endtime="20201112 10:15:38.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.945" endtime="20201112 10:15:38.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.641" endtime="20201112 10:15:38.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.639" endtime="20201112 10:15:38.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.952" level="INFO">${RESULT} = [{'time': 0.020644, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4291999999997453e-05, 'source_diff': 5.4291999999997453e-05}, {'time': 0.020707, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201112 10:15:38.948" endtime="20201112 10:15:38.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:38.965" level="INFO">${ACCURACY} = {'source_diff': [5.4291999999997453e-05, 5.406900000000034e-05, 5.405599999999677e-05, 5.4221999999999604e-05, 5.369499999999944e-05, 5.390299999999751e-05, 5.341700000000005e-05, 5.409799999999895e-0...</msg>
<status status="PASS" starttime="20201112 10:15:38.953" endtime="20201112 10:15:38.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.970" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 10:15:38.969" endtime="20201112 10:15:38.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.973" level="INFO">VALUE: [5.4291999999997453e-05, 5.406900000000034e-05, 5.405599999999677e-05, 5.4221999999999604e-05, 5.369499999999944e-05, 5.390299999999751e-05, 5.341700000000005e-05, 5.409799999999895e-05, 5.41670000000008e-05, 5.394499999999969e-05, 5.388900000000141e-05, 5.3929999999997175e-05, 5.4151999999998285e-05, 5.402700000000163e-05, 5.423600000000264e-05, 5.379099999999748e-05, 5.415300000000123e-05, 5.4013999999998064e-05, 5.3721999999999104e-05, 5.3693999999999964e-05, 5.381900000000009e-05, 5.41670000000008e-05, 5.430600000000049e-05, 5.4221999999999604e-05, 5.36670000000003e-05, 5.433399999999963e-05, 5.361100000000202e-05, 5.348700000000137e-05, 5.380599999999999e-05, 5.348600000000189e-05, 5.354200000000017e-05, 5.406900000000034e-05, 5.3999999999998494e-05, 5.3666000000000824e-05, 5.4027999999997633e-05, 5.361099999999855e-05, 5.358299999999941e-05, 5.38470000000027e-05, 5.415299999999776e-05, 5.359699999999898e-05, 5.381900000000009e-05, 5.43609999999993e-05, 5.358299999999941e-05, 5.356999999999931e-05, 5.354200000000017e-05, 5.437499999999887e-05, 5.380599999999999e-05, 5.379100000000095e-05, 5.355599999999974e-05, 5.379200000000042e-05]</msg>
<status status="PASS" starttime="20201112 10:15:38.971" endtime="20201112 10:15:38.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.966" endtime="20201112 10:15:38.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.976" endtime="20201112 10:15:38.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.980" endtime="20201112 10:15:39.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.978" endtime="20201112 10:15:39.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.975" endtime="20201112 10:15:39.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.606" endtime="20201112 10:15:39.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.605" endtime="20201112 10:15:39.001"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.010" endtime="20201112 10:15:39.027"></status>
</kw>
<msg timestamp="20201112 10:15:39.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.009" endtime="20201112 10:15:39.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.029" endtime="20201112 10:15:39.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.031" endtime="20201112 10:15:39.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.006" endtime="20201112 10:15:39.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.004" endtime="20201112 10:15:39.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.042" endtime="20201112 10:15:39.328"></status>
</kw>
<msg timestamp="20201112 10:15:39.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.040" endtime="20201112 10:15:39.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.332" endtime="20201112 10:15:39.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.341" endtime="20201112 10:15:39.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.038" endtime="20201112 10:15:39.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.036" endtime="20201112 10:15:39.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:39.348" level="INFO">${RESULT} = [{'time': 0.020470833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4694000000000964e-05, 'source_diff': 5.4694000000000964e-05}, {'time': 0.020529847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:39.345" endtime="20201112 10:15:39.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:39.362" level="INFO">${ACCURACY} = {'source_diff': [5.4694000000000964e-05, 5.483300000000066e-05, 5.513899999999919e-05, 5.505500000000177e-05, 5.4708000000000534e-05, 5.458300000000041e-05, 5.454200000000117e-05, 5.4999999999999494e-...</msg>
<status status="PASS" starttime="20201112 10:15:39.349" endtime="20201112 10:15:39.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.367" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 10:15:39.366" endtime="20201112 10:15:39.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.369" level="INFO">VALUE: [5.4694000000000964e-05, 5.483300000000066e-05, 5.513899999999919e-05, 5.505500000000177e-05, 5.4708000000000534e-05, 5.458300000000041e-05, 5.454200000000117e-05, 5.4999999999999494e-05, 5.509700000000048e-05, 5.5137999999999715e-05, 5.504200000000167e-05, 5.438899999999844e-05, 5.472299999999958e-05, 5.488900000000241e-05, 5.437499999999887e-05, 5.455599999999727e-05, 5.501299999999959e-05, 5.501400000000253e-05, 5.458300000000041e-05, 5.527800000000235e-05, 5.4958000000000784e-05, 5.454099999999823e-05, 5.4985999999999924e-05, 5.440299999999801e-05, 5.476400000000228e-05, 5.4471999999999854e-05, 5.477800000000185e-05, 5.4999999999999494e-05, 5.4735999999999674e-05, 5.461099999999955e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.533400000000063e-05, 5.448700000000237e-05, 5.4513999999998564e-05, 5.5263999999999314e-05, 5.481899999999762e-05, 5.4972000000000354e-05, 5.4985999999999924e-05, 5.527800000000235e-05, 5.516699999999833e-05, 5.501400000000253e-05, 5.509700000000048e-05, 5.455599999999727e-05, 5.447299999999933e-05, 5.481999999999709e-05, 5.4985999999999924e-05, 5.53610000000003e-05, 5.463899999999869e-05, 5.4513999999998564e-05]</msg>
<status status="PASS" starttime="20201112 10:15:39.368" endtime="20201112 10:15:39.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.363" endtime="20201112 10:15:39.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.373" endtime="20201112 10:15:39.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:39.377" endtime="20201112 10:15:39.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.375" endtime="20201112 10:15:39.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.372" endtime="20201112 10:15:39.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.002" endtime="20201112 10:15:39.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.002" endtime="20201112 10:15:39.398"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.407" endtime="20201112 10:15:39.424"></status>
</kw>
<msg timestamp="20201112 10:15:39.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.405" endtime="20201112 10:15:39.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.426" endtime="20201112 10:15:39.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.428" endtime="20201112 10:15:39.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.403" endtime="20201112 10:15:39.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.400" endtime="20201112 10:15:39.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.439" endtime="20201112 10:15:39.725"></status>
</kw>
<msg timestamp="20201112 10:15:39.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.437" endtime="20201112 10:15:39.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.729" endtime="20201112 10:15:39.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.738" endtime="20201112 10:15:39.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.434" endtime="20201112 10:15:39.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.433" endtime="20201112 10:15:39.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:39.745" level="INFO">${RESULT} = [{'time': 0.020383833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6179999999999425e-05, 'source_diff': 5.6179999999999425e-05}, {'time': 0.020441819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:39.741" endtime="20201112 10:15:39.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:39.760" level="INFO">${ACCURACY} = {'source_diff': [5.6179999999999425e-05, 5.5736000000000674e-05, 5.6193999999998995e-05, 5.5499999999999994e-05, 5.6236000000001174e-05, 5.5458000000001284e-05, 5.5777999999999384e-05, 5.6166999999999...</msg>
<status status="PASS" starttime="20201112 10:15:39.746" endtime="20201112 10:15:39.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.765" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 10:15:39.764" endtime="20201112 10:15:39.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.767" level="INFO">VALUE: [5.6179999999999425e-05, 5.5736000000000674e-05, 5.6193999999998995e-05, 5.5499999999999994e-05, 5.6236000000001174e-05, 5.5458000000001284e-05, 5.5777999999999384e-05, 5.616699999999933e-05, 5.541700000000205e-05, 5.5722000000001104e-05, 5.5777999999999384e-05, 5.541699999999858e-05, 5.570900000000101e-05, 5.613900000000019e-05, 5.559800000000045e-05, 5.544500000000119e-05, 5.538899999999944e-05, 5.615299999999976e-05, 5.558300000000141e-05, 5.584700000000123e-05, 5.60549999999993e-05, 5.537499999999987e-05, 5.561100000000055e-05, 5.6221999999998135e-05, 5.5750000000000244e-05, 5.613900000000019e-05, 5.629200000000292e-05, 5.565299999999926e-05, 5.547300000000033e-05, 5.562500000000012e-05, 5.563899999999969e-05, 5.58749999999969e-05, 5.615299999999976e-05, 5.612499999999715e-05, 5.5499999999999994e-05, 5.556900000000184e-05, 5.634700000000173e-05, 5.60549999999993e-05, 5.551400000000303e-05, 5.6207999999998565e-05, 5.58610000000008e-05, 5.604200000000267e-05, 5.5736000000000674e-05, 5.541700000000205e-05, 5.590299999999951e-05, 5.6222000000001604e-05, 5.608400000000138e-05, 5.565299999999926e-05, 5.5791999999998954e-05, 5.6291999999999454e-05]</msg>
<status status="PASS" starttime="20201112 10:15:39.766" endtime="20201112 10:15:39.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.761" endtime="20201112 10:15:39.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.771" endtime="20201112 10:15:39.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:39.775" endtime="20201112 10:15:39.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.773" endtime="20201112 10:15:39.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.769" endtime="20201112 10:15:39.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.399" endtime="20201112 10:15:39.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.398" endtime="20201112 10:15:39.796"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.805" endtime="20201112 10:15:39.822"></status>
</kw>
<msg timestamp="20201112 10:15:39.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.803" endtime="20201112 10:15:39.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.823" endtime="20201112 10:15:39.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.826" endtime="20201112 10:15:39.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.801" endtime="20201112 10:15:39.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.798" endtime="20201112 10:15:39.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.838" endtime="20201112 10:15:40.124"></status>
</kw>
<msg timestamp="20201112 10:15:40.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.836" endtime="20201112 10:15:40.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.129" endtime="20201112 10:15:40.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.137" endtime="20201112 10:15:40.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.833" endtime="20201112 10:15:40.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.831" endtime="20201112 10:15:40.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:40.144" level="INFO">${RESULT} = [{'time': 0.020387514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.688899999999747e-05, 'source_diff': 5.688899999999747e-05}, {'time': 0.020448486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:40.141" endtime="20201112 10:15:40.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:40.158" level="INFO">${ACCURACY} = {'source_diff': [5.688899999999747e-05, 5.6429999999999675e-05, 5.715299999999729e-05, 5.6971999999998885e-05, 5.713900000000119e-05, 5.6485999999997955e-05, 5.641699999999958e-05, 5.66809999999994e-0...</msg>
<status status="PASS" starttime="20201112 10:15:40.145" endtime="20201112 10:15:40.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.163" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 10:15:40.162" endtime="20201112 10:15:40.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.165" level="INFO">VALUE: [5.688899999999747e-05, 5.6429999999999675e-05, 5.715299999999729e-05, 5.6971999999998885e-05, 5.713900000000119e-05, 5.6485999999997955e-05, 5.641699999999958e-05, 5.66809999999994e-05, 5.6902000000001035e-05, 5.666699999999983e-05, 5.661100000000155e-05, 5.711099999999858e-05, 5.680500000000005e-05, 5.716700000000033e-05, 5.661100000000155e-05, 5.71809999999999e-05, 5.6735999999998205e-05, 5.7235999999998705e-05, 5.640300000000001e-05, 5.6957999999999315e-05, 5.712499999999815e-05, 5.716700000000033e-05, 5.6957999999999315e-05, 5.7306000000000024e-05, 5.7319999999999593e-05, 5.6457999999998815e-05, 5.6764000000000814e-05, 5.734799999999873e-05, 5.6637999999997746e-05, 5.694500000000269e-05, 5.662500000000112e-05, 5.6749999999997774e-05, 5.7235999999998705e-05, 5.665300000000026e-05, 5.681900000000309e-05, 5.65549999999998e-05, 5.6679999999999925e-05, 5.6999999999998024e-05, 5.688900000000094e-05, 5.733299999999969e-05, 5.7055999999999774e-05, 5.712500000000162e-05, 5.658400000000188e-05, 5.638900000000044e-05, 5.658299999999894e-05, 5.727700000000141e-05, 5.684799999999823e-05, 5.706899999999987e-05, 5.712500000000162e-05, 5.680500000000005e-05]</msg>
<status status="PASS" starttime="20201112 10:15:40.164" endtime="20201112 10:15:40.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.159" endtime="20201112 10:15:40.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.169" endtime="20201112 10:15:40.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:40.173" endtime="20201112 10:15:40.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.171" endtime="20201112 10:15:40.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.168" endtime="20201112 10:15:40.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.797" endtime="20201112 10:15:40.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.796" endtime="20201112 10:15:40.194"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.203" endtime="20201112 10:15:40.221"></status>
</kw>
<msg timestamp="20201112 10:15:40.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.201" endtime="20201112 10:15:40.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.222" endtime="20201112 10:15:40.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.225" endtime="20201112 10:15:40.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.199" endtime="20201112 10:15:40.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.197" endtime="20201112 10:15:40.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.235" endtime="20201112 10:15:40.521"></status>
</kw>
<msg timestamp="20201112 10:15:40.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020513875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.234" endtime="20201112 10:15:40.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020513875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.525" endtime="20201112 10:15:40.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.534" endtime="20201112 10:15:40.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.231" endtime="20201112 10:15:40.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.229" endtime="20201112 10:15:40.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:40.541" level="INFO">${RESULT} = [{'time': 0.020513875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.743100000000015e-05, 'source_diff': 5.743100000000015e-05}, {'time': 0.020579875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:40.537" endtime="20201112 10:15:40.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:40.555" level="INFO">${ACCURACY} = {'source_diff': [5.743100000000015e-05, 5.7792000000000954e-05, 5.833299999999722e-05, 5.78749999999989e-05, 5.765299999999779e-05, 5.7721999999999635e-05, 5.741700000000058e-05, 5.8028000000001634e-0...</msg>
<status status="PASS" starttime="20201112 10:15:40.542" endtime="20201112 10:15:40.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.559" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 10:15:40.558" endtime="20201112 10:15:40.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.562" level="INFO">VALUE: [5.743100000000015e-05, 5.7792000000000954e-05, 5.833299999999722e-05, 5.78749999999989e-05, 5.765299999999779e-05, 5.7721999999999635e-05, 5.741700000000058e-05, 5.8028000000001634e-05, 5.7806000000000524e-05, 5.8041999999997734e-05, 5.808300000000044e-05, 5.8013999999998594e-05, 5.7637999999998746e-05, 5.7916000000001605e-05, 5.779100000000148e-05, 5.8277999999998414e-05, 5.818099999999743e-05, 5.784699999999976e-05, 5.759699999999951e-05, 5.8208000000000565e-05, 5.7486000000002424e-05, 5.8042000000001204e-05, 5.816699999999786e-05, 5.815300000000176e-05, 5.815299999999829e-05, 5.815299999999829e-05, 5.786099999999933e-05, 5.788900000000194e-05, 5.759700000000298e-05, 5.7708000000000065e-05, 5.801299999999912e-05, 5.763900000000169e-05, 5.813900000000219e-05, 5.7694000000000495e-05, 5.830499999999808e-05, 5.83749999999994e-05, 5.73610000000023e-05, 5.7500000000001994e-05, 5.8306000000001024e-05, 5.811099999999958e-05, 5.7957999999996845e-05, 5.7583999999999413e-05, 5.811099999999958e-05, 5.741700000000058e-05, 5.7999999999999025e-05, 5.804100000000173e-05, 5.73749999999984e-05, 5.759700000000298e-05, 5.831900000000112e-05, 5.8056000000000774e-05]</msg>
<status status="PASS" starttime="20201112 10:15:40.561" endtime="20201112 10:15:40.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.556" endtime="20201112 10:15:40.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.566" endtime="20201112 10:15:40.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:40.569" endtime="20201112 10:15:40.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.568" endtime="20201112 10:15:40.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.564" endtime="20201112 10:15:40.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.195" endtime="20201112 10:15:40.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.194" endtime="20201112 10:15:40.590"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.600" endtime="20201112 10:15:40.618"></status>
</kw>
<msg timestamp="20201112 10:15:40.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.598" endtime="20201112 10:15:40.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.619" endtime="20201112 10:15:40.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.622" endtime="20201112 10:15:40.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.595" endtime="20201112 10:15:40.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.593" endtime="20201112 10:15:40.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.632" endtime="20201112 10:15:40.918"></status>
</kw>
<msg timestamp="20201112 10:15:40.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020584681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020643708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.631" endtime="20201112 10:15:40.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020584681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020643708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.923" endtime="20201112 10:15:40.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.931" endtime="20201112 10:15:40.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.628" endtime="20201112 10:15:40.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.626" endtime="20201112 10:15:40.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:40.938" level="INFO">${RESULT} = [{'time': 0.020643708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.902699999999969e-05, 'source_diff': 5.902699999999969e-05}, {'time': 0.020709722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:40.934" endtime="20201112 10:15:40.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:40.951" level="INFO">${ACCURACY} = {'source_diff': [5.902699999999969e-05, 5.880499999999858e-05, 5.934700000000126e-05, 5.8513999999999095e-05, 5.8777999999998914e-05, 5.8777999999998914e-05, 5.890300000000251e-05, 5.9027999999999164e...</msg>
<status status="PASS" starttime="20201112 10:15:40.939" endtime="20201112 10:15:40.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.956" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 10:15:40.955" endtime="20201112 10:15:40.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.958" level="INFO">VALUE: [5.902699999999969e-05, 5.880499999999858e-05, 5.934700000000126e-05, 5.8513999999999095e-05, 5.8777999999998914e-05, 5.8777999999998914e-05, 5.890300000000251e-05, 5.9027999999999164e-05, 5.9055999999998304e-05, 5.8805999999998054e-05, 5.869500000000097e-05, 5.866700000000183e-05, 5.936100000000083e-05, 5.888900000000294e-05, 5.8944000000001745e-05, 5.880499999999858e-05, 5.8472000000000385e-05, 5.904099999999926e-05, 5.943100000000215e-05, 5.8429999999998206e-05, 5.9042000000002204e-05, 5.888900000000294e-05, 5.9278000000002884e-05, 5.9000000000000025e-05, 5.916700000000233e-05, 5.9056000000001774e-05, 5.895900000000079e-05, 5.838899999999897e-05, 5.915299999999929e-05, 5.8986000000000455e-05, 5.898699999999993e-05, 5.8749999999999775e-05, 5.884700000000076e-05, 5.908299999999797e-05, 5.886100000000033e-05, 5.9165999999999386e-05, 5.861100000000008e-05, 5.880499999999858e-05, 5.9221999999997665e-05, 5.888899999999947e-05, 5.8485999999999955e-05, 5.866700000000183e-05, 5.895900000000079e-05, 5.8806000000001524e-05, 5.841700000000158e-05, 5.8834000000000664e-05, 5.8597999999999983e-05, 5.931900000000212e-05, 5.8749999999999775e-05, 5.8736000000000205e-05]</msg>
<status status="PASS" starttime="20201112 10:15:40.957" endtime="20201112 10:15:40.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.952" endtime="20201112 10:15:40.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.962" endtime="20201112 10:15:40.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:40.965" endtime="20201112 10:15:40.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.964" endtime="20201112 10:15:40.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.960" endtime="20201112 10:15:40.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.591" endtime="20201112 10:15:40.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.591" endtime="20201112 10:15:40.986"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.995" endtime="20201112 10:15:41.012"></status>
</kw>
<msg timestamp="20201112 10:15:41.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.993" endtime="20201112 10:15:41.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.013" endtime="20201112 10:15:41.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.016" endtime="20201112 10:15:41.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.991" endtime="20201112 10:15:41.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.989" endtime="20201112 10:15:41.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.026" endtime="20201112 10:15:41.318"></status>
</kw>
<msg timestamp="20201112 10:15:41.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.024" endtime="20201112 10:15:41.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.327" endtime="20201112 10:15:41.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.346" endtime="20201112 10:15:41.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.022" endtime="20201112 10:15:41.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.020" endtime="20201112 10:15:41.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.360" level="INFO">${RESULT} = [{'time': 0.019916139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9471999999997915e-05, 'source_diff': 5.9471999999997915e-05}, {'time': 0.019985125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:41.353" endtime="20201112 10:15:41.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:41.390" level="INFO">${ACCURACY} = {'source_diff': [5.9471999999997915e-05, 5.938899999999997e-05, 5.9514000000000095e-05, 5.9541999999999234e-05, 6.034700000000226e-05, 5.937499999999693e-05, 6.031899999999965e-05, 5.9916000000000136e...</msg>
<status status="PASS" starttime="20201112 10:15:41.362" endtime="20201112 10:15:41.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.394" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 10:15:41.393" endtime="20201112 10:15:41.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.397" level="INFO">VALUE: [5.9471999999997915e-05, 5.938899999999997e-05, 5.9514000000000095e-05, 5.9541999999999234e-05, 6.034700000000226e-05, 5.937499999999693e-05, 6.031899999999965e-05, 5.9916000000000136e-05, 5.970899999999807e-05, 5.958300000000194e-05, 5.93750000000004e-05, 5.981900000000262e-05, 5.9679999999999456e-05, 6.0193999999999526e-05, 6.0222000000002135e-05, 5.95689999999989e-05, 5.9791999999999484e-05, 5.991699999999961e-05, 5.95689999999989e-05, 5.9972000000001885e-05, 5.963900000000022e-05, 6.0320000000002594e-05, 5.9820000000002094e-05, 5.991700000000308e-05, 6.0305999999999554e-05, 5.954099999999976e-05, 5.9458000000001815e-05, 5.962500000000065e-05, 5.9457999999998346e-05, 5.9458000000001815e-05, 5.9722000000001635e-05, 5.9777999999999915e-05, 5.9443999999998776e-05, 5.9444000000002245e-05, 5.98750000000009e-05, 5.9305999999998554e-05, 5.9806000000002524e-05, 6.016699999999986e-05, 5.9679999999999456e-05, 6.009700000000201e-05, 5.9819999999998624e-05, 5.938899999999997e-05, 6.034699999999879e-05, 5.983300000000219e-05, 5.986100000000133e-05, 6.002700000000069e-05, 5.9500000000000525e-05, 5.9986000000001455e-05, 5.9514000000000095e-05, 5.9777999999999915e-05]</msg>
<status status="PASS" starttime="20201112 10:15:41.395" endtime="20201112 10:15:41.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.390" endtime="20201112 10:15:41.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.400" endtime="20201112 10:15:41.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:41.404" endtime="20201112 10:15:41.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.402" endtime="20201112 10:15:41.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.399" endtime="20201112 10:15:41.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.987" endtime="20201112 10:15:41.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.987" endtime="20201112 10:15:41.424"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.433" endtime="20201112 10:15:41.449"></status>
</kw>
<msg timestamp="20201112 10:15:41.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.431" endtime="20201112 10:15:41.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.451" endtime="20201112 10:15:41.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.453" endtime="20201112 10:15:41.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.429" endtime="20201112 10:15:41.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.427" endtime="20201112 10:15:41.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.463" endtime="20201112 10:15:41.748"></status>
</kw>
<msg timestamp="20201112 10:15:41.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.462" endtime="20201112 10:15:41.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.752" endtime="20201112 10:15:41.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.761" endtime="20201112 10:15:41.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.459" endtime="20201112 10:15:41.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.457" endtime="20201112 10:15:41.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.767" level="INFO">${RESULT} = [{'time': 0.019929403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.03889999999975e-05, 'source_diff': 6.03889999999975e-05}, {'time': 0.019999389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:41.764" endtime="20201112 10:15:41.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:41.781" level="INFO">${ACCURACY} = {'source_diff': [6.03889999999975e-05, 6.059699999999904e-05, 6.0736000000002205e-05, 6.0708000000003065e-05, 6.0500000000001525e-05, 6.0542000000000235e-05, 6.0499999999998055e-05, 6.0443999999999776...</msg>
<status status="PASS" starttime="20201112 10:15:41.768" endtime="20201112 10:15:41.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.785" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 10:15:41.784" endtime="20201112 10:15:41.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.788" level="INFO">VALUE: [6.03889999999975e-05, 6.059699999999904e-05, 6.0736000000002205e-05, 6.0708000000003065e-05, 6.0500000000001525e-05, 6.0542000000000235e-05, 6.0499999999998055e-05, 6.0443999999999776e-05, 6.0833999999999194e-05, 6.104100000000126e-05, 6.0721999999999166e-05, 6.054100000000076e-05, 6.040300000000054e-05, 6.0514000000001095e-05, 6.0722000000002635e-05, 6.0957999999999846e-05, 6.112500000000215e-05, 6.0763999999997875e-05, 6.111099999999911e-05, 6.1013999999998125e-05, 6.048700000000143e-05, 6.066700000000036e-05, 6.109799999999901e-05, 6.112499999999868e-05, 6.0944000000000276e-05, 6.1013999999998125e-05, 6.083299999999972e-05, 6.0764000000001345e-05, 6.127800000000141e-05, 6.061100000000208e-05, 6.0944000000000276e-05, 6.066700000000036e-05, 6.134699999999979e-05, 6.127799999999795e-05, 6.0443999999999776e-05, 6.0819999999999624e-05, 6.0555999999999804e-05, 6.113899999999825e-05, 6.0415999999997166e-05, 6.112499999999868e-05, 6.090299999999757e-05, 6.0930000000000706e-05, 6.08750000000019e-05, 6.054100000000076e-05, 6.118000000000096e-05, 6.0763999999997875e-05, 6.062499999999818e-05, 6.0764000000001345e-05, 6.059699999999904e-05, 6.134799999999926e-05]</msg>
<status status="PASS" starttime="20201112 10:15:41.786" endtime="20201112 10:15:41.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.782" endtime="20201112 10:15:41.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.791" endtime="20201112 10:15:41.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:41.795" endtime="20201112 10:15:41.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.793" endtime="20201112 10:15:41.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.790" endtime="20201112 10:15:41.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.425" endtime="20201112 10:15:41.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.425" endtime="20201112 10:15:41.816"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.824" endtime="20201112 10:15:41.842"></status>
</kw>
<msg timestamp="20201112 10:15:41.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.823" endtime="20201112 10:15:41.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.843" endtime="20201112 10:15:41.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.846" endtime="20201112 10:15:41.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.820" endtime="20201112 10:15:41.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.818" endtime="20201112 10:15:41.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.856" endtime="20201112 10:15:42.141"></status>
</kw>
<msg timestamp="20201112 10:15:42.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.854" endtime="20201112 10:15:42.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.145" endtime="20201112 10:15:42.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.154" endtime="20201112 10:15:42.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.852" endtime="20201112 10:15:42.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.850" endtime="20201112 10:15:42.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:42.160" level="INFO">${RESULT} = [{'time': 0.019824236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.169399999999756e-05, 'source_diff': 6.169399999999756e-05}, {'time': 0.019893264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:42.157" endtime="20201112 10:15:42.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:42.174" level="INFO">${ACCURACY} = {'source_diff': [6.169399999999756e-05, 6.17499999999993e-05, 6.223600000000024e-05, 6.209700000000054e-05, 6.176399999999888e-05, 6.18340000000002e-05, 6.20699999999974e-05, 6.199999999999956e-05, 6....</msg>
<status status="PASS" starttime="20201112 10:15:42.161" endtime="20201112 10:15:42.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.178" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 10:15:42.177" endtime="20201112 10:15:42.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.181" level="INFO">VALUE: [6.169399999999756e-05, 6.17499999999993e-05, 6.223600000000024e-05, 6.209700000000054e-05, 6.176399999999888e-05, 6.18340000000002e-05, 6.20699999999974e-05, 6.199999999999956e-05, 6.157000000000037e-05, 6.168099999999746e-05, 6.181900000000115e-05, 6.148600000000295e-05, 6.168000000000146e-05, 6.199999999999956e-05, 6.195800000000085e-05, 6.20829999999975e-05, 6.229200000000198e-05, 6.222200000000067e-05, 6.183300000000072e-05, 6.207000000000087e-05, 6.234699999999732e-05, 6.148599999999949e-05, 6.184800000000323e-05, 6.197299999999989e-05, 6.158399999999994e-05, 6.231900000000165e-05, 6.223600000000024e-05, 6.145800000000035e-05, 6.161099999999961e-05, 6.231899999999818e-05, 6.137499999999893e-05, 6.194400000000128e-05, 6.204199999999827e-05, 6.17499999999993e-05, 6.166700000000136e-05, 6.204199999999827e-05, 6.15560000000008e-05, 6.187499999999943e-05, 6.1888000000003e-05, 6.186099999999986e-05, 6.179099999999854e-05, 6.144500000000025e-05, 6.162500000000265e-05, 6.173599999999974e-05, 6.230499999999861e-05, 6.176400000000234e-05, 6.184699999999682e-05, 6.22089999999971e-05, 6.187499999999943e-05, 6.140299999999807e-05]</msg>
<status status="PASS" starttime="20201112 10:15:42.179" endtime="20201112 10:15:42.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.175" endtime="20201112 10:15:42.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.184" endtime="20201112 10:15:42.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:42.188" endtime="20201112 10:15:42.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.186" endtime="20201112 10:15:42.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.183" endtime="20201112 10:15:42.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.817" endtime="20201112 10:15:42.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.816" endtime="20201112 10:15:42.209"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.217" endtime="20201112 10:15:42.235"></status>
</kw>
<msg timestamp="20201112 10:15:42.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.216" endtime="20201112 10:15:42.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.237" endtime="20201112 10:15:42.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.239" endtime="20201112 10:15:42.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.213" endtime="20201112 10:15:42.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.211" endtime="20201112 10:15:42.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.249" endtime="20201112 10:15:42.533"></status>
</kw>
<msg timestamp="20201112 10:15:42.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.247" endtime="20201112 10:15:42.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.538" endtime="20201112 10:15:42.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.546" endtime="20201112 10:15:42.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.245" endtime="20201112 10:15:42.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.243" endtime="20201112 10:15:42.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:42.553" level="INFO">${RESULT} = [{'time': 0.019772347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.333299999999875e-05, 'source_diff': 6.333299999999875e-05}, {'time': 0.019843319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:42.549" endtime="20201112 10:15:42.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:42.566" level="INFO">${ACCURACY} = {'source_diff': [6.333299999999875e-05, 6.302700000000022e-05, 6.287500000000043e-05, 6.326400000000038e-05, 6.311099999999764e-05, 6.334699999999832e-05, 6.279199999999902e-05, 6.30690000000024e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:42.554" endtime="20201112 10:15:42.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.570" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 10:15:42.569" endtime="20201112 10:15:42.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.573" level="INFO">VALUE: [6.333299999999875e-05, 6.302700000000022e-05, 6.287500000000043e-05, 6.326400000000038e-05, 6.311099999999764e-05, 6.334699999999832e-05, 6.279199999999902e-05, 6.30690000000024e-05, 6.300000000000056e-05, 6.337500000000093e-05, 6.258300000000147e-05, 6.313900000000025e-05, 6.280600000000205e-05, 6.326400000000038e-05, 6.304199999999927e-05, 6.301300000000065e-05, 6.248699999999996e-05, 6.279200000000248e-05, 6.27630000000004e-05, 6.323599999999777e-05, 6.309800000000101e-05, 6.287500000000043e-05, 6.313900000000025e-05, 6.287500000000043e-05, 6.245799999999788e-05, 6.305599999999884e-05, 6.323600000000124e-05, 6.286099999999739e-05, 6.30829999999985e-05, 6.312500000000068e-05, 6.262500000000018e-05, 6.251399999999963e-05, 6.272299999999717e-05, 6.294400000000228e-05, 6.269400000000203e-05, 6.277699999999997e-05, 6.280499999999911e-05, 6.242999999999874e-05, 6.280599999999859e-05, 6.294500000000175e-05, 6.23889999999995e-05, 6.273599999999727e-05, 6.251399999999963e-05, 6.283300000000172e-05, 6.261100000000061e-05, 6.317999999999949e-05, 6.279200000000248e-05, 6.308399999999798e-05, 6.302700000000022e-05, 6.248699999999996e-05]</msg>
<status status="PASS" starttime="20201112 10:15:42.572" endtime="20201112 10:15:42.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.567" endtime="20201112 10:15:42.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.577" endtime="20201112 10:15:42.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:42.580" endtime="20201112 10:15:42.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.578" endtime="20201112 10:15:42.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.575" endtime="20201112 10:15:42.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.209" endtime="20201112 10:15:42.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.209" endtime="20201112 10:15:42.601"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.610" endtime="20201112 10:15:42.626"></status>
</kw>
<msg timestamp="20201112 10:15:42.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.608" endtime="20201112 10:15:42.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.628" endtime="20201112 10:15:42.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.630" endtime="20201112 10:15:42.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.605" endtime="20201112 10:15:42.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.603" endtime="20201112 10:15:42.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.640" endtime="20201112 10:15:42.927"></status>
</kw>
<msg timestamp="20201112 10:15:42.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.639" endtime="20201112 10:15:42.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.931" endtime="20201112 10:15:42.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.939" endtime="20201112 10:15:42.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.636" endtime="20201112 10:15:42.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.634" endtime="20201112 10:15:42.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:42.946" level="INFO">${RESULT} = [{'time': 0.019929722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.393000000000024e-05, 'source_diff': 6.393000000000024e-05}, {'time': 0.019998681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:42.943" endtime="20201112 10:15:42.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:42.961" level="INFO">${ACCURACY} = {'source_diff': [6.393000000000024e-05, 6.348700000000096e-05, 6.424999999999834e-05, 6.430600000000009e-05, 6.37219999999987e-05, 6.388800000000153e-05, 6.401400000000113e-05, 6.383299999999925e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:42.947" endtime="20201112 10:15:42.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.965" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 10:15:42.964" endtime="20201112 10:15:42.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.968" level="INFO">VALUE: [6.393000000000024e-05, 6.348700000000096e-05, 6.424999999999834e-05, 6.430600000000009e-05, 6.37219999999987e-05, 6.388800000000153e-05, 6.401400000000113e-05, 6.383299999999925e-05, 6.430500000000061e-05, 6.379200000000002e-05, 6.341699999999964e-05, 6.42500000000018e-05, 6.379200000000002e-05, 6.359700000000204e-05, 6.366699999999989e-05, 6.358399999999848e-05, 6.37089999999986e-05, 6.372300000000164e-05, 6.355499999999986e-05, 6.361199999999761e-05, 6.39439999999998e-05, 6.393000000000024e-05, 6.356899999999943e-05, 6.329100000000004e-05, 6.367999999999999e-05, 6.387500000000143e-05, 6.37500000000013e-05, 6.415300000000082e-05, 6.343099999999921e-05, 6.433299999999975e-05, 6.350000000000106e-05, 6.434700000000279e-05, 6.377800000000045e-05, 6.380599999999959e-05, 6.42500000000018e-05, 6.361099999999814e-05, 6.381899999999968e-05, 6.39439999999998e-05, 6.424999999999834e-05, 6.370799999999913e-05, 6.347199999999845e-05, 6.405500000000036e-05, 6.37219999999987e-05, 6.383299999999925e-05, 6.433399999999923e-05, 6.427800000000095e-05, 6.40280000000007e-05, 6.399999999999809e-05, 6.347200000000192e-05, 6.359799999999804e-05]</msg>
<status status="PASS" starttime="20201112 10:15:42.966" endtime="20201112 10:15:42.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.962" endtime="20201112 10:15:42.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.971" endtime="20201112 10:15:42.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:42.975" endtime="20201112 10:15:42.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.973" endtime="20201112 10:15:42.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.970" endtime="20201112 10:15:42.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.602" endtime="20201112 10:15:42.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.601" endtime="20201112 10:15:42.996"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.004" endtime="20201112 10:15:43.022"></status>
</kw>
<msg timestamp="20201112 10:15:43.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.003" endtime="20201112 10:15:43.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.024" endtime="20201112 10:15:43.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.026" endtime="20201112 10:15:43.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.000" endtime="20201112 10:15:43.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.998" endtime="20201112 10:15:43.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.036" endtime="20201112 10:15:43.321"></status>
</kw>
<msg timestamp="20201112 10:15:43.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02012325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:43.035" endtime="20201112 10:15:43.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02012325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:43.325" endtime="20201112 10:15:43.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.334" endtime="20201112 10:15:43.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.032" endtime="20201112 10:15:43.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.031" endtime="20201112 10:15:43.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.340" level="INFO">${RESULT} = [{'time': 0.02012325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.47219999999997e-05, 'source_diff': 6.47219999999997e-05}, {'time': 0.020195264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:15:43.337" endtime="20201112 10:15:43.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:43.354" level="INFO">${ACCURACY} = {'source_diff': [6.47219999999997e-05, 6.520800000000063e-05, 6.444500000000325e-05, 6.530600000000109e-05, 6.513900000000225e-05, 6.463900000000175e-05, 6.473599999999927e-05, 6.502799999999823e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:43.341" endtime="20201112 10:15:43.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.358" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 10:15:43.357" endtime="20201112 10:15:43.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.361" level="INFO">VALUE: [6.47219999999997e-05, 6.520800000000063e-05, 6.444500000000325e-05, 6.530600000000109e-05, 6.513900000000225e-05, 6.463900000000175e-05, 6.473599999999927e-05, 6.502799999999823e-05, 6.444499999999978e-05, 6.47219999999997e-05, 6.50830000000005e-05, 6.499999999999909e-05, 6.476400000000188e-05, 6.456900000000043e-05, 6.517999999999802e-05, 6.523599999999977e-05, 6.480600000000059e-05, 6.441700000000064e-05, 6.480600000000059e-05, 6.534700000000032e-05, 6.465300000000132e-05, 6.486099999999939e-05, 6.518100000000096e-05, 6.440300000000107e-05, 6.48479999999993e-05, 6.483300000000025e-05, 6.467999999999752e-05, 6.49440000000008e-05, 6.533300000000075e-05, 6.4583e-05, 6.451399999999816e-05, 6.465300000000132e-05, 6.524999999999934e-05, 6.484699999999982e-05, 6.484699999999982e-05, 6.476400000000188e-05, 6.509800000000301e-05, 6.466700000000089e-05, 6.498699999999899e-05, 6.474999999999884e-05, 6.486099999999939e-05, 6.437499999999846e-05, 6.462499999999871e-05, 6.479100000000154e-05, 6.502799999999823e-05, 6.47219999999997e-05, 6.45419999999973e-05, 6.474999999999884e-05, 6.437499999999846e-05, 6.511099999999964e-05]</msg>
<status status="PASS" starttime="20201112 10:15:43.359" endtime="20201112 10:15:43.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.355" endtime="20201112 10:15:43.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.368" endtime="20201112 10:15:43.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:43.371" endtime="20201112 10:15:43.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.370" endtime="20201112 10:15:43.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.366" endtime="20201112 10:15:43.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.997" endtime="20201112 10:15:43.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.996" endtime="20201112 10:15:43.392"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.401" endtime="20201112 10:15:43.419"></status>
</kw>
<msg timestamp="20201112 10:15:43.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.400" endtime="20201112 10:15:43.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.421" endtime="20201112 10:15:43.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.423" endtime="20201112 10:15:43.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.397" endtime="20201112 10:15:43.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.395" endtime="20201112 10:15:43.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.433" endtime="20201112 10:15:43.719"></status>
</kw>
<msg timestamp="20201112 10:15:43.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020100556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.432" endtime="20201112 10:15:43.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020100556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.723" endtime="20201112 10:15:43.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.732" endtime="20201112 10:15:43.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.429" endtime="20201112 10:15:43.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.428" endtime="20201112 10:15:43.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.738" level="INFO">${RESULT} = [{'time': 0.020100556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.58480000000003e-05, 'source_diff': 6.58480000000003e-05}, {'time': 0.020170569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:43.735" endtime="20201112 10:15:43.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:43.752" level="INFO">${ACCURACY} = {'source_diff': [6.58480000000003e-05, 6.542999999999827e-05, 6.588800000000006e-05, 6.636099999999742e-05, 6.631899999999871e-05, 6.600000000000009e-05, 6.55280000000022e-05, 6.588899999999953e-05, 6...</msg>
<status status="PASS" starttime="20201112 10:15:43.739" endtime="20201112 10:15:43.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.756" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 10:15:43.755" endtime="20201112 10:15:43.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.759" level="INFO">VALUE: [6.58480000000003e-05, 6.542999999999827e-05, 6.588800000000006e-05, 6.636099999999742e-05, 6.631899999999871e-05, 6.600000000000009e-05, 6.55280000000022e-05, 6.588899999999953e-05, 6.630499999999914e-05, 6.636100000000089e-05, 6.62639999999999e-05, 6.555600000000134e-05, 6.561100000000014e-05, 6.558400000000048e-05, 6.586199999999987e-05, 6.60700000000014e-05, 6.551299999999968e-05, 6.549999999999959e-05, 6.581900000000168e-05, 6.630599999999862e-05, 6.595800000000138e-05, 6.55969999999971e-05, 6.634699999999785e-05, 6.559700000000057e-05, 6.631899999999871e-05, 6.563899999999928e-05, 6.53479999999998e-05, 6.613899999999978e-05, 6.633400000000123e-05, 6.615299999999935e-05, 6.541700000000164e-05, 6.632000000000166e-05, 6.601400000000313e-05, 6.542999999999827e-05, 6.633300000000175e-05, 6.572199999999723e-05, 6.62639999999999e-05, 6.579199999999855e-05, 6.588899999999953e-05, 6.611100000000064e-05, 6.591699999999867e-05, 6.593099999999824e-05, 6.543100000000121e-05, 6.597200000000095e-05, 6.634699999999785e-05, 6.64159999999997e-05, 6.615300000000282e-05, 6.622199999999773e-05, 6.623600000000077e-05, 6.608299999999803e-05]</msg>
<status status="PASS" starttime="20201112 10:15:43.757" endtime="20201112 10:15:43.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.753" endtime="20201112 10:15:43.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.762" endtime="20201112 10:15:43.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:43.766" endtime="20201112 10:15:43.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.764" endtime="20201112 10:15:43.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.761" endtime="20201112 10:15:43.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.393" endtime="20201112 10:15:43.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.393" endtime="20201112 10:15:43.787"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.795" endtime="20201112 10:15:43.812"></status>
</kw>
<msg timestamp="20201112 10:15:43.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.794" endtime="20201112 10:15:43.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.814" endtime="20201112 10:15:43.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.816" endtime="20201112 10:15:43.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.791" endtime="20201112 10:15:43.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.789" endtime="20201112 10:15:43.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.826" endtime="20201112 10:15:44.112"></status>
</kw>
<msg timestamp="20201112 10:15:44.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020071361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.825" endtime="20201112 10:15:44.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020071361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.116" endtime="20201112 10:15:44.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.125" endtime="20201112 10:15:44.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.822" endtime="20201112 10:15:44.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.821" endtime="20201112 10:15:44.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.131" level="INFO">${RESULT} = [{'time': 0.020071361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.713900000000078e-05, 'source_diff': 6.713900000000078e-05}, {'time': 0.020145333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:44.128" endtime="20201112 10:15:44.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:44.145" level="INFO">${ACCURACY} = {'source_diff': [6.713900000000078e-05, 6.648600000000102e-05, 6.679100000000007e-05, 6.673600000000127e-05, 6.686099999999792e-05, 6.706999999999894e-05, 6.733299999999928e-05, 6.730599999999962e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:44.132" endtime="20201112 10:15:44.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.149" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 10:15:44.148" endtime="20201112 10:15:44.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.152" level="INFO">VALUE: [6.713900000000078e-05, 6.648600000000102e-05, 6.679100000000007e-05, 6.673600000000127e-05, 6.686099999999792e-05, 6.706999999999894e-05, 6.733299999999928e-05, 6.730599999999962e-05, 6.701400000000066e-05, 6.691700000000314e-05, 6.67090000000016e-05, 6.723600000000177e-05, 6.679199999999955e-05, 6.708299999999903e-05, 6.656899999999896e-05, 6.637500000000046e-05, 6.655499999999939e-05, 6.69160000000002e-05, 6.658299999999853e-05, 6.67359999999978e-05, 6.708299999999903e-05, 6.734699999999885e-05, 6.724999999999787e-05, 6.652799999999973e-05, 6.72640000000009e-05, 6.67220000000017e-05, 6.712499999999774e-05, 6.733399999999876e-05, 6.68480000000013e-05, 6.651300000000068e-05, 6.679100000000007e-05, 6.670799999999866e-05, 6.720800000000263e-05, 6.679100000000007e-05, 6.677799999999998e-05, 6.67359999999978e-05, 6.711100000000164e-05, 6.69030000000001e-05, 6.684699999999835e-05, 6.72229999999982e-05, 6.682000000000216e-05, 6.654099999999982e-05, 6.718099999999949e-05, 6.645900000000135e-05, 6.709799999999808e-05, 6.64029999999996e-05, 6.655499999999939e-05, 6.700000000000109e-05, 6.652799999999973e-05, 6.70830000000025e-05]</msg>
<status status="PASS" starttime="20201112 10:15:44.150" endtime="20201112 10:15:44.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.146" endtime="20201112 10:15:44.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.155" endtime="20201112 10:15:44.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.159" endtime="20201112 10:15:44.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.157" endtime="20201112 10:15:44.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.154" endtime="20201112 10:15:44.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.788" endtime="20201112 10:15:44.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.787" endtime="20201112 10:15:44.180"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.188" endtime="20201112 10:15:44.206"></status>
</kw>
<msg timestamp="20201112 10:15:44.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.187" endtime="20201112 10:15:44.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.207" endtime="20201112 10:15:44.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.210" endtime="20201112 10:15:44.212"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.184" endtime="20201112 10:15:44.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.182" endtime="20201112 10:15:44.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.220" endtime="20201112 10:15:44.506"></status>
</kw>
<msg timestamp="20201112 10:15:44.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.218" endtime="20201112 10:15:44.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.510" endtime="20201112 10:15:44.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.518" endtime="20201112 10:15:44.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.216" endtime="20201112 10:15:44.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.214" endtime="20201112 10:15:44.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.525" level="INFO">${RESULT} = [{'time': 0.020270278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.830600000000062e-05, 'source_diff': 6.830600000000062e-05}, {'time': 0.020347278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:44.522" endtime="20201112 10:15:44.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:44.540" level="INFO">${ACCURACY} = {'source_diff': [6.830600000000062e-05, 6.783399999999926e-05, 6.777800000000098e-05, 6.799999999999862e-05, 6.747299999999845e-05, 6.777800000000098e-05, 6.827699999999853e-05, 6.80969999999996e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:44.526" endtime="20201112 10:15:44.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.544" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 10:15:44.543" endtime="20201112 10:15:44.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.546" level="INFO">VALUE: [6.830600000000062e-05, 6.783399999999926e-05, 6.777800000000098e-05, 6.799999999999862e-05, 6.747299999999845e-05, 6.777800000000098e-05, 6.827699999999853e-05, 6.80969999999996e-05, 6.829100000000157e-05, 6.834699999999985e-05, 6.820800000000016e-05, 6.781900000000021e-05, 6.830500000000114e-05, 6.812499999999874e-05, 6.832000000000019e-05, 6.766700000000042e-05, 6.791599999999773e-05, 6.77220000000027e-05, 6.79030000000011e-05, 6.745900000000235e-05, 6.756999999999944e-05, 6.790199999999816e-05, 6.795799999999991e-05, 6.781900000000021e-05, 6.756899999999996e-05, 6.744399999999984e-05, 6.750000000000159e-05, 6.773600000000227e-05, 6.762500000000171e-05, 6.738899999999756e-05, 6.791700000000067e-05, 6.819500000000006e-05, 6.773600000000227e-05, 6.813900000000178e-05, 6.776399999999794e-05, 6.765199999999791e-05, 6.79160000000012e-05, 6.751300000000168e-05, 6.800000000000209e-05, 6.780500000000064e-05, 6.836099999999942e-05, 6.829200000000105e-05, 6.744399999999984e-05, 6.787499999999849e-05, 6.813899999999831e-05, 6.7583999999999e-05, 6.827800000000148e-05, 6.801399999999819e-05, 6.750000000000159e-05, 6.741700000000017e-05]</msg>
<status status="PASS" starttime="20201112 10:15:44.545" endtime="20201112 10:15:44.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.540" endtime="20201112 10:15:44.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.550" endtime="20201112 10:15:44.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.554" endtime="20201112 10:15:44.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.552" endtime="20201112 10:15:44.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.548" endtime="20201112 10:15:44.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.181" endtime="20201112 10:15:44.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.180" endtime="20201112 10:15:44.574"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.583" endtime="20201112 10:15:44.600"></status>
</kw>
<msg timestamp="20201112 10:15:44.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.582" endtime="20201112 10:15:44.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.601" endtime="20201112 10:15:44.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.604" endtime="20201112 10:15:44.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.579" endtime="20201112 10:15:44.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.577" endtime="20201112 10:15:44.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.614" endtime="20201112 10:15:44.899"></status>
</kw>
<msg timestamp="20201112 10:15:44.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.612" endtime="20201112 10:15:44.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.903" endtime="20201112 10:15:44.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.912" endtime="20201112 10:15:44.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.610" endtime="20201112 10:15:44.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.608" endtime="20201112 10:15:44.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.920" level="INFO">${RESULT} = [{'time': 0.019791292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.876399999999894e-05, 'source_diff': 6.876399999999894e-05}, {'time': 0.019870292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:44.916" endtime="20201112 10:15:44.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:44.933" level="INFO">${ACCURACY} = {'source_diff': [6.876399999999894e-05, 6.934800000000033e-05, 6.905600000000137e-05, 6.924999999999987e-05, 6.919399999999812e-05, 6.852699999999878e-05, 6.857000000000044e-05, 6.901399999999919e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:44.921" endtime="20201112 10:15:44.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.938" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 10:15:44.937" endtime="20201112 10:15:44.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.940" level="INFO">VALUE: [6.876399999999894e-05, 6.934800000000033e-05, 6.905600000000137e-05, 6.924999999999987e-05, 6.919399999999812e-05, 6.852699999999878e-05, 6.857000000000044e-05, 6.901399999999919e-05, 6.909699999999713e-05, 6.899999999999962e-05, 6.901399999999919e-05, 6.868100000000099e-05, 6.840299999999813e-05, 6.879200000000155e-05, 6.925000000000334e-05, 6.87640000000024e-05, 6.920799999999769e-05, 6.926299999999996e-05, 6.852699999999878e-05, 6.906899999999799e-05, 6.927699999999953e-05, 6.924999999999987e-05, 6.930499999999867e-05, 6.89299999999983e-05, 6.901400000000266e-05, 6.84030000000016e-05, 6.937499999999999e-05, 6.840299999999813e-05, 6.886099999999992e-05, 6.912499999999974e-05, 6.90840000000005e-05, 6.927799999999901e-05, 6.882000000000069e-05, 6.905499999999842e-05, 6.905499999999842e-05, 6.869400000000109e-05, 6.858300000000053e-05, 6.884700000000035e-05, 6.915299999999888e-05, 6.865299999999838e-05, 6.845800000000041e-05, 6.938899999999956e-05, 6.849999999999912e-05, 6.85559999999974e-05, 6.859799999999958e-05, 6.930599999999815e-05, 6.854099999999835e-05, 6.843000000000127e-05, 6.894400000000134e-05, 6.861099999999967e-05]</msg>
<status status="PASS" starttime="20201112 10:15:44.939" endtime="20201112 10:15:44.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.934" endtime="20201112 10:15:44.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.944" endtime="20201112 10:15:44.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.947" endtime="20201112 10:15:44.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.946" endtime="20201112 10:15:44.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.942" endtime="20201112 10:15:44.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.575" endtime="20201112 10:15:44.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.575" endtime="20201112 10:15:44.968"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.977" endtime="20201112 10:15:44.993"></status>
</kw>
<msg timestamp="20201112 10:15:44.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.975" endtime="20201112 10:15:44.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.995" endtime="20201112 10:15:44.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.997" endtime="20201112 10:15:45.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.972" endtime="20201112 10:15:45.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.970" endtime="20201112 10:15:45.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.007" endtime="20201112 10:15:45.293"></status>
</kw>
<msg timestamp="20201112 10:15:45.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.006" endtime="20201112 10:15:45.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.297" endtime="20201112 10:15:45.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.305" endtime="20201112 10:15:45.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.003" endtime="20201112 10:15:45.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.001" endtime="20201112 10:15:45.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:45.312" level="INFO">${RESULT} = [{'time': 0.019772472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.97360000000008e-05, 'source_diff': 6.97360000000008e-05}, {'time': 0.019849486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:45.309" endtime="20201112 10:15:45.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:45.325" level="INFO">${ACCURACY} = {'source_diff': [6.97360000000008e-05, 6.951399999999969e-05, 7.013900000000031e-05, 6.980499999999917e-05, 6.956900000000196e-05, 6.981899999999874e-05, 6.976399999999994e-05, 6.952799999999926e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:45.313" endtime="20201112 10:15:45.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.330" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 10:15:45.329" endtime="20201112 10:15:45.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.332" level="INFO">VALUE: [6.97360000000008e-05, 6.951399999999969e-05, 7.013900000000031e-05, 6.980499999999917e-05, 6.956900000000196e-05, 6.981899999999874e-05, 6.976399999999994e-05, 6.952799999999926e-05, 7.001400000000019e-05, 6.991599999999973e-05, 7.031900000000271e-05, 7.023700000000077e-05, 7.040300000000013e-05, 7.013799999999737e-05, 6.947200000000098e-05, 6.940299999999913e-05, 6.984700000000135e-05, 7.026400000000044e-05, 6.955499999999892e-05, 7.019499999999859e-05, 7.004199999999933e-05, 6.943100000000174e-05, 6.994499999999834e-05, 6.959800000000058e-05, 6.961100000000067e-05, 7.020799999999869e-05, 7.013900000000031e-05, 6.972200000000123e-05, 7.008299999999856e-05, 6.950000000000012e-05, 7.018000000000302e-05, 6.976399999999994e-05, 7.036099999999795e-05, 6.963899999999981e-05, 7.029199999999958e-05, 6.998600000000105e-05, 7.00970000000016e-05, 7.03620000000009e-05, 6.976399999999994e-05, 7.005600000000237e-05, 7.023700000000077e-05, 7.02499999999974e-05, 6.941599999999923e-05, 6.977700000000003e-05, 6.981899999999874e-05, 7.006899999999899e-05, 6.982000000000169e-05, 7.020799999999869e-05, 7.026400000000044e-05, 7.033299999999881e-05]</msg>
<status status="PASS" starttime="20201112 10:15:45.331" endtime="20201112 10:15:45.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.326" endtime="20201112 10:15:45.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.336" endtime="20201112 10:15:45.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:45.339" endtime="20201112 10:15:45.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.338" endtime="20201112 10:15:45.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.334" endtime="20201112 10:15:45.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.969" endtime="20201112 10:15:45.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.968" endtime="20201112 10:15:45.360"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.369" endtime="20201112 10:15:45.387"></status>
</kw>
<msg timestamp="20201112 10:15:45.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.367" endtime="20201112 10:15:45.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.388" endtime="20201112 10:15:45.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.391" endtime="20201112 10:15:45.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.365" endtime="20201112 10:15:45.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.363" endtime="20201112 10:15:45.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.400" endtime="20201112 10:15:45.685"></status>
</kw>
<msg timestamp="20201112 10:15:45.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020641889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.399" endtime="20201112 10:15:45.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020641889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.689" endtime="20201112 10:15:45.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.697" endtime="20201112 10:15:45.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.396" endtime="20201112 10:15:45.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.395" endtime="20201112 10:15:45.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:45.704" level="INFO">${RESULT} = [{'time': 0.020641889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.036100000000142e-05, 'source_diff': 7.036100000000142e-05}, {'time': 0.020715889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:45.700" endtime="20201112 10:15:45.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:45.717" level="INFO">${ACCURACY} = {'source_diff': [7.036100000000142e-05, 7.131999999999972e-05, 7.069500000000256e-05, 7.081899999999974e-05, 7.109800000000208e-05, 7.077699999999756e-05, 7.095799999999944e-05, 7.122199999999926e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:45.705" endtime="20201112 10:15:45.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.722" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 10:15:45.721" endtime="20201112 10:15:45.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.724" level="INFO">VALUE: [7.036100000000142e-05, 7.131999999999972e-05, 7.069500000000256e-05, 7.081899999999974e-05, 7.109800000000208e-05, 7.077699999999756e-05, 7.095799999999944e-05, 7.122199999999926e-05, 7.119400000000012e-05, 7.06109999999982e-05, 7.063899999999734e-05, 7.048600000000155e-05, 7.04169999999997e-05, 7.127799999999754e-05, 7.102800000000076e-05, 7.09170000000002e-05, 7.050000000000112e-05, 7.048600000000155e-05, 7.081999999999922e-05, 7.066599999999701e-05, 7.069499999999909e-05, 7.115300000000088e-05, 7.097200000000248e-05, 7.113900000000131e-05, 7.131900000000024e-05, 7.073599999999833e-05, 7.084699999999888e-05, 7.088899999999759e-05, 7.05689999999995e-05, 7.065300000000038e-05, 7.111100000000217e-05, 7.133399999999929e-05, 7.091599999999726e-05, 7.081999999999922e-05, 7.06109999999982e-05, 7.079099999999713e-05, 7.108300000000303e-05, 7.038899999999709e-05, 7.083299999999931e-05, 7.062499999999777e-05, 7.127800000000101e-05, 7.086100000000192e-05, 7.115300000000088e-05, 7.066699999999995e-05, 7.076400000000094e-05, 7.072299999999823e-05, 7.134800000000233e-05, 7.081999999999922e-05, 7.05689999999995e-05, 7.088900000000106e-05]</msg>
<status status="PASS" starttime="20201112 10:15:45.723" endtime="20201112 10:15:45.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.718" endtime="20201112 10:15:45.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.728" endtime="20201112 10:15:45.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:45.731" endtime="20201112 10:15:45.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.730" endtime="20201112 10:15:45.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.726" endtime="20201112 10:15:45.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.361" endtime="20201112 10:15:45.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.361" endtime="20201112 10:15:45.752"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.761" endtime="20201112 10:15:45.779"></status>
</kw>
<msg timestamp="20201112 10:15:45.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.759" endtime="20201112 10:15:45.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.780" endtime="20201112 10:15:45.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.783" endtime="20201112 10:15:45.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.757" endtime="20201112 10:15:45.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.754" endtime="20201112 10:15:45.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.793" endtime="20201112 10:15:46.079"></status>
</kw>
<msg timestamp="20201112 10:15:46.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.791" endtime="20201112 10:15:46.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.083" endtime="20201112 10:15:46.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.091" endtime="20201112 10:15:46.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.789" endtime="20201112 10:15:46.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.787" endtime="20201112 10:15:46.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.098" level="INFO">${RESULT} = [{'time': 0.020023167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.187500000000249e-05, 'source_diff': 7.187500000000249e-05}, {'time': 0.020099125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:46.094" endtime="20201112 10:15:46.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:46.112" level="INFO">${ACCURACY} = {'source_diff': [7.187500000000249e-05, 7.166699999999748e-05, 7.149999999999865e-05, 7.165300000000138e-05, 7.208300000000056e-05, 7.154199999999736e-05, 7.143100000000027e-05, 7.166700000000095e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:46.099" endtime="20201112 10:15:46.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.117" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 10:15:46.116" endtime="20201112 10:15:46.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.119" level="INFO">VALUE: [7.187500000000249e-05, 7.166699999999748e-05, 7.149999999999865e-05, 7.165300000000138e-05, 7.208300000000056e-05, 7.154199999999736e-05, 7.143100000000027e-05, 7.166700000000095e-05, 7.204099999999838e-05, 7.215199999999894e-05, 7.216700000000145e-05, 7.197200000000001e-05, 7.17910000000016e-05, 7.231900000000124e-05, 7.220800000000069e-05, 7.177800000000151e-05, 7.229199999999811e-05, 7.213900000000231e-05, 7.147199999999951e-05, 7.230600000000115e-05, 7.198599999999958e-05, 7.232000000000072e-05, 7.17230000000027e-05, 7.2069000000001e-05, 7.16109999999992e-05, 7.227800000000201e-05, 7.227700000000253e-05, 7.22910000000021e-05, 7.147199999999951e-05, 7.152799999999779e-05, 7.190300000000163e-05, 7.162499999999877e-05, 7.177799999999804e-05, 7.148599999999908e-05, 7.138799999999862e-05, 7.207000000000047e-05, 7.184699999999988e-05, 7.158399999999954e-05, 7.213799999999937e-05, 7.202699999999881e-05, 7.16109999999992e-05, 7.226399999999897e-05, 7.14300000000008e-05, 7.231900000000124e-05, 7.143100000000027e-05, 7.180600000000065e-05, 7.207000000000047e-05, 7.159699999999963e-05, 7.187499999999902e-05, 7.226400000000244e-05]</msg>
<status status="PASS" starttime="20201112 10:15:46.118" endtime="20201112 10:15:46.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.113" endtime="20201112 10:15:46.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.123" endtime="20201112 10:15:46.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.126" endtime="20201112 10:15:46.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.124" endtime="20201112 10:15:46.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.121" endtime="20201112 10:15:46.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.753" endtime="20201112 10:15:46.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.752" endtime="20201112 10:15:46.147"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.156" endtime="20201112 10:15:46.173"></status>
</kw>
<msg timestamp="20201112 10:15:46.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.154" endtime="20201112 10:15:46.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.175" endtime="20201112 10:15:46.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.178" endtime="20201112 10:15:46.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.151" endtime="20201112 10:15:46.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.149" endtime="20201112 10:15:46.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.187" endtime="20201112 10:15:46.472"></status>
</kw>
<msg timestamp="20201112 10:15:46.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020075819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.186" endtime="20201112 10:15:46.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020075819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.476" endtime="20201112 10:15:46.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.484" endtime="20201112 10:15:46.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.183" endtime="20201112 10:15:46.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.182" endtime="20201112 10:15:46.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.491" level="INFO">${RESULT} = [{'time': 0.020148417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.259799999999664e-05, 'source_diff': 7.259799999999664e-05}, {'time': 0.020228431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:46.488" endtime="20201112 10:15:46.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:46.504" level="INFO">${ACCURACY} = {'source_diff': [7.259799999999664e-05, 7.250000000000312e-05, 7.284800000000036e-05, 7.33049999999992e-05, 7.315299999999941e-05, 7.333299999999834e-05, 7.258300000000106e-05, 7.327799999999954e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:46.492" endtime="20201112 10:15:46.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.509" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 10:15:46.508" endtime="20201112 10:15:46.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.512" level="INFO">VALUE: [7.259799999999664e-05, 7.250000000000312e-05, 7.284800000000036e-05, 7.33049999999992e-05, 7.315299999999941e-05, 7.333299999999834e-05, 7.258300000000106e-05, 7.327799999999954e-05, 7.237499999999952e-05, 7.29170000000022e-05, 7.252800000000226e-05, 7.323600000000083e-05, 7.32500000000004e-05, 7.298600000000058e-05, 7.315299999999941e-05, 7.283399999999732e-05, 7.273600000000033e-05, 7.291599999999926e-05, 7.27499999999999e-05, 7.266600000000248e-05, 7.273600000000033e-05, 7.273600000000033e-05, 7.286100000000045e-05, 7.244400000000137e-05, 7.300000000000015e-05, 7.301399999999972e-05, 7.320900000000116e-05, 7.283400000000079e-05, 7.283400000000079e-05, 7.283299999999784e-05, 7.249999999999965e-05, 7.267999999999858e-05, 7.284700000000088e-05, 7.333300000000181e-05, 7.30829999999981e-05, 7.313899999999984e-05, 7.298600000000058e-05, 7.26110000000002e-05, 7.257000000000097e-05, 7.263899999999934e-05, 7.282000000000122e-05, 7.248699999999955e-05, 7.251399999999922e-05, 7.2763e-05, 7.286100000000045e-05, 7.27499999999999e-05, 7.309700000000113e-05, 7.306899999999852e-05, 7.259700000000063e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201112 10:15:46.510" endtime="20201112 10:15:46.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.505" endtime="20201112 10:15:46.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.515" endtime="20201112 10:15:46.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.519" endtime="20201112 10:15:46.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.517" endtime="20201112 10:15:46.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.514" endtime="20201112 10:15:46.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.148" endtime="20201112 10:15:46.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.147" endtime="20201112 10:15:46.540"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.548" endtime="20201112 10:15:46.565"></status>
</kw>
<msg timestamp="20201112 10:15:46.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.547" endtime="20201112 10:15:46.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.567" endtime="20201112 10:15:46.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.569" endtime="20201112 10:15:46.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.544" endtime="20201112 10:15:46.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.542" endtime="20201112 10:15:46.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.579" endtime="20201112 10:15:46.864"></status>
</kw>
<msg timestamp="20201112 10:15:46.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.578" endtime="20201112 10:15:46.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.868" endtime="20201112 10:15:46.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.876" endtime="20201112 10:15:46.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.575" endtime="20201112 10:15:46.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.573" endtime="20201112 10:15:46.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.883" level="INFO">${RESULT} = [{'time': 0.020138681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.379199999999961e-05, 'source_diff': 7.379199999999961e-05}, {'time': 0.020216694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:46.880" endtime="20201112 10:15:46.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:46.896" level="INFO">${ACCURACY} = {'source_diff': [7.379199999999961e-05, 7.406899999999952e-05, 7.369399999999915e-05, 7.367999999999958e-05, 7.431899999999977e-05, 7.436099999999848e-05, 7.386099999999798e-05, 7.418100000000302e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:46.884" endtime="20201112 10:15:46.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.901" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 10:15:46.900" endtime="20201112 10:15:46.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.903" level="INFO">VALUE: [7.379199999999961e-05, 7.406899999999952e-05, 7.369399999999915e-05, 7.367999999999958e-05, 7.431899999999977e-05, 7.436099999999848e-05, 7.386099999999798e-05, 7.418100000000302e-05, 7.422199999999879e-05, 7.348599999999761e-05, 7.409800000000161e-05, 7.366699999999948e-05, 7.376400000000047e-05, 7.434699999999891e-05, 7.359699999999816e-05, 7.37500000000009e-05, 7.384699999999841e-05, 7.413900000000084e-05, 7.383299999999884e-05, 7.397200000000201e-05, 7.348599999999761e-05, 7.350000000000065e-05, 7.338900000000009e-05, 7.429200000000011e-05, 7.391699999999973e-05, 7.430599999999968e-05, 7.408399999999857e-05, 7.427700000000106e-05, 7.347200000000151e-05, 7.383300000000231e-05, 7.362500000000077e-05, 7.413900000000084e-05, 7.431899999999977e-05, 7.412500000000127e-05, 7.365299999999991e-05, 7.433299999999934e-05, 7.416699999999998e-05, 7.358300000000206e-05, 7.434800000000186e-05, 7.359800000000111e-05, 7.405599999999943e-05, 7.377800000000004e-05, 7.390200000000069e-05, 7.38049999999997e-05, 7.373600000000133e-05, 7.366600000000001e-05, 7.354099999999988e-05, 7.387500000000102e-05, 7.381900000000274e-05, 7.340300000000313e-05]</msg>
<status status="PASS" starttime="20201112 10:15:46.902" endtime="20201112 10:15:46.904"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.897" endtime="20201112 10:15:46.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.907" endtime="20201112 10:15:46.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.911" endtime="20201112 10:15:46.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.909" endtime="20201112 10:15:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.905" endtime="20201112 10:15:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.540" endtime="20201112 10:15:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.540" endtime="20201112 10:15:46.931"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.941" endtime="20201112 10:15:46.959"></status>
</kw>
<msg timestamp="20201112 10:15:46.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.939" endtime="20201112 10:15:46.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.960" endtime="20201112 10:15:46.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.963" endtime="20201112 10:15:46.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.936" endtime="20201112 10:15:46.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.934" endtime="20201112 10:15:46.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.973" endtime="20201112 10:15:47.260"></status>
</kw>
<msg timestamp="20201112 10:15:47.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021375556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021450903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.971" endtime="20201112 10:15:47.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021375556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021450903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.264" endtime="20201112 10:15:47.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.272" endtime="20201112 10:15:47.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.969" endtime="20201112 10:15:47.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.967" endtime="20201112 10:15:47.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:47.279" level="INFO">${RESULT} = [{'time': 0.021450903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.534699999999991e-05, 'source_diff': 7.534699999999991e-05}, {'time': 0.021527917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:47.275" endtime="20201112 10:15:47.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:47.292" level="INFO">${ACCURACY} = {'source_diff': [7.534699999999991e-05, 7.450000000000165e-05, 7.508399999999957e-05, 7.52639999999985e-05, 7.48050000000007e-05, 7.53050000000012e-05, 7.53050000000012e-05, 7.53189999999973e-05, 7.53...</msg>
<status status="PASS" starttime="20201112 10:15:47.280" endtime="20201112 10:15:47.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.297" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 10:15:47.296" endtime="20201112 10:15:47.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.299" level="INFO">VALUE: [7.534699999999991e-05, 7.450000000000165e-05, 7.508399999999957e-05, 7.52639999999985e-05, 7.48050000000007e-05, 7.53050000000012e-05, 7.53050000000012e-05, 7.53189999999973e-05, 7.531900000000077e-05, 7.466699999999701e-05, 7.509699999999966e-05, 7.437500000000152e-05, 7.536099999999948e-05, 7.483399999999932e-05, 7.516700000000098e-05, 7.45699999999995e-05, 7.462500000000177e-05, 7.499999999999868e-05, 7.515299999999794e-05, 7.470799999999972e-05, 7.473600000000233e-05, 7.509699999999966e-05, 7.488900000000159e-05, 7.470799999999972e-05, 7.509699999999966e-05, 7.451400000000122e-05, 7.488899999999812e-05, 7.463900000000134e-05, 7.472300000000223e-05, 7.490300000000116e-05, 7.52639999999985e-05, 7.530600000000068e-05, 7.452700000000131e-05, 7.474999999999843e-05, 7.473599999999886e-05, 7.484699999999941e-05, 7.479200000000061e-05, 7.483400000000279e-05, 7.506900000000052e-05, 7.45699999999995e-05, 7.483299999999984e-05, 7.500000000000215e-05, 7.447299999999851e-05, 7.501399999999825e-05, 7.508399999999957e-05, 7.466600000000101e-05, 7.450000000000165e-05, 7.487500000000202e-05, 7.52639999999985e-05, 7.47500000000019e-05]</msg>
<status status="PASS" starttime="20201112 10:15:47.298" endtime="20201112 10:15:47.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.293" endtime="20201112 10:15:47.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.303" endtime="20201112 10:15:47.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:47.306" endtime="20201112 10:15:47.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.305" endtime="20201112 10:15:47.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.301" endtime="20201112 10:15:47.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.932" endtime="20201112 10:15:47.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.932" endtime="20201112 10:15:47.327"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.336" endtime="20201112 10:15:47.355"></status>
</kw>
<msg timestamp="20201112 10:15:47.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.334" endtime="20201112 10:15:47.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.357" endtime="20201112 10:15:47.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.359" endtime="20201112 10:15:47.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.331" endtime="20201112 10:15:47.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.329" endtime="20201112 10:15:47.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.369" endtime="20201112 10:15:47.655"></status>
</kw>
<msg timestamp="20201112 10:15:47.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020627514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020702931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.368" endtime="20201112 10:15:47.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020627514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020702931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.659" endtime="20201112 10:15:47.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.667" endtime="20201112 10:15:47.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.365" endtime="20201112 10:15:47.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.363" endtime="20201112 10:15:47.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:47.674" level="INFO">${RESULT} = [{'time': 0.020702931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.541700000000123e-05, 'source_diff': 7.541700000000123e-05}, {'time': 0.020781944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:47.671" endtime="20201112 10:15:47.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:47.689" level="INFO">${ACCURACY} = {'source_diff': [7.541700000000123e-05, 7.56249999999993e-05, 7.559700000000016e-05, 7.591599999999879e-05, 7.5763999999999e-05, 7.54310000000008e-05, 7.583299999999737e-05, 7.583300000000084e-05, 7.5...</msg>
<status status="PASS" starttime="20201112 10:15:47.675" endtime="20201112 10:15:47.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.693" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 10:15:47.692" endtime="20201112 10:15:47.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.695" level="INFO">VALUE: [7.541700000000123e-05, 7.56249999999993e-05, 7.559700000000016e-05, 7.591599999999879e-05, 7.5763999999999e-05, 7.54310000000008e-05, 7.583299999999737e-05, 7.583300000000084e-05, 7.563899999999887e-05, 7.570800000000072e-05, 7.59440000000014e-05, 7.558400000000007e-05, 7.538899999999862e-05, 7.62639999999995e-05, 7.55700000000005e-05, 7.556900000000102e-05, 7.541600000000176e-05, 7.59440000000014e-05, 7.55830000000006e-05, 7.627799999999907e-05, 7.581900000000127e-05, 7.565299999999844e-05, 7.59449999999974e-05, 7.570900000000019e-05, 7.544500000000037e-05, 7.595900000000044e-05, 7.577799999999857e-05, 7.561199999999921e-05, 7.576299999999953e-05, 7.638899999999962e-05, 7.552699999999885e-05, 7.636100000000048e-05, 7.54310000000008e-05, 7.595800000000097e-05, 7.566700000000148e-05, 7.595800000000097e-05, 7.634700000000091e-05, 7.634800000000039e-05, 7.6070000000001e-05, 7.624999999999993e-05, 7.624999999999993e-05, 7.588800000000312e-05, 7.626300000000003e-05, 7.5763999999999e-05, 7.633300000000134e-05, 7.627799999999907e-05, 7.633300000000134e-05, 7.584700000000041e-05, 7.591699999999826e-05, 7.6070000000001e-05]</msg>
<status status="PASS" starttime="20201112 10:15:47.694" endtime="20201112 10:15:47.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.689" endtime="20201112 10:15:47.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.699" endtime="20201112 10:15:47.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:47.703" endtime="20201112 10:15:47.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.701" endtime="20201112 10:15:47.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.697" endtime="20201112 10:15:47.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.328" endtime="20201112 10:15:47.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.327" endtime="20201112 10:15:47.724"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.732" endtime="20201112 10:15:47.750"></status>
</kw>
<msg timestamp="20201112 10:15:47.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.731" endtime="20201112 10:15:47.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.751" endtime="20201112 10:15:47.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.754" endtime="20201112 10:15:47.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.728" endtime="20201112 10:15:47.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.726" endtime="20201112 10:15:47.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.764" endtime="20201112 10:15:48.051"></status>
</kw>
<msg timestamp="20201112 10:15:48.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.762" endtime="20201112 10:15:48.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:48.056" endtime="20201112 10:15:48.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.064" endtime="20201112 10:15:48.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.760" endtime="20201112 10:15:48.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.758" endtime="20201112 10:15:48.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:48.071" level="INFO">${RESULT} = [{'time': 0.019763917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.727800000000007e-05, 'source_diff': 7.727800000000007e-05}, {'time': 0.019845917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:48.067" endtime="20201112 10:15:48.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:48.084" level="INFO">${ACCURACY} = {'source_diff': [7.727800000000007e-05, 7.69310000000023e-05, 7.643099999999833e-05, 7.716600000000004e-05, 7.736099999999801e-05, 7.734800000000139e-05, 7.715299999999994e-05, 7.71389999999969e-05, 7...</msg>
<status status="PASS" starttime="20201112 10:15:48.072" endtime="20201112 10:15:48.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.088" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 10:15:48.087" endtime="20201112 10:15:48.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.091" level="INFO">VALUE: [7.727800000000007e-05, 7.69310000000023e-05, 7.643099999999833e-05, 7.716600000000004e-05, 7.736099999999801e-05, 7.734800000000139e-05, 7.715299999999994e-05, 7.71389999999969e-05, 7.656900000000202e-05, 7.666699999999901e-05, 7.65700000000015e-05, 7.663899999999987e-05, 7.679199999999914e-05, 7.695900000000144e-05, 7.686100000000098e-05, 7.709800000000114e-05, 7.636199999999996e-05, 7.730499999999974e-05, 7.675000000000043e-05, 7.659700000000116e-05, 7.654099999999942e-05, 7.737500000000105e-05, 7.64029999999992e-05, 7.6764e-05, 7.6764e-05, 7.711099999999776e-05, 7.701400000000025e-05, 7.640300000000266e-05, 7.648600000000061e-05, 7.650000000000018e-05, 7.73189999999993e-05, 7.684699999999794e-05, 7.687499999999708e-05, 7.72640000000005e-05, 7.706899999999905e-05, 7.64310000000018e-05, 7.656899999999855e-05, 7.672200000000129e-05, 7.672200000000129e-05, 7.647199999999757e-05, 7.731999999999878e-05, 7.72640000000005e-05, 7.720799999999875e-05, 7.652799999999932e-05, 7.637500000000005e-05, 7.66250000000003e-05, 7.708299999999862e-05, 7.730499999999974e-05, 7.679199999999914e-05, 7.655600000000193e-05]</msg>
<status status="PASS" starttime="20201112 10:15:48.089" endtime="20201112 10:15:48.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.085" endtime="20201112 10:15:48.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.094" endtime="20201112 10:15:48.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:48.098" endtime="20201112 10:15:48.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.096" endtime="20201112 10:15:48.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.093" endtime="20201112 10:15:48.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.724" endtime="20201112 10:15:48.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.724" endtime="20201112 10:15:48.119"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.127" endtime="20201112 10:15:48.146"></status>
</kw>
<msg timestamp="20201112 10:15:48.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.126" endtime="20201112 10:15:48.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.148" endtime="20201112 10:15:48.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.150" endtime="20201112 10:15:48.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.123" endtime="20201112 10:15:48.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.121" endtime="20201112 10:15:48.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.160" endtime="20201112 10:15:48.445"></status>
</kw>
<msg timestamp="20201112 10:15:48.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:48.158" endtime="20201112 10:15:48.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:48.450" endtime="20201112 10:15:48.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.458" endtime="20201112 10:15:48.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.156" endtime="20201112 10:15:48.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.154" endtime="20201112 10:15:48.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:48.465" level="INFO">${RESULT} = [{'time': 0.019734125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.805599999999996e-05, 'source_diff': 7.805599999999996e-05}, {'time': 0.019817139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:48.462" endtime="20201112 10:15:48.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:48.479" level="INFO">${ACCURACY} = {'source_diff': [7.805599999999996e-05, 7.747200000000204e-05, 7.773600000000186e-05, 7.754199999999989e-05, 7.7764000000001e-05, 7.759799999999817e-05, 7.831999999999978e-05, 7.759700000000216e-05, 7...</msg>
<status status="PASS" starttime="20201112 10:15:48.466" endtime="20201112 10:15:48.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.484" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 10:15:48.483" endtime="20201112 10:15:48.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.486" level="INFO">VALUE: [7.805599999999996e-05, 7.747200000000204e-05, 7.773600000000186e-05, 7.754199999999989e-05, 7.7764000000001e-05, 7.759799999999817e-05, 7.831999999999978e-05, 7.759700000000216e-05, 7.793099999999983e-05, 7.794399999999993e-05, 7.777800000000057e-05, 7.788899999999765e-05, 7.836099999999901e-05, 7.825000000000193e-05, 7.7764000000001e-05, 7.806999999999953e-05, 7.774999999999796e-05, 7.75839999999986e-05, 7.820799999999975e-05, 7.765300000000044e-05, 7.758299999999912e-05, 7.837499999999858e-05, 7.82640000000015e-05, 7.78189999999998e-05, 7.780500000000024e-05, 7.76250000000013e-05, 7.752800000000032e-05, 7.763900000000087e-05, 7.755599999999946e-05, 7.77779999999971e-05, 7.76250000000013e-05, 7.747199999999857e-05, 7.800000000000168e-05, 7.769399999999968e-05, 7.805499999999702e-05, 7.741600000000029e-05, 7.812499999999833e-05, 7.754199999999989e-05, 7.793000000000036e-05, 7.815300000000094e-05, 7.788900000000112e-05, 7.787500000000155e-05, 7.833399999999935e-05, 7.79169999999968e-05, 7.773700000000133e-05, 7.804199999999692e-05, 7.805500000000049e-05, 7.773599999999839e-05, 7.805500000000049e-05, 7.816700000000051e-05]</msg>
<status status="PASS" starttime="20201112 10:15:48.485" endtime="20201112 10:15:48.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.480" endtime="20201112 10:15:48.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.490" endtime="20201112 10:15:48.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:48.493" endtime="20201112 10:15:48.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.492" endtime="20201112 10:15:48.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.488" endtime="20201112 10:15:48.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.120" endtime="20201112 10:15:48.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.119" endtime="20201112 10:15:48.514"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.523" endtime="20201112 10:15:48.541"></status>
</kw>
<msg timestamp="20201112 10:15:48.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.521" endtime="20201112 10:15:48.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.542" endtime="20201112 10:15:48.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.545" endtime="20201112 10:15:48.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.519" endtime="20201112 10:15:48.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.517" endtime="20201112 10:15:48.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.555" endtime="20201112 10:15:48.840"></status>
</kw>
<msg timestamp="20201112 10:15:48.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019805014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:48.553" endtime="20201112 10:15:48.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019805014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:48.844" endtime="20201112 10:15:48.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.853" endtime="20201112 10:15:48.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.550" endtime="20201112 10:15:48.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.549" endtime="20201112 10:15:48.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:48.859" level="INFO">${RESULT} = [{'time': 0.019883875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.886099999999951e-05, 'source_diff': 7.886099999999951e-05}, {'time': 0.019971903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:48.856" endtime="20201112 10:15:48.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:48.873" level="INFO">${ACCURACY} = {'source_diff': [7.886099999999951e-05, 7.866699999999754e-05, 7.891700000000126e-05, 7.926399999999903e-05, 7.920900000000022e-05, 7.848700000000208e-05, 7.916699999999804e-05, 7.869400000000068e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:48.860" endtime="20201112 10:15:48.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.877" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 10:15:48.876" endtime="20201112 10:15:48.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.880" level="INFO">VALUE: [7.886099999999951e-05, 7.866699999999754e-05, 7.891700000000126e-05, 7.926399999999903e-05, 7.920900000000022e-05, 7.848700000000208e-05, 7.916699999999804e-05, 7.869400000000068e-05, 7.904199999999792e-05, 7.841600000000129e-05, 7.849999999999871e-05, 7.874999999999896e-05, 7.855500000000099e-05, 7.877800000000157e-05, 7.920900000000022e-05, 7.854199999999742e-05, 7.855600000000046e-05, 7.847300000000251e-05, 7.845899999999947e-05, 7.899999999999921e-05, 7.847199999999957e-05, 7.849999999999871e-05, 7.905499999999802e-05, 7.866699999999754e-05, 7.926399999999903e-05, 7.873600000000286e-05, 7.855600000000046e-05, 7.86389999999984e-05, 7.908300000000063e-05, 7.861100000000273e-05, 7.883399999999985e-05, 7.859799999999917e-05, 7.902699999999888e-05, 7.852700000000185e-05, 7.870800000000025e-05, 7.908299999999716e-05, 7.91389999999989e-05, 7.930500000000174e-05, 7.848599999999914e-05, 7.906899999999759e-05, 7.915300000000194e-05, 7.841700000000076e-05, 7.837499999999858e-05, 7.907000000000053e-05, 7.90840000000001e-05, 7.929199999999817e-05, 7.840200000000172e-05, 7.881899999999734e-05, 7.92909999999987e-05, 7.901399999999878e-05]</msg>
<status status="PASS" starttime="20201112 10:15:48.878" endtime="20201112 10:15:48.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.874" endtime="20201112 10:15:48.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.883" endtime="20201112 10:15:48.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:48.887" endtime="20201112 10:15:48.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.885" endtime="20201112 10:15:48.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.882" endtime="20201112 10:15:48.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.515" endtime="20201112 10:15:48.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.514" endtime="20201112 10:15:48.908"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.916" endtime="20201112 10:15:48.935"></status>
</kw>
<msg timestamp="20201112 10:15:48.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.915" endtime="20201112 10:15:48.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.937" endtime="20201112 10:15:48.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.939" endtime="20201112 10:15:48.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.912" endtime="20201112 10:15:48.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.910" endtime="20201112 10:15:48.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.949" endtime="20201112 10:15:49.236"></status>
</kw>
<msg timestamp="20201112 10:15:49.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020245375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020325, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:48.948" endtime="20201112 10:15:49.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020245375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020325, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:49.240" endtime="20201112 10:15:49.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.248" endtime="20201112 10:15:49.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.945" endtime="20201112 10:15:49.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.943" endtime="20201112 10:15:49.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.255" level="INFO">${RESULT} = [{'time': 0.020325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.962499999999983e-05, 'source_diff': 7.962499999999983e-05}, {'time': 0.020412, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.9...</msg>
<status status="PASS" starttime="20201112 10:15:49.252" endtime="20201112 10:15:49.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:49.270" level="INFO">${ACCURACY} = {'source_diff': [7.962499999999983e-05, 7.980599999999824e-05, 7.943100000000133e-05, 7.973600000000039e-05, 8.025000000000046e-05, 7.959800000000017e-05, 8.009800000000067e-05, 7.98329999999979e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:49.256" endtime="20201112 10:15:49.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.274" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 10:15:49.273" endtime="20201112 10:15:49.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.277" level="INFO">VALUE: [7.962499999999983e-05, 7.980599999999824e-05, 7.943100000000133e-05, 7.973600000000039e-05, 8.025000000000046e-05, 7.959800000000017e-05, 8.009800000000067e-05, 7.98329999999979e-05, 7.938799999999968e-05, 7.979100000000267e-05, 7.949999999999971e-05, 7.962499999999983e-05, 7.956900000000156e-05, 8.023600000000089e-05, 8.032000000000178e-05, 7.958300000000113e-05, 8.019500000000165e-05, 8.032000000000178e-05, 7.981999999999781e-05, 8.034800000000092e-05, 8.008300000000163e-05, 8.0152e-05, 8.036100000000101e-05, 7.955499999999852e-05, 7.95970000000007e-05, 7.998600000000064e-05, 7.937499999999958e-05, 7.972200000000082e-05, 7.974999999999996e-05, 7.954199999999842e-05, 7.990299999999922e-05, 7.995900000000097e-05, 8.023700000000036e-05, 7.986100000000051e-05, 8.01389999999999e-05, 7.942999999999839e-05, 7.97779999999991e-05, 8.004199999999892e-05, 8.018099999999861e-05, 8.005600000000196e-05, 8.000000000000021e-05, 8.033400000000135e-05, 7.961100000000026e-05, 8.034800000000092e-05, 7.979199999999867e-05, 7.947200000000057e-05, 7.959699999999723e-05, 7.970800000000125e-05, 7.962499999999983e-05, 7.944400000000143e-05]</msg>
<status status="PASS" starttime="20201112 10:15:49.275" endtime="20201112 10:15:49.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.271" endtime="20201112 10:15:49.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.280" endtime="20201112 10:15:49.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.283" endtime="20201112 10:15:49.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.282" endtime="20201112 10:15:49.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.279" endtime="20201112 10:15:49.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.909" endtime="20201112 10:15:49.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.908" endtime="20201112 10:15:49.305"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.315" endtime="20201112 10:15:49.333"></status>
</kw>
<msg timestamp="20201112 10:15:49.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.313" endtime="20201112 10:15:49.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.334" endtime="20201112 10:15:49.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.337" endtime="20201112 10:15:49.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.310" endtime="20201112 10:15:49.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.307" endtime="20201112 10:15:49.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.348" endtime="20201112 10:15:49.634"></status>
</kw>
<msg timestamp="20201112 10:15:49.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.346" endtime="20201112 10:15:49.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.638" endtime="20201112 10:15:49.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.646" endtime="20201112 10:15:49.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.343" endtime="20201112 10:15:49.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.341" endtime="20201112 10:15:49.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.653" level="INFO">${RESULT} = [{'time': 0.021618653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.129200000000017e-05, 'source_diff': 8.129200000000017e-05}, {'time': 0.021707667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:49.650" endtime="20201112 10:15:49.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:49.666" level="INFO">${ACCURACY} = {'source_diff': [8.129200000000017e-05, 8.126400000000103e-05, 8.06390000000004e-05, 8.070900000000172e-05, 8.076300000000106e-05, 8.105500000000002e-05, 8.056899999999909e-05, 8.12780000000006e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:49.654" endtime="20201112 10:15:49.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.671" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 10:15:49.670" endtime="20201112 10:15:49.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.673" level="INFO">VALUE: [8.129200000000017e-05, 8.126400000000103e-05, 8.06390000000004e-05, 8.070900000000172e-05, 8.076300000000106e-05, 8.105500000000002e-05, 8.056899999999909e-05, 8.12780000000006e-05, 8.09169999999998e-05, 8.136099999999855e-05, 8.061100000000126e-05, 8.07780000000001e-05, 8.049999999999724e-05, 8.091600000000032e-05, 8.04169999999993e-05, 8.086200000000099e-05, 8.122199999999885e-05, 8.036100000000101e-05, 8.140300000000072e-05, 8.062500000000083e-05, 8.038900000000015e-05, 8.079199999999967e-05, 8.070799999999878e-05, 8.054200000000289e-05, 8.130599999999974e-05, 8.086099999999805e-05, 8.104199999999992e-05, 8.105599999999949e-05, 8.124999999999799e-05, 8.126300000000156e-05, 8.054099999999995e-05, 8.112499999999787e-05, 8.069399999999921e-05, 8.050000000000071e-05, 8.076399999999706e-05, 8.050000000000071e-05, 8.129200000000017e-05, 8.073600000000139e-05, 8.083400000000185e-05, 8.088900000000065e-05, 8.090300000000022e-05, 8.131999999999931e-05, 8.061100000000126e-05, 8.118000000000014e-05, 8.08190000000028e-05, 8.120799999999928e-05, 8.075000000000096e-05, 8.093099999999936e-05, 8.061100000000126e-05, 8.070899999999825e-05]</msg>
<status status="PASS" starttime="20201112 10:15:49.672" endtime="20201112 10:15:49.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.667" endtime="20201112 10:15:49.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.677" endtime="20201112 10:15:49.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.680" endtime="20201112 10:15:49.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.679" endtime="20201112 10:15:49.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.675" endtime="20201112 10:15:49.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.306" endtime="20201112 10:15:49.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.305" endtime="20201112 10:15:49.701"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.710" endtime="20201112 10:15:49.728"></status>
</kw>
<msg timestamp="20201112 10:15:49.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.708" endtime="20201112 10:15:49.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.729" endtime="20201112 10:15:49.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.731" endtime="20201112 10:15:49.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.706" endtime="20201112 10:15:49.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.703" endtime="20201112 10:15:49.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.741" endtime="20201112 10:15:50.027"></status>
</kw>
<msg timestamp="20201112 10:15:50.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.740" endtime="20201112 10:15:50.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.032" endtime="20201112 10:15:50.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.040" endtime="20201112 10:15:50.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.737" endtime="20201112 10:15:50.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.736" endtime="20201112 10:15:50.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:50.047" level="INFO">${RESULT} = [{'time': 0.020253417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208399999999963e-05, 'source_diff': 8.208399999999963e-05}, {'time': 0.020344444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:50.043" endtime="20201112 10:15:50.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:50.061" level="INFO">${ACCURACY} = {'source_diff': [8.208399999999963e-05, 8.208300000000016e-05, 8.184699999999948e-05, 8.169400000000021e-05, 8.17910000000012e-05, 8.176400000000153e-05, 8.190300000000122e-05, 8.179200000000067e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:50.048" endtime="20201112 10:15:50.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.065" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 10:15:50.064" endtime="20201112 10:15:50.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.068" level="INFO">VALUE: [8.208399999999963e-05, 8.208300000000016e-05, 8.184699999999948e-05, 8.169400000000021e-05, 8.17910000000012e-05, 8.176400000000153e-05, 8.190300000000122e-05, 8.179200000000067e-05, 8.213899999999844e-05, 8.220899999999975e-05, 8.188900000000165e-05, 8.204200000000092e-05, 8.224999999999899e-05, 8.15979999999987e-05, 8.213899999999844e-05, 8.231900000000084e-05, 8.152800000000085e-05, 8.145799999999953e-05, 8.154100000000095e-05, 8.143000000000039e-05, 8.219500000000018e-05, 8.227700000000213e-05, 8.187499999999862e-05, 8.143099999999986e-05, 8.202800000000135e-05, 8.187500000000208e-05, 8.207000000000006e-05, 8.194400000000046e-05, 8.231900000000084e-05, 8.148599999999867e-05, 8.182000000000328e-05, 8.218000000000114e-05, 8.209699999999973e-05, 8.213899999999844e-05, 8.173599999999892e-05, 8.143099999999986e-05, 8.205600000000049e-05, 8.148699999999814e-05, 8.198699999999864e-05, 8.211199999999877e-05, 8.170799999999978e-05, 8.201399999999831e-05, 8.144399999999996e-05, 8.201399999999831e-05, 8.202800000000135e-05, 8.205600000000049e-05, 8.151400000000128e-05, 8.230600000000074e-05, 8.208399999999963e-05, 8.216700000000104e-05]</msg>
<status status="PASS" starttime="20201112 10:15:50.067" endtime="20201112 10:15:50.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.062" endtime="20201112 10:15:50.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.072" endtime="20201112 10:15:50.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:50.075" endtime="20201112 10:15:50.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.073" endtime="20201112 10:15:50.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.070" endtime="20201112 10:15:50.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.702" endtime="20201112 10:15:50.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.701" endtime="20201112 10:15:50.096"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.105" endtime="20201112 10:15:50.124"></status>
</kw>
<msg timestamp="20201112 10:15:50.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.103" endtime="20201112 10:15:50.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.126" endtime="20201112 10:15:50.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.128" endtime="20201112 10:15:50.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.101" endtime="20201112 10:15:50.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.099" endtime="20201112 10:15:50.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.138" endtime="20201112 10:15:50.423"></status>
</kw>
<msg timestamp="20201112 10:15:50.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020507514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.136" endtime="20201112 10:15:50.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020507514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.428" endtime="20201112 10:15:50.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.436" endtime="20201112 10:15:50.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.134" endtime="20201112 10:15:50.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.132" endtime="20201112 10:15:50.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:50.443" level="INFO">${RESULT} = [{'time': 0.020589944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.242999999999792e-05, 'source_diff': 8.242999999999792e-05}, {'time': 0.020682958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:50.439" endtime="20201112 10:15:50.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:50.456" level="INFO">${ACCURACY} = {'source_diff': [8.242999999999792e-05, 8.336100000000055e-05, 8.33469999999975e-05, 8.295799999999756e-05, 8.279099999999873e-05, 8.337500000000012e-05, 8.304199999999845e-05, 8.319399999999824e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:50.444" endtime="20201112 10:15:50.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.460" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 10:15:50.459" endtime="20201112 10:15:50.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.463" level="INFO">VALUE: [8.242999999999792e-05, 8.336100000000055e-05, 8.33469999999975e-05, 8.295799999999756e-05, 8.279099999999873e-05, 8.337500000000012e-05, 8.304199999999845e-05, 8.319399999999824e-05, 8.330600000000174e-05, 8.323600000000042e-05, 8.279200000000167e-05, 8.282000000000081e-05, 8.31659999999991e-05, 8.241599999999835e-05, 8.290199999999928e-05, 8.290299999999876e-05, 8.295800000000103e-05, 8.241600000000182e-05, 8.33330000000014e-05, 8.248599999999967e-05, 8.269499999999722e-05, 8.297199999999713e-05, 8.273599999999992e-05, 8.251399999999881e-05, 8.247299999999957e-05, 8.265300000000197e-05, 8.269399999999774e-05, 8.272200000000035e-05, 8.331900000000184e-05, 8.308300000000116e-05, 8.301399999999931e-05, 8.330500000000227e-05, 8.249999999999924e-05, 8.248599999999967e-05, 8.301399999999931e-05, 8.259700000000023e-05, 8.265300000000197e-05, 8.297199999999713e-05, 8.322200000000085e-05, 8.326399999999956e-05, 8.287499999999962e-05, 8.257000000000056e-05, 8.286100000000005e-05, 8.274999999999949e-05, 8.282000000000081e-05, 8.286100000000005e-05, 8.301399999999931e-05, 8.318100000000161e-05, 8.329200000000217e-05, 8.240199999999878e-05]</msg>
<status status="PASS" starttime="20201112 10:15:50.461" endtime="20201112 10:15:50.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.457" endtime="20201112 10:15:50.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.467" endtime="20201112 10:15:50.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:50.470" endtime="20201112 10:15:50.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.469" endtime="20201112 10:15:50.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.465" endtime="20201112 10:15:50.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.097" endtime="20201112 10:15:50.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.096" endtime="20201112 10:15:50.491"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.499" endtime="20201112 10:15:50.518"></status>
</kw>
<msg timestamp="20201112 10:15:50.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.498" endtime="20201112 10:15:50.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.519" endtime="20201112 10:15:50.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.522" endtime="20201112 10:15:50.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.495" endtime="20201112 10:15:50.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.493" endtime="20201112 10:15:50.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.532" endtime="20201112 10:15:50.818"></status>
</kw>
<msg timestamp="20201112 10:15:50.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.530" endtime="20201112 10:15:50.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.822" endtime="20201112 10:15:50.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.830" endtime="20201112 10:15:50.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.528" endtime="20201112 10:15:50.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.526" endtime="20201112 10:15:50.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:50.837" level="INFO">${RESULT} = [{'time': 0.019746278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.39859999999977e-05, 'source_diff': 8.39859999999977e-05}, {'time': 0.019835264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:50.833" endtime="20201112 10:15:50.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:50.851" level="INFO">${ACCURACY} = {'source_diff': [8.39859999999977e-05, 8.394499999999847e-05, 8.388900000000019e-05, 8.426400000000056e-05, 8.386100000000105e-05, 8.436100000000155e-05, 8.387499999999715e-05, 8.426400000000056e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:50.838" endtime="20201112 10:15:50.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.856" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 10:15:50.854" endtime="20201112 10:15:50.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.858" level="INFO">VALUE: [8.39859999999977e-05, 8.394499999999847e-05, 8.388900000000019e-05, 8.426400000000056e-05, 8.386100000000105e-05, 8.436100000000155e-05, 8.387499999999715e-05, 8.426400000000056e-05, 8.381899999999887e-05, 8.377799999999963e-05, 8.354200000000242e-05, 8.402799999999988e-05, 8.394500000000193e-05, 8.341699999999883e-05, 8.372199999999788e-05, 8.427799999999666e-05, 8.437500000000112e-05, 8.348600000000067e-05, 8.340199999999978e-05, 8.422300000000132e-05, 8.362500000000037e-05, 8.344400000000196e-05, 8.437500000000112e-05, 8.363899999999994e-05, 8.356899999999862e-05, 8.369499999999822e-05, 8.433399999999841e-05, 8.390299999999976e-05, 8.418099999999915e-05, 8.391599999999985e-05, 8.355499999999905e-05, 8.415200000000053e-05, 8.370800000000178e-05, 8.422200000000185e-05, 8.42919999999997e-05, 8.34720000000011e-05, 8.370900000000125e-05, 8.383399999999791e-05, 8.341699999999883e-05, 8.416700000000304e-05, 8.336100000000055e-05, 8.354099999999948e-05, 8.343000000000239e-05, 8.358300000000166e-05, 8.3846999999998e-05, 8.377799999999963e-05, 8.36529999999995e-05, 8.4153e-05, 8.38330000000019e-05, 8.34309999999984e-05]</msg>
<status status="PASS" starttime="20201112 10:15:50.857" endtime="20201112 10:15:50.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.852" endtime="20201112 10:15:50.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.862" endtime="20201112 10:15:50.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:50.865" endtime="20201112 10:15:50.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.863" endtime="20201112 10:15:50.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.860" endtime="20201112 10:15:50.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.492" endtime="20201112 10:15:50.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.491" endtime="20201112 10:15:50.886"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.894" endtime="20201112 10:15:50.912"></status>
</kw>
<msg timestamp="20201112 10:15:50.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.893" endtime="20201112 10:15:50.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.914" endtime="20201112 10:15:50.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.916" endtime="20201112 10:15:50.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.890" endtime="20201112 10:15:50.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.888" endtime="20201112 10:15:50.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.926" endtime="20201112 10:15:51.211"></status>
</kw>
<msg timestamp="20201112 10:15:51.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.925" endtime="20201112 10:15:51.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.215" endtime="20201112 10:15:51.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.224" endtime="20201112 10:15:51.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.922" endtime="20201112 10:15:51.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.921" endtime="20201112 10:15:51.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.230" level="INFO">${RESULT} = [{'time': 0.019764069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.497199999999913e-05, 'source_diff': 8.497199999999913e-05}, {'time': 0.019859069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:51.227" endtime="20201112 10:15:51.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:51.244" level="INFO">${ACCURACY} = {'source_diff': [8.497199999999913e-05, 8.536099999999908e-05, 8.436099999999808e-05, 8.479100000000073e-05, 8.534799999999898e-05, 8.508299999999969e-05, 8.51249999999984e-05, 8.49859999999987e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:51.231" endtime="20201112 10:15:51.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.248" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 10:15:51.247" endtime="20201112 10:15:51.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.252" level="INFO">VALUE: [8.497199999999913e-05, 8.536099999999908e-05, 8.436099999999808e-05, 8.479100000000073e-05, 8.534799999999898e-05, 8.508299999999969e-05, 8.51249999999984e-05, 8.49859999999987e-05, 8.448600000000167e-05, 8.536099999999908e-05, 8.481999999999934e-05, 8.46530000000005e-05, 8.466700000000008e-05, 8.515200000000153e-05, 8.452699999999744e-05, 8.516700000000058e-05, 8.452800000000038e-05, 8.502800000000088e-05, 8.477800000000063e-05, 8.5153000000001e-05, 8.440300000000026e-05, 8.477799999999716e-05, 8.441699999999983e-05, 8.444399999999949e-05, 8.484799999999848e-05, 8.51660000000011e-05, 8.531900000000037e-05, 8.456899999999962e-05, 8.536099999999908e-05, 8.495799999999956e-05, 8.487500000000162e-05, 8.504199999999698e-05, 8.508399999999916e-05, 8.536099999999908e-05, 8.516700000000058e-05, 8.47370000000014e-05, 8.48050000000003e-05, 8.461099999999833e-05, 8.455500000000005e-05, 8.458300000000266e-05, 8.502800000000088e-05, 8.459699999999876e-05, 8.494399999999999e-05, 8.4846999999999e-05, 8.53050000000008e-05, 8.523599999999895e-05, 8.484800000000195e-05, 8.518100000000015e-05, 8.46119999999978e-05, 8.53469999999995e-05]</msg>
<status status="PASS" starttime="20201112 10:15:51.250" endtime="20201112 10:15:51.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.245" endtime="20201112 10:15:51.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.255" endtime="20201112 10:15:51.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.259" endtime="20201112 10:15:51.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.257" endtime="20201112 10:15:51.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.253" endtime="20201112 10:15:51.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.887" endtime="20201112 10:15:51.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.886" endtime="20201112 10:15:51.279"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.288" endtime="20201112 10:15:51.307"></status>
</kw>
<msg timestamp="20201112 10:15:51.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.287" endtime="20201112 10:15:51.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.308" endtime="20201112 10:15:51.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.311" endtime="20201112 10:15:51.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.284" endtime="20201112 10:15:51.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.282" endtime="20201112 10:15:51.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.321" endtime="20201112 10:15:51.607"></status>
</kw>
<msg timestamp="20201112 10:15:51.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020129806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.320" endtime="20201112 10:15:51.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020129806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.612" endtime="20201112 10:15:51.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.620" endtime="20201112 10:15:51.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.317" endtime="20201112 10:15:51.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.315" endtime="20201112 10:15:51.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.627" level="INFO">${RESULT} = [{'time': 0.020129806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583399999999991e-05, 'source_diff': 8.583399999999991e-05}, {'time': 0.020221847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:51.623" endtime="20201112 10:15:51.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:51.640" level="INFO">${ACCURACY} = {'source_diff': [8.583399999999991e-05, 8.595800000000056e-05, 8.629100000000223e-05, 8.58050000000013e-05, 8.601400000000231e-05, 8.557000000000009e-05, 8.581900000000087e-05, 8.62920000000017e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:51.628" endtime="20201112 10:15:51.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.644" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 10:15:51.643" endtime="20201112 10:15:51.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.647" level="INFO">VALUE: [8.583399999999991e-05, 8.595800000000056e-05, 8.629100000000223e-05, 8.58050000000013e-05, 8.601400000000231e-05, 8.557000000000009e-05, 8.581900000000087e-05, 8.62920000000017e-05, 8.54310000000004e-05, 8.602800000000188e-05, 8.63470000000005e-05, 8.537500000000212e-05, 8.588799999999924e-05, 8.558300000000019e-05, 8.58189999999974e-05, 8.56530000000015e-05, 8.58050000000013e-05, 8.61249999999994e-05, 8.63470000000005e-05, 8.566700000000108e-05, 8.555600000000052e-05, 8.555600000000052e-05, 8.583399999999991e-05, 8.559799999999923e-05, 8.54310000000004e-05, 8.581900000000087e-05, 8.630499999999833e-05, 8.609700000000026e-05, 8.63050000000018e-05, 8.583300000000044e-05, 8.602799999999841e-05, 8.541700000000083e-05, 8.62920000000017e-05, 8.569500000000022e-05, 8.538900000000169e-05, 8.557000000000009e-05, 8.586199999999905e-05, 8.592999999999795e-05, 8.602800000000188e-05, 8.602799999999841e-05, 8.541599999999788e-05, 8.561099999999933e-05, 8.545800000000006e-05, 8.601400000000231e-05, 8.549999999999877e-05, 8.574999999999902e-05, 8.537499999999865e-05, 8.607000000000059e-05, 8.561099999999933e-05, 8.58050000000013e-05]</msg>
<status status="PASS" starttime="20201112 10:15:51.646" endtime="20201112 10:15:51.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.641" endtime="20201112 10:15:51.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.651" endtime="20201112 10:15:51.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.654" endtime="20201112 10:15:51.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.652" endtime="20201112 10:15:51.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.649" endtime="20201112 10:15:51.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.280" endtime="20201112 10:15:51.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.280" endtime="20201112 10:15:51.675"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.683" endtime="20201112 10:15:51.701"></status>
</kw>
<msg timestamp="20201112 10:15:51.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.682" endtime="20201112 10:15:51.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.703" endtime="20201112 10:15:51.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.705" endtime="20201112 10:15:51.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.679" endtime="20201112 10:15:51.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.677" endtime="20201112 10:15:51.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.715" endtime="20201112 10:15:52.001"></status>
</kw>
<msg timestamp="20201112 10:15:52.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019621889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.714" endtime="20201112 10:15:52.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019621889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.006" endtime="20201112 10:15:52.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.014" endtime="20201112 10:15:52.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.711" endtime="20201112 10:15:52.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.709" endtime="20201112 10:15:52.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:52.021" level="INFO">${RESULT} = [{'time': 0.019708361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.647200000000063e-05, 'source_diff': 8.647200000000063e-05}, {'time': 0.019801375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:52.018" endtime="20201112 10:15:52.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:52.035" level="INFO">${ACCURACY} = {'source_diff': [8.647200000000063e-05, 8.69860000000007e-05, 8.675000000000002e-05, 8.73059999999988e-05, 8.67920000000022e-05, 8.730600000000227e-05, 8.66530000000025e-05, 8.727700000000019e-05, 8.7...</msg>
<status status="PASS" starttime="20201112 10:15:52.023" endtime="20201112 10:15:52.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.040" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 10:15:52.039" endtime="20201112 10:15:52.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.042" level="INFO">VALUE: [8.647200000000063e-05, 8.69860000000007e-05, 8.675000000000002e-05, 8.73059999999988e-05, 8.67920000000022e-05, 8.730600000000227e-05, 8.66530000000025e-05, 8.727700000000019e-05, 8.723600000000095e-05, 8.705499999999908e-05, 8.700000000000027e-05, 8.720799999999834e-05, 8.637500000000312e-05, 8.679199999999873e-05, 8.731999999999837e-05, 8.683300000000144e-05, 8.66530000000025e-05, 8.673600000000045e-05, 8.64310000000014e-05, 8.718099999999868e-05, 8.736100000000108e-05, 8.713899999999997e-05, 8.642999999999845e-05, 8.651399999999934e-05, 8.673600000000045e-05, 8.637499999999965e-05, 8.677800000000263e-05, 8.645800000000106e-05, 8.733399999999794e-05, 8.669500000000122e-05, 8.654099999999901e-05, 8.675000000000002e-05, 8.694400000000199e-05, 8.655500000000205e-05, 8.697200000000113e-05, 8.691700000000233e-05, 8.712499999999693e-05, 8.64449999999975e-05, 8.730600000000227e-05, 8.709800000000073e-05, 8.71250000000004e-05, 8.676399999999959e-05, 8.66249999999999e-05, 8.686100000000058e-05, 8.733300000000194e-05, 8.690199999999981e-05, 8.645799999999759e-05, 8.677800000000263e-05, 8.656900000000162e-05, 8.701399999999984e-05]</msg>
<status status="PASS" starttime="20201112 10:15:52.041" endtime="20201112 10:15:52.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.036" endtime="20201112 10:15:52.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.046" endtime="20201112 10:15:52.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:52.049" endtime="20201112 10:15:52.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.048" endtime="20201112 10:15:52.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.044" endtime="20201112 10:15:52.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.676" endtime="20201112 10:15:52.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.675" endtime="20201112 10:15:52.070"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.079" endtime="20201112 10:15:52.098"></status>
</kw>
<msg timestamp="20201112 10:15:52.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.077" endtime="20201112 10:15:52.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.100" endtime="20201112 10:15:52.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.102" endtime="20201112 10:15:52.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.075" endtime="20201112 10:15:52.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.073" endtime="20201112 10:15:52.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.112" endtime="20201112 10:15:52.398"></status>
</kw>
<msg timestamp="20201112 10:15:52.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.110" endtime="20201112 10:15:52.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.402" endtime="20201112 10:15:52.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.410" endtime="20201112 10:15:52.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.108" endtime="20201112 10:15:52.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.106" endtime="20201112 10:15:52.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:52.417" level="INFO">${RESULT} = [{'time': 0.020422181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.801400000000084e-05, 'source_diff': 8.801400000000084e-05}, {'time': 0.020513194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:52.414" endtime="20201112 10:15:52.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:52.431" level="INFO">${ACCURACY} = {'source_diff': [8.801400000000084e-05, 8.776299999999765e-05, 8.745800000000206e-05, 8.747200000000163e-05, 8.830500000000033e-05, 8.751399999999687e-05, 8.740299999999979e-05, 8.836100000000208e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:52.418" endtime="20201112 10:15:52.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.436" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 10:15:52.435" endtime="20201112 10:15:52.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.438" level="INFO">VALUE: [8.801400000000084e-05, 8.776299999999765e-05, 8.745800000000206e-05, 8.747200000000163e-05, 8.830500000000033e-05, 8.751399999999687e-05, 8.740299999999979e-05, 8.836100000000208e-05, 8.743099999999893e-05, 8.76669999999996e-05, 8.823700000000143e-05, 8.781999999999887e-05, 8.7944999999999e-05, 8.740199999999684e-05, 8.761100000000133e-05, 8.78189999999994e-05, 8.736100000000108e-05, 8.752799999999991e-05, 8.836100000000208e-05, 8.81670000000001e-05, 8.783400000000191e-05, 8.755599999999905e-05, 8.772299999999789e-05, 8.758300000000219e-05, 8.754100000000001e-05, 8.74860000000012e-05, 8.816600000000063e-05, 8.74860000000012e-05, 8.811099999999836e-05, 8.784700000000201e-05, 8.806899999999965e-05, 8.76250000000009e-05, 8.774999999999755e-05, 8.774999999999755e-05, 8.783400000000191e-05, 8.800000000000127e-05, 8.825000000000152e-05, 8.756899999999915e-05, 8.776399999999712e-05, 8.773600000000145e-05, 8.763900000000047e-05, 8.777799999999669e-05, 8.740299999999979e-05, 8.78059999999993e-05, 8.770800000000231e-05, 8.800000000000127e-05, 8.754199999999948e-05, 8.784799999999801e-05, 8.792999999999995e-05, 8.747199999999816e-05]</msg>
<status status="PASS" starttime="20201112 10:15:52.437" endtime="20201112 10:15:52.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.432" endtime="20201112 10:15:52.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.442" endtime="20201112 10:15:52.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:52.446" endtime="20201112 10:15:52.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.444" endtime="20201112 10:15:52.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.440" endtime="20201112 10:15:52.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.071" endtime="20201112 10:15:52.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.071" endtime="20201112 10:15:52.467"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.475" endtime="20201112 10:15:52.495"></status>
</kw>
<msg timestamp="20201112 10:15:52.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.474" endtime="20201112 10:15:52.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.497" endtime="20201112 10:15:52.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.499" endtime="20201112 10:15:52.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.471" endtime="20201112 10:15:52.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.469" endtime="20201112 10:15:52.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.509" endtime="20201112 10:15:52.794"></status>
</kw>
<msg timestamp="20201112 10:15:52.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020863472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.508" endtime="20201112 10:15:52.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020863472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.798" endtime="20201112 10:15:52.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.806" endtime="20201112 10:15:52.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.505" endtime="20201112 10:15:52.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.504" endtime="20201112 10:15:52.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:52.813" level="INFO">${RESULT} = [{'time': 0.020863472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.919400000000077e-05, 'source_diff': 8.919400000000077e-05}, {'time': 0.020956514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:52.809" endtime="20201112 10:15:52.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:52.826" level="INFO">${ACCURACY} = {'source_diff': [8.919400000000077e-05, 8.8945e-05, 8.855600000000005e-05, 8.848599999999873e-05, 8.850000000000177e-05, 8.886099999999911e-05, 8.869499999999975e-05, 8.86670000000006e-05, 8.902799999...</msg>
<status status="PASS" starttime="20201112 10:15:52.814" endtime="20201112 10:15:52.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.831" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 10:15:52.830" endtime="20201112 10:15:52.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.833" level="INFO">VALUE: [8.919400000000077e-05, 8.8945e-05, 8.855600000000005e-05, 8.848599999999873e-05, 8.850000000000177e-05, 8.886099999999911e-05, 8.869499999999975e-05, 8.86670000000006e-05, 8.902799999999794e-05, 8.916599999999816e-05, 8.888900000000172e-05, 8.88190000000004e-05, 8.847199999999916e-05, 8.8638999999998e-05, 8.845799999999959e-05, 8.843099999999993e-05, 8.91670000000011e-05, 8.91670000000011e-05, 8.876399999999812e-05, 8.851399999999787e-05, 8.924999999999905e-05, 8.858299999999972e-05, 8.845799999999959e-05, 8.926399999999862e-05, 8.895800000000009e-05, 8.88190000000004e-05, 8.868100000000018e-05, 8.920800000000034e-05, 8.926400000000209e-05, 8.927699999999872e-05, 8.888900000000172e-05, 8.901400000000184e-05, 8.873699999999846e-05, 8.837499999999818e-05, 8.848599999999873e-05, 8.898599999999923e-05, 8.874999999999855e-05, 8.841700000000036e-05, 8.844400000000002e-05, 8.877800000000116e-05, 8.913900000000197e-05, 8.934700000000004e-05, 8.891599999999791e-05, 8.850000000000177e-05, 8.89999999999988e-05, 8.902699999999847e-05, 8.855500000000058e-05, 8.88190000000004e-05, 8.883399999999944e-05, 8.873599999999898e-05]</msg>
<status status="PASS" starttime="20201112 10:15:52.832" endtime="20201112 10:15:52.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.827" endtime="20201112 10:15:52.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.837" endtime="20201112 10:15:52.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:52.840" endtime="20201112 10:15:52.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.838" endtime="20201112 10:15:52.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.835" endtime="20201112 10:15:52.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.467" endtime="20201112 10:15:52.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.467" endtime="20201112 10:15:52.861"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.869" endtime="20201112 10:15:52.889"></status>
</kw>
<msg timestamp="20201112 10:15:52.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.868" endtime="20201112 10:15:52.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.891" endtime="20201112 10:15:52.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.893" endtime="20201112 10:15:52.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.865" endtime="20201112 10:15:52.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.863" endtime="20201112 10:15:52.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.903" endtime="20201112 10:15:53.189"></status>
</kw>
<msg timestamp="20201112 10:15:53.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019920528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.901" endtime="20201112 10:15:53.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019920528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.193" endtime="20201112 10:15:53.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.201" endtime="20201112 10:15:53.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.899" endtime="20201112 10:15:53.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.897" endtime="20201112 10:15:53.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:53.208" level="INFO">${RESULT} = [{'time': 0.019920528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.941700000000136e-05, 'source_diff': 8.941700000000136e-05}, {'time': 0.020016569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:53.204" endtime="20201112 10:15:53.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:53.221" level="INFO">${ACCURACY} = {'source_diff': [8.941700000000136e-05, 8.977700000000269e-05, 8.990300000000229e-05, 8.942999999999798e-05, 9.026399999999962e-05, 8.952699999999897e-05, 9.008300000000122e-05, 9.004199999999851e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:53.209" endtime="20201112 10:15:53.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.226" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 10:15:53.225" endtime="20201112 10:15:53.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.228" level="INFO">VALUE: [8.941700000000136e-05, 8.977700000000269e-05, 8.990300000000229e-05, 8.942999999999798e-05, 9.026399999999962e-05, 8.952699999999897e-05, 9.008300000000122e-05, 9.004199999999851e-05, 8.941700000000136e-05, 9.026399999999962e-05, 8.990299999999882e-05, 8.979200000000173e-05, 9.030599999999833e-05, 8.955600000000105e-05, 9.027799999999919e-05, 8.973599999999998e-05, 8.96939999999978e-05, 8.975000000000302e-05, 8.942999999999798e-05, 9.005499999999861e-05, 9.030599999999833e-05, 8.998599999999676e-05, 9.01389999999995e-05, 9.001399999999937e-05, 8.995900000000057e-05, 8.934799999999951e-05, 8.992999999999848e-05, 9.012499999999993e-05, 8.99999999999998e-05, 8.981899999999793e-05, 8.963900000000247e-05, 8.961199999999933e-05, 8.974999999999955e-05, 8.959700000000029e-05, 8.9638999999999e-05, 9.016699999999864e-05, 8.955600000000105e-05, 8.945900000000007e-05, 9.026300000000015e-05, 9.012499999999993e-05, 9.01670000000021e-05, 9.001400000000284e-05, 9.025000000000005e-05, 8.944499999999703e-05, 8.987499999999968e-05, 8.954199999999801e-05, 8.940299999999832e-05, 8.957000000000062e-05, 9.002699999999947e-05, 8.962499999999943e-05]</msg>
<status status="PASS" starttime="20201112 10:15:53.227" endtime="20201112 10:15:53.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.222" endtime="20201112 10:15:53.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.232" endtime="20201112 10:15:53.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:53.235" endtime="20201112 10:15:53.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.234" endtime="20201112 10:15:53.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.230" endtime="20201112 10:15:53.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.862" endtime="20201112 10:15:53.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.861" endtime="20201112 10:15:53.256"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.265" endtime="20201112 10:15:53.284"></status>
</kw>
<msg timestamp="20201112 10:15:53.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.263" endtime="20201112 10:15:53.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.285" endtime="20201112 10:15:53.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.288" endtime="20201112 10:15:53.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.261" endtime="20201112 10:15:53.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.259" endtime="20201112 10:15:53.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.297" endtime="20201112 10:15:53.583"></status>
</kw>
<msg timestamp="20201112 10:15:53.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.296" endtime="20201112 10:15:53.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.587" endtime="20201112 10:15:53.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.595" endtime="20201112 10:15:53.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.293" endtime="20201112 10:15:53.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.292" endtime="20201112 10:15:53.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:53.602" level="INFO">${RESULT} = [{'time': 0.019797264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.062499999999696e-05, 'source_diff': 9.062499999999696e-05}, {'time': 0.019892236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:53.599" endtime="20201112 10:15:53.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:53.616" level="INFO">${ACCURACY} = {'source_diff': [9.062499999999696e-05, 9.129199999999976e-05, 9.051399999999987e-05, 9.038899999999975e-05, 9.090299999999982e-05, 9.093099999999896e-05, 9.116699999999964e-05, 9.090300000000329e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:53.603" endtime="20201112 10:15:53.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.620" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 10:15:53.619" endtime="20201112 10:15:53.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.623" level="INFO">VALUE: [9.062499999999696e-05, 9.129199999999976e-05, 9.051399999999987e-05, 9.038899999999975e-05, 9.090299999999982e-05, 9.093099999999896e-05, 9.116699999999964e-05, 9.090300000000329e-05, 9.1332999999999e-05, 9.108299999999875e-05, 9.056899999999868e-05, 9.062500000000043e-05, 9.077799999999969e-05, 9.051399999999987e-05, 9.106899999999918e-05, 9.048599999999726e-05, 9.098599999999776e-05, 9.059800000000076e-05, 9.10000000000008e-05, 9.086200000000058e-05, 9.044400000000202e-05, 9.069400000000227e-05, 9.117999999999973e-05, 9.127800000000019e-05, 9.117999999999973e-05, 9.106899999999918e-05, 9.083300000000197e-05, 9.072200000000141e-05, 9.083399999999797e-05, 9.090299999999982e-05, 9.056999999999815e-05, 9.104099999999657e-05, 9.08329999999985e-05, 9.10139999999969e-05, 9.111200000000083e-05, 9.070800000000184e-05, 9.1332999999999e-05, 9.093099999999896e-05, 9.069499999999828e-05, 9.058400000000119e-05, 9.091699999999939e-05, 9.083399999999797e-05, 9.051399999999987e-05, 9.104199999999951e-05, 9.115300000000007e-05, 9.099999999999733e-05, 9.061100000000086e-05, 9.090299999999982e-05, 9.0639e-05, 9.1332999999999e-05]</msg>
<status status="PASS" starttime="20201112 10:15:53.621" endtime="20201112 10:15:53.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.617" endtime="20201112 10:15:53.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.631" endtime="20201112 10:15:53.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:53.635" endtime="20201112 10:15:53.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.633" endtime="20201112 10:15:53.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.629" endtime="20201112 10:15:53.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.257" endtime="20201112 10:15:53.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.257" endtime="20201112 10:15:53.656"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.664" endtime="20201112 10:15:53.684"></status>
</kw>
<msg timestamp="20201112 10:15:53.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.663" endtime="20201112 10:15:53.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.685" endtime="20201112 10:15:53.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.688" endtime="20201112 10:15:53.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.660" endtime="20201112 10:15:53.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.658" endtime="20201112 10:15:53.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.698" endtime="20201112 10:15:53.983"></status>
</kw>
<msg timestamp="20201112 10:15:53.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.696" endtime="20201112 10:15:53.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.988" endtime="20201112 10:15:53.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.996" endtime="20201112 10:15:53.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.694" endtime="20201112 10:15:53.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.692" endtime="20201112 10:15:53.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.003" level="INFO">${RESULT} = [{'time': 0.020034681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.158399999999872e-05, 'source_diff': 9.158399999999872e-05}, {'time': 0.020135694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:53.999" endtime="20201112 10:15:54.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:54.018" level="INFO">${ACCURACY} = {'source_diff': [9.158399999999872e-05, 9.158299999999925e-05, 9.208299999999975e-05, 9.218000000000073e-05, 9.140300000000032e-05, 9.187499999999821e-05, 9.19719999999992e-05, 9.165300000000057e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:54.004" endtime="20201112 10:15:54.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.022" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 10:15:54.021" endtime="20201112 10:15:54.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.025" level="INFO">VALUE: [9.158399999999872e-05, 9.158299999999925e-05, 9.208299999999975e-05, 9.218000000000073e-05, 9.140300000000032e-05, 9.187499999999821e-05, 9.19719999999992e-05, 9.165300000000057e-05, 9.18199999999994e-05, 9.190300000000082e-05, 9.223600000000248e-05, 9.219499999999978e-05, 9.225000000000205e-05, 9.223599999999901e-05, 9.156899999999968e-05, 9.236099999999914e-05, 9.154200000000001e-05, 9.168099999999971e-05, 9.169499999999928e-05, 9.219499999999978e-05, 9.188900000000125e-05, 9.159799999999829e-05, 9.186199999999811e-05, 9.161100000000186e-05, 9.142999999999998e-05, 9.208299999999975e-05, 9.206900000000018e-05, 9.141699999999989e-05, 9.223599999999901e-05, 9.218100000000021e-05, 9.233399999999947e-05, 9.226399999999815e-05, 9.213899999999803e-05, 9.202800000000094e-05, 9.138900000000075e-05, 9.224999999999858e-05, 9.194400000000005e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.195799999999962e-05, 9.236099999999914e-05, 9.14589999999986e-05, 9.19589999999991e-05, 9.205600000000008e-05, 9.176400000000112e-05, 9.212500000000193e-05, 9.179100000000079e-05, 9.179099999999732e-05, 9.198600000000223e-05, 9.209699999999932e-05]</msg>
<status status="PASS" starttime="20201112 10:15:54.023" endtime="20201112 10:15:54.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.018" endtime="20201112 10:15:54.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.028" endtime="20201112 10:15:54.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.032" endtime="20201112 10:15:54.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.030" endtime="20201112 10:15:54.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.027" endtime="20201112 10:15:54.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.657" endtime="20201112 10:15:54.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.656" endtime="20201112 10:15:54.053"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.062" endtime="20201112 10:15:54.081"></status>
</kw>
<msg timestamp="20201112 10:15:54.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.061" endtime="20201112 10:15:54.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.083" endtime="20201112 10:15:54.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.085" endtime="20201112 10:15:54.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.058" endtime="20201112 10:15:54.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.056" endtime="20201112 10:15:54.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.095" endtime="20201112 10:15:54.381"></status>
</kw>
<msg timestamp="20201112 10:15:54.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020995583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.094" endtime="20201112 10:15:54.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020995583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.385" endtime="20201112 10:15:54.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.394" endtime="20201112 10:15:54.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.091" endtime="20201112 10:15:54.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.089" endtime="20201112 10:15:54.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.400" level="INFO">${RESULT} = [{'time': 0.020995583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.329100000000229e-05, 'source_diff': 9.329100000000229e-05}, {'time': 0.021097583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:54.397" endtime="20201112 10:15:54.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:54.414" level="INFO">${ACCURACY} = {'source_diff': [9.329100000000229e-05, 9.243000000000098e-05, 9.287499999999921e-05, 9.25000000000023e-05, 9.240299999999785e-05, 9.308299999999728e-05, 9.276400000000212e-05, 9.241700000000089e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:54.401" endtime="20201112 10:15:54.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.418" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 10:15:54.417" endtime="20201112 10:15:54.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.421" level="INFO">VALUE: [9.329100000000229e-05, 9.243000000000098e-05, 9.287499999999921e-05, 9.25000000000023e-05, 9.240299999999785e-05, 9.308299999999728e-05, 9.276400000000212e-05, 9.241700000000089e-05, 9.330600000000133e-05, 9.322299999999992e-05, 9.322200000000044e-05, 9.31520000000026e-05, 9.294399999999758e-05, 9.295799999999715e-05, 9.299999999999933e-05, 9.295800000000062e-05, 9.327800000000219e-05, 9.27079999999969e-05, 9.30139999999989e-05, 9.31529999999986e-05, 9.326299999999968e-05, 9.288899999999878e-05, 9.324999999999958e-05, 9.255500000000111e-05, 9.30139999999989e-05, 9.287500000000268e-05, 9.254200000000101e-05, 9.309700000000032e-05, 9.318100000000121e-05, 9.28200000000004e-05, 9.33200000000009e-05, 9.2639000000002e-05, 9.327699999999925e-05, 9.304099999999857e-05, 9.237500000000218e-05, 9.281900000000093e-05, 9.291700000000139e-05, 9.331899999999796e-05, 9.277800000000169e-05, 9.261100000000286e-05, 9.274999999999908e-05, 9.298599999999976e-05, 9.243100000000046e-05, 9.236199999999861e-05, 9.255499999999764e-05, 9.286099999999964e-05, 9.238900000000175e-05, 9.248600000000273e-05, 9.273599999999951e-05, 9.25139999999984e-05]</msg>
<status status="PASS" starttime="20201112 10:15:54.420" endtime="20201112 10:15:54.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.415" endtime="20201112 10:15:54.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.425" endtime="20201112 10:15:54.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.428" endtime="20201112 10:15:54.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.427" endtime="20201112 10:15:54.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.423" endtime="20201112 10:15:54.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.054" endtime="20201112 10:15:54.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.053" endtime="20201112 10:15:54.449"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.458" endtime="20201112 10:15:54.478"></status>
</kw>
<msg timestamp="20201112 10:15:54.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.456" endtime="20201112 10:15:54.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.480" endtime="20201112 10:15:54.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.482" endtime="20201112 10:15:54.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.453" endtime="20201112 10:15:54.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.451" endtime="20201112 10:15:54.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.492" endtime="20201112 10:15:54.778"></status>
</kw>
<msg timestamp="20201112 10:15:54.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020766653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.490" endtime="20201112 10:15:54.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020766653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.782" endtime="20201112 10:15:54.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.790" endtime="20201112 10:15:54.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.488" endtime="20201112 10:15:54.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.486" endtime="20201112 10:15:54.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.797" level="INFO">${RESULT} = [{'time': 0.020766653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.354199999999854e-05, 'source_diff': 9.354199999999854e-05}, {'time': 0.020865653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:54.794" endtime="20201112 10:15:54.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:54.811" level="INFO">${ACCURACY} = {'source_diff': [9.354199999999854e-05, 9.372200000000094e-05, 9.39729999999972e-05, 9.348699999999974e-05, 9.406999999999818e-05, 9.427700000000025e-05, 9.379099999999932e-05, 9.390299999999935e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:54.798" endtime="20201112 10:15:54.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.815" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 10:15:54.814" endtime="20201112 10:15:54.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.818" level="INFO">VALUE: [9.354199999999854e-05, 9.372200000000094e-05, 9.39729999999972e-05, 9.348699999999974e-05, 9.406999999999818e-05, 9.427700000000025e-05, 9.379099999999932e-05, 9.390299999999935e-05, 9.348600000000026e-05, 9.386100000000064e-05, 9.409699999999785e-05, 9.338899999999928e-05, 9.436099999999767e-05, 9.434800000000104e-05, 9.424999999999711e-05, 9.391699999999892e-05, 9.36659999999992e-05, 9.386100000000064e-05, 9.380499999999889e-05, 9.338900000000275e-05, 9.426400000000015e-05, 9.406899999999871e-05, 9.429200000000276e-05, 9.352800000000244e-05, 9.340300000000232e-05, 9.388899999999978e-05, 9.38880000000003e-05, 9.386100000000064e-05, 9.377699999999975e-05, 9.358300000000125e-05, 9.386100000000064e-05, 9.36529999999991e-05, 9.433299999999853e-05, 9.345800000000112e-05, 9.395800000000162e-05, 9.436100000000114e-05, 9.41529999999996e-05, 9.38339999999975e-05, 9.337499999999971e-05, 9.337500000000318e-05, 9.366699999999867e-05, 9.411100000000089e-05, 9.398600000000076e-05, 9.408299999999828e-05, 9.376400000000312e-05, 9.373600000000051e-05, 9.413900000000003e-05, 9.356900000000168e-05, 9.351299999999993e-05, 9.344400000000155e-05]</msg>
<status status="PASS" starttime="20201112 10:15:54.816" endtime="20201112 10:15:54.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.812" endtime="20201112 10:15:54.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.821" endtime="20201112 10:15:54.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.825" endtime="20201112 10:15:54.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.823" endtime="20201112 10:15:54.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.820" endtime="20201112 10:15:54.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.450" endtime="20201112 10:15:54.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.449" endtime="20201112 10:15:54.846"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.855" endtime="20201112 10:15:54.876"></status>
</kw>
<msg timestamp="20201112 10:15:54.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.853" endtime="20201112 10:15:54.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.877" endtime="20201112 10:15:54.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.880" endtime="20201112 10:15:54.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.850" endtime="20201112 10:15:54.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.848" endtime="20201112 10:15:54.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.890" endtime="20201112 10:15:55.174"></status>
</kw>
<msg timestamp="20201112 10:15:55.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021138569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.888" endtime="20201112 10:15:55.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021138569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:55.179" endtime="20201112 10:15:55.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.187" endtime="20201112 10:15:55.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.885" endtime="20201112 10:15:55.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.884" endtime="20201112 10:15:55.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:55.194" level="INFO">${RESULT} = [{'time': 0.021138569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.52079999999994e-05, 'source_diff': 9.52079999999994e-05}, {'time': 0.021240583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:55.190" endtime="20201112 10:15:55.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:55.207" level="INFO">${ACCURACY} = {'source_diff': [9.52079999999994e-05, 9.522199999999897e-05, 9.44859999999978e-05, 9.493000000000001e-05, 9.513900000000103e-05, 9.527800000000072e-05, 9.450000000000083e-05, 9.488899999999731e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:15:55.195" endtime="20201112 10:15:55.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.212" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 10:15:55.211" endtime="20201112 10:15:55.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.214" level="INFO">VALUE: [9.52079999999994e-05, 9.522199999999897e-05, 9.44859999999978e-05, 9.493000000000001e-05, 9.513900000000103e-05, 9.527800000000072e-05, 9.450000000000083e-05, 9.488899999999731e-05, 9.466699999999967e-05, 9.520900000000235e-05, 9.531899999999996e-05, 9.523599999999854e-05, 9.440200000000037e-05, 9.502800000000047e-05, 9.524999999999811e-05, 9.477800000000022e-05, 9.533299999999953e-05, 9.461099999999792e-05, 9.469499999999881e-05, 9.441699999999942e-05, 9.51530000000006e-05, 9.445799999999865e-05, 9.479100000000032e-05, 9.459700000000182e-05, 9.526399999999768e-05, 9.437500000000071e-05, 9.443100000000246e-05, 9.48469999999986e-05, 9.512499999999799e-05, 9.49720000000022e-05, 9.483400000000197e-05, 9.5333999999999e-05, 9.516599999999723e-05, 9.491600000000044e-05, 9.461100000000139e-05, 9.445800000000212e-05, 9.455599999999911e-05, 9.481999999999893e-05, 9.516700000000017e-05, 9.458399999999825e-05, 9.509699999999885e-05, 9.437500000000071e-05, 9.515200000000112e-05, 9.43880000000008e-05, 9.488899999999731e-05, 9.46530000000001e-05, 9.440299999999985e-05, 9.480499999999989e-05, 9.456999999999868e-05, 9.459699999999835e-05]</msg>
<status status="PASS" starttime="20201112 10:15:55.213" endtime="20201112 10:15:55.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.208" endtime="20201112 10:15:55.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.218" endtime="20201112 10:15:55.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:55.221" endtime="20201112 10:15:55.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.220" endtime="20201112 10:15:55.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.216" endtime="20201112 10:15:55.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.847" endtime="20201112 10:15:55.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.846" endtime="20201112 10:15:55.243"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.252" endtime="20201112 10:15:55.271"></status>
</kw>
<msg timestamp="20201112 10:15:55.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.250" endtime="20201112 10:15:55.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.272" endtime="20201112 10:15:55.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.275" endtime="20201112 10:15:55.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.248" endtime="20201112 10:15:55.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.246" endtime="20201112 10:15:55.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.285" endtime="20201112 10:15:55.585"></status>
</kw>
<msg timestamp="20201112 10:15:55.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020861764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020957181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:55.283" endtime="20201112 10:15:55.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020861764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020957181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:55.595" endtime="20201112 10:15:55.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.614" endtime="20201112 10:15:55.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.281" endtime="20201112 10:15:55.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.279" endtime="20201112 10:15:55.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:55.628" level="INFO">${RESULT} = [{'time': 0.020957181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.541699999999695e-05, 'source_diff': 9.541699999999695e-05}, {'time': 0.021057194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:55.622" endtime="20201112 10:15:55.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:55.643" level="INFO">${ACCURACY} = {'source_diff': [9.541699999999695e-05, 9.606900000000071e-05, 9.540300000000085e-05, 9.58469999999996e-05, 9.630500000000139e-05, 9.631899999999749e-05, 9.619399999999736e-05, 9.583300000000003e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:55.629" endtime="20201112 10:15:55.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.647" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 10:15:55.646" endtime="20201112 10:15:55.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.650" level="INFO">VALUE: [9.541699999999695e-05, 9.606900000000071e-05, 9.540300000000085e-05, 9.58469999999996e-05, 9.630500000000139e-05, 9.631899999999749e-05, 9.619399999999736e-05, 9.583300000000003e-05, 9.566700000000067e-05, 9.540300000000085e-05, 9.616700000000117e-05, 9.54729999999987e-05, 9.59859999999993e-05, 9.590200000000187e-05, 9.581899999999699e-05, 9.615299999999813e-05, 9.57079999999999e-05, 9.606900000000071e-05, 9.597199999999972e-05, 9.626400000000215e-05, 9.605600000000061e-05, 9.577700000000175e-05, 9.618100000000074e-05, 9.573599999999904e-05, 9.581900000000046e-05, 9.588900000000178e-05, 9.566700000000067e-05, 9.606899999999724e-05, 9.556900000000021e-05, 9.63059999999974e-05, 9.573599999999904e-05, 9.626399999999868e-05, 9.566599999999773e-05, 9.579099999999785e-05, 9.625000000000258e-05, 9.595800000000015e-05, 9.552800000000097e-05, 9.618000000000126e-05, 9.556900000000021e-05, 9.544499999999956e-05, 9.618100000000074e-05, 9.626300000000268e-05, 9.591699999999745e-05, 9.619400000000083e-05, 9.631900000000096e-05, 9.627800000000172e-05, 9.566599999999773e-05, 9.579099999999785e-05, 9.608300000000028e-05, 9.554200000000054e-05]</msg>
<status status="PASS" starttime="20201112 10:15:55.649" endtime="20201112 10:15:55.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.644" endtime="20201112 10:15:55.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.654" endtime="20201112 10:15:55.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:55.657" endtime="20201112 10:15:55.677"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.656" endtime="20201112 10:15:55.677"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.652" endtime="20201112 10:15:55.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.244" endtime="20201112 10:15:55.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.244" endtime="20201112 10:15:55.678"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.687" endtime="20201112 10:15:55.707"></status>
</kw>
<msg timestamp="20201112 10:15:55.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.686" endtime="20201112 10:15:55.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.708" endtime="20201112 10:15:55.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.711" endtime="20201112 10:15:55.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.683" endtime="20201112 10:15:55.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.681" endtime="20201112 10:15:55.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.721" endtime="20201112 10:15:56.007"></status>
</kw>
<msg timestamp="20201112 10:15:56.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020930292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021027569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:55.720" endtime="20201112 10:15:56.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020930292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021027569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.012" endtime="20201112 10:15:56.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.020" endtime="20201112 10:15:56.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.717" endtime="20201112 10:15:56.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.715" endtime="20201112 10:15:56.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.027" level="INFO">${RESULT} = [{'time': 0.021027569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.727699999999978e-05, 'source_diff': 9.727699999999978e-05}, {'time': 0.021130583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:56.024" endtime="20201112 10:15:56.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:56.041" level="INFO">${ACCURACY} = {'source_diff': [9.727699999999978e-05, 9.723600000000054e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.655499999999817e-05, 9.673600000000004e-05, 9.695900000000063e-05, 9.657000000000068e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:56.028" endtime="20201112 10:15:56.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.046" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 10:15:56.045" endtime="20201112 10:15:56.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.049" level="INFO">VALUE: [9.727699999999978e-05, 9.723600000000054e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.655499999999817e-05, 9.673600000000004e-05, 9.695900000000063e-05, 9.657000000000068e-05, 9.707000000000118e-05, 9.668000000000176e-05, 9.729099999999935e-05, 9.674999999999961e-05, 9.64859999999998e-05, 9.715299999999913e-05, 9.694399999999812e-05, 9.730600000000186e-05, 9.676399999999918e-05, 9.712499999999999e-05, 9.72219999999975e-05, 9.659799999999982e-05, 9.70409999999991e-05, 9.670900000000038e-05, 9.686100000000017e-05, 9.716599999999923e-05, 9.645799999999718e-05, 9.656899999999774e-05, 9.67920000000018e-05, 9.644399999999761e-05, 9.638900000000228e-05, 9.654199999999807e-05, 9.669500000000081e-05, 9.658299999999731e-05, 9.737500000000024e-05, 9.659699999999688e-05, 9.725000000000011e-05, 9.704199999999857e-05, 9.658300000000078e-05, 9.68059999999979e-05, 9.683299999999756e-05, 9.699999999999986e-05, 9.669400000000133e-05, 9.68470000000006e-05, 9.681899999999799e-05, 9.687499999999974e-05, 9.706899999999824e-05, 9.65140000000024e-05, 9.712499999999999e-05, 9.659699999999688e-05, 9.71530000000026e-05, 9.722200000000097e-05]</msg>
<status status="PASS" starttime="20201112 10:15:56.047" endtime="20201112 10:15:56.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.042" endtime="20201112 10:15:56.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.052" endtime="20201112 10:15:56.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.056" endtime="20201112 10:15:56.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.054" endtime="20201112 10:15:56.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.051" endtime="20201112 10:15:56.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.679" endtime="20201112 10:15:56.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.679" endtime="20201112 10:15:56.079"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.089" endtime="20201112 10:15:56.109"></status>
</kw>
<msg timestamp="20201112 10:15:56.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.087" endtime="20201112 10:15:56.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.110" endtime="20201112 10:15:56.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.113" endtime="20201112 10:15:56.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.084" endtime="20201112 10:15:56.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.082" endtime="20201112 10:15:56.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.123" endtime="20201112 10:15:56.425"></status>
</kw>
<msg timestamp="20201112 10:15:56.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022961875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.121" endtime="20201112 10:15:56.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022961875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.434" endtime="20201112 10:15:56.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.444" endtime="20201112 10:15:56.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.119" endtime="20201112 10:15:56.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.117" endtime="20201112 10:15:56.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.451" level="INFO">${RESULT} = [{'time': 0.023059639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.776400000000018e-05, 'source_diff': 9.776400000000018e-05}, {'time': 0.023162667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:56.447" endtime="20201112 10:15:56.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:56.464" level="INFO">${ACCURACY} = {'source_diff': [9.776400000000018e-05, 9.790299999999988e-05, 9.829100000000035e-05, 9.826400000000068e-05, 9.794500000000206e-05, 9.743000000000251e-05, 9.811100000000142e-05, 9.808299999999881e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:56.452" endtime="20201112 10:15:56.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.469" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 10:15:56.468" endtime="20201112 10:15:56.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.471" level="INFO">VALUE: [9.776400000000018e-05, 9.790299999999988e-05, 9.829100000000035e-05, 9.826400000000068e-05, 9.794500000000206e-05, 9.743000000000251e-05, 9.811100000000142e-05, 9.808299999999881e-05, 9.833300000000253e-05, 9.761099999999745e-05, 9.777800000000322e-05, 9.791700000000292e-05, 9.826400000000068e-05, 9.740299999999938e-05, 9.781999999999846e-05, 9.833299999999906e-05, 9.813900000000056e-05, 9.834699999999863e-05, 9.743000000000251e-05, 9.818099999999927e-05, 9.77920000000028e-05, 9.806999999999871e-05, 9.7721999999998e-05, 9.77920000000028e-05, 9.811200000000089e-05, 9.79730000000012e-05, 9.747200000000122e-05, 9.768000000000276e-05, 9.747200000000122e-05, 9.805600000000261e-05, 9.831899999999949e-05, 9.768099999999877e-05, 9.815300000000013e-05, 9.759699999999788e-05, 9.743099999999852e-05, 9.759700000000135e-05, 9.808299999999881e-05, 9.765200000000016e-05, 9.770799999999843e-05, 9.755499999999917e-05, 9.763900000000006e-05, 9.77920000000028e-05, 9.824999999999764e-05, 9.741699999999895e-05, 9.761099999999745e-05, 9.788900000000031e-05, 9.805499999999967e-05, 9.773600000000104e-05, 9.783300000000203e-05, 9.826400000000068e-05]</msg>
<status status="PASS" starttime="20201112 10:15:56.470" endtime="20201112 10:15:56.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.465" endtime="20201112 10:15:56.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.475" endtime="20201112 10:15:56.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.478" endtime="20201112 10:15:56.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.477" endtime="20201112 10:15:56.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.473" endtime="20201112 10:15:56.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.080" endtime="20201112 10:15:56.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.080" endtime="20201112 10:15:56.499"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.508" endtime="20201112 10:15:56.527"></status>
</kw>
<msg timestamp="20201112 10:15:56.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.506" endtime="20201112 10:15:56.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.528" endtime="20201112 10:15:56.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.531" endtime="20201112 10:15:56.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.504" endtime="20201112 10:15:56.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.502" endtime="20201112 10:15:56.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.540" endtime="20201112 10:15:56.827"></status>
</kw>
<msg timestamp="20201112 10:15:56.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.539" endtime="20201112 10:15:56.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.831" endtime="20201112 10:15:56.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.839" endtime="20201112 10:15:56.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.536" endtime="20201112 10:15:56.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.535" endtime="20201112 10:15:56.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.846" level="INFO">${RESULT} = [{'time': 0.019754306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.929200000000082e-05, 'source_diff': 9.929200000000082e-05}, {'time': 0.019861306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:56.842" endtime="20201112 10:15:56.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:56.859" level="INFO">${ACCURACY} = {'source_diff': [9.929200000000082e-05, 9.877799999999728e-05, 9.859699999999888e-05, 9.901399999999796e-05, 9.873599999999857e-05, 9.85280000000005e-05, 9.92219999999995e-05, 9.894499999999959e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:15:56.847" endtime="20201112 10:15:56.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.864" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 10:15:56.863" endtime="20201112 10:15:56.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.866" level="INFO">VALUE: [9.929200000000082e-05, 9.877799999999728e-05, 9.859699999999888e-05, 9.901399999999796e-05, 9.873599999999857e-05, 9.85280000000005e-05, 9.92219999999995e-05, 9.894499999999959e-05, 9.855599999999964e-05, 9.909699999999938e-05, 9.926400000000168e-05, 9.900000000000186e-05, 9.906900000000024e-05, 9.897199999999926e-05, 9.854200000000007e-05, 9.908299999999981e-05, 9.841699999999995e-05, 9.926400000000168e-05, 9.874999999999814e-05, 9.901400000000143e-05, 9.893100000000002e-05, 9.863900000000106e-05, 9.890299999999741e-05, 9.855500000000017e-05, 9.887500000000174e-05, 9.902799999999753e-05, 9.887500000000174e-05, 9.901399999999796e-05, 9.911100000000242e-05, 9.909799999999885e-05, 9.843099999999952e-05, 9.931999999999996e-05, 9.843099999999952e-05, 9.906900000000024e-05, 9.937499999999877e-05, 9.89999999999984e-05, 9.904200000000057e-05, 9.875000000000161e-05, 9.88470000000026e-05, 9.854200000000007e-05, 9.937499999999877e-05, 9.886200000000164e-05, 9.897299999999873e-05, 9.909699999999938e-05, 9.855500000000017e-05, 9.92219999999995e-05, 9.900000000000186e-05, 9.86670000000002e-05, 9.886100000000217e-05, 9.93609999999992e-05]</msg>
<status status="PASS" starttime="20201112 10:15:56.865" endtime="20201112 10:15:56.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.860" endtime="20201112 10:15:56.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.870" endtime="20201112 10:15:56.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.873" endtime="20201112 10:15:56.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.871" endtime="20201112 10:15:56.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.868" endtime="20201112 10:15:56.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.500" endtime="20201112 10:15:56.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.500" endtime="20201112 10:15:56.894"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.902" endtime="20201112 10:15:56.921"></status>
</kw>
<msg timestamp="20201112 10:15:56.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.901" endtime="20201112 10:15:56.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.923" endtime="20201112 10:15:56.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.925" endtime="20201112 10:15:56.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.899" endtime="20201112 10:15:56.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.896" endtime="20201112 10:15:56.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.935" endtime="20201112 10:15:57.221"></status>
</kw>
<msg timestamp="20201112 10:15:57.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.934" endtime="20201112 10:15:57.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.225" endtime="20201112 10:15:57.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.234" endtime="20201112 10:15:57.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.931" endtime="20201112 10:15:57.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.929" endtime="20201112 10:15:57.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:57.240" level="INFO">${RESULT} = [{'time': 0.020536458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.963900000000206e-05, 'source_diff': 9.963900000000206e-05}, {'time': 0.020641472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:57.237" endtime="20201112 10:15:57.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:57.255" level="INFO">${ACCURACY} = {'source_diff': [9.963900000000206e-05, 9.948599999999932e-05, 9.973599999999957e-05, 9.988899999999884e-05, 0.00010006899999999777, 0.00010033299999999759, 0.0001003199999999975, 0.000100263999999999...</msg>
<status status="PASS" starttime="20201112 10:15:57.241" endtime="20201112 10:15:57.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.259" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 10:15:57.258" endtime="20201112 10:15:57.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.262" level="INFO">VALUE: [9.963900000000206e-05, 9.948599999999932e-05, 9.973599999999957e-05, 9.988899999999884e-05, 0.00010006899999999777, 0.00010033299999999759, 0.0001003199999999975, 0.00010026399999999921, 9.969500000000034e-05, 9.967999999999783e-05, 9.975000000000261e-05, 9.987499999999927e-05, 9.983299999999709e-05, 9.987499999999927e-05, 9.948599999999932e-05, 9.943100000000052e-05, 9.959799999999935e-05, 9.982000000000046e-05, 0.00010033300000000106, 9.94999999999989e-05, 9.958300000000031e-05, 0.00010005500000000167, 0.00010013900000000256, 9.98479999999996e-05, 0.00010032000000000096, 0.00010030599999999792, 9.976399999999871e-05, 9.955600000000064e-05, 0.00010026399999999921, 9.955600000000064e-05, 0.00010009700000000038, 0.0001003610000000002, 9.966600000000173e-05, 0.00010033299999999759, 0.00010033300000000106, 9.950000000000236e-05, 9.948599999999932e-05, 0.00010018100000000127, 9.938899999999834e-05, 9.991700000000145e-05, 0.00010013899999999909, 0.00010013899999999909, 9.987499999999927e-05, 9.990299999999841e-05, 9.973599999999957e-05, 9.977800000000175e-05, 0.00010019500000000084, 9.984700000000013e-05, 9.959799999999935e-05, 9.990299999999841e-05]</msg>
<status status="PASS" starttime="20201112 10:15:57.260" endtime="20201112 10:15:57.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.256" endtime="20201112 10:15:57.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.265" endtime="20201112 10:15:57.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:57.269" endtime="20201112 10:15:57.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.267" endtime="20201112 10:15:57.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.264" endtime="20201112 10:15:57.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.895" endtime="20201112 10:15:57.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.894" endtime="20201112 10:15:57.289"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.298" endtime="20201112 10:15:57.317"></status>
</kw>
<msg timestamp="20201112 10:15:57.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.296" endtime="20201112 10:15:57.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.319" endtime="20201112 10:15:57.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.321" endtime="20201112 10:15:57.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.294" endtime="20201112 10:15:57.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.292" endtime="20201112 10:15:57.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.331" endtime="20201112 10:15:57.617"></status>
</kw>
<msg timestamp="20201112 10:15:57.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019667264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.330" endtime="20201112 10:15:57.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019667264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.621" endtime="20201112 10:15:57.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.629" endtime="20201112 10:15:57.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.327" endtime="20201112 10:15:57.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.325" endtime="20201112 10:15:57.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:57.635" level="INFO">${RESULT} = [{'time': 0.019768375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010111100000000095, 'source_diff': 0.00010111100000000095}, {'time': 0.019872389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:57.632" endtime="20201112 10:15:57.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:57.648" level="INFO">${ACCURACY} = {'source_diff': [0.00010111100000000095, 0.00010102799999999953, 0.0001006670000000022, 0.00010051399999999946, 0.0001004999999999999, 0.00010051399999999946, 0.00010080499999999895, 0.000100847000000...</msg>
<status status="PASS" starttime="20201112 10:15:57.636" endtime="20201112 10:15:57.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.653" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 10:15:57.652" endtime="20201112 10:15:57.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.655" level="INFO">VALUE: [0.00010111100000000095, 0.00010102799999999953, 0.0001006670000000022, 0.00010051399999999946, 0.0001004999999999999, 0.00010051399999999946, 0.00010080499999999895, 0.00010084700000000113, 0.0001008610000000007, 0.00010059699999999741, 0.0001010000000000004, 0.00010126400000000021, 0.00010090299999999941, 0.0001006670000000022, 0.00010037499999999977, 0.00010097300000000073, 0.0001005549999999987, 0.000100722000000001, 0.00010052799999999903, 0.0001008480000000006, 0.00010037499999999977, 0.00010133399999999806, 0.00010037499999999977, 0.00010116699999999923, 0.00010086099999999723, 0.00010107000000000171, 0.00010044400000000162, 0.00010073600000000058, 0.00010044400000000162, 0.00010048600000000033, 0.00010098600000000083, 0.00010061100000000045, 0.00010069500000000134, 0.000101028000000003, 0.0001013610000000012, 0.00010130599999999892, 0.00010066699999999873, 0.00010131900000000249, 0.00010081899999999852, 0.00010127799999999978, 0.00010040299999999891, 0.00010061100000000045, 0.00010088899999999984, 0.00010101399999999996, 0.00010058399999999731, 0.00010133400000000153, 0.00010091700000000245, 0.00010056900000000174, 0.0001009159999999995, 0.0001005549999999987]</msg>
<status status="PASS" starttime="20201112 10:15:57.654" endtime="20201112 10:15:57.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.649" endtime="20201112 10:15:57.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.659" endtime="20201112 10:15:57.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:57.662" endtime="20201112 10:15:57.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.661" endtime="20201112 10:15:57.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.657" endtime="20201112 10:15:57.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.290" endtime="20201112 10:15:57.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.290" endtime="20201112 10:15:57.683"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.692" endtime="20201112 10:15:57.711"></status>
</kw>
<msg timestamp="20201112 10:15:57.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.690" endtime="20201112 10:15:57.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.712" endtime="20201112 10:15:57.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.715" endtime="20201112 10:15:57.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.688" endtime="20201112 10:15:57.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.686" endtime="20201112 10:15:57.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.724" endtime="20201112 10:15:58.010"></status>
</kw>
<msg timestamp="20201112 10:15:58.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.723" endtime="20201112 10:15:58.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.014" endtime="20201112 10:15:58.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.022" endtime="20201112 10:15:58.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.720" endtime="20201112 10:15:58.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.719" endtime="20201112 10:15:58.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:58.029" level="INFO">${RESULT} = [{'time': 0.019778556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010191699999999998, 'source_diff': 0.00010191699999999998}, {'time': 0.019886569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:58.025" endtime="20201112 10:15:58.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:58.042" level="INFO">${ACCURACY} = {'source_diff': [0.00010191699999999998, 0.0001016939999999994, 0.00010162500000000102, 0.00010188900000000084, 0.00010141699999999948, 0.0001015419999999996, 0.00010143099999999905, 0.000102166999999...</msg>
<status status="PASS" starttime="20201112 10:15:58.030" endtime="20201112 10:15:58.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.047" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 10:15:58.046" endtime="20201112 10:15:58.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.049" level="INFO">VALUE: [0.00010191699999999998, 0.0001016939999999994, 0.00010162500000000102, 0.00010188900000000084, 0.00010141699999999948, 0.0001015419999999996, 0.00010143099999999905, 0.00010216699999999676, 0.00010227800000000078, 0.00010172299999999801, 0.00010205599999999967, 0.00010156899999999927, 0.00010227700000000131, 0.00010138900000000034, 0.0001020420000000001, 0.00010224999999999818, 0.00010194500000000259, 0.00010136099999999773, 0.00010230599999999992, 0.00010161200000000092, 0.00010236200000000167, 0.00010204100000000063, 0.0001021939999999999, 0.00010215299999999719, 0.00010231900000000002, 0.00010156900000000274, 0.00010205599999999967, 0.00010138900000000034, 0.00010141700000000295, 0.00010172300000000148, 0.00010183300000000256, 0.00010188800000000137, 0.00010231900000000002, 0.00010226400000000122, 0.00010173600000000158, 0.0001023610000000022, 0.00010152800000000003, 0.00010205599999999967, 0.00010158400000000178, 0.00010219499999999937, 0.0001015000000000009, 0.00010233399999999906, 0.00010233299999999959, 0.00010180499999999995, 0.00010188900000000084, 0.00010233299999999959, 0.00010162500000000102, 0.00010197199999999879, 0.00010148599999999786, 0.00010158400000000178]</msg>
<status status="PASS" starttime="20201112 10:15:58.048" endtime="20201112 10:15:58.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.043" endtime="20201112 10:15:58.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.053" endtime="20201112 10:15:58.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:58.056" endtime="20201112 10:15:58.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.054" endtime="20201112 10:15:58.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.051" endtime="20201112 10:15:58.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.684" endtime="20201112 10:15:58.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.683" endtime="20201112 10:15:58.077"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.086" endtime="20201112 10:15:58.105"></status>
</kw>
<msg timestamp="20201112 10:15:58.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.084" endtime="20201112 10:15:58.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.106" endtime="20201112 10:15:58.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.109" endtime="20201112 10:15:58.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.082" endtime="20201112 10:15:58.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.079" endtime="20201112 10:15:58.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.120" endtime="20201112 10:15:58.406"></status>
</kw>
<msg timestamp="20201112 10:15:58.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.118" endtime="20201112 10:15:58.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.410" endtime="20201112 10:15:58.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.418" endtime="20201112 10:15:58.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.116" endtime="20201112 10:15:58.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.114" endtime="20201112 10:15:58.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:58.424" level="INFO">${RESULT} = [{'time': 0.019968083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010262500000000202, 'source_diff': 0.00010262500000000202}, {'time': 0.020076097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:58.421" endtime="20201112 10:15:58.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:58.438" level="INFO">${ACCURACY} = {'source_diff': [0.00010262500000000202, 0.0001031940000000009, 0.00010313900000000209, 0.0001026940000000004, 0.00010277799999999782, 0.00010256900000000027, 0.00010247199999999929, 0.000102569999999...</msg>
<status status="PASS" starttime="20201112 10:15:58.425" endtime="20201112 10:15:58.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.442" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 10:15:58.441" endtime="20201112 10:15:58.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.444" level="INFO">VALUE: [0.00010262500000000202, 0.0001031940000000009, 0.00010313900000000209, 0.0001026940000000004, 0.00010277799999999782, 0.00010256900000000027, 0.00010247199999999929, 0.00010256999999999974, 0.00010283400000000303, 0.00010312499999999905, 0.00010306900000000077, 0.0001031940000000009, 0.0001023749999999983, 0.00010294400000000065, 0.00010251400000000147, 0.0001028749999999988, 0.00010272299999999901, 0.00010266700000000073, 0.00010263899999999812, 0.00010266599999999779, 0.00010316600000000176, 0.00010284699999999966, 0.00010301400000000197, 0.00010266700000000073, 0.00010316699999999776, 0.00010237500000000177, 0.00010266699999999726, 0.00010283300000000009, 0.000102513999999998, 0.00010249999999999843, 0.00010243000000000058, 0.00010309699999999991, 0.00010281900000000052, 0.00010259700000000288, 0.00010243100000000005, 0.00010327799999999832, 0.00010308399999999981, 0.00010334700000000016, 0.0001026810000000003, 0.00010237500000000177, 0.00010266600000000126, 0.00010288800000000237, 0.00010243000000000058, 0.00010316600000000176, 0.0001033749999999993, 0.00010272199999999954, 0.00010326400000000222, 0.00010269499999999987, 0.00010312499999999905, 0.00010315300000000166]</msg>
<status status="PASS" starttime="20201112 10:15:58.443" endtime="20201112 10:15:58.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.438" endtime="20201112 10:15:58.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.448" endtime="20201112 10:15:58.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:58.451" endtime="20201112 10:15:58.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.450" endtime="20201112 10:15:58.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.446" endtime="20201112 10:15:58.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.078" endtime="20201112 10:15:58.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.077" endtime="20201112 10:15:58.472"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.481" endtime="20201112 10:15:58.501"></status>
</kw>
<msg timestamp="20201112 10:15:58.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.479" endtime="20201112 10:15:58.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.502" endtime="20201112 10:15:58.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.505" endtime="20201112 10:15:58.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.477" endtime="20201112 10:15:58.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.475" endtime="20201112 10:15:58.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.515" endtime="20201112 10:15:58.801"></status>
</kw>
<msg timestamp="20201112 10:15:58.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019875528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.513" endtime="20201112 10:15:58.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019875528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.805" endtime="20201112 10:15:58.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.813" endtime="20201112 10:15:58.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.511" endtime="20201112 10:15:58.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.509" endtime="20201112 10:15:58.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:58.819" level="INFO">${RESULT} = [{'time': 0.019979694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010416599999999929, 'source_diff': 0.00010416599999999929}, {'time': 0.020086708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:58.816" endtime="20201112 10:15:58.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:58.833" level="INFO">${ACCURACY} = {'source_diff': [0.00010416599999999929, 0.00010401400000000297, 0.00010363899999999912, 0.00010433299999999812, 0.00010354199999999814, 0.00010380599999999796, 0.0001035420000000016, 0.00010373600000...</msg>
<status status="PASS" starttime="20201112 10:15:58.820" endtime="20201112 10:15:58.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.838" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 10:15:58.837" endtime="20201112 10:15:58.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.840" level="INFO">VALUE: [0.00010416599999999929, 0.00010401400000000297, 0.00010363899999999912, 0.00010433299999999812, 0.00010354199999999814, 0.00010380599999999796, 0.0001035420000000016, 0.0001037360000000001, 0.00010408400000000081, 0.00010366700000000173, 0.00010354199999999814, 0.00010390199999999947, 0.00010380499999999848, 0.0001040420000000021, 0.00010379199999999839, 0.00010341699999999801, 0.00010349999999999943, 0.00010415299999999919, 0.00010355600000000117, 0.00010369500000000087, 0.00010409800000000038, 0.00010366600000000226, 0.00010344400000000115, 0.00010398600000000036, 0.00010355600000000117, 0.00010348599999999986, 0.00010355600000000117, 0.0001037360000000001, 0.00010388899999999937, 0.00010434800000000063, 0.00010362499999999955, 0.00010351400000000247, 0.00010402699999999959, 0.00010337500000000277, 0.00010368000000000183, 0.0001043750000000003, 0.0001037360000000001, 0.0001043750000000003, 0.00010376299999999977, 0.00010349999999999943, 0.00010357000000000074, 0.00010395799999999775, 0.00010356900000000127, 0.00010363899999999912, 0.00010412500000000005, 0.00010427799999999932, 0.00010387500000000327, 0.00010377800000000229, 0.00010420900000000094, 0.00010370900000000044]</msg>
<status status="PASS" starttime="20201112 10:15:58.839" endtime="20201112 10:15:58.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.834" endtime="20201112 10:15:58.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.848" endtime="20201112 10:15:58.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:58.851" endtime="20201112 10:15:58.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.850" endtime="20201112 10:15:58.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.846" endtime="20201112 10:15:58.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.473" endtime="20201112 10:15:58.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.473" endtime="20201112 10:15:58.872"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.881" endtime="20201112 10:15:58.902"></status>
</kw>
<msg timestamp="20201112 10:15:58.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.879" endtime="20201112 10:15:58.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.903" endtime="20201112 10:15:58.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.906" endtime="20201112 10:15:58.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.877" endtime="20201112 10:15:58.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.874" endtime="20201112 10:15:58.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.916" endtime="20201112 10:15:59.202"></status>
</kw>
<msg timestamp="20201112 10:15:59.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020682986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.914" endtime="20201112 10:15:59.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020682986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.206" endtime="20201112 10:15:59.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.214" endtime="20201112 10:15:59.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.911" endtime="20201112 10:15:59.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.910" endtime="20201112 10:15:59.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.220" level="INFO">${RESULT} = [{'time': 0.020682986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010445800000000172, 'source_diff': 0.00010445800000000172}, {'time': 0.020792069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:59.217" endtime="20201112 10:15:59.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:59.234" level="INFO">${ACCURACY} = {'source_diff': [0.00010445800000000172, 0.00010466599999999979, 0.00010512500000000105, 0.00010525000000000118, 0.0001052499999999977, 0.00010508399999999835, 0.00010445899999999772, 0.00010517999999...</msg>
<status status="PASS" starttime="20201112 10:15:59.221" endtime="20201112 10:15:59.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.238" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 10:15:59.237" endtime="20201112 10:15:59.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.241" level="INFO">VALUE: [0.00010445800000000172, 0.00010466599999999979, 0.00010512500000000105, 0.00010525000000000118, 0.0001052499999999977, 0.00010508399999999835, 0.00010445899999999772, 0.00010517999999999986, 0.00010508299999999887, 0.00010523599999999814, 0.00010490299999999994, 0.00010479199999999939, 0.00010515300000000019, 0.00010454199999999914, 0.00010472300000000101, 0.00010511099999999801, 0.00010499999999999746, 0.00010530499999999998, 0.00010461099999999751, 0.00010502800000000007, 0.00010508299999999887, 0.00010488900000000037, 0.00010513900000000062, 0.00010466700000000273, 0.00010516699999999976, 0.0001050559999999992, 0.00010445800000000172, 0.00010529100000000041, 0.00010445900000000119, 0.00010490299999999994, 0.00010508299999999887, 0.00010469399999999893, 0.00010529199999999989, 0.00010486100000000123, 0.00010472300000000101, 0.00010516699999999976, 0.00010455499999999923, 0.00010530499999999998, 0.00010454099999999966, 0.00010444399999999868, 0.00010512500000000105, 0.00010472200000000154, 0.00010438899999999987, 0.00010488900000000037, 0.00010509800000000138, 0.00010511099999999801, 0.00010483400000000156, 0.000104514, 0.00010491600000000004, 0.00010466599999999979]</msg>
<status status="PASS" starttime="20201112 10:15:59.239" endtime="20201112 10:15:59.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.235" endtime="20201112 10:15:59.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.244" endtime="20201112 10:15:59.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:59.248" endtime="20201112 10:15:59.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.246" endtime="20201112 10:15:59.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.243" endtime="20201112 10:15:59.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.873" endtime="20201112 10:15:59.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.872" endtime="20201112 10:15:59.269"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.277" endtime="20201112 10:15:59.296"></status>
</kw>
<msg timestamp="20201112 10:15:59.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.276" endtime="20201112 10:15:59.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.298" endtime="20201112 10:15:59.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.300" endtime="20201112 10:15:59.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.273" endtime="20201112 10:15:59.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.271" endtime="20201112 10:15:59.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.310" endtime="20201112 10:15:59.595"></status>
</kw>
<msg timestamp="20201112 10:15:59.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.309" endtime="20201112 10:15:59.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.600" endtime="20201112 10:15:59.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.608" endtime="20201112 10:15:59.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.306" endtime="20201112 10:15:59.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.304" endtime="20201112 10:15:59.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.614" level="INFO">${RESULT} = [{'time': 0.019764486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010545800000000272, 'source_diff': 0.00010545800000000272}, {'time': 0.019876514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:59.611" endtime="20201112 10:15:59.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:59.627" level="INFO">${ACCURACY} = {'source_diff': [0.00010545800000000272, 0.0001062360000000026, 0.00010577799999999735, 0.0001055559999999997, 0.00010636099999999926, 0.00010613799999999868, 0.00010631900000000055, 0.000105527000000...</msg>
<status status="PASS" starttime="20201112 10:15:59.615" endtime="20201112 10:15:59.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.632" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 10:15:59.631" endtime="20201112 10:15:59.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.634" level="INFO">VALUE: [0.00010545800000000272, 0.0001062360000000026, 0.00010577799999999735, 0.0001055559999999997, 0.00010636099999999926, 0.00010613799999999868, 0.00010631900000000055, 0.00010552700000000109, 0.00010544399999999968, 0.00010579100000000091, 0.00010543000000000011, 0.00010591700000000051, 0.00010547199999999882, 0.00010566600000000079, 0.0001061949999999999, 0.00010577700000000134, 0.00010559699999999894, 0.00010573599999999864, 0.00010625000000000218, 0.00010634699999999969, 0.0001057499999999982, 0.00010630599999999699, 0.00010573599999999864, 0.00010601399999999803, 0.00010586100000000223, 0.0001063889999999984, 0.00010538799999999793, 0.00010618100000000033, 0.00010575000000000168, 0.0001060140000000015, 0.00010543099999999958, 0.0001053889999999974, 0.00010561099999999851, 0.00010540300000000044, 0.00010594499999999965, 0.00010615199999999825, 0.00010550000000000143, 0.00010627799999999785, 0.00010540300000000044, 0.0001055689999999998, 0.00010538900000000087, 0.00010633300000000012, 0.00010618099999999686, 0.00010547299999999829, 0.0001062360000000026, 0.00010590300000000094, 0.00010613800000000215, 0.00010602700000000159, 0.00010630500000000098, 0.00010629200000000089]</msg>
<status status="PASS" starttime="20201112 10:15:59.633" endtime="20201112 10:15:59.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.628" endtime="20201112 10:15:59.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.638" endtime="20201112 10:15:59.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:59.641" endtime="20201112 10:15:59.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.640" endtime="20201112 10:15:59.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.636" endtime="20201112 10:15:59.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.269" endtime="20201112 10:15:59.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.269" endtime="20201112 10:15:59.662"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.671" endtime="20201112 10:15:59.690"></status>
</kw>
<msg timestamp="20201112 10:15:59.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.669" endtime="20201112 10:15:59.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.691" endtime="20201112 10:15:59.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.694" endtime="20201112 10:15:59.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.667" endtime="20201112 10:15:59.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.665" endtime="20201112 10:15:59.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.704" endtime="20201112 10:15:59.990"></status>
</kw>
<msg timestamp="20201112 10:15:59.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.702" endtime="20201112 10:15:59.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.994" endtime="20201112 10:16:00.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.003" endtime="20201112 10:16:00.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.700" endtime="20201112 10:16:00.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.698" endtime="20201112 10:16:00.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:00.009" level="INFO">${RESULT} = [{'time': 0.019760611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010699999999999946, 'source_diff': 0.00010699999999999946}, {'time': 0.019873625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:00.006" endtime="20201112 10:16:00.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:00.022" level="INFO">${ACCURACY} = {'source_diff': [0.00010699999999999946, 0.00010673599999999964, 0.0001073340000000006, 0.00010707000000000078, 0.00010636099999999926, 0.00010693099999999761, 0.00010699999999999946, 0.00010691599999...</msg>
<status status="PASS" starttime="20201112 10:16:00.010" endtime="20201112 10:16:00.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.027" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 10:16:00.026" endtime="20201112 10:16:00.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.029" level="INFO">VALUE: [0.00010699999999999946, 0.00010673599999999964, 0.0001073340000000006, 0.00010707000000000078, 0.00010636099999999926, 0.00010693099999999761, 0.00010699999999999946, 0.00010691599999999857, 0.0001065690000000008, 0.00010637499999999883, 0.00010731900000000155, 0.00010734700000000069, 0.0001066950000000004, 0.00010648600000000286, 0.0001072499999999997, 0.0001063889999999984, 0.00010652700000000209, 0.00010722200000000057, 0.0001070690000000013, 0.000106514000000002, 0.00010666700000000126, 0.00010643100000000058, 0.00010677799999999835, 0.00010651399999999853, 0.00010670899999999997, 0.00010661199999999899, 0.00010669400000000093, 0.00010730499999999851, 0.0001063889999999984, 0.00010643000000000111, 0.00010659699999999994, 0.00010666700000000126, 0.00010725000000000318, 0.00010698599999999989, 0.0001063750000000023, 0.00010661099999999951, 0.00010654100000000166, 0.00010727799999999885, 0.00010702800000000207, 0.00010690299999999847, 0.00010648599999999939, 0.00010666700000000126, 0.00010687499999999933, 0.00010654199999999767, 0.00010665200000000222, 0.00010722200000000057, 0.0001070690000000013, 0.00010665300000000169, 0.00010716599999999882, 0.00010709700000000044]</msg>
<status status="PASS" starttime="20201112 10:16:00.028" endtime="20201112 10:16:00.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.023" endtime="20201112 10:16:00.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.033" endtime="20201112 10:16:00.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:00.036" endtime="20201112 10:16:00.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.035" endtime="20201112 10:16:00.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.031" endtime="20201112 10:16:00.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.663" endtime="20201112 10:16:00.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.663" endtime="20201112 10:16:00.057"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.066" endtime="20201112 10:16:00.086"></status>
</kw>
<msg timestamp="20201112 10:16:00.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.064" endtime="20201112 10:16:00.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.088" endtime="20201112 10:16:00.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.090" endtime="20201112 10:16:00.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.062" endtime="20201112 10:16:00.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.060" endtime="20201112 10:16:00.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.100" endtime="20201112 10:16:00.386"></status>
</kw>
<msg timestamp="20201112 10:16:00.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019703472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.099" endtime="20201112 10:16:00.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019703472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.390" endtime="20201112 10:16:00.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.398" endtime="20201112 10:16:00.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.096" endtime="20201112 10:16:00.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.094" endtime="20201112 10:16:00.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:00.404" level="INFO">${RESULT} = [{'time': 0.019811833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010836100000000126, 'source_diff': 0.00010836100000000126}, {'time': 0.019923861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:00.401" endtime="20201112 10:16:00.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:00.418" level="INFO">${ACCURACY} = {'source_diff': [0.00010836100000000126, 0.00010813900000000015, 0.00010815299999999972, 0.0001080279999999996, 0.0001081950000000019, 0.00010809699999999797, 0.00010800000000000046, 0.000107750000000...</msg>
<status status="PASS" starttime="20201112 10:16:00.405" endtime="20201112 10:16:00.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.423" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 10:16:00.422" endtime="20201112 10:16:00.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.425" level="INFO">VALUE: [0.00010836100000000126, 0.00010813900000000015, 0.00010815299999999972, 0.0001080279999999996, 0.0001081950000000019, 0.00010809699999999797, 0.00010800000000000046, 0.0001077500000000002, 0.00010788799999999696, 0.00010773599999999717, 0.00010759700000000094, 0.0001075279999999991, 0.00010806899999999883, 0.0001078889999999999, 0.00010801400000000003, 0.00010754199999999867, 0.00010811200000000049, 0.00010745900000000072, 0.00010773600000000064, 0.00010766599999999932, 0.00010815299999999972, 0.00010747200000000082, 0.00010751399999999953, 0.00010781999999999806, 0.00010766699999999879, 0.00010768099999999836, 0.00010834800000000117, 0.000107902, 0.00010813800000000068, 0.0001075690000000018, 0.0001073889999999994, 0.00010787500000000033, 0.00010794500000000165, 0.00010813900000000015, 0.00010773600000000064, 0.00010805599999999874, 0.0001073889999999994, 0.00010791599999999957, 0.00010815299999999972, 0.00010756899999999833, 0.00010826400000000028, 0.00010800000000000046, 0.0001080279999999996, 0.00010794499999999818, 0.00010772200000000107, 0.00010781999999999806, 0.00010761100000000051, 0.00010831900000000255, 0.00010787500000000033, 0.00010827799999999985]</msg>
<status status="PASS" starttime="20201112 10:16:00.424" endtime="20201112 10:16:00.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.419" endtime="20201112 10:16:00.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.429" endtime="20201112 10:16:00.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:00.432" endtime="20201112 10:16:00.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.431" endtime="20201112 10:16:00.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.427" endtime="20201112 10:16:00.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.058" endtime="20201112 10:16:00.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.058" endtime="20201112 10:16:00.453"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.461" endtime="20201112 10:16:00.481"></status>
</kw>
<msg timestamp="20201112 10:16:00.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.460" endtime="20201112 10:16:00.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.483" endtime="20201112 10:16:00.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.485" endtime="20201112 10:16:00.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.457" endtime="20201112 10:16:00.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.455" endtime="20201112 10:16:00.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.495" endtime="20201112 10:16:00.781"></status>
</kw>
<msg timestamp="20201112 10:16:00.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.493" endtime="20201112 10:16:00.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.785" endtime="20201112 10:16:00.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.793" endtime="20201112 10:16:00.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.491" endtime="20201112 10:16:00.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.489" endtime="20201112 10:16:00.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:00.800" level="INFO">${RESULT} = [{'time': 0.019826417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010876399999999731, 'source_diff': 0.00010876399999999731}, {'time': 0.019938444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:00.797" endtime="20201112 10:16:00.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:00.813" level="INFO">${ACCURACY} = {'source_diff': [0.00010876399999999731, 0.00010934699999999922, 0.00010930500000000051, 0.00010932000000000303, 0.00010883299999999915, 0.00010893100000000308, 0.00010893099999999961, 0.0001086390000...</msg>
<status status="PASS" starttime="20201112 10:16:00.801" endtime="20201112 10:16:00.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.818" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 10:16:00.816" endtime="20201112 10:16:00.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.820" level="INFO">VALUE: [0.00010876399999999731, 0.00010934699999999922, 0.00010930500000000051, 0.00010932000000000303, 0.00010883299999999915, 0.00010893100000000308, 0.00010893099999999961, 0.00010863900000000065, 0.00010844499999999868, 0.00010841700000000301, 0.00010859799999999795, 0.00010901300000000155, 0.00010897200000000232, 0.00010849999999999749, 0.00010847200000000182, 0.00010873599999999817, 0.00010918099999999986, 0.00010863900000000065, 0.00010847200000000182, 0.00010916700000000029, 0.00010859799999999795, 0.0001087630000000013, 0.00010887500000000133, 0.00010905500000000026, 0.00010868099999999936, 0.00010880599999999949, 0.00010926399999999781, 0.00010931999999999956, 0.00010881999999999906, 0.00010923599999999867, 0.00010904100000000069, 0.00010870799999999903, 0.00010879100000000044, 0.00010915299999999725, 0.00010881899999999958, 0.00010879199999999992, 0.00010929200000000042, 0.00010909799999999845, 0.00010875000000000121, 0.00010870900000000197, 0.00010936100000000226, 0.00010844400000000268, 0.00010933299999999965, 0.00010925000000000171, 0.00010927799999999738, 0.0001093340000000026, 0.00010845799999999878, 0.0001088890000000009, 0.00010913900000000115, 0.00010880599999999949]</msg>
<status status="PASS" starttime="20201112 10:16:00.819" endtime="20201112 10:16:00.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.814" endtime="20201112 10:16:00.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.823" endtime="20201112 10:16:00.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:00.827" endtime="20201112 10:16:00.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.825" endtime="20201112 10:16:00.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.822" endtime="20201112 10:16:00.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.454" endtime="20201112 10:16:00.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.453" endtime="20201112 10:16:00.848"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.856" endtime="20201112 10:16:00.876"></status>
</kw>
<msg timestamp="20201112 10:16:00.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.855" endtime="20201112 10:16:00.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.878" endtime="20201112 10:16:00.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.880" endtime="20201112 10:16:00.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.852" endtime="20201112 10:16:00.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.850" endtime="20201112 10:16:00.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.890" endtime="20201112 10:16:01.175"></status>
</kw>
<msg timestamp="20201112 10:16:01.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.889" endtime="20201112 10:16:01.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.179" endtime="20201112 10:16:01.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.187" endtime="20201112 10:16:01.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.886" endtime="20201112 10:16:01.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.884" endtime="20201112 10:16:01.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.194" level="INFO">${RESULT} = [{'time': 0.020274375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010941700000000054, 'source_diff': 0.00010941700000000054}, {'time': 0.020388389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:01.191" endtime="20201112 10:16:01.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:01.207" level="INFO">${ACCURACY} = {'source_diff': [0.00010941700000000054, 0.00011024999999999924, 0.00010961100000000251, 0.00010987500000000233, 0.00010986200000000224, 0.00010959699999999947, 0.00010973600000000264, 0.0001098049999...</msg>
<status status="PASS" starttime="20201112 10:16:01.195" endtime="20201112 10:16:01.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.212" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 10:16:01.211" endtime="20201112 10:16:01.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.214" level="INFO">VALUE: [0.00010941700000000054, 0.00011024999999999924, 0.00010961100000000251, 0.00010987500000000233, 0.00010986200000000224, 0.00010959699999999947, 0.00010973600000000264, 0.00010980499999999754, 0.00011006900000000083, 0.0001095699999999998, 0.0001100700000000003, 0.0001093890000000014, 0.00010961099999999904, 0.00010974999999999874, 0.00011015299999999825, 0.00011002699999999865, 0.00011011099999999954, 0.00011002799999999813, 0.00010963900000000165, 0.00010965300000000122, 0.00010983300000000015, 0.00010973699999999864, 0.00010973599999999917, 0.00011031999999999709, 0.00011033299999999718, 0.00011029200000000142, 0.00010987500000000233, 0.00010983300000000015, 0.00011013899999999868, 0.00010966700000000079, 0.00010955600000000024, 0.00010944499999999968, 0.00010988899999999843, 0.00011005500000000126, 0.00010987500000000233, 0.00010951399999999806, 0.00010980500000000101, 0.00011026400000000228, 0.00011037499999999936, 0.00010951399999999806, 0.00010990300000000147, 0.00011019500000000043, 0.00011012499999999911, 0.00010941600000000107, 0.00010981900000000058, 0.00010949999999999849, 0.00010966700000000079, 0.00010982000000000006, 0.00011016699999999782, 0.0001100280000000016]</msg>
<status status="PASS" starttime="20201112 10:16:01.213" endtime="20201112 10:16:01.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.208" endtime="20201112 10:16:01.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.218" endtime="20201112 10:16:01.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:01.221" endtime="20201112 10:16:01.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.220" endtime="20201112 10:16:01.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.216" endtime="20201112 10:16:01.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.849" endtime="20201112 10:16:01.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.848" endtime="20201112 10:16:01.242"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.250" endtime="20201112 10:16:01.270"></status>
</kw>
<msg timestamp="20201112 10:16:01.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.249" endtime="20201112 10:16:01.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.271" endtime="20201112 10:16:01.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.273" endtime="20201112 10:16:01.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.246" endtime="20201112 10:16:01.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.244" endtime="20201112 10:16:01.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.283" endtime="20201112 10:16:01.569"></status>
</kw>
<msg timestamp="20201112 10:16:01.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.282" endtime="20201112 10:16:01.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.573" endtime="20201112 10:16:01.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.581" endtime="20201112 10:16:01.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.279" endtime="20201112 10:16:01.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.278" endtime="20201112 10:16:01.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.588" level="INFO">${RESULT} = [{'time': 0.019840319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011070799999999756, 'source_diff': 0.00011070799999999756}, {'time': 0.019955333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:01.584" endtime="20201112 10:16:01.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:01.601" level="INFO">${ACCURACY} = {'source_diff': [0.00011070799999999756, 0.00011066599999999885, 0.0001112359999999972, 0.00011043000000000164, 0.00011094400000000171, 0.00011086100000000029, 0.00011088899999999943, 0.00011057000000...</msg>
<status status="PASS" starttime="20201112 10:16:01.589" endtime="20201112 10:16:01.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.605" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 10:16:01.604" endtime="20201112 10:16:01.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.608" level="INFO">VALUE: [0.00011070799999999756, 0.00011066599999999885, 0.0001112359999999972, 0.00011043000000000164, 0.00011094400000000171, 0.00011086100000000029, 0.00011088899999999943, 0.0001105700000000008, 0.00011111200000000002, 0.00011119499999999796, 0.00011065199999999928, 0.00011123600000000067, 0.00011052799999999863, 0.00011048599999999992, 0.00011133300000000165, 0.0001105830000000009, 0.00011074999999999974, 0.00011134700000000122, 0.0001104029999999985, 0.00011061100000000004, 0.00011076299999999983, 0.00011119399999999849, 0.00011122199999999763, 0.00011061100000000004, 0.00011083300000000115, 0.00011070799999999756, 0.00011082000000000106, 0.00011130599999999852, 0.00011072300000000007, 0.00011054100000000219, 0.00011127799999999938, 0.00011119399999999849, 0.00011077799999999888, 0.00011062499999999961, 0.00011086100000000029, 0.00011126399999999981, 0.000110902999999999, 0.00011133400000000113, 0.00011091699999999857, 0.00011101399999999956, 0.0001105549999999983, 0.00011076399999999931, 0.00011062499999999961, 0.00011031900000000108, 0.00011094500000000118, 0.00011052799999999863, 0.00011116699999999882, 0.00011059799999999995, 0.00011045800000000078, 0.00011134699999999775]</msg>
<status status="PASS" starttime="20201112 10:16:01.607" endtime="20201112 10:16:01.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.602" endtime="20201112 10:16:01.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.611" endtime="20201112 10:16:01.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:01.615" endtime="20201112 10:16:01.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.613" endtime="20201112 10:16:01.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.610" endtime="20201112 10:16:01.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.243" endtime="20201112 10:16:01.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.242" endtime="20201112 10:16:01.636"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.644" endtime="20201112 10:16:01.664"></status>
</kw>
<msg timestamp="20201112 10:16:01.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.643" endtime="20201112 10:16:01.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.666" endtime="20201112 10:16:01.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.669" endtime="20201112 10:16:01.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.640" endtime="20201112 10:16:01.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.638" endtime="20201112 10:16:01.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.678" endtime="20201112 10:16:01.965"></status>
</kw>
<msg timestamp="20201112 10:16:01.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.677" endtime="20201112 10:16:01.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.969" endtime="20201112 10:16:01.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.978" endtime="20201112 10:16:01.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.674" endtime="20201112 10:16:01.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.673" endtime="20201112 10:16:01.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.984" level="INFO">${RESULT} = [{'time': 0.020008778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011179200000000292, 'source_diff': 0.00011179200000000292}, {'time': 0.020130792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:01.981" endtime="20201112 10:16:01.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:01.999" level="INFO">${ACCURACY} = {'source_diff': [0.00011179200000000292, 0.0001123480000000017, 0.00011179099999999997, 0.00011181900000000258, 0.00011138899999999993, 0.00011198599999999795, 0.00011226400000000081, 0.00011173600000...</msg>
<status status="PASS" starttime="20201112 10:16:01.986" endtime="20201112 10:16:02.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.004" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 10:16:02.003" endtime="20201112 10:16:02.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.007" level="INFO">VALUE: [0.00011179200000000292, 0.0001123480000000017, 0.00011179099999999997, 0.00011181900000000258, 0.00011138899999999993, 0.00011198599999999795, 0.00011226400000000081, 0.00011173600000000117, 0.00011145899999999778, 0.00011145899999999778, 0.00011147300000000082, 0.00011233299999999918, 0.00011174999999999727, 0.00011158299999999843, 0.00011168099999999889, 0.00011148600000000092, 0.00011173600000000117, 0.00011236099999999832, 0.00011156999999999834, 0.00011216699999999982, 0.0001120969999999985, 0.00011143000000000264, 0.00011180499999999954, 0.00011202800000000013, 0.00011198600000000142, 0.00011138899999999993, 0.00011168100000000236, 0.00011236100000000179, 0.00011138899999999993, 0.000111903, 0.00011163900000000018, 0.00011236100000000179, 0.00011144399999999874, 0.00011217999999999992, 0.00011158299999999843, 0.00011168099999999889, 0.00011138899999999993, 0.00011137500000000036, 0.0001120419999999997, 0.00011186200000000077, 0.00011211100000000154, 0.00011166599999999985, 0.00011161100000000104, 0.00011231899999999961, 0.00011211100000000154, 0.00011211199999999755, 0.0001123480000000017, 0.00011147299999999735, 0.00011166700000000279, 0.00011156900000000233]</msg>
<status status="PASS" starttime="20201112 10:16:02.005" endtime="20201112 10:16:02.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.000" endtime="20201112 10:16:02.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.010" endtime="20201112 10:16:02.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.014" endtime="20201112 10:16:02.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.012" endtime="20201112 10:16:02.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.009" endtime="20201112 10:16:02.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.637" endtime="20201112 10:16:02.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.636" endtime="20201112 10:16:02.035"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.044" endtime="20201112 10:16:02.065"></status>
</kw>
<msg timestamp="20201112 10:16:02.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.043" endtime="20201112 10:16:02.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.067" endtime="20201112 10:16:02.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.069" endtime="20201112 10:16:02.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.040" endtime="20201112 10:16:02.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.038" endtime="20201112 10:16:02.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.079" endtime="20201112 10:16:02.386"></status>
</kw>
<msg timestamp="20201112 10:16:02.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020864347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.078" endtime="20201112 10:16:02.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020864347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.390" endtime="20201112 10:16:02.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.398" endtime="20201112 10:16:02.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.075" endtime="20201112 10:16:02.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.073" endtime="20201112 10:16:02.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:02.405" level="INFO">${RESULT} = [{'time': 0.020977125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011277800000000088, 'source_diff': 0.00011277800000000088}, {'time': 0.021097056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:02.402" endtime="20201112 10:16:02.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:02.418" level="INFO">${ACCURACY} = {'source_diff': [0.00011277800000000088, 0.00011319499999999996, 0.00011337500000000236, 0.0001127909999999975, 0.00011237500000000136, 0.00011269399999999999, 0.00011255599999999977, 0.00011327800000...</msg>
<status status="PASS" starttime="20201112 10:16:02.406" endtime="20201112 10:16:02.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.423" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 10:16:02.422" endtime="20201112 10:16:02.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.425" level="INFO">VALUE: [0.00011277800000000088, 0.00011319499999999996, 0.00011337500000000236, 0.0001127909999999975, 0.00011237500000000136, 0.00011269399999999999, 0.00011255599999999977, 0.00011327800000000138, 0.00011334799999999923, 0.00011258399999999891, 0.00011243099999999964, 0.00011302800000000113, 0.00011258299999999943, 0.00011279100000000097, 0.00011327799999999791, 0.00011311099999999907, 0.00011320899999999953, 0.00011243100000000311, 0.00011312499999999864, 0.00011313900000000168, 0.00011315199999999831, 0.00011258299999999943, 0.000112596999999999, 0.00011275000000000174, 0.00011326400000000181, 0.00011259799999999848, 0.00011279200000000045, 0.00011279200000000045, 0.00011319400000000049, 0.00011333300000000018, 0.00011236099999999832, 0.00011329100000000147, 0.00011281900000000011, 0.00011247199999999888, 0.00011279200000000045, 0.00011266700000000032, 0.00011301399999999809, 0.00011306999999999984, 0.00011237500000000136, 0.00011266600000000085, 0.00011302700000000165, 0.00011287500000000186, 0.00011265300000000075, 0.00011294499999999971, 0.00011243100000000311, 0.00011241700000000007, 0.00011322300000000257, 0.00011312500000000211, 0.0001129299999999972, 0.00011262500000000161]</msg>
<status status="PASS" starttime="20201112 10:16:02.424" endtime="20201112 10:16:02.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.419" endtime="20201112 10:16:02.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.429" endtime="20201112 10:16:02.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.432" endtime="20201112 10:16:02.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.431" endtime="20201112 10:16:02.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.427" endtime="20201112 10:16:02.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.036" endtime="20201112 10:16:02.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.035" endtime="20201112 10:16:02.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.730" endtime="20201112 10:16:02.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.458" endtime="20201112 10:16:02.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.456" endtime="20201112 10:16:02.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.455" endtime="20201112 10:16:02.478"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:15:19.624" endtime="20201112 10:16:02.478" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:32.328" endtime="20201112 10:16:02.482"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.538" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:16:02.546" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:16:03.628" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:16:02.537" endtime="20201112 10:16:03.629"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.634" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:16:03.631" endtime="20201112 10:16:03.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.536" endtime="20201112 10:16:03.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:03.640" endtime="20201112 10:16:03.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.638" endtime="20201112 10:16:03.890"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.902" endtime="20201112 10:16:06.930"></status>
</kw>
<msg timestamp="20201112 10:16:06.931" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:03.901" endtime="20201112 10:16:06.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.933" endtime="20201112 10:16:06.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.943" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:16:06.939" endtime="20201112 10:16:06.944"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:03.898" endtime="20201112 10:16:06.947"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:03.896" endtime="20201112 10:16:06.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.895" endtime="20201112 10:16:06.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:16:06.957" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:16:06.955" endtime="20201112 10:16:06.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.951" endtime="20201112 10:16:06.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.894" endtime="20201112 10:16:06.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.893" endtime="20201112 10:16:06.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.961" endtime="20201112 10:16:06.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.892" endtime="20201112 10:16:06.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.967" endtime="20201112 10:16:06.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.890" endtime="20201112 10:16:06.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.534" endtime="20201112 10:16:06.972"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:06.985" endtime="20201112 10:16:07.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.982" endtime="20201112 10:16:07.008"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.036" endtime="20201112 10:16:10.064"></status>
</kw>
<msg timestamp="20201112 10:16:10.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.032" endtime="20201112 10:16:10.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.070" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.067" endtime="20201112 10:16:10.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.076" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:16:10.072" endtime="20201112 10:16:10.077"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:07.027" endtime="20201112 10:16:10.079"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:07.022" endtime="20201112 10:16:10.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.019" endtime="20201112 10:16:10.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:16:10.088" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:16:10.087" endtime="20201112 10:16:10.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.082" endtime="20201112 10:16:10.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.017" endtime="20201112 10:16:10.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.016" endtime="20201112 10:16:10.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.092" endtime="20201112 10:16:10.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.013" endtime="20201112 10:16:10.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.010" endtime="20201112 10:16:10.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.979" endtime="20201112 10:16:10.097"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:10.106" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.114" endtime="20201112 10:16:12.223"></status>
</kw>
<msg timestamp="20201112 10:16:12.225" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6093278, 'wakeups': [6103285, 6113285, 6123285, 6133285, 6143285, 6153...</msg>
<status status="PASS" starttime="20201112 10:16:10.112" endtime="20201112 10:16:12.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.231" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6093278, 'wakeups': [6103285, 6113285, 6123285, 6133285, 6143285, 6153...</msg>
<status status="PASS" starttime="20201112 10:16:12.227" endtime="20201112 10:16:12.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.239" endtime="20201112 10:16:12.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.110" endtime="20201112 10:16:12.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.108" endtime="20201112 10:16:12.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:12.251" level="INFO">${RESULT} = {'start-time': 6093278, 'timer-interval': 10000, 'timer-count': 1, 'wakeups': [6103285, 6113285, 6123285, 6133285, 6143285, 6153285, 6163285, 6173285, 6183285, 6193285, 6203285, 6213285, 6223285, 6233...</msg>
<status status="PASS" starttime="20201112 10:16:12.247" endtime="20201112 10:16:12.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.259" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:12.258" endtime="20201112 10:16:12.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.261" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:12.260" endtime="20201112 10:16:12.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.253" endtime="20201112 10:16:12.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.266" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:12.265" endtime="20201112 10:16:12.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.268" level="INFO">VALUE: 6093278</msg>
<status status="PASS" starttime="20201112 10:16:12.268" endtime="20201112 10:16:12.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.263" endtime="20201112 10:16:12.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.273" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:12.272" endtime="20201112 10:16:12.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.276" level="INFO">VALUE: [6103285, 6113285, 6123285, 6133285, 6143285, 6153285, 6163285, 6173285, 6183285, 6193285, 6203285, 6213285, 6223285, 6233285, 6243285, 6253285, 6263285, 6273285, 6283285, 6293285, 6303285, 6313285, 6323285, 6333285, 6343285, 6353285, 6363285, 6373285, 6383285, 6393285, 6403285, 6413285, 6423285, 6433285, 6443285, 6453285, 6463285, 6473285, 6483285, 6493285, 6503285, 6513285, 6523285, 6533285, 6543285, 6553285, 6563285, 6573285, 6583285, 6593285, 6603285, 6613285, 6623285, 6633285, 6643285, 6653285, 6663285, 6673285, 6683285, 6693285, 6703285, 6713285, 6723285, 6733285, 6743285, 6753285, 6763285, 6773285, 6783285, 6793285, 6803285, 6813285, 6823285, 6833285, 6843285, 6853285, 6863285, 6873285, 6883285, 6893285, 6903285, 6913285, 6923285, 6933285, 6943285, 6953285, 6963285, 6973285, 6983285, 6993285, 7003285, 7013285, 7023285, 7033285, 7043285, 7053285, 7063285, 7073285, 7083285, 7093285]</msg>
<status status="PASS" starttime="20201112 10:16:12.274" endtime="20201112 10:16:12.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.270" endtime="20201112 10:16:12.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.283" endtime="20201112 10:16:12.588"></status>
</kw>
<msg timestamp="20201112 10:16:12.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.117732583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.127741181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.281" endtime="20201112 10:16:12.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.117732583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.127741181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.592" endtime="20201112 10:16:12.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.600" endtime="20201112 10:16:12.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.279" endtime="20201112 10:16:12.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.277" endtime="20201112 10:16:12.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:12.627" level="INFO">${RESULT} = {'source_diff': [0, 0.010008598000000202, 0.01000117999999972, 0.010001138999999881, 0.010001125000000055, 0.010001111000000229, 0.010001166999999977, 0.010001125000000055, 0.010001138999999881, 0.010...</msg>
<status status="PASS" starttime="20201112 10:16:12.603" endtime="20201112 10:16:12.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.633" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:12.632" endtime="20201112 10:16:12.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.635" level="INFO">VALUE: 3.117732583</msg>
<status status="PASS" starttime="20201112 10:16:12.634" endtime="20201112 10:16:12.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.628" endtime="20201112 10:16:12.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.641" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:12.640" endtime="20201112 10:16:12.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.644" level="INFO">VALUE: [3.127741181, 3.137742361, 3.1477435, 3.157744625, 3.167745736, 3.177746903, 3.187748028, 3.197749167, 3.207750292, 3.217751444, 3.227752569, 3.237753736, 3.247754833, 3.257756, 3.267757125, 3.277758278, 3.287759389, 3.297760583, 3.307761681, 3.317762847, 3.327763958, 3.337765125, 3.347766236, 3.357767389, 3.3677685, 3.377769667, 3.387770778, 3.397771944, 3.407773056, 3.417774208, 3.427775333, 3.4377765, 3.447777625, 3.457778764, 3.467779875, 3.477781042, 3.487782153, 3.497783319, 3.507784431, 3.517785597, 3.527786708, 3.537787903, 3.547788986, 3.557790153, 3.567791292, 3.577792431, 3.587793556, 3.597794708, 3.607795861, 3.617796986, 3.627798111, 3.637799264, 3.647800375, 3.657801528, 3.667802653, 3.677803806, 3.687804931, 3.697806139, 3.707807194, 3.717808361, 3.727809472, 3.737810639, 3.74781175, 3.757812917, 3.767814069, 3.777815194, 3.787816333, 3.797817486, 3.807818597, 3.81781975, 3.827820875, 3.837822028, 3.847823139, 3.857824306, 3.867825431, 3.877826583, 3.887827722, 3.897828861, 3.907829986, 3.917831125, 3.92783225, 3.937833417, 3.947834514, 3.957835681, 3.967836819, 3.977837972, 3.987839097, 3.99784025, 4.007841375, 4.017842514, 4.027843653, 4.037844806, 4.047845903, 4.057847069, 4.067848194, 4.077849347, 4.087850472, 4.097851639, 4.107852764, 4.117853917] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:12.643" endtime="20201112 10:16:12.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.637" endtime="20201112 10:16:12.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.647" endtime="20201112 10:16:12.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:12.651" endtime="20201112 10:16:12.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.649" endtime="20201112 10:16:12.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.646" endtime="20201112 10:16:12.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.107" endtime="20201112 10:16:12.671"></status>
</kw>
<msg timestamp="20201112 10:16:12.672" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.680" endtime="20201112 10:16:14.790"></status>
</kw>
<msg timestamp="20201112 10:16:14.792" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8659195, 'wakeups': [8669202, 8679202, 8689202, 8699202, 8709202, 8719...</msg>
<status status="PASS" starttime="20201112 10:16:12.678" endtime="20201112 10:16:14.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.798" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8659195, 'wakeups': [8669202, 8679202, 8689202, 8699202, 8709202, 8719...</msg>
<status status="PASS" starttime="20201112 10:16:14.794" endtime="20201112 10:16:14.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.800" endtime="20201112 10:16:14.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.676" endtime="20201112 10:16:14.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.674" endtime="20201112 10:16:14.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.813" level="INFO">${RESULT} = {'start-time': 8659195, 'timer-interval': 10000, 'timer-count': 1, 'wakeups': [8669202, 8679202, 8689202, 8699202, 8709202, 8719202, 8729202, 8739202, 8749202, 8759202, 8769202, 8779202, 8789202, 8799...</msg>
<status status="PASS" starttime="20201112 10:16:14.809" endtime="20201112 10:16:14.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.817" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:14.816" endtime="20201112 10:16:14.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.819" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:14.819" endtime="20201112 10:16:14.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.814" endtime="20201112 10:16:14.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.825" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:14.824" endtime="20201112 10:16:14.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.827" level="INFO">VALUE: 8659195</msg>
<status status="PASS" starttime="20201112 10:16:14.826" endtime="20201112 10:16:14.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.821" endtime="20201112 10:16:14.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.832" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:14.831" endtime="20201112 10:16:14.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.834" level="INFO">VALUE: [8669202, 8679202, 8689202, 8699202, 8709202, 8719202, 8729202, 8739202, 8749202, 8759202, 8769202, 8779202, 8789202, 8799202, 8809202, 8819202, 8829202, 8839202, 8849202, 8859202, 8869202, 8879202, 8889202, 8899202, 8909202, 8919202, 8929202, 8939202, 8949202, 8959202, 8969202, 8979202, 8989202, 8999202, 9009202, 9019202, 9029202, 9039202, 9049202, 9059202, 9069202, 9079202, 9089202, 9099202, 9109202, 9119202, 9129202, 9139202, 9149202, 9159202, 9169202, 9179202, 9189202, 9199202, 9209202, 9219202, 9229202, 9239202, 9249202, 9259202, 9269202, 9279202, 9289202, 9299202, 9309202, 9319202, 9329202, 9339202, 9349202, 9359202, 9369202, 9379202, 9389202, 9399202, 9409202, 9419202, 9429202, 9439202, 9449202, 9459202, 9469202, 9479202, 9489202, 9499202, 9509202, 9519202, 9529202, 9539202, 9549202, 9559202, 9569202, 9579202, 9589202, 9599202, 9609202, 9619202, 9629202, 9639202, 9649202, 9659202]</msg>
<status status="PASS" starttime="20201112 10:16:14.833" endtime="20201112 10:16:14.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.828" endtime="20201112 10:16:14.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.841" endtime="20201112 10:16:15.132"></status>
</kw>
<msg timestamp="20201112 10:16:15.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018421347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028429764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.840" endtime="20201112 10:16:15.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018421347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028429764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:15.136" endtime="20201112 10:16:15.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.143" endtime="20201112 10:16:15.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.837" endtime="20201112 10:16:15.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.835" endtime="20201112 10:16:15.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:15.170" level="INFO">${RESULT} = {'source_diff': [0, 0.010008416999999999, 0.010001167000000002, 0.010001125, 0.010001179999999998, 0.010001111000000007, 0.010001208999999997, 0.010001069000000001, 0.010001166999999991, 0.010001097, ...</msg>
<status status="PASS" starttime="20201112 10:16:15.147" endtime="20201112 10:16:15.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.175" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:15.174" endtime="20201112 10:16:15.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.177" level="INFO">VALUE: 0.018421347</msg>
<status status="PASS" starttime="20201112 10:16:15.176" endtime="20201112 10:16:15.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.171" endtime="20201112 10:16:15.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.182" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:15.181" endtime="20201112 10:16:15.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.184" level="INFO">VALUE: [0.028429764, 0.038430931, 0.048432056, 0.058433236, 0.068434347, 0.078435556, 0.088436625, 0.098437792, 0.108438889, 0.118440125, 0.128441167, 0.138442333, 0.148443444, 0.158444611, 0.16844575, 0.178446903, 0.188448014, 0.198449194, 0.208450292, 0.218451458, 0.228452597, 0.238453736, 0.248454875, 0.258456042, 0.268457139, 0.278458306, 0.288459417, 0.298460597, 0.308461694, 0.318462931, 0.328463972, 0.338465125, 0.348466236, 0.358467403, 0.368468514, 0.378469667, 0.388470778, 0.398471944, 0.408473056, 0.418474208, 0.428475347, 0.4384765, 0.448477597, 0.458478764, 0.468479889, 0.478481042, 0.488482153, 0.498483306, 0.508484431, 0.518485569, 0.528486708, 0.538487847, 0.548489014, 0.558490125, 0.568491236, 0.578492417, 0.588493597, 0.598494694, 0.608495778, 0.618496944, 0.628498069, 0.638499222, 0.648500333, 0.6585015, 0.668502611, 0.678503778, 0.688504889, 0.698506069, 0.708507167, 0.718508319, 0.728509431, 0.738510597, 0.748511708, 0.758512903, 0.768513972, 0.778515139, 0.788516264, 0.798517417, 0.808518528, 0.818519708, 0.828520792, 0.838521958, 0.848523069, 0.85852425, 0.868525347, 0.878526514, 0.888527639, 0.898528833, 0.908529903, 0.918531083, 0.928532222, 0.938533347, 0.948534458, 0.958535611, 0.968536722, 0.978537875, 0.988538986, 0.998540167, 1.008541264, 1.018542431] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:15.183" endtime="20201112 10:16:15.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.178" endtime="20201112 10:16:15.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.188" endtime="20201112 10:16:15.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:15.191" endtime="20201112 10:16:15.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.190" endtime="20201112 10:16:15.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.186" endtime="20201112 10:16:15.212"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.672" endtime="20201112 10:16:15.212"></status>
</kw>
<msg timestamp="20201112 10:16:15.212" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.221" endtime="20201112 10:16:17.342"></status>
</kw>
<msg timestamp="20201112 10:16:17.343" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11199784, 'wakeups': [11209791, 11219791, 11229791, 11239791, 11249791...</msg>
<status status="PASS" starttime="20201112 10:16:15.219" endtime="20201112 10:16:17.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.349" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11199784, 'wakeups': [11209791, 11219791, 11229791, 11239791, 11249791...</msg>
<status status="PASS" starttime="20201112 10:16:17.345" endtime="20201112 10:16:17.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.351" endtime="20201112 10:16:17.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.216" endtime="20201112 10:16:17.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.214" endtime="20201112 10:16:17.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.362" level="INFO">${RESULT} = {'start-time': 11199784, 'timer-interval': 10000, 'timer-count': 1, 'wakeups': [11209791, 11219791, 11229791, 11239791, 11249791, 11259791, 11269791, 11279791, 11289791, 11299791, 11309791, 11319791, ...</msg>
<status status="PASS" starttime="20201112 10:16:17.358" endtime="20201112 10:16:17.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.369" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:17.368" endtime="20201112 10:16:17.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.372" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:17.371" endtime="20201112 10:16:17.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.364" endtime="20201112 10:16:17.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.376" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:17.375" endtime="20201112 10:16:17.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.380" level="INFO">VALUE: 11199784</msg>
<status status="PASS" starttime="20201112 10:16:17.378" endtime="20201112 10:16:17.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.373" endtime="20201112 10:16:17.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.385" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:17.384" endtime="20201112 10:16:17.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.387" level="INFO">VALUE: [11209791, 11219791, 11229791, 11239791, 11249791, 11259791, 11269791, 11279791, 11289791, 11299791, 11309791, 11319791, 11329791, 11339791, 11349791, 11359791, 11369791, 11379791, 11389791, 11399791, 11409791, 11419791, 11429791, 11439791, 11449791, 11459791, 11469791, 11479791, 11489791, 11499791, 11509791, 11519791, 11529791, 11539791, 11549791, 11559791, 11569791, 11579791, 11589791, 11599791, 11609791, 11619791, 11629791, 11639791, 11649791, 11659791, 11669791, 11679791, 11689791, 11699791, 11709791, 11719791, 11729791, 11739791, 11749791, 11759791, 11769791, 11779791, 11789791, 11799791, 11809791, 11819791, 11829791, 11839791, 11849791, 11859791, 11869791, 11879791, 11889791, 11899791, 11909791, 11919791, 11929791, 11939791, 11949791, 11959791, 11969791, 11979791, 11989791, 11999791, 12009791, 12019791, 12029791, 12039791, 12049791, 12059791, 12069791, 12079791, 12089791, 12099791, 12109791, 12119791, 12129791, 12139791, 12149791, 12159791, 12169791, 12179791, 12189791, 12199791]</msg>
<status status="PASS" starttime="20201112 10:16:17.386" endtime="20201112 10:16:17.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.381" endtime="20201112 10:16:17.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.398" endtime="20201112 10:16:17.690"></status>
</kw>
<msg timestamp="20201112 10:16:17.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028412222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.397" endtime="20201112 10:16:17.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028412222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.693" endtime="20201112 10:16:17.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.701" endtime="20201112 10:16:17.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.394" endtime="20201112 10:16:17.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.388" endtime="20201112 10:16:17.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.728" level="INFO">${RESULT} = {'source_diff': [0, 0.010008833000000002, 0.010001166999999998, 0.010001111, 0.010001180999999998, 0.010001125, 0.010001138000000007, 0.010001152999999999, 0.010001138999999992, 0.010001125, 0.0100011...</msg>
<status status="PASS" starttime="20201112 10:16:17.704" endtime="20201112 10:16:17.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.732" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:17.731" endtime="20201112 10:16:17.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.734" level="INFO">VALUE: 0.018403389</msg>
<status status="PASS" starttime="20201112 10:16:17.733" endtime="20201112 10:16:17.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.729" endtime="20201112 10:16:17.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.739" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:17.738" endtime="20201112 10:16:17.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.742" level="INFO">VALUE: [0.028412222, 0.038413389, 0.0484145, 0.058415681, 0.068416806, 0.078417944, 0.088419097, 0.098420236, 0.108421361, 0.118422514, 0.128423625, 0.138424792, 0.148425917, 0.158427069, 0.168428208, 0.178429361, 0.188430472, 0.198431639, 0.208432778, 0.218433944, 0.228435042, 0.238436194, 0.248437319, 0.258438486, 0.268439625, 0.27844075, 0.288441875, 0.298443014, 0.308444125, 0.318445306, 0.328446403, 0.338447569, 0.348448681, 0.358449833, 0.368450931, 0.378452097, 0.388453208, 0.398454375, 0.408455472, 0.418456653, 0.42845775, 0.438458917, 0.448460014, 0.458461181, 0.468462292, 0.478463486, 0.488464597, 0.498465736, 0.508466833, 0.518468028, 0.528469111, 0.538470278, 0.548471375, 0.558472556, 0.568473681, 0.578474806, 0.588475917, 0.598477083, 0.608478222, 0.618479375, 0.628480472, 0.638481625, 0.648482736, 0.658483903, 0.668485014, 0.678486167, 0.688487292, 0.698488444, 0.708489625, 0.718490708, 0.728491903, 0.738492986, 0.748494111, 0.758495306, 0.768496375, 0.778497542, 0.788498639, 0.798499806, 0.808500986, 0.818502153, 0.828503194, 0.838504347, 0.848505472, 0.858506625, 0.868507736, 0.878508903, 0.88851, 0.898511181, 0.908512278, 0.918513444, 0.928514556, 0.938515764, 0.948516833, 0.958518, 0.968519097, 0.97852025, 0.988521375, 0.998522542, 1.008523639, 1.018524806] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:17.741" endtime="20201112 10:16:17.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.736" endtime="20201112 10:16:17.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.746" endtime="20201112 10:16:17.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:17.749" endtime="20201112 10:16:17.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.748" endtime="20201112 10:16:17.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.744" endtime="20201112 10:16:17.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.213" endtime="20201112 10:16:17.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.102" endtime="20201112 10:16:17.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.100" endtime="20201112 10:16:17.770"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:17.773" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.782" endtime="20201112 10:16:19.903"></status>
</kw>
<msg timestamp="20201112 10:16:19.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13761432, 'wakeups': [13771446, 13781446, 13791446, 13801446, 13811446...</msg>
<status status="PASS" starttime="20201112 10:16:17.780" endtime="20201112 10:16:19.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.910" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13761432, 'wakeups': [13771446, 13781446, 13791446, 13801446, 13811446...</msg>
<status status="PASS" starttime="20201112 10:16:19.906" endtime="20201112 10:16:19.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.912" endtime="20201112 10:16:19.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.777" endtime="20201112 10:16:19.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.775" endtime="20201112 10:16:19.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:19.923" level="INFO">${RESULT} = {'start-time': 13761432, 'timer-interval': 10000, 'timer-count': 2, 'wakeups': [13771446, 13781446, 13791446, 13801446, 13811446, 13821446, 13831446, 13841446, 13851446, 13861446, 13871446, 13881446, ...</msg>
<status status="PASS" starttime="20201112 10:16:19.919" endtime="20201112 10:16:19.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.927" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:19.926" endtime="20201112 10:16:19.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.929" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:19.928" endtime="20201112 10:16:19.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.924" endtime="20201112 10:16:19.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.934" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:19.933" endtime="20201112 10:16:19.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.936" level="INFO">VALUE: 13761432</msg>
<status status="PASS" starttime="20201112 10:16:19.935" endtime="20201112 10:16:19.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.931" endtime="20201112 10:16:19.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.941" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:19.940" endtime="20201112 10:16:19.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.943" level="INFO">VALUE: [13771446, 13781446, 13791446, 13801446, 13811446, 13821446, 13831446, 13841446, 13851446, 13861446, 13871446, 13881446, 13891446, 13901446, 13911446, 13921446, 13931446, 13941446, 13951446, 13961446, 13971446, 13981446, 13991446, 14001446, 14011446, 14021446, 14031446, 14041446, 14051446, 14061446, 14071446, 14081446, 14091446, 14101446, 14111446, 14121446, 14131446, 14141446, 14151446, 14161446, 14171446, 14181446, 14191446, 14201446, 14211446, 14221446, 14231446, 14241446, 14251446, 14261446, 14271446, 14281446, 14291446, 14301446, 14311446, 14321446, 14331446, 14341446, 14351446, 14361446, 14371446, 14381446, 14391446, 14401446, 14411446, 14421446, 14431446, 14441446, 14451446, 14461446, 14471446, 14481446, 14491446, 14501446, 14511446, 14521446, 14531446, 14541446, 14551446, 14561446, 14571446, 14581446, 14591446, 14601446, 14611446, 14621446, 14631446, 14641446, 14651446, 14661446, 14671446, 14681446, 14691446, 14701446, 14711446, 14721446, 14731446, 14741446, 14751446, 14761446]</msg>
<status status="PASS" starttime="20201112 10:16:19.942" endtime="20201112 10:16:19.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.938" endtime="20201112 10:16:19.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.951" endtime="20201112 10:16:20.245"></status>
</kw>
<msg timestamp="20201112 10:16:20.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032341486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.949" endtime="20201112 10:16:20.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032341486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:20.248" endtime="20201112 10:16:20.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.256" endtime="20201112 10:16:20.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.947" endtime="20201112 10:16:20.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.945" endtime="20201112 10:16:20.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:20.282" level="INFO">${RESULT} = {'source_diff': [0, 0.010015680000000002, 0.010001166999999998, 0.010001111, 0.010001166999999998, 0.010001111, 0.010001179999999998, 0.010001125, 0.010001152999999999, 0.010001125, 0.0100011529999999...</msg>
<status status="PASS" starttime="20201112 10:16:20.260" endtime="20201112 10:16:20.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.287" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:20.286" endtime="20201112 10:16:20.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.289" level="INFO">VALUE: 0.022325806</msg>
<status status="PASS" starttime="20201112 10:16:20.288" endtime="20201112 10:16:20.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.283" endtime="20201112 10:16:20.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.294" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:20.293" endtime="20201112 10:16:20.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.296" level="INFO">VALUE: [0.032341486, 0.042342653, 0.052343764, 0.062344931, 0.072346042, 0.082347222, 0.092348347, 0.1023495, 0.112350625, 0.122351778, 0.132352903, 0.142354083, 0.152355181, 0.162356347, 0.172357444, 0.182358625, 0.19235975, 0.202360903, 0.212362014, 0.222363222, 0.232364292, 0.242365458, 0.252366569, 0.26236775, 0.272368875, 0.282370028, 0.292371181, 0.302372292, 0.312373472, 0.322374597, 0.332375681, 0.342376847, 0.352377958, 0.362379097, 0.372380208, 0.382381375, 0.392382486, 0.402383639, 0.412384764, 0.422385903, 0.432387014, 0.442388181, 0.452389306, 0.462390444, 0.472391556, 0.482392722, 0.492393847, 0.502394986, 0.512396181, 0.522397264, 0.532398375, 0.542399528, 0.552400639, 0.562401819, 0.572402917, 0.582404083, 0.592405236, 0.602406361, 0.612407472, 0.622408611, 0.63240975, 0.642410931, 0.652412, 0.662413222, 0.672414292, 0.682415444, 0.692416542, 0.702417708, 0.712418833, 0.722419986, 0.732421111, 0.74242225, 0.752423361, 0.762424514, 0.772425639, 0.782426792, 0.792427903, 0.802429097, 0.812430181, 0.822431361, 0.832432528, 0.842433625, 0.852434722, 0.862435875, 0.872437, 0.882438167, 0.892439278, 0.902440486, 0.912441542, 0.922442694, 0.932443833, 0.942444958, 0.952446083, 0.962447236, 0.972448347, 0.982449514, 0.992450625, 1.002451778, 1.012452903, 1.022454056] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:20.295" endtime="20201112 10:16:20.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.290" endtime="20201112 10:16:20.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.299" endtime="20201112 10:16:20.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:20.303" endtime="20201112 10:16:20.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.301" endtime="20201112 10:16:20.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.298" endtime="20201112 10:16:20.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.774" endtime="20201112 10:16:20.324"></status>
</kw>
<msg timestamp="20201112 10:16:20.324" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.333" endtime="20201112 10:16:22.454"></status>
</kw>
<msg timestamp="20201112 10:16:22.456" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16312212, 'wakeups': [16322226, 16332226, 16342226, 16352226, 16362226...</msg>
<status status="PASS" starttime="20201112 10:16:20.331" endtime="20201112 10:16:22.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.462" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16312212, 'wakeups': [16322226, 16332226, 16342226, 16352226, 16362226...</msg>
<status status="PASS" starttime="20201112 10:16:22.458" endtime="20201112 10:16:22.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.464" endtime="20201112 10:16:22.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.328" endtime="20201112 10:16:22.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.326" endtime="20201112 10:16:22.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:22.475" level="INFO">${RESULT} = {'start-time': 16312212, 'timer-interval': 10000, 'timer-count': 2, 'wakeups': [16322226, 16332226, 16342226, 16352226, 16362226, 16372226, 16382226, 16392226, 16402226, 16412226, 16422226, 16432226, ...</msg>
<status status="PASS" starttime="20201112 10:16:22.471" endtime="20201112 10:16:22.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.486" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:22.485" endtime="20201112 10:16:22.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.488" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:22.487" endtime="20201112 10:16:22.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.483" endtime="20201112 10:16:22.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.493" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:22.492" endtime="20201112 10:16:22.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.495" level="INFO">VALUE: 16312212</msg>
<status status="PASS" starttime="20201112 10:16:22.494" endtime="20201112 10:16:22.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.490" endtime="20201112 10:16:22.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.500" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:22.499" endtime="20201112 10:16:22.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.502" level="INFO">VALUE: [16322226, 16332226, 16342226, 16352226, 16362226, 16372226, 16382226, 16392226, 16402226, 16412226, 16422226, 16432226, 16442226, 16452226, 16462226, 16472226, 16482226, 16492226, 16502226, 16512226, 16522226, 16532226, 16542226, 16552226, 16562226, 16572226, 16582226, 16592226, 16602226, 16612226, 16622226, 16632226, 16642226, 16652226, 16662226, 16672226, 16682226, 16692226, 16702226, 16712226, 16722226, 16732226, 16742226, 16752226, 16762226, 16772226, 16782226, 16792226, 16802226, 16812226, 16822226, 16832226, 16842226, 16852226, 16862226, 16872226, 16882226, 16892226, 16902226, 16912226, 16922226, 16932226, 16942226, 16952226, 16962226, 16972226, 16982226, 16992226, 17002226, 17012226, 17022226, 17032226, 17042226, 17052226, 17062226, 17072226, 17082226, 17092226, 17102226, 17112226, 17122226, 17132226, 17142226, 17152226, 17162226, 17172226, 17182226, 17192226, 17202226, 17212226, 17222226, 17232226, 17242226, 17252226, 17262226, 17272226, 17282226, 17292226, 17302226, 17312226]</msg>
<status status="PASS" starttime="20201112 10:16:22.501" endtime="20201112 10:16:22.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.497" endtime="20201112 10:16:22.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.510" endtime="20201112 10:16:22.800"></status>
</kw>
<msg timestamp="20201112 10:16:22.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029361667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.508" endtime="20201112 10:16:22.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029361667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.804" endtime="20201112 10:16:22.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.811" endtime="20201112 10:16:22.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.506" endtime="20201112 10:16:22.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.504" endtime="20201112 10:16:22.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:22.839" level="INFO">${RESULT} = {'source_diff': [0, 0.010015653, 0.010001179999999998, 0.010001111, 0.010001152999999999, 0.010001111000000007, 0.01000119499999999, 0.010001083000000008, 0.010001250000000003, 0.010001110999999993, 0...</msg>
<status status="PASS" starttime="20201112 10:16:22.815" endtime="20201112 10:16:22.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.845" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:22.844" endtime="20201112 10:16:22.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.847" level="INFO">VALUE: 0.019346014</msg>
<status status="PASS" starttime="20201112 10:16:22.846" endtime="20201112 10:16:22.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.840" endtime="20201112 10:16:22.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.852" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:22.851" endtime="20201112 10:16:22.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.855" level="INFO">VALUE: [0.029361667, 0.039362847, 0.049363958, 0.059365111, 0.069366222, 0.079367417, 0.0893685, 0.09936975, 0.109370861, 0.119371958, 0.129373083, 0.139374222, 0.149375347, 0.159376583, 0.169377625, 0.179378792, 0.189379903, 0.199381083, 0.209382194, 0.219383347, 0.229384472, 0.239385639, 0.24938675, 0.259387931, 0.269389028, 0.27939025, 0.289391319, 0.299392486, 0.309393597, 0.319394764, 0.329395875, 0.339397056, 0.349398153, 0.359399319, 0.369400458, 0.379401611, 0.389402722, 0.399403889, 0.409405014, 0.419406181, 0.429407264, 0.439408444, 0.449409556, 0.459410694, 0.469411819, 0.479412972, 0.489414069, 0.49941525, 0.509416361, 0.5194175, 0.529418611, 0.539419778, 0.549420889, 0.559422083, 0.569423167, 0.579424319, 0.589425444, 0.599426597, 0.609427708, 0.619428903, 0.629430014, 0.639431139, 0.649432236, 0.659433417, 0.669434514, 0.679435681, 0.689436833, 0.699437944, 0.709439056, 0.719440222, 0.729441347, 0.739442486, 0.749443611, 0.759444764, 0.769445875, 0.779447042, 0.789448153, 0.799449306, 0.809450417, 0.819451597, 0.829452708, 0.839453931, 0.849454958, 0.859456125, 0.869457236, 0.879458403, 0.889459514, 0.899460667, 0.909461778, 0.919462958, 0.929464056, 0.939465222, 0.949466333, 0.959467486, 0.969468597, 0.979469764, 0.989470875, 0.999472042, 1.009473139, 1.019474306] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:22.854" endtime="20201112 10:16:22.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.848" endtime="20201112 10:16:22.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.858" endtime="20201112 10:16:22.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:22.862" endtime="20201112 10:16:22.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.860" endtime="20201112 10:16:22.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.857" endtime="20201112 10:16:22.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.325" endtime="20201112 10:16:22.882"></status>
</kw>
<msg timestamp="20201112 10:16:22.883" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.891" endtime="20201112 10:16:25.011"></status>
</kw>
<msg timestamp="20201112 10:16:25.012" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18869832, 'wakeups': [18879846, 18889846, 18899846, 18909846, 18919846...</msg>
<status status="PASS" starttime="20201112 10:16:22.889" endtime="20201112 10:16:25.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.018" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18869832, 'wakeups': [18879846, 18889846, 18899846, 18909846, 18919846...</msg>
<status status="PASS" starttime="20201112 10:16:25.015" endtime="20201112 10:16:25.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.021" endtime="20201112 10:16:25.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.887" endtime="20201112 10:16:25.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.885" endtime="20201112 10:16:25.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:25.032" level="INFO">${RESULT} = {'start-time': 18869832, 'timer-interval': 10000, 'timer-count': 2, 'wakeups': [18879846, 18889846, 18899846, 18909846, 18919846, 18929846, 18939846, 18949846, 18959846, 18969846, 18979846, 18989846, ...</msg>
<status status="PASS" starttime="20201112 10:16:25.028" endtime="20201112 10:16:25.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.036" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:25.035" endtime="20201112 10:16:25.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.038" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:25.037" endtime="20201112 10:16:25.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.033" endtime="20201112 10:16:25.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.045" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:25.043" endtime="20201112 10:16:25.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.048" level="INFO">VALUE: 18869832</msg>
<status status="PASS" starttime="20201112 10:16:25.047" endtime="20201112 10:16:25.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.040" endtime="20201112 10:16:25.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.053" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:25.052" endtime="20201112 10:16:25.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.055" level="INFO">VALUE: [18879846, 18889846, 18899846, 18909846, 18919846, 18929846, 18939846, 18949846, 18959846, 18969846, 18979846, 18989846, 18999846, 19009846, 19019846, 19029846, 19039846, 19049846, 19059846, 19069846, 19079846, 19089846, 19099846, 19109846, 19119846, 19129846, 19139846, 19149846, 19159846, 19169846, 19179846, 19189846, 19199846, 19209846, 19219846, 19229846, 19239846, 19249846, 19259846, 19269846, 19279846, 19289846, 19299846, 19309846, 19319846, 19329846, 19339846, 19349846, 19359846, 19369846, 19379846, 19389846, 19399846, 19409846, 19419846, 19429846, 19439846, 19449846, 19459846, 19469846, 19479846, 19489846, 19499846, 19509846, 19519846, 19529846, 19539846, 19549846, 19559846, 19569846, 19579846, 19589846, 19599846, 19609846, 19619846, 19629846, 19639846, 19649846, 19659846, 19669846, 19679846, 19689846, 19699846, 19709846, 19719846, 19729846, 19739846, 19749846, 19759846, 19769846, 19779846, 19789846, 19799846, 19809846, 19819846, 19829846, 19839846, 19849846, 19859846, 19869846]</msg>
<status status="PASS" starttime="20201112 10:16:25.054" endtime="20201112 10:16:25.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.049" endtime="20201112 10:16:25.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.063" endtime="20201112 10:16:25.353"></status>
</kw>
<msg timestamp="20201112 10:16:25.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018323819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028339458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:25.061" endtime="20201112 10:16:25.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018323819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028339458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:25.357" endtime="20201112 10:16:25.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.365" endtime="20201112 10:16:25.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.058" endtime="20201112 10:16:25.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.057" endtime="20201112 10:16:25.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:25.391" level="INFO">${RESULT} = {'source_diff': [0, 0.010015639, 0.010001152999999995, 0.010001153000000006, 0.010001125, 0.010001111, 0.010001166999999991, 0.010001125000000013, 0.010001179999999998, 0.010001083999999993, 0.0100011...</msg>
<status status="PASS" starttime="20201112 10:16:25.368" endtime="20201112 10:16:25.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.395" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:25.394" endtime="20201112 10:16:25.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.397" level="INFO">VALUE: 0.018323819</msg>
<status status="PASS" starttime="20201112 10:16:25.396" endtime="20201112 10:16:25.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.392" endtime="20201112 10:16:25.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.403" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:25.402" endtime="20201112 10:16:25.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.406" level="INFO">VALUE: [0.028339458, 0.038340611, 0.048341764, 0.058342889, 0.068344, 0.078345167, 0.088346292, 0.098347472, 0.108348556, 0.118349722, 0.128350847, 0.138352014, 0.148353125, 0.158354292, 0.168355403, 0.178356611, 0.188357736, 0.198358847, 0.208359972, 0.218361125, 0.22836225, 0.238363403, 0.248364597, 0.258365694, 0.268366806, 0.278367972, 0.288369083, 0.29837025, 0.308371389, 0.318372542, 0.328373667, 0.338374819, 0.348375931, 0.358377111, 0.368378236, 0.378379375, 0.388380514, 0.398381694, 0.408382778, 0.418383944, 0.428385069, 0.438386208, 0.448387319, 0.458388486, 0.468389611, 0.478390792, 0.488391861, 0.498393014, 0.508394125, 0.518395292, 0.528396403, 0.538397556, 0.548398667, 0.558399847, 0.568401014, 0.578402097, 0.588403222, 0.598404375, 0.608405486, 0.618406639, 0.62840775, 0.638408917, 0.648410014, 0.658411181, 0.668412292, 0.678413458, 0.688414583, 0.698415722, 0.708416847, 0.718418, 0.728419125, 0.738420264, 0.748421375, 0.758422556, 0.768423667, 0.778424806, 0.788426, 0.798427097, 0.808428194, 0.818429361, 0.828430472, 0.838431639, 0.84843275, 0.858433889, 0.868435, 0.878436167, 0.888437278, 0.898438444, 0.908439556, 0.918440708, 0.928441875, 0.938442986, 0.948444139, 0.95844525, 0.968446375, 0.978447597, 0.988448653, 0.998449833, 1.008450944, 1.018452083] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:25.404" endtime="20201112 10:16:25.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.399" endtime="20201112 10:16:25.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.409" endtime="20201112 10:16:25.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:25.412" endtime="20201112 10:16:25.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.411" endtime="20201112 10:16:25.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.407" endtime="20201112 10:16:25.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.883" endtime="20201112 10:16:25.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.772" endtime="20201112 10:16:25.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.771" endtime="20201112 10:16:25.434"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:25.437" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.446" endtime="20201112 10:16:27.566"></status>
</kw>
<msg timestamp="20201112 10:16:27.567" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21424829, 'wakeups': [21434852, 21444852, 21454852, 21464852, 21474852...</msg>
<status status="PASS" starttime="20201112 10:16:25.444" endtime="20201112 10:16:27.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.573" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21424829, 'wakeups': [21434852, 21444852, 21454852, 21464852, 21474852...</msg>
<status status="PASS" starttime="20201112 10:16:27.570" endtime="20201112 10:16:27.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.576" endtime="20201112 10:16:27.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.440" endtime="20201112 10:16:27.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.439" endtime="20201112 10:16:27.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.587" level="INFO">${RESULT} = {'start-time': 21424829, 'timer-interval': 10000, 'timer-count': 3, 'wakeups': [21434852, 21444852, 21454852, 21464852, 21474852, 21484852, 21494852, 21504852, 21514852, 21524852, 21534852, 21544852, ...</msg>
<status status="PASS" starttime="20201112 10:16:27.583" endtime="20201112 10:16:27.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.591" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:27.590" endtime="20201112 10:16:27.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.593" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:27.592" endtime="20201112 10:16:27.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.588" endtime="20201112 10:16:27.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.598" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:27.597" endtime="20201112 10:16:27.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.600" level="INFO">VALUE: 21424829</msg>
<status status="PASS" starttime="20201112 10:16:27.599" endtime="20201112 10:16:27.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.595" endtime="20201112 10:16:27.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.605" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:27.604" endtime="20201112 10:16:27.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.607" level="INFO">VALUE: [21434852, 21444852, 21454852, 21464852, 21474852, 21484852, 21494852, 21504852, 21514852, 21524852, 21534852, 21544852, 21554852, 21564852, 21574852, 21584852, 21594852, 21604852, 21614852, 21624852, 21634852, 21644852, 21654852, 21664852, 21674852, 21684852, 21694852, 21704852, 21714852, 21724852, 21734852, 21744852, 21754852, 21764852, 21774852, 21784852, 21794852, 21804852, 21814852, 21824852, 21834852, 21844852, 21854852, 21864852, 21874852, 21884852, 21894852, 21904852, 21914852, 21924852, 21934852, 21944852, 21954852, 21964852, 21974852, 21984852, 21994852, 22004852, 22014852, 22024852, 22034852, 22044852, 22054852, 22064852, 22074852, 22084852, 22094852, 22104852, 22114852, 22124852, 22134852, 22144852, 22154852, 22164852, 22174852, 22184852, 22194852, 22204852, 22214852, 22224852, 22234852, 22244852, 22254852, 22264852, 22274852, 22284852, 22294852, 22304852, 22314852, 22324852, 22334852, 22344852, 22354852, 22364852, 22374852, 22384852, 22394852, 22404852, 22414852, 22424852]</msg>
<status status="PASS" starttime="20201112 10:16:27.606" endtime="20201112 10:16:27.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.601" endtime="20201112 10:16:27.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.620" endtime="20201112 10:16:27.913"></status>
</kw>
<msg timestamp="20201112 10:16:27.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032546319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.613" endtime="20201112 10:16:27.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032546319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.917" endtime="20201112 10:16:27.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.924" endtime="20201112 10:16:27.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.611" endtime="20201112 10:16:27.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.609" endtime="20201112 10:16:27.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.950" level="INFO">${RESULT} = {'source_diff': [0, 0.010024193999999997, 0.010001042000000002, 0.010001125, 0.010001153000000006, 0.010001138999999992, 0.010001139000000006, 0.010001110999999993, 0.010001166000000006, 0.01000111199...</msg>
<status status="PASS" starttime="20201112 10:16:27.928" endtime="20201112 10:16:27.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.954" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:27.953" endtime="20201112 10:16:27.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.957" level="INFO">VALUE: 0.022522125</msg>
<status status="PASS" starttime="20201112 10:16:27.956" endtime="20201112 10:16:27.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.951" endtime="20201112 10:16:27.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.962" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:27.961" endtime="20201112 10:16:27.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.964" level="INFO">VALUE: [0.032546319, 0.042547361, 0.052548486, 0.062549639, 0.072550778, 0.082551917, 0.092553028, 0.102554194, 0.112555306, 0.122556486, 0.132557597, 0.14255875, 0.152559889, 0.162561042, 0.172562167, 0.182563333, 0.192564431, 0.202565611, 0.212566708, 0.222567875, 0.232569, 0.242570153, 0.252571319, 0.262572444, 0.272573569, 0.282574722, 0.292575833, 0.302577, 0.312578125, 0.322579347, 0.332580403, 0.342581653, 0.352582681, 0.362583861, 0.372584972, 0.382586125, 0.392587278, 0.402588431, 0.412589542, 0.422590694, 0.432591819, 0.442592972, 0.452594097, 0.462595292, 0.472596375, 0.482597542, 0.492598653, 0.502599819, 0.512600944, 0.522602111, 0.532603236, 0.542604389, 0.5526055, 0.562606681, 0.572607792, 0.582608972, 0.592610083, 0.602611264, 0.612612361, 0.622613514, 0.632614639, 0.642615833, 0.652616917, 0.662618083, 0.672619194, 0.682620361, 0.692621472, 0.702622639, 0.712623792, 0.722624931, 0.732626042, 0.742627208, 0.752628347, 0.762629486, 0.772630625, 0.782631792, 0.792632903, 0.802634056, 0.812635167, 0.822636333, 0.832637444, 0.842638611, 0.852639722, 0.862640875, 0.872641986, 0.882643153, 0.89264425, 0.902645431, 0.912646528, 0.922647681, 0.932648819, 0.942649958, 0.952651083, 0.962652222, 0.972653333, 0.982654514, 0.992655611, 1.002656764, 1.012657889, 1.022659042] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:27.963" endtime="20201112 10:16:27.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.958" endtime="20201112 10:16:27.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.967" endtime="20201112 10:16:27.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:27.971" endtime="20201112 10:16:27.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.969" endtime="20201112 10:16:27.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.966" endtime="20201112 10:16:27.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.437" endtime="20201112 10:16:27.991"></status>
</kw>
<msg timestamp="20201112 10:16:27.992" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.001" endtime="20201112 10:16:30.121"></status>
</kw>
<msg timestamp="20201112 10:16:30.122" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23980838, 'wakeups': [23990861, 24000861, 24010861, 24020861, 24030861...</msg>
<status status="PASS" starttime="20201112 10:16:27.998" endtime="20201112 10:16:30.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.129" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23980838, 'wakeups': [23990861, 24000861, 24010861, 24020861, 24030861...</msg>
<status status="PASS" starttime="20201112 10:16:30.124" endtime="20201112 10:16:30.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.131" endtime="20201112 10:16:30.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.995" endtime="20201112 10:16:30.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.993" endtime="20201112 10:16:30.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:30.142" level="INFO">${RESULT} = {'start-time': 23980838, 'timer-interval': 10000, 'timer-count': 3, 'wakeups': [23990861, 24000861, 24010861, 24020861, 24030861, 24040861, 24050861, 24060861, 24070861, 24080861, 24090861, 24100861, ...</msg>
<status status="PASS" starttime="20201112 10:16:30.138" endtime="20201112 10:16:30.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.146" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:30.145" endtime="20201112 10:16:30.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.148" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:30.147" endtime="20201112 10:16:30.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.143" endtime="20201112 10:16:30.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.153" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:30.152" endtime="20201112 10:16:30.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.155" level="INFO">VALUE: 23980838</msg>
<status status="PASS" starttime="20201112 10:16:30.154" endtime="20201112 10:16:30.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.150" endtime="20201112 10:16:30.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.160" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:30.159" endtime="20201112 10:16:30.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.163" level="INFO">VALUE: [23990861, 24000861, 24010861, 24020861, 24030861, 24040861, 24050861, 24060861, 24070861, 24080861, 24090861, 24100861, 24110861, 24120861, 24130861, 24140861, 24150861, 24160861, 24170861, 24180861, 24190861, 24200861, 24210861, 24220861, 24230861, 24240861, 24250861, 24260861, 24270861, 24280861, 24290861, 24300861, 24310861, 24320861, 24330861, 24340861, 24350861, 24360861, 24370861, 24380861, 24390861, 24400861, 24410861, 24420861, 24430861, 24440861, 24450861, 24460861, 24470861, 24480861, 24490861, 24500861, 24510861, 24520861, 24530861, 24540861, 24550861, 24560861, 24570861, 24580861, 24590861, 24600861, 24610861, 24620861, 24630861, 24640861, 24650861, 24660861, 24670861, 24680861, 24690861, 24700861, 24710861, 24720861, 24730861, 24740861, 24750861, 24760861, 24770861, 24780861, 24790861, 24800861, 24810861, 24820861, 24830861, 24840861, 24850861, 24860861, 24870861, 24880861, 24890861, 24900861, 24910861, 24920861, 24930861, 24940861, 24950861, 24960861, 24970861, 24980861]</msg>
<status status="PASS" starttime="20201112 10:16:30.161" endtime="20201112 10:16:30.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.157" endtime="20201112 10:16:30.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.170" endtime="20201112 10:16:30.460"></status>
</kw>
<msg timestamp="20201112 10:16:30.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030492792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:30.168" endtime="20201112 10:16:30.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030492792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:30.464" endtime="20201112 10:16:30.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.471" endtime="20201112 10:16:30.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.166" endtime="20201112 10:16:30.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.164" endtime="20201112 10:16:30.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:30.498" level="INFO">${RESULT} = {'source_diff': [0, 0.010024598000000003, 0.010001040999999999, 0.010001111, 0.010001166999999998, 0.010001125000000007, 0.010001166999999991, 0.010001097, 0.010001167000000005, 0.010001125, 0.0100011...</msg>
<status status="PASS" starttime="20201112 10:16:30.475" endtime="20201112 10:16:30.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.503" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:30.502" endtime="20201112 10:16:30.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.505" level="INFO">VALUE: 0.020468194</msg>
<status status="PASS" starttime="20201112 10:16:30.504" endtime="20201112 10:16:30.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.499" endtime="20201112 10:16:30.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.510" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:30.509" endtime="20201112 10:16:30.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.512" level="INFO">VALUE: [0.030492792, 0.040493833, 0.050494944, 0.060496111, 0.070497236, 0.080498403, 0.0904995, 0.100500667, 0.110501792, 0.120502958, 0.130504069, 0.140505236, 0.150506417, 0.160507528, 0.170508653, 0.180509792, 0.190510903, 0.200512083, 0.210513194, 0.220514375, 0.230515472, 0.240516639, 0.250517764, 0.260518917, 0.270520028, 0.280521208, 0.290522319, 0.300523486, 0.310524611, 0.320525764, 0.330526875, 0.340528083, 0.350529167, 0.360530333, 0.370531444, 0.380532611, 0.390533736, 0.400534903, 0.410536014, 0.420537167, 0.430538292, 0.440539472, 0.450540569, 0.460541736, 0.470542861, 0.480544028, 0.490545167, 0.500546319, 0.510547431, 0.520548583, 0.530549708, 0.540550861, 0.550552042, 0.560553153, 0.570554264, 0.580555444, 0.590556542, 0.600557708, 0.610558833, 0.62056, 0.630561111, 0.640562319, 0.650563389, 0.660564556, 0.670565681, 0.680566889, 0.690567944, 0.700569097, 0.710570208, 0.720571361, 0.730572486, 0.740573639, 0.750574736, 0.760575903, 0.770577028, 0.780578181, 0.790579292, 0.800580444, 0.810581556, 0.820582708, 0.830583819, 0.840585, 0.850586125, 0.86058725, 0.870588361, 0.880589542, 0.890590639, 0.900591792, 0.910592903, 0.920594069, 0.930595194, 0.940596333, 0.950597444, 0.960598611, 0.970599722, 0.980600889, 0.990602014, 1.000603153, 1.010604278, 1.020605431] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:30.511" endtime="20201112 10:16:30.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.506" endtime="20201112 10:16:30.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.515" endtime="20201112 10:16:30.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:30.519" endtime="20201112 10:16:30.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.517" endtime="20201112 10:16:30.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.514" endtime="20201112 10:16:30.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.992" endtime="20201112 10:16:30.539"></status>
</kw>
<msg timestamp="20201112 10:16:30.540" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.548" endtime="20201112 10:16:32.666"></status>
</kw>
<msg timestamp="20201112 10:16:32.667" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26526526, 'wakeups': [26536549, 26546549, 26556549, 26566549, 26576549...</msg>
<status status="PASS" starttime="20201112 10:16:30.546" endtime="20201112 10:16:32.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.673" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26526526, 'wakeups': [26536549, 26546549, 26556549, 26566549, 26576549...</msg>
<status status="PASS" starttime="20201112 10:16:32.669" endtime="20201112 10:16:32.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.675" endtime="20201112 10:16:32.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.543" endtime="20201112 10:16:32.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.541" endtime="20201112 10:16:32.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.686" level="INFO">${RESULT} = {'start-time': 26526526, 'timer-interval': 10000, 'timer-count': 3, 'wakeups': [26536549, 26546549, 26556549, 26566549, 26576549, 26586549, 26596549, 26606549, 26616549, 26626549, 26636549, 26646549, ...</msg>
<status status="PASS" starttime="20201112 10:16:32.682" endtime="20201112 10:16:32.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.694" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:32.692" endtime="20201112 10:16:32.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.698" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:32.697" endtime="20201112 10:16:32.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.688" endtime="20201112 10:16:32.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.708" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:32.707" endtime="20201112 10:16:32.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.711" level="INFO">VALUE: 26526526</msg>
<status status="PASS" starttime="20201112 10:16:32.710" endtime="20201112 10:16:32.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.704" endtime="20201112 10:16:32.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.716" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:32.715" endtime="20201112 10:16:32.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.718" level="INFO">VALUE: [26536549, 26546549, 26556549, 26566549, 26576549, 26586549, 26596549, 26606549, 26616549, 26626549, 26636549, 26646549, 26656549, 26666549, 26676549, 26686549, 26696549, 26706549, 26716549, 26726549, 26736549, 26746549, 26756549, 26766549, 26776549, 26786549, 26796549, 26806549, 26816549, 26826549, 26836549, 26846549, 26856549, 26866549, 26876549, 26886549, 26896549, 26906549, 26916549, 26926549, 26936549, 26946549, 26956549, 26966549, 26976549, 26986549, 26996549, 27006549, 27016549, 27026549, 27036549, 27046549, 27056549, 27066549, 27076549, 27086549, 27096549, 27106549, 27116549, 27126549, 27136549, 27146549, 27156549, 27166549, 27176549, 27186549, 27196549, 27206549, 27216549, 27226549, 27236549, 27246549, 27256549, 27266549, 27276549, 27286549, 27296549, 27306549, 27316549, 27326549, 27336549, 27346549, 27356549, 27366549, 27376549, 27386549, 27396549, 27406549, 27416549, 27426549, 27436549, 27446549, 27456549, 27466549, 27476549, 27486549, 27496549, 27506549, 27516549, 27526549]</msg>
<status status="PASS" starttime="20201112 10:16:32.717" endtime="20201112 10:16:32.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.712" endtime="20201112 10:16:32.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.725" endtime="20201112 10:16:33.017"></status>
</kw>
<msg timestamp="20201112 10:16:33.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018195292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028219403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.723" endtime="20201112 10:16:33.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018195292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028219403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:33.020" endtime="20201112 10:16:33.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.028" endtime="20201112 10:16:33.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.721" endtime="20201112 10:16:33.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.719" endtime="20201112 10:16:33.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:33.054" level="INFO">${RESULT} = {'source_diff': [0, 0.010024111000000002, 0.010001082999999997, 0.01000107, 0.010001165999999999, 0.010001111, 0.010001180999999998, 0.010001111000000007, 0.010001152999999999, 0.010001125, 0.01000115...</msg>
<status status="PASS" starttime="20201112 10:16:33.031" endtime="20201112 10:16:33.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.059" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:33.058" endtime="20201112 10:16:33.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.061" level="INFO">VALUE: 0.018195292</msg>
<status status="PASS" starttime="20201112 10:16:33.060" endtime="20201112 10:16:33.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.055" endtime="20201112 10:16:33.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.066" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:33.065" endtime="20201112 10:16:33.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.069" level="INFO">VALUE: [0.028219403, 0.038220486, 0.048221556, 0.058222722, 0.068223833, 0.078225014, 0.088226125, 0.098227278, 0.108228403, 0.118229556, 0.128230694, 0.138231847, 0.148232958, 0.158234111, 0.168235264, 0.178236403, 0.188237514, 0.198238681, 0.208239792, 0.218241, 0.228242069, 0.238243236, 0.248244389, 0.258245528, 0.268246639, 0.278247806, 0.288248944, 0.298250097, 0.308251208, 0.318252361, 0.328253486, 0.338254653, 0.348255778, 0.358256944, 0.368258056, 0.378259208, 0.388260333, 0.3982615, 0.408262625, 0.418263778, 0.428264889, 0.438266056, 0.448267194, 0.458268347, 0.468269472, 0.478270625, 0.488271792, 0.498272889, 0.508274014, 0.518275181, 0.528276292, 0.538277431, 0.548278556, 0.558279708, 0.568280819, 0.578281972, 0.588283125, 0.59828425, 0.608285361, 0.618286528, 0.628287653, 0.638288806, 0.648289903, 0.658291097, 0.668292181, 0.678293333, 0.688294444, 0.698295625, 0.70829675, 0.718297889, 0.728299014, 0.738300153, 0.748301333, 0.758302431, 0.768303569, 0.778304708, 0.788305833, 0.798307, 0.808308083, 0.81830925, 0.828310361, 0.838311528, 0.848312667, 0.858313847, 0.868314931, 0.878316097, 0.888317194, 0.898318361, 0.908319472, 0.918320625, 0.92832175, 0.938322917, 0.948324, 0.958325167, 0.968326278, 0.978327444, 0.988328569, 0.998329708, 1.008330903, 1.018331986] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:33.068" endtime="20201112 10:16:33.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.062" endtime="20201112 10:16:33.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.072" endtime="20201112 10:16:33.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:33.076" endtime="20201112 10:16:33.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.074" endtime="20201112 10:16:33.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.071" endtime="20201112 10:16:33.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.540" endtime="20201112 10:16:33.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.435" endtime="20201112 10:16:33.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.434" endtime="20201112 10:16:33.097"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:33.099" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.107" endtime="20201112 10:16:35.226"></status>
</kw>
<msg timestamp="20201112 10:16:35.227" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29086392, 'wakeups': [29096425, 29106424, 29116423, 29126423, 29136423...</msg>
<status status="PASS" starttime="20201112 10:16:33.106" endtime="20201112 10:16:35.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.233" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29086392, 'wakeups': [29096425, 29106424, 29116423, 29126423, 29136423...</msg>
<status status="PASS" starttime="20201112 10:16:35.229" endtime="20201112 10:16:35.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.235" endtime="20201112 10:16:35.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.103" endtime="20201112 10:16:35.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.101" endtime="20201112 10:16:35.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:35.246" level="INFO">${RESULT} = {'start-time': 29086392, 'timer-interval': 10000, 'timer-count': 4, 'wakeups': [29096425, 29106424, 29116423, 29126423, 29136423, 29146423, 29156423, 29166423, 29176423, 29186423, 29196423, 29206423, ...</msg>
<status status="PASS" starttime="20201112 10:16:35.242" endtime="20201112 10:16:35.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.253" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:35.252" endtime="20201112 10:16:35.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.255" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:35.254" endtime="20201112 10:16:35.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.247" endtime="20201112 10:16:35.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.260" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:35.259" endtime="20201112 10:16:35.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.262" level="INFO">VALUE: 29086392</msg>
<status status="PASS" starttime="20201112 10:16:35.261" endtime="20201112 10:16:35.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.256" endtime="20201112 10:16:35.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.266" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:35.265" endtime="20201112 10:16:35.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.269" level="INFO">VALUE: [29096425, 29106424, 29116423, 29126423, 29136423, 29146423, 29156423, 29166423, 29176423, 29186423, 29196423, 29206423, 29216423, 29226423, 29236423, 29246423, 29256423, 29266423, 29276423, 29286423, 29296423, 29306423, 29316423, 29326423, 29336423, 29346423, 29356423, 29366423, 29376423, 29386423, 29396423, 29406423, 29416423, 29426423, 29436423, 29446423, 29456423, 29466423, 29476423, 29486423, 29496423, 29506423, 29516423, 29526423, 29536423, 29546423, 29556423, 29566423, 29576423, 29586423, 29596423, 29606423, 29616423, 29626423, 29636423, 29646423, 29656423, 29666423, 29676423, 29686423, 29696423, 29706423, 29716423, 29726423, 29736423, 29746423, 29756423, 29766423, 29776423, 29786423, 29796423, 29806423, 29816423, 29826423, 29836423, 29846423, 29856423, 29866423, 29876423, 29886423, 29896423, 29906423, 29916423, 29926423, 29936423, 29946423, 29956423, 29966423, 29976423, 29986423, 29996423, 30006423, 30016423, 30026423, 30036423, 30046423, 30056423, 30066423, 30076423, 30086423]</msg>
<status status="PASS" starttime="20201112 10:16:35.268" endtime="20201112 10:16:35.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.263" endtime="20201112 10:16:35.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.278" endtime="20201112 10:16:35.569"></status>
</kw>
<msg timestamp="20201112 10:16:35.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020945083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030979306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:35.275" endtime="20201112 10:16:35.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020945083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030979306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:35.573" endtime="20201112 10:16:35.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.580" endtime="20201112 10:16:35.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.272" endtime="20201112 10:16:35.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.271" endtime="20201112 10:16:35.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:35.606" level="INFO">${RESULT} = {'source_diff': [0, 0.010034223000000002, 0.010000708, 0.010000110999999999, 0.010001180999999998, 0.010001097, 0.010001179999999998, 0.010001098, 0.010001194000000005, 0.010001110999999993, 0.0100011...</msg>
<status status="PASS" starttime="20201112 10:16:35.583" endtime="20201112 10:16:35.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.610" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:35.609" endtime="20201112 10:16:35.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.612" level="INFO">VALUE: 0.020945083</msg>
<status status="PASS" starttime="20201112 10:16:35.611" endtime="20201112 10:16:35.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.607" endtime="20201112 10:16:35.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.618" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:35.617" endtime="20201112 10:16:35.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.620" level="INFO">VALUE: [0.030979306, 0.040980014, 0.050980125, 0.060981306, 0.070982403, 0.080983583, 0.090984681, 0.100985875, 0.110986986, 0.120988125, 0.13098925, 0.140990431, 0.150991528, 0.160992708, 0.170993806, 0.180994972, 0.190996083, 0.200997264, 0.210998375, 0.220999528, 0.231000653, 0.241001819, 0.251002931, 0.261004111, 0.271005208, 0.281006389, 0.291007486, 0.301008667, 0.311009792, 0.321010958, 0.331012069, 0.341013222, 0.351014333, 0.361015542, 0.371016639, 0.381017778, 0.391018903, 0.401020083, 0.411021194, 0.421022375, 0.431023472, 0.441024625, 0.451025778, 0.461026931, 0.471028042, 0.481029208, 0.491030306, 0.501031472, 0.511032597, 0.521033764, 0.531034875, 0.541036069, 0.551037153, 0.561038306, 0.571039417, 0.581040583, 0.591041722, 0.601042861, 0.611043972, 0.621045111, 0.631046278, 0.641047403, 0.651048542, 0.661049722, 0.671050764, 0.681051917, 0.691053028, 0.701054194, 0.711055306, 0.721056458, 0.731057569, 0.741058736, 0.751059861, 0.761061056, 0.771062111, 0.781063278, 0.791064389, 0.801065542, 0.811066653, 0.821067819, 0.831068931, 0.841070097, 0.851071194, 0.861072361, 0.871073472, 0.881074625, 0.89107575, 0.901076917, 0.911078014, 0.921079181, 0.931080292, 0.941081458, 0.951082569, 0.96108375, 0.971084889, 0.981085986, 0.991087111, 1.001088278, 1.011089375, 1.021090528] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:35.619" endtime="20201112 10:16:35.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.614" endtime="20201112 10:16:35.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.623" endtime="20201112 10:16:35.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:35.626" endtime="20201112 10:16:35.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.625" endtime="20201112 10:16:35.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.621" endtime="20201112 10:16:35.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.100" endtime="20201112 10:16:35.647"></status>
</kw>
<msg timestamp="20201112 10:16:35.647" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.657" endtime="20201112 10:16:37.775"></status>
</kw>
<msg timestamp="20201112 10:16:37.776" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31635784, 'wakeups': [31645817, 31655816, 31665815, 31675815, 31685815...</msg>
<status status="PASS" starttime="20201112 10:16:35.654" endtime="20201112 10:16:37.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.782" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31635784, 'wakeups': [31645817, 31655816, 31665815, 31675815, 31685815...</msg>
<status status="PASS" starttime="20201112 10:16:37.779" endtime="20201112 10:16:37.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.784" endtime="20201112 10:16:37.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.651" endtime="20201112 10:16:37.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.649" endtime="20201112 10:16:37.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:37.795" level="INFO">${RESULT} = {'start-time': 31635784, 'timer-interval': 10000, 'timer-count': 4, 'wakeups': [31645817, 31655816, 31665815, 31675815, 31685815, 31695815, 31705815, 31715815, 31725815, 31735815, 31745815, 31755815, ...</msg>
<status status="PASS" starttime="20201112 10:16:37.791" endtime="20201112 10:16:37.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.804" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:37.802" endtime="20201112 10:16:37.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.807" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:37.806" endtime="20201112 10:16:37.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.797" endtime="20201112 10:16:37.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.812" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:37.811" endtime="20201112 10:16:37.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.814" level="INFO">VALUE: 31635784</msg>
<status status="PASS" starttime="20201112 10:16:37.813" endtime="20201112 10:16:37.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.808" endtime="20201112 10:16:37.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.819" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:37.818" endtime="20201112 10:16:37.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.821" level="INFO">VALUE: [31645817, 31655816, 31665815, 31675815, 31685815, 31695815, 31705815, 31715815, 31725815, 31735815, 31745815, 31755815, 31765815, 31775815, 31785815, 31795815, 31805815, 31815815, 31825815, 31835815, 31845815, 31855815, 31865815, 31875815, 31885815, 31895815, 31905815, 31915815, 31925815, 31935815, 31945815, 31955815, 31965815, 31975815, 31985815, 31995815, 32005815, 32015815, 32025815, 32035815, 32045815, 32055815, 32065815, 32075815, 32085815, 32095815, 32105815, 32115815, 32125815, 32135815, 32145815, 32155815, 32165815, 32175815, 32185815, 32195815, 32205815, 32215815, 32225815, 32235815, 32245815, 32255815, 32265815, 32275815, 32285815, 32295815, 32305815, 32315815, 32325815, 32335815, 32345815, 32355815, 32365815, 32375815, 32385815, 32395815, 32405815, 32415815, 32425815, 32435815, 32445815, 32455815, 32465815, 32475815, 32485815, 32495815, 32505815, 32515815, 32525815, 32535815, 32545815, 32555815, 32565815, 32575815, 32585815, 32595815, 32605815, 32615815, 32625815, 32635815]</msg>
<status status="PASS" starttime="20201112 10:16:37.820" endtime="20201112 10:16:37.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.815" endtime="20201112 10:16:37.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.828" endtime="20201112 10:16:38.119"></status>
</kw>
<msg timestamp="20201112 10:16:38.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029846528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:37.827" endtime="20201112 10:16:38.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029846528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:38.123" endtime="20201112 10:16:38.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.130" endtime="20201112 10:16:38.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.824" endtime="20201112 10:16:38.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.822" endtime="20201112 10:16:38.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:38.157" level="INFO">${RESULT} = {'source_diff': [0, 0.010034764000000002, 0.010000708, 0.010000124999999999, 0.010001152999999999, 0.010001125000000007, 0.010001166999999991, 0.010001125, 0.010001152, 0.010001111000000007, 0.0100012...</msg>
<status status="PASS" starttime="20201112 10:16:38.134" endtime="20201112 10:16:38.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.161" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:38.160" endtime="20201112 10:16:38.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.163" level="INFO">VALUE: 0.019811764</msg>
<status status="PASS" starttime="20201112 10:16:38.163" endtime="20201112 10:16:38.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.158" endtime="20201112 10:16:38.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.169" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:38.168" endtime="20201112 10:16:38.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.171" level="INFO">VALUE: [0.029846528, 0.039847236, 0.049847361, 0.059848514, 0.069849639, 0.079850806, 0.089851931, 0.099853083, 0.109854194, 0.119855417, 0.129856486, 0.139857639, 0.14985875, 0.159859917, 0.169861042, 0.179862194, 0.189863361, 0.199864486, 0.209865597, 0.219866764, 0.229867875, 0.239869056, 0.24987025, 0.259871333, 0.269872431, 0.279873583, 0.289874708, 0.299875861, 0.309877, 0.319878139, 0.329879236, 0.339880389, 0.3498815, 0.359882667, 0.369883778, 0.379884944, 0.389886042, 0.399887194, 0.409888306, 0.419889472, 0.429890597, 0.439891736, 0.449892931, 0.459894014, 0.469895167, 0.479896278, 0.489897403, 0.499898542, 0.509899653, 0.519900819, 0.529901944, 0.539903097, 0.549904194, 0.559905361, 0.569906472, 0.579907625, 0.589908736, 0.599909903, 0.609911014, 0.619912167, 0.629913292, 0.639914444, 0.649915597, 0.659916736, 0.669917819, 0.679918986, 0.689920125, 0.699921278, 0.709922375, 0.719923528, 0.729924639, 0.739925792, 0.749926903, 0.759928083, 0.769929181, 0.779930347, 0.789931472, 0.799932611, 0.809933722, 0.819934875, 0.829935986, 0.839937181, 0.849938264, 0.859939431, 0.869940528, 0.879941694, 0.889942861, 0.899943972, 0.909945083, 0.919946236, 0.929947347, 0.939948514, 0.949949639, 0.959950778, 0.969951889, 0.979953056, 0.989954181, 0.999955375, 1.009956431, 1.019957611] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:38.170" endtime="20201112 10:16:38.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.165" endtime="20201112 10:16:38.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.174" endtime="20201112 10:16:38.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:38.177" endtime="20201112 10:16:38.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.176" endtime="20201112 10:16:38.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.172" endtime="20201112 10:16:38.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.648" endtime="20201112 10:16:38.198"></status>
</kw>
<msg timestamp="20201112 10:16:38.199" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.207" endtime="20201112 10:16:40.326"></status>
</kw>
<msg timestamp="20201112 10:16:40.327" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34186324, 'wakeups': [34196357, 34206356, 34216355, 34226355, 34236355...</msg>
<status status="PASS" starttime="20201112 10:16:38.206" endtime="20201112 10:16:40.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.332" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34186324, 'wakeups': [34196357, 34206356, 34216355, 34226355, 34236355...</msg>
<status status="PASS" starttime="20201112 10:16:40.329" endtime="20201112 10:16:40.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.335" endtime="20201112 10:16:40.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.203" endtime="20201112 10:16:40.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.201" endtime="20201112 10:16:40.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:40.345" level="INFO">${RESULT} = {'start-time': 34186324, 'timer-interval': 10000, 'timer-count': 4, 'wakeups': [34196357, 34206356, 34216355, 34226355, 34236355, 34246355, 34256355, 34266355, 34276355, 34286355, 34296355, 34306355, ...</msg>
<status status="PASS" starttime="20201112 10:16:40.342" endtime="20201112 10:16:40.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.355" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:40.352" endtime="20201112 10:16:40.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.359" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:40.357" endtime="20201112 10:16:40.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.347" endtime="20201112 10:16:40.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.366" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:40.365" endtime="20201112 10:16:40.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.368" level="INFO">VALUE: 34186324</msg>
<status status="PASS" starttime="20201112 10:16:40.367" endtime="20201112 10:16:40.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.362" endtime="20201112 10:16:40.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.373" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:40.372" endtime="20201112 10:16:40.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.375" level="INFO">VALUE: [34196357, 34206356, 34216355, 34226355, 34236355, 34246355, 34256355, 34266355, 34276355, 34286355, 34296355, 34306355, 34316355, 34326355, 34336355, 34346355, 34356355, 34366355, 34376355, 34386355, 34396355, 34406355, 34416355, 34426355, 34436355, 34446355, 34456355, 34466355, 34476355, 34486355, 34496355, 34506355, 34516355, 34526355, 34536355, 34546355, 34556355, 34566355, 34576355, 34586355, 34596355, 34606355, 34616355, 34626355, 34636355, 34646355, 34656355, 34666355, 34676355, 34686355, 34696355, 34706355, 34716355, 34726355, 34736355, 34746355, 34756355, 34766355, 34776355, 34786355, 34796355, 34806355, 34816355, 34826355, 34836355, 34846355, 34856355, 34866355, 34876355, 34886355, 34896355, 34906355, 34916355, 34926355, 34936355, 34946355, 34956355, 34966355, 34976355, 34986355, 34996355, 35006355, 35016355, 35026355, 35036355, 35046355, 35056355, 35066355, 35076355, 35086355, 35096355, 35106355, 35116355, 35126355, 35136355, 35146355, 35156355, 35166355, 35176355, 35186355]</msg>
<status status="PASS" starttime="20201112 10:16:40.374" endtime="20201112 10:16:40.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.369" endtime="20201112 10:16:40.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.382" endtime="20201112 10:16:40.672"></status>
</kw>
<msg timestamp="20201112 10:16:40.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019277778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029312569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.380" endtime="20201112 10:16:40.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019277778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029312569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.676" endtime="20201112 10:16:40.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.683" endtime="20201112 10:16:40.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.378" endtime="20201112 10:16:40.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.376" endtime="20201112 10:16:40.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:40.709" level="INFO">${RESULT} = {'source_diff': [0, 0.010034791000000001, 0.010000723, 0.010000110999999999, 0.010001165999999999, 0.010001125, 0.010001152999999999, 0.010001139000000006, 0.010001152999999999, 0.010001167000000005, ...</msg>
<status status="PASS" starttime="20201112 10:16:40.686" endtime="20201112 10:16:40.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.714" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:40.713" endtime="20201112 10:16:40.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.716" level="INFO">VALUE: 0.019277778</msg>
<status status="PASS" starttime="20201112 10:16:40.715" endtime="20201112 10:16:40.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.710" endtime="20201112 10:16:40.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.722" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:40.721" endtime="20201112 10:16:40.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.724" level="INFO">VALUE: [0.029312569, 0.039313292, 0.049313403, 0.059314569, 0.069315694, 0.079316847, 0.089317986, 0.099319139, 0.109320306, 0.119321431, 0.129322528, 0.139323708, 0.149324819, 0.159325986, 0.169327083, 0.17932825, 0.189329361, 0.199330528, 0.209331653, 0.219332819, 0.229333931, 0.239335097, 0.249336208, 0.259337458, 0.269338486, 0.279339653, 0.289340778, 0.299341944, 0.309343069, 0.319344222, 0.329345347, 0.339346514, 0.349347639, 0.359348833, 0.369349917, 0.379351083, 0.389352194, 0.399353347, 0.409354458, 0.419355653, 0.42935675, 0.439357931, 0.449359028, 0.459360208, 0.469361306, 0.479362486, 0.489363611, 0.499364778, 0.509365875, 0.519367069, 0.529368167, 0.539369333, 0.549370431, 0.559371597, 0.569372722, 0.579373917, 0.589375, 0.599376167, 0.609377278, 0.619378444, 0.629379569, 0.639380722, 0.649381847, 0.659383028, 0.669384139, 0.679385292, 0.689386417, 0.699387569, 0.709388681, 0.719389847, 0.729390958, 0.739392097, 0.749393278, 0.759394375, 0.769395486, 0.779396653, 0.78939775, 0.799398958, 0.809400028, 0.819401194, 0.829402292, 0.839403444, 0.849404556, 0.859405764, 0.869406833, 0.879407986, 0.889409097, 0.899410264, 0.909411403, 0.919412542, 0.929413639, 0.939414806, 0.949415972, 0.959417069, 0.969418222, 0.979419347, 0.989420458, 0.999421625, 1.009422736, 1.019423903] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:40.723" endtime="20201112 10:16:40.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.718" endtime="20201112 10:16:40.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.727" endtime="20201112 10:16:40.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:40.731" endtime="20201112 10:16:40.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.729" endtime="20201112 10:16:40.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.726" endtime="20201112 10:16:40.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.199" endtime="20201112 10:16:40.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.098" endtime="20201112 10:16:40.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.097" endtime="20201112 10:16:40.752"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:40.754" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.763" endtime="20201112 10:16:42.880"></status>
</kw>
<msg timestamp="20201112 10:16:42.881" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36741338, 'wakeups': [36751382, 36761382, 36771382, 36781382, 36791382...</msg>
<status status="PASS" starttime="20201112 10:16:40.761" endtime="20201112 10:16:42.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.887" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36741338, 'wakeups': [36751382, 36761382, 36771382, 36781382, 36791382...</msg>
<status status="PASS" starttime="20201112 10:16:42.883" endtime="20201112 10:16:42.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.889" endtime="20201112 10:16:42.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.758" endtime="20201112 10:16:42.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.756" endtime="20201112 10:16:42.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:42.900" level="INFO">${RESULT} = {'start-time': 36741338, 'timer-interval': 10000, 'timer-count': 5, 'wakeups': [36751382, 36761382, 36771382, 36781382, 36791382, 36801382, 36811382, 36821382, 36831382, 36841382, 36851382, 36861382, ...</msg>
<status status="PASS" starttime="20201112 10:16:42.896" endtime="20201112 10:16:42.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.908" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:42.906" endtime="20201112 10:16:42.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.913" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:42.911" endtime="20201112 10:16:42.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.902" endtime="20201112 10:16:42.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.919" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:42.918" endtime="20201112 10:16:42.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.921" level="INFO">VALUE: 36741338</msg>
<status status="PASS" starttime="20201112 10:16:42.920" endtime="20201112 10:16:42.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.916" endtime="20201112 10:16:42.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.926" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:42.925" endtime="20201112 10:16:42.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.929" level="INFO">VALUE: [36751382, 36761382, 36771382, 36781382, 36791382, 36801382, 36811382, 36821382, 36831382, 36841382, 36851382, 36861382, 36871382, 36881382, 36891382, 36901382, 36911382, 36921382, 36931382, 36941382, 36951382, 36961382, 36971382, 36981382, 36991382, 37001382, 37011382, 37021382, 37031382, 37041382, 37051382, 37061382, 37071382, 37081382, 37091382, 37101382, 37111382, 37121382, 37131382, 37141382, 37151382, 37161382, 37171382, 37181382, 37191382, 37201382, 37211382, 37221382, 37231382, 37241382, 37251382, 37261382, 37271382, 37281382, 37291382, 37301382, 37311382, 37321382, 37331382, 37341382, 37351382, 37361382, 37371382, 37381382, 37391382, 37401382, 37411382, 37421382, 37431382, 37441382, 37451382, 37461382, 37471382, 37481382, 37491382, 37501382, 37511382, 37521382, 37531382, 37541382, 37551382, 37561382, 37571382, 37581382, 37591382, 37601382, 37611382, 37621382, 37631382, 37641382, 37651382, 37661382, 37671382, 37681382, 37691382, 37701382, 37711382, 37721382, 37731382, 37741382]</msg>
<status status="PASS" starttime="20201112 10:16:42.927" endtime="20201112 10:16:42.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.922" endtime="20201112 10:16:42.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.937" endtime="20201112 10:16:43.227"></status>
</kw>
<msg timestamp="20201112 10:16:43.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031066264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:16:42.935" endtime="20201112 10:16:43.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031066264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:16:43.231" endtime="20201112 10:16:43.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.239" endtime="20201112 10:16:43.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.933" endtime="20201112 10:16:43.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.930" endtime="20201112 10:16:43.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:43.264" level="INFO">${RESULT} = {'source_diff': [0, 0.010045263999999998, 0.010001111000000003, 0.010001096999999994, 0.010001167000000005, 0.010001111, 0.010001166999999991, 0.010001125000000013, 0.010001165999999992, 0.01000111100...</msg>
<status status="PASS" starttime="20201112 10:16:43.242" endtime="20201112 10:16:43.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.269" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:43.268" endtime="20201112 10:16:43.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.271" level="INFO">VALUE: 0.021021</msg>
<status status="PASS" starttime="20201112 10:16:43.270" endtime="20201112 10:16:43.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.265" endtime="20201112 10:16:43.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.276" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:43.275" endtime="20201112 10:16:43.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.278" level="INFO">VALUE: [0.031066264, 0.041067375, 0.051068472, 0.061069639, 0.07107075, 0.081071917, 0.091073042, 0.101074208, 0.111075319, 0.121076472, 0.131077583, 0.14107875, 0.151079861, 0.161081028, 0.171082167, 0.181083333, 0.191084431, 0.201085625, 0.211086708, 0.221087903, 0.231088986, 0.241090153, 0.251091278, 0.261092486, 0.271093611, 0.281094722, 0.291095833, 0.301097, 0.311098139, 0.321099278, 0.331100417, 0.341101583, 0.351102681, 0.361103847, 0.371104972, 0.381106125, 0.39110725, 0.401108403, 0.411109528, 0.421110708, 0.431111819, 0.441112972, 0.451114083, 0.461115264, 0.471116375, 0.481117556, 0.491118653, 0.501119819, 0.511120931, 0.521122097, 0.531123236, 0.541124403, 0.551125569, 0.561126667, 0.571127778, 0.581128931, 0.591130042, 0.601131208, 0.611132319, 0.621133472, 0.631134611, 0.64113575, 0.651136847, 0.661138014, 0.671139125, 0.681140278, 0.691141389, 0.701142556, 0.711143681, 0.721144819, 0.731145944, 0.741147083, 0.751148222, 0.761149431, 0.771150472, 0.781151625, 0.791152736, 0.801153903, 0.811155014, 0.821156167, 0.831157278, 0.841158458, 0.851159556, 0.861160708, 0.871161819, 0.881162986, 0.891164097, 0.90116525, 0.911166361, 0.921167528, 0.931168639, 0.941169806, 0.951170917, 0.961172069, 0.971173181, 0.981174347, 0.991175458, 1.001176625, 1.011177722, 1.021178903] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:43.277" endtime="20201112 10:16:43.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.272" endtime="20201112 10:16:43.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.281" endtime="20201112 10:16:43.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:43.289" endtime="20201112 10:16:43.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.288" endtime="20201112 10:16:43.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.280" endtime="20201112 10:16:43.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.755" endtime="20201112 10:16:43.311"></status>
</kw>
<msg timestamp="20201112 10:16:43.311" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.319" endtime="20201112 10:16:45.432"></status>
</kw>
<msg timestamp="20201112 10:16:45.432" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39297809, 'wakeups': [39307853, 39317853, 39327853, 39337853, 39347853...</msg>
<status status="PASS" starttime="20201112 10:16:43.317" endtime="20201112 10:16:45.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.435" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39297809, 'wakeups': [39307853, 39317853, 39327853, 39337853, 39347853...</msg>
<status status="PASS" starttime="20201112 10:16:45.433" endtime="20201112 10:16:45.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.436" endtime="20201112 10:16:45.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.315" endtime="20201112 10:16:45.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.313" endtime="20201112 10:16:45.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:45.441" level="INFO">${RESULT} = {'start-time': 39297809, 'timer-interval': 10000, 'timer-count': 5, 'wakeups': [39307853, 39317853, 39327853, 39337853, 39347853, 39357853, 39367853, 39377853, 39387853, 39397853, 39407853, 39417853, ...</msg>
<status status="PASS" starttime="20201112 10:16:45.439" endtime="20201112 10:16:45.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.445" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:45.444" endtime="20201112 10:16:45.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.448" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:45.447" endtime="20201112 10:16:45.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.442" endtime="20201112 10:16:45.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.452" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:45.451" endtime="20201112 10:16:45.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.454" level="INFO">VALUE: 39297809</msg>
<status status="PASS" starttime="20201112 10:16:45.453" endtime="20201112 10:16:45.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.449" endtime="20201112 10:16:45.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.459" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:45.458" endtime="20201112 10:16:45.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.461" level="INFO">VALUE: [39307853, 39317853, 39327853, 39337853, 39347853, 39357853, 39367853, 39377853, 39387853, 39397853, 39407853, 39417853, 39427853, 39437853, 39447853, 39457853, 39467853, 39477853, 39487853, 39497853, 39507853, 39517853, 39527853, 39537853, 39547853, 39557853, 39567853, 39577853, 39587853, 39597853, 39607853, 39617853, 39627853, 39637853, 39647853, 39657853, 39667853, 39677853, 39687853, 39697853, 39707853, 39717853, 39727853, 39737853, 39747853, 39757853, 39767853, 39777853, 39787853, 39797853, 39807853, 39817853, 39827853, 39837853, 39847853, 39857853, 39867853, 39877853, 39887853, 39897853, 39907853, 39917853, 39927853, 39937853, 39947853, 39957853, 39967853, 39977853, 39987853, 39997853, 40007853, 40017853, 40027853, 40037853, 40047853, 40057853, 40067853, 40077853, 40087853, 40097853, 40107853, 40117853, 40127853, 40137853, 40147853, 40157853, 40167853, 40177853, 40187853, 40197853, 40207853, 40217853, 40227853, 40237853, 40247853, 40257853, 40267853, 40277853, 40287853, 40297853]</msg>
<status status="PASS" starttime="20201112 10:16:45.460" endtime="20201112 10:16:45.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.456" endtime="20201112 10:16:45.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.469" endtime="20201112 10:16:45.759"></status>
</kw>
<msg timestamp="20201112 10:16:45.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018300778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028345597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.467" endtime="20201112 10:16:45.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018300778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028345597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.763" endtime="20201112 10:16:45.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.771" endtime="20201112 10:16:45.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.465" endtime="20201112 10:16:45.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.463" endtime="20201112 10:16:45.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:45.797" level="INFO">${RESULT} = {'source_diff': [0, 0.010044819, 0.010001097, 0.010001166999999998, 0.010001125, 0.010001097000000007, 0.010001180999999998, 0.010001097, 0.010001180999999998, 0.010001110999999993, 0.0100011529999999...</msg>
<status status="PASS" starttime="20201112 10:16:45.774" endtime="20201112 10:16:45.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.802" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:45.801" endtime="20201112 10:16:45.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.804" level="INFO">VALUE: 0.018300778</msg>
<status status="PASS" starttime="20201112 10:16:45.803" endtime="20201112 10:16:45.804"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.798" endtime="20201112 10:16:45.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.809" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:45.808" endtime="20201112 10:16:45.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.811" level="INFO">VALUE: [0.028345597, 0.038346694, 0.048347861, 0.058348986, 0.068350083, 0.078351264, 0.088352361, 0.098353542, 0.108354653, 0.118355806, 0.128356931, 0.138358097, 0.148359208, 0.158360375, 0.168361514, 0.178362667, 0.188363764, 0.198364931, 0.208366069, 0.218367208, 0.228368319, 0.238369486, 0.248370597, 0.25837175, 0.268372861, 0.278374014, 0.288375125, 0.298376292, 0.308377403, 0.318378556, 0.328379667, 0.338380819, 0.348381931, 0.358383097, 0.368384208, 0.378385361, 0.388386486, 0.398387653, 0.40838875, 0.418389903, 0.428391014, 0.438392194, 0.448393319, 0.458394444, 0.468395556, 0.478396722, 0.488397833, 0.498398986, 0.508400111, 0.518401278, 0.528402389, 0.538403542, 0.548404653, 0.558405847, 0.568406944, 0.578408097, 0.588409181, 0.598410347, 0.608411472, 0.618412611, 0.628413722, 0.638414958, 0.648416, 0.658417167, 0.668418278, 0.678419431, 0.688420556, 0.698421708, 0.708422819, 0.718423972, 0.728425097, 0.738426319, 0.748427403, 0.758428514, 0.768429625, 0.778430792, 0.788431917, 0.798433097, 0.808434181, 0.818435361, 0.828436444, 0.838437625, 0.848438722, 0.858439875, 0.868440986, 0.878442167, 0.888443264, 0.898444417, 0.908445528, 0.918446694, 0.928447806, 0.938448958, 0.948450083, 0.958451236, 0.968452361, 0.978453542, 0.988454639, 0.998455792, 1.008456958, 1.018458069] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:45.810" endtime="20201112 10:16:45.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.805" endtime="20201112 10:16:45.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.814" endtime="20201112 10:16:45.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:45.818" endtime="20201112 10:16:45.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.816" endtime="20201112 10:16:45.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.813" endtime="20201112 10:16:45.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.312" endtime="20201112 10:16:45.838"></status>
</kw>
<msg timestamp="20201112 10:16:45.839" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.847" endtime="20201112 10:16:47.964"></status>
</kw>
<msg timestamp="20201112 10:16:47.966" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 41825352, 'wakeups': [41835396, 41845396, 41855396, 41865396, 41875396...</msg>
<status status="PASS" starttime="20201112 10:16:45.845" endtime="20201112 10:16:47.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.972" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 41825352, 'wakeups': [41835396, 41845396, 41855396, 41865396, 41875396...</msg>
<status status="PASS" starttime="20201112 10:16:47.968" endtime="20201112 10:16:47.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.974" endtime="20201112 10:16:47.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.842" endtime="20201112 10:16:47.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.840" endtime="20201112 10:16:47.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:47.980" level="INFO">${RESULT} = {'start-time': 41825352, 'timer-interval': 10000, 'timer-count': 5, 'wakeups': [41835396, 41845396, 41855396, 41865396, 41875396, 41885396, 41895396, 41905396, 41915396, 41925396, 41935396, 41945396, ...</msg>
<status status="PASS" starttime="20201112 10:16:47.978" endtime="20201112 10:16:47.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.984" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:47.983" endtime="20201112 10:16:47.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.986" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:47.985" endtime="20201112 10:16:47.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.981" endtime="20201112 10:16:47.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.991" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:47.990" endtime="20201112 10:16:47.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.993" level="INFO">VALUE: 41825352</msg>
<status status="PASS" starttime="20201112 10:16:47.992" endtime="20201112 10:16:47.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.988" endtime="20201112 10:16:47.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.998" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:47.997" endtime="20201112 10:16:47.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.000" level="INFO">VALUE: [41835396, 41845396, 41855396, 41865396, 41875396, 41885396, 41895396, 41905396, 41915396, 41925396, 41935396, 41945396, 41955396, 41965396, 41975396, 41985396, 41995396, 42005396, 42015396, 42025396, 42035396, 42045396, 42055396, 42065396, 42075396, 42085396, 42095396, 42105396, 42115396, 42125396, 42135396, 42145396, 42155396, 42165396, 42175396, 42185396, 42195396, 42205396, 42215396, 42225396, 42235396, 42245396, 42255396, 42265396, 42275396, 42285396, 42295396, 42305396, 42315396, 42325396, 42335396, 42345396, 42355396, 42365396, 42375396, 42385396, 42395396, 42405396, 42415396, 42425396, 42435396, 42445396, 42455396, 42465396, 42475396, 42485396, 42495396, 42505396, 42515396, 42525396, 42535396, 42545396, 42555396, 42565396, 42575396, 42585396, 42595396, 42605396, 42615396, 42625396, 42635396, 42645396, 42655396, 42665396, 42675396, 42685396, 42695396, 42705396, 42715396, 42725396, 42735396, 42745396, 42755396, 42765396, 42775396, 42785396, 42795396, 42805396, 42815396, 42825396]</msg>
<status status="PASS" starttime="20201112 10:16:47.999" endtime="20201112 10:16:48.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.994" endtime="20201112 10:16:48.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.007" endtime="20201112 10:16:48.298"></status>
</kw>
<msg timestamp="20201112 10:16:48.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018267375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028312375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:48.006" endtime="20201112 10:16:48.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018267375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028312375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:48.302" endtime="20201112 10:16:48.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.309" endtime="20201112 10:16:48.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.003" endtime="20201112 10:16:48.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.002" endtime="20201112 10:16:48.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:48.335" level="INFO">${RESULT} = {'source_diff': [0, 0.010045000000000002, 0.010001083000000001, 0.010001111, 0.010001166999999998, 0.010001153000000006, 0.010001138999999992, 0.010001097, 0.010001167000000005, 0.010001152, 0.0100011...</msg>
<status status="PASS" starttime="20201112 10:16:48.312" endtime="20201112 10:16:48.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.344" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:48.343" endtime="20201112 10:16:48.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.346" level="INFO">VALUE: 0.018267375</msg>
<status status="PASS" starttime="20201112 10:16:48.345" endtime="20201112 10:16:48.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.340" endtime="20201112 10:16:48.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.351" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:48.350" endtime="20201112 10:16:48.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.353" level="INFO">VALUE: [0.028312375, 0.038313458, 0.048314569, 0.058315736, 0.068316889, 0.078318028, 0.088319125, 0.098320292, 0.108321444, 0.118322639, 0.128323681, 0.138324903, 0.148325972, 0.158327125, 0.168328264, 0.178329458, 0.188330542, 0.198331694, 0.208332806, 0.218333972, 0.228335083, 0.23833625, 0.248337375, 0.258338569, 0.268339653, 0.278340861, 0.288341931, 0.298343097, 0.30834425, 0.318345389, 0.328346472, 0.338347639, 0.34834875, 0.358349958, 0.368351, 0.378352181, 0.388353264, 0.398354431, 0.408355542, 0.418356694, 0.428357806, 0.438358972, 0.448360097, 0.458361236, 0.468362347, 0.478363528, 0.488364625, 0.498365778, 0.508366944, 0.518368056, 0.528369222, 0.538370333, 0.548371444, 0.558372611, 0.568373708, 0.578374875, 0.588375972, 0.598377153, 0.60837825, 0.618379417, 0.628380514, 0.638381681, 0.648382792, 0.658383944, 0.668385056, 0.678386222, 0.688387347, 0.6983885, 0.708389597, 0.718390778, 0.728391889, 0.738393028, 0.748394139, 0.758395306, 0.768396417, 0.778397611, 0.788398681, 0.798399847, 0.808400958, 0.818402125, 0.82840325, 0.838404389, 0.8484055, 0.858406653, 0.868407778, 0.878408931, 0.888410042, 0.898411222, 0.908412375, 0.918413472, 0.928414583, 0.938415778, 0.948416875, 0.958418028, 0.968419125, 0.978420306, 0.988421403, 0.998422569, 1.008423681, 1.018424847] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:48.352" endtime="20201112 10:16:48.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.347" endtime="20201112 10:16:48.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.356" endtime="20201112 10:16:48.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:48.360" endtime="20201112 10:16:48.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.358" endtime="20201112 10:16:48.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.355" endtime="20201112 10:16:48.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.839" endtime="20201112 10:16:48.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.753" endtime="20201112 10:16:48.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.752" endtime="20201112 10:16:48.381"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:48.383" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.391" endtime="20201112 10:16:50.493"></status>
</kw>
<msg timestamp="20201112 10:16:50.493" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44370321, 'wakeups': [44380377, 44390376, 44400376, 44410376, 44420376...</msg>
<status status="PASS" starttime="20201112 10:16:48.390" endtime="20201112 10:16:50.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.496" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44370321, 'wakeups': [44380377, 44390376, 44400376, 44410376, 44420376...</msg>
<status status="PASS" starttime="20201112 10:16:50.494" endtime="20201112 10:16:50.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.497" endtime="20201112 10:16:50.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.387" endtime="20201112 10:16:50.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.385" endtime="20201112 10:16:50.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:50.502" level="INFO">${RESULT} = {'start-time': 44370321, 'timer-interval': 10000, 'timer-count': 6, 'wakeups': [44380377, 44390376, 44400376, 44410376, 44420376, 44430376, 44440376, 44450376, 44460376, 44470376, 44480376, 44490376, ...</msg>
<status status="PASS" starttime="20201112 10:16:50.500" endtime="20201112 10:16:50.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.507" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:50.505" endtime="20201112 10:16:50.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.509" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:50.508" endtime="20201112 10:16:50.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.503" endtime="20201112 10:16:50.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.515" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:50.513" endtime="20201112 10:16:50.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.517" level="INFO">VALUE: 44370321</msg>
<status status="PASS" starttime="20201112 10:16:50.516" endtime="20201112 10:16:50.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.510" endtime="20201112 10:16:50.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.522" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:50.521" endtime="20201112 10:16:50.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.524" level="INFO">VALUE: [44380377, 44390376, 44400376, 44410376, 44420376, 44430376, 44440376, 44450376, 44460376, 44470376, 44480376, 44490376, 44500376, 44510376, 44520376, 44530376, 44540376, 44550376, 44560376, 44570376, 44580376, 44590376, 44600376, 44610376, 44620376, 44630376, 44640376, 44650376, 44660376, 44670376, 44680376, 44690376, 44700376, 44710376, 44720376, 44730376, 44740376, 44750376, 44760376, 44770376, 44780376, 44790376, 44800376, 44810376, 44820376, 44830376, 44840376, 44850376, 44860376, 44870376, 44880376, 44890376, 44900376, 44910376, 44920376, 44930376, 44940376, 44950376, 44960376, 44970376, 44980376, 44990376, 45000376, 45010376, 45020376, 45030376, 45040376, 45050376, 45060376, 45070376, 45080376, 45090376, 45100376, 45110376, 45120376, 45130376, 45140376, 45150376, 45160376, 45170376, 45180376, 45190376, 45200376, 45210376, 45220376, 45230376, 45240376, 45250376, 45260376, 45270376, 45280376, 45290376, 45300376, 45310376, 45320376, 45330376, 45340376, 45350376, 45360376, 45370376]</msg>
<status status="PASS" starttime="20201112 10:16:50.523" endtime="20201112 10:16:50.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.518" endtime="20201112 10:16:50.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.531" endtime="20201112 10:16:50.822"></status>
</kw>
<msg timestamp="20201112 10:16:50.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031100736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:50.530" endtime="20201112 10:16:50.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031100736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:50.825" endtime="20201112 10:16:50.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.833" endtime="20201112 10:16:50.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.527" endtime="20201112 10:16:50.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.525" endtime="20201112 10:16:50.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:50.859" level="INFO">${RESULT} = {'source_diff': [0, 0.010058194, 0.010000041999999997, 0.010001125, 0.010001153000000006, 0.010001110999999993, 0.010001179999999998, 0.010001111000000007, 0.010001152999999999, 0.010001110999999993, ...</msg>
<status status="PASS" starttime="20201112 10:16:50.836" endtime="20201112 10:16:50.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.864" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:50.863" endtime="20201112 10:16:50.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.866" level="INFO">VALUE: 0.021042542</msg>
<status status="PASS" starttime="20201112 10:16:50.865" endtime="20201112 10:16:50.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.860" endtime="20201112 10:16:50.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.871" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:50.870" endtime="20201112 10:16:50.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.874" level="INFO">VALUE: [0.031100736, 0.041100778, 0.051101903, 0.061103056, 0.071104167, 0.081105347, 0.091106458, 0.101107611, 0.111108722, 0.121109889, 0.131111, 0.141112181, 0.151113306, 0.161114444, 0.171115569, 0.181116736, 0.191117847, 0.201119014, 0.211120153, 0.221121292, 0.231122417, 0.241123597, 0.251124694, 0.261125903, 0.271126972, 0.281128139, 0.29112925, 0.301130417, 0.311131528, 0.321132694, 0.331133819, 0.341134986, 0.351136111, 0.361137264, 0.371138375, 0.381139542, 0.391140667, 0.401141819, 0.411142944, 0.421144125, 0.43114525, 0.441146389, 0.4511475, 0.461148681, 0.471149792, 0.481150958, 0.491152069, 0.501153236, 0.511154347, 0.521155514, 0.531156653, 0.541157792, 0.551158917, 0.561160097, 0.571161208, 0.581162417, 0.591163486, 0.601164653, 0.611165819, 0.621166917, 0.631168028, 0.641169194, 0.651170292, 0.661171472, 0.671172569, 0.681173736, 0.691174833, 0.701176028, 0.711177111, 0.721178292, 0.731179403, 0.741180556, 0.751181653, 0.761182833, 0.771184014, 0.781185097, 0.791186222, 0.801187361, 0.811188542, 0.821189639, 0.831190792, 0.841191972, 0.851193042, 0.86119425, 0.871195347, 0.881196458, 0.891197597, 0.901198736, 0.911199861, 0.921201014, 0.931202139, 0.941203292, 0.951204403, 0.961205569, 0.971206694, 0.981207833, 0.991208944, 1.001210111, 1.011211222, 1.021212389] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:50.873" endtime="20201112 10:16:50.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.867" endtime="20201112 10:16:50.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.878" endtime="20201112 10:16:50.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:50.881" endtime="20201112 10:16:50.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.879" endtime="20201112 10:16:50.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.876" endtime="20201112 10:16:50.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.384" endtime="20201112 10:16:50.902"></status>
</kw>
<msg timestamp="20201112 10:16:50.902" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.910" endtime="20201112 10:16:53.009"></status>
</kw>
<msg timestamp="20201112 10:16:53.010" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46888555, 'wakeups': [46898611, 46908610, 46918610, 46928610, 46938610...</msg>
<status status="PASS" starttime="20201112 10:16:50.908" endtime="20201112 10:16:53.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.012" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46888555, 'wakeups': [46898611, 46908610, 46918610, 46928610, 46938610...</msg>
<status status="PASS" starttime="20201112 10:16:53.011" endtime="20201112 10:16:53.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.013" endtime="20201112 10:16:53.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.906" endtime="20201112 10:16:53.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.904" endtime="20201112 10:16:53.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:53.019" level="INFO">${RESULT} = {'start-time': 46888555, 'timer-interval': 10000, 'timer-count': 6, 'wakeups': [46898611, 46908610, 46918610, 46928610, 46938610, 46948610, 46958610, 46968610, 46978610, 46988610, 46998610, 47008610, ...</msg>
<status status="PASS" starttime="20201112 10:16:53.017" endtime="20201112 10:16:53.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.023" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:53.022" endtime="20201112 10:16:53.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.025" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:53.024" endtime="20201112 10:16:53.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.019" endtime="20201112 10:16:53.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.030" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:53.029" endtime="20201112 10:16:53.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.032" level="INFO">VALUE: 46888555</msg>
<status status="PASS" starttime="20201112 10:16:53.031" endtime="20201112 10:16:53.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.026" endtime="20201112 10:16:53.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.036" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:53.035" endtime="20201112 10:16:53.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.039" level="INFO">VALUE: [46898611, 46908610, 46918610, 46928610, 46938610, 46948610, 46958610, 46968610, 46978610, 46988610, 46998610, 47008610, 47018610, 47028610, 47038610, 47048610, 47058610, 47068610, 47078610, 47088610, 47098610, 47108610, 47118610, 47128610, 47138610, 47148610, 47158610, 47168610, 47178610, 47188610, 47198610, 47208610, 47218610, 47228610, 47238610, 47248610, 47258610, 47268610, 47278610, 47288610, 47298610, 47308610, 47318610, 47328610, 47338610, 47348610, 47358610, 47368610, 47378610, 47388610, 47398610, 47408610, 47418610, 47428610, 47438610, 47448610, 47458610, 47468610, 47478610, 47488610, 47498610, 47508610, 47518610, 47528610, 47538610, 47548610, 47558610, 47568610, 47578610, 47588610, 47598610, 47608610, 47618610, 47628610, 47638610, 47648610, 47658610, 47668610, 47678610, 47688610, 47698610, 47708610, 47718610, 47728610, 47738610, 47748610, 47758610, 47768610, 47778610, 47788610, 47798610, 47808610, 47818610, 47828610, 47838610, 47848610, 47858610, 47868610, 47878610, 47888610]</msg>
<status status="PASS" starttime="20201112 10:16:53.038" endtime="20201112 10:16:53.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.033" endtime="20201112 10:16:53.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.046" endtime="20201112 10:16:53.340"></status>
</kw>
<msg timestamp="20201112 10:16:53.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028197181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:53.045" endtime="20201112 10:16:53.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028197181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:53.343" endtime="20201112 10:16:53.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.351" endtime="20201112 10:16:53.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.042" endtime="20201112 10:16:53.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.040" endtime="20201112 10:16:53.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:53.376" level="INFO">${RESULT} = {'source_diff': [0, 0.010057875, 0.010000055, 0.010001111, 0.010001180999999998, 0.010001110999999993, 0.010001153000000013, 0.010001110999999993, 0.010001166000000006, 0.010001111999999993, 0.0100011...</msg>
<status status="PASS" starttime="20201112 10:16:53.354" endtime="20201112 10:16:53.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.381" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:53.380" endtime="20201112 10:16:53.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.383" level="INFO">VALUE: 0.018139306</msg>
<status status="PASS" starttime="20201112 10:16:53.382" endtime="20201112 10:16:53.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.377" endtime="20201112 10:16:53.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.388" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:53.387" endtime="20201112 10:16:53.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.390" level="INFO">VALUE: [0.028197181, 0.038197236, 0.048198347, 0.058199528, 0.068200639, 0.078201792, 0.088202903, 0.098204069, 0.108205181, 0.118206347, 0.128207458, 0.138208625, 0.148209764, 0.158210903, 0.168212042, 0.178213194, 0.188214319, 0.198215472, 0.208216583, 0.218217764, 0.228218861, 0.238220028, 0.248221153, 0.258222306, 0.268223431, 0.278224597, 0.288225708, 0.298226889, 0.308227986, 0.318229153, 0.328230278, 0.338231444, 0.348232556, 0.358233722, 0.368234833, 0.378236014, 0.388237139, 0.398238278, 0.408239403, 0.418240569, 0.42824175, 0.438242847, 0.448243986, 0.458245125, 0.468246264, 0.478247417, 0.488248542, 0.498249694, 0.508250806, 0.518251986, 0.528253111, 0.538254278, 0.548255375, 0.558256556, 0.568257681, 0.578258819, 0.588259958, 0.598261111, 0.608262208, 0.618263375, 0.628264486, 0.638265653, 0.648266764, 0.658267903, 0.668269042, 0.678270222, 0.688271292, 0.698272458, 0.708273611, 0.718274708, 0.728275819, 0.738276986, 0.748278097, 0.758279264, 0.768280361, 0.778281528, 0.788282639, 0.798283806, 0.808284972, 0.818286083, 0.828287194, 0.838288375, 0.848289458, 0.858290681, 0.868291722, 0.878292875, 0.888294, 0.898295167, 0.908296306, 0.918297431, 0.928298528, 0.938299722, 0.948300806, 0.958301972, 0.968303083, 0.978304236, 0.988305347, 0.998306514, 1.008307625, 1.018308778] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:53.389" endtime="20201112 10:16:53.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.384" endtime="20201112 10:16:53.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.393" endtime="20201112 10:16:53.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:53.397" endtime="20201112 10:16:53.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.395" endtime="20201112 10:16:53.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.392" endtime="20201112 10:16:53.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.903" endtime="20201112 10:16:53.418"></status>
</kw>
<msg timestamp="20201112 10:16:53.418" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.426" endtime="20201112 10:16:55.544"></status>
</kw>
<msg timestamp="20201112 10:16:55.545" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49405195, 'wakeups': [49415251, 49425250, 49435250, 49445250, 49455250...</msg>
<status status="PASS" starttime="20201112 10:16:53.424" endtime="20201112 10:16:55.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.550" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49405195, 'wakeups': [49415251, 49425250, 49435250, 49445250, 49455250...</msg>
<status status="PASS" starttime="20201112 10:16:55.548" endtime="20201112 10:16:55.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.551" endtime="20201112 10:16:55.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.422" endtime="20201112 10:16:55.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.420" endtime="20201112 10:16:55.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:55.556" level="INFO">${RESULT} = {'start-time': 49405195, 'timer-interval': 10000, 'timer-count': 6, 'wakeups': [49415251, 49425250, 49435250, 49445250, 49455250, 49465250, 49475250, 49485250, 49495250, 49505250, 49515250, 49525250, ...</msg>
<status status="PASS" starttime="20201112 10:16:55.554" endtime="20201112 10:16:55.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.560" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:55.559" endtime="20201112 10:16:55.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.562" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:55.561" endtime="20201112 10:16:55.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.557" endtime="20201112 10:16:55.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.567" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:55.566" endtime="20201112 10:16:55.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.569" level="INFO">VALUE: 49405195</msg>
<status status="PASS" starttime="20201112 10:16:55.568" endtime="20201112 10:16:55.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.563" endtime="20201112 10:16:55.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.574" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:55.573" endtime="20201112 10:16:55.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.576" level="INFO">VALUE: [49415251, 49425250, 49435250, 49445250, 49455250, 49465250, 49475250, 49485250, 49495250, 49505250, 49515250, 49525250, 49535250, 49545250, 49555250, 49565250, 49575250, 49585250, 49595250, 49605250, 49615250, 49625250, 49635250, 49645250, 49655250, 49665250, 49675250, 49685250, 49695250, 49705250, 49715250, 49725250, 49735250, 49745250, 49755250, 49765250, 49775250, 49785250, 49795250, 49805250, 49815250, 49825250, 49835250, 49845250, 49855250, 49865250, 49875250, 49885250, 49895250, 49905250, 49915250, 49925250, 49935250, 49945250, 49955250, 49965250, 49975250, 49985250, 49995250, 50005250, 50015250, 50025250, 50035250, 50045250, 50055250, 50065250, 50075250, 50085250, 50095250, 50105250, 50115250, 50125250, 50135250, 50145250, 50155250, 50165250, 50175250, 50185250, 50195250, 50205250, 50215250, 50225250, 50235250, 50245250, 50255250, 50265250, 50275250, 50285250, 50295250, 50305250, 50315250, 50325250, 50335250, 50345250, 50355250, 50365250, 50375250, 50385250, 50395250, 50405250]</msg>
<status status="PASS" starttime="20201112 10:16:55.575" endtime="20201112 10:16:55.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.570" endtime="20201112 10:16:55.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.583" endtime="20201112 10:16:55.875"></status>
</kw>
<msg timestamp="20201112 10:16:55.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019013153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029071125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:55.582" endtime="20201112 10:16:55.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019013153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029071125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:55.879" endtime="20201112 10:16:55.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.886" endtime="20201112 10:16:55.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.579" endtime="20201112 10:16:55.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.577" endtime="20201112 10:16:55.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:55.913" level="INFO">${RESULT} = {'source_diff': [0, 0.010057971999999998, 0.010000013999999998, 0.010001153000000006, 0.010001125, 0.010001125, 0.010001152, 0.010001125, 0.010001152999999999, 0.010001110999999993, 0.0100011670000000...</msg>
<status status="PASS" starttime="20201112 10:16:55.889" endtime="20201112 10:16:55.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.918" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:55.917" endtime="20201112 10:16:55.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.920" level="INFO">VALUE: 0.019013153</msg>
<status status="PASS" starttime="20201112 10:16:55.919" endtime="20201112 10:16:55.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.914" endtime="20201112 10:16:55.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.925" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:55.924" endtime="20201112 10:16:55.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.927" level="INFO">VALUE: [0.029071125, 0.039071139, 0.049072292, 0.059073417, 0.069074542, 0.079075694, 0.089076819, 0.099077972, 0.109079083, 0.11908025, 0.129081375, 0.139082542, 0.149083681, 0.159084806, 0.169085972, 0.179087097, 0.189088222, 0.199089375, 0.2090905, 0.219091653, 0.229092764, 0.239093931, 0.249095056, 0.259096208, 0.269097347, 0.2790985, 0.289099653, 0.299100792, 0.309101889, 0.319103056, 0.329104167, 0.339105333, 0.349106444, 0.359107597, 0.369108722, 0.379109875, 0.389111042, 0.399112194, 0.40911325, 0.419114417, 0.429115542, 0.439116694, 0.449117806, 0.459118958, 0.469120069, 0.47912125, 0.489122431, 0.4991235, 0.509124625, 0.519125778, 0.529126889, 0.539128069, 0.549129181, 0.559130319, 0.569131444, 0.579132597, 0.589133708, 0.599134875, 0.609135986, 0.619137167, 0.629138306, 0.639139417, 0.649140542, 0.659141694, 0.669142833, 0.679143972, 0.689145083, 0.69914625, 0.709147375, 0.719148514, 0.729149639, 0.739150792, 0.749151903, 0.759153069, 0.769154194, 0.779155347, 0.789156458, 0.799157611, 0.809158736, 0.819159903, 0.829161, 0.839162181, 0.849163278, 0.859164444, 0.869165569, 0.879166708, 0.889167847, 0.899168986, 0.909170097, 0.919171333, 0.929172389, 0.939173542, 0.949174667, 0.959175819, 0.969176931, 0.979178097, 0.989179208, 0.999180403, 1.009181472, 1.019182653] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:55.926" endtime="20201112 10:16:55.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.921" endtime="20201112 10:16:55.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.930" endtime="20201112 10:16:55.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:55.934" endtime="20201112 10:16:55.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.932" endtime="20201112 10:16:55.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.929" endtime="20201112 10:16:55.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.418" endtime="20201112 10:16:55.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.382" endtime="20201112 10:16:55.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.381" endtime="20201112 10:16:55.955"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:55.958" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.965" endtime="20201112 10:16:58.083"></status>
</kw>
<msg timestamp="20201112 10:16:58.084" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51944009, 'wakeups': [51954078, 51964076, 51974076, 51984076, 51994076...</msg>
<status status="PASS" starttime="20201112 10:16:55.964" endtime="20201112 10:16:58.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.090" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51944009, 'wakeups': [51954078, 51964076, 51974076, 51984076, 51994076...</msg>
<status status="PASS" starttime="20201112 10:16:58.087" endtime="20201112 10:16:58.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:58.092" endtime="20201112 10:16:58.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.961" endtime="20201112 10:16:58.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.959" endtime="20201112 10:16:58.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:58.098" level="INFO">${RESULT} = {'start-time': 51944009, 'timer-interval': 10000, 'timer-count': 7, 'wakeups': [51954078, 51964076, 51974076, 51984076, 51994076, 52004076, 52014076, 52024076, 52034076, 52044076, 52054076, 52064076, ...</msg>
<status status="PASS" starttime="20201112 10:16:58.096" endtime="20201112 10:16:58.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.102" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:58.101" endtime="20201112 10:16:58.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.104" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:58.103" endtime="20201112 10:16:58.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.099" endtime="20201112 10:16:58.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.110" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:58.109" endtime="20201112 10:16:58.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.112" level="INFO">VALUE: 51944009</msg>
<status status="PASS" starttime="20201112 10:16:58.111" endtime="20201112 10:16:58.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.106" endtime="20201112 10:16:58.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.117" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:58.116" endtime="20201112 10:16:58.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.119" level="INFO">VALUE: [51954078, 51964076, 51974076, 51984076, 51994076, 52004076, 52014076, 52024076, 52034076, 52044076, 52054076, 52064076, 52074076, 52084076, 52094076, 52104076, 52114076, 52124076, 52134076, 52144076, 52154076, 52164076, 52174076, 52184076, 52194076, 52204076, 52214076, 52224076, 52234076, 52244076, 52254076, 52264076, 52274076, 52284076, 52294076, 52304076, 52314076, 52324076, 52334076, 52344076, 52354076, 52364076, 52374076, 52384076, 52394076, 52404076, 52414076, 52424076, 52434076, 52444076, 52454076, 52464076, 52474076, 52484076, 52494076, 52504076, 52514076, 52524076, 52534076, 52544076, 52554076, 52564076, 52574076, 52584076, 52594076, 52604076, 52614076, 52624076, 52634076, 52644076, 52654076, 52664076, 52674076, 52684076, 52694076, 52704076, 52714076, 52724076, 52734076, 52744076, 52754076, 52764076, 52774076, 52784076, 52794076, 52804076, 52814076, 52824076, 52834076, 52844076, 52854076, 52864076, 52874076, 52884076, 52894076, 52904076, 52914076, 52924076, 52934076, 52944076]</msg>
<status status="PASS" starttime="20201112 10:16:58.118" endtime="20201112 10:16:58.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.114" endtime="20201112 10:16:58.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:58.127" endtime="20201112 10:16:58.418"></status>
</kw>
<msg timestamp="20201112 10:16:58.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020852194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030922264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:58.125" endtime="20201112 10:16:58.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020852194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030922264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:58.422" endtime="20201112 10:16:58.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:58.429" endtime="20201112 10:16:58.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.122" endtime="20201112 10:16:58.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.121" endtime="20201112 10:16:58.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:58.455" level="INFO">${RESULT} = {'source_diff': [0, 0.01007007, 0.009999263999999997, 0.010001083000000001, 0.010001180999999998, 0.010001097000000007, 0.010001166999999991, 0.010001152, 0.010001139000000006, 0.010001110999999993, 0...</msg>
<status status="PASS" starttime="20201112 10:16:58.433" endtime="20201112 10:16:58.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.459" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:58.458" endtime="20201112 10:16:58.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.461" level="INFO">VALUE: 0.020852194</msg>
<status status="PASS" starttime="20201112 10:16:58.461" endtime="20201112 10:16:58.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.456" endtime="20201112 10:16:58.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.468" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:58.466" endtime="20201112 10:16:58.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:58.470" level="INFO">VALUE: [0.030922264, 0.040921528, 0.050922611, 0.060923792, 0.070924889, 0.080926056, 0.090927208, 0.100928347, 0.110929458, 0.120930611, 0.130931736, 0.140932903, 0.150934014, 0.160935181, 0.170936292, 0.180937444, 0.190938583, 0.200939736, 0.210940847, 0.220942014, 0.230943125, 0.240944347, 0.250945403, 0.260946569, 0.270947694, 0.280948875, 0.290949972, 0.300951139, 0.31095225, 0.320953431, 0.330954556, 0.340955694, 0.350956819, 0.360957986, 0.370959097, 0.380960278, 0.390961375, 0.400962542, 0.410963667, 0.420964833, 0.430965944, 0.440967111, 0.450968222, 0.460969389, 0.470970514, 0.480971681, 0.490972792, 0.500973958, 0.510975069, 0.520976236, 0.530977361, 0.540978569, 0.550979639, 0.560980806, 0.570981917, 0.580983097, 0.590984194, 0.600985361, 0.610986486, 0.620987708, 0.63098875, 0.640989931, 0.650991014, 0.660992181, 0.670993292, 0.680994486, 0.690995556, 0.700996722, 0.710997833, 0.720999, 0.731000097, 0.74100125, 0.751002361, 0.761003542, 0.771004639, 0.781005792, 0.791006917, 0.801008069, 0.811009181, 0.821010361, 0.831011444, 0.841012611, 0.851013722, 0.861014931, 0.871015986, 0.881017181, 0.891018264, 0.901019417, 0.911020528, 0.921021694, 0.931022806, 0.941023958, 0.951025069, 0.961026264, 0.971027361, 0.981028528, 0.991029625, 1.001030778, 1.011031889, 1.021033042] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:58.469" endtime="20201112 10:16:58.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.463" endtime="20201112 10:16:58.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:58.473" endtime="20201112 10:16:58.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:58.477" endtime="20201112 10:16:58.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.475" endtime="20201112 10:16:58.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.472" endtime="20201112 10:16:58.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.958" endtime="20201112 10:16:58.497"></status>
</kw>
<msg timestamp="20201112 10:16:58.498" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:58.506" endtime="20201112 10:17:00.623"></status>
</kw>
<msg timestamp="20201112 10:17:00.625" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54484126, 'wakeups': [54494195, 54504193, 54514193, 54524193, 54534193...</msg>
<status status="PASS" starttime="20201112 10:16:58.504" endtime="20201112 10:17:00.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.630" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54484126, 'wakeups': [54494195, 54504193, 54514193, 54524193, 54534193...</msg>
<status status="PASS" starttime="20201112 10:17:00.627" endtime="20201112 10:17:00.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:00.633" endtime="20201112 10:17:00.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.501" endtime="20201112 10:17:00.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.500" endtime="20201112 10:17:00.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:00.643" level="INFO">${RESULT} = {'start-time': 54484126, 'timer-interval': 10000, 'timer-count': 7, 'wakeups': [54494195, 54504193, 54514193, 54524193, 54534193, 54544193, 54554193, 54564193, 54574193, 54584193, 54594193, 54604193, ...</msg>
<status status="PASS" starttime="20201112 10:17:00.639" endtime="20201112 10:17:00.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.650" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:00.649" endtime="20201112 10:17:00.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.652" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:00.651" endtime="20201112 10:17:00.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.645" endtime="20201112 10:17:00.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.656" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:00.655" endtime="20201112 10:17:00.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.658" level="INFO">VALUE: 54484126</msg>
<status status="PASS" starttime="20201112 10:17:00.658" endtime="20201112 10:17:00.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.653" endtime="20201112 10:17:00.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.663" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:00.662" endtime="20201112 10:17:00.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.666" level="INFO">VALUE: [54494195, 54504193, 54514193, 54524193, 54534193, 54544193, 54554193, 54564193, 54574193, 54584193, 54594193, 54604193, 54614193, 54624193, 54634193, 54644193, 54654193, 54664193, 54674193, 54684193, 54694193, 54704193, 54714193, 54724193, 54734193, 54744193, 54754193, 54764193, 54774193, 54784193, 54794193, 54804193, 54814193, 54824193, 54834193, 54844193, 54854193, 54864193, 54874193, 54884193, 54894193, 54904193, 54914193, 54924193, 54934193, 54944193, 54954193, 54964193, 54974193, 54984193, 54994193, 55004193, 55014193, 55024193, 55034193, 55044193, 55054193, 55064193, 55074193, 55084193, 55094193, 55104193, 55114193, 55124193, 55134193, 55144193, 55154193, 55164193, 55174193, 55184193, 55194193, 55204193, 55214193, 55224193, 55234193, 55244193, 55254193, 55264193, 55274193, 55284193, 55294193, 55304193, 55314193, 55324193, 55334193, 55344193, 55354193, 55364193, 55374193, 55384193, 55394193, 55404193, 55414193, 55424193, 55434193, 55444193, 55454193, 55464193, 55474193, 55484193]</msg>
<status status="PASS" starttime="20201112 10:17:00.665" endtime="20201112 10:17:00.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.660" endtime="20201112 10:17:00.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:00.674" endtime="20201112 10:17:00.966"></status>
</kw>
<msg timestamp="20201112 10:17:00.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018103875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028173833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:00.672" endtime="20201112 10:17:00.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018103875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028173833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:00.970" endtime="20201112 10:17:00.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:00.977" endtime="20201112 10:17:00.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.669" endtime="20201112 10:17:00.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.667" endtime="20201112 10:17:00.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:01.004" level="INFO">${RESULT} = {'source_diff': [0, 0.010069958, 0.009999181, 0.010001125, 0.010001167000000005, 0.010001096999999994, 0.010001166000000006, 0.010001152999999999, 0.010001125, 0.010001139000000006, 0.0100011389999999...</msg>
<status status="PASS" starttime="20201112 10:17:00.981" endtime="20201112 10:17:01.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:01.008" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:01.007" endtime="20201112 10:17:01.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:01.010" level="INFO">VALUE: 0.018103875</msg>
<status status="PASS" starttime="20201112 10:17:01.009" endtime="20201112 10:17:01.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:01.005" endtime="20201112 10:17:01.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:01.016" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:01.014" endtime="20201112 10:17:01.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:01.018" level="INFO">VALUE: [0.028173833, 0.038173014, 0.048174139, 0.058175306, 0.068176403, 0.078177569, 0.088178722, 0.098179847, 0.108180986, 0.118182125, 0.12818325, 0.138184444, 0.148185528, 0.158186694, 0.168187819, 0.178188972, 0.188190097, 0.198191264, 0.208192375, 0.218193556, 0.228194653, 0.238195819, 0.248196944, 0.258198097, 0.268199208, 0.278200361, 0.288201486, 0.298202625, 0.308203736, 0.318204889, 0.328206014, 0.338207181, 0.348208292, 0.358209458, 0.368210556, 0.378211708, 0.388212847, 0.398213986, 0.408215139, 0.41821625, 0.428217361, 0.438218528, 0.448219681, 0.458220806, 0.468221944, 0.478223069, 0.488224194, 0.498225347, 0.508226458, 0.518227611, 0.528228736, 0.538229889, 0.548231, 0.558232194, 0.568233264, 0.578234444, 0.588235556, 0.598236708, 0.608237847, 0.618238986, 0.628240083, 0.638241264, 0.648242403, 0.658243569, 0.668244639, 0.678245792, 0.688246903, 0.698248069, 0.708249222, 0.718250347, 0.728251458, 0.738252611, 0.748253778, 0.758254889, 0.768256, 0.778257167, 0.788258306, 0.798259431, 0.808260542, 0.818261708, 0.828262833, 0.838264028, 0.848265111, 0.858266264, 0.868267361, 0.878268542, 0.888269653, 0.898270819, 0.908271972, 0.918273069, 0.928274194, 0.938275347, 0.948276472, 0.958277625, 0.968278819, 0.978279917, 0.988281014, 0.998282167, 1.008283278, 1.018284458] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:01.017" endtime="20201112 10:17:01.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:01.012" endtime="20201112 10:17:01.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:01.021" endtime="20201112 10:17:01.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:01.024" endtime="20201112 10:17:01.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:01.023" endtime="20201112 10:17:01.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:01.019" endtime="20201112 10:17:01.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:58.498" endtime="20201112 10:17:01.045"></status>
</kw>
<msg timestamp="20201112 10:17:01.046" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:01.054" endtime="20201112 10:17:03.172"></status>
</kw>
<msg timestamp="20201112 10:17:03.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57032944, 'wakeups': [57043013, 57053011, 57063011, 57073011, 57083011...</msg>
<status status="PASS" starttime="20201112 10:17:01.052" endtime="20201112 10:17:03.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.179" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57032944, 'wakeups': [57043013, 57053011, 57063011, 57073011, 57083011...</msg>
<status status="PASS" starttime="20201112 10:17:03.176" endtime="20201112 10:17:03.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.182" endtime="20201112 10:17:03.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:01.049" endtime="20201112 10:17:03.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:01.048" endtime="20201112 10:17:03.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:03.192" level="INFO">${RESULT} = {'start-time': 57032944, 'timer-interval': 10000, 'timer-count': 7, 'wakeups': [57043013, 57053011, 57063011, 57073011, 57083011, 57093011, 57103011, 57113011, 57123011, 57133011, 57143011, 57153011, ...</msg>
<status status="PASS" starttime="20201112 10:17:03.188" endtime="20201112 10:17:03.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.201" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:03.199" endtime="20201112 10:17:03.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.203" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:03.202" endtime="20201112 10:17:03.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.194" endtime="20201112 10:17:03.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.208" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:03.207" endtime="20201112 10:17:03.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.210" level="INFO">VALUE: 57032944</msg>
<status status="PASS" starttime="20201112 10:17:03.209" endtime="20201112 10:17:03.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.205" endtime="20201112 10:17:03.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.215" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:03.214" endtime="20201112 10:17:03.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.217" level="INFO">VALUE: [57043013, 57053011, 57063011, 57073011, 57083011, 57093011, 57103011, 57113011, 57123011, 57133011, 57143011, 57153011, 57163011, 57173011, 57183011, 57193011, 57203011, 57213011, 57223011, 57233011, 57243011, 57253011, 57263011, 57273011, 57283011, 57293011, 57303011, 57313011, 57323011, 57333011, 57343011, 57353011, 57363011, 57373011, 57383011, 57393011, 57403011, 57413011, 57423011, 57433011, 57443011, 57453011, 57463011, 57473011, 57483011, 57493011, 57503011, 57513011, 57523011, 57533011, 57543011, 57553011, 57563011, 57573011, 57583011, 57593011, 57603011, 57613011, 57623011, 57633011, 57643011, 57653011, 57663011, 57673011, 57683011, 57693011, 57703011, 57713011, 57723011, 57733011, 57743011, 57753011, 57763011, 57773011, 57783011, 57793011, 57803011, 57813011, 57823011, 57833011, 57843011, 57853011, 57863011, 57873011, 57883011, 57893011, 57903011, 57913011, 57923011, 57933011, 57943011, 57953011, 57963011, 57973011, 57983011, 57993011, 58003011, 58013011, 58023011, 58033011]</msg>
<status status="PASS" starttime="20201112 10:17:03.216" endtime="20201112 10:17:03.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.212" endtime="20201112 10:17:03.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.224" endtime="20201112 10:17:03.516"></status>
</kw>
<msg timestamp="20201112 10:17:03.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029610319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:03.223" endtime="20201112 10:17:03.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029610319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:03.520" endtime="20201112 10:17:03.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.527" endtime="20201112 10:17:03.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.220" endtime="20201112 10:17:03.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.219" endtime="20201112 10:17:03.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:03.554" level="INFO">${RESULT} = {'source_diff': [0, 0.010070833000000001, 0.009999194999999999, 0.010001042000000002, 0.010001179999999998, 0.010001111000000007, 0.010001152999999999, 0.010001138999999992, 0.010001152999999999, 0.01...</msg>
<status status="PASS" starttime="20201112 10:17:03.531" endtime="20201112 10:17:03.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.558" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:03.557" endtime="20201112 10:17:03.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.560" level="INFO">VALUE: 0.019539486</msg>
<status status="PASS" starttime="20201112 10:17:03.559" endtime="20201112 10:17:03.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.555" endtime="20201112 10:17:03.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.565" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:03.564" endtime="20201112 10:17:03.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.568" level="INFO">VALUE: [0.029610319, 0.039609514, 0.049610556, 0.059611736, 0.069612847, 0.079614, 0.089615139, 0.099616292, 0.109617403, 0.119618569, 0.129619681, 0.139620847, 0.149621958, 0.159623194, 0.16962425, 0.179625444, 0.189626514, 0.199627681, 0.209628819, 0.219629972, 0.229631083, 0.239632306, 0.249633375, 0.259634528, 0.269635694, 0.279636819, 0.289637931, 0.299639083, 0.309640222, 0.319641389, 0.329642486, 0.339643653, 0.349644778, 0.359645944, 0.369647056, 0.379648208, 0.389649333, 0.3996505, 0.409651611, 0.419652778, 0.429653889, 0.439655056, 0.449656153, 0.459657319, 0.469658417, 0.479659597, 0.489660694, 0.499661847, 0.509662958, 0.519664111, 0.529665222, 0.539666403, 0.5496675, 0.559668667, 0.569669764, 0.579670944, 0.589672042, 0.599673194, 0.609674306, 0.619675472, 0.629676583, 0.63967775, 0.649678847, 0.659680014, 0.669681139, 0.679682278, 0.689683403, 0.699684569, 0.709685667, 0.719686833, 0.729687986, 0.739689097, 0.749690208, 0.759691361, 0.769692472, 0.779693639, 0.78969475, 0.799695903, 0.809697028, 0.819698181, 0.829699292, 0.839700458, 0.849701556, 0.85970275, 0.869703861, 0.879705, 0.889706111, 0.899707292, 0.909708375, 0.919709542, 0.929710653, 0.939711806, 0.949712917, 0.959714097, 0.969715222, 0.979716389, 0.989717472, 0.999718625, 1.00971975, 1.019720889] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:03.567" endtime="20201112 10:17:03.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.562" endtime="20201112 10:17:03.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.571" endtime="20201112 10:17:03.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:03.574" endtime="20201112 10:17:03.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.572" endtime="20201112 10:17:03.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.569" endtime="20201112 10:17:03.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:01.046" endtime="20201112 10:17:03.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.956" endtime="20201112 10:17:03.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.955" endtime="20201112 10:17:03.595"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:03.598" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.606" endtime="20201112 10:17:05.723"></status>
</kw>
<msg timestamp="20201112 10:17:05.725" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59584161, 'wakeups': [59594243, 59604244, 59614244, 59624244, 59634244...</msg>
<status status="PASS" starttime="20201112 10:17:03.604" endtime="20201112 10:17:05.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.731" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59584161, 'wakeups': [59594243, 59604244, 59614244, 59624244, 59634244...</msg>
<status status="PASS" starttime="20201112 10:17:05.727" endtime="20201112 10:17:05.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:05.733" endtime="20201112 10:17:05.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.602" endtime="20201112 10:17:05.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.600" endtime="20201112 10:17:05.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:05.744" level="INFO">${RESULT} = {'start-time': 59584161, 'timer-interval': 10000, 'timer-count': 8, 'wakeups': [59594243, 59604244, 59614244, 59624244, 59634244, 59644244, 59654244, 59664244, 59674244, 59684244, 59694244, 59704244, ...</msg>
<status status="PASS" starttime="20201112 10:17:05.740" endtime="20201112 10:17:05.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.753" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:05.751" endtime="20201112 10:17:05.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.757" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:05.755" endtime="20201112 10:17:05.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.746" endtime="20201112 10:17:05.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.763" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:05.761" endtime="20201112 10:17:05.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.765" level="INFO">VALUE: 59584161</msg>
<status status="PASS" starttime="20201112 10:17:05.764" endtime="20201112 10:17:05.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.758" endtime="20201112 10:17:05.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.770" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:05.769" endtime="20201112 10:17:05.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.772" level="INFO">VALUE: [59594243, 59604244, 59614244, 59624244, 59634244, 59644244, 59654244, 59664244, 59674244, 59684244, 59694244, 59704244, 59714244, 59724244, 59734244, 59744244, 59754244, 59764244, 59774244, 59784244, 59794244, 59804244, 59814244, 59824244, 59834244, 59844244, 59854244, 59864244, 59874244, 59884244, 59894244, 59904244, 59914244, 59924244, 59934244, 59944244, 59954244, 59964244, 59974244, 59984244, 59994244, 60004244, 60014244, 60024244, 60034244, 60044244, 60054244, 60064244, 60074244, 60084244, 60094244, 60104244, 60114244, 60124244, 60134244, 60144244, 60154244, 60164244, 60174244, 60184244, 60194244, 60204244, 60214244, 60224244, 60234244, 60244244, 60254244, 60264244, 60274244, 60284244, 60294244, 60304244, 60314244, 60324244, 60334244, 60344244, 60354244, 60364244, 60374244, 60384244, 60394244, 60404244, 60414244, 60424244, 60434244, 60444244, 60454244, 60464244, 60474244, 60484244, 60494244, 60504244, 60514244, 60524244, 60534244, 60544244, 60554244, 60564244, 60574244, 60584244]</msg>
<status status="PASS" starttime="20201112 10:17:05.771" endtime="20201112 10:17:05.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.766" endtime="20201112 10:17:05.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:05.779" endtime="20201112 10:17:06.070"></status>
</kw>
<msg timestamp="20201112 10:17:06.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020933875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031017583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:05.778" endtime="20201112 10:17:06.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020933875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031017583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:06.074" endtime="20201112 10:17:06.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:06.082" endtime="20201112 10:17:06.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.775" endtime="20201112 10:17:06.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.773" endtime="20201112 10:17:06.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:06.108" level="INFO">${RESULT} = {'source_diff': [0, 0.010083708, 0.010002625000000001, 0.010001111, 0.010001166999999998, 0.010001110999999993, 0.010001167000000005, 0.010001125, 0.010001152999999999, 0.010001111000000007, 0.0100011...</msg>
<status status="PASS" starttime="20201112 10:17:06.085" endtime="20201112 10:17:06.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.113" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:06.112" endtime="20201112 10:17:06.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.115" level="INFO">VALUE: 0.020933875</msg>
<status status="PASS" starttime="20201112 10:17:06.114" endtime="20201112 10:17:06.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.109" endtime="20201112 10:17:06.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.120" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:06.119" endtime="20201112 10:17:06.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.123" level="INFO">VALUE: [0.031017583, 0.041020208, 0.051021319, 0.061022486, 0.071023597, 0.081024764, 0.091025889, 0.101027042, 0.111028153, 0.121029319, 0.131030431, 0.141031653, 0.151032708, 0.161033875, 0.171035, 0.181036153, 0.191037292, 0.201038444, 0.211039569, 0.221040736, 0.231041847, 0.241043014, 0.251044125, 0.261045278, 0.271046403, 0.281047569, 0.291048681, 0.301049861, 0.311050986, 0.321052125, 0.331053264, 0.341054417, 0.351055528, 0.361056694, 0.371057806, 0.381058986, 0.391060083, 0.401061264, 0.411062389, 0.421063542, 0.431064653, 0.441065819, 0.451066931, 0.461068083, 0.471069208, 0.481070361, 0.4910715, 0.501072639, 0.511073736, 0.521074889, 0.531076014, 0.541077167, 0.551078292, 0.561079486, 0.571080542, 0.581081694, 0.591082847, 0.601083972, 0.611085111, 0.621086236, 0.631087361, 0.641088514, 0.651089667, 0.661090819, 0.671091944, 0.681093056, 0.691094167, 0.701095333, 0.711096444, 0.721097597, 0.731098722, 0.741099875, 0.751101028, 0.761102194, 0.77110325, 0.781104403, 0.791105528, 0.801106681, 0.811107792, 0.821109, 0.831110069, 0.841111222, 0.851112333, 0.8611135, 0.871114597, 0.881115819, 0.891116931, 0.901118042, 0.911119139, 0.921120319, 0.931121417, 0.941122583, 0.951123708, 0.961124847, 0.971125958, 0.981127111, 0.991128222, 1.001129389, 1.0111305, 1.021131667] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:06.122" endtime="20201112 10:17:06.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.116" endtime="20201112 10:17:06.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:06.126" endtime="20201112 10:17:06.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:06.129" endtime="20201112 10:17:06.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.128" endtime="20201112 10:17:06.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.124" endtime="20201112 10:17:06.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.598" endtime="20201112 10:17:06.150"></status>
</kw>
<msg timestamp="20201112 10:17:06.150" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:06.158" endtime="20201112 10:17:08.277"></status>
</kw>
<msg timestamp="20201112 10:17:08.278" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62136724, 'wakeups': [62146806, 62156807, 62166807, 62176807, 62186807...</msg>
<status status="PASS" starttime="20201112 10:17:06.157" endtime="20201112 10:17:08.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.283" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62136724, 'wakeups': [62146806, 62156807, 62166807, 62176807, 62186807...</msg>
<status status="PASS" starttime="20201112 10:17:08.280" endtime="20201112 10:17:08.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.286" endtime="20201112 10:17:08.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.154" endtime="20201112 10:17:08.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.152" endtime="20201112 10:17:08.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:08.297" level="INFO">${RESULT} = {'start-time': 62136724, 'timer-interval': 10000, 'timer-count': 8, 'wakeups': [62146806, 62156807, 62166807, 62176807, 62186807, 62196807, 62206807, 62216807, 62226807, 62236807, 62246807, 62256807, ...</msg>
<status status="PASS" starttime="20201112 10:17:08.293" endtime="20201112 10:17:08.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.305" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:08.303" endtime="20201112 10:17:08.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:08.307" endtime="20201112 10:17:08.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.298" endtime="20201112 10:17:08.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.316" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:08.315" endtime="20201112 10:17:08.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.318" level="INFO">VALUE: 62136724</msg>
<status status="PASS" starttime="20201112 10:17:08.317" endtime="20201112 10:17:08.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.312" endtime="20201112 10:17:08.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.322" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:08.321" endtime="20201112 10:17:08.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.325" level="INFO">VALUE: [62146806, 62156807, 62166807, 62176807, 62186807, 62196807, 62206807, 62216807, 62226807, 62236807, 62246807, 62256807, 62266807, 62276807, 62286807, 62296807, 62306807, 62316807, 62326807, 62336807, 62346807, 62356807, 62366807, 62376807, 62386807, 62396807, 62406807, 62416807, 62426807, 62436807, 62446807, 62456807, 62466807, 62476807, 62486807, 62496807, 62506807, 62516807, 62526807, 62536807, 62546807, 62556807, 62566807, 62576807, 62586807, 62596807, 62606807, 62616807, 62626807, 62636807, 62646807, 62656807, 62666807, 62676807, 62686807, 62696807, 62706807, 62716807, 62726807, 62736807, 62746807, 62756807, 62766807, 62776807, 62786807, 62796807, 62806807, 62816807, 62826807, 62836807, 62846807, 62856807, 62866807, 62876807, 62886807, 62896807, 62906807, 62916807, 62926807, 62936807, 62946807, 62956807, 62966807, 62976807, 62986807, 62996807, 63006807, 63016807, 63026807, 63036807, 63046807, 63056807, 63066807, 63076807, 63086807, 63096807, 63106807, 63116807, 63126807, 63136807]</msg>
<status status="PASS" starttime="20201112 10:17:08.323" endtime="20201112 10:17:08.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.319" endtime="20201112 10:17:08.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.332" endtime="20201112 10:17:08.624"></status>
</kw>
<msg timestamp="20201112 10:17:08.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028233681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:08.330" endtime="20201112 10:17:08.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028233681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:08.628" endtime="20201112 10:17:08.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.635" endtime="20201112 10:17:08.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.328" endtime="20201112 10:17:08.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.326" endtime="20201112 10:17:08.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:08.661" level="INFO">${RESULT} = {'source_diff': [0, 0.010083806, 0.010002651999999997, 0.010001084, 0.010001222000000004, 0.010001096999999994, 0.010001125, 0.010001139000000006, 0.010001152999999999, 0.010001125, 0.0100012079999999...</msg>
<status status="PASS" starttime="20201112 10:17:08.639" endtime="20201112 10:17:08.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.665" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:08.664" endtime="20201112 10:17:08.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.667" level="INFO">VALUE: 0.018149875</msg>
<status status="PASS" starttime="20201112 10:17:08.666" endtime="20201112 10:17:08.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.662" endtime="20201112 10:17:08.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.673" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:08.672" endtime="20201112 10:17:08.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.675" level="INFO">VALUE: [0.028233681, 0.038236333, 0.048237417, 0.058238639, 0.068239736, 0.078240861, 0.088242, 0.098243153, 0.108244278, 0.118245486, 0.128246556, 0.138247736, 0.148248819, 0.15825, 0.168251111, 0.178252264, 0.188253458, 0.198254556, 0.208255653, 0.218256819, 0.228257944, 0.238259111, 0.248260306, 0.258261444, 0.2682625, 0.278263667, 0.288264778, 0.298265944, 0.308267083, 0.318268264, 0.328269347, 0.338270569, 0.348271639, 0.358272792, 0.368273931, 0.378275069, 0.388276194, 0.398277375, 0.4082785, 0.418279639, 0.42828075, 0.438281931, 0.448283097, 0.458284208, 0.468285319, 0.4782865, 0.488287611, 0.498288764, 0.508289875, 0.518291125, 0.528292167, 0.538293347, 0.548294444, 0.558295625, 0.568296736, 0.578297889, 0.588299028, 0.598300194, 0.608301292, 0.618302458, 0.628303569, 0.638304722, 0.648305833, 0.658307014, 0.668308111, 0.678309319, 0.688310389, 0.698311542, 0.708312653, 0.718313847, 0.728314944, 0.738316083, 0.748317208, 0.758318403, 0.768319472, 0.778320625, 0.788321736, 0.798322903, 0.808324014, 0.818325181, 0.828326292, 0.838327458, 0.848328556, 0.858329722, 0.868330833, 0.878332, 0.888333125, 0.898334292, 0.908335375, 0.918336542, 0.928337667, 0.938338833, 0.948339972, 0.958341097, 0.968342264, 0.978343375, 0.988344472, 0.998345653, 1.00834675, 1.018347944] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:08.674" endtime="20201112 10:17:08.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.669" endtime="20201112 10:17:08.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.678" endtime="20201112 10:17:08.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:08.682" endtime="20201112 10:17:08.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.680" endtime="20201112 10:17:08.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.677" endtime="20201112 10:17:08.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.151" endtime="20201112 10:17:08.702"></status>
</kw>
<msg timestamp="20201112 10:17:08.703" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.711" endtime="20201112 10:17:10.830"></status>
</kw>
<msg timestamp="20201112 10:17:10.831" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64689946, 'wakeups': [64700028, 64710029, 64720029, 64730029, 64740029...</msg>
<status status="PASS" starttime="20201112 10:17:08.709" endtime="20201112 10:17:10.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.837" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64689946, 'wakeups': [64700028, 64710029, 64720029, 64730029, 64740029...</msg>
<status status="PASS" starttime="20201112 10:17:10.834" endtime="20201112 10:17:10.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:10.839" endtime="20201112 10:17:10.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.707" endtime="20201112 10:17:10.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.705" endtime="20201112 10:17:10.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:10.850" level="INFO">${RESULT} = {'start-time': 64689946, 'timer-interval': 10000, 'timer-count': 8, 'wakeups': [64700028, 64710029, 64720029, 64730029, 64740029, 64750029, 64760029, 64770029, 64780029, 64790029, 64800029, 64810029, ...</msg>
<status status="PASS" starttime="20201112 10:17:10.846" endtime="20201112 10:17:10.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.859" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:10.857" endtime="20201112 10:17:10.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.863" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:10.861" endtime="20201112 10:17:10.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.852" endtime="20201112 10:17:10.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.870" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:10.869" endtime="20201112 10:17:10.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.872" level="INFO">VALUE: 64689946</msg>
<status status="PASS" starttime="20201112 10:17:10.871" endtime="20201112 10:17:10.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.866" endtime="20201112 10:17:10.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.876" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:10.875" endtime="20201112 10:17:10.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.879" level="INFO">VALUE: [64700028, 64710029, 64720029, 64730029, 64740029, 64750029, 64760029, 64770029, 64780029, 64790029, 64800029, 64810029, 64820029, 64830029, 64840029, 64850029, 64860029, 64870029, 64880029, 64890029, 64900029, 64910029, 64920029, 64930029, 64940029, 64950029, 64960029, 64970029, 64980029, 64990029, 65000029, 65010029, 65020029, 65030029, 65040029, 65050029, 65060029, 65070029, 65080029, 65090029, 65100029, 65110029, 65120029, 65130029, 65140029, 65150029, 65160029, 65170029, 65180029, 65190029, 65200029, 65210029, 65220029, 65230029, 65240029, 65250029, 65260029, 65270029, 65280029, 65290029, 65300029, 65310029, 65320029, 65330029, 65340029, 65350029, 65360029, 65370029, 65380029, 65390029, 65400029, 65410029, 65420029, 65430029, 65440029, 65450029, 65460029, 65470029, 65480029, 65490029, 65500029, 65510029, 65520029, 65530029, 65540029, 65550029, 65560029, 65570029, 65580029, 65590029, 65600029, 65610029, 65620029, 65630029, 65640029, 65650029, 65660029, 65670029, 65680029, 65690029]</msg>
<status status="PASS" starttime="20201112 10:17:10.878" endtime="20201112 10:17:10.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.873" endtime="20201112 10:17:10.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:10.890" endtime="20201112 10:17:11.182"></status>
</kw>
<msg timestamp="20201112 10:17:11.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019108556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029191458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:10.889" endtime="20201112 10:17:11.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019108556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029191458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:11.185" endtime="20201112 10:17:11.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:11.193" endtime="20201112 10:17:11.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.886" endtime="20201112 10:17:11.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.880" endtime="20201112 10:17:11.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:11.220" level="INFO">${RESULT} = {'source_diff': [0, 0.010082902000000001, 0.010002624999999998, 0.010001111, 0.010001167000000005, 0.010001125, 0.010001166999999991, 0.010001111000000007, 0.010001194000000005, 0.010001083999999993, ...</msg>
<status status="PASS" starttime="20201112 10:17:11.196" endtime="20201112 10:17:11.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.224" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:11.223" endtime="20201112 10:17:11.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.227" level="INFO">VALUE: 0.019108556</msg>
<status status="PASS" starttime="20201112 10:17:11.226" endtime="20201112 10:17:11.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.221" endtime="20201112 10:17:11.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.232" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:11.231" endtime="20201112 10:17:11.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.234" level="INFO">VALUE: [0.029191458, 0.039194083, 0.049195194, 0.059196361, 0.069197486, 0.079198653, 0.089199764, 0.099200958, 0.109202042, 0.119203194, 0.129204347, 0.139205486, 0.149206597, 0.159207806, 0.169208875, 0.179210042, 0.189211153, 0.199212319, 0.209213458, 0.219214611, 0.229215722, 0.239216889, 0.249218, 0.259219167, 0.269220278, 0.279221458, 0.289222569, 0.299223736, 0.309224847, 0.319226097, 0.329227125, 0.339228278, 0.349229403, 0.359230556, 0.369231667, 0.379232819, 0.389233931, 0.399235097, 0.409236222, 0.419237361, 0.429238486, 0.439239667, 0.449240778, 0.459241903, 0.469243014, 0.479244181, 0.489245306, 0.499246444, 0.509247569, 0.519248722, 0.529249833, 0.539251, 0.549252111, 0.559253264, 0.569254458, 0.579255542, 0.589256653, 0.599257833, 0.609258931, 0.619260083, 0.629261194, 0.639262361, 0.649263542, 0.659264708, 0.669265764, 0.679266903, 0.689268014, 0.699269181, 0.709270319, 0.719271458, 0.729272569, 0.739273736, 0.749274847, 0.759276014, 0.769277111, 0.779278347, 0.789279389, 0.799280542, 0.809281708, 0.819282833, 0.829283944, 0.839285139, 0.849286222, 0.859287361, 0.8692885, 0.879289639, 0.889290778, 0.899291917, 0.909293083, 0.919294194, 0.929295306, 0.939296458, 0.949297569, 0.959298736, 0.969299861, 0.979301014, 0.989302139, 0.999303278, 1.009304403, 1.019305569] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:11.233" endtime="20201112 10:17:11.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.228" endtime="20201112 10:17:11.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:11.237" endtime="20201112 10:17:11.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:11.240" endtime="20201112 10:17:11.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.239" endtime="20201112 10:17:11.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.235" endtime="20201112 10:17:11.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.703" endtime="20201112 10:17:11.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.596" endtime="20201112 10:17:11.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.595" endtime="20201112 10:17:11.262"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:11.264" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:11.273" endtime="20201112 10:17:13.391"></status>
</kw>
<msg timestamp="20201112 10:17:13.392" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67251021, 'wakeups': [67261122, 67271121, 67281121, 67291121, 67301121...</msg>
<status status="PASS" starttime="20201112 10:17:11.271" endtime="20201112 10:17:13.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.398" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67251021, 'wakeups': [67261122, 67271121, 67281121, 67291121, 67301121...</msg>
<status status="PASS" starttime="20201112 10:17:13.394" endtime="20201112 10:17:13.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.400" endtime="20201112 10:17:13.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.268" endtime="20201112 10:17:13.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.266" endtime="20201112 10:17:13.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:13.411" level="INFO">${RESULT} = {'start-time': 67251021, 'timer-interval': 10000, 'timer-count': 9, 'wakeups': [67261122, 67271121, 67281121, 67291121, 67301121, 67311121, 67321121, 67331121, 67341121, 67351121, 67361121, 67371121, ...</msg>
<status status="PASS" starttime="20201112 10:17:13.407" endtime="20201112 10:17:13.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.419" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:13.417" endtime="20201112 10:17:13.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.422" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:13.421" endtime="20201112 10:17:13.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.413" endtime="20201112 10:17:13.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.428" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:13.427" endtime="20201112 10:17:13.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.430" level="INFO">VALUE: 67251021</msg>
<status status="PASS" starttime="20201112 10:17:13.429" endtime="20201112 10:17:13.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.424" endtime="20201112 10:17:13.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.435" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:13.434" endtime="20201112 10:17:13.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.437" level="INFO">VALUE: [67261122, 67271121, 67281121, 67291121, 67301121, 67311121, 67321121, 67331121, 67341121, 67351121, 67361121, 67371121, 67381121, 67391121, 67401121, 67411121, 67421121, 67431121, 67441121, 67451121, 67461121, 67471121, 67481121, 67491121, 67501121, 67511121, 67521121, 67531121, 67541121, 67551121, 67561121, 67571121, 67581121, 67591121, 67601121, 67611121, 67621121, 67631121, 67641121, 67651121, 67661121, 67671121, 67681121, 67691121, 67701121, 67711121, 67721121, 67731121, 67741121, 67751121, 67761121, 67771121, 67781121, 67791121, 67801121, 67811121, 67821121, 67831121, 67841121, 67851121, 67861121, 67871121, 67881121, 67891121, 67901121, 67911121, 67921121, 67931121, 67941121, 67951121, 67961121, 67971121, 67981121, 67991121, 68001121, 68011121, 68021121, 68031121, 68041121, 68051121, 68061121, 68071121, 68081121, 68091121, 68101121, 68111121, 68121121, 68131121, 68141121, 68151121, 68161121, 68171121, 68181121, 68191121, 68201121, 68211121, 68221121, 68231121, 68241121, 68251121]</msg>
<status status="PASS" starttime="20201112 10:17:13.436" endtime="20201112 10:17:13.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.432" endtime="20201112 10:17:13.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.445" endtime="20201112 10:17:13.736"></status>
</kw>
<msg timestamp="20201112 10:17:13.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031551944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:13.443" endtime="20201112 10:17:13.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031551944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:13.740" endtime="20201112 10:17:13.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.747" endtime="20201112 10:17:13.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.441" endtime="20201112 10:17:13.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.439" endtime="20201112 10:17:13.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:13.774" level="INFO">${RESULT} = {'source_diff': [0, 0.010102610999999997, 0.010000500000000002, 0.010001112, 0.010001165999999999, 0.010001125000000007, 0.010001152999999999, 0.010001125, 0.010001152999999999, 0.010001125, 0.0100011...</msg>
<status status="PASS" starttime="20201112 10:17:13.751" endtime="20201112 10:17:13.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.778" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:13.777" endtime="20201112 10:17:13.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.780" level="INFO">VALUE: 0.021449333</msg>
<status status="PASS" starttime="20201112 10:17:13.779" endtime="20201112 10:17:13.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.775" endtime="20201112 10:17:13.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.787" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:13.786" endtime="20201112 10:17:13.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.789" level="INFO">VALUE: [0.031551944, 0.041552444, 0.051553556, 0.061554722, 0.071555847, 0.081557, 0.091558125, 0.101559278, 0.111560403, 0.121561569, 0.131562681, 0.141563847, 0.151564958, 0.161566125, 0.17156725, 0.181568403, 0.191569528, 0.201570681, 0.211571806, 0.221572958, 0.231574069, 0.241575222, 0.251576347, 0.2615775, 0.271578597, 0.281579778, 0.291580875, 0.301582042, 0.311583139, 0.321584292, 0.331585417, 0.341586569, 0.351587694, 0.361588903, 0.371589958, 0.381591111, 0.391592222, 0.401593389, 0.411594486, 0.421595653, 0.431596764, 0.441597931, 0.451599042, 0.461600194, 0.471601306, 0.481602472, 0.491603569, 0.501604792, 0.511605861, 0.521607083, 0.531608153, 0.541609278, 0.551610417, 0.561611583, 0.571612667, 0.581613819, 0.591614931, 0.601616097, 0.61161725, 0.621618361, 0.631619472, 0.641620639, 0.651621792, 0.661622972, 0.671624028, 0.681625194, 0.691626306, 0.701627472, 0.711628569, 0.721629736, 0.731630833, 0.741632, 0.751633111, 0.761634306, 0.771635417, 0.781636556, 0.791637653, 0.801638833, 0.811639931, 0.821641097, 0.831642236, 0.841643361, 0.851644514, 0.861645653, 0.87164675, 0.881647917, 0.891649014, 0.901650236, 0.911651292, 0.921652444, 0.931653556, 0.941654722, 0.951655833, 0.961656986, 0.971658125, 0.981659278, 0.991660375, 1.001661528, 1.011662639, 1.021663819] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:13.788" endtime="20201112 10:17:13.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.782" endtime="20201112 10:17:13.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.792" endtime="20201112 10:17:13.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:13.795" endtime="20201112 10:17:13.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.794" endtime="20201112 10:17:13.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.790" endtime="20201112 10:17:13.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.265" endtime="20201112 10:17:13.816"></status>
</kw>
<msg timestamp="20201112 10:17:13.816" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.824" endtime="20201112 10:17:15.942"></status>
</kw>
<msg timestamp="20201112 10:17:15.943" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69803095, 'wakeups': [69813196, 69823195, 69833195, 69843195, 69853195...</msg>
<status status="PASS" starttime="20201112 10:17:13.823" endtime="20201112 10:17:15.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.949" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69803095, 'wakeups': [69813196, 69823195, 69833195, 69843195, 69853195...</msg>
<status status="PASS" starttime="20201112 10:17:15.946" endtime="20201112 10:17:15.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:15.951" endtime="20201112 10:17:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.820" endtime="20201112 10:17:15.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.818" endtime="20201112 10:17:15.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:15.962" level="INFO">${RESULT} = {'start-time': 69803095, 'timer-interval': 10000, 'timer-count': 9, 'wakeups': [69813196, 69823195, 69833195, 69843195, 69853195, 69863195, 69873195, 69883195, 69893195, 69903195, 69913195, 69923195, ...</msg>
<status status="PASS" starttime="20201112 10:17:15.958" endtime="20201112 10:17:15.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.971" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:15.969" endtime="20201112 10:17:15.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.976" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:15.974" endtime="20201112 10:17:15.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.964" endtime="20201112 10:17:15.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.981" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:15.980" endtime="20201112 10:17:15.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.983" level="INFO">VALUE: 69803095</msg>
<status status="PASS" starttime="20201112 10:17:15.982" endtime="20201112 10:17:15.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.977" endtime="20201112 10:17:15.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.988" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:15.987" endtime="20201112 10:17:15.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.990" level="INFO">VALUE: [69813196, 69823195, 69833195, 69843195, 69853195, 69863195, 69873195, 69883195, 69893195, 69903195, 69913195, 69923195, 69933195, 69943195, 69953195, 69963195, 69973195, 69983195, 69993195, 70003195, 70013195, 70023195, 70033195, 70043195, 70053195, 70063195, 70073195, 70083195, 70093195, 70103195, 70113195, 70123195, 70133195, 70143195, 70153195, 70163195, 70173195, 70183195, 70193195, 70203195, 70213195, 70223195, 70233195, 70243195, 70253195, 70263195, 70273195, 70283195, 70293195, 70303195, 70313195, 70323195, 70333195, 70343195, 70353195, 70363195, 70373195, 70383195, 70393195, 70403195, 70413195, 70423195, 70433195, 70443195, 70453195, 70463195, 70473195, 70483195, 70493195, 70503195, 70513195, 70523195, 70533195, 70543195, 70553195, 70563195, 70573195, 70583195, 70593195, 70603195, 70613195, 70623195, 70633195, 70643195, 70653195, 70663195, 70673195, 70683195, 70693195, 70703195, 70713195, 70723195, 70733195, 70743195, 70753195, 70763195, 70773195, 70783195, 70793195, 70803195]</msg>
<status status="PASS" starttime="20201112 10:17:15.989" endtime="20201112 10:17:15.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.984" endtime="20201112 10:17:15.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:15.998" endtime="20201112 10:17:16.290"></status>
</kw>
<msg timestamp="20201112 10:17:16.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018878597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028980986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:15.996" endtime="20201112 10:17:16.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018878597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028980986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:16.294" endtime="20201112 10:17:16.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:16.301" endtime="20201112 10:17:16.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.993" endtime="20201112 10:17:16.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.991" endtime="20201112 10:17:16.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:16.327" level="INFO">${RESULT} = {'source_diff': [0, 0.010102389, 0.010000486000000003, 0.010001125, 0.010001152999999999, 0.010001125, 0.010001152999999999, 0.010001125, 0.010001152999999999, 0.010001111000000007, 0.0100011799999999...</msg>
<status status="PASS" starttime="20201112 10:17:16.304" endtime="20201112 10:17:16.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.331" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:16.330" endtime="20201112 10:17:16.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.333" level="INFO">VALUE: 0.018878597</msg>
<status status="PASS" starttime="20201112 10:17:16.332" endtime="20201112 10:17:16.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.328" endtime="20201112 10:17:16.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.339" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:16.338" endtime="20201112 10:17:16.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.341" level="INFO">VALUE: [0.028980986, 0.038981472, 0.048982597, 0.05898375, 0.068984875, 0.078986028, 0.088987153, 0.098988306, 0.108989417, 0.118990597, 0.128991708, 0.138992875, 0.148994, 0.158995153, 0.168996278, 0.178997444, 0.188998542, 0.198999708, 0.209000847, 0.219002014, 0.229003111, 0.239004278, 0.249005389, 0.259006556, 0.269007708, 0.279008847, 0.289009972, 0.299011139, 0.309012222, 0.319013389, 0.329014486, 0.339015667, 0.34901675, 0.359017917, 0.369019028, 0.379020181, 0.389021319, 0.399022472, 0.409023556, 0.419024722, 0.429025833, 0.439026986, 0.449028097, 0.459029278, 0.469030389, 0.479031556, 0.489032653, 0.499033806, 0.509034972, 0.519036069, 0.529037181, 0.539038347, 0.549039444, 0.559040611, 0.569041736, 0.579042875, 0.589043986, 0.599045153, 0.609046264, 0.619047417, 0.629048542, 0.639049694, 0.649050806, 0.659051958, 0.669053083, 0.679054236, 0.689055375, 0.6990565, 0.709057625, 0.719058778, 0.729059889, 0.739061042, 0.749062153, 0.759063319, 0.769064431, 0.779065597, 0.789066708, 0.799067875, 0.809068972, 0.819070167, 0.829071236, 0.839072403, 0.849073514, 0.859074667, 0.869075778, 0.879076972, 0.889078069, 0.899079222, 0.909080319, 0.919081486, 0.929082611, 0.93908375, 0.949084875, 0.959086028, 0.969087181, 0.979088292, 0.989089403, 0.999090569, 1.00909175, 1.019092833] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:16.340" endtime="20201112 10:17:16.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.335" endtime="20201112 10:17:16.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:16.344" endtime="20201112 10:17:16.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:16.348" endtime="20201112 10:17:16.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.346" endtime="20201112 10:17:16.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.343" endtime="20201112 10:17:16.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.817" endtime="20201112 10:17:16.369"></status>
</kw>
<msg timestamp="20201112 10:17:16.369" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:16.378" endtime="20201112 10:17:18.497"></status>
</kw>
<msg timestamp="20201112 10:17:18.498" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72356575, 'wakeups': [72366676, 72376675, 72386675, 72396675, 72406675...</msg>
<status status="PASS" starttime="20201112 10:17:16.377" endtime="20201112 10:17:18.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.504" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72356575, 'wakeups': [72366676, 72376675, 72386675, 72396675, 72406675...</msg>
<status status="PASS" starttime="20201112 10:17:18.500" endtime="20201112 10:17:18.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:18.506" endtime="20201112 10:17:18.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.373" endtime="20201112 10:17:18.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.371" endtime="20201112 10:17:18.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:18.517" level="INFO">${RESULT} = {'start-time': 72356575, 'timer-interval': 10000, 'timer-count': 9, 'wakeups': [72366676, 72376675, 72386675, 72396675, 72406675, 72416675, 72426675, 72436675, 72446675, 72456675, 72466675, 72476675, ...</msg>
<status status="PASS" starttime="20201112 10:17:18.513" endtime="20201112 10:17:18.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.525" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:18.523" endtime="20201112 10:17:18.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.530" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:18.528" endtime="20201112 10:17:18.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.519" endtime="20201112 10:17:18.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.535" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:18.534" endtime="20201112 10:17:18.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.537" level="INFO">VALUE: 72356575</msg>
<status status="PASS" starttime="20201112 10:17:18.536" endtime="20201112 10:17:18.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.532" endtime="20201112 10:17:18.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.542" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:18.541" endtime="20201112 10:17:18.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.545" level="INFO">VALUE: [72366676, 72376675, 72386675, 72396675, 72406675, 72416675, 72426675, 72436675, 72446675, 72456675, 72466675, 72476675, 72486675, 72496675, 72506675, 72516675, 72526675, 72536675, 72546675, 72556675, 72566675, 72576675, 72586675, 72596675, 72606675, 72616675, 72626675, 72636675, 72646675, 72656675, 72666675, 72676675, 72686675, 72696675, 72706675, 72716675, 72726675, 72736675, 72746675, 72756675, 72766675, 72776675, 72786675, 72796675, 72806675, 72816675, 72826675, 72836675, 72846675, 72856675, 72866675, 72876675, 72886675, 72896675, 72906675, 72916675, 72926675, 72936675, 72946675, 72956675, 72966675, 72976675, 72986675, 72996675, 73006675, 73016675, 73026675, 73036675, 73046675, 73056675, 73066675, 73076675, 73086675, 73096675, 73106675, 73116675, 73126675, 73136675, 73146675, 73156675, 73166675, 73176675, 73186675, 73196675, 73206675, 73216675, 73226675, 73236675, 73246675, 73256675, 73266675, 73276675, 73286675, 73296675, 73306675, 73316675, 73326675, 73336675, 73346675, 73356675]</msg>
<status status="PASS" starttime="20201112 10:17:18.543" endtime="20201112 10:17:18.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.538" endtime="20201112 10:17:18.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:18.552" endtime="20201112 10:17:18.843"></status>
</kw>
<msg timestamp="20201112 10:17:18.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029708319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:18.550" endtime="20201112 10:17:18.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029708319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:18.847" endtime="20201112 10:17:18.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:18.854" endtime="20201112 10:17:18.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.548" endtime="20201112 10:17:18.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.546" endtime="20201112 10:17:18.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:18.881" level="INFO">${RESULT} = {'source_diff': [0, 0.010102444000000002, 0.010000541999999998, 0.010001111, 0.010001125, 0.010001139, 0.010001139000000006, 0.010001125, 0.010001193999999991, 0.010001098, 0.010001152000000013, 0.010...</msg>
<status status="PASS" starttime="20201112 10:17:18.858" endtime="20201112 10:17:18.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.885" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:18.884" endtime="20201112 10:17:18.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.887" level="INFO">VALUE: 0.019605875</msg>
<status status="PASS" starttime="20201112 10:17:18.886" endtime="20201112 10:17:18.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.882" endtime="20201112 10:17:18.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.893" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:18.892" endtime="20201112 10:17:18.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.895" level="INFO">VALUE: [0.029708319, 0.039708861, 0.049709972, 0.059711097, 0.069712236, 0.079713375, 0.0897145, 0.099715694, 0.109716792, 0.119717944, 0.129719056, 0.139720222, 0.149721347, 0.1597225, 0.169723611, 0.179724792, 0.189725889, 0.199727056, 0.209728181, 0.219729333, 0.229730458, 0.239731625, 0.249732736, 0.259733958, 0.269735014, 0.279736181, 0.289737292, 0.299738458, 0.309739625, 0.319740764, 0.329741861, 0.339743028, 0.349744139, 0.359745306, 0.369746431, 0.379747583, 0.389748764, 0.399749875, 0.409750986, 0.419752153, 0.429753264, 0.439754444, 0.449755569, 0.459756722, 0.469757847, 0.479759, 0.489760125, 0.499761278, 0.509762375, 0.519763542, 0.529764667, 0.539765861, 0.549766917, 0.559768097, 0.569769194, 0.579770347, 0.589771458, 0.599772611, 0.609773764, 0.619774944, 0.629776, 0.639777153, 0.649778264, 0.659779417, 0.669780528, 0.679781694, 0.689782819, 0.699783972, 0.709785083, 0.719786236, 0.729787361, 0.7397885, 0.749789625, 0.759790792, 0.769791889, 0.779793042, 0.789794153, 0.799795319, 0.809796431, 0.819797597, 0.829798694, 0.839799861, 0.849800986, 0.859802125, 0.86980325, 0.879804403, 0.889805528, 0.899806667, 0.909807819, 0.919808944, 0.929810111, 0.939811236, 0.949812333, 0.9598135, 0.969814597, 0.97981575, 0.989816875, 0.999818028, 1.009819139, 1.019820319] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:18.894" endtime="20201112 10:17:18.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.889" endtime="20201112 10:17:18.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:18.898" endtime="20201112 10:17:18.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:18.901" endtime="20201112 10:17:18.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.900" endtime="20201112 10:17:18.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.896" endtime="20201112 10:17:18.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.369" endtime="20201112 10:17:18.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.263" endtime="20201112 10:17:18.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.262" endtime="20201112 10:17:18.923"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:18.925" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:18.933" endtime="20201112 10:17:21.051"></status>
</kw>
<msg timestamp="20201112 10:17:21.053" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74911634, 'wakeups': [74921750, 74931749, 74941749, 74951749, 749617...</msg>
<status status="PASS" starttime="20201112 10:17:18.932" endtime="20201112 10:17:21.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.058" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74911634, 'wakeups': [74921750, 74931749, 74941749, 74951749, 749617...</msg>
<status status="PASS" starttime="20201112 10:17:21.055" endtime="20201112 10:17:21.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.061" endtime="20201112 10:17:21.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.929" endtime="20201112 10:17:21.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.927" endtime="20201112 10:17:21.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:21.072" level="INFO">${RESULT} = {'start-time': 74911634, 'timer-interval': 10000, 'timer-count': 10, 'wakeups': [74921750, 74931749, 74941749, 74951749, 74961749, 74971749, 74981749, 74991749, 75001749, 75011749, 75021749, 75031749,...</msg>
<status status="PASS" starttime="20201112 10:17:21.068" endtime="20201112 10:17:21.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.080" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:21.078" endtime="20201112 10:17:21.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.084" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:21.082" endtime="20201112 10:17:21.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.073" endtime="20201112 10:17:21.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.091" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:21.089" endtime="20201112 10:17:21.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.093" level="INFO">VALUE: 74911634</msg>
<status status="PASS" starttime="20201112 10:17:21.092" endtime="20201112 10:17:21.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.086" endtime="20201112 10:17:21.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.098" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:21.097" endtime="20201112 10:17:21.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.100" level="INFO">VALUE: [74921750, 74931749, 74941749, 74951749, 74961749, 74971749, 74981749, 74991749, 75001749, 75011749, 75021749, 75031749, 75041749, 75051749, 75061749, 75071749, 75081749, 75091749, 75101749, 75111749, 75121749, 75131749, 75141749, 75151749, 75161749, 75171749, 75181749, 75191749, 75201749, 75211749, 75221749, 75231749, 75241749, 75251749, 75261749, 75271749, 75281749, 75291749, 75301749, 75311749, 75321749, 75331749, 75341749, 75351749, 75361749, 75371749, 75381749, 75391749, 75401749, 75411749, 75421749, 75431749, 75441749, 75451749, 75461749, 75471749, 75481749, 75491749, 75501749, 75511749, 75521749, 75531749, 75541749, 75551749, 75561749, 75571749, 75581749, 75591749, 75601749, 75611749, 75621749, 75631749, 75641749, 75651749, 75661749, 75671749, 75681749, 75691749, 75701749, 75711749, 75721749, 75731749, 75741749, 75751749, 75761749, 75771749, 75781749, 75791749, 75801749, 75811749, 75821749, 75831749, 75841749, 75851749, 75861749, 75871749, 75881749, 75891749, 75901749, 75911749]</msg>
<status status="PASS" starttime="20201112 10:17:21.099" endtime="20201112 10:17:21.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.094" endtime="20201112 10:17:21.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.112" endtime="20201112 10:17:21.403"></status>
</kw>
<msg timestamp="20201112 10:17:21.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021302486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031419208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:21.106" endtime="20201112 10:17:21.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021302486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031419208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:21.406" endtime="20201112 10:17:21.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.414" endtime="20201112 10:17:21.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.103" endtime="20201112 10:17:21.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.102" endtime="20201112 10:17:21.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:21.441" level="INFO">${RESULT} = {'source_diff': [0, 0.010116721999999998, 0.010000223000000003, 0.010001041000000002, 0.010001152999999999, 0.010001124999999993, 0.010001153000000013, 0.010001125, 0.010001165999999992, 0.01000111200...</msg>
<status status="PASS" starttime="20201112 10:17:21.418" endtime="20201112 10:17:21.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.445" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:21.444" endtime="20201112 10:17:21.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.447" level="INFO">VALUE: 0.021302486</msg>
<status status="PASS" starttime="20201112 10:17:21.446" endtime="20201112 10:17:21.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.442" endtime="20201112 10:17:21.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.453" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:21.452" endtime="20201112 10:17:21.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.456" level="INFO">VALUE: [0.031419208, 0.041419431, 0.051420472, 0.061421625, 0.07142275, 0.081423903, 0.091425028, 0.101426194, 0.111427306, 0.121428486, 0.131429583, 0.141430764, 0.151431875, 0.161433028, 0.171434139, 0.181435306, 0.191436417, 0.201437583, 0.211438708, 0.221439875, 0.231440986, 0.241442167, 0.251443264, 0.261444444, 0.271445542, 0.281446722, 0.291447819, 0.301448986, 0.311450111, 0.321451306, 0.331452417, 0.341453556, 0.351454667, 0.361455833, 0.371456944, 0.381458111, 0.391459236, 0.401460444, 0.411461514, 0.421462681, 0.431463847, 0.441464986, 0.451466069, 0.461467236, 0.471468361, 0.481469514, 0.491470639, 0.501471833, 0.511472972, 0.521474097, 0.531475194, 0.541476375, 0.551477514, 0.561478667, 0.571479764, 0.581480986, 0.591482056, 0.601483208, 0.611484361, 0.621485486, 0.631486611, 0.641487792, 0.651488889, 0.661490097, 0.671491181, 0.681492333, 0.691493458, 0.701494611, 0.71149575, 0.721496944, 0.731498014, 0.741499194, 0.751500292, 0.761501444, 0.771502583, 0.781503722, 0.791504819, 0.801505986, 0.811507097, 0.82150825, 0.831509375, 0.841510528, 0.851511694, 0.861512792, 0.871513903, 0.881515097, 0.891516181, 0.901517375, 0.911518431, 0.921519611, 0.931520708, 0.941521861, 0.951522972, 0.961524125, 0.971525236, 0.981526431, 0.991527528, 1.001528722, 1.011529819, 1.021530944] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:21.454" endtime="20201112 10:17:21.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.449" endtime="20201112 10:17:21.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.459" endtime="20201112 10:17:21.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:21.462" endtime="20201112 10:17:21.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.461" endtime="20201112 10:17:21.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.457" endtime="20201112 10:17:21.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.926" endtime="20201112 10:17:21.483"></status>
</kw>
<msg timestamp="20201112 10:17:21.483" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.491" endtime="20201112 10:17:23.609"></status>
</kw>
<msg timestamp="20201112 10:17:23.610" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77469280, 'wakeups': [77479396, 77489395, 77499395, 77509395, 775193...</msg>
<status status="PASS" starttime="20201112 10:17:21.490" endtime="20201112 10:17:23.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.616" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77469280, 'wakeups': [77479396, 77489395, 77499395, 77509395, 775193...</msg>
<status status="PASS" starttime="20201112 10:17:23.612" endtime="20201112 10:17:23.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:23.619" endtime="20201112 10:17:23.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.487" endtime="20201112 10:17:23.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.485" endtime="20201112 10:17:23.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:23.629" level="INFO">${RESULT} = {'start-time': 77469280, 'timer-interval': 10000, 'timer-count': 10, 'wakeups': [77479396, 77489395, 77499395, 77509395, 77519395, 77529395, 77539395, 77549395, 77559395, 77569395, 77579395, 77589395,...</msg>
<status status="PASS" starttime="20201112 10:17:23.626" endtime="20201112 10:17:23.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.638" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:23.636" endtime="20201112 10:17:23.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.641" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:23.640" endtime="20201112 10:17:23.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.631" endtime="20201112 10:17:23.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.646" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:23.645" endtime="20201112 10:17:23.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.648" level="INFO">VALUE: 77469280</msg>
<status status="PASS" starttime="20201112 10:17:23.647" endtime="20201112 10:17:23.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.643" endtime="20201112 10:17:23.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.653" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:23.652" endtime="20201112 10:17:23.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.655" level="INFO">VALUE: [77479396, 77489395, 77499395, 77509395, 77519395, 77529395, 77539395, 77549395, 77559395, 77569395, 77579395, 77589395, 77599395, 77609395, 77619395, 77629395, 77639395, 77649395, 77659395, 77669395, 77679395, 77689395, 77699395, 77709395, 77719395, 77729395, 77739395, 77749395, 77759395, 77769395, 77779395, 77789395, 77799395, 77809395, 77819395, 77829395, 77839395, 77849395, 77859395, 77869395, 77879395, 77889395, 77899395, 77909395, 77919395, 77929395, 77939395, 77949395, 77959395, 77969395, 77979395, 77989395, 77999395, 78009395, 78019395, 78029395, 78039395, 78049395, 78059395, 78069395, 78079395, 78089395, 78099395, 78109395, 78119395, 78129395, 78139395, 78149395, 78159395, 78169395, 78179395, 78189395, 78199395, 78209395, 78219395, 78229395, 78239395, 78249395, 78259395, 78269395, 78279395, 78289395, 78299395, 78309395, 78319395, 78329395, 78339395, 78349395, 78359395, 78369395, 78379395, 78389395, 78399395, 78409395, 78419395, 78429395, 78439395, 78449395, 78459395, 78469395]</msg>
<status status="PASS" starttime="20201112 10:17:23.654" endtime="20201112 10:17:23.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.650" endtime="20201112 10:17:23.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:23.662" endtime="20201112 10:17:23.954"></status>
</kw>
<msg timestamp="20201112 10:17:23.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018291431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028408431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:23.661" endtime="20201112 10:17:23.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018291431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028408431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:23.958" endtime="20201112 10:17:23.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:23.965" endtime="20201112 10:17:23.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.658" endtime="20201112 10:17:23.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.657" endtime="20201112 10:17:23.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:23.991" level="INFO">${RESULT} = {'source_diff': [0, 0.010117000000000001, 0.010000137999999995, 0.010001167000000005, 0.010001111, 0.010001110999999993, 0.010001181000000012, 0.010001096999999987, 0.010001181000000012, 0.010001097, ...</msg>
<status status="PASS" starttime="20201112 10:17:23.969" endtime="20201112 10:17:23.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.996" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:23.995" endtime="20201112 10:17:23.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.998" level="INFO">VALUE: 0.018291431</msg>
<status status="PASS" starttime="20201112 10:17:23.997" endtime="20201112 10:17:23.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.993" endtime="20201112 10:17:23.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.004" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:24.003" endtime="20201112 10:17:24.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.006" level="INFO">VALUE: [0.028408431, 0.038408569, 0.048409736, 0.058410847, 0.068411958, 0.078413139, 0.088414236, 0.098415417, 0.108416514, 0.118417681, 0.128418792, 0.138419972, 0.148421069, 0.15842225, 0.168423361, 0.178424528, 0.188425653, 0.198426806, 0.208427931, 0.218429139, 0.228430208, 0.238431375, 0.248432472, 0.258433653, 0.268434764, 0.278435931, 0.288437042, 0.298438208, 0.308439333, 0.3184405, 0.328441597, 0.338442764, 0.348443917, 0.358445042, 0.368446153, 0.378447319, 0.388448389, 0.398449597, 0.408450681, 0.418451861, 0.428452944, 0.438454097, 0.448455264, 0.458456361, 0.468457472, 0.478458708, 0.488459792, 0.498460903, 0.508462014, 0.518463181, 0.528464278, 0.538465444, 0.548466556, 0.558467722, 0.568468819, 0.578469986, 0.588471139, 0.59847225, 0.608473361, 0.618474542, 0.628475639, 0.638476792, 0.648477903, 0.658479069, 0.668480194, 0.678481347, 0.688482486, 0.698483625, 0.708484722, 0.718485875, 0.728486986, 0.738488153, 0.748489333, 0.758490431, 0.768491542, 0.778492681, 0.788493792, 0.798494958, 0.808496069, 0.81849725, 0.828498347, 0.8384995, 0.848500639, 0.858501764, 0.868502903, 0.878504125, 0.888505153, 0.898506306, 0.908507444, 0.918508583, 0.928509722, 0.938510875, 0.948511972, 0.958513125, 0.96851425, 0.978515431, 0.988516514, 0.998517667, 1.008518792, 1.018519986] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:24.005" endtime="20201112 10:17:24.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.000" endtime="20201112 10:17:24.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:24.009" endtime="20201112 10:17:24.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:24.012" endtime="20201112 10:17:24.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.011" endtime="20201112 10:17:24.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.007" endtime="20201112 10:17:24.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.484" endtime="20201112 10:17:24.033"></status>
</kw>
<msg timestamp="20201112 10:17:24.033" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:24.042" endtime="20201112 10:17:26.161"></status>
</kw>
<msg timestamp="20201112 10:17:26.162" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80020283, 'wakeups': [80030399, 80040398, 80050398, 80060398, 800703...</msg>
<status status="PASS" starttime="20201112 10:17:24.040" endtime="20201112 10:17:26.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.168" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80020283, 'wakeups': [80030399, 80040398, 80050398, 80060398, 800703...</msg>
<status status="PASS" starttime="20201112 10:17:26.164" endtime="20201112 10:17:26.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.170" endtime="20201112 10:17:26.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.037" endtime="20201112 10:17:26.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.035" endtime="20201112 10:17:26.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:26.181" level="INFO">${RESULT} = {'start-time': 80020283, 'timer-interval': 10000, 'timer-count': 10, 'wakeups': [80030399, 80040398, 80050398, 80060398, 80070398, 80080398, 80090398, 80100398, 80110398, 80120398, 80130398, 80140398,...</msg>
<status status="PASS" starttime="20201112 10:17:26.177" endtime="20201112 10:17:26.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.189" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:26.187" endtime="20201112 10:17:26.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.193" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:26.191" endtime="20201112 10:17:26.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.182" endtime="20201112 10:17:26.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.203" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:26.202" endtime="20201112 10:17:26.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.205" level="INFO">VALUE: 80020283</msg>
<status status="PASS" starttime="20201112 10:17:26.204" endtime="20201112 10:17:26.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.200" endtime="20201112 10:17:26.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.210" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:26.209" endtime="20201112 10:17:26.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.212" level="INFO">VALUE: [80030399, 80040398, 80050398, 80060398, 80070398, 80080398, 80090398, 80100398, 80110398, 80120398, 80130398, 80140398, 80150398, 80160398, 80170398, 80180398, 80190398, 80200398, 80210398, 80220398, 80230398, 80240398, 80250398, 80260398, 80270398, 80280398, 80290398, 80300398, 80310398, 80320398, 80330398, 80340398, 80350398, 80360398, 80370398, 80380398, 80390398, 80400398, 80410398, 80420398, 80430398, 80440398, 80450398, 80460398, 80470398, 80480398, 80490398, 80500398, 80510398, 80520398, 80530398, 80540398, 80550398, 80560398, 80570398, 80580398, 80590398, 80600398, 80610398, 80620398, 80630398, 80640398, 80650398, 80660398, 80670398, 80680398, 80690398, 80700398, 80710398, 80720398, 80730398, 80740398, 80750398, 80760398, 80770398, 80780398, 80790398, 80800398, 80810398, 80820398, 80830398, 80840398, 80850398, 80860398, 80870398, 80880398, 80890398, 80900398, 80910398, 80920398, 80930398, 80940398, 80950398, 80960398, 80970398, 80980398, 80990398, 81000398, 81010398, 81020398]</msg>
<status status="PASS" starttime="20201112 10:17:26.211" endtime="20201112 10:17:26.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.207" endtime="20201112 10:17:26.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.220" endtime="20201112 10:17:26.509"></status>
</kw>
<msg timestamp="20201112 10:17:26.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019166056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029283278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:26.218" endtime="20201112 10:17:26.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019166056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029283278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:26.513" endtime="20201112 10:17:26.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.520" endtime="20201112 10:17:26.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.216" endtime="20201112 10:17:26.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.214" endtime="20201112 10:17:26.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:26.546" level="INFO">${RESULT} = {'source_diff': [0, 0.010117221999999999, 0.010000125000000002, 0.010001139, 0.010001139, 0.010001125000000007, 0.010001152, 0.010001180999999998, 0.010001097, 0.010001125, 0.010001166999999991, 0.010...</msg>
<status status="PASS" starttime="20201112 10:17:26.523" endtime="20201112 10:17:26.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.551" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:26.550" endtime="20201112 10:17:26.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.553" level="INFO">VALUE: 0.019166056</msg>
<status status="PASS" starttime="20201112 10:17:26.552" endtime="20201112 10:17:26.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.547" endtime="20201112 10:17:26.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.558" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:26.557" endtime="20201112 10:17:26.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.560" level="INFO">VALUE: [0.029283278, 0.039283403, 0.049284542, 0.059285681, 0.069286806, 0.079287958, 0.089289139, 0.099290236, 0.109291361, 0.119292528, 0.129293639, 0.139294861, 0.149295917, 0.159297083, 0.169298222, 0.179299361, 0.189300486, 0.199301639, 0.209302764, 0.219303931, 0.229305042, 0.239306222, 0.249307319, 0.2593085, 0.269309597, 0.279310764, 0.289311889, 0.299313042, 0.309314167, 0.319315333, 0.329316444, 0.339317611, 0.349318736, 0.359319903, 0.369321028, 0.379322167, 0.389323319, 0.3993245, 0.409325569, 0.419326736, 0.429327875, 0.439329014, 0.449330139, 0.459331292, 0.469332431, 0.479333597, 0.489334708, 0.499335861, 0.509337, 0.519338153, 0.529339264, 0.539340458, 0.549341542, 0.559342722, 0.569343833, 0.579344986, 0.589346111, 0.599347264, 0.609348389, 0.619349556, 0.629350667, 0.639351819, 0.649352944, 0.659354111, 0.669355208, 0.679356375, 0.689357472, 0.699358653, 0.709359736, 0.719360903, 0.729362, 0.739363167, 0.749364278, 0.759365431, 0.769366542, 0.779367694, 0.789368806, 0.799369972, 0.809371083, 0.819372264, 0.829373389, 0.839374514, 0.849375625, 0.859376792, 0.869377917, 0.879379056, 0.889380194, 0.899381347, 0.909382458, 0.919383611, 0.929384722, 0.939385875, 0.949387, 0.959388194, 0.969389264, 0.979390431, 0.989391597, 0.999392694, 1.009393889, 1.019394972] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:26.559" endtime="20201112 10:17:26.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.554" endtime="20201112 10:17:26.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.564" endtime="20201112 10:17:26.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:26.568" endtime="20201112 10:17:26.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.566" endtime="20201112 10:17:26.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.562" endtime="20201112 10:17:26.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.034" endtime="20201112 10:17:26.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.924" endtime="20201112 10:17:26.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.923" endtime="20201112 10:17:26.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.099" endtime="20201112 10:17:26.589"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 10:16:06.973" endtime="20201112 10:17:26.590" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:16:02.492" endtime="20201112 10:17:26.593"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 10:13:32.513" endtime="20201112 10:17:26.611"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_arduino-due</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
