<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:42:36.645" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.259" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:40.267" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:41.396" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:40.257" endtime="20201112 09:42:41.397"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.399" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:41.398" endtime="20201112 09:42:41.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.255" endtime="20201112 09:42:41.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.402" endtime="20201112 09:42:41.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.401" endtime="20201112 09:42:41.624"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.638" endtime="20201112 09:42:44.665"></status>
</kw>
<msg timestamp="20201112 09:42:44.666" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.636" endtime="20201112 09:42:44.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.671" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.668" endtime="20201112 09:42:44.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.678" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:44.674" endtime="20201112 09:42:44.679"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.633" endtime="20201112 09:42:44.680"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.631" endtime="20201112 09:42:44.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.629" endtime="20201112 09:42:44.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:44.689" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:44.688" endtime="20201112 09:42:44.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.684" endtime="20201112 09:42:44.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.629" endtime="20201112 09:42:44.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.628" endtime="20201112 09:42:44.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.693" endtime="20201112 09:42:44.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.626" endtime="20201112 09:42:44.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.699" endtime="20201112 09:42:44.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.625" endtime="20201112 09:42:44.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.253" endtime="20201112 09:42:44.704"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.716" endtime="20201112 09:42:44.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.714" endtime="20201112 09:42:44.736"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.754" endtime="20201112 09:42:47.781"></status>
</kw>
<msg timestamp="20201112 09:42:47.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.752" endtime="20201112 09:42:47.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.784" endtime="20201112 09:42:47.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.793" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:47.789" endtime="20201112 09:42:47.794"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.750" endtime="20201112 09:42:47.795"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.747" endtime="20201112 09:42:47.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.743" endtime="20201112 09:42:47.797"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:47.805" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:47.803" endtime="20201112 09:42:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.799" endtime="20201112 09:42:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.742" endtime="20201112 09:42:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.741" endtime="20201112 09:42:47.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.808" endtime="20201112 09:42:47.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.739" endtime="20201112 09:42:47.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.737" endtime="20201112 09:42:47.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.711" endtime="20201112 09:42:47.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.832" endtime="20201112 09:42:47.848"></status>
</kw>
<msg timestamp="20201112 09:42:47.849" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.828" endtime="20201112 09:42:47.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.854" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.851" endtime="20201112 09:42:47.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.857" endtime="20201112 09:42:47.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.820" endtime="20201112 09:42:47.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.816" endtime="20201112 09:42:47.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.873" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:42:47.870" endtime="20201112 09:42:47.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.876" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:42:47.874" endtime="20201112 09:42:47.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.865" endtime="20201112 09:42:47.876"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:44.705" endtime="20201112 09:42:47.877" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:36.755" endtime="20201112 09:42:47.881"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.938" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:47.946" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:49.015" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:47.936" endtime="20201112 09:42:49.015"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.019" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:49.016" endtime="20201112 09:42:49.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.935" endtime="20201112 09:42:49.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.022" endtime="20201112 09:42:49.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.020" endtime="20201112 09:42:49.241"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.253" endtime="20201112 09:42:52.282"></status>
</kw>
<msg timestamp="20201112 09:42:52.283" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.252" endtime="20201112 09:42:52.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.285" endtime="20201112 09:42:52.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.294" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:52.290" endtime="20201112 09:42:52.295"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:49.249" endtime="20201112 09:42:52.297"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:49.247" endtime="20201112 09:42:52.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.246" endtime="20201112 09:42:52.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:52.306" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:52.304" endtime="20201112 09:42:52.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.300" endtime="20201112 09:42:52.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.245" endtime="20201112 09:42:52.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.244" endtime="20201112 09:42:52.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.309" endtime="20201112 09:42:52.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.243" endtime="20201112 09:42:52.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.315" endtime="20201112 09:42:52.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.242" endtime="20201112 09:42:52.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.933" endtime="20201112 09:42:52.320"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.332" endtime="20201112 09:42:52.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.329" endtime="20201112 09:42:52.353"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.366" endtime="20201112 09:42:55.396"></status>
</kw>
<msg timestamp="20201112 09:42:55.397" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.364" endtime="20201112 09:42:55.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.402" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.399" endtime="20201112 09:42:55.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.408" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:55.404" endtime="20201112 09:42:55.409"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:52.362" endtime="20201112 09:42:55.410"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:52.359" endtime="20201112 09:42:55.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.358" endtime="20201112 09:42:55.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:55.419" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:55.418" endtime="20201112 09:42:55.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.414" endtime="20201112 09:42:55.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.357" endtime="20201112 09:42:55.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.357" endtime="20201112 09:42:55.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.423" endtime="20201112 09:42:55.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.355" endtime="20201112 09:42:55.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.353" endtime="20201112 09:42:55.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.326" endtime="20201112 09:42:55.429"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:55.434" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.451" endtime="20201112 09:42:55.466"></status>
</kw>
<msg timestamp="20201112 09:42:55.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.448" endtime="20201112 09:42:55.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.469" endtime="20201112 09:42:55.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.474" endtime="20201112 09:42:55.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.442" endtime="20201112 09:42:55.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.438" endtime="20201112 09:42:55.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.493" endtime="20201112 09:42:55.777"></status>
</kw>
<msg timestamp="20201112 09:42:55.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108880431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108888625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.490" endtime="20201112 09:42:55.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108880431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108888625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.780" endtime="20201112 09:42:55.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.785" endtime="20201112 09:42:55.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.484" endtime="20201112 09:42:55.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.481" endtime="20201112 09:42:55.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.792" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:55.791" endtime="20201112 09:42:55.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.796" level="INFO">VALUE: [{'time': 3.108880431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108888625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999850377e-06, 'source_diff': 8.193999999850377e-06}, {'time': 3.108894139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.513999999706698e-06, 'source_diff': 5.513999999706698e-06}, {'time': 3.108894681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000004363601e-07, 'source_diff': 5.420000004363601e-07}, {'time': 3.108899736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.05499999992054e-06, 'source_diff': 5.05499999992054e-06}, {'time': 3.108900278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.108904431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999895712e-06, 'source_diff': 4.152999999895712e-06}, {'time': 3.108908306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.874999999986528e-06, 'source_diff': 3.874999999986528e-06}, {'time': 3.108908847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.108917653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805999999861314e-06, 'source_diff': 8.805999999861314e-06}, {'time': 3.108925556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000197835e-06, 'source_diff': 7.903000000197835e-06}, {'time': 3.108928056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999053557e-06, 'source_diff': 2.4999999999053557e-06}, {'time': 3.108937861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999918351e-06, 'source_diff': 9.804999999918351e-06}, {'time': 3.108944833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.971999999993983e-06, 'source_diff': 6.971999999993983e-06}, {'time': 3.108952319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000334059e-06, 'source_diff': 7.486000000334059e-06}, {'time': 3.108961528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.208999999898992e-06, 'source_diff': 9.208999999898992e-06}, {'time': 3.108965417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999812626e-06, 'source_diff': 3.888999999812626e-06}, {'time': 3.108970736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000003626e-06, 'source_diff': 5.319000000003626e-06}, {'time': 3.108980139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999963413e-06, 'source_diff': 9.402999999963413e-06}, {'time': 3.108988861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.72200000001655e-06, 'source_diff': 8.72200000001655e-06}, {'time': 3.108991722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8610000000206526e-06, 'source_diff': 2.8610000000206526e-06}, {'time': 3.108995875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1530000003398015e-06, 'source_diff': 4.1530000003398015e-06}, {'time': 3.109005208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.332999999944747e-06, 'source_diff': 9.332999999944747e-06}, {'time': 3.109011056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847999999808451e-06, 'source_diff': 5.847999999808451e-06}, {'time': 3.109018083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.027000000103811e-06, 'source_diff': 7.027000000103811e-06}, {'time': 3.109020583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999053557e-06, 'source_diff': 2.4999999999053557e-06}, {'time': 3.109028083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000160156e-06, 'source_diff': 7.500000000160156e-06}, {'time': 3.109035014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.930999999710252e-06, 'source_diff': 6.930999999710252e-06}, {'time': 3.10903825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.235999999962047e-06, 'source_diff': 3.235999999962047e-06}, {'time': 3.109040736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.486000000079258e-06, 'source_diff': 2.486000000079258e-06}, {'time': 3.109046361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000009095e-06, 'source_diff': 5.625000000009095e-06}, {'time': 3.109052333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.972000000298294e-06, 'source_diff': 5.972000000298294e-06}, {'time': 3.10906225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.9169999998594e-06, 'source_diff': 9.9169999998594e-06}, {'time': 3.109070125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.87500000010155e-06, 'source_diff': 7.87500000010155e-06}, {'time': 3.109073528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4030000000129235e-06, 'source_diff': 3.4030000000129235e-06}, {'time': 3.109082667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.138999999880326e-06, 'source_diff': 9.138999999880326e-06}, {'time': 3.109085264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.596999999937566e-06, 'source_diff': 2.596999999937566e-06}, {'time': 3.109094361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999957944e-06, 'source_diff': 9.096999999957944e-06}, {'time': 3.1091025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000184637e-06, 'source_diff': 8.139000000184637e-06}, {'time': 3.109111903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999963413e-06, 'source_diff': 9.402999999963413e-06}, {'time': 3.109112444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.109116556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.112000000056071e-06, 'source_diff': 4.112000000056071e-06}, {'time': 3.1091255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000177255e-06, 'source_diff': 8.944000000177255e-06}, {'time': 3.109129167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.666999999651921e-06, 'source_diff': 3.666999999651921e-06}, {'time': 3.109129708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000003536197e-07, 'source_diff': 5.410000003536197e-07}, {'time': 3.109137319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.610999999574375e-06, 'source_diff': 7.610999999574375e-06}, {'time': 3.109142694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000196195e-06, 'source_diff': 5.375000000196195e-06}, {'time': 3.109147306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.61200000012596e-06, 'source_diff': 4.61200000012596e-06}, {'time': 3.1091545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1939999997105986e-06, 'source_diff': 7.1939999997105986e-06}, {'time': 3.109155042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.109164083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000209465e-06, 'source_diff': 9.041000000209465e-06}, {'time': 3.109172931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847999999783696e-06, 'source_diff': 8.847999999783696e-06}, {'time': 3.109173472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000003536197e-07, 'source_diff': 5.410000003536197e-07}, {'time': 3.109179903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.430999999640363e-06, 'source_diff': 6.430999999640363e-06}, {'time': 3.109185181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000163985e-06, 'source_diff': 5.278000000163985e-06}, {'time': 3.109190792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000182997e-06, 'source_diff': 5.611000000182997e-06}, {'time': 3.109196847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000060318e-06, 'source_diff': 6.055000000060318e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:55.793" endtime="20201112 09:42:55.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.789" endtime="20201112 09:42:55.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:55.813" level="INFO">${debug-compressed} = {'time': [3.108880431, 3.108888625, 3.108894139, 3.108894681, 3.108899736, 3.108900278, 3.108904431, 3.108908306, 3.108908847, 3.108917653, 3.108925556, 3.108928056, 3.108937861, 3.108944833, 3.108952...</msg>
<status status="PASS" starttime="20201112 09:42:55.799" endtime="20201112 09:42:55.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.817" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:55.816" endtime="20201112 09:42:55.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.820" level="INFO">VALUE: {'time': [3.108880431, 3.108888625, 3.108894139, 3.108894681, 3.108899736, 3.108900278, 3.108904431, 3.108908306, 3.108908847, 3.108917653, 3.108925556, 3.108928056, 3.108937861, 3.108944833, 3.108952319, 3.108961528, 3.108965417, 3.108970736, 3.108980139, 3.108988861, 3.108991722, 3.108995875, 3.109005208, 3.109011056, 3.109018083, 3.109020583, 3.109028083, 3.109035014, 3.10903825, 3.109040736, 3.109046361, 3.109052333, 3.10906225, 3.109070125, 3.109073528, 3.109082667, 3.109085264, 3.109094361, 3.1091025, 3.109111903, 3.109112444, 3.109116556, 3.1091255, 3.109129167, 3.109129708, 3.109137319, 3.109142694, 3.109147306, 3.1091545, 3.109155042, 3.109164083, 3.109172931, 3.109173472, 3.109179903, 3.109185181, 3.109190792, 3.109196847], 'diff': [0, 8.193999999850377e-06, 5.513999999706698e-06, 5.420000004363601e-07, 5.05499999992054e-06, 5.419999999922709e-07, 4.152999999895712e-06, 3.874999999986528e-06, 5.409999999095305e-07, 8.805999999861314e-06, 7.903000000197835e-06, 2.4999999999053557e-06, 9.804999999918351e-06, 6.971999999993983e-06, 7.486000000334059e-06, 9.208999999898992e-06, 3.888999999812626e-06, 5.319000000003626e-06, 9.402999999963413e-06, 8.72200000001655e-06, 2.8610000000206526e-06, 4.1530000003398015e-06, 9.332999999944747e-06, 5.847999999808451e-06, 7.027000000103811e-06, 2.4999999999053557e-06, 7.500000000160156e-06, 6.930999999710252e-06, 3.235999999962047e-06, 2.486000000079258e-06, 5.625000000009095e-06, 5.972000000298294e-06, 9.9169999998594e-06, 7.87500000010155e-06, 3.4030000000129235e-06, 9.138999999880326e-06, 2.596999999937566e-06, 9.096999999957944e-06, 8.139000000184637e-06, 9.402999999963413e-06, 5.409999999095305e-07, 4.112000000056071e-06, 8.944000000177255e-06, 3.666999999651921e-06, 5.410000003536197e-07, 7.610999999574375e-06, 5.375000000196195e-06, 4.61200000012596e-06, 7.1939999997105986e-06, 5.419999999922709e-07, 9.041000000209465e-06, 8.847999999783696e-06, 5.410000003536197e-07, 6.430999999640363e-06, 5.278000000163985e-06, 5.611000000182997e-06, 6.055000000060318e-06], 'eventsourcesource_diff': [0, 8.193999999850377e-06, 5.513999999706698e-06, 5.420000004363601e-07, 5.05499999992054e-06, 5.419999999922709e-07, 4.152999999895712e-06, 3.874999999986528e-06, 5.409999999095305e-07, 8.805999999861314e-06, 7.903000000197835e-06, 2.4999999999053557e-06, 9.804999999918351e-06, 6.971999999993983e-06, 7.486000000334059e-06, 9.208999999898992e-06, 3.888999999812626e-06, 5.319000000003626e-06, 9.402999999963413e-06, 8.72200000001655e-06, 2.8610000000206526e-06, 4.1530000003398015e-06, 9.332999999944747e-06, 5.847999999808451e-06, 7.027000000103811e-06, 2.4999999999053557e-06, 7.500000000160156e-06, 6.930999999710252e-06, 3.235999999962047e-06, 2.486000000079258e-06, 5.625000000009095e-06, 5.972000000298294e-06, 9.9169999998594e-06, 7.87500000010155e-06, 3.4030000000129235e-06, 9.138999999880326e-06, 2.596999999937566e-06, 9.096999999957944e-06, 8.139000000184637e-06, 9.402999999963413e-06, 5.409999999095305e-07, 4.112000000056071e-06, 8.944000000177255e-06, 3.666999999651921e-06, 5.410000003536197e-07, 7.610999999574375e-06, 5.375000000196195e-06, 4.61200000012596e-06, 7.1939999997105986e-06, 5.419999999922709e-07, 9.041000000209465e-06, 8.847999999783696e-06, 5.410000003536197e-07, 6.430999999640363e-06, 5.278000000163985e-06, 5.611000000182997e-06, 6.055000000060318e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:55.818" endtime="20201112 09:42:55.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.814" endtime="20201112 09:42:55.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.825" level="INFO">${RESULT} = [{'time': 3.108888625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999850377e-06, 'source_diff': 8.193999999850377e-06}, {'time': 3.108894681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:55.822" endtime="20201112 09:42:55.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.833" level="INFO">${GPIO_OVERHEAD} = {'time': [3.108888625, 3.108894681, 3.108900278, 3.108908306, 3.108917653, 3.108928056, 3.108944833, 3.108961528, 3.108970736, 3.108988861, 3.108995875, 3.109011056, 3.109020583, 3.109035014, 3.109040...</msg>
<status status="PASS" starttime="20201112 09:42:55.826" endtime="20201112 09:42:55.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.837" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:55.836" endtime="20201112 09:42:55.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.840" level="INFO">VALUE: [8.193999999850377e-06, 5.420000004363601e-07, 5.419999999922709e-07, 3.874999999986528e-06, 8.805999999861314e-06, 2.4999999999053557e-06, 6.971999999993983e-06, 9.208999999898992e-06, 5.319000000003626e-06, 8.72200000001655e-06, 4.1530000003398015e-06, 5.847999999808451e-06, 2.4999999999053557e-06, 6.930999999710252e-06, 2.486000000079258e-06, 5.972000000298294e-06, 7.87500000010155e-06, 9.138999999880326e-06, 9.096999999957944e-06, 9.402999999963413e-06, 4.112000000056071e-06, 3.666999999651921e-06, 7.610999999574375e-06, 4.61200000012596e-06, 5.419999999922709e-07, 8.847999999783696e-06, 6.430999999640363e-06, 5.611000000182997e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.838" endtime="20201112 09:42:55.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.834" endtime="20201112 09:42:55.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.843" endtime="20201112 09:42:55.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.846" endtime="20201112 09:42:55.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.845" endtime="20201112 09:42:55.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.841" endtime="20201112 09:42:55.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.436" endtime="20201112 09:42:55.867"></status>
</kw>
<msg timestamp="20201112 09:42:55.867" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.876" endtime="20201112 09:42:55.887"></status>
</kw>
<msg timestamp="20201112 09:42:55.888" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.874" endtime="20201112 09:42:55.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.890" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.889" endtime="20201112 09:42:55.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.891" endtime="20201112 09:42:55.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.872" endtime="20201112 09:42:55.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.869" endtime="20201112 09:42:55.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.900" endtime="20201112 09:42:56.169"></status>
</kw>
<msg timestamp="20201112 09:42:56.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018223278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.899" endtime="20201112 09:42:56.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018223278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.172" endtime="20201112 09:42:56.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.178" endtime="20201112 09:42:56.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.896" endtime="20201112 09:42:56.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.894" endtime="20201112 09:42:56.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.184" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:56.183" endtime="20201112 09:42:56.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.188" level="INFO">VALUE: [{'time': 0.018223278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018240097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916000000001173e-06, 'source_diff': 8.916000000001173e-06}, {'time': 0.018240639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018242764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.018243306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018251153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018255083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.018257583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.018263181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018266167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018271056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018280681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.018284375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.018291083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.018299056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.018299597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018308153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.018308694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018316556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.86200000000084e-06, 'source_diff': 7.86200000000084e-06}, {'time': 0.018320417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.018328319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902000000000603e-06, 'source_diff': 7.902000000000603e-06}, {'time': 0.018333347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018333889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018337444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.018344167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.018352375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.018355361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018364208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.01836475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018366889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.018376792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.01838475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.018387403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.018390542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018391083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018400361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.018403264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018407917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018416597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018423167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.570000000000881e-06, 'source_diff': 6.570000000000881e-06}, {'time': 0.018425569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.018426111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018433958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018437333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018437875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018445542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018454819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277000000001978e-06, 'source_diff': 9.277000000001978e-06}, {'time': 0.018464222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.0184715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.018476847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.018479819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018487319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.018494514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.018502486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.018503028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018505653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.018515056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.01851825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.194000000001501e-06, 'source_diff': 3.194000000001501e-06}, {'time': 0.018527597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:56.185" endtime="20201112 09:42:56.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.181" endtime="20201112 09:42:56.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:56.207" level="INFO">${debug-compressed} = {'time': [0.018223278, 0.018231181, 0.018240097, 0.018240639, 0.018242764, 0.018243306, 0.018251153, 0.018255083, 0.018257583, 0.018263181, 0.018266167, 0.018271056, 0.018280681, 0.018284375, 0.018291...</msg>
<status status="PASS" starttime="20201112 09:42:56.191" endtime="20201112 09:42:56.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.211" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:56.210" endtime="20201112 09:42:56.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.214" level="INFO">VALUE: {'time': [0.018223278, 0.018231181, 0.018240097, 0.018240639, 0.018242764, 0.018243306, 0.018251153, 0.018255083, 0.018257583, 0.018263181, 0.018266167, 0.018271056, 0.018280681, 0.018284375, 0.018291083, 0.018299056, 0.018299597, 0.018308153, 0.018308694, 0.018316556, 0.018320417, 0.018328319, 0.018333347, 0.018333889, 0.018337444, 0.018344167, 0.018352375, 0.018355361, 0.018364208, 0.01836475, 0.018366889, 0.018376792, 0.01838475, 0.018387403, 0.018390542, 0.018391083, 0.018400361, 0.018403264, 0.018407917, 0.018416597, 0.018423167, 0.018425569, 0.018426111, 0.018433958, 0.018437333, 0.018437875, 0.018445, 0.018445542, 0.018454819, 0.018464222, 0.0184715, 0.018476847, 0.018479819, 0.018487319, 0.018494514, 0.018502486, 0.018503028, 0.018505653, 0.018515056, 0.01851825, 0.018527597], 'diff': [0, 7.903000000000077e-06, 8.916000000001173e-06, 5.419999999992098e-07, 2.125000000002125e-06, 5.419999999992098e-07, 7.846999999998328e-06, 3.929999999999212e-06, 2.5000000000025002e-06, 5.5979999999990204e-06, 2.985999999999961e-06, 4.889000000000976e-06, 9.624999999999218e-06, 3.693999999998532e-06, 6.708000000001102e-06, 7.973000000001396e-06, 5.409999999997361e-07, 8.555999999999842e-06, 5.409999999997361e-07, 7.86200000000084e-06, 3.8609999999973665e-06, 7.902000000000603e-06, 5.028000000000671e-06, 5.419999999992098e-07, 3.5550000000023063e-06, 6.7230000000001455e-06, 8.207999999999133e-06, 2.985999999999961e-06, 8.846999999999328e-06, 5.419999999992098e-07, 2.139000000001695e-06, 9.902999999998607e-06, 7.957999999998883e-06, 2.653000000001765e-06, 3.1389999999992257e-06, 5.409999999997361e-07, 9.278000000001452e-06, 2.9029999999985456e-06, 4.653000000000296e-06, 8.680000000000493e-06, 6.570000000000881e-06, 2.401999999998572e-06, 5.419999999992098e-07, 7.847000000001797e-06, 3.374999999999906e-06, 5.419999999992098e-07, 7.125000000000187e-06, 5.419999999992098e-07, 9.277000000001978e-06, 9.402999999998107e-06, 7.2779999999994516e-06, 5.347000000002766e-06, 2.972000000000391e-06, 7.499999999997092e-06, 7.195000000001506e-06, 7.971999999998453e-06, 5.420000000026792e-07, 2.6249999999991558e-06, 9.402999999998107e-06, 3.194000000001501e-06, 9.346999999999828e-06], 'eventsourcesource_diff': [0, 7.903000000000077e-06, 8.916000000001173e-06, 5.419999999992098e-07, 2.125000000002125e-06, 5.419999999992098e-07, 7.846999999998328e-06, 3.929999999999212e-06, 2.5000000000025002e-06, 5.5979999999990204e-06, 2.985999999999961e-06, 4.889000000000976e-06, 9.624999999999218e-06, 3.693999999998532e-06, 6.708000000001102e-06, 7.973000000001396e-06, 5.409999999997361e-07, 8.555999999999842e-06, 5.409999999997361e-07, 7.86200000000084e-06, 3.8609999999973665e-06, 7.902000000000603e-06, 5.028000000000671e-06, 5.419999999992098e-07, 3.5550000000023063e-06, 6.7230000000001455e-06, 8.207999999999133e-06, 2.985999999999961e-06, 8.846999999999328e-06, 5.419999999992098e-07, 2.139000000001695e-06, 9.902999999998607e-06, 7.957999999998883e-06, 2.653000000001765e-06, 3.1389999999992257e-06, 5.409999999997361e-07, 9.278000000001452e-06, 2.9029999999985456e-06, 4.653000000000296e-06, 8.680000000000493e-06, 6.570000000000881e-06, 2.401999999998572e-06, 5.419999999992098e-07, 7.847000000001797e-06, 3.374999999999906e-06, 5.419999999992098e-07, 7.125000000000187e-06, 5.419999999992098e-07, 9.277000000001978e-06, 9.402999999998107e-06, 7.2779999999994516e-06, 5.347000000002766e-06, 2.972000000000391e-06, 7.499999999997092e-06, 7.195000000001506e-06, 7.971999999998453e-06, 5.420000000026792e-07, 2.6249999999991558e-06, 9.402999999998107e-06, 3.194000000001501e-06, 9.346999999999828e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:56.212" endtime="20201112 09:42:56.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.208" endtime="20201112 09:42:56.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.219" level="INFO">${RESULT} = [{'time': 0.018231181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018240639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:56.216" endtime="20201112 09:42:56.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.228" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018231181, 0.018240639, 0.018243306, 0.018255083, 0.018263181, 0.018271056, 0.018284375, 0.018299056, 0.018308153, 0.018316556, 0.018328319, 0.018333889, 0.018344167, 0.018355361, 0.018364...</msg>
<status status="PASS" starttime="20201112 09:42:56.220" endtime="20201112 09:42:56.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.232" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:56.231" endtime="20201112 09:42:56.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.235" level="INFO">VALUE: [7.903000000000077e-06, 5.419999999992098e-07, 5.419999999992098e-07, 3.929999999999212e-06, 5.5979999999990204e-06, 4.889000000000976e-06, 3.693999999998532e-06, 7.973000000001396e-06, 8.555999999999842e-06, 7.86200000000084e-06, 7.902000000000603e-06, 5.419999999992098e-07, 6.7230000000001455e-06, 2.985999999999961e-06, 5.419999999992098e-07, 9.902999999998607e-06, 2.653000000001765e-06, 5.409999999997361e-07, 2.9029999999985456e-06, 8.680000000000493e-06, 2.401999999998572e-06, 7.847000000001797e-06, 5.419999999992098e-07, 5.419999999992098e-07, 9.402999999998107e-06, 5.347000000002766e-06, 7.499999999997092e-06, 7.971999999998453e-06, 2.6249999999991558e-06, 3.194000000001501e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.234" endtime="20201112 09:42:56.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.229" endtime="20201112 09:42:56.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.238" endtime="20201112 09:42:56.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.241" endtime="20201112 09:42:56.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.240" endtime="20201112 09:42:56.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.236" endtime="20201112 09:42:56.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.868" endtime="20201112 09:42:56.262"></status>
</kw>
<msg timestamp="20201112 09:42:56.262" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.270" endtime="20201112 09:42:56.281"></status>
</kw>
<msg timestamp="20201112 09:42:56.281" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.268" endtime="20201112 09:42:56.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.282" endtime="20201112 09:42:56.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.285" endtime="20201112 09:42:56.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.266" endtime="20201112 09:42:56.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.264" endtime="20201112 09:42:56.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.294" endtime="20201112 09:42:56.559"></status>
</kw>
<msg timestamp="20201112 09:42:56.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018264681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018272194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.292" endtime="20201112 09:42:56.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018264681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018272194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.562" endtime="20201112 09:42:56.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.568" endtime="20201112 09:42:56.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.290" endtime="20201112 09:42:56.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.288" endtime="20201112 09:42:56.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.574" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:56.573" endtime="20201112 09:42:56.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.578" level="INFO">VALUE: [{'time': 0.018264681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018272194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.512999999997189e-06, 'source_diff': 7.512999999997189e-06}, {'time': 0.018277764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.018283833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.018290792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.018299167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.018303736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018304278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018311958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.018314389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018324194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.018328056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86200000000031e-06, 'source_diff': 3.86200000000031e-06}, {'time': 0.018333653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018342583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.018348431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.018352528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018360736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.018364667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.018372153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.018375431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.018383042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.018390958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916000000000173e-06, 'source_diff': 7.916000000000173e-06}, {'time': 0.018398208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018404444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018412347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018421042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.018430458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.416000000001673e-06, 'source_diff': 9.416000000001673e-06}, {'time': 0.018436931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.01844625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018446792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018451375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018458347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018463389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018472556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.018479306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.018482, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.0184845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.018489069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018495861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018505681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.018513819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138000000001283e-06, 'source_diff': 8.138000000001283e-06}, {'time': 0.018519583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.018526361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.778000000002421e-06, 'source_diff': 6.778000000002421e-06}, {'time': 0.018533389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018539222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018548333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.018554389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.018558319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.018562889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.018565861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018566403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018575528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.125000000002187e-06, 'source_diff': 9.125000000002187e-06}, {'time': 0.018581111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:56.575" endtime="20201112 09:42:56.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.571" endtime="20201112 09:42:56.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:56.594" level="INFO">${debug-compressed} = {'time': [0.018264681, 0.018272194, 0.018277764, 0.018283833, 0.018290792, 0.018299167, 0.018303736, 0.018304278, 0.018311958, 0.018314389, 0.018324194, 0.018328056, 0.018333653, 0.018342583, 0.018348...</msg>
<status status="PASS" starttime="20201112 09:42:56.580" endtime="20201112 09:42:56.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.597" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:56.596" endtime="20201112 09:42:56.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.601" level="INFO">VALUE: {'time': [0.018264681, 0.018272194, 0.018277764, 0.018283833, 0.018290792, 0.018299167, 0.018303736, 0.018304278, 0.018311958, 0.018314389, 0.018324194, 0.018328056, 0.018333653, 0.018342583, 0.018348431, 0.018352528, 0.018360736, 0.018364667, 0.018372153, 0.018375431, 0.018383042, 0.018390958, 0.018398208, 0.018404444, 0.018412347, 0.018421042, 0.018430458, 0.018436931, 0.01844625, 0.018446792, 0.018451375, 0.018458347, 0.018463389, 0.018472556, 0.018479306, 0.018482, 0.0184845, 0.018489069, 0.018495861, 0.018505681, 0.018513819, 0.018519583, 0.018526361, 0.018533389, 0.018539222, 0.018548333, 0.018554389, 0.018558319, 0.018562889, 0.018565861, 0.018566403, 0.018575528, 0.018581111], 'diff': [0, 7.512999999997189e-06, 5.569999999999881e-06, 6.069000000000907e-06, 6.959000000000826e-06, 8.375000000001437e-06, 4.568999999999407e-06, 5.419999999992098e-07, 7.679999999999493e-06, 2.431000000000655e-06, 9.804999999998149e-06, 3.86200000000031e-06, 5.596999999999547e-06, 8.930000000000743e-06, 5.8479999999992704e-06, 4.097000000001516e-06, 8.207999999999133e-06, 3.931000000002155e-06, 7.485999999997522e-06, 3.27800000000239e-06, 7.6109999999976474e-06, 7.916000000000173e-06, 7.250000000000312e-06, 6.235999999999742e-06, 7.903000000000077e-06, 8.694999999999536e-06, 9.416000000001673e-06, 6.4729999999998955e-06, 9.319000000000688e-06, 5.419999999992098e-07, 4.582999999998977e-06, 6.972000000000922e-06, 5.042000000000241e-06, 9.167000000000897e-06, 6.749999999999812e-06, 2.6939999999975317e-06, 2.5000000000025002e-06, 4.568999999999407e-06, 6.7919999999985214e-06, 9.820000000000662e-06, 8.138000000001283e-06, 5.7639999999983815e-06, 6.778000000002421e-06, 7.0279999999992016e-06, 5.833000000000227e-06, 9.110999999999148e-06, 6.056000000000811e-06, 3.929999999999212e-06, 4.5699999999988805e-06, 2.972000000000391e-06, 5.419999999992098e-07, 9.125000000002187e-06, 5.582999999999977e-06], 'eventsourcesource_diff': [0, 7.512999999997189e-06, 5.569999999999881e-06, 6.069000000000907e-06, 6.959000000000826e-06, 8.375000000001437e-06, 4.568999999999407e-06, 5.419999999992098e-07, 7.679999999999493e-06, 2.431000000000655e-06, 9.804999999998149e-06, 3.86200000000031e-06, 5.596999999999547e-06, 8.930000000000743e-06, 5.8479999999992704e-06, 4.097000000001516e-06, 8.207999999999133e-06, 3.931000000002155e-06, 7.485999999997522e-06, 3.27800000000239e-06, 7.6109999999976474e-06, 7.916000000000173e-06, 7.250000000000312e-06, 6.235999999999742e-06, 7.903000000000077e-06, 8.694999999999536e-06, 9.416000000001673e-06, 6.4729999999998955e-06, 9.319000000000688e-06, 5.419999999992098e-07, 4.582999999998977e-06, 6.972000000000922e-06, 5.042000000000241e-06, 9.167000000000897e-06, 6.749999999999812e-06, 2.6939999999975317e-06, 2.5000000000025002e-06, 4.568999999999407e-06, 6.7919999999985214e-06, 9.820000000000662e-06, 8.138000000001283e-06, 5.7639999999983815e-06, 6.778000000002421e-06, 7.0279999999992016e-06, 5.833000000000227e-06, 9.110999999999148e-06, 6.056000000000811e-06, 3.929999999999212e-06, 4.5699999999988805e-06, 2.972000000000391e-06, 5.419999999992098e-07, 9.125000000002187e-06, 5.582999999999977e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:56.599" endtime="20201112 09:42:56.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.594" endtime="20201112 09:42:56.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.605" level="INFO">${RESULT} = [{'time': 0.018272194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.512999999997189e-06, 'source_diff': 7.512999999997189e-06}, {'time': 0.018283833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:56.602" endtime="20201112 09:42:56.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.613" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018272194, 0.018283833, 0.018299167, 0.018304278, 0.018314389, 0.018328056, 0.018342583, 0.018352528, 0.018364667, 0.018375431, 0.018390958, 0.018404444, 0.018421042, 0.018436931, 0.018446...</msg>
<status status="PASS" starttime="20201112 09:42:56.606" endtime="20201112 09:42:56.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.618" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:56.617" endtime="20201112 09:42:56.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.620" level="INFO">VALUE: [7.512999999997189e-06, 6.069000000000907e-06, 8.375000000001437e-06, 5.419999999992098e-07, 2.431000000000655e-06, 3.86200000000031e-06, 8.930000000000743e-06, 4.097000000001516e-06, 3.931000000002155e-06, 3.27800000000239e-06, 7.916000000000173e-06, 6.235999999999742e-06, 8.694999999999536e-06, 6.4729999999998955e-06, 5.419999999992098e-07, 6.972000000000922e-06, 9.167000000000897e-06, 2.6939999999975317e-06, 4.568999999999407e-06, 9.820000000000662e-06, 5.7639999999983815e-06, 7.0279999999992016e-06, 9.110999999999148e-06, 3.929999999999212e-06, 2.972000000000391e-06, 9.125000000002187e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.619" endtime="20201112 09:42:56.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.614" endtime="20201112 09:42:56.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.623" endtime="20201112 09:42:56.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.627" endtime="20201112 09:42:56.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.626" endtime="20201112 09:42:56.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.622" endtime="20201112 09:42:56.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.263" endtime="20201112 09:42:56.648"></status>
</kw>
<msg timestamp="20201112 09:42:56.648" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.656" endtime="20201112 09:42:56.667"></status>
</kw>
<msg timestamp="20201112 09:42:56.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.654" endtime="20201112 09:42:56.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.668" endtime="20201112 09:42:56.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.671" endtime="20201112 09:42:56.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.652" endtime="20201112 09:42:56.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.650" endtime="20201112 09:42:56.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.680" endtime="20201112 09:42:56.950"></status>
</kw>
<msg timestamp="20201112 09:42:56.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017574708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01757525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:56.678" endtime="20201112 09:42:56.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017574708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01757525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:56.953" endtime="20201112 09:42:56.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.959" endtime="20201112 09:42:56.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.675" endtime="20201112 09:42:56.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.674" endtime="20201112 09:42:56.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.965" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:56.964" endtime="20201112 09:42:56.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.969" level="INFO">VALUE: [{'time': 0.017574708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01757525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017580958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.017585042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.017585583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017594694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.111000000002617e-06, 'source_diff': 9.111000000002617e-06}, {'time': 0.017599278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.017607722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.017617056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.017623125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017632944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.017637028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.017643375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000000297e-06, 'source_diff': 6.347000000000297e-06}, {'time': 0.017646569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.194000000001501e-06, 'source_diff': 3.194000000001501e-06}, {'time': 0.017656431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.861999999999371e-06, 'source_diff': 9.861999999999371e-06}, {'time': 0.017656972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017663389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.017666778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017674278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.017677722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.017685889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.017695694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.017702875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.017706556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6809999999984355e-06, 'source_diff': 3.6809999999984355e-06}, {'time': 0.017707097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.017715903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.017723319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.017723861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0177325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.017740653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.017746472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.017749611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.017752278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.017757806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017762708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.901999999997603e-06, 'source_diff': 4.901999999997603e-06}, {'time': 0.017767333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.017776903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.017784167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.017786681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017790361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6800000000024313e-06, 'source_diff': 3.6800000000024313e-06}, {'time': 0.017794208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.01779475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017802903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.017812069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.166000000001423e-06, 'source_diff': 9.166000000001423e-06}, {'time': 0.017812611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017818153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017821583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.017829194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.017836, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.017844444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.017848056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6120000000000596e-06, 'source_diff': 3.6120000000000596e-06}, {'time': 0.017853819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.017862444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.017865889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4449999999977554e-06, 'source_diff': 3.4449999999977554e-06}, {'time': 0.017874278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.017880986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.017883722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:56.966" endtime="20201112 09:42:56.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.962" endtime="20201112 09:42:56.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:56.986" level="INFO">${debug-compressed} = {'time': [0.017574708, 0.01757525, 0.017580958, 0.017585042, 0.017585583, 0.017594694, 0.017599278, 0.017607722, 0.017617056, 0.017623125, 0.017632944, 0.017637028, 0.017643375, 0.017646569, 0.0176564...</msg>
<status status="PASS" starttime="20201112 09:42:56.972" endtime="20201112 09:42:56.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.990" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:56.989" endtime="20201112 09:42:56.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.993" level="INFO">VALUE: {'time': [0.017574708, 0.01757525, 0.017580958, 0.017585042, 0.017585583, 0.017594694, 0.017599278, 0.017607722, 0.017617056, 0.017623125, 0.017632944, 0.017637028, 0.017643375, 0.017646569, 0.017656431, 0.017656972, 0.017663389, 0.017666778, 0.017674278, 0.017677722, 0.017685889, 0.017695694, 0.017702875, 0.017706556, 0.017707097, 0.017715903, 0.017723319, 0.017723861, 0.0177325, 0.017740653, 0.017746472, 0.017749611, 0.017752278, 0.017757806, 0.017762708, 0.017767333, 0.017776903, 0.017784167, 0.017786681, 0.017790361, 0.017794208, 0.01779475, 0.017802903, 0.017812069, 0.017812611, 0.017818153, 0.017821583, 0.017829194, 0.017836, 0.017844444, 0.017848056, 0.017853819, 0.017862444, 0.017865889, 0.017874278, 0.017880986, 0.017883722], 'diff': [0, 5.419999999992098e-07, 5.708000000000102e-06, 4.08399999999795e-06, 5.409999999997361e-07, 9.111000000002617e-06, 4.5839999999984504e-06, 8.443999999999813e-06, 9.333999999999731e-06, 6.069000000000907e-06, 9.819000000001188e-06, 4.08399999999795e-06, 6.347000000000297e-06, 3.194000000001501e-06, 9.861999999999371e-06, 5.409999999997361e-07, 6.417000000001616e-06, 3.3889999999994758e-06, 7.500000000000562e-06, 3.4439999999982818e-06, 8.166999999999897e-06, 9.805000000001618e-06, 7.180999999998466e-06, 3.6809999999984355e-06, 5.410000000032056e-07, 8.806000000000092e-06, 7.415999999999673e-06, 5.419999999992098e-07, 8.639000000001257e-06, 8.152999999996857e-06, 5.819000000000657e-06, 3.1389999999992257e-06, 2.667000000001335e-06, 5.528000000001171e-06, 4.901999999997603e-06, 4.625000000001156e-06, 9.570000000000412e-06, 7.263999999999882e-06, 2.5139999999986007e-06, 3.6800000000024313e-06, 3.846999999997797e-06, 5.420000000026792e-07, 8.152999999996857e-06, 9.166000000001423e-06, 5.419999999992098e-07, 5.542000000000741e-06, 3.429999999998712e-06, 7.611000000001117e-06, 6.806000000001561e-06, 8.443999999999813e-06, 3.6120000000000596e-06, 5.762999999998908e-06, 8.625000000001687e-06, 3.4449999999977554e-06, 8.389000000001007e-06, 6.708000000001102e-06, 2.735999999999711e-06], 'eventsourcesource_diff': [0, 5.419999999992098e-07, 5.708000000000102e-06, 4.08399999999795e-06, 5.409999999997361e-07, 9.111000000002617e-06, 4.5839999999984504e-06, 8.443999999999813e-06, 9.333999999999731e-06, 6.069000000000907e-06, 9.819000000001188e-06, 4.08399999999795e-06, 6.347000000000297e-06, 3.194000000001501e-06, 9.861999999999371e-06, 5.409999999997361e-07, 6.417000000001616e-06, 3.3889999999994758e-06, 7.500000000000562e-06, 3.4439999999982818e-06, 8.166999999999897e-06, 9.805000000001618e-06, 7.180999999998466e-06, 3.6809999999984355e-06, 5.410000000032056e-07, 8.806000000000092e-06, 7.415999999999673e-06, 5.419999999992098e-07, 8.639000000001257e-06, 8.152999999996857e-06, 5.819000000000657e-06, 3.1389999999992257e-06, 2.667000000001335e-06, 5.528000000001171e-06, 4.901999999997603e-06, 4.625000000001156e-06, 9.570000000000412e-06, 7.263999999999882e-06, 2.5139999999986007e-06, 3.6800000000024313e-06, 3.846999999997797e-06, 5.420000000026792e-07, 8.152999999996857e-06, 9.166000000001423e-06, 5.419999999992098e-07, 5.542000000000741e-06, 3.429999999998712e-06, 7.611000000001117e-06, 6.806000000001561e-06, 8.443999999999813e-06, 3.6120000000000596e-06, 5.762999999998908e-06, 8.625000000001687e-06, 3.4449999999977554e-06, 8.389000000001007e-06, 6.708000000001102e-06, 2.735999999999711e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:56.991" endtime="20201112 09:42:56.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.987" endtime="20201112 09:42:56.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.998" level="INFO">${RESULT} = [{'time': 0.01757525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017585042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:42:56.995" endtime="20201112 09:42:56.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.006" level="INFO">${GPIO_OVERHEAD} = {'time': [0.01757525, 0.017585042, 0.017594694, 0.017607722, 0.017623125, 0.017637028, 0.017646569, 0.017656972, 0.017666778, 0.017677722, 0.017695694, 0.017706556, 0.017715903, 0.017723861, 0.0177406...</msg>
<status status="PASS" starttime="20201112 09:42:56.999" endtime="20201112 09:42:57.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.010" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:57.009" endtime="20201112 09:42:57.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.013" level="INFO">VALUE: [5.419999999992098e-07, 4.08399999999795e-06, 9.111000000002617e-06, 8.443999999999813e-06, 6.069000000000907e-06, 4.08399999999795e-06, 3.194000000001501e-06, 5.409999999997361e-07, 3.3889999999994758e-06, 3.4439999999982818e-06, 9.805000000001618e-06, 3.6809999999984355e-06, 8.806000000000092e-06, 5.419999999992098e-07, 8.152999999996857e-06, 3.1389999999992257e-06, 5.528000000001171e-06, 4.625000000001156e-06, 7.263999999999882e-06, 3.6800000000024313e-06, 5.420000000026792e-07, 9.166000000001423e-06, 5.542000000000741e-06, 7.611000000001117e-06, 8.443999999999813e-06, 5.762999999998908e-06, 3.4449999999977554e-06, 6.708000000001102e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.012" endtime="20201112 09:42:57.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.007" endtime="20201112 09:42:57.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.016" endtime="20201112 09:42:57.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.020" endtime="20201112 09:42:57.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.018" endtime="20201112 09:42:57.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.015" endtime="20201112 09:42:57.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.649" endtime="20201112 09:42:57.040"></status>
</kw>
<msg timestamp="20201112 09:42:57.041" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.048" endtime="20201112 09:42:57.059"></status>
</kw>
<msg timestamp="20201112 09:42:57.060" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.047" endtime="20201112 09:42:57.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.062" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.061" endtime="20201112 09:42:57.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.063" endtime="20201112 09:42:57.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.044" endtime="20201112 09:42:57.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.042" endtime="20201112 09:42:57.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.073" endtime="20201112 09:42:57.348"></status>
</kw>
<msg timestamp="20201112 09:42:57.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017385694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.072" endtime="20201112 09:42:57.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017385694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.351" endtime="20201112 09:42:57.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.358" endtime="20201112 09:42:57.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.068" endtime="20201112 09:42:57.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.066" endtime="20201112 09:42:57.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.364" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:57.363" endtime="20201112 09:42:57.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.368" level="INFO">VALUE: [{'time': 0.017385694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017395625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017403056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.017408889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017418153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.017425375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.017429028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017431528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.017439917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.017443056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.017451264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.017451806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017458778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.017466931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.017472028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017472569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017477083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.017481722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017482264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017488681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999998146e-06, 'source_diff': 6.416999999998146e-06}, {'time': 0.017495153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.017503861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.017507542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.681000000001905e-06, 'source_diff': 3.681000000001905e-06}, {'time': 0.017515222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.017519306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.017524347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.01752875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017529292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017531736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017540125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.017546181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.017546722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017552014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017552556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017560403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.0175645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017573375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.017579667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.017584014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017591083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069000000001907e-06, 'source_diff': 7.069000000001907e-06}, {'time': 0.017599875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.017600417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017609708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.017614333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.017621403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.070000000001381e-06, 'source_diff': 7.070000000001381e-06}, {'time': 0.017624333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.017624875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017627958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0829999999974766e-06, 'source_diff': 3.0829999999974766e-06}, {'time': 0.017631833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017637417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.017646264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.017646806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017651153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017660083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.017667347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.017670319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017676625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.017683417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:57.365" endtime="20201112 09:42:57.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.361" endtime="20201112 09:42:57.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:57.385" level="INFO">${debug-compressed} = {'time': [0.017385694, 0.017390097, 0.017395625, 0.017403056, 0.017408889, 0.017418153, 0.017425375, 0.017429028, 0.017431528, 0.017439917, 0.017443056, 0.017451264, 0.017451806, 0.017458778, 0.017466...</msg>
<status status="PASS" starttime="20201112 09:42:57.370" endtime="20201112 09:42:57.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.389" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:57.388" endtime="20201112 09:42:57.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.392" level="INFO">VALUE: {'time': [0.017385694, 0.017390097, 0.017395625, 0.017403056, 0.017408889, 0.017418153, 0.017425375, 0.017429028, 0.017431528, 0.017439917, 0.017443056, 0.017451264, 0.017451806, 0.017458778, 0.017466931, 0.017472028, 0.017472569, 0.017477083, 0.017481722, 0.017482264, 0.017488681, 0.017495153, 0.017503861, 0.017507542, 0.017515222, 0.017519306, 0.017524347, 0.01752875, 0.017529292, 0.017531736, 0.017540125, 0.017546181, 0.017546722, 0.017552014, 0.017552556, 0.017560403, 0.0175645, 0.017573375, 0.017579667, 0.017584014, 0.017591083, 0.017599875, 0.017600417, 0.017609708, 0.017614333, 0.017621403, 0.017624333, 0.017624875, 0.017627958, 0.017631833, 0.017637417, 0.017646264, 0.017646806, 0.017651153, 0.017660083, 0.017667347, 0.017670319, 0.017676625, 0.017683417], 'diff': [0, 4.403000000000046e-06, 5.528000000001171e-06, 7.430999999998716e-06, 5.833000000000227e-06, 9.263999999998412e-06, 7.222000000001172e-06, 3.6529999999992957e-06, 2.5000000000025002e-06, 8.388999999997537e-06, 3.1389999999992257e-06, 8.208000000002602e-06, 5.419999999992098e-07, 6.972000000000922e-06, 8.153000000000327e-06, 5.096999999999047e-06, 5.409999999997361e-07, 4.514000000000601e-06, 4.639000000000726e-06, 5.419999999992098e-07, 6.416999999998146e-06, 6.472000000000422e-06, 8.707999999999633e-06, 3.681000000001905e-06, 7.679999999999493e-06, 4.08399999999795e-06, 5.041000000000767e-06, 4.403000000000046e-06, 5.419999999992098e-07, 2.444000000000751e-06, 8.389000000001007e-06, 6.056000000000811e-06, 5.409999999997361e-07, 5.292000000000491e-06, 5.419999999992098e-07, 7.846999999998328e-06, 4.097000000001516e-06, 8.874999999998467e-06, 6.292000000001491e-06, 4.346999999998297e-06, 7.069000000001907e-06, 8.792000000000522e-06, 5.419999999992098e-07, 9.291000000001548e-06, 4.6249999999976865e-06, 7.070000000001381e-06, 2.929999999998212e-06, 5.420000000026792e-07, 3.0829999999974766e-06, 3.875000000000406e-06, 5.5839999999994505e-06, 8.846999999999328e-06, 5.420000000026792e-07, 4.346999999998297e-06, 8.930000000000743e-06, 7.263999999999882e-06, 2.972000000000391e-06, 6.306000000001061e-06, 6.7919999999985214e-06], 'eventsourcesource_diff': [0, 4.403000000000046e-06, 5.528000000001171e-06, 7.430999999998716e-06, 5.833000000000227e-06, 9.263999999998412e-06, 7.222000000001172e-06, 3.6529999999992957e-06, 2.5000000000025002e-06, 8.388999999997537e-06, 3.1389999999992257e-06, 8.208000000002602e-06, 5.419999999992098e-07, 6.972000000000922e-06, 8.153000000000327e-06, 5.096999999999047e-06, 5.409999999997361e-07, 4.514000000000601e-06, 4.639000000000726e-06, 5.419999999992098e-07, 6.416999999998146e-06, 6.472000000000422e-06, 8.707999999999633e-06, 3.681000000001905e-06, 7.679999999999493e-06, 4.08399999999795e-06, 5.041000000000767e-06, 4.403000000000046e-06, 5.419999999992098e-07, 2.444000000000751e-06, 8.389000000001007e-06, 6.056000000000811e-06, 5.409999999997361e-07, 5.292000000000491e-06, 5.419999999992098e-07, 7.846999999998328e-06, 4.097000000001516e-06, 8.874999999998467e-06, 6.292000000001491e-06, 4.346999999998297e-06, 7.069000000001907e-06, 8.792000000000522e-06, 5.419999999992098e-07, 9.291000000001548e-06, 4.6249999999976865e-06, 7.070000000001381e-06, 2.929999999998212e-06, 5.420000000026792e-07, 3.0829999999974766e-06, 3.875000000000406e-06, 5.5839999999994505e-06, 8.846999999999328e-06, 5.420000000026792e-07, 4.346999999998297e-06, 8.930000000000743e-06, 7.263999999999882e-06, 2.972000000000391e-06, 6.306000000001061e-06, 6.7919999999985214e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:57.390" endtime="20201112 09:42:57.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.386" endtime="20201112 09:42:57.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.397" level="INFO">${RESULT} = [{'time': 0.017390097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017403056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:57.394" endtime="20201112 09:42:57.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.406" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017390097, 0.017403056, 0.017418153, 0.017429028, 0.017439917, 0.017451264, 0.017458778, 0.017472028, 0.017477083, 0.017482264, 0.017495153, 0.017507542, 0.017519306, 0.01752875, 0.0175317...</msg>
<status status="PASS" starttime="20201112 09:42:57.398" endtime="20201112 09:42:57.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.410" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:57.409" endtime="20201112 09:42:57.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.413" level="INFO">VALUE: [4.403000000000046e-06, 7.430999999998716e-06, 9.263999999998412e-06, 3.6529999999992957e-06, 8.388999999997537e-06, 8.208000000002602e-06, 6.972000000000922e-06, 5.096999999999047e-06, 4.514000000000601e-06, 5.419999999992098e-07, 6.472000000000422e-06, 3.681000000001905e-06, 4.08399999999795e-06, 4.403000000000046e-06, 2.444000000000751e-06, 6.056000000000811e-06, 5.292000000000491e-06, 7.846999999998328e-06, 8.874999999998467e-06, 4.346999999998297e-06, 8.792000000000522e-06, 9.291000000001548e-06, 7.070000000001381e-06, 5.420000000026792e-07, 3.875000000000406e-06, 8.846999999999328e-06, 4.346999999998297e-06, 7.263999999999882e-06, 6.306000000001061e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.411" endtime="20201112 09:42:57.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.407" endtime="20201112 09:42:57.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.416" endtime="20201112 09:42:57.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.419" endtime="20201112 09:42:57.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.418" endtime="20201112 09:42:57.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.414" endtime="20201112 09:42:57.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.041" endtime="20201112 09:42:57.440"></status>
</kw>
<msg timestamp="20201112 09:42:57.440" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.448" endtime="20201112 09:42:57.459"></status>
</kw>
<msg timestamp="20201112 09:42:57.460" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.446" endtime="20201112 09:42:57.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.462" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.461" endtime="20201112 09:42:57.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.463" endtime="20201112 09:42:57.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.444" endtime="20201112 09:42:57.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.442" endtime="20201112 09:42:57.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.472" endtime="20201112 09:42:57.738"></status>
</kw>
<msg timestamp="20201112 09:42:57.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017348125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0173515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:57.470" endtime="20201112 09:42:57.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017348125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0173515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:57.741" endtime="20201112 09:42:57.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.746" endtime="20201112 09:42:57.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.468" endtime="20201112 09:42:57.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.466" endtime="20201112 09:42:57.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.753" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:57.752" endtime="20201112 09:42:57.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.758" level="INFO">VALUE: [{'time': 0.017348125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0173515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017352042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017356083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017362861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.017366083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017373097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.017373639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017376736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017379458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017383, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.017389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.01739625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.249999999996842e-06, 'source_diff': 7.249999999996842e-06}, {'time': 0.017399181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.017405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.017412653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.017420319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.017427125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.017432639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.017440861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.017449958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.097000000003047e-06, 'source_diff': 9.097000000003047e-06}, {'time': 0.017454528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.017459097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.017467958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.017477278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.017477819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017486611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.017487153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017496431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.017502028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017505403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017511403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017519556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.017522222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.017530194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.017535958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.017543958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.999999999997592e-06, 'source_diff': 7.999999999997592e-06}, {'time': 0.0175535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.017554042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017557847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.017561944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017567319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.017576625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305999999997122e-06, 'source_diff': 9.305999999997122e-06}, {'time': 0.017583181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.017587764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.017596847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.017599514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.017604319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.017610389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.017610931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017613139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.017616361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017622819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.017629778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958999999997356e-06, 'source_diff': 6.958999999997356e-06}, {'time': 0.017632917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.139000000002695e-06, 'source_diff': 3.139000000002695e-06}, {'time': 0.017637083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:57.754" endtime="20201112 09:42:57.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.749" endtime="20201112 09:42:57.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:57.773" level="INFO">${debug-compressed} = {'time': [0.017348125, 0.0173515, 0.017352042, 0.017356083, 0.017362861, 0.017366083, 0.017373097, 0.017373639, 0.017376736, 0.017379458, 0.017383, 0.017389, 0.01739625, 0.017399181, 0.017405, 0.01741...</msg>
<status status="PASS" starttime="20201112 09:42:57.760" endtime="20201112 09:42:57.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.777" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:57.776" endtime="20201112 09:42:57.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.780" level="INFO">VALUE: {'time': [0.017348125, 0.0173515, 0.017352042, 0.017356083, 0.017362861, 0.017366083, 0.017373097, 0.017373639, 0.017376736, 0.017379458, 0.017383, 0.017389, 0.01739625, 0.017399181, 0.017405, 0.017412653, 0.017420319, 0.017427125, 0.017432639, 0.017440861, 0.017449958, 0.017454528, 0.017459097, 0.017467958, 0.017477278, 0.017477819, 0.017486611, 0.017487153, 0.017496431, 0.017502028, 0.017505403, 0.017511403, 0.017519556, 0.017522222, 0.017530194, 0.017535958, 0.017543958, 0.0175535, 0.017554042, 0.017557847, 0.017561944, 0.017567319, 0.017576625, 0.017583181, 0.017587764, 0.017596847, 0.017599514, 0.017604319, 0.017610389, 0.017610931, 0.017613139, 0.017616361, 0.017622819, 0.017629778, 0.017632917, 0.017637083], 'diff': [0, 3.374999999999906e-06, 5.420000000026792e-07, 4.040999999999767e-06, 6.7779999999989515e-06, 3.222000000000641e-06, 7.013999999999632e-06, 5.419999999992098e-07, 3.097000000000516e-06, 2.722000000000141e-06, 3.5419999999987406e-06, 6.000000000002531e-06, 7.249999999996842e-06, 2.931000000001155e-06, 5.819000000000657e-06, 7.652999999999827e-06, 7.665999999999923e-06, 6.806000000001561e-06, 5.5139999999981315e-06, 8.221999999998703e-06, 9.097000000003047e-06, 4.5699999999988805e-06, 4.568999999999407e-06, 8.860999999998898e-06, 9.320000000000161e-06, 5.409999999997361e-07, 8.792000000000522e-06, 5.419999999992098e-07, 9.278000000001452e-06, 5.596999999999547e-06, 3.374999999999906e-06, 5.999999999999062e-06, 8.153000000000327e-06, 2.6660000000018613e-06, 7.971999999998453e-06, 5.764000000001851e-06, 7.999999999997592e-06, 9.542000000001272e-06, 5.419999999992098e-07, 3.8050000000025563e-06, 4.096999999998047e-06, 5.375000000001906e-06, 9.305999999997122e-06, 6.556000000001311e-06, 4.582999999998977e-06, 9.083000000000008e-06, 2.667000000001335e-06, 4.805000000000087e-06, 6.070000000000381e-06, 5.419999999992098e-07, 2.208000000000071e-06, 3.222000000000641e-06, 6.458000000000852e-06, 6.958999999997356e-06, 3.139000000002695e-06, 4.165999999999892e-06], 'eventsourcesource_diff': [0, 3.374999999999906e-06, 5.420000000026792e-07, 4.040999999999767e-06, 6.7779999999989515e-06, 3.222000000000641e-06, 7.013999999999632e-06, 5.419999999992098e-07, 3.097000000000516e-06, 2.722000000000141e-06, 3.5419999999987406e-06, 6.000000000002531e-06, 7.249999999996842e-06, 2.931000000001155e-06, 5.819000000000657e-06, 7.652999999999827e-06, 7.665999999999923e-06, 6.806000000001561e-06, 5.5139999999981315e-06, 8.221999999998703e-06, 9.097000000003047e-06, 4.5699999999988805e-06, 4.568999999999407e-06, 8.860999999998898e-06, 9.320000000000161e-06, 5.409999999997361e-07, 8.792000000000522e-06, 5.419999999992098e-07, 9.278000000001452e-06, 5.596999999999547e-06, 3.374999999999906e-06, 5.999999999999062e-06, 8.153000000000327e-06, 2.6660000000018613e-06, 7.971999999998453e-06, 5.764000000001851e-06, 7.999999999997592e-06, 9.542000000001272e-06, 5.419999999992098e-07, 3.8050000000025563e-06, 4.096999999998047e-06, 5.375000000001906e-06, 9.305999999997122e-06, 6.556000000001311e-06, 4.582999999998977e-06, 9.083000000000008e-06, 2.667000000001335e-06, 4.805000000000087e-06, 6.070000000000381e-06, 5.419999999992098e-07, 2.208000000000071e-06, 3.222000000000641e-06, 6.458000000000852e-06, 6.958999999997356e-06, 3.139000000002695e-06, 4.165999999999892e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:57.778" endtime="20201112 09:42:57.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.774" endtime="20201112 09:42:57.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.785" level="INFO">${RESULT} = [{'time': 0.0173515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017356083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:57.782" endtime="20201112 09:42:57.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.793" level="INFO">${GPIO_OVERHEAD} = {'time': [0.0173515, 0.017356083, 0.017366083, 0.017373639, 0.017379458, 0.017389, 0.017399181, 0.017412653, 0.017427125, 0.017440861, 0.017454528, 0.017467958, 0.017477819, 0.017487153, 0.017502028, ...</msg>
<status status="PASS" starttime="20201112 09:42:57.786" endtime="20201112 09:42:57.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.798" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:57.797" endtime="20201112 09:42:57.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.800" level="INFO">VALUE: [3.374999999999906e-06, 4.040999999999767e-06, 3.222000000000641e-06, 5.419999999992098e-07, 2.722000000000141e-06, 6.000000000002531e-06, 2.931000000001155e-06, 7.652999999999827e-06, 6.806000000001561e-06, 8.221999999998703e-06, 4.5699999999988805e-06, 8.860999999998898e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.596999999999547e-06, 5.999999999999062e-06, 2.6660000000018613e-06, 5.764000000001851e-06, 9.542000000001272e-06, 3.8050000000025563e-06, 5.375000000001906e-06, 6.556000000001311e-06, 9.083000000000008e-06, 4.805000000000087e-06, 5.419999999992098e-07, 3.222000000000641e-06, 6.958999999997356e-06, 4.165999999999892e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.799" endtime="20201112 09:42:57.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.794" endtime="20201112 09:42:57.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.803" endtime="20201112 09:42:57.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.807" endtime="20201112 09:42:57.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.805" endtime="20201112 09:42:57.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.802" endtime="20201112 09:42:57.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.441" endtime="20201112 09:42:57.828"></status>
</kw>
<msg timestamp="20201112 09:42:57.828" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.837" endtime="20201112 09:42:57.849"></status>
</kw>
<msg timestamp="20201112 09:42:57.849" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.835" endtime="20201112 09:42:57.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.850" endtime="20201112 09:42:57.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.853" endtime="20201112 09:42:57.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.832" endtime="20201112 09:42:57.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.830" endtime="20201112 09:42:57.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.862" endtime="20201112 09:42:58.129"></status>
</kw>
<msg timestamp="20201112 09:42:58.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019018764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.860" endtime="20201112 09:42:58.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019018764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.132" endtime="20201112 09:42:58.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.138" endtime="20201112 09:42:58.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.858" endtime="20201112 09:42:58.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.856" endtime="20201112 09:42:58.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.145" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:58.144" endtime="20201112 09:42:58.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.149" level="INFO">VALUE: [{'time': 0.019008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019018764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019019306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019024361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.019029, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019029542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01903675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.019039486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.019047319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.019053875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.019061528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.019062069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01906825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.019072889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019073431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019075556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.019076097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019079486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.019084653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.019090681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019097389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.019097931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019100542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6110000000030553e-06, 'source_diff': 2.6110000000030553e-06}, {'time': 0.019108514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.019116653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019117194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019120847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.019130639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.019139806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.019146764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.019155458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.019162167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.019169444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.019178764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.019184764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.019191306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.019191847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019194819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9719999999969215e-06, 'source_diff': 2.9719999999969215e-06}, {'time': 0.019200764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.019207083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.019215222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019217889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019220319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.019226861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.019231986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.019237347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019242875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019250611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.019256694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.019264347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.019270417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019276667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.019283375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.019286042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019292278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.019301847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.019308361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.019316542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:58.146" endtime="20201112 09:42:58.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.142" endtime="20201112 09:42:58.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:58.166" level="INFO">${debug-compressed} = {'time': [0.019008903, 0.019018764, 0.019019306, 0.019024361, 0.019029, 0.019029542, 0.01903675, 0.019039486, 0.019047319, 0.019053875, 0.019061528, 0.019062069, 0.01906825, 0.019072889, 0.019073431, ...</msg>
<status status="PASS" starttime="20201112 09:42:58.151" endtime="20201112 09:42:58.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.170" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:58.169" endtime="20201112 09:42:58.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.173" level="INFO">VALUE: {'time': [0.019008903, 0.019018764, 0.019019306, 0.019024361, 0.019029, 0.019029542, 0.01903675, 0.019039486, 0.019047319, 0.019053875, 0.019061528, 0.019062069, 0.01906825, 0.019072889, 0.019073431, 0.019075556, 0.019076097, 0.019079486, 0.019084653, 0.019090681, 0.019097389, 0.019097931, 0.019100542, 0.019108514, 0.019116653, 0.019117194, 0.019120847, 0.019130639, 0.019139806, 0.019146764, 0.019155458, 0.019162167, 0.019169444, 0.019178764, 0.019184764, 0.019191306, 0.019191847, 0.019194819, 0.019200764, 0.019207083, 0.019215222, 0.019217889, 0.019220319, 0.019226861, 0.019231986, 0.019237347, 0.019242875, 0.019250611, 0.019256694, 0.019264347, 0.019270417, 0.019276667, 0.019283375, 0.019286042, 0.019292278, 0.019301847, 0.019308361, 0.019316542], 'diff': [0, 9.860999999999898e-06, 5.419999999992098e-07, 5.055000000000337e-06, 4.639000000000726e-06, 5.419999999992098e-07, 7.208000000001602e-06, 2.735999999999711e-06, 7.832999999998758e-06, 6.556000000001311e-06, 7.652999999999827e-06, 5.409999999997361e-07, 6.180999999997466e-06, 4.639000000000726e-06, 5.419999999992098e-07, 2.125000000002125e-06, 5.409999999997361e-07, 3.3889999999994758e-06, 5.167000000000366e-06, 6.028000000001671e-06, 6.7079999999976325e-06, 5.419999999992098e-07, 2.6110000000030553e-06, 7.971999999998453e-06, 8.139000000000757e-06, 5.409999999997361e-07, 3.6529999999992957e-06, 9.792000000001522e-06, 9.166999999997427e-06, 6.958000000001352e-06, 8.694000000000063e-06, 6.709000000000576e-06, 7.276999999999978e-06, 9.320000000000161e-06, 5.999999999999062e-06, 6.542000000001741e-06, 5.409999999997361e-07, 2.9719999999969215e-06, 5.945000000000256e-06, 6.319000000001157e-06, 8.139000000000757e-06, 2.6669999999978655e-06, 2.4300000000011812e-06, 6.542000000001741e-06, 5.1249999999981866e-06, 5.360999999998867e-06, 5.528000000001171e-06, 7.736000000001242e-06, 6.083000000000477e-06, 7.652999999999827e-06, 6.070000000000381e-06, 6.249999999999312e-06, 6.7079999999976325e-06, 2.667000000001335e-06, 6.235999999999742e-06, 9.569000000000938e-06, 6.513999999999132e-06, 8.180999999999466e-06], 'eventsourcesource_diff': [0, 9.860999999999898e-06, 5.419999999992098e-07, 5.055000000000337e-06, 4.639000000000726e-06, 5.419999999992098e-07, 7.208000000001602e-06, 2.735999999999711e-06, 7.832999999998758e-06, 6.556000000001311e-06, 7.652999999999827e-06, 5.409999999997361e-07, 6.180999999997466e-06, 4.639000000000726e-06, 5.419999999992098e-07, 2.125000000002125e-06, 5.409999999997361e-07, 3.3889999999994758e-06, 5.167000000000366e-06, 6.028000000001671e-06, 6.7079999999976325e-06, 5.419999999992098e-07, 2.6110000000030553e-06, 7.971999999998453e-06, 8.139000000000757e-06, 5.409999999997361e-07, 3.6529999999992957e-06, 9.792000000001522e-06, 9.166999999997427e-06, 6.958000000001352e-06, 8.694000000000063e-06, 6.709000000000576e-06, 7.276999999999978e-06, 9.320000000000161e-06, 5.999999999999062e-06, 6.542000000001741e-06, 5.409999999997361e-07, 2.9719999999969215e-06, 5.945000000000256e-06, 6.319000000001157e-06, 8.139000000000757e-06, 2.6669999999978655e-06, 2.4300000000011812e-06, 6.542000000001741e-06, 5.1249999999981866e-06, 5.360999999998867e-06, 5.528000000001171e-06, 7.736000000001242e-06, 6.083000000000477e-06, 7.652999999999827e-06, 6.070000000000381e-06, 6.249999999999312e-06, 6.7079999999976325e-06, 2.667000000001335e-06, 6.235999999999742e-06, 9.569000000000938e-06, 6.513999999999132e-06, 8.180999999999466e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:58.171" endtime="20201112 09:42:58.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.167" endtime="20201112 09:42:58.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.178" level="INFO">${RESULT} = [{'time': 0.019018764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019024361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:58.175" endtime="20201112 09:42:58.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.188" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019018764, 0.019024361, 0.019029542, 0.019039486, 0.019053875, 0.019062069, 0.019072889, 0.019075556, 0.019079486, 0.019090681, 0.019097931, 0.019108514, 0.019117194, 0.019130639, 0.019146...</msg>
<status status="PASS" starttime="20201112 09:42:58.179" endtime="20201112 09:42:58.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.192" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:58.191" endtime="20201112 09:42:58.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.195" level="INFO">VALUE: [9.860999999999898e-06, 5.055000000000337e-06, 5.419999999992098e-07, 2.735999999999711e-06, 6.556000000001311e-06, 5.409999999997361e-07, 4.639000000000726e-06, 2.125000000002125e-06, 3.3889999999994758e-06, 6.028000000001671e-06, 5.419999999992098e-07, 7.971999999998453e-06, 5.409999999997361e-07, 9.792000000001522e-06, 6.958000000001352e-06, 6.709000000000576e-06, 9.320000000000161e-06, 6.542000000001741e-06, 2.9719999999969215e-06, 6.319000000001157e-06, 2.6669999999978655e-06, 6.542000000001741e-06, 5.360999999998867e-06, 7.736000000001242e-06, 7.652999999999827e-06, 6.249999999999312e-06, 2.667000000001335e-06, 9.569000000000938e-06, 8.180999999999466e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.193" endtime="20201112 09:42:58.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.189" endtime="20201112 09:42:58.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.198" endtime="20201112 09:42:58.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.201" endtime="20201112 09:42:58.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.200" endtime="20201112 09:42:58.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.196" endtime="20201112 09:42:58.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.829" endtime="20201112 09:42:58.222"></status>
</kw>
<msg timestamp="20201112 09:42:58.222" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.230" endtime="20201112 09:42:58.242"></status>
</kw>
<msg timestamp="20201112 09:42:58.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.228" endtime="20201112 09:42:58.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.245" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.243" endtime="20201112 09:42:58.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.246" endtime="20201112 09:42:58.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.226" endtime="20201112 09:42:58.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.224" endtime="20201112 09:42:58.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.256" endtime="20201112 09:42:58.522"></status>
</kw>
<msg timestamp="20201112 09:42:58.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018162083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018167375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.253" endtime="20201112 09:42:58.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018162083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018167375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.526" endtime="20201112 09:42:58.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.531" endtime="20201112 09:42:58.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.251" endtime="20201112 09:42:58.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.249" endtime="20201112 09:42:58.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.538" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:58.537" endtime="20201112 09:42:58.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.541" level="INFO">VALUE: [{'time': 0.018162083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018167375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018173389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.01818325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018188389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.018193694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.018196403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.018203431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018213139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.018220736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597000000001547e-06, 'source_diff': 7.597000000001547e-06}, {'time': 0.01822675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018234639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.018239444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018239986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018249319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018253139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8200000000016e-06, 'source_diff': 3.8200000000016e-06}, {'time': 0.018256333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.018259653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.018263333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.018267569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018272167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59799999999802e-06, 'source_diff': 4.59799999999802e-06}, {'time': 0.01827775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018287097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018289819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018295347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018304431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.018312097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.018312639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018320264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018325069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018327806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7369999999991845e-06, 'source_diff': 2.7369999999991845e-06}, {'time': 0.018337361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.018337903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018346708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.018353486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.018357903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018361569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6660000000028614e-06, 'source_diff': 3.6660000000028614e-06}, {'time': 0.018364958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.0183655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01837175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018380861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.018384222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018384764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018392458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.018401778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.018410472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018417181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018417722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018424931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208999999997606e-06, 'source_diff': 7.208999999997606e-06}, {'time': 0.018429042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018435278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018444833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.018450194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018457458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018460361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.018469764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:58.539" endtime="20201112 09:42:58.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.534" endtime="20201112 09:42:58.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:58.558" level="INFO">${debug-compressed} = {'time': [0.018162083, 0.018167375, 0.018173389, 0.01818325, 0.018188389, 0.018193694, 0.018196403, 0.018203431, 0.018213139, 0.018220736, 0.01822675, 0.018234639, 0.018239444, 0.018239986, 0.01824931...</msg>
<status status="PASS" starttime="20201112 09:42:58.544" endtime="20201112 09:42:58.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.561" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:58.561" endtime="20201112 09:42:58.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.565" level="INFO">VALUE: {'time': [0.018162083, 0.018167375, 0.018173389, 0.01818325, 0.018188389, 0.018193694, 0.018196403, 0.018203431, 0.018213139, 0.018220736, 0.01822675, 0.018234639, 0.018239444, 0.018239986, 0.018249319, 0.018253139, 0.018256333, 0.018259653, 0.018263333, 0.018267569, 0.018272167, 0.01827775, 0.018287097, 0.018289819, 0.018295347, 0.018304431, 0.018312097, 0.018312639, 0.018320264, 0.018325069, 0.018327806, 0.018337361, 0.018337903, 0.018346708, 0.018353486, 0.018357903, 0.018361569, 0.018364958, 0.0183655, 0.01837175, 0.018380861, 0.018384222, 0.018384764, 0.018392458, 0.018401778, 0.018410472, 0.018417181, 0.018417722, 0.018424931, 0.018429042, 0.018435278, 0.018444833, 0.018450194, 0.018457458, 0.018460361, 0.018469764], 'diff': [0, 5.292000000000491e-06, 6.014000000002101e-06, 9.860999999999898e-06, 5.1389999999977565e-06, 5.305000000000587e-06, 2.7090000000000447e-06, 7.0279999999992016e-06, 9.708000000000633e-06, 7.597000000001547e-06, 6.0139999999986316e-06, 7.889000000000507e-06, 4.805000000000087e-06, 5.419999999992098e-07, 9.333000000000258e-06, 3.8200000000016e-06, 3.1939999999980317e-06, 3.3200000000011e-06, 3.679999999998962e-06, 4.236000000001211e-06, 4.59799999999802e-06, 5.582999999999977e-06, 9.346999999999828e-06, 2.722000000000141e-06, 5.528000000001171e-06, 9.083999999999481e-06, 7.665999999999923e-06, 5.419999999992098e-07, 7.625000000000687e-06, 4.805000000000087e-06, 2.7369999999991845e-06, 9.555000000001368e-06, 5.419999999992098e-07, 8.805000000000618e-06, 6.7779999999989515e-06, 4.416999999999616e-06, 3.6660000000028614e-06, 3.3889999999994758e-06, 5.419999999992098e-07, 6.249999999999312e-06, 9.110999999999148e-06, 3.361000000000336e-06, 5.420000000026792e-07, 7.693999999999063e-06, 9.320000000000161e-06, 8.694000000000063e-06, 6.709000000000576e-06, 5.409999999997361e-07, 7.208999999997606e-06, 4.111000000001086e-06, 6.235999999999742e-06, 9.555000000001368e-06, 5.360999999998867e-06, 7.263999999999882e-06, 2.903000000002015e-06, 9.402999999998107e-06], 'eventsourcesource_diff': [0, 5.292000000000491e-06, 6.014000000002101e-06, 9.860999999999898e-06, 5.1389999999977565e-06, 5.305000000000587e-06, 2.7090000000000447e-06, 7.0279999999992016e-06, 9.708000000000633e-06, 7.597000000001547e-06, 6.0139999999986316e-06, 7.889000000000507e-06, 4.805000000000087e-06, 5.419999999992098e-07, 9.333000000000258e-06, 3.8200000000016e-06, 3.1939999999980317e-06, 3.3200000000011e-06, 3.679999999998962e-06, 4.236000000001211e-06, 4.59799999999802e-06, 5.582999999999977e-06, 9.346999999999828e-06, 2.722000000000141e-06, 5.528000000001171e-06, 9.083999999999481e-06, 7.665999999999923e-06, 5.419999999992098e-07, 7.625000000000687e-06, 4.805000000000087e-06, 2.7369999999991845e-06, 9.555000000001368e-06, 5.419999999992098e-07, 8.805000000000618e-06, 6.7779999999989515e-06, 4.416999999999616e-06, 3.6660000000028614e-06, 3.3889999999994758e-06, 5.419999999992098e-07, 6.249999999999312e-06, 9.110999999999148e-06, 3.361000000000336e-06, 5.420000000026792e-07, 7.693999999999063e-06, 9.320000000000161e-06, 8.694000000000063e-06, 6.709000000000576e-06, 5.409999999997361e-07, 7.208999999997606e-06, 4.111000000001086e-06, 6.235999999999742e-06, 9.555000000001368e-06, 5.360999999998867e-06, 7.263999999999882e-06, 2.903000000002015e-06, 9.402999999998107e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:58.563" endtime="20201112 09:42:58.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.559" endtime="20201112 09:42:58.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.569" level="INFO">${RESULT} = [{'time': 0.018167375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.01818325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:42:58.567" endtime="20201112 09:42:58.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.578" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018167375, 0.01818325, 0.018193694, 0.018203431, 0.018220736, 0.018234639, 0.018239986, 0.018253139, 0.018259653, 0.018267569, 0.01827775, 0.018289819, 0.018304431, 0.018312639, 0.01832506...</msg>
<status status="PASS" starttime="20201112 09:42:58.570" endtime="20201112 09:42:58.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.582" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:58.581" endtime="20201112 09:42:58.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.584" level="INFO">VALUE: [5.292000000000491e-06, 9.860999999999898e-06, 5.305000000000587e-06, 7.0279999999992016e-06, 7.597000000001547e-06, 7.889000000000507e-06, 5.419999999992098e-07, 3.8200000000016e-06, 3.3200000000011e-06, 4.236000000001211e-06, 5.582999999999977e-06, 2.722000000000141e-06, 9.083999999999481e-06, 5.419999999992098e-07, 4.805000000000087e-06, 9.555000000001368e-06, 8.805000000000618e-06, 4.416999999999616e-06, 3.3889999999994758e-06, 6.249999999999312e-06, 3.361000000000336e-06, 7.693999999999063e-06, 8.694000000000063e-06, 5.409999999997361e-07, 4.111000000001086e-06, 9.555000000001368e-06, 7.263999999999882e-06, 9.402999999998107e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.583" endtime="20201112 09:42:58.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.579" endtime="20201112 09:42:58.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.588" endtime="20201112 09:42:58.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.592" endtime="20201112 09:42:58.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.590" endtime="20201112 09:42:58.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.587" endtime="20201112 09:42:58.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.223" endtime="20201112 09:42:58.612"></status>
</kw>
<msg timestamp="20201112 09:42:58.613" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.620" endtime="20201112 09:42:58.631"></status>
</kw>
<msg timestamp="20201112 09:42:58.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.619" endtime="20201112 09:42:58.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.634" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.633" endtime="20201112 09:42:58.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.635" endtime="20201112 09:42:58.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.616" endtime="20201112 09:42:58.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.614" endtime="20201112 09:42:58.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.644" endtime="20201112 09:42:58.914"></status>
</kw>
<msg timestamp="20201112 09:42:58.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017481042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017481583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.643" endtime="20201112 09:42:58.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017481042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017481583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.917" endtime="20201112 09:42:58.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.923" endtime="20201112 09:42:58.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.640" endtime="20201112 09:42:58.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.639" endtime="20201112 09:42:58.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.929" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:58.928" endtime="20201112 09:42:58.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.933" level="INFO">VALUE: [{'time': 0.017481042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017481583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017483472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.017493375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.017497694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.017505597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.017512139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.017512681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017517736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017518278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017526611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.017536, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.017536542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017544861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.01754825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3890000000029452e-06, 'source_diff': 3.3890000000029452e-06}, {'time': 0.017552097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.017552639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017558417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017561958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.017570014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.017574583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.017582778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.017590861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.017591403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017593375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.017600625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.017601167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017608306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.017611764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.017615139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017618597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017623722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.017629083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017633403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.017635833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.017644292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.017647417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.017647958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01765675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.017657292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017665375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.017675264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017683944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.017684486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017693528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.017696903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017700042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.017700583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017706833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.017709986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017712958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017716889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.017722958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017731889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.017737181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017740611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.017746556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.017751264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.0177585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.017764764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017765306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017769417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:58.930" endtime="20201112 09:42:58.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.926" endtime="20201112 09:42:58.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:58.951" level="INFO">${debug-compressed} = {'time': [0.017481042, 0.017481583, 0.017483472, 0.017493375, 0.017497694, 0.017505597, 0.017512139, 0.017512681, 0.017517736, 0.017518278, 0.017526611, 0.017536, 0.017536542, 0.017544861, 0.01754825,...</msg>
<status status="PASS" starttime="20201112 09:42:58.936" endtime="20201112 09:42:58.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.955" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:58.954" endtime="20201112 09:42:58.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.958" level="INFO">VALUE: {'time': [0.017481042, 0.017481583, 0.017483472, 0.017493375, 0.017497694, 0.017505597, 0.017512139, 0.017512681, 0.017517736, 0.017518278, 0.017526611, 0.017536, 0.017536542, 0.017544861, 0.01754825, 0.017552097, 0.017552639, 0.017558417, 0.017561958, 0.017570014, 0.017574583, 0.017582778, 0.017590861, 0.017591403, 0.017593375, 0.017600625, 0.017601167, 0.017608306, 0.017611764, 0.017615139, 0.017618597, 0.017623722, 0.017629083, 0.017633403, 0.017635833, 0.017644292, 0.017647417, 0.017647958, 0.01765675, 0.017657292, 0.017665375, 0.017675264, 0.017683944, 0.017684486, 0.017693528, 0.017696903, 0.017700042, 0.017700583, 0.017706833, 0.017709986, 0.017712958, 0.017716889, 0.017722958, 0.017731889, 0.017737181, 0.017740611, 0.017746556, 0.017751264, 0.0177585, 0.017764764, 0.017765306, 0.017769417], 'diff': [0, 5.409999999997361e-07, 1.889000000001445e-06, 9.902999999998607e-06, 4.319000000002626e-06, 7.903000000000077e-06, 6.541999999998271e-06, 5.419999999992098e-07, 5.055000000000337e-06, 5.420000000026792e-07, 8.332999999999258e-06, 9.388999999998537e-06, 5.419999999992098e-07, 8.318999999999688e-06, 3.3890000000029452e-06, 3.846999999997797e-06, 5.419999999992098e-07, 5.778000000001421e-06, 3.540999999999267e-06, 8.055999999999341e-06, 4.569000000002876e-06, 8.194999999999036e-06, 8.082999999999008e-06, 5.419999999992098e-07, 1.9720000000028604e-06, 7.250000000000312e-06, 5.419999999992098e-07, 7.138999999999757e-06, 3.4579999999978517e-06, 3.374999999999906e-06, 3.458000000001321e-06, 5.125000000001656e-06, 5.360999999998867e-06, 4.3199999999986305e-06, 2.4300000000011812e-06, 8.458999999998856e-06, 3.124999999999656e-06, 5.409999999997361e-07, 8.792000000000522e-06, 5.420000000026792e-07, 8.082999999999008e-06, 9.888999999999037e-06, 8.680000000000493e-06, 5.419999999992098e-07, 9.042000000000772e-06, 3.374999999999906e-06, 3.1389999999992257e-06, 5.409999999997361e-07, 6.250000000002781e-06, 3.1529999999987957e-06, 2.972000000000391e-06, 3.9309999999986855e-06, 6.069000000000907e-06, 8.931000000000217e-06, 5.292000000000491e-06, 3.429999999998712e-06, 5.945000000000256e-06, 4.707999999999102e-06, 7.236000000000742e-06, 6.2639999999988816e-06, 5.420000000026792e-07, 4.1109999999976166e-06], 'eventsourcesource_diff': [0, 5.409999999997361e-07, 1.889000000001445e-06, 9.902999999998607e-06, 4.319000000002626e-06, 7.903000000000077e-06, 6.541999999998271e-06, 5.419999999992098e-07, 5.055000000000337e-06, 5.420000000026792e-07, 8.332999999999258e-06, 9.388999999998537e-06, 5.419999999992098e-07, 8.318999999999688e-06, 3.3890000000029452e-06, 3.846999999997797e-06, 5.419999999992098e-07, 5.778000000001421e-06, 3.540999999999267e-06, 8.055999999999341e-06, 4.569000000002876e-06, 8.194999999999036e-06, 8.082999999999008e-06, 5.419999999992098e-07, 1.9720000000028604e-06, 7.250000000000312e-06, 5.419999999992098e-07, 7.138999999999757e-06, 3.4579999999978517e-06, 3.374999999999906e-06, 3.458000000001321e-06, 5.125000000001656e-06, 5.360999999998867e-06, 4.3199999999986305e-06, 2.4300000000011812e-06, 8.458999999998856e-06, 3.124999999999656e-06, 5.409999999997361e-07, 8.792000000000522e-06, 5.420000000026792e-07, 8.082999999999008e-06, 9.888999999999037e-06, 8.680000000000493e-06, 5.419999999992098e-07, 9.042000000000772e-06, 3.374999999999906e-06, 3.1389999999992257e-06, 5.409999999997361e-07, 6.250000000002781e-06, 3.1529999999987957e-06, 2.972000000000391e-06, 3.9309999999986855e-06, 6.069000000000907e-06, 8.931000000000217e-06, 5.292000000000491e-06, 3.429999999998712e-06, 5.945000000000256e-06, 4.707999999999102e-06, 7.236000000000742e-06, 6.2639999999988816e-06, 5.420000000026792e-07, 4.1109999999976166e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:58.956" endtime="20201112 09:42:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.952" endtime="20201112 09:42:58.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.963" level="INFO">${RESULT} = [{'time': 0.017481583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017493375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:58.960" endtime="20201112 09:42:58.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.972" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017481583, 0.017493375, 0.017505597, 0.017512681, 0.017518278, 0.017536, 0.017544861, 0.017552097, 0.017558417, 0.017570014, 0.017582778, 0.017591403, 0.017600625, 0.017608306, 0.017615139...</msg>
<status status="PASS" starttime="20201112 09:42:58.964" endtime="20201112 09:42:58.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.977" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:58.975" endtime="20201112 09:42:58.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.980" level="INFO">VALUE: [5.409999999997361e-07, 9.902999999998607e-06, 7.903000000000077e-06, 5.419999999992098e-07, 5.420000000026792e-07, 9.388999999998537e-06, 8.318999999999688e-06, 3.846999999997797e-06, 5.778000000001421e-06, 8.055999999999341e-06, 8.194999999999036e-06, 5.419999999992098e-07, 7.250000000000312e-06, 7.138999999999757e-06, 3.374999999999906e-06, 5.125000000001656e-06, 4.3199999999986305e-06, 8.458999999998856e-06, 5.409999999997361e-07, 5.420000000026792e-07, 9.888999999999037e-06, 5.419999999992098e-07, 3.374999999999906e-06, 5.409999999997361e-07, 3.1529999999987957e-06, 3.9309999999986855e-06, 8.931000000000217e-06, 3.429999999998712e-06, 4.707999999999102e-06, 6.2639999999988816e-06, 4.1109999999976166e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.978" endtime="20201112 09:42:58.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.973" endtime="20201112 09:42:58.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.983" endtime="20201112 09:42:58.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.986" endtime="20201112 09:42:59.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.985" endtime="20201112 09:42:59.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.981" endtime="20201112 09:42:59.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.613" endtime="20201112 09:42:59.007"></status>
</kw>
<msg timestamp="20201112 09:42:59.008" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.015" endtime="20201112 09:42:59.025"></status>
</kw>
<msg timestamp="20201112 09:42:59.026" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.014" endtime="20201112 09:42:59.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.028" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.027" endtime="20201112 09:42:59.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.029" endtime="20201112 09:42:59.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.011" endtime="20201112 09:42:59.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.010" endtime="20201112 09:42:59.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.038" endtime="20201112 09:42:59.310"></status>
</kw>
<msg timestamp="20201112 09:42:59.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017670653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017671194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.037" endtime="20201112 09:42:59.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017670653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017671194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.313" endtime="20201112 09:42:59.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.319" endtime="20201112 09:42:59.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.034" endtime="20201112 09:42:59.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.033" endtime="20201112 09:42:59.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.325" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:59.324" endtime="20201112 09:42:59.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.329" level="INFO">VALUE: [{'time': 0.017670653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017671194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017674111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.017679639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017684694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017690444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.017693667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.017701333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.017705972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017712292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.017718847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.017728722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.017731861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.139000000002695e-06, 'source_diff': 3.139000000002695e-06}, {'time': 0.017738611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.017741778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.017742319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017748097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017750528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.017755181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652999999996826e-06, 'source_diff': 4.652999999996826e-06}, {'time': 0.017759278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017764625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017770694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017778667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.017787764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.017790667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017791208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017799306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.09800000000152e-06, 'source_diff': 8.09800000000152e-06}, {'time': 0.017806319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013000000000158e-06, 'source_diff': 7.013000000000158e-06}, {'time': 0.017814694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.017818153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.017822389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017826181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.017828931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017834431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.017834972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017843847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.01784825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017852181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.017859847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.017868056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.017868597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017872667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0699999999983805e-06, 'source_diff': 4.0699999999983805e-06}, {'time': 0.017877681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017882319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.638000000001252e-06, 'source_diff': 4.638000000001252e-06}, {'time': 0.017882861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017891986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.017900597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.017908014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.017908556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017910444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8880000000019714e-06, 'source_diff': 1.8880000000019714e-06}, {'time': 0.017912875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.017920375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.017929306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.017938, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.017945194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.017949111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017949653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017955667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:59.326" endtime="20201112 09:42:59.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.322" endtime="20201112 09:42:59.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:59.347" level="INFO">${debug-compressed} = {'time': [0.017670653, 0.017671194, 0.017674111, 0.017679639, 0.017684694, 0.017690444, 0.017693667, 0.017701333, 0.017705972, 0.017712292, 0.017718847, 0.017728722, 0.017731861, 0.017738611, 0.017741...</msg>
<status status="PASS" starttime="20201112 09:42:59.331" endtime="20201112 09:42:59.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.351" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:59.350" endtime="20201112 09:42:59.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.354" level="INFO">VALUE: {'time': [0.017670653, 0.017671194, 0.017674111, 0.017679639, 0.017684694, 0.017690444, 0.017693667, 0.017701333, 0.017705972, 0.017712292, 0.017718847, 0.017728722, 0.017731861, 0.017738611, 0.017741778, 0.017742319, 0.017748097, 0.017750528, 0.017755181, 0.017759278, 0.017764625, 0.017770694, 0.017778667, 0.017787764, 0.017790667, 0.017791208, 0.017799306, 0.017806319, 0.017814694, 0.017818153, 0.017822389, 0.017826181, 0.017828931, 0.017834431, 0.017834972, 0.017843847, 0.01784825, 0.017852181, 0.017859847, 0.017868056, 0.017868597, 0.017872667, 0.017877681, 0.017882319, 0.017882861, 0.017891986, 0.017900597, 0.017908014, 0.017908556, 0.017910444, 0.017912875, 0.017920375, 0.017929306, 0.017938, 0.017945194, 0.017949111, 0.017949653, 0.017955667], 'diff': [0, 5.409999999997361e-07, 2.9169999999981155e-06, 5.528000000001171e-06, 5.055000000000337e-06, 5.749999999998812e-06, 3.2230000000001147e-06, 7.665999999999923e-06, 4.639000000000726e-06, 6.320000000000631e-06, 6.554999999998368e-06, 9.874999999999468e-06, 3.139000000002695e-06, 6.749999999999812e-06, 3.1669999999983656e-06, 5.409999999997361e-07, 5.778000000001421e-06, 2.431000000000655e-06, 4.652999999996826e-06, 4.097000000001516e-06, 5.346999999999297e-06, 6.069000000000907e-06, 7.973000000001396e-06, 9.096999999999578e-06, 2.9029999999985456e-06, 5.409999999997361e-07, 8.09800000000152e-06, 7.013000000000158e-06, 8.374999999997967e-06, 3.4590000000007948e-06, 4.236000000001211e-06, 3.7919999999989906e-06, 2.749999999999281e-06, 5.500000000002031e-06, 5.409999999997361e-07, 8.874999999998467e-06, 4.403000000000046e-06, 3.931000000002155e-06, 7.665999999999923e-06, 8.208999999998606e-06, 5.409999999997361e-07, 4.0699999999983805e-06, 5.014000000001101e-06, 4.638000000001252e-06, 5.419999999992098e-07, 9.124999999998717e-06, 8.611000000002117e-06, 7.4169999999991465e-06, 5.419999999992098e-07, 1.8880000000019714e-06, 2.431000000000655e-06, 7.499999999997092e-06, 8.931000000000217e-06, 8.694000000000063e-06, 7.194000000002032e-06, 3.916999999999116e-06, 5.419999999992098e-07, 6.014000000002101e-06], 'eventsourcesource_diff': [0, 5.409999999997361e-07, 2.9169999999981155e-06, 5.528000000001171e-06, 5.055000000000337e-06, 5.749999999998812e-06, 3.2230000000001147e-06, 7.665999999999923e-06, 4.639000000000726e-06, 6.320000000000631e-06, 6.554999999998368e-06, 9.874999999999468e-06, 3.139000000002695e-06, 6.749999999999812e-06, 3.1669999999983656e-06, 5.409999999997361e-07, 5.778000000001421e-06, 2.431000000000655e-06, 4.652999999996826e-06, 4.097000000001516e-06, 5.346999999999297e-06, 6.069000000000907e-06, 7.973000000001396e-06, 9.096999999999578e-06, 2.9029999999985456e-06, 5.409999999997361e-07, 8.09800000000152e-06, 7.013000000000158e-06, 8.374999999997967e-06, 3.4590000000007948e-06, 4.236000000001211e-06, 3.7919999999989906e-06, 2.749999999999281e-06, 5.500000000002031e-06, 5.409999999997361e-07, 8.874999999998467e-06, 4.403000000000046e-06, 3.931000000002155e-06, 7.665999999999923e-06, 8.208999999998606e-06, 5.409999999997361e-07, 4.0699999999983805e-06, 5.014000000001101e-06, 4.638000000001252e-06, 5.419999999992098e-07, 9.124999999998717e-06, 8.611000000002117e-06, 7.4169999999991465e-06, 5.419999999992098e-07, 1.8880000000019714e-06, 2.431000000000655e-06, 7.499999999997092e-06, 8.931000000000217e-06, 8.694000000000063e-06, 7.194000000002032e-06, 3.916999999999116e-06, 5.419999999992098e-07, 6.014000000002101e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:59.352" endtime="20201112 09:42:59.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.348" endtime="20201112 09:42:59.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.358" level="INFO">${RESULT} = [{'time': 0.017671194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017679639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:59.356" endtime="20201112 09:42:59.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.367" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017671194, 0.017679639, 0.017690444, 0.017701333, 0.017712292, 0.017728722, 0.017738611, 0.017742319, 0.017750528, 0.017759278, 0.017770694, 0.017787764, 0.017791208, 0.017806319, 0.017818...</msg>
<status status="PASS" starttime="20201112 09:42:59.359" endtime="20201112 09:42:59.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.371" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:59.370" endtime="20201112 09:42:59.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.374" level="INFO">VALUE: [5.409999999997361e-07, 5.528000000001171e-06, 5.749999999998812e-06, 7.665999999999923e-06, 6.320000000000631e-06, 9.874999999999468e-06, 6.749999999999812e-06, 5.409999999997361e-07, 2.431000000000655e-06, 4.097000000001516e-06, 6.069000000000907e-06, 9.096999999999578e-06, 5.409999999997361e-07, 7.013000000000158e-06, 3.4590000000007948e-06, 3.7919999999989906e-06, 5.500000000002031e-06, 8.874999999998467e-06, 3.931000000002155e-06, 8.208999999998606e-06, 4.0699999999983805e-06, 4.638000000001252e-06, 9.124999999998717e-06, 7.4169999999991465e-06, 1.8880000000019714e-06, 7.499999999997092e-06, 8.694000000000063e-06, 3.916999999999116e-06, 6.014000000002101e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.373" endtime="20201112 09:42:59.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.368" endtime="20201112 09:42:59.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.377" endtime="20201112 09:42:59.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.381" endtime="20201112 09:42:59.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.379" endtime="20201112 09:42:59.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.376" endtime="20201112 09:42:59.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.008" endtime="20201112 09:42:59.401"></status>
</kw>
<msg timestamp="20201112 09:42:59.402" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.410" endtime="20201112 09:42:59.421"></status>
</kw>
<msg timestamp="20201112 09:42:59.422" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.409" endtime="20201112 09:42:59.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.423" endtime="20201112 09:42:59.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.425" endtime="20201112 09:42:59.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.405" endtime="20201112 09:42:59.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.403" endtime="20201112 09:42:59.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.434" endtime="20201112 09:42:59.704"></status>
</kw>
<msg timestamp="20201112 09:42:59.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.432" endtime="20201112 09:42:59.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.708" endtime="20201112 09:42:59.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.714" endtime="20201112 09:42:59.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.430" endtime="20201112 09:42:59.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.428" endtime="20201112 09:42:59.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.720" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:59.719" endtime="20201112 09:42:59.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.724" level="INFO">VALUE: [{'time': 0.018448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018464764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.018465306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018468625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3189999999981568e-06, 'source_diff': 3.3189999999981568e-06}, {'time': 0.01847225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018477361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018477903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01848225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018491194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.018500278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.018503667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3890000000029452e-06, 'source_diff': 3.3890000000029452e-06}, {'time': 0.018508458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.018509, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018515028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018520778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.018525597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.018528319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018528861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018531708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018536361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018544319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.018544861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018552778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.018553319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01856125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}, {'time': 0.018565097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.018569736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018573431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.018578236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018585306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.018590542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.018591083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018599472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.018600014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018602694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.018612569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.0186215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.018626639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018631903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.018632444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018640306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861999999997371e-06, 'source_diff': 7.861999999997371e-06}, {'time': 0.018642792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018647597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018652903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018655361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018663694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333000000002727e-06, 'source_diff': 8.333000000002727e-06}, {'time': 0.018671361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.018671903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018674764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018682903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.018691583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018698722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.018701486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.018708625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.018709167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018716056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.018716597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018725639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999997302e-06, 'source_diff': 9.041999999997302e-06}, {'time': 0.018731417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.018736514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018742347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:59.721" endtime="20201112 09:42:59.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.717" endtime="20201112 09:42:59.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:59.742" level="INFO">${debug-compressed} = {'time': [0.018448722, 0.018457597, 0.018464764, 0.018465306, 0.018468625, 0.01847225, 0.018477361, 0.018477903, 0.01848225, 0.018491194, 0.018500278, 0.018503667, 0.018508458, 0.018509, 0.018515028, ...</msg>
<status status="PASS" starttime="20201112 09:42:59.727" endtime="20201112 09:42:59.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.746" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:59.745" endtime="20201112 09:42:59.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.749" level="INFO">VALUE: {'time': [0.018448722, 0.018457597, 0.018464764, 0.018465306, 0.018468625, 0.01847225, 0.018477361, 0.018477903, 0.01848225, 0.018491194, 0.018500278, 0.018503667, 0.018508458, 0.018509, 0.018515028, 0.018520778, 0.018525597, 0.018528319, 0.018528861, 0.018531708, 0.018536361, 0.018544319, 0.018544861, 0.018552778, 0.018553319, 0.01856125, 0.018565097, 0.018569736, 0.018573431, 0.018578236, 0.018585306, 0.018590542, 0.018591083, 0.018599472, 0.018600014, 0.018602694, 0.018612569, 0.0186215, 0.018626639, 0.018631903, 0.018632444, 0.018640306, 0.018642792, 0.018647597, 0.018652903, 0.018655361, 0.018663694, 0.018671361, 0.018671903, 0.018674764, 0.018682903, 0.018691583, 0.018698722, 0.018701486, 0.018708625, 0.018709167, 0.018716056, 0.018716597, 0.018725639, 0.018731417, 0.018736514, 0.018742347], 'diff': [0, 8.874999999998467e-06, 7.167000000002366e-06, 5.419999999992098e-07, 3.3189999999981568e-06, 3.625000000000156e-06, 5.111000000002086e-06, 5.419999999992098e-07, 4.346999999998297e-06, 8.944000000000313e-06, 9.083999999999481e-06, 3.3890000000029452e-06, 4.790999999997048e-06, 5.420000000026792e-07, 6.0279999999982015e-06, 5.750000000002281e-06, 4.818999999999657e-06, 2.722000000000141e-06, 5.419999999992098e-07, 2.847000000000266e-06, 4.653000000000296e-06, 7.957999999998883e-06, 5.419999999992098e-07, 7.916999999999647e-06, 5.409999999997361e-07, 7.931000000002686e-06, 3.846999999997797e-06, 4.639000000000726e-06, 3.695000000001475e-06, 4.805000000000087e-06, 7.069999999997911e-06, 5.236000000002211e-06, 5.409999999997361e-07, 8.388999999997537e-06, 5.420000000026792e-07, 2.679999999997962e-06, 9.874999999999468e-06, 8.931000000000217e-06, 5.139000000001226e-06, 5.2639999999978815e-06, 5.410000000032056e-07, 7.861999999997371e-06, 2.485999999999461e-06, 4.805000000000087e-06, 5.306000000000061e-06, 2.458000000000321e-06, 8.333000000002727e-06, 7.666999999999397e-06, 5.419999999992098e-07, 2.860999999999836e-06, 8.139000000000757e-06, 8.680000000000493e-06, 7.138999999999757e-06, 2.7639999999988507e-06, 7.138999999999757e-06, 5.419999999992098e-07, 6.888999999999507e-06, 5.410000000032056e-07, 9.041999999997302e-06, 5.778000000001421e-06, 5.096999999999047e-06, 5.833000000000227e-06], 'eventsourcesource_diff': [0, 8.874999999998467e-06, 7.167000000002366e-06, 5.419999999992098e-07, 3.3189999999981568e-06, 3.625000000000156e-06, 5.111000000002086e-06, 5.419999999992098e-07, 4.346999999998297e-06, 8.944000000000313e-06, 9.083999999999481e-06, 3.3890000000029452e-06, 4.790999999997048e-06, 5.420000000026792e-07, 6.0279999999982015e-06, 5.750000000002281e-06, 4.818999999999657e-06, 2.722000000000141e-06, 5.419999999992098e-07, 2.847000000000266e-06, 4.653000000000296e-06, 7.957999999998883e-06, 5.419999999992098e-07, 7.916999999999647e-06, 5.409999999997361e-07, 7.931000000002686e-06, 3.846999999997797e-06, 4.639000000000726e-06, 3.695000000001475e-06, 4.805000000000087e-06, 7.069999999997911e-06, 5.236000000002211e-06, 5.409999999997361e-07, 8.388999999997537e-06, 5.420000000026792e-07, 2.679999999997962e-06, 9.874999999999468e-06, 8.931000000000217e-06, 5.139000000001226e-06, 5.2639999999978815e-06, 5.410000000032056e-07, 7.861999999997371e-06, 2.485999999999461e-06, 4.805000000000087e-06, 5.306000000000061e-06, 2.458000000000321e-06, 8.333000000002727e-06, 7.666999999999397e-06, 5.419999999992098e-07, 2.860999999999836e-06, 8.139000000000757e-06, 8.680000000000493e-06, 7.138999999999757e-06, 2.7639999999988507e-06, 7.138999999999757e-06, 5.419999999992098e-07, 6.888999999999507e-06, 5.410000000032056e-07, 9.041999999997302e-06, 5.778000000001421e-06, 5.096999999999047e-06, 5.833000000000227e-06]}</msg>
<status status="PASS" starttime="20201112 09:42:59.747" endtime="20201112 09:42:59.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.743" endtime="20201112 09:42:59.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.754" level="INFO">${RESULT} = [{'time': 0.018457597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018465306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:59.751" endtime="20201112 09:42:59.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.763" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018457597, 0.018465306, 0.01847225, 0.018477903, 0.018491194, 0.018503667, 0.018509, 0.018520778, 0.018528319, 0.018531708, 0.018544319, 0.018552778, 0.01856125, 0.018569736, 0.018578236, ...</msg>
<status status="PASS" starttime="20201112 09:42:59.755" endtime="20201112 09:42:59.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.768" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:59.766" endtime="20201112 09:42:59.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.770" level="INFO">VALUE: [8.874999999998467e-06, 5.419999999992098e-07, 3.625000000000156e-06, 5.419999999992098e-07, 8.944000000000313e-06, 3.3890000000029452e-06, 5.420000000026792e-07, 5.750000000002281e-06, 2.722000000000141e-06, 2.847000000000266e-06, 7.957999999998883e-06, 7.916999999999647e-06, 7.931000000002686e-06, 4.639000000000726e-06, 4.805000000000087e-06, 5.236000000002211e-06, 8.388999999997537e-06, 2.679999999997962e-06, 8.931000000000217e-06, 5.2639999999978815e-06, 7.861999999997371e-06, 4.805000000000087e-06, 2.458000000000321e-06, 7.666999999999397e-06, 2.860999999999836e-06, 8.680000000000493e-06, 2.7639999999988507e-06, 5.419999999992098e-07, 5.410000000032056e-07, 5.778000000001421e-06, 5.833000000000227e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.769" endtime="20201112 09:42:59.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.764" endtime="20201112 09:42:59.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.773" endtime="20201112 09:42:59.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.776" endtime="20201112 09:42:59.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.775" endtime="20201112 09:42:59.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.771" endtime="20201112 09:42:59.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.402" endtime="20201112 09:42:59.797"></status>
</kw>
<msg timestamp="20201112 09:42:59.797" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.805" endtime="20201112 09:42:59.816"></status>
</kw>
<msg timestamp="20201112 09:42:59.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.803" endtime="20201112 09:42:59.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.818" endtime="20201112 09:42:59.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.820" endtime="20201112 09:42:59.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.801" endtime="20201112 09:42:59.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.799" endtime="20201112 09:42:59.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.830" endtime="20201112 09:43:00.098"></status>
</kw>
<msg timestamp="20201112 09:43:00.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017403958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.829" endtime="20201112 09:43:00.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017403958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.101" endtime="20201112 09:43:00.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.107" endtime="20201112 09:43:00.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.826" endtime="20201112 09:43:00.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.824" endtime="20201112 09:43:00.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.113" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:00.112" endtime="20201112 09:43:00.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.117" level="INFO">VALUE: [{'time': 0.017403958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.017418903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.017426861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.017427403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017434611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.01743925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017449139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017455139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.01745975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017467861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000001617e-06, 'source_diff': 8.111000000001617e-06}, {'time': 0.017473931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.017480472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.017484875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017494514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.017495056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017503917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.017504458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017512542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.017517194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.017522944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.017523486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017526111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017529306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.195000000000975e-06, 'source_diff': 3.195000000000975e-06}, {'time': 0.017534681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.017544097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416000000001673e-06, 'source_diff': 9.416000000001673e-06}, {'time': 0.017547694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.017554972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.017559625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017564, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017570792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.017578069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.277000000003447e-06, 'source_diff': 7.277000000003447e-06}, {'time': 0.017582153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.017588, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017594, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017599264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.017599806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017603667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017604208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017607097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.017611625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017619292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.017626792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.017633292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.017638375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083000000002946e-06, 'source_diff': 5.083000000002946e-06}, {'time': 0.017647486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.017653486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017658778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017664847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017669264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017679069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.017688708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.639000000002257e-06, 'source_diff': 9.639000000002257e-06}, {'time': 0.017693597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8889999999975065e-06, 'source_diff': 4.8889999999975065e-06}, {'time': 0.017701083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.017701625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017703583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.017704125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017707042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}]</msg>
<status status="PASS" starttime="20201112 09:43:00.114" endtime="20201112 09:43:00.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.110" endtime="20201112 09:43:00.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:00.134" level="INFO">${debug-compressed} = {'time': [0.017403958, 0.017411389, 0.017418903, 0.017426861, 0.017427403, 0.017434611, 0.01743925, 0.017449139, 0.017455139, 0.01745975, 0.017467861, 0.017473931, 0.017480472, 0.017484875, 0.01749451...</msg>
<status status="PASS" starttime="20201112 09:43:00.120" endtime="20201112 09:43:00.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.138" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:00.137" endtime="20201112 09:43:00.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.141" level="INFO">VALUE: {'time': [0.017403958, 0.017411389, 0.017418903, 0.017426861, 0.017427403, 0.017434611, 0.01743925, 0.017449139, 0.017455139, 0.01745975, 0.017467861, 0.017473931, 0.017480472, 0.017484875, 0.017494514, 0.017495056, 0.017503917, 0.017504458, 0.017512542, 0.017517194, 0.017522944, 0.017523486, 0.017526111, 0.017529306, 0.017534681, 0.017544097, 0.017547694, 0.017554972, 0.017559625, 0.017564, 0.017570792, 0.017578069, 0.017582153, 0.017588, 0.017594, 0.017599264, 0.017599806, 0.017603667, 0.017604208, 0.017607097, 0.017611625, 0.017619292, 0.017626792, 0.017633292, 0.017638375, 0.017647486, 0.017653486, 0.017658778, 0.017664847, 0.017669264, 0.017679069, 0.017688708, 0.017693597, 0.017701083, 0.017701625, 0.017703583, 0.017704125, 0.017707042], 'diff': [0, 7.430999999998716e-06, 7.514000000000132e-06, 7.957999999998883e-06, 5.420000000026792e-07, 7.2079999999981326e-06, 4.639000000000726e-06, 9.888999999999037e-06, 6.000000000002531e-06, 4.610999999998117e-06, 8.111000000001617e-06, 6.070000000000381e-06, 6.540999999998798e-06, 4.403000000000046e-06, 9.638999999998787e-06, 5.419999999992098e-07, 8.861000000002367e-06, 5.409999999997361e-07, 8.083999999998481e-06, 4.652000000000822e-06, 5.749999999998812e-06, 5.420000000026792e-07, 2.6249999999991558e-06, 3.195000000000975e-06, 5.374999999998437e-06, 9.416000000001673e-06, 3.5969999999975466e-06, 7.2779999999994516e-06, 4.653000000000296e-06, 4.375000000000906e-06, 6.7919999999985214e-06, 7.277000000003447e-06, 4.08399999999795e-06, 5.846999999999797e-06, 5.999999999999062e-06, 5.264000000001351e-06, 5.419999999992098e-07, 3.861000000000836e-06, 5.409999999997361e-07, 2.8889999999989757e-06, 4.528000000000171e-06, 7.667000000002866e-06, 7.499999999997092e-06, 6.499999999999562e-06, 5.083000000002946e-06, 9.110999999999148e-06, 5.999999999999062e-06, 5.292000000000491e-06, 6.069000000000907e-06, 4.416999999999616e-06, 9.804999999998149e-06, 9.639000000002257e-06, 4.8889999999975065e-06, 7.486000000000992e-06, 5.419999999992098e-07, 1.957999999999821e-06, 5.420000000026792e-07, 2.9169999999981155e-06], 'eventsourcesource_diff': [0, 7.430999999998716e-06, 7.514000000000132e-06, 7.957999999998883e-06, 5.420000000026792e-07, 7.2079999999981326e-06, 4.639000000000726e-06, 9.888999999999037e-06, 6.000000000002531e-06, 4.610999999998117e-06, 8.111000000001617e-06, 6.070000000000381e-06, 6.540999999998798e-06, 4.403000000000046e-06, 9.638999999998787e-06, 5.419999999992098e-07, 8.861000000002367e-06, 5.409999999997361e-07, 8.083999999998481e-06, 4.652000000000822e-06, 5.749999999998812e-06, 5.420000000026792e-07, 2.6249999999991558e-06, 3.195000000000975e-06, 5.374999999998437e-06, 9.416000000001673e-06, 3.5969999999975466e-06, 7.2779999999994516e-06, 4.653000000000296e-06, 4.375000000000906e-06, 6.7919999999985214e-06, 7.277000000003447e-06, 4.08399999999795e-06, 5.846999999999797e-06, 5.999999999999062e-06, 5.264000000001351e-06, 5.419999999992098e-07, 3.861000000000836e-06, 5.409999999997361e-07, 2.8889999999989757e-06, 4.528000000000171e-06, 7.667000000002866e-06, 7.499999999997092e-06, 6.499999999999562e-06, 5.083000000002946e-06, 9.110999999999148e-06, 5.999999999999062e-06, 5.292000000000491e-06, 6.069000000000907e-06, 4.416999999999616e-06, 9.804999999998149e-06, 9.639000000002257e-06, 4.8889999999975065e-06, 7.486000000000992e-06, 5.419999999992098e-07, 1.957999999999821e-06, 5.420000000026792e-07, 2.9169999999981155e-06]}</msg>
<status status="PASS" starttime="20201112 09:43:00.139" endtime="20201112 09:43:00.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.135" endtime="20201112 09:43:00.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.146" level="INFO">${RESULT} = [{'time': 0.017411389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.017426861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:00.143" endtime="20201112 09:43:00.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.155" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017411389, 0.017426861, 0.017434611, 0.017449139, 0.01745975, 0.017473931, 0.017484875, 0.017495056, 0.017504458, 0.017517194, 0.017523486, 0.017529306, 0.017544097, 0.017554972, 0.017564,...</msg>
<status status="PASS" starttime="20201112 09:43:00.147" endtime="20201112 09:43:00.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.159" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:00.158" endtime="20201112 09:43:00.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.162" level="INFO">VALUE: [7.430999999998716e-06, 7.957999999998883e-06, 7.2079999999981326e-06, 9.888999999999037e-06, 4.610999999998117e-06, 6.070000000000381e-06, 4.403000000000046e-06, 5.419999999992098e-07, 5.409999999997361e-07, 4.652000000000822e-06, 5.420000000026792e-07, 3.195000000000975e-06, 9.416000000001673e-06, 7.2779999999994516e-06, 4.375000000000906e-06, 7.277000000003447e-06, 5.846999999999797e-06, 5.264000000001351e-06, 3.861000000000836e-06, 2.8889999999989757e-06, 7.667000000002866e-06, 6.499999999999562e-06, 9.110999999999148e-06, 5.292000000000491e-06, 4.416999999999616e-06, 9.639000000002257e-06, 7.486000000000992e-06, 1.957999999999821e-06, 2.9169999999981155e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.160" endtime="20201112 09:43:00.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.156" endtime="20201112 09:43:00.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.165" endtime="20201112 09:43:00.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.169" endtime="20201112 09:43:00.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.167" endtime="20201112 09:43:00.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.164" endtime="20201112 09:43:00.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.798" endtime="20201112 09:43:00.189"></status>
</kw>
<msg timestamp="20201112 09:43:00.190" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.197" endtime="20201112 09:43:00.209"></status>
</kw>
<msg timestamp="20201112 09:43:00.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.196" endtime="20201112 09:43:00.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.212" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.210" endtime="20201112 09:43:00.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.213" endtime="20201112 09:43:00.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.193" endtime="20201112 09:43:00.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.192" endtime="20201112 09:43:00.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.223" endtime="20201112 09:43:00.490"></status>
</kw>
<msg timestamp="20201112 09:43:00.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017410056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017413292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.221" endtime="20201112 09:43:00.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017410056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017413292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.493" endtime="20201112 09:43:00.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.499" endtime="20201112 09:43:00.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.219" endtime="20201112 09:43:00.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.217" endtime="20201112 09:43:00.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.507" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:00.506" endtime="20201112 09:43:00.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.511" level="INFO">VALUE: [{'time': 0.017410056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017413292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017419583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.017423028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.445000000001225e-06, 'source_diff': 3.445000000001225e-06}, {'time': 0.017423569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017429361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017438764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.017443792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017444333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017446944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.017450403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.017455792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.017462472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.017472278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.01747875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.017479292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017481917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017489333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.017497486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.017503472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017512833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.017520486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.017527444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.017532, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.017538111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.017542972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.017549667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.0175555, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017558167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.017564903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.0175685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017572194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.017577972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017581667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6949999999980054e-06, 'source_diff': 3.6949999999980054e-06}, {'time': 0.017588875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.017594597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017595139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017598944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.017608333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.017608875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017616736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.017622556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.017631736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.017638278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.01764625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.017655583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.017660708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.017669958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.017673319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017673861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017680986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.017681528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017689208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.017692597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017700333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.0177095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.017714778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}]</msg>
<status status="PASS" starttime="20201112 09:43:00.508" endtime="20201112 09:43:00.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.503" endtime="20201112 09:43:00.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:00.527" level="INFO">${debug-compressed} = {'time': [0.017410056, 0.017413292, 0.017419583, 0.017423028, 0.017423569, 0.017429361, 0.017438764, 0.017443792, 0.017444333, 0.017446944, 0.017450403, 0.017455792, 0.017462472, 0.017472278, 0.017478...</msg>
<status status="PASS" starttime="20201112 09:43:00.513" endtime="20201112 09:43:00.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.531" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:00.530" endtime="20201112 09:43:00.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.534" level="INFO">VALUE: {'time': [0.017410056, 0.017413292, 0.017419583, 0.017423028, 0.017423569, 0.017429361, 0.017438764, 0.017443792, 0.017444333, 0.017446944, 0.017450403, 0.017455792, 0.017462472, 0.017472278, 0.01747875, 0.017479292, 0.017481917, 0.017489333, 0.017497486, 0.017503472, 0.017512833, 0.017520486, 0.017527444, 0.017532, 0.017538111, 0.017542972, 0.017549667, 0.0175555, 0.017558167, 0.017564903, 0.0175685, 0.017572194, 0.017577972, 0.017581667, 0.017588875, 0.017594597, 0.017595139, 0.017598944, 0.017608333, 0.017608875, 0.017616736, 0.017622556, 0.017631736, 0.017638278, 0.01764625, 0.017655583, 0.017660708, 0.017669958, 0.017673319, 0.017673861, 0.017680986, 0.017681528, 0.017689208, 0.017692597, 0.017700333, 0.0177095, 0.017714778], 'diff': [0, 3.236000000000211e-06, 6.290999999998548e-06, 3.445000000001225e-06, 5.409999999997361e-07, 5.792000000000991e-06, 9.402999999998107e-06, 5.028000000000671e-06, 5.409999999997361e-07, 2.610999999999586e-06, 3.4590000000007948e-06, 5.389000000001476e-06, 6.679999999998493e-06, 9.806000000001092e-06, 6.472000000000422e-06, 5.419999999992098e-07, 2.6249999999991558e-06, 7.415999999999673e-06, 8.153000000000327e-06, 5.985999999999492e-06, 9.360999999999398e-06, 7.652999999999827e-06, 6.958000000001352e-06, 4.555999999999311e-06, 6.110999999999617e-06, 4.861000000001836e-06, 6.695000000001006e-06, 5.833000000000227e-06, 2.6669999999978655e-06, 6.736000000000242e-06, 3.597000000001016e-06, 3.693999999998532e-06, 5.778000000001421e-06, 3.6949999999980054e-06, 7.208000000001602e-06, 5.721999999999672e-06, 5.419999999992098e-07, 3.804999999999087e-06, 9.389000000002007e-06, 5.419999999992098e-07, 7.861000000001367e-06, 5.820000000000131e-06, 9.179999999997523e-06, 6.542000000001741e-06, 7.971999999998453e-06, 9.333000000000258e-06, 5.125000000001656e-06, 9.249999999998842e-06, 3.361000000000336e-06, 5.419999999992098e-07, 7.125000000000187e-06, 5.419999999992098e-07, 7.680000000002962e-06, 3.3889999999994758e-06, 7.735999999997772e-06, 9.167000000000897e-06, 5.278000000000921e-06], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 3.236000000000211e-06, 6.290999999998548e-06, 3.445000000001225e-06, 5.409999999997361e-07, 5.792000000000991e-06, 9.402999999998107e-06, 5.028000000000671e-06, 5.409999999997361e-07, 2.610999999999586e-06, 3.4590000000007948e-06, 5.389000000001476e-06, 6.679999999998493e-06, 9.806000000001092e-06, 6.472000000000422e-06, 5.419999999992098e-07, 2.6249999999991558e-06, 7.415999999999673e-06, 8.153000000000327e-06, 5.985999999999492e-06, 9.360999999999398e-06, 7.652999999999827e-06, 6.958000000001352e-06, 4.555999999999311e-06, 6.110999999999617e-06, 4.861000000001836e-06, 6.695000000001006e-06, 5.833000000000227e-06, 2.6669999999978655e-06, 6.736000000000242e-06, 3.597000000001016e-06, 3.693999999998532e-06, 5.778000000001421e-06, 3.6949999999980054e-06, 7.208000000001602e-06, 5.721999999999672e-06, 5.419999999992098e-07, 3.804999999999087e-06, 9.389000000002007e-06, 5.419999999992098e-07, 7.861000000001367e-06, 5.820000000000131e-06, 9.179999999997523e-06, 6.542000000001741e-06, 7.971999999998453e-06, 9.333000000000258e-06, 5.125000000001656e-06, 9.249999999998842e-06, 3.361000000000336e-06, 5.419999999992098e-07, 7.125000000000187e-06, 5.419999999992098e-07, 7.680000000002962e-06, 3.3889999999994758e-06, 7.735999999997772e-06, 9.167000000000897e-06, 5.278000000000921e-06]}</msg>
<status status="PASS" starttime="20201112 09:43:00.532" endtime="20201112 09:43:00.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.528" endtime="20201112 09:43:00.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.538" level="INFO">${RESULT} = [{'time': 0.017413292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017423028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:00.536" endtime="20201112 09:43:00.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.547" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017413292, 0.017423028, 0.017429361, 0.017443792, 0.017446944, 0.017455792, 0.017472278, 0.017479292, 0.017489333, 0.017503472, 0.017520486, 0.017532, 0.017542972, 0.0175555, 0.017564903, ...</msg>
<status status="PASS" starttime="20201112 09:43:00.539" endtime="20201112 09:43:00.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.551" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:00.550" endtime="20201112 09:43:00.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.553" level="INFO">VALUE: [3.236000000000211e-06, 3.445000000001225e-06, 5.792000000000991e-06, 5.028000000000671e-06, 2.610999999999586e-06, 5.389000000001476e-06, 9.806000000001092e-06, 5.419999999992098e-07, 7.415999999999673e-06, 5.985999999999492e-06, 7.652999999999827e-06, 4.555999999999311e-06, 4.861000000001836e-06, 5.833000000000227e-06, 6.736000000000242e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 5.721999999999672e-06, 3.804999999999087e-06, 5.419999999992098e-07, 5.820000000000131e-06, 6.542000000001741e-06, 9.333000000000258e-06, 9.249999999998842e-06, 5.419999999992098e-07, 5.419999999992098e-07, 3.3889999999994758e-06, 9.167000000000897e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.552" endtime="20201112 09:43:00.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.548" endtime="20201112 09:43:00.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.557" endtime="20201112 09:43:00.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.561" endtime="20201112 09:43:00.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.559" endtime="20201112 09:43:00.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.555" endtime="20201112 09:43:00.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.190" endtime="20201112 09:43:00.582"></status>
</kw>
<msg timestamp="20201112 09:43:00.582" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.590" endtime="20201112 09:43:00.601"></status>
</kw>
<msg timestamp="20201112 09:43:00.602" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.588" endtime="20201112 09:43:00.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.604" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.603" endtime="20201112 09:43:00.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.605" endtime="20201112 09:43:00.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.585" endtime="20201112 09:43:00.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.584" endtime="20201112 09:43:00.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.614" endtime="20201112 09:43:00.884"></status>
</kw>
<msg timestamp="20201112 09:43:00.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017496833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.613" endtime="20201112 09:43:00.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017496833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.888" endtime="20201112 09:43:00.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.894" endtime="20201112 09:43:00.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.610" endtime="20201112 09:43:00.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.608" endtime="20201112 09:43:00.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.900" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:00.899" endtime="20201112 09:43:00.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.904" level="INFO">VALUE: [{'time': 0.017496833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.111000000001617e-06, 'source_diff': 8.111000000001617e-06}, {'time': 0.017510347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.017517097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.017521417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.017521958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017531069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.017538542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.017546403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.017550014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017550556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017554431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017562653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.017567042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.017569708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.01757025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017579125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.017583208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.01758375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017593111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.017602972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.017603514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017610722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.017616403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.017616944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017626236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.017635153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000000647e-06, 'source_diff': 8.917000000000647e-06}, {'time': 0.017640264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017640806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017643889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.017648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017650722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.017656014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017658556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.017665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138000000000283e-06, 'source_diff': 7.138000000000283e-06}, {'time': 0.017666236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017672486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.017679917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.017689083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166000000001423e-06, 'source_diff': 9.166000000001423e-06}, {'time': 0.017695319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017699958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6389999999972564e-06, 'source_diff': 4.6389999999972564e-06}, {'time': 0.0177005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017706917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999998146e-06, 'source_diff': 6.416999999998146e-06}, {'time': 0.017716014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.017721069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017728972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.017735931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.017744306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.017749847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.017757014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.017757556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017765639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.017775444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.017775986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017780861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.017786111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.017795903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791999999998052e-06, 'source_diff': 9.791999999998052e-06}, {'time': 0.017804361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.017808722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.017814528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.017823472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}]</msg>
<status status="PASS" starttime="20201112 09:43:00.901" endtime="20201112 09:43:00.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.897" endtime="20201112 09:43:00.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:00.922" level="INFO">${debug-compressed} = {'time': [0.017496833, 0.017504944, 0.017510347, 0.017517097, 0.017521417, 0.017521958, 0.017531069, 0.017538542, 0.017546403, 0.017550014, 0.017550556, 0.017554431, 0.017562653, 0.017567042, 0.017569...</msg>
<status status="PASS" starttime="20201112 09:43:00.907" endtime="20201112 09:43:00.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.926" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:00.925" endtime="20201112 09:43:00.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.929" level="INFO">VALUE: {'time': [0.017496833, 0.017504944, 0.017510347, 0.017517097, 0.017521417, 0.017521958, 0.017531069, 0.017538542, 0.017546403, 0.017550014, 0.017550556, 0.017554431, 0.017562653, 0.017567042, 0.017569708, 0.01757025, 0.017579125, 0.017583208, 0.01758375, 0.017593111, 0.017602972, 0.017603514, 0.017610722, 0.017616403, 0.017616944, 0.017626236, 0.017635153, 0.017640264, 0.017640806, 0.017643889, 0.017648292, 0.017650722, 0.017656014, 0.017658556, 0.017665694, 0.017666236, 0.017672486, 0.017679917, 0.017689083, 0.017695319, 0.017699958, 0.0177005, 0.017706917, 0.017716014, 0.017721069, 0.017728972, 0.017735931, 0.017744306, 0.017749847, 0.017757014, 0.017757556, 0.017765639, 0.017775444, 0.017775986, 0.017780861, 0.017786111, 0.017795903, 0.017804361, 0.017808722, 0.017814528, 0.017823472], 'diff': [0, 8.111000000001617e-06, 5.402999999997576e-06, 6.749999999999812e-06, 4.3200000000021e-06, 5.409999999997361e-07, 9.110999999999148e-06, 7.473000000000896e-06, 7.860999999997897e-06, 3.611000000000586e-06, 5.419999999992098e-07, 3.875000000000406e-06, 8.222000000002172e-06, 4.389000000000476e-06, 2.665999999998392e-06, 5.419999999992098e-07, 8.875000000001937e-06, 4.082999999998477e-06, 5.419999999992098e-07, 9.361000000002867e-06, 9.860999999999898e-06, 5.419999999992098e-07, 7.2079999999981326e-06, 5.681000000000436e-06, 5.409999999997361e-07, 9.292000000001022e-06, 8.917000000000647e-06, 5.110999999998617e-06, 5.419999999992098e-07, 3.083000000000946e-06, 4.403000000000046e-06, 2.4300000000011812e-06, 5.292000000000491e-06, 2.5419999999977405e-06, 7.138000000000283e-06, 5.419999999992098e-07, 6.250000000002781e-06, 7.430999999998716e-06, 9.166000000001423e-06, 6.235999999999742e-06, 4.6389999999972564e-06, 5.420000000026792e-07, 6.416999999998146e-06, 9.096999999999578e-06, 5.055000000000337e-06, 7.903000000000077e-06, 6.959000000000826e-06, 8.375000000001437e-06, 5.540999999997798e-06, 7.167000000002366e-06, 5.419999999992098e-07, 8.082999999999008e-06, 9.805000000001618e-06, 5.419999999992098e-07, 4.8749999999979365e-06, 5.250000000001781e-06, 9.791999999998052e-06, 8.458000000002852e-06, 4.360999999997867e-06, 5.806000000000561e-06, 8.944000000000313e-06], 'eventsourcesource_diff': [0, 8.111000000001617e-06, 5.402999999997576e-06, 6.749999999999812e-06, 4.3200000000021e-06, 5.409999999997361e-07, 9.110999999999148e-06, 7.473000000000896e-06, 7.860999999997897e-06, 3.611000000000586e-06, 5.419999999992098e-07, 3.875000000000406e-06, 8.222000000002172e-06, 4.389000000000476e-06, 2.665999999998392e-06, 5.419999999992098e-07, 8.875000000001937e-06, 4.082999999998477e-06, 5.419999999992098e-07, 9.361000000002867e-06, 9.860999999999898e-06, 5.419999999992098e-07, 7.2079999999981326e-06, 5.681000000000436e-06, 5.409999999997361e-07, 9.292000000001022e-06, 8.917000000000647e-06, 5.110999999998617e-06, 5.419999999992098e-07, 3.083000000000946e-06, 4.403000000000046e-06, 2.4300000000011812e-06, 5.292000000000491e-06, 2.5419999999977405e-06, 7.138000000000283e-06, 5.419999999992098e-07, 6.250000000002781e-06, 7.430999999998716e-06, 9.166000000001423e-06, 6.235999999999742e-06, 4.6389999999972564e-06, 5.420000000026792e-07, 6.416999999998146e-06, 9.096999999999578e-06, 5.055000000000337e-06, 7.903000000000077e-06, 6.959000000000826e-06, 8.375000000001437e-06, 5.540999999997798e-06, 7.167000000002366e-06, 5.419999999992098e-07, 8.082999999999008e-06, 9.805000000001618e-06, 5.419999999992098e-07, 4.8749999999979365e-06, 5.250000000001781e-06, 9.791999999998052e-06, 8.458000000002852e-06, 4.360999999997867e-06, 5.806000000000561e-06, 8.944000000000313e-06]}</msg>
<status status="PASS" starttime="20201112 09:43:00.927" endtime="20201112 09:43:00.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.923" endtime="20201112 09:43:00.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.934" level="INFO">${RESULT} = [{'time': 0.017504944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.111000000001617e-06, 'source_diff': 8.111000000001617e-06}, {'time': 0.017517097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:00.931" endtime="20201112 09:43:00.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.943" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017504944, 0.017517097, 0.017521958, 0.017538542, 0.017550014, 0.017554431, 0.017567042, 0.01757025, 0.017583208, 0.017593111, 0.017603514, 0.017616403, 0.017626236, 0.017640264, 0.0176438...</msg>
<status status="PASS" starttime="20201112 09:43:00.935" endtime="20201112 09:43:00.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.947" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:00.946" endtime="20201112 09:43:00.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.949" level="INFO">VALUE: [8.111000000001617e-06, 6.749999999999812e-06, 5.409999999997361e-07, 7.473000000000896e-06, 3.611000000000586e-06, 3.875000000000406e-06, 4.389000000000476e-06, 5.419999999992098e-07, 4.082999999998477e-06, 9.361000000002867e-06, 5.419999999992098e-07, 5.681000000000436e-06, 9.292000000001022e-06, 5.110999999998617e-06, 3.083000000000946e-06, 2.4300000000011812e-06, 2.5419999999977405e-06, 5.419999999992098e-07, 7.430999999998716e-06, 6.235999999999742e-06, 5.420000000026792e-07, 9.096999999999578e-06, 7.903000000000077e-06, 8.375000000001437e-06, 7.167000000002366e-06, 8.082999999999008e-06, 5.419999999992098e-07, 5.250000000001781e-06, 8.458000000002852e-06, 5.806000000000561e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.948" endtime="20201112 09:43:00.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.943" endtime="20201112 09:43:00.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.952" endtime="20201112 09:43:00.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.956" endtime="20201112 09:43:00.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.954" endtime="20201112 09:43:00.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.951" endtime="20201112 09:43:00.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.582" endtime="20201112 09:43:00.977"></status>
</kw>
<msg timestamp="20201112 09:43:00.977" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.986" endtime="20201112 09:43:00.996"></status>
</kw>
<msg timestamp="20201112 09:43:00.996" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.984" endtime="20201112 09:43:00.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.999" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.997" endtime="20201112 09:43:00.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.000" endtime="20201112 09:43:01.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.981" endtime="20201112 09:43:01.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.979" endtime="20201112 09:43:01.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.009" endtime="20201112 09:43:01.286"></status>
</kw>
<msg timestamp="20201112 09:43:01.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018463944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.007" endtime="20201112 09:43:01.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018463944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.289" endtime="20201112 09:43:01.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.295" endtime="20201112 09:43:01.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.005" endtime="20201112 09:43:01.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.003" endtime="20201112 09:43:01.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.301" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:01.300" endtime="20201112 09:43:01.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.305" level="INFO">VALUE: [{'time': 0.018463944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018475375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018480722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.018481264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018483944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.018487611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.018492611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.018498986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.01850875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.018512597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.018522236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.639000000002257e-06, 'source_diff': 9.639000000002257e-06}, {'time': 0.018529181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944999999997786e-06, 'source_diff': 6.944999999997786e-06}, {'time': 0.018529722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018535972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.018542458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018549403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944999999997786e-06, 'source_diff': 6.944999999997786e-06}, {'time': 0.018555, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018561319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.01857025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.018577972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.018578514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018584931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999998146e-06, 'source_diff': 6.416999999998146e-06}, {'time': 0.018594264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018599792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018602944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.018612819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018615972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.018624889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.018630958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.018634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018634639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018637361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018645931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.018646472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018650833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018658319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018667417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.097999999999051e-06, 'source_diff': 9.097999999999051e-06}, {'time': 0.018676986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.018686083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018688597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.0186935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902999999997076e-06, 'source_diff': 4.902999999997076e-06}, {'time': 0.018700486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018701028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018705625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018712319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.018712861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018720778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.018729944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.165999999997954e-06, 'source_diff': 9.165999999997954e-06}, {'time': 0.018739514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.018740056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018743681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018744222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018747778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.018748319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01875475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.018761931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.018764611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.018770833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018778972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.018779514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 09:43:01.302" endtime="20201112 09:43:01.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.298" endtime="20201112 09:43:01.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:01.324" level="INFO">${debug-compressed} = {'time': [0.018463944, 0.018468347, 0.018475375, 0.018480722, 0.018481264, 0.018483944, 0.018487611, 0.018492611, 0.018498986, 0.01850875, 0.018512597, 0.018522236, 0.018529181, 0.018529722, 0.0185359...</msg>
<status status="PASS" starttime="20201112 09:43:01.308" endtime="20201112 09:43:01.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.328" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:01.327" endtime="20201112 09:43:01.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.331" level="INFO">VALUE: {'time': [0.018463944, 0.018468347, 0.018475375, 0.018480722, 0.018481264, 0.018483944, 0.018487611, 0.018492611, 0.018498986, 0.01850875, 0.018512597, 0.018522236, 0.018529181, 0.018529722, 0.018535972, 0.018542458, 0.018549403, 0.018555, 0.018561319, 0.01857025, 0.018577972, 0.018578514, 0.018584931, 0.018594264, 0.018599792, 0.018602944, 0.018612819, 0.018615972, 0.018624889, 0.018630958, 0.018634097, 0.018634639, 0.018637361, 0.018645931, 0.018646472, 0.018650833, 0.018658319, 0.018667417, 0.018676986, 0.018686083, 0.018688597, 0.0186935, 0.018700486, 0.018701028, 0.018705625, 0.018712319, 0.018712861, 0.018720778, 0.018729944, 0.018739514, 0.018740056, 0.018743681, 0.018744222, 0.018747778, 0.018748319, 0.01875475, 0.018761931, 0.018764611, 0.018770833, 0.018778972, 0.018779514], 'diff': [0, 4.403000000000046e-06, 7.0279999999992016e-06, 5.347000000002766e-06, 5.419999999992098e-07, 2.679999999997962e-06, 3.667000000002335e-06, 4.9999999999980616e-06, 6.374999999999437e-06, 9.764000000002382e-06, 3.846999999997797e-06, 9.639000000002257e-06, 6.944999999997786e-06, 5.409999999997361e-07, 6.250000000002781e-06, 6.485999999999992e-06, 6.944999999997786e-06, 5.596999999999547e-06, 6.319000000001157e-06, 8.931000000000217e-06, 7.722000000001672e-06, 5.419999999992098e-07, 6.416999999998146e-06, 9.333000000000258e-06, 5.528000000001171e-06, 3.151999999999322e-06, 9.874999999999468e-06, 3.153000000002265e-06, 8.916999999997177e-06, 6.069000000000907e-06, 3.1389999999992257e-06, 5.420000000026792e-07, 2.722000000000141e-06, 8.569999999999411e-06, 5.409999999997361e-07, 4.360999999997867e-06, 7.486000000000992e-06, 9.097999999999051e-06, 9.569000000000938e-06, 9.096999999999578e-06, 2.51400000000207e-06, 4.902999999997076e-06, 6.986000000000492e-06, 5.420000000026792e-07, 4.596999999998547e-06, 6.694000000001532e-06, 5.419999999992098e-07, 7.916999999999647e-06, 9.165999999997954e-06, 9.570000000000412e-06, 5.420000000026792e-07, 3.625000000000156e-06, 5.409999999997361e-07, 3.5559999999983105e-06, 5.409999999997361e-07, 6.431000000001186e-06, 7.180999999998466e-06, 2.6800000000014312e-06, 6.222000000000172e-06, 8.139000000000757e-06, 5.419999999992098e-07], 'eventsourcesource_diff': [0, 4.403000000000046e-06, 7.0279999999992016e-06, 5.347000000002766e-06, 5.419999999992098e-07, 2.679999999997962e-06, 3.667000000002335e-06, 4.9999999999980616e-06, 6.374999999999437e-06, 9.764000000002382e-06, 3.846999999997797e-06, 9.639000000002257e-06, 6.944999999997786e-06, 5.409999999997361e-07, 6.250000000002781e-06, 6.485999999999992e-06, 6.944999999997786e-06, 5.596999999999547e-06, 6.319000000001157e-06, 8.931000000000217e-06, 7.722000000001672e-06, 5.419999999992098e-07, 6.416999999998146e-06, 9.333000000000258e-06, 5.528000000001171e-06, 3.151999999999322e-06, 9.874999999999468e-06, 3.153000000002265e-06, 8.916999999997177e-06, 6.069000000000907e-06, 3.1389999999992257e-06, 5.420000000026792e-07, 2.722000000000141e-06, 8.569999999999411e-06, 5.409999999997361e-07, 4.360999999997867e-06, 7.486000000000992e-06, 9.097999999999051e-06, 9.569000000000938e-06, 9.096999999999578e-06, 2.51400000000207e-06, 4.902999999997076e-06, 6.986000000000492e-06, 5.420000000026792e-07, 4.596999999998547e-06, 6.694000000001532e-06, 5.419999999992098e-07, 7.916999999999647e-06, 9.165999999997954e-06, 9.570000000000412e-06, 5.420000000026792e-07, 3.625000000000156e-06, 5.409999999997361e-07, 3.5559999999983105e-06, 5.409999999997361e-07, 6.431000000001186e-06, 7.180999999998466e-06, 2.6800000000014312e-06, 6.222000000000172e-06, 8.139000000000757e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201112 09:43:01.329" endtime="20201112 09:43:01.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.325" endtime="20201112 09:43:01.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.335" level="INFO">${RESULT} = [{'time': 0.018468347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018480722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:01.333" endtime="20201112 09:43:01.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:01.344" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018468347, 0.018480722, 0.018483944, 0.018492611, 0.01850875, 0.018522236, 0.018529722, 0.018542458, 0.018555, 0.01857025, 0.018578514, 0.018594264, 0.018602944, 0.018615972, 0.018630958, ...</msg>
<status status="PASS" starttime="20201112 09:43:01.336" endtime="20201112 09:43:01.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.349" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:01.348" endtime="20201112 09:43:01.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.351" level="INFO">VALUE: [4.403000000000046e-06, 5.347000000002766e-06, 2.679999999997962e-06, 4.9999999999980616e-06, 9.764000000002382e-06, 9.639000000002257e-06, 5.409999999997361e-07, 6.485999999999992e-06, 5.596999999999547e-06, 8.931000000000217e-06, 5.419999999992098e-07, 9.333000000000258e-06, 3.151999999999322e-06, 3.153000000002265e-06, 6.069000000000907e-06, 5.420000000026792e-07, 8.569999999999411e-06, 4.360999999997867e-06, 9.097999999999051e-06, 9.096999999999578e-06, 4.902999999997076e-06, 5.420000000026792e-07, 6.694000000001532e-06, 7.916999999999647e-06, 9.570000000000412e-06, 3.625000000000156e-06, 3.5559999999983105e-06, 6.431000000001186e-06, 2.6800000000014312e-06, 8.139000000000757e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.350" endtime="20201112 09:43:01.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.345" endtime="20201112 09:43:01.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.354" endtime="20201112 09:43:01.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.358" endtime="20201112 09:43:01.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.356" endtime="20201112 09:43:01.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.353" endtime="20201112 09:43:01.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.977" endtime="20201112 09:43:01.378"></status>
</kw>
<msg timestamp="20201112 09:43:01.379" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.386" endtime="20201112 09:43:01.397"></status>
</kw>
<msg timestamp="20201112 09:43:01.398" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.385" endtime="20201112 09:43:01.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.400" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.399" endtime="20201112 09:43:01.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.401" endtime="20201112 09:43:01.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.382" endtime="20201112 09:43:01.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.380" endtime="20201112 09:43:01.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.411" endtime="20201112 09:43:01.682"></status>
</kw>
<msg timestamp="20201112 09:43:01.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01749025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017493153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:01.410" endtime="20201112 09:43:01.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01749025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017493153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:01.685" endtime="20201112 09:43:01.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.693" endtime="20201112 09:43:01.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.406" endtime="20201112 09:43:01.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.404" endtime="20201112 09:43:01.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.701" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:01.700" endtime="20201112 09:43:01.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.707" level="INFO">VALUE: [{'time': 0.01749025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017493153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017499458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.017508083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.017516306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222999999998176e-06, 'source_diff': 8.222999999998176e-06}, {'time': 0.017521889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.017529319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.017535694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.017542819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.017552417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.017556722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.017557264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017563222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017566583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017570917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.017576917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.017577458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017580389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.017582875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.017587222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017592056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017597069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.013000000001627e-06, 'source_diff': 5.013000000001627e-06}, {'time': 0.017602347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.017602889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017608111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017608653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017612514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017613056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017622389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.017624847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017631306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.017640639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.017641181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017647833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.652000000002822e-06, 'source_diff': 6.652000000002822e-06}, {'time': 0.017656042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.017656583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017661639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017662181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017666292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017669431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.017678764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.017683347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.017690556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.017697083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.017703167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017708667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.017709208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017716417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.017723931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.513999999996662e-06, 'source_diff': 7.513999999996662e-06}, {'time': 0.017729042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017734153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017739681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017743556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017752958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.017760389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.017769306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.017774819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.513000000002127e-06, 'source_diff': 5.513000000002127e-06}, {'time': 0.017775361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017779722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017787375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}]</msg>
<status status="PASS" starttime="20201112 09:43:01.703" endtime="20201112 09:43:01.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.697" endtime="20201112 09:43:01.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:01.728" level="INFO">${debug-compressed} = {'time': [0.01749025, 0.017493153, 0.017499458, 0.017508083, 0.017516306, 0.017521889, 0.017529319, 0.017535694, 0.017542819, 0.017552417, 0.017556722, 0.017557264, 0.017563222, 0.017566583, 0.0175709...</msg>
<status status="PASS" starttime="20201112 09:43:01.710" endtime="20201112 09:43:01.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.733" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:01.732" endtime="20201112 09:43:01.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.737" level="INFO">VALUE: {'time': [0.01749025, 0.017493153, 0.017499458, 0.017508083, 0.017516306, 0.017521889, 0.017529319, 0.017535694, 0.017542819, 0.017552417, 0.017556722, 0.017557264, 0.017563222, 0.017566583, 0.017570917, 0.017576917, 0.017577458, 0.017580389, 0.017582875, 0.017587222, 0.017592056, 0.017597069, 0.017602347, 0.017602889, 0.017608111, 0.017608653, 0.017612514, 0.017613056, 0.017622389, 0.017624847, 0.017631306, 0.017640639, 0.017641181, 0.017647833, 0.017656042, 0.017656583, 0.017661639, 0.017662181, 0.017666292, 0.017669431, 0.017678764, 0.017683347, 0.017690556, 0.017697083, 0.017703167, 0.017708667, 0.017709208, 0.017716417, 0.017723931, 0.017729042, 0.017734153, 0.017739681, 0.017743556, 0.017752958, 0.017760389, 0.017769306, 0.017774819, 0.017775361, 0.017779722, 0.017787375], 'diff': [0, 2.903000000002015e-06, 6.304999999998118e-06, 8.625000000001687e-06, 8.222999999998176e-06, 5.582999999999977e-06, 7.430000000002712e-06, 6.374999999999437e-06, 7.125000000000187e-06, 9.597999999999551e-06, 4.304999999999587e-06, 5.419999999992098e-07, 5.958000000000352e-06, 3.361000000000336e-06, 4.3339999999982e-06, 6.000000000002531e-06, 5.409999999997361e-07, 2.9309999999976855e-06, 2.4860000000029303e-06, 4.346999999998297e-06, 4.8339999999987004e-06, 5.013000000001627e-06, 5.278000000000921e-06, 5.419999999992098e-07, 5.221999999999172e-06, 5.419999999992098e-07, 3.861000000000836e-06, 5.419999999992098e-07, 9.333000000000258e-06, 2.458000000000321e-06, 6.459000000000326e-06, 9.333000000000258e-06, 5.419999999992098e-07, 6.652000000002822e-06, 8.208999999998606e-06, 5.409999999997361e-07, 5.055999999999811e-06, 5.419999999992098e-07, 4.111000000001086e-06, 3.1389999999992257e-06, 9.333000000000258e-06, 4.582999999998977e-06, 7.209000000001076e-06, 6.526999999999228e-06, 6.0839999999999506e-06, 5.500000000002031e-06, 5.409999999997361e-07, 7.209000000001076e-06, 7.513999999996662e-06, 5.111000000002086e-06, 5.110999999998617e-06, 5.528000000001171e-06, 3.875000000000406e-06, 9.401999999998634e-06, 7.431000000002186e-06, 8.916999999997177e-06, 5.513000000002127e-06, 5.419999999992098e-07, 4.361000000001336e-06, 7.652999999999827e-06], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 2.903000000002015e-06, 6.304999999998118e-06, 8.625000000001687e-06, 8.222999999998176e-06, 5.582999999999977e-06, 7.430000000002712e-06, 6.374999999999437e-06, 7.125000000000187e-06, 9.597999999999551e-06, 4.304999999999587e-06, 5.419999999992098e-07, 5.958000000000352e-06, 3.361000000000336e-06, 4.3339999999982e-06, 6.000000000002531e-06, 5.409999999997361e-07, 2.9309999999976855e-06, 2.4860000000029303e-06, 4.346999999998297e-06, 4.8339999999987004e-06, 5.013000000001627e-06, 5.278000000000921e-06, 5.419999999992098e-07, 5.221999999999172e-06, 5.419999999992098e-07, 3.861000000000836e-06, 5.419999999992098e-07, 9.333000000000258e-06, 2.458000000000321e-06, 6.459000000000326e-06, 9.333000000000258e-06, 5.419999999992098e-07, 6.652000000002822e-06, 8.208999999998606e-06, 5.409999999997361e-07, 5.055999999999811e-06, 5.419999999992098e-07, 4.111000000001086e-06, 3.1389999999992257e-06, 9.333000000000258e-06, 4.582999999998977e-06, 7.209000000001076e-06, 6.526999999999228e-06, 6.0839999999999506e-06, 5.500000000002031e-06, 5.409999999997361e-07, 7.209000000001076e-06, 7.513999999996662e-06, 5.111000000002086e-06, 5.110999999998617e-06, 5.528000000001171e-06, 3.875000000000406e-06, 9.401999999998634e-06, 7.431000000002186e-06, 8.916999999997177e-06, 5.513000000002127e-06, 5.419999999992098e-07, 4.361000000001336e-06, 7.652999999999827e-06]}</msg>
<status status="PASS" starttime="20201112 09:43:01.734" endtime="20201112 09:43:01.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.729" endtime="20201112 09:43:01.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.743" level="INFO">${RESULT} = [{'time': 0.017493153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017508083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:01.739" endtime="20201112 09:43:01.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:01.753" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017493153, 0.017508083, 0.017521889, 0.017535694, 0.017552417, 0.017557264, 0.017566583, 0.017576917, 0.017580389, 0.017587222, 0.017597069, 0.017602889, 0.017608653, 0.017613056, 0.017624...</msg>
<status status="PASS" starttime="20201112 09:43:01.744" endtime="20201112 09:43:01.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.757" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:01.756" endtime="20201112 09:43:01.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.760" level="INFO">VALUE: [2.903000000002015e-06, 8.625000000001687e-06, 5.582999999999977e-06, 6.374999999999437e-06, 9.597999999999551e-06, 5.419999999992098e-07, 3.361000000000336e-06, 6.000000000002531e-06, 2.9309999999976855e-06, 4.346999999998297e-06, 5.013000000001627e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 2.458000000000321e-06, 9.333000000000258e-06, 6.652000000002822e-06, 5.409999999997361e-07, 5.419999999992098e-07, 3.1389999999992257e-06, 4.582999999998977e-06, 6.526999999999228e-06, 5.500000000002031e-06, 7.209000000001076e-06, 5.111000000002086e-06, 5.528000000001171e-06, 9.401999999998634e-06, 8.916999999997177e-06, 5.419999999992098e-07, 7.652999999999827e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.758" endtime="20201112 09:43:01.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.753" endtime="20201112 09:43:01.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.763" endtime="20201112 09:43:01.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.766" endtime="20201112 09:43:01.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.765" endtime="20201112 09:43:01.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.761" endtime="20201112 09:43:01.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.379" endtime="20201112 09:43:01.787"></status>
</kw>
<msg timestamp="20201112 09:43:01.787" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.795" endtime="20201112 09:43:01.806"></status>
</kw>
<msg timestamp="20201112 09:43:01.807" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.793" endtime="20201112 09:43:01.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.809" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.808" endtime="20201112 09:43:01.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.810" endtime="20201112 09:43:01.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.791" endtime="20201112 09:43:01.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.789" endtime="20201112 09:43:01.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.819" endtime="20201112 09:43:02.090"></status>
</kw>
<msg timestamp="20201112 09:43:02.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0175235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017529264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:01.818" endtime="20201112 09:43:02.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0175235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017529264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:02.093" endtime="20201112 09:43:02.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.099" endtime="20201112 09:43:02.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.815" endtime="20201112 09:43:02.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.813" endtime="20201112 09:43:02.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.106" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:02.105" endtime="20201112 09:43:02.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.110" level="INFO">VALUE: [{'time': 0.0175235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017529264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.017538889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.017539431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017544972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.017550806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.017558972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000000423e-06, 'source_diff': 8.166000000000423e-06}, {'time': 0.017562639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.017570139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.017575181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017575722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017578333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6110000000030553e-06, 'source_diff': 2.6110000000030553e-06}, {'time': 0.017583847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.017584389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017592542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.017599736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.017605264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.017610556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017615903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017625236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.017631, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.017640639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.017641181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017647194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.013000000002627e-06, 'source_diff': 6.013000000002627e-06}, {'time': 0.017654625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.017663556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.017667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.017667542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017671889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017681056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.017685458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.017688139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.017695403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.017702653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.017708722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017715681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.0177205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017728389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.017733042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017735792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017743264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.017751125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.017758542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.01776525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.017770611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017774333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017777042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.01778525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.017785792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017792042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017796375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.017801181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.017801722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017804639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.017814222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.017821944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.017822486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017825569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}]</msg>
<status status="PASS" starttime="20201112 09:43:02.107" endtime="20201112 09:43:02.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.103" endtime="20201112 09:43:02.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:02.126" level="INFO">${debug-compressed} = {'time': [0.0175235, 0.017529264, 0.017538889, 0.017539431, 0.017544972, 0.017550806, 0.017558972, 0.017562639, 0.017570139, 0.017575181, 0.017575722, 0.017578333, 0.017583847, 0.017584389, 0.01759254...</msg>
<status status="PASS" starttime="20201112 09:43:02.112" endtime="20201112 09:43:02.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.130" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:02.129" endtime="20201112 09:43:02.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.133" level="INFO">VALUE: {'time': [0.0175235, 0.017529264, 0.017538889, 0.017539431, 0.017544972, 0.017550806, 0.017558972, 0.017562639, 0.017570139, 0.017575181, 0.017575722, 0.017578333, 0.017583847, 0.017584389, 0.017592542, 0.017599736, 0.017605264, 0.017610556, 0.017615903, 0.017625236, 0.017631, 0.017640639, 0.017641181, 0.017647194, 0.017654625, 0.017663556, 0.017667, 0.017667542, 0.017671889, 0.017681056, 0.017685458, 0.017688139, 0.017695403, 0.017702653, 0.017708722, 0.017715681, 0.0177205, 0.017728389, 0.017733042, 0.017735792, 0.017743264, 0.017751125, 0.017758542, 0.01776525, 0.017770611, 0.017774333, 0.017777042, 0.01778525, 0.017785792, 0.017792042, 0.017796375, 0.017801181, 0.017801722, 0.017804639, 0.017814222, 0.017821944, 0.017822486, 0.017825569], 'diff': [0, 5.7639999999983815e-06, 9.624999999999218e-06, 5.420000000026792e-07, 5.540999999997798e-06, 5.8339999999997005e-06, 8.166000000000423e-06, 3.667000000002335e-06, 7.499999999997092e-06, 5.042000000000241e-06, 5.409999999997361e-07, 2.6110000000030553e-06, 5.5139999999981315e-06, 5.419999999992098e-07, 8.153000000000327e-06, 7.194000000002032e-06, 5.527999999997701e-06, 5.292000000000491e-06, 5.346999999999297e-06, 9.333000000000258e-06, 5.764000000001851e-06, 9.638999999998787e-06, 5.419999999992098e-07, 6.013000000002627e-06, 7.430999999998716e-06, 8.931000000000217e-06, 3.4439999999982818e-06, 5.420000000026792e-07, 4.346999999998297e-06, 9.167000000000897e-06, 4.402000000000572e-06, 2.6809999999974354e-06, 7.263999999999882e-06, 7.250000000000312e-06, 6.069000000000907e-06, 6.959000000000826e-06, 4.818999999999657e-06, 7.889000000000507e-06, 4.653000000000296e-06, 2.749999999999281e-06, 7.472000000001422e-06, 7.860999999997897e-06, 7.4169999999991465e-06, 6.708000000001102e-06, 5.360999999998867e-06, 3.722000000001141e-06, 2.7090000000000447e-06, 8.207999999999133e-06, 5.420000000026792e-07, 6.249999999999312e-06, 4.332999999998727e-06, 4.805999999999561e-06, 5.409999999997361e-07, 2.917000000001585e-06, 9.583000000000508e-06, 7.721999999998203e-06, 5.419999999992098e-07, 3.083000000000946e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcesource_diff': [0, 5.7639999999983815e-06, 9.624999999999218e-06, 5.420000000026792e-07, 5.540999999997798e-06, 5.8339999999997005e-06, 8.166000000000423e-06, 3.667000000002335e-06, 7.499999999997092e-06, 5.042000000000241e-06, 5.409999999997361e-07, 2.6110000000030553e-06, 5.5139999999981315e-06, 5.419999999992098e-07, 8.153000000000327e-06, 7.194000000002032e-06, 5.527999999997701e-06, 5.292000000000491e-06, 5.346999999999297e-06, 9.333000000000258e-06, 5.764000000001851e-06, 9.638999999998787e-06, 5.419999999992098e-07, 6.013000000002627e-06, 7.430999999998716e-06, 8.931000000000217e-06, 3.4439999999982818e-06, 5.420000000026792e-07, 4.346999999998297e-06, 9.167000000000897e-06, 4.402000000000572e-06, 2.6809999999974354e-06, 7.263999999999882e-06, 7.250000000000312e-06, 6.069000000000907e-06, 6.959000000000826e-06, 4.818999999999657e-06, 7.889000000000507e-06, 4.653000000000296e-06, 2.749999999999281e-06, 7.472000000001422e-06, 7.860999999997897e-06, 7.4169999999991465e-06, 6.708000000001102e-06, 5.360999999998867e-06, 3.722000000001141e-06, 2.7090000000000447e-06, 8.207999999999133e-06, 5.420000000026792e-07, 6.249999999999312e-06, 4.332999999998727e-06, 4.805999999999561e-06, 5.409999999997361e-07, 2.917000000001585e-06, 9.583000000000508e-06, 7.721999999998203e-06, 5.419999999992098e-07, 3.083000000000946e-06]}</msg>
<status status="PASS" starttime="20201112 09:43:02.131" endtime="20201112 09:43:02.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.127" endtime="20201112 09:43:02.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.138" level="INFO">${RESULT} = [{'time': 0.017529264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.017539431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:02.135" endtime="20201112 09:43:02.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.147" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017529264, 0.017539431, 0.017550806, 0.017562639, 0.017575181, 0.017578333, 0.017584389, 0.017599736, 0.017610556, 0.017625236, 0.017640639, 0.017647194, 0.017663556, 0.017667542, 0.017681...</msg>
<status status="PASS" starttime="20201112 09:43:02.139" endtime="20201112 09:43:02.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.152" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:02.151" endtime="20201112 09:43:02.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.155" level="INFO">VALUE: [5.7639999999983815e-06, 5.420000000026792e-07, 5.8339999999997005e-06, 3.667000000002335e-06, 5.042000000000241e-06, 2.6110000000030553e-06, 5.419999999992098e-07, 7.194000000002032e-06, 5.292000000000491e-06, 9.333000000000258e-06, 9.638999999998787e-06, 6.013000000002627e-06, 8.931000000000217e-06, 5.420000000026792e-07, 9.167000000000897e-06, 2.6809999999974354e-06, 7.250000000000312e-06, 6.959000000000826e-06, 7.889000000000507e-06, 2.749999999999281e-06, 7.860999999997897e-06, 6.708000000001102e-06, 3.722000000001141e-06, 8.207999999999133e-06, 6.249999999999312e-06, 4.805999999999561e-06, 2.917000000001585e-06, 7.721999999998203e-06, 3.083000000000946e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.153" endtime="20201112 09:43:02.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.148" endtime="20201112 09:43:02.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.158" endtime="20201112 09:43:02.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.161" endtime="20201112 09:43:02.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.160" endtime="20201112 09:43:02.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.157" endtime="20201112 09:43:02.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.788" endtime="20201112 09:43:02.182"></status>
</kw>
<msg timestamp="20201112 09:43:02.182" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.190" endtime="20201112 09:43:02.202"></status>
</kw>
<msg timestamp="20201112 09:43:02.202" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.189" endtime="20201112 09:43:02.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.205" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.203" endtime="20201112 09:43:02.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.206" endtime="20201112 09:43:02.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.186" endtime="20201112 09:43:02.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.184" endtime="20201112 09:43:02.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.215" endtime="20201112 09:43:02.485"></status>
</kw>
<msg timestamp="20201112 09:43:02.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017431111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017436222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.213" endtime="20201112 09:43:02.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017431111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017436222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.488" endtime="20201112 09:43:02.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.494" endtime="20201112 09:43:02.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.211" endtime="20201112 09:43:02.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.209" endtime="20201112 09:43:02.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.501" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:02.500" endtime="20201112 09:43:02.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.504" level="INFO">VALUE: [{'time': 0.017431111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017436222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017436764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017442708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.017451403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.017457153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.017457694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017466486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.017467028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017472556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017473097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017478806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.0174825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.01748825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.017488792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017495458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665999999998923e-06, 'source_diff': 6.665999999998923e-06}, {'time': 0.017499542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.017505611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017506153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017511944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791000000001517e-06, 'source_diff': 5.791000000001517e-06}, {'time': 0.017516111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017523042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.930999999998216e-06, 'source_diff': 6.930999999998216e-06}, {'time': 0.017523583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017525944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3610000000028053e-06, 'source_diff': 2.3610000000028053e-06}, {'time': 0.017526486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017531944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.017532486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017540569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.017548792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.017556458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.017562542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017571389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.017577403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.017581722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.017586764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017590861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017598597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.017599139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017603958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017607597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017610097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.017618042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.944999999998786e-06, 'source_diff': 7.944999999998786e-06}, {'time': 0.017624236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.017632847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.01764075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.017646819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017649597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.017655083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.017665042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.017669306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017672042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017674486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017679986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.017680528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017687736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.017694292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.017696778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017699528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017708139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.017711597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.017719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}]</msg>
<status status="PASS" starttime="20201112 09:43:02.502" endtime="20201112 09:43:02.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.497" endtime="20201112 09:43:02.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:02.522" level="INFO">${debug-compressed} = {'time': [0.017431111, 0.017436222, 0.017436764, 0.017442708, 0.017451403, 0.017457153, 0.017457694, 0.017466486, 0.017467028, 0.017472556, 0.017473097, 0.017478806, 0.0174825, 0.01748825, 0.017488792...</msg>
<status status="PASS" starttime="20201112 09:43:02.507" endtime="20201112 09:43:02.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.526" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:02.525" endtime="20201112 09:43:02.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.530" level="INFO">VALUE: {'time': [0.017431111, 0.017436222, 0.017436764, 0.017442708, 0.017451403, 0.017457153, 0.017457694, 0.017466486, 0.017467028, 0.017472556, 0.017473097, 0.017478806, 0.0174825, 0.01748825, 0.017488792, 0.017495458, 0.017499542, 0.017505611, 0.017506153, 0.017511944, 0.017516111, 0.017523042, 0.017523583, 0.017525944, 0.017526486, 0.017531944, 0.017532486, 0.017540569, 0.017548792, 0.017556458, 0.017562542, 0.017571389, 0.017577403, 0.017581722, 0.017586764, 0.017590861, 0.017598597, 0.017599139, 0.017603958, 0.017607597, 0.017610097, 0.017618042, 0.017624236, 0.017632847, 0.01764075, 0.017646819, 0.017649597, 0.017655083, 0.017665042, 0.017669306, 0.017672042, 0.017674486, 0.017679986, 0.017680528, 0.017687736, 0.017694292, 0.017696778, 0.017699528, 0.017708139, 0.017711597, 0.017719806], 'diff': [0, 5.111000000002086e-06, 5.419999999992098e-07, 5.944000000000782e-06, 8.694999999999536e-06, 5.749999999998812e-06, 5.409999999997361e-07, 8.792000000000522e-06, 5.419999999992098e-07, 5.528000000001171e-06, 5.409999999997361e-07, 5.7089999999995755e-06, 3.6940000000020012e-06, 5.749999999998812e-06, 5.419999999992098e-07, 6.665999999998923e-06, 4.08400000000142e-06, 6.069000000000907e-06, 5.419999999992098e-07, 5.791000000001517e-06, 4.166999999999366e-06, 6.930999999998216e-06, 5.409999999997361e-07, 2.3610000000028053e-06, 5.419999999992098e-07, 5.457999999999852e-06, 5.419999999992098e-07, 8.082999999999008e-06, 8.223000000001646e-06, 7.665999999999923e-06, 6.0839999999999506e-06, 8.846999999999328e-06, 6.0139999999986316e-06, 4.319000000002626e-06, 5.042000000000241e-06, 4.096999999998047e-06, 7.736000000001242e-06, 5.419999999992098e-07, 4.818999999999657e-06, 3.6389999999997258e-06, 2.5000000000025002e-06, 7.944999999998786e-06, 6.194000000001032e-06, 8.610999999998648e-06, 7.903000000000077e-06, 6.069000000000907e-06, 2.7779999999984206e-06, 5.485999999998992e-06, 9.959000000000356e-06, 4.264000000000351e-06, 2.735999999999711e-06, 2.444000000000751e-06, 5.500000000002031e-06, 5.419999999992098e-07, 7.2079999999981326e-06, 6.556000000001311e-06, 2.485999999999461e-06, 2.749999999999281e-06, 8.611000000002117e-06, 3.4579999999978517e-06, 8.209000000002076e-06], 'eventsourcesource_diff': [0, 5.111000000002086e-06, 5.419999999992098e-07, 5.944000000000782e-06, 8.694999999999536e-06, 5.749999999998812e-06, 5.409999999997361e-07, 8.792000000000522e-06, 5.419999999992098e-07, 5.528000000001171e-06, 5.409999999997361e-07, 5.7089999999995755e-06, 3.6940000000020012e-06, 5.749999999998812e-06, 5.419999999992098e-07, 6.665999999998923e-06, 4.08400000000142e-06, 6.069000000000907e-06, 5.419999999992098e-07, 5.791000000001517e-06, 4.166999999999366e-06, 6.930999999998216e-06, 5.409999999997361e-07, 2.3610000000028053e-06, 5.419999999992098e-07, 5.457999999999852e-06, 5.419999999992098e-07, 8.082999999999008e-06, 8.223000000001646e-06, 7.665999999999923e-06, 6.0839999999999506e-06, 8.846999999999328e-06, 6.0139999999986316e-06, 4.319000000002626e-06, 5.042000000000241e-06, 4.096999999998047e-06, 7.736000000001242e-06, 5.419999999992098e-07, 4.818999999999657e-06, 3.6389999999997258e-06, 2.5000000000025002e-06, 7.944999999998786e-06, 6.194000000001032e-06, 8.610999999998648e-06, 7.903000000000077e-06, 6.069000000000907e-06, 2.7779999999984206e-06, 5.485999999998992e-06, 9.959000000000356e-06, 4.264000000000351e-06, 2.735999999999711e-06, 2.444000000000751e-06, 5.500000000002031e-06, 5.419999999992098e-07, 7.2079999999981326e-06, 6.556000000001311e-06, 2.485999999999461e-06, 2.749999999999281e-06, 8.611000000002117e-06, 3.4579999999978517e-06, 8.209000000002076e-06]}</msg>
<status status="PASS" starttime="20201112 09:43:02.527" endtime="20201112 09:43:02.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.523" endtime="20201112 09:43:02.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.534" level="INFO">${RESULT} = [{'time': 0.017436222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017442708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.532" endtime="20201112 09:43:02.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.543" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017436222, 0.017442708, 0.017457153, 0.017466486, 0.017472556, 0.017478806, 0.01748825, 0.017495458, 0.017505611, 0.017511944, 0.017523042, 0.017525944, 0.017531944, 0.017540569, 0.0175564...</msg>
<status status="PASS" starttime="20201112 09:43:02.535" endtime="20201112 09:43:02.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.547" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:02.546" endtime="20201112 09:43:02.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.550" level="INFO">VALUE: [5.111000000002086e-06, 5.944000000000782e-06, 5.749999999998812e-06, 8.792000000000522e-06, 5.528000000001171e-06, 5.7089999999995755e-06, 5.749999999998812e-06, 6.665999999998923e-06, 6.069000000000907e-06, 5.791000000001517e-06, 6.930999999998216e-06, 2.3610000000028053e-06, 5.457999999999852e-06, 8.082999999999008e-06, 7.665999999999923e-06, 8.846999999999328e-06, 4.319000000002626e-06, 4.096999999998047e-06, 5.419999999992098e-07, 3.6389999999997258e-06, 7.944999999998786e-06, 8.610999999998648e-06, 6.069000000000907e-06, 5.485999999998992e-06, 4.264000000000351e-06, 2.444000000000751e-06, 5.419999999992098e-07, 6.556000000001311e-06, 2.749999999999281e-06, 3.4579999999978517e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.549" endtime="20201112 09:43:02.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.544" endtime="20201112 09:43:02.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.553" endtime="20201112 09:43:02.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.557" endtime="20201112 09:43:02.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.555" endtime="20201112 09:43:02.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.552" endtime="20201112 09:43:02.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.183" endtime="20201112 09:43:02.578"></status>
</kw>
<msg timestamp="20201112 09:43:02.578" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.586" endtime="20201112 09:43:02.596"></status>
</kw>
<msg timestamp="20201112 09:43:02.597" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.584" endtime="20201112 09:43:02.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.599" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.598" endtime="20201112 09:43:02.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.600" endtime="20201112 09:43:02.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.582" endtime="20201112 09:43:02.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.580" endtime="20201112 09:43:02.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.609" endtime="20201112 09:43:02.878"></status>
</kw>
<msg timestamp="20201112 09:43:02.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017476417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.608" endtime="20201112 09:43:02.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017476417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.881" endtime="20201112 09:43:02.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.887" endtime="20201112 09:43:02.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.605" endtime="20201112 09:43:02.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.603" endtime="20201112 09:43:02.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.893" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:02.892" endtime="20201112 09:43:02.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.897" level="INFO">VALUE: [{'time': 0.017475875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017476417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.017493208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.017503069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.017503611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017509569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017515556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.987000000002435e-06, 'source_diff': 5.987000000002435e-06}, {'time': 0.017525361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.017531986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.017536083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.01753875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.017544764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017550986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017554681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6949999999980054e-06, 'source_diff': 3.6949999999980054e-06}, {'time': 0.017561958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.017570569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.017573722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017580972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.017586389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.017595431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.017605236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.017615125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017624917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.017625458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017633556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.09800000000152e-06, 'source_diff': 8.09800000000152e-06}, {'time': 0.017639306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.017645069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.017653944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.017662153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.017669889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.017678667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.017684972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.017685514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017690042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017694681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017702208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.017708264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.017714556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.017716986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.017719653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.017722556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017726264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.017735597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.017740639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017743139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.017751986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.017758694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.017759236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017761194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.017761736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017763639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.017772792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.017773333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017781486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.017787556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.017788097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017792847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}]</msg>
<status status="PASS" starttime="20201112 09:43:02.895" endtime="20201112 09:43:02.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.890" endtime="20201112 09:43:02.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:02.914" level="INFO">${debug-compressed} = {'time': [0.017475875, 0.017476417, 0.017485528, 0.017493208, 0.017503069, 0.017503611, 0.017509569, 0.017515556, 0.017525361, 0.017531986, 0.017536083, 0.01753875, 0.017544764, 0.017550986, 0.0175546...</msg>
<status status="PASS" starttime="20201112 09:43:02.900" endtime="20201112 09:43:02.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.918" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:02.917" endtime="20201112 09:43:02.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.922" level="INFO">VALUE: {'time': [0.017475875, 0.017476417, 0.017485528, 0.017493208, 0.017503069, 0.017503611, 0.017509569, 0.017515556, 0.017525361, 0.017531986, 0.017536083, 0.01753875, 0.017544764, 0.017550986, 0.017554681, 0.017561958, 0.017570569, 0.017573722, 0.017580972, 0.017586389, 0.017595431, 0.017605236, 0.017615125, 0.017624917, 0.017625458, 0.017633556, 0.017639306, 0.017645069, 0.017653944, 0.017662153, 0.017669889, 0.017678667, 0.017684972, 0.017685514, 0.017690042, 0.017694681, 0.017702208, 0.017708264, 0.017714556, 0.017716986, 0.017719653, 0.017722556, 0.017726264, 0.017735597, 0.017740639, 0.017743139, 0.017751986, 0.017758694, 0.017759236, 0.017761194, 0.017761736, 0.017763639, 0.017772792, 0.017773333, 0.017781486, 0.017787556, 0.017788097, 0.017792847], 'diff': [0, 5.420000000026792e-07, 9.110999999999148e-06, 7.679999999999493e-06, 9.860999999999898e-06, 5.419999999992098e-07, 5.958000000000352e-06, 5.987000000002435e-06, 9.804999999998149e-06, 6.624999999999687e-06, 4.097000000001516e-06, 2.6669999999978655e-06, 6.014000000002101e-06, 6.222000000000172e-06, 3.6949999999980054e-06, 7.276999999999978e-06, 8.611000000002117e-06, 3.1529999999987957e-06, 7.250000000000312e-06, 5.417000000000616e-06, 9.042000000000772e-06, 9.804999999998149e-06, 9.888999999999037e-06, 9.792000000001522e-06, 5.409999999997361e-07, 8.09800000000152e-06, 5.749999999998812e-06, 5.762999999998908e-06, 8.875000000001937e-06, 8.208999999998606e-06, 7.736000000001242e-06, 8.777999999997482e-06, 6.305000000001587e-06, 5.419999999992098e-07, 4.528000000000171e-06, 4.639000000000726e-06, 7.527000000000228e-06, 6.056000000000811e-06, 6.291999999998021e-06, 2.4300000000011812e-06, 2.6669999999978655e-06, 2.903000000002015e-06, 3.7079999999981017e-06, 9.333000000000258e-06, 5.042000000000241e-06, 2.5000000000025002e-06, 8.846999999999328e-06, 6.7079999999976325e-06, 5.420000000026792e-07, 1.957999999999821e-06, 5.419999999992098e-07, 1.903000000001015e-06, 9.152999999997857e-06, 5.409999999997361e-07, 8.153000000000327e-06, 6.070000000000381e-06, 5.409999999997361e-07, 4.750000000001281e-06], 'eventsourcesource_diff': [0, 5.420000000026792e-07, 9.110999999999148e-06, 7.679999999999493e-06, 9.860999999999898e-06, 5.419999999992098e-07, 5.958000000000352e-06, 5.987000000002435e-06, 9.804999999998149e-06, 6.624999999999687e-06, 4.097000000001516e-06, 2.6669999999978655e-06, 6.014000000002101e-06, 6.222000000000172e-06, 3.6949999999980054e-06, 7.276999999999978e-06, 8.611000000002117e-06, 3.1529999999987957e-06, 7.250000000000312e-06, 5.417000000000616e-06, 9.042000000000772e-06, 9.804999999998149e-06, 9.888999999999037e-06, 9.792000000001522e-06, 5.409999999997361e-07, 8.09800000000152e-06, 5.749999999998812e-06, 5.762999999998908e-06, 8.875000000001937e-06, 8.208999999998606e-06, 7.736000000001242e-06, 8.777999999997482e-06, 6.305000000001587e-06, 5.419999999992098e-07, 4.528000000000171e-06, 4.639000000000726e-06, 7.527000000000228e-06, 6.056000000000811e-06, 6.291999999998021e-06, 2.4300000000011812e-06, 2.6669999999978655e-06, 2.903000000002015e-06, 3.7079999999981017e-06, 9.333000000000258e-06, 5.042000000000241e-06, 2.5000000000025002e-06, 8.846999999999328e-06, 6.7079999999976325e-06, 5.420000000026792e-07, 1.957999999999821e-06, 5.419999999992098e-07, 1.903000000001015e-06, 9.152999999997857e-06, 5.409999999997361e-07, 8.153000000000327e-06, 6.070000000000381e-06, 5.409999999997361e-07, 4.750000000001281e-06]}</msg>
<status status="PASS" starttime="20201112 09:43:02.920" endtime="20201112 09:43:02.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.915" endtime="20201112 09:43:02.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.926" level="INFO">${RESULT} = [{'time': 0.017476417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017493208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.924" endtime="20201112 09:43:02.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.935" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017476417, 0.017493208, 0.017503611, 0.017515556, 0.017531986, 0.01753875, 0.017550986, 0.017561958, 0.017573722, 0.017586389, 0.017605236, 0.017624917, 0.017633556, 0.017645069, 0.0176621...</msg>
<status status="PASS" starttime="20201112 09:43:02.927" endtime="20201112 09:43:02.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.939" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:02.938" endtime="20201112 09:43:02.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.942" level="INFO">VALUE: [5.420000000026792e-07, 7.679999999999493e-06, 5.419999999992098e-07, 5.987000000002435e-06, 6.624999999999687e-06, 2.6669999999978655e-06, 6.222000000000172e-06, 7.276999999999978e-06, 3.1529999999987957e-06, 5.417000000000616e-06, 9.804999999998149e-06, 9.792000000001522e-06, 8.09800000000152e-06, 5.762999999998908e-06, 8.208999999998606e-06, 8.777999999997482e-06, 5.419999999992098e-07, 4.639000000000726e-06, 6.056000000000811e-06, 2.4300000000011812e-06, 2.903000000002015e-06, 9.333000000000258e-06, 2.5000000000025002e-06, 6.7079999999976325e-06, 1.957999999999821e-06, 1.903000000001015e-06, 5.409999999997361e-07, 6.070000000000381e-06, 4.750000000001281e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.940" endtime="20201112 09:43:02.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.936" endtime="20201112 09:43:02.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.945" endtime="20201112 09:43:02.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.948" endtime="20201112 09:43:02.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.947" endtime="20201112 09:43:02.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.943" endtime="20201112 09:43:02.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.579" endtime="20201112 09:43:02.969"></status>
</kw>
<msg timestamp="20201112 09:43:02.969" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.977" endtime="20201112 09:43:02.989"></status>
</kw>
<msg timestamp="20201112 09:43:02.989" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.975" endtime="20201112 09:43:02.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.990" endtime="20201112 09:43:02.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.993" endtime="20201112 09:43:02.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.973" endtime="20201112 09:43:02.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.971" endtime="20201112 09:43:02.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.002" endtime="20201112 09:43:03.267"></status>
</kw>
<msg timestamp="20201112 09:43:03.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018337778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018344931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.000" endtime="20201112 09:43:03.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018337778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018344931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.270" endtime="20201112 09:43:03.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.276" endtime="20201112 09:43:03.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.997" endtime="20201112 09:43:03.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.996" endtime="20201112 09:43:03.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.282" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:43:03.281" endtime="20201112 09:43:03.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.286" level="INFO">VALUE: [{'time': 0.018337778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018344931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018354069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138000000002283e-06, 'source_diff': 9.138000000002283e-06}, {'time': 0.018361694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018367778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018372139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018381444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.018391083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.018395014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.018397681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.018401375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.018410722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018415278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.018423722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018429333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018433486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018437194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018439736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018445042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305999999996591e-06, 'source_diff': 5.305999999996591e-06}, {'time': 0.018451042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.018455847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018465722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018468083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018468625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018475278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.018477778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018486903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.018489861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.018497778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.018501861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.018504597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018513944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018516903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.018522903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018530167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018533153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018536139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018544736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.018547653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018554597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.018563806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.018568181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018574681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018580486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.018585361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018590431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.01859625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.018601542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.01860975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.018615069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018619444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}]</msg>
<status status="PASS" starttime="20201112 09:43:03.283" endtime="20201112 09:43:03.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.279" endtime="20201112 09:43:03.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:43:03.302" level="INFO">${debug-compressed} = {'time': [0.018337778, 0.018344931, 0.018354069, 0.018361694, 0.018367778, 0.018372139, 0.018381444, 0.018391083, 0.018395014, 0.018397681, 0.018401375, 0.018410722, 0.018415278, 0.018423722, 0.018429...</msg>
<status status="PASS" starttime="20201112 09:43:03.288" endtime="20201112 09:43:03.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.306" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:43:03.305" endtime="20201112 09:43:03.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.309" level="INFO">VALUE: {'time': [0.018337778, 0.018344931, 0.018354069, 0.018361694, 0.018367778, 0.018372139, 0.018381444, 0.018391083, 0.018395014, 0.018397681, 0.018401375, 0.018410722, 0.018415278, 0.018423722, 0.018429333, 0.018433486, 0.018437194, 0.018439736, 0.018445042, 0.018451042, 0.018455847, 0.018465722, 0.018468083, 0.018468625, 0.018475278, 0.018477778, 0.018486903, 0.018489861, 0.018497778, 0.018501861, 0.018504597, 0.018513944, 0.018516903, 0.018522903, 0.018530167, 0.018533153, 0.018536139, 0.018544736, 0.018547653, 0.018554597, 0.018563806, 0.018568181, 0.018574681, 0.018580486, 0.018585361, 0.018590431, 0.01859625, 0.018601542, 0.01860975, 0.018615069, 0.018619444], 'diff': [0, 7.1529999999993266e-06, 9.138000000002283e-06, 7.625000000000687e-06, 6.0839999999999506e-06, 4.360999999997867e-06, 9.305000000001118e-06, 9.638999999998787e-06, 3.931000000002155e-06, 2.6669999999978655e-06, 3.6940000000020012e-06, 9.346999999999828e-06, 4.555999999999311e-06, 8.443999999999813e-06, 5.610999999999117e-06, 4.152999999999796e-06, 3.708000000001571e-06, 2.54200000000121e-06, 5.305999999996591e-06, 6.000000000002531e-06, 4.805000000000087e-06, 9.874999999999468e-06, 2.360999999999336e-06, 5.419999999992098e-07, 6.653000000002296e-06, 2.4999999999990308e-06, 9.124999999998717e-06, 2.958000000000821e-06, 7.916999999999647e-06, 4.083000000001946e-06, 2.735999999999711e-06, 9.346999999999828e-06, 2.9590000000002947e-06, 5.999999999999062e-06, 7.263999999999882e-06, 2.985999999999961e-06, 2.985999999999961e-06, 8.596999999999078e-06, 2.917000000001585e-06, 6.943999999998313e-06, 9.208999999999606e-06, 4.375000000000906e-06, 6.499999999999562e-06, 5.805000000001087e-06, 4.875000000001406e-06, 5.0699999999993806e-06, 5.819000000000657e-06, 5.291999999997021e-06, 8.208000000002602e-06, 5.319000000000157e-06, 4.3749999999974365e-06], 'eventsourcesource_diff': [0, 7.1529999999993266e-06, 9.138000000002283e-06, 7.625000000000687e-06, 6.0839999999999506e-06, 4.360999999997867e-06, 9.305000000001118e-06, 9.638999999998787e-06, 3.931000000002155e-06, 2.6669999999978655e-06, 3.6940000000020012e-06, 9.346999999999828e-06, 4.555999999999311e-06, 8.443999999999813e-06, 5.610999999999117e-06, 4.152999999999796e-06, 3.708000000001571e-06, 2.54200000000121e-06, 5.305999999996591e-06, 6.000000000002531e-06, 4.805000000000087e-06, 9.874999999999468e-06, 2.360999999999336e-06, 5.419999999992098e-07, 6.653000000002296e-06, 2.4999999999990308e-06, 9.124999999998717e-06, 2.958000000000821e-06, 7.916999999999647e-06, 4.083000000001946e-06, 2.735999999999711e-06, 9.346999999999828e-06, 2.9590000000002947e-06, 5.999999999999062e-06, 7.263999999999882e-06, 2.985999999999961e-06, 2.985999999999961e-06, 8.596999999999078e-06, 2.917000000001585e-06, 6.943999999998313e-06, 9.208999999999606e-06, 4.375000000000906e-06, 6.499999999999562e-06, 5.805000000001087e-06, 4.875000000001406e-06, 5.0699999999993806e-06, 5.819000000000657e-06, 5.291999999997021e-06, 8.208000000002602e-06, 5.319000000000157e-06, 4.3749999999974365e-06]}</msg>
<status status="PASS" starttime="20201112 09:43:03.307" endtime="20201112 09:43:03.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.303" endtime="20201112 09:43:03.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.313" level="INFO">${RESULT} = [{'time': 0.018344931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018361694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:03.311" endtime="20201112 09:43:03.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:03.321" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018344931, 0.018361694, 0.018372139, 0.018391083, 0.018397681, 0.018410722, 0.018423722, 0.018433486, 0.018439736, 0.018451042, 0.018465722, 0.018468625, 0.018477778, 0.018489861, 0.018501...</msg>
<status status="PASS" starttime="20201112 09:43:03.314" endtime="20201112 09:43:03.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.325" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:43:03.324" endtime="20201112 09:43:03.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.328" level="INFO">VALUE: [7.1529999999993266e-06, 7.625000000000687e-06, 4.360999999997867e-06, 9.638999999998787e-06, 2.6669999999978655e-06, 9.346999999999828e-06, 8.443999999999813e-06, 4.152999999999796e-06, 2.54200000000121e-06, 6.000000000002531e-06, 9.874999999999468e-06, 5.419999999992098e-07, 2.4999999999990308e-06, 2.958000000000821e-06, 4.083000000001946e-06, 9.346999999999828e-06, 5.999999999999062e-06, 2.985999999999961e-06, 8.596999999999078e-06, 6.943999999998313e-06, 4.375000000000906e-06, 5.805000000001087e-06, 5.0699999999993806e-06, 5.291999999997021e-06, 5.319000000000157e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.327" endtime="20201112 09:43:03.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.322" endtime="20201112 09:43:03.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.331" endtime="20201112 09:43:03.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.334" endtime="20201112 09:43:03.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.333" endtime="20201112 09:43:03.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.330" endtime="20201112 09:43:03.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.970" endtime="20201112 09:43:03.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.432" endtime="20201112 09:43:03.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.360" endtime="20201112 09:43:03.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.358" endtime="20201112 09:43:03.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.357" endtime="20201112 09:43:03.380"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:52.321" endtime="20201112 09:43:03.381" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.389" endtime="20201112 09:43:03.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.387" endtime="20201112 09:43:03.409"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.422" endtime="20201112 09:43:06.450"></status>
</kw>
<msg timestamp="20201112 09:43:06.451" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.421" endtime="20201112 09:43:06.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.456" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.453" endtime="20201112 09:43:06.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.462" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:06.458" endtime="20201112 09:43:06.462"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:03.418" endtime="20201112 09:43:06.464"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:03.415" endtime="20201112 09:43:06.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.414" endtime="20201112 09:43:06.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:06.473" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:06.471" endtime="20201112 09:43:06.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.467" endtime="20201112 09:43:06.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.413" endtime="20201112 09:43:06.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.413" endtime="20201112 09:43:06.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.477" endtime="20201112 09:43:06.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.412" endtime="20201112 09:43:06.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.410" endtime="20201112 09:43:06.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.385" endtime="20201112 09:43:06.482"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:43:06.486" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.504" endtime="20201112 09:43:06.522"></status>
</kw>
<msg timestamp="20201112 09:43:06.523" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.500" endtime="20201112 09:43:06.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.527" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.526" endtime="20201112 09:43:06.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.528" endtime="20201112 09:43:06.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.494" endtime="20201112 09:43:06.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.491" endtime="20201112 09:43:06.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.537" endtime="20201112 09:43:06.835"></status>
</kw>
<msg timestamp="20201112 09:43:06.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108779181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108780819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.536" endtime="20201112 09:43:06.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108779181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108780819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.839" endtime="20201112 09:43:06.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.848" endtime="20201112 09:43:06.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.533" endtime="20201112 09:43:06.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.532" endtime="20201112 09:43:06.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.854" level="INFO">${RESULT} = [{'time': 3.108780819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6380000000815187e-06, 'source_diff': 1.6380000000815187e-06}, {'time': 3.108785153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:06.851" endtime="20201112 09:43:06.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:06.868" level="INFO">${OVERHEAD} = {'time': [3.108780819, 3.108785153, 3.108789875, 3.108796583, 3.108801319, 3.108809139, 3.108813375, 3.108823903, 3.108832917, 3.108843889, 3.108852222, 3.108858667, 3.108868639, 3.108874542, 3.108880...</msg>
<status status="PASS" starttime="20201112 09:43:06.855" endtime="20201112 09:43:06.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.872" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:06.871" endtime="20201112 09:43:06.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.874" level="INFO">VALUE: [1.6380000000815187e-06, 1.7219999999262825e-06, 1.6249999998940723e-06, 1.6520000003517055e-06, 1.6519999999076163e-06, 1.6389999997201699e-06, 1.639000000164259e-06, 1.6530000004344458e-06, 1.6529999999903566e-06, 1.639000000164259e-06, 1.6659999997337138e-06, 1.6529999999903566e-06, 1.6250000003381615e-06, 1.639000000164259e-06, 1.6389999997201699e-06, 1.6529999999903566e-06, 1.5980000003246175e-06, 1.666000000177803e-06, 1.639000000164259e-06, 1.6389999997201699e-06, 1.6380000000815187e-06, 1.6249999998940723e-06, 1.6519999999076163e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.639000000164259e-06, 1.6389999997201699e-06, 1.6529999999903566e-06, 1.6250000003381615e-06, 1.6939999998299982e-06, 1.639000000164259e-06, 1.6529999999903566e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.6529999999903566e-06, 1.6519999999076163e-06, 1.6389999997201699e-06, 1.6389999997201699e-06, 1.6389999997201699e-06, 1.6389999997201699e-06, 1.6529999999903566e-06, 1.6380000000815187e-06, 1.5970000002418772e-06, 1.639000000164259e-06, 1.639000000164259e-06, 1.6529999999903566e-06, 1.6389999997201699e-06, 1.6529999999903566e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.873" endtime="20201112 09:43:06.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.869" endtime="20201112 09:43:06.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.878" endtime="20201112 09:43:06.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.881" endtime="20201112 09:43:06.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.880" endtime="20201112 09:43:06.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.876" endtime="20201112 09:43:06.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.488" endtime="20201112 09:43:06.902"></status>
</kw>
<msg timestamp="20201112 09:43:06.902" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.910" endtime="20201112 09:43:06.921"></status>
</kw>
<msg timestamp="20201112 09:43:06.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.908" endtime="20201112 09:43:06.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.924" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.923" endtime="20201112 09:43:06.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.925" endtime="20201112 09:43:06.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.906" endtime="20201112 09:43:06.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.904" endtime="20201112 09:43:06.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.935" endtime="20201112 09:43:07.216"></status>
</kw>
<msg timestamp="20201112 09:43:07.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018187778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018189431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.934" endtime="20201112 09:43:07.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018187778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018189431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.220" endtime="20201112 09:43:07.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.228" endtime="20201112 09:43:07.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.930" endtime="20201112 09:43:07.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.929" endtime="20201112 09:43:07.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.235" level="INFO">${RESULT} = [{'time': 0.018189431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018198917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:07.232" endtime="20201112 09:43:07.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:07.248" level="INFO">${OVERHEAD} = {'time': [0.018189431, 0.018198917, 0.018203431, 0.01820725, 0.018216583, 0.018225417, 0.018234903, 0.018244153, 0.018248181, 0.018252042, 0.018263167, 0.018270278, 0.018278653, 0.018287042, 0.0182934...</msg>
<status status="PASS" starttime="20201112 09:43:07.236" endtime="20201112 09:43:07.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.254" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:07.253" endtime="20201112 09:43:07.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.257" level="INFO">VALUE: [1.6529999999972955e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.5969999999990159e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.6520000000012913e-06, 1.6529999999972955e-06, 1.5830000000029154e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6669999999968654e-06, 1.6799999999969617e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.255" endtime="20201112 09:43:07.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.250" endtime="20201112 09:43:07.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.260" endtime="20201112 09:43:07.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.264" endtime="20201112 09:43:07.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.262" endtime="20201112 09:43:07.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.258" endtime="20201112 09:43:07.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.903" endtime="20201112 09:43:07.285"></status>
</kw>
<msg timestamp="20201112 09:43:07.285" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.293" endtime="20201112 09:43:07.304"></status>
</kw>
<msg timestamp="20201112 09:43:07.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.291" endtime="20201112 09:43:07.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.305" endtime="20201112 09:43:07.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.308" endtime="20201112 09:43:07.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.289" endtime="20201112 09:43:07.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.287" endtime="20201112 09:43:07.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.318" endtime="20201112 09:43:07.599"></status>
</kw>
<msg timestamp="20201112 09:43:07.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018156889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018158528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.315" endtime="20201112 09:43:07.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018156889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018158528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.603" endtime="20201112 09:43:07.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.612" endtime="20201112 09:43:07.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.313" endtime="20201112 09:43:07.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.311" endtime="20201112 09:43:07.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.618" level="INFO">${RESULT} = [{'time': 0.018158528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018169528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:07.615" endtime="20201112 09:43:07.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:07.632" level="INFO">${OVERHEAD} = {'time': [0.018158528, 0.018169528, 0.018180431, 0.018187375, 0.018191694, 0.018196681, 0.018205917, 0.018216181, 0.018225458, 0.018229528, 0.018237181, 0.018242208, 0.018248611, 0.018257222, 0.018264...</msg>
<status status="PASS" starttime="20201112 09:43:07.619" endtime="20201112 09:43:07.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.636" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:07.635" endtime="20201112 09:43:07.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.638" level="INFO">VALUE: [1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.6120000000015289e-06, 1.6660000000008612e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6520000000012913e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.6670000000003349e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.6520000000012913e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.637" endtime="20201112 09:43:07.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.632" endtime="20201112 09:43:07.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.642" endtime="20201112 09:43:07.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.645" endtime="20201112 09:43:07.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.644" endtime="20201112 09:43:07.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.640" endtime="20201112 09:43:07.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.286" endtime="20201112 09:43:07.666"></status>
</kw>
<msg timestamp="20201112 09:43:07.666" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.674" endtime="20201112 09:43:07.685"></status>
</kw>
<msg timestamp="20201112 09:43:07.685" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.672" endtime="20201112 09:43:07.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.686" endtime="20201112 09:43:07.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.689" endtime="20201112 09:43:07.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.670" endtime="20201112 09:43:07.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.668" endtime="20201112 09:43:07.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.699" endtime="20201112 09:43:07.991"></status>
</kw>
<msg timestamp="20201112 09:43:07.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017732181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017733847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.698" endtime="20201112 09:43:07.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017732181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017733847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.995" endtime="20201112 09:43:08.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.003" endtime="20201112 09:43:08.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.695" endtime="20201112 09:43:08.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.693" endtime="20201112 09:43:08.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.010" level="INFO">${RESULT} = [{'time': 0.017733847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.017737667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:08.007" endtime="20201112 09:43:08.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:08.023" level="INFO">${OVERHEAD} = {'time': [0.017733847, 0.017737667, 0.017741514, 0.017750111, 0.017757208, 0.017765986, 0.017770722, 0.01778075, 0.017788111, 0.017798083, 0.017807556, 0.017814972, 0.017823361, 0.017827833, 0.0178387...</msg>
<status status="PASS" starttime="20201112 09:43:08.011" endtime="20201112 09:43:08.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.028" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:08.027" endtime="20201112 09:43:08.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.030" level="INFO">VALUE: [1.6660000000008612e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.568999999999876e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.653000000000765e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.029" endtime="20201112 09:43:08.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.024" endtime="20201112 09:43:08.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.034" endtime="20201112 09:43:08.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.037" endtime="20201112 09:43:08.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.036" endtime="20201112 09:43:08.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.032" endtime="20201112 09:43:08.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.667" endtime="20201112 09:43:08.058"></status>
</kw>
<msg timestamp="20201112 09:43:08.058" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.066" endtime="20201112 09:43:08.078"></status>
</kw>
<msg timestamp="20201112 09:43:08.078" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.064" endtime="20201112 09:43:08.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.081" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.079" endtime="20201112 09:43:08.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.082" endtime="20201112 09:43:08.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.062" endtime="20201112 09:43:08.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.060" endtime="20201112 09:43:08.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.091" endtime="20201112 09:43:08.375"></status>
</kw>
<msg timestamp="20201112 09:43:08.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018025056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018026694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.089" endtime="20201112 09:43:08.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018025056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018026694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.380" endtime="20201112 09:43:08.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.388" endtime="20201112 09:43:08.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.087" endtime="20201112 09:43:08.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.085" endtime="20201112 09:43:08.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.396" level="INFO">${RESULT} = [{'time': 0.018026694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.018033097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.392" endtime="20201112 09:43:08.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:08.409" level="INFO">${OVERHEAD} = {'time': [0.018026694, 0.018033097, 0.018044, 0.0180535, 0.018064667, 0.018075403, 0.018081667, 0.018085472, 0.018095514, 0.018105556, 0.018114333, 0.018125556, 0.018134319, 0.0181415, 0.018146778, 0....</msg>
<status status="PASS" starttime="20201112 09:43:08.397" endtime="20201112 09:43:08.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.413" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:08.412" endtime="20201112 09:43:08.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.416" level="INFO">VALUE: [1.637999999998252e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.5839999999989196e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.709000000002514e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.637999999998252e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.6110000000020552e-06, 1.653000000000765e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.414" endtime="20201112 09:43:08.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.410" endtime="20201112 09:43:08.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.419" endtime="20201112 09:43:08.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.423" endtime="20201112 09:43:08.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.421" endtime="20201112 09:43:08.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.418" endtime="20201112 09:43:08.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.059" endtime="20201112 09:43:08.444"></status>
</kw>
<msg timestamp="20201112 09:43:08.444" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.451" endtime="20201112 09:43:08.463"></status>
</kw>
<msg timestamp="20201112 09:43:08.464" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.450" endtime="20201112 09:43:08.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.465" endtime="20201112 09:43:08.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.467" endtime="20201112 09:43:08.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.447" endtime="20201112 09:43:08.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.446" endtime="20201112 09:43:08.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.476" endtime="20201112 09:43:08.762"></status>
</kw>
<msg timestamp="20201112 09:43:08.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017978431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017980097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.475" endtime="20201112 09:43:08.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017978431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017980097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.766" endtime="20201112 09:43:08.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.775" endtime="20201112 09:43:08.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.472" endtime="20201112 09:43:08.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.470" endtime="20201112 09:43:08.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.782" level="INFO">${RESULT} = [{'time': 0.017980097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.017989875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:08.778" endtime="20201112 09:43:08.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:08.795" level="INFO">${OVERHEAD} = {'time': [0.017980097, 0.017989875, 0.018000153, 0.018007806, 0.018013014, 0.018020667, 0.018029514, 0.018040514, 0.018048319, 0.018057889, 0.018065958, 0.018074958, 0.018085236, 0.018092194, 0.018096...</msg>
<status status="PASS" starttime="20201112 09:43:08.782" endtime="20201112 09:43:08.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.799" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:08.798" endtime="20201112 09:43:08.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.801" level="INFO">VALUE: [1.6660000000008612e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6389999999977256e-06, 1.6110000000020552e-06, 1.6659999999973918e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6520000000012913e-06, 1.6529999999972955e-06, 1.6520000000012913e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.6810000000033742e-06, 1.6519999999978219e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.568999999999876e-06, 1.6519999999978219e-06, 1.6120000000015289e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6380000000017214e-06, 1.5700000000028191e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.653000000000765e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.800" endtime="20201112 09:43:08.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.796" endtime="20201112 09:43:08.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.805" endtime="20201112 09:43:08.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.808" endtime="20201112 09:43:08.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.807" endtime="20201112 09:43:08.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.803" endtime="20201112 09:43:08.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.444" endtime="20201112 09:43:08.829"></status>
</kw>
<msg timestamp="20201112 09:43:08.829" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.837" endtime="20201112 09:43:08.850"></status>
</kw>
<msg timestamp="20201112 09:43:08.850" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.836" endtime="20201112 09:43:08.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.853" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.851" endtime="20201112 09:43:08.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.854" endtime="20201112 09:43:08.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.833" endtime="20201112 09:43:08.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.831" endtime="20201112 09:43:08.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.862" endtime="20201112 09:43:09.149"></status>
</kw>
<msg timestamp="20201112 09:43:09.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017965125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017966778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.861" endtime="20201112 09:43:09.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017965125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017966778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.153" endtime="20201112 09:43:09.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.161" endtime="20201112 09:43:09.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.858" endtime="20201112 09:43:09.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.857" endtime="20201112 09:43:09.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.168" level="INFO">${RESULT} = [{'time': 0.017966778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.017970764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.165" endtime="20201112 09:43:09.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:09.181" level="INFO">${OVERHEAD} = {'time': [0.017966778, 0.017970764, 0.017981931, 0.017990306, 0.017994778, 0.018001028, 0.018011222, 0.0180165, 0.018021042, 0.018031736, 0.018042736, 0.018050778, 0.018058833, 0.018063083, 0.01806693...</msg>
<status status="PASS" starttime="20201112 09:43:09.169" endtime="20201112 09:43:09.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.186" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:09.185" endtime="20201112 09:43:09.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.188" level="INFO">VALUE: [1.653000000000765e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.584000000002389e-06, 1.6389999999977256e-06, 1.6520000000012913e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.6380000000017214e-06, 1.6389999999977256e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.6519999999978219e-06, 1.5970000000024853e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:43:09.187" endtime="20201112 09:43:09.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.182" endtime="20201112 09:43:09.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.192" endtime="20201112 09:43:09.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.195" endtime="20201112 09:43:09.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.194" endtime="20201112 09:43:09.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.190" endtime="20201112 09:43:09.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.830" endtime="20201112 09:43:09.216"></status>
</kw>
<msg timestamp="20201112 09:43:09.216" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.224" endtime="20201112 09:43:09.236"></status>
</kw>
<msg timestamp="20201112 09:43:09.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.222" endtime="20201112 09:43:09.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.239" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.238" endtime="20201112 09:43:09.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.240" endtime="20201112 09:43:09.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.220" endtime="20201112 09:43:09.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.218" endtime="20201112 09:43:09.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.249" endtime="20201112 09:43:09.540"></status>
</kw>
<msg timestamp="20201112 09:43:09.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017752486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017754125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.248" endtime="20201112 09:43:09.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017752486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017754125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.544" endtime="20201112 09:43:09.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.552" endtime="20201112 09:43:09.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.245" endtime="20201112 09:43:09.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.243" endtime="20201112 09:43:09.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.559" level="INFO">${RESULT} = [{'time': 0.017754125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.017758431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:09.556" endtime="20201112 09:43:09.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:09.572" level="INFO">${OVERHEAD} = {'time': [0.017754125, 0.017758431, 0.017766083, 0.017775333, 0.0177865, 0.017794625, 0.017802458, 0.017807722, 0.017815069, 0.017820278, 0.017826028, 0.017831944, 0.017836667, 0.017846389, 0.01785048...</msg>
<status status="PASS" starttime="20201112 09:43:09.560" endtime="20201112 09:43:09.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.576" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:09.575" endtime="20201112 09:43:09.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.579" level="INFO">VALUE: [1.6389999999977256e-06, 1.639000000001195e-06, 1.568999999999876e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6250000000016251e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.5560000000032492e-06, 1.6250000000016251e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6520000000012913e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.6119999999980594e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 09:43:09.577" endtime="20201112 09:43:09.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.573" endtime="20201112 09:43:09.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.583" endtime="20201112 09:43:09.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.586" endtime="20201112 09:43:09.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.584" endtime="20201112 09:43:09.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.581" endtime="20201112 09:43:09.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.217" endtime="20201112 09:43:09.607"></status>
</kw>
<msg timestamp="20201112 09:43:09.607" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.615" endtime="20201112 09:43:09.626"></status>
</kw>
<msg timestamp="20201112 09:43:09.627" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.613" endtime="20201112 09:43:09.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.629" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.628" endtime="20201112 09:43:09.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.630" endtime="20201112 09:43:09.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.611" endtime="20201112 09:43:09.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.609" endtime="20201112 09:43:09.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.639" endtime="20201112 09:43:09.929"></status>
</kw>
<msg timestamp="20201112 09:43:09.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017776667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.638" endtime="20201112 09:43:09.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017776667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.933" endtime="20201112 09:43:09.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.942" endtime="20201112 09:43:09.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.635" endtime="20201112 09:43:09.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.633" endtime="20201112 09:43:09.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.949" level="INFO">${RESULT} = [{'time': 0.017778306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.017784222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.946" endtime="20201112 09:43:09.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:09.963" level="INFO">${OVERHEAD} = {'time': [0.017778306, 0.017784222, 0.017790861, 0.017797486, 0.017803875, 0.017808722, 0.017816333, 0.017823917, 0.0178315, 0.017838625, 0.017846972, 0.017855764, 0.017859764, 0.017864736, 0.01787280...</msg>
<status status="PASS" starttime="20201112 09:43:09.950" endtime="20201112 09:43:09.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.967" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:09.966" endtime="20201112 09:43:09.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.970" level="INFO">VALUE: [1.639000000001195e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6659999999973918e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6660000000008612e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.5839999999989196e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.5699999999993497e-06, 1.6659999999973918e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:43:09.968" endtime="20201112 09:43:09.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.964" endtime="20201112 09:43:09.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.973" endtime="20201112 09:43:09.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.977" endtime="20201112 09:43:09.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.975" endtime="20201112 09:43:09.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.971" endtime="20201112 09:43:09.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.608" endtime="20201112 09:43:09.997"></status>
</kw>
<msg timestamp="20201112 09:43:09.998" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.005" endtime="20201112 09:43:10.018"></status>
</kw>
<msg timestamp="20201112 09:43:10.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.004" endtime="20201112 09:43:10.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.021" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.020" endtime="20201112 09:43:10.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.022" endtime="20201112 09:43:10.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.001" endtime="20201112 09:43:10.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.999" endtime="20201112 09:43:10.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.031" endtime="20201112 09:43:10.316"></status>
</kw>
<msg timestamp="20201112 09:43:10.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018003139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018004778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.029" endtime="20201112 09:43:10.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018003139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018004778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.321" endtime="20201112 09:43:10.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.329" endtime="20201112 09:43:10.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.027" endtime="20201112 09:43:10.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.025" endtime="20201112 09:43:10.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.336" level="INFO">${RESULT} = [{'time': 0.018004778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018009514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:10.332" endtime="20201112 09:43:10.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:10.349" level="INFO">${OVERHEAD} = {'time': [0.018004778, 0.018009514, 0.018017903, 0.018025222, 0.018030181, 0.018040403, 0.018049875, 0.018055153, 0.018059639, 0.018067764, 0.018078042, 0.018086583, 0.018095903, 0.018105153, 0.018115...</msg>
<status status="PASS" starttime="20201112 09:43:10.337" endtime="20201112 09:43:10.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.353" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:10.352" endtime="20201112 09:43:10.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.356" level="INFO">VALUE: [1.6389999999977256e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.5839999999989196e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6519999999978219e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6120000000015289e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201112 09:43:10.354" endtime="20201112 09:43:10.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.350" endtime="20201112 09:43:10.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.359" endtime="20201112 09:43:10.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.363" endtime="20201112 09:43:10.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.361" endtime="20201112 09:43:10.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.358" endtime="20201112 09:43:10.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.998" endtime="20201112 09:43:10.384"></status>
</kw>
<msg timestamp="20201112 09:43:10.384" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.391" endtime="20201112 09:43:10.403"></status>
</kw>
<msg timestamp="20201112 09:43:10.404" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.390" endtime="20201112 09:43:10.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.406" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.405" endtime="20201112 09:43:10.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.407" endtime="20201112 09:43:10.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.387" endtime="20201112 09:43:10.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.386" endtime="20201112 09:43:10.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.417" endtime="20201112 09:43:10.703"></status>
</kw>
<msg timestamp="20201112 09:43:10.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018336236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018337875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.415" endtime="20201112 09:43:10.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018336236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018337875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.707" endtime="20201112 09:43:10.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.715" endtime="20201112 09:43:10.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.412" endtime="20201112 09:43:10.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.410" endtime="20201112 09:43:10.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.722" level="INFO">${RESULT} = [{'time': 0.018337875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018344264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:10.718" endtime="20201112 09:43:10.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:10.735" level="INFO">${OVERHEAD} = {'time': [0.018337875, 0.018344264, 0.018354819, 0.018364986, 0.018372639, 0.018376486, 0.018383611, 0.018392389, 0.018401389, 0.018411181, 0.018415736, 0.018425069, 0.018434333, 0.018445236, 0.018452...</msg>
<status status="PASS" starttime="20201112 09:43:10.723" endtime="20201112 09:43:10.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.739" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:10.738" endtime="20201112 09:43:10.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.742" level="INFO">VALUE: [1.639000000001195e-06, 1.5969999999990159e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6669999999968654e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.6519999999978219e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.6659999999973918e-06, 1.653000000000765e-06, 1.598000000001959e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.6659999999973918e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 09:43:10.740" endtime="20201112 09:43:10.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.736" endtime="20201112 09:43:10.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.745" endtime="20201112 09:43:10.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.749" endtime="20201112 09:43:10.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.747" endtime="20201112 09:43:10.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.743" endtime="20201112 09:43:10.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.384" endtime="20201112 09:43:10.769"></status>
</kw>
<msg timestamp="20201112 09:43:10.770" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.777" endtime="20201112 09:43:10.789"></status>
</kw>
<msg timestamp="20201112 09:43:10.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.776" endtime="20201112 09:43:10.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.792" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.791" endtime="20201112 09:43:10.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.793" endtime="20201112 09:43:10.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.773" endtime="20201112 09:43:10.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.771" endtime="20201112 09:43:10.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.802" endtime="20201112 09:43:11.092"></status>
</kw>
<msg timestamp="20201112 09:43:11.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017849611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017851264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.800" endtime="20201112 09:43:11.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017849611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017851264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.096" endtime="20201112 09:43:11.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.105" endtime="20201112 09:43:11.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.798" endtime="20201112 09:43:11.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.796" endtime="20201112 09:43:11.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.111" level="INFO">${RESULT} = [{'time': 0.017851264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.0178605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:11.108" endtime="20201112 09:43:11.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:11.124" level="INFO">${OVERHEAD} = {'time': [0.017851264, 0.0178605, 0.017869278, 0.017876153, 0.017885875, 0.017890708, 0.017900944, 0.017908056, 0.017917611, 0.017922889, 0.017933167, 0.017938375, 0.017947944, 0.017954389, 0.01796293...</msg>
<status status="PASS" starttime="20201112 09:43:11.112" endtime="20201112 09:43:11.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.129" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:11.128" endtime="20201112 09:43:11.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.131" level="INFO">VALUE: [1.6529999999972955e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6110000000020552e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.5839999999989196e-06, 1.6380000000017214e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.5550000000003061e-06, 1.6389999999977256e-06, 1.6659999999973918e-06]</msg>
<status status="PASS" starttime="20201112 09:43:11.130" endtime="20201112 09:43:11.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.125" endtime="20201112 09:43:11.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.135" endtime="20201112 09:43:11.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.138" endtime="20201112 09:43:11.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.137" endtime="20201112 09:43:11.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.133" endtime="20201112 09:43:11.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.770" endtime="20201112 09:43:11.159"></status>
</kw>
<msg timestamp="20201112 09:43:11.159" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.167" endtime="20201112 09:43:11.179"></status>
</kw>
<msg timestamp="20201112 09:43:11.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.165" endtime="20201112 09:43:11.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.180" endtime="20201112 09:43:11.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.182" endtime="20201112 09:43:11.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.163" endtime="20201112 09:43:11.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.161" endtime="20201112 09:43:11.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.192" endtime="20201112 09:43:11.480"></status>
</kw>
<msg timestamp="20201112 09:43:11.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017861069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:11.190" endtime="20201112 09:43:11.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017861069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:11.484" endtime="20201112 09:43:11.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.492" endtime="20201112 09:43:11.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.188" endtime="20201112 09:43:11.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.186" endtime="20201112 09:43:11.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.499" level="INFO">${RESULT} = [{'time': 0.017861069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.017866028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:11.496" endtime="20201112 09:43:11.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:11.512" level="INFO">${OVERHEAD} = {'time': [0.017861069, 0.017866028, 0.017872889, 0.017880542, 0.017885042, 0.017889056, 0.017897111, 0.017905014, 0.017915681, 0.017920417, 0.017928778, 0.017937319, 0.017947625, 0.017958764, 0.017966...</msg>
<status status="PASS" starttime="20201112 09:43:11.500" endtime="20201112 09:43:11.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.517" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:11.516" endtime="20201112 09:43:11.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.519" level="INFO">VALUE: [1.568999999999876e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.5699999999993497e-06, 1.6520000000012913e-06, 1.6809999999999048e-06, 1.6529999999972955e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 09:43:11.518" endtime="20201112 09:43:11.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.513" endtime="20201112 09:43:11.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.523" endtime="20201112 09:43:11.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.526" endtime="20201112 09:43:11.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.524" endtime="20201112 09:43:11.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.521" endtime="20201112 09:43:11.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.160" endtime="20201112 09:43:11.547"></status>
</kw>
<msg timestamp="20201112 09:43:11.547" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.554" endtime="20201112 09:43:11.566"></status>
</kw>
<msg timestamp="20201112 09:43:11.567" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.553" endtime="20201112 09:43:11.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.568" endtime="20201112 09:43:11.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.570" endtime="20201112 09:43:11.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.550" endtime="20201112 09:43:11.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.549" endtime="20201112 09:43:11.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.579" endtime="20201112 09:43:11.865"></status>
</kw>
<msg timestamp="20201112 09:43:11.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017979528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.577" endtime="20201112 09:43:11.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017979528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.869" endtime="20201112 09:43:11.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.877" endtime="20201112 09:43:11.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.575" endtime="20201112 09:43:11.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.573" endtime="20201112 09:43:11.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.884" level="INFO">${RESULT} = [{'time': 0.017981167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.017985014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:11.881" endtime="20201112 09:43:11.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:11.897" level="INFO">${OVERHEAD} = {'time': [0.017981167, 0.017985014, 0.017990542, 0.01800075, 0.018011222, 0.018018514, 0.018025694, 0.018029778, 0.018036486, 0.018041528, 0.018046486, 0.018055347, 0.018065056, 0.018074847, 0.0180788...</msg>
<status status="PASS" starttime="20201112 09:43:11.885" endtime="20201112 09:43:11.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.902" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:11.901" endtime="20201112 09:43:11.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.904" level="INFO">VALUE: [1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6119999999980594e-06, 1.7080000000030404e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.568999999999876e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.5830000000029154e-06, 1.6519999999978219e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.653000000000765e-06, 1.6800000000004311e-06, 1.5839999999989196e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.707999999999571e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6380000000017214e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 09:43:11.903" endtime="20201112 09:43:11.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.898" endtime="20201112 09:43:11.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.908" endtime="20201112 09:43:11.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.911" endtime="20201112 09:43:11.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.910" endtime="20201112 09:43:11.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.906" endtime="20201112 09:43:11.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.547" endtime="20201112 09:43:11.932"></status>
</kw>
<msg timestamp="20201112 09:43:11.932" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.940" endtime="20201112 09:43:11.952"></status>
</kw>
<msg timestamp="20201112 09:43:11.952" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.938" endtime="20201112 09:43:11.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.955" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.953" endtime="20201112 09:43:11.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.956" endtime="20201112 09:43:11.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.936" endtime="20201112 09:43:11.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.934" endtime="20201112 09:43:11.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.965" endtime="20201112 09:43:12.247"></status>
</kw>
<msg timestamp="20201112 09:43:12.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018236806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018238444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.963" endtime="20201112 09:43:12.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018236806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018238444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.251" endtime="20201112 09:43:12.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.259" endtime="20201112 09:43:12.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.961" endtime="20201112 09:43:12.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.959" endtime="20201112 09:43:12.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.266" level="INFO">${RESULT} = [{'time': 0.018238444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.018247833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.263" endtime="20201112 09:43:12.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:12.279" level="INFO">${OVERHEAD} = {'time': [0.018238444, 0.018247833, 0.018253361, 0.018260931, 0.018271028, 0.018276875, 0.018286125, 0.018293069, 0.018304069, 0.018314097, 0.018323347, 0.018328792, 0.018338278, 0.018347861, 0.018357...</msg>
<status status="PASS" starttime="20201112 09:43:12.267" endtime="20201112 09:43:12.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.283" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:12.282" endtime="20201112 09:43:12.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.286" level="INFO">VALUE: [1.637999999998252e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.709000000002514e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.584000000002389e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.5970000000024853e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6660000000008612e-06]</msg>
<status status="PASS" starttime="20201112 09:43:12.284" endtime="20201112 09:43:12.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.280" endtime="20201112 09:43:12.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.290" endtime="20201112 09:43:12.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.293" endtime="20201112 09:43:12.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.291" endtime="20201112 09:43:12.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.288" endtime="20201112 09:43:12.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.933" endtime="20201112 09:43:12.314"></status>
</kw>
<msg timestamp="20201112 09:43:12.314" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.321" endtime="20201112 09:43:12.332"></status>
</kw>
<msg timestamp="20201112 09:43:12.333" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.320" endtime="20201112 09:43:12.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.335" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.334" endtime="20201112 09:43:12.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.337" endtime="20201112 09:43:12.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.317" endtime="20201112 09:43:12.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.316" endtime="20201112 09:43:12.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.345" endtime="20201112 09:43:12.635"></status>
</kw>
<msg timestamp="20201112 09:43:12.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017897222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017898861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.344" endtime="20201112 09:43:12.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017897222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017898861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.639" endtime="20201112 09:43:12.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.647" endtime="20201112 09:43:12.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.341" endtime="20201112 09:43:12.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.340" endtime="20201112 09:43:12.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.654" level="INFO">${RESULT} = [{'time': 0.017898861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.017905736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:12.651" endtime="20201112 09:43:12.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:12.667" level="INFO">${OVERHEAD} = {'time': [0.017898861, 0.017905736, 0.017914167, 0.017918583, 0.017922597, 0.017929778, 0.017940292, 0.017950333, 0.017957986, 0.017962014, 0.017967514, 0.017972958, 0.017982444, 0.017987875, 0.017992...</msg>
<status status="PASS" starttime="20201112 09:43:12.655" endtime="20201112 09:43:12.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.671" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:12.670" endtime="20201112 09:43:12.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.674" level="INFO">VALUE: [1.6389999999977256e-06, 1.6529999999972955e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6520000000012913e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.637999999998252e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.5979999999984895e-06, 1.639000000001195e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6380000000017214e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:43:12.672" endtime="20201112 09:43:12.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.668" endtime="20201112 09:43:12.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.677" endtime="20201112 09:43:12.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.681" endtime="20201112 09:43:12.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.679" endtime="20201112 09:43:12.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.676" endtime="20201112 09:43:12.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.314" endtime="20201112 09:43:12.701"></status>
</kw>
<msg timestamp="20201112 09:43:12.702" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.709" endtime="20201112 09:43:12.721"></status>
</kw>
<msg timestamp="20201112 09:43:12.722" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.708" endtime="20201112 09:43:12.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.723" endtime="20201112 09:43:12.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.725" endtime="20201112 09:43:12.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.705" endtime="20201112 09:43:12.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.703" endtime="20201112 09:43:12.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.734" endtime="20201112 09:43:13.016"></status>
</kw>
<msg timestamp="20201112 09:43:13.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018226958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018228611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.733" endtime="20201112 09:43:13.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018226958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018228611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.021" endtime="20201112 09:43:13.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.029" endtime="20201112 09:43:13.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.730" endtime="20201112 09:43:13.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.729" endtime="20201112 09:43:13.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.036" level="INFO">${RESULT} = [{'time': 0.018228611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018233569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:13.032" endtime="20201112 09:43:13.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:13.049" level="INFO">${OVERHEAD} = {'time': [0.018228611, 0.018233569, 0.018238778, 0.018243278, 0.01825275, 0.018262486, 0.018271014, 0.018278944, 0.018285875, 0.018296597, 0.018306167, 0.018315736, 0.018322194, 0.018331222, 0.0183367...</msg>
<status status="PASS" starttime="20201112 09:43:13.037" endtime="20201112 09:43:13.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.053" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:13.052" endtime="20201112 09:43:13.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.056" level="INFO">VALUE: [1.6529999999972955e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.6659999999973918e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.694000000000001e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6389999999977256e-06, 1.653000000000765e-06]</msg>
<status status="PASS" starttime="20201112 09:43:13.054" endtime="20201112 09:43:13.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.050" endtime="20201112 09:43:13.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.059" endtime="20201112 09:43:13.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.063" endtime="20201112 09:43:13.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.061" endtime="20201112 09:43:13.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.058" endtime="20201112 09:43:13.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.702" endtime="20201112 09:43:13.083"></status>
</kw>
<msg timestamp="20201112 09:43:13.083" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.091" endtime="20201112 09:43:13.104"></status>
</kw>
<msg timestamp="20201112 09:43:13.104" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.090" endtime="20201112 09:43:13.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.107" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.105" endtime="20201112 09:43:13.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.108" endtime="20201112 09:43:13.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.087" endtime="20201112 09:43:13.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.085" endtime="20201112 09:43:13.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.117" endtime="20201112 09:43:13.402"></status>
</kw>
<msg timestamp="20201112 09:43:13.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018003556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018005194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.115" endtime="20201112 09:43:13.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018003556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018005194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.406" endtime="20201112 09:43:13.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.414" endtime="20201112 09:43:13.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.112" endtime="20201112 09:43:13.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.111" endtime="20201112 09:43:13.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.421" level="INFO">${RESULT} = [{'time': 0.018005194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.018011903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:13.418" endtime="20201112 09:43:13.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:13.434" level="INFO">${OVERHEAD} = {'time': [0.018005194, 0.018011903, 0.018020278, 0.018030472, 0.018036458, 0.018047208, 0.01805575, 0.018065708, 0.018070514, 0.01808175, 0.018086542, 0.018096028, 0.0181025, 0.01811325, 0.018117736, ...</msg>
<status status="PASS" starttime="20201112 09:43:13.422" endtime="20201112 09:43:13.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.438" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:13.437" endtime="20201112 09:43:13.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.441" level="INFO">VALUE: [1.637999999998252e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6520000000012913e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.5970000000024853e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6800000000004311e-06, 1.6660000000008612e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201112 09:43:13.440" endtime="20201112 09:43:13.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.435" endtime="20201112 09:43:13.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.444" endtime="20201112 09:43:13.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.448" endtime="20201112 09:43:13.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.446" endtime="20201112 09:43:13.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.443" endtime="20201112 09:43:13.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.084" endtime="20201112 09:43:13.469"></status>
</kw>
<msg timestamp="20201112 09:43:13.469" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.478" endtime="20201112 09:43:13.489"></status>
</kw>
<msg timestamp="20201112 09:43:13.489" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.476" endtime="20201112 09:43:13.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.491" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.490" endtime="20201112 09:43:13.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.493" endtime="20201112 09:43:13.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.473" endtime="20201112 09:43:13.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.471" endtime="20201112 09:43:13.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.501" endtime="20201112 09:43:13.788"></status>
</kw>
<msg timestamp="20201112 09:43:13.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018846194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018847861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.500" endtime="20201112 09:43:13.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018846194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018847861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.793" endtime="20201112 09:43:13.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.801" endtime="20201112 09:43:13.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.497" endtime="20201112 09:43:13.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.496" endtime="20201112 09:43:13.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.808" level="INFO">${RESULT} = [{'time': 0.018847861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018855028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:13.804" endtime="20201112 09:43:13.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:13.821" level="INFO">${OVERHEAD} = {'time': [0.018847861, 0.018855028, 0.018859986, 0.018867111, 0.018875708, 0.018882347, 0.018893597, 0.018904264, 0.018912375, 0.018918597, 0.018924292, 0.018931403, 0.01893875, 0.018947583, 0.0189528...</msg>
<status status="PASS" starttime="20201112 09:43:13.809" endtime="20201112 09:43:13.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.825" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:13.824" endtime="20201112 09:43:13.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.828" level="INFO">VALUE: [1.6670000000003349e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6660000000008612e-06, 1.7089999999990446e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6120000000015289e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.7089999999990446e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.6660000000008612e-06]</msg>
<status status="PASS" starttime="20201112 09:43:13.826" endtime="20201112 09:43:13.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.822" endtime="20201112 09:43:13.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.831" endtime="20201112 09:43:13.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.834" endtime="20201112 09:43:13.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.833" endtime="20201112 09:43:13.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.829" endtime="20201112 09:43:13.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.470" endtime="20201112 09:43:13.855"></status>
</kw>
<msg timestamp="20201112 09:43:13.855" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.863" endtime="20201112 09:43:13.874"></status>
</kw>
<msg timestamp="20201112 09:43:13.875" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.861" endtime="20201112 09:43:13.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.876" endtime="20201112 09:43:13.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.878" endtime="20201112 09:43:13.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.859" endtime="20201112 09:43:13.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.857" endtime="20201112 09:43:13.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.887" endtime="20201112 09:43:14.178"></status>
</kw>
<msg timestamp="20201112 09:43:14.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017758611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017760264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.886" endtime="20201112 09:43:14.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017758611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017760264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.183" endtime="20201112 09:43:14.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.191" endtime="20201112 09:43:14.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.883" endtime="20201112 09:43:14.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.881" endtime="20201112 09:43:14.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.198" level="INFO">${RESULT} = [{'time': 0.017760264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.017768389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:14.194" endtime="20201112 09:43:14.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:14.211" level="INFO">${OVERHEAD} = {'time': [0.017760264, 0.017768389, 0.017774153, 0.017779681, 0.017789208, 0.017796639, 0.017807139, 0.017812097, 0.017817056, 0.017823458, 0.017829208, 0.017833694, 0.017844861, 0.017855208, 0.017860...</msg>
<status status="PASS" starttime="20201112 09:43:14.199" endtime="20201112 09:43:14.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.215" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:14.214" endtime="20201112 09:43:14.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.217" level="INFO">VALUE: [1.653000000000765e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6519999999978219e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.7220000000026103e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.7219999999991409e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5699999999993497e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6660000000008612e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.694000000000001e-06]</msg>
<status status="PASS" starttime="20201112 09:43:14.216" endtime="20201112 09:43:14.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.212" endtime="20201112 09:43:14.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.221" endtime="20201112 09:43:14.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.224" endtime="20201112 09:43:14.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.223" endtime="20201112 09:43:14.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.219" endtime="20201112 09:43:14.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.856" endtime="20201112 09:43:14.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.484" endtime="20201112 09:43:14.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.250" endtime="20201112 09:43:14.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.248" endtime="20201112 09:43:14.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.247" endtime="20201112 09:43:14.270"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:03.382" endtime="20201112 09:43:14.271" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.278" endtime="20201112 09:43:14.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.277" endtime="20201112 09:43:14.298"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.312" endtime="20201112 09:43:17.341"></status>
</kw>
<msg timestamp="20201112 09:43:17.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.310" endtime="20201112 09:43:17.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.344" endtime="20201112 09:43:17.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.353" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:17.349" endtime="20201112 09:43:17.354"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:14.307" endtime="20201112 09:43:17.355"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:14.305" endtime="20201112 09:43:17.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.303" endtime="20201112 09:43:17.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:17.364" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:17.363" endtime="20201112 09:43:17.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.359" endtime="20201112 09:43:17.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.303" endtime="20201112 09:43:17.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.302" endtime="20201112 09:43:17.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.368" endtime="20201112 09:43:17.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.301" endtime="20201112 09:43:17.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.299" endtime="20201112 09:43:17.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.275" endtime="20201112 09:43:17.373"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.393" endtime="20201112 09:43:17.416"></status>
</kw>
<msg timestamp="20201112 09:43:17.417" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.389" endtime="20201112 09:43:17.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.422" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.419" endtime="20201112 09:43:17.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.424" endtime="20201112 09:43:17.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.383" endtime="20201112 09:43:17.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.378" endtime="20201112 09:43:17.429"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.434" endtime="20201112 09:43:17.437"></status>
</kw>
<msg timestamp="20201112 09:43:17.438" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:17.431" endtime="20201112 09:43:17.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.447" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:17.444" endtime="20201112 09:43:17.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.449" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:17.448" endtime="20201112 09:43:17.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.440" endtime="20201112 09:43:17.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.454" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:17.453" endtime="20201112 09:43:17.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.456" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:17.455" endtime="20201112 09:43:17.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.451" endtime="20201112 09:43:17.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.463" endtime="20201112 09:43:17.762"></status>
</kw>
<msg timestamp="20201112 09:43:17.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106106764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106110847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.461" endtime="20201112 09:43:17.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106106764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106110847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.766" endtime="20201112 09:43:17.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.775" endtime="20201112 09:43:17.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.459" endtime="20201112 09:43:17.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.457" endtime="20201112 09:43:17.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.781" level="INFO">${RESULT} = [{'time': 3.106110847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999877046e-06, 'source_diff': 4.082999999877046e-06}, {'time': 3.106123764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.778" endtime="20201112 09:43:17.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:17.794" level="INFO">${OVERHEAD} = {'time': [3.106110847, 3.106123764, 3.106133833, 3.106140861, 3.106152903, 3.106166306, 3.106174917, 3.106182208, 3.106195847, 3.106209708, 3.106218333, 3.106231847, 3.106238319, 3.106248111, 3.106257...</msg>
<status status="PASS" starttime="20201112 09:43:17.782" endtime="20201112 09:43:17.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.799" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:43:17.798" endtime="20201112 09:43:17.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.802" level="INFO">VALUE: [4.082999999877046e-06, 4.139000000069615e-06, 4.166000000083159e-06, 4.152999999895712e-06, 4.16699999972181e-06, 4.180999999991997e-06, 4.167000000165899e-06, 4.166000000083159e-06, 4.179999999909256e-06, 4.1800000003533455e-06, 4.166000000083159e-06, 4.222000000275727e-06, 4.194000000179443e-06, 4.167000000165899e-06, 4.139000000069615e-06, 4.167000000165899e-06, 4.1109999999733304e-06, 4.152000000257061e-06, 4.167000000165899e-06, 4.1659999996390695e-06, 4.167000000165899e-06, 4.209000000088281e-06, 4.180999999991997e-06, 4.179999999909256e-06, 4.152999999895712e-06, 4.152999999895712e-06, 4.1950000002621834e-06, 4.179999999909256e-06, 4.152999999895712e-06, 4.152999999895712e-06, 4.194999999818094e-06, 4.166000000083159e-06, 4.166000000083159e-06, 4.180999999991997e-06, 4.167000000165899e-06, 4.125000000243517e-06, 4.179999999909256e-06, 4.166000000083159e-06, 4.167000000165899e-06, 4.1659999996390695e-06, 4.180999999991997e-06, 4.193999999735354e-06, 4.166000000083159e-06, 4.16699999972181e-06, 4.208000000005541e-06, 4.16699999972181e-06, 4.167000000165899e-06, 4.1659999996390695e-06, 4.180999999991997e-06, 4.137999999986874e-06]</msg>
<status status="PASS" starttime="20201112 09:43:17.801" endtime="20201112 09:43:17.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.795" endtime="20201112 09:43:17.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.805" endtime="20201112 09:43:17.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.809" endtime="20201112 09:43:17.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.807" endtime="20201112 09:43:17.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.804" endtime="20201112 09:43:17.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.375" endtime="20201112 09:43:17.829"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:14.273" endtime="20201112 09:43:17.830" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.838" endtime="20201112 09:43:17.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.836" endtime="20201112 09:43:17.858"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.872" endtime="20201112 09:43:20.899"></status>
</kw>
<msg timestamp="20201112 09:43:20.900" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.870" endtime="20201112 09:43:20.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.902" endtime="20201112 09:43:20.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.911" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:20.907" endtime="20201112 09:43:20.912"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:17.867" endtime="20201112 09:43:20.913"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:17.864" endtime="20201112 09:43:20.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.863" endtime="20201112 09:43:20.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:20.922" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:20.921" endtime="20201112 09:43:20.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.917" endtime="20201112 09:43:20.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.862" endtime="20201112 09:43:20.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.862" endtime="20201112 09:43:20.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.926" endtime="20201112 09:43:20.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.860" endtime="20201112 09:43:20.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.859" endtime="20201112 09:43:20.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.835" endtime="20201112 09:43:20.931"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.951" endtime="20201112 09:43:21.018"></status>
</kw>
<msg timestamp="20201112 09:43:21.018" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.947" endtime="20201112 09:43:21.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.021" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.019" endtime="20201112 09:43:21.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.022" endtime="20201112 09:43:21.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.942" endtime="20201112 09:43:21.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.937" endtime="20201112 09:43:21.024"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.026" endtime="20201112 09:43:21.028"></status>
</kw>
<msg timestamp="20201112 09:43:21.028" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:21.025" endtime="20201112 09:43:21.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.032" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:21.031" endtime="20201112 09:43:21.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.034" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:21.033" endtime="20201112 09:43:21.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.029" endtime="20201112 09:43:21.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.039" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:21.038" endtime="20201112 09:43:21.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.041" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:21.040" endtime="20201112 09:43:21.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.036" endtime="20201112 09:43:21.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.049" endtime="20201112 09:43:21.350"></status>
</kw>
<msg timestamp="20201112 09:43:21.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105561, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105595972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:21.047" endtime="20201112 09:43:21.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105561, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105595972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:21.354" endtime="20201112 09:43:21.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.362" endtime="20201112 09:43:21.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.044" endtime="20201112 09:43:21.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.043" endtime="20201112 09:43:21.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.369" level="INFO">${RESULT} = [{'time': 3.105595972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.497200000035505e-05, 'source_diff': 3.497200000035505e-05}, {'time': 3.106562639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:21.366" endtime="20201112 09:43:21.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:21.382" level="INFO">${OVERHEAD} = {'time': [3.105595972, 3.106562639, 3.107525153, 3.108485764, 3.109449972, 3.110416639, 3.111378028, 3.112344361, 3.113312181, 3.114276139, 3.115241361, 3.116204681, 3.117169819, 3.118135764, 3.119098...</msg>
<status status="PASS" starttime="20201112 09:43:21.370" endtime="20201112 09:43:21.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.387" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:43:21.386" endtime="20201112 09:43:21.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.390" level="INFO">VALUE: [3.497200000035505e-05, 3.508299999976927e-05, 3.5070000000025914e-05, 3.5056000000199816e-05, 3.506900000038726e-05, 3.509700000003946e-05, 3.5070000000025914e-05, 3.5068999999943173e-05, 3.512500000013574e-05, 3.5056000000199816e-05, 3.5068999999943173e-05, 3.5056000000199816e-05, 3.5068999999943173e-05, 3.508299999976927e-05, 3.504099999984689e-05, 3.508300000021336e-05, 3.5068999999943173e-05, 3.508299999976927e-05, 3.504200000037372e-05, 3.508299999976927e-05, 3.504099999984689e-05, 3.5068999999943173e-05, 3.506900000038726e-05, 3.5112000000392385e-05, 3.504199999992963e-05, 3.5013999999833345e-05, 3.50840000002961e-05, 3.5056000000199816e-05, 3.508399999985201e-05, 3.5014000000277434e-05, 3.508300000021336e-05, 3.508399999985201e-05, 3.505499999967299e-05, 3.5070000000025914e-05, 3.5070000000025914e-05, 3.5055000000117076e-05, 3.5070000000025914e-05, 3.50980000001222e-05, 3.5055000000117076e-05, 3.50840000002961e-05, 3.5014000000277434e-05, 3.5055000000117076e-05, 3.500000000000725e-05, 3.5070000000025914e-05, 3.505499999967299e-05, 3.5055000000117076e-05, 3.504100000029098e-05, 3.505599999975573e-05, 3.512499999969165e-05, 3.504199999992963e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.388" endtime="20201112 09:43:21.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.383" endtime="20201112 09:43:21.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.393" endtime="20201112 09:43:21.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.396" endtime="20201112 09:43:21.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.395" endtime="20201112 09:43:21.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.391" endtime="20201112 09:43:21.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.933" endtime="20201112 09:43:21.417"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:17.832" endtime="20201112 09:43:21.418" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.425" endtime="20201112 09:43:21.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.424" endtime="20201112 09:43:21.445"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.459" endtime="20201112 09:43:24.486"></status>
</kw>
<msg timestamp="20201112 09:43:24.487" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.458" endtime="20201112 09:43:24.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.492" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.489" endtime="20201112 09:43:24.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.498" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:24.494" endtime="20201112 09:43:24.499"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:21.454" endtime="20201112 09:43:24.500"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:21.452" endtime="20201112 09:43:24.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.451" endtime="20201112 09:43:24.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:24.510" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:24.508" endtime="20201112 09:43:24.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.504" endtime="20201112 09:43:24.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.450" endtime="20201112 09:43:24.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.449" endtime="20201112 09:43:24.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.513" endtime="20201112 09:43:24.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.448" endtime="20201112 09:43:24.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.446" endtime="20201112 09:43:24.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.422" endtime="20201112 09:43:24.520"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.539" endtime="20201112 09:43:24.740"></status>
</kw>
<msg timestamp="20201112 09:43:24.740" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.535" endtime="20201112 09:43:24.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.743" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.741" endtime="20201112 09:43:24.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.744" endtime="20201112 09:43:24.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.530" endtime="20201112 09:43:24.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.525" endtime="20201112 09:43:24.746"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.748" endtime="20201112 09:43:24.750"></status>
</kw>
<msg timestamp="20201112 09:43:24.750" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:24.747" endtime="20201112 09:43:24.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.754" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:24.753" endtime="20201112 09:43:24.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.756" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:24.755" endtime="20201112 09:43:24.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.751" endtime="20201112 09:43:24.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.762" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:24.760" endtime="20201112 09:43:24.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.764" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:24.763" endtime="20201112 09:43:24.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.758" endtime="20201112 09:43:24.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.776" endtime="20201112 09:43:25.077"></status>
</kw>
<msg timestamp="20201112 09:43:25.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108233819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108301528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.774" endtime="20201112 09:43:25.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108233819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108301528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.081" endtime="20201112 09:43:25.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.089" endtime="20201112 09:43:25.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.768" endtime="20201112 09:43:25.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.766" endtime="20201112 09:43:25.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.096" level="INFO">${RESULT} = [{'time': 3.108301528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.77090000000824e-05, 'source_diff': 6.77090000000824e-05}, {'time': 3.111914736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:25.093" endtime="20201112 09:43:25.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:25.114" level="INFO">${OVERHEAD} = {'time': [3.108301528, 3.111914736, 3.115529097, 3.119143194, 3.122760028, 3.126375639, 3.129992458, 3.133612139, 3.137225375, 3.140844264, 3.144458222, 3.148073361, 3.151687972, 3.155301611, 3.158914...</msg>
<status status="PASS" starttime="20201112 09:43:25.102" endtime="20201112 09:43:25.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.119" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:25.118" endtime="20201112 09:43:25.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.121" level="INFO">VALUE: [6.77090000000824e-05, 6.713899999999384e-05, 6.715299999981994e-05, 6.711099999989756e-05, 6.713899999999384e-05, 6.709700000007146e-05, 6.712499999972366e-05, 6.713899999999384e-05, 6.711099999989756e-05, 6.713899999999384e-05, 6.712499999972366e-05, 6.719399999965958e-05, 6.712500000016774e-05, 6.712500000016774e-05, 6.71379999999111e-05, 6.711099999989756e-05, 6.711099999989756e-05, 6.713899999999384e-05, 6.712499999972366e-05, 6.712500000016774e-05, 6.705600000023182e-05, 6.711099999989756e-05, 6.712500000016774e-05, 6.713899999999384e-05, 6.712500000016774e-05, 6.712500000016774e-05, 6.713899999999384e-05, 6.712500000016774e-05, 6.713899999999384e-05, 6.712500000016774e-05, 6.711099999989756e-05, 6.711100000034165e-05, 6.711099999989756e-05, 6.708299999980127e-05, 6.715299999981994e-05, 6.71379999999111e-05, 6.713899999999384e-05, 6.715299999981994e-05, 6.71119999999803e-05, 6.706899999997518e-05, 6.711099999989756e-05, 6.713899999999384e-05, 6.712499999972366e-05, 6.711100000034165e-05, 6.713899999999384e-05, 6.711099999989756e-05, 6.712500000016774e-05, 6.712499999972366e-05, 6.711100000034165e-05, 6.711099999989756e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.120" endtime="20201112 09:43:25.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.115" endtime="20201112 09:43:25.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.124" endtime="20201112 09:43:25.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.128" endtime="20201112 09:43:25.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.126" endtime="20201112 09:43:25.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.123" endtime="20201112 09:43:25.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.521" endtime="20201112 09:43:25.148"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:21.420" endtime="20201112 09:43:25.149" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.157" endtime="20201112 09:43:25.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.155" endtime="20201112 09:43:25.177"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.190" endtime="20201112 09:43:28.218"></status>
</kw>
<msg timestamp="20201112 09:43:28.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.189" endtime="20201112 09:43:28.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.221" endtime="20201112 09:43:28.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.230" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:28.226" endtime="20201112 09:43:28.231"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:25.185" endtime="20201112 09:43:28.232"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:25.183" endtime="20201112 09:43:28.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.182" endtime="20201112 09:43:28.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:28.242" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:28.240" endtime="20201112 09:43:28.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.236" endtime="20201112 09:43:28.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.181" endtime="20201112 09:43:28.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.180" endtime="20201112 09:43:28.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.246" endtime="20201112 09:43:28.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.179" endtime="20201112 09:43:28.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.177" endtime="20201112 09:43:28.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.154" endtime="20201112 09:43:28.251"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.270" endtime="20201112 09:43:28.295"></status>
</kw>
<msg timestamp="20201112 09:43:28.296" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.266" endtime="20201112 09:43:28.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.301" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.298" endtime="20201112 09:43:28.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.303" endtime="20201112 09:43:28.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.261" endtime="20201112 09:43:28.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.257" endtime="20201112 09:43:28.308"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.313" endtime="20201112 09:43:28.316"></status>
</kw>
<msg timestamp="20201112 09:43:28.317" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:28.310" endtime="20201112 09:43:28.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.322" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:28.321" endtime="20201112 09:43:28.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.324" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:28.323" endtime="20201112 09:43:28.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.318" endtime="20201112 09:43:28.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.329" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:28.328" endtime="20201112 09:43:28.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.331" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:28.330" endtime="20201112 09:43:28.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.325" endtime="20201112 09:43:28.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.340" endtime="20201112 09:43:28.633"></status>
</kw>
<msg timestamp="20201112 09:43:28.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105517306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105518181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.337" endtime="20201112 09:43:28.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105517306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105518181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.637" endtime="20201112 09:43:28.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.646" endtime="20201112 09:43:28.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.334" endtime="20201112 09:43:28.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.332" endtime="20201112 09:43:28.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.653" level="INFO">${RESULT} = [{'time': 3.105518181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000112834e-07, 'source_diff': 8.750000000112834e-07}, {'time': 3.105527125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:28.649" endtime="20201112 09:43:28.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:28.666" level="INFO">${OVERHEAD} = {'time': [3.105518181, 3.105527125, 3.105537736, 3.105545722, 3.105557125, 3.105567556, 3.105580306, 3.105591208, 3.105601153, 3.105613153, 3.105624014, 3.105638014, 3.105645139, 3.105658903, 3.105667...</msg>
<status status="PASS" starttime="20201112 09:43:28.654" endtime="20201112 09:43:28.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.671" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:43:28.670" endtime="20201112 09:43:28.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.673" level="INFO">VALUE: [8.750000000112834e-07, 9.030000001075678e-07, 9.030000001075678e-07, 8.88999999837381e-07, 9.169999999336653e-07, 8.88999999837381e-07, 9.029999996634785e-07, 9.579999997733069e-07, 9.309999997597629e-07, 9.030000001075678e-07, 9.169999999336653e-07, 9.030000001075678e-07, 9.169999999336653e-07, 8.890000002814702e-07, 9.020000000248274e-07, 9.030000001075678e-07, 9.169999999336653e-07, 8.609999997410966e-07, 9.020000000248274e-07, 9.029999996634785e-07, 9.029999996634785e-07, 8.879999997546406e-07, 9.030000001075678e-07, 9.030000001075678e-07, 8.879999997546406e-07, 9.029999996634785e-07, 9.309999997597629e-07, 8.479999999977395e-07, 8.880000001987298e-07, 8.330000000889015e-07, 9.170000003777545e-07, 9.439999999472093e-07, 8.610000001851859e-07, 8.750000000112834e-07, 9.020000000248274e-07, 9.030000001075678e-07, 9.169999999336653e-07, 8.890000002814702e-07, 9.029999996634785e-07, 9.299999996770225e-07, 9.029999996634785e-07, 8.610000001851859e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.029999996634785e-07, 9.029999996634785e-07, 9.029999996634785e-07, 9.15999999850925e-07, 9.029999996634785e-07]</msg>
<status status="PASS" starttime="20201112 09:43:28.672" endtime="20201112 09:43:28.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.667" endtime="20201112 09:43:28.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.676" endtime="20201112 09:43:28.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.679" endtime="20201112 09:43:28.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.678" endtime="20201112 09:43:28.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.674" endtime="20201112 09:43:28.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.253" endtime="20201112 09:43:28.700"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:25.151" endtime="20201112 09:43:28.701" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.709" endtime="20201112 09:43:28.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.707" endtime="20201112 09:43:28.729"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.743" endtime="20201112 09:43:31.770"></status>
</kw>
<msg timestamp="20201112 09:43:31.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.741" endtime="20201112 09:43:31.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.773" endtime="20201112 09:43:31.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.782" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:31.778" endtime="20201112 09:43:31.783"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:28.738" endtime="20201112 09:43:31.784"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:28.735" endtime="20201112 09:43:31.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.734" endtime="20201112 09:43:31.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:31.794" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:31.793" endtime="20201112 09:43:31.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.788" endtime="20201112 09:43:31.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.733" endtime="20201112 09:43:31.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.732" endtime="20201112 09:43:31.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.798" endtime="20201112 09:43:31.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.731" endtime="20201112 09:43:31.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.729" endtime="20201112 09:43:31.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.706" endtime="20201112 09:43:31.803"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.821" endtime="20201112 09:43:31.891"></status>
</kw>
<msg timestamp="20201112 09:43:31.892" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.818" endtime="20201112 09:43:31.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.894" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.893" endtime="20201112 09:43:31.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.895" endtime="20201112 09:43:31.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.813" endtime="20201112 09:43:31.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.808" endtime="20201112 09:43:31.898"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.900" endtime="20201112 09:43:31.901"></status>
</kw>
<msg timestamp="20201112 09:43:31.902" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:31.899" endtime="20201112 09:43:31.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.906" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:31.905" endtime="20201112 09:43:31.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.908" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:31.907" endtime="20201112 09:43:31.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.903" endtime="20201112 09:43:31.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.913" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:31.912" endtime="20201112 09:43:31.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.915" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:31.914" endtime="20201112 09:43:31.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.909" endtime="20201112 09:43:31.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.922" endtime="20201112 09:43:32.224"></status>
</kw>
<msg timestamp="20201112 09:43:32.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105639236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105651125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.920" endtime="20201112 09:43:32.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105639236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105651125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.228" endtime="20201112 09:43:32.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.237" endtime="20201112 09:43:32.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.918" endtime="20201112 09:43:32.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.916" endtime="20201112 09:43:32.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.243" level="INFO">${RESULT} = [{'time': 3.105651125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000042671e-05, 'source_diff': 1.1889000000042671e-05}, {'time': 3.106623944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:32.240" endtime="20201112 09:43:32.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:32.257" level="INFO">${OVERHEAD} = {'time': [3.105651125, 3.106623944, 3.107602958, 3.108575375, 3.109550097, 3.110527778, 3.111500819, 3.112477069, 3.113451542, 3.114430569, 3.115403403, 3.116382472, 3.117359417, 3.118336792, 3.119315...</msg>
<status status="PASS" starttime="20201112 09:43:32.244" endtime="20201112 09:43:32.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.261" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:43:32.260" endtime="20201112 09:43:32.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.264" level="INFO">VALUE: [1.1889000000042671e-05, 1.1901999999786028e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.188800000040402e-05, 1.1902000000230117e-05, 1.1889000000042671e-05, 1.1902000000230117e-05, 1.1903000000312858e-05, 1.1889000000042671e-05, 1.1874999999772484e-05, 1.1917000000138955e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1874999999772484e-05, 1.1889000000042671e-05, 1.1874999999772484e-05, 1.1902999999868769e-05, 1.1902000000230117e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1917000000138955e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.1875000000216573e-05, 1.194399999970841e-05, 1.19440000001525e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1875000000216573e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.1862000000029127e-05, 1.1862000000029127e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.1957999999978597e-05, 1.1902999999868769e-05, 1.1889000000042671e-05, 1.1889000000042671e-05, 1.188799999995993e-05, 1.1889000000042671e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1889000000042671e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.262" endtime="20201112 09:43:32.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.258" endtime="20201112 09:43:32.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.267" endtime="20201112 09:43:32.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.270" endtime="20201112 09:43:32.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.269" endtime="20201112 09:43:32.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.265" endtime="20201112 09:43:32.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.805" endtime="20201112 09:43:32.291"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:28.703" endtime="20201112 09:43:32.292" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.299" endtime="20201112 09:43:32.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.298" endtime="20201112 09:43:32.319"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.333" endtime="20201112 09:43:35.360"></status>
</kw>
<msg timestamp="20201112 09:43:35.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.330" endtime="20201112 09:43:35.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.363" endtime="20201112 09:43:35.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.373" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:35.369" endtime="20201112 09:43:35.374"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:32.328" endtime="20201112 09:43:35.375"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:32.326" endtime="20201112 09:43:35.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.324" endtime="20201112 09:43:35.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:35.384" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:35.383" endtime="20201112 09:43:35.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.379" endtime="20201112 09:43:35.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.323" endtime="20201112 09:43:35.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.323" endtime="20201112 09:43:35.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.388" endtime="20201112 09:43:35.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.322" endtime="20201112 09:43:35.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.320" endtime="20201112 09:43:35.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.296" endtime="20201112 09:43:35.394"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.412" endtime="20201112 09:43:35.614"></status>
</kw>
<msg timestamp="20201112 09:43:35.615" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.409" endtime="20201112 09:43:35.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.617" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.616" endtime="20201112 09:43:35.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.618" endtime="20201112 09:43:35.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.404" endtime="20201112 09:43:35.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.399" endtime="20201112 09:43:35.621"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.623" endtime="20201112 09:43:35.624"></status>
</kw>
<msg timestamp="20201112 09:43:35.625" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:35.622" endtime="20201112 09:43:35.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.629" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:35.628" endtime="20201112 09:43:35.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.631" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:35.630" endtime="20201112 09:43:35.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.626" endtime="20201112 09:43:35.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.636" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:35.635" endtime="20201112 09:43:35.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.638" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:35.637" endtime="20201112 09:43:35.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.632" endtime="20201112 09:43:35.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.645" endtime="20201112 09:43:35.952"></status>
</kw>
<msg timestamp="20201112 09:43:35.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108899667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108922889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.643" endtime="20201112 09:43:35.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108899667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108922889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.956" endtime="20201112 09:43:35.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.964" endtime="20201112 09:43:35.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.641" endtime="20201112 09:43:35.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.639" endtime="20201112 09:43:35.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.971" level="INFO">${RESULT} = [{'time': 3.108922889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3221999999822884e-05, 'source_diff': 2.3221999999822884e-05}, {'time': 3.112559556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:35.967" endtime="20201112 09:43:35.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:35.984" level="INFO">${OVERHEAD} = {'time': [3.108922889, 3.112559556, 3.116197542, 3.119835278, 3.123473111, 3.127108514, 3.130749139, 3.134386653, 3.138022736, 3.141662, 3.145300306, 3.148936194, 3.152571319, 3.15621225, 3.159853792,...</msg>
<status status="PASS" starttime="20201112 09:43:35.972" endtime="20201112 09:43:35.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.989" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:35.988" endtime="20201112 09:43:35.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.991" level="INFO">VALUE: [2.3221999999822884e-05, 2.3263999999745266e-05, 2.3209000000079527e-05, 2.3180999999983243e-05, 2.3207999999996787e-05, 2.324999999991917e-05, 2.319500000025343e-05, 2.3167000000157145e-05, 2.3207999999996787e-05, 2.3207999999996787e-05, 2.319500000025343e-05, 2.319400000017069e-05, 2.319400000017069e-05, 2.3221999999822884e-05, 2.3180999999983243e-05, 2.3180999999983243e-05, 2.3207999999996787e-05, 2.313900000006086e-05, 2.3208999999635438e-05, 2.3207999999996787e-05, 2.319500000025343e-05, 2.319500000025343e-05, 2.329200000028564e-05, 2.3207999999996787e-05, 2.3208999999635438e-05, 2.3207999999996787e-05, 2.319400000017069e-05, 2.3277000000376802e-05, 2.3207999999996787e-05, 2.3180999999983243e-05, 2.3222000000266974e-05, 2.3209000000079527e-05, 2.3180999999983243e-05, 2.319500000025343e-05, 2.3180999999983243e-05, 2.313900000006086e-05, 2.319499999980934e-05, 2.319500000025343e-05, 2.3208999999635438e-05, 2.3221999999822884e-05, 2.3207999999996787e-05, 2.3208999999635438e-05, 2.3153000000331048e-05, 2.3264000000189355e-05, 2.315299999988696e-05, 2.3209000000079527e-05, 2.3207999999996787e-05, 2.319400000017069e-05, 2.3179999999900502e-05, 2.319400000017069e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.990" endtime="20201112 09:43:35.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.985" endtime="20201112 09:43:35.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.994" endtime="20201112 09:43:35.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.998" endtime="20201112 09:43:36.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.996" endtime="20201112 09:43:36.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.993" endtime="20201112 09:43:36.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.395" endtime="20201112 09:43:36.018"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:32.293" endtime="20201112 09:43:36.019" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:47.888" endtime="20201112 09:43:36.028"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.099" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:43:36.107" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:43:37.285" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:43:36.097" endtime="20201112 09:43:37.286"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.289" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:43:37.287" endtime="20201112 09:43:37.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.096" endtime="20201112 09:43:37.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.292" endtime="20201112 09:43:37.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.290" endtime="20201112 09:43:37.474"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.487" endtime="20201112 09:43:40.515"></status>
</kw>
<msg timestamp="20201112 09:43:40.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.486" endtime="20201112 09:43:40.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.519" endtime="20201112 09:43:40.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.528" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:40.524" endtime="20201112 09:43:40.529"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:37.483" endtime="20201112 09:43:40.530"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:37.481" endtime="20201112 09:43:40.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.480" endtime="20201112 09:43:40.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:40.539" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:40.538" endtime="20201112 09:43:40.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.534" endtime="20201112 09:43:40.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.479" endtime="20201112 09:43:40.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.479" endtime="20201112 09:43:40.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.543" endtime="20201112 09:43:40.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.477" endtime="20201112 09:43:40.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.549" endtime="20201112 09:43:40.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.475" endtime="20201112 09:43:40.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.094" endtime="20201112 09:43:40.553"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.569" endtime="20201112 09:43:40.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.566" endtime="20201112 09:43:40.592"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.609" endtime="20201112 09:43:43.636"></status>
</kw>
<msg timestamp="20201112 09:43:43.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.607" endtime="20201112 09:43:43.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.642" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.639" endtime="20201112 09:43:43.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.649" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:43.644" endtime="20201112 09:43:43.650"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:40.605" endtime="20201112 09:43:43.651"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:40.602" endtime="20201112 09:43:43.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.601" endtime="20201112 09:43:43.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:43.660" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:43.659" endtime="20201112 09:43:43.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.655" endtime="20201112 09:43:43.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.600" endtime="20201112 09:43:43.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.599" endtime="20201112 09:43:43.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.664" endtime="20201112 09:43:43.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.596" endtime="20201112 09:43:43.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.593" endtime="20201112 09:43:43.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.560" endtime="20201112 09:43:43.670"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.690" endtime="20201112 09:43:43.710"></status>
</kw>
<msg timestamp="20201112 09:43:43.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.687" endtime="20201112 09:43:43.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.714" endtime="20201112 09:43:43.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.719" endtime="20201112 09:43:43.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.682" endtime="20201112 09:43:43.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.677" endtime="20201112 09:43:43.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.737" endtime="20201112 09:43:44.039"></status>
</kw>
<msg timestamp="20201112 09:43:44.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114437361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114439986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.734" endtime="20201112 09:43:44.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114437361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114439986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.043" endtime="20201112 09:43:44.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.052" endtime="20201112 09:43:44.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.729" endtime="20201112 09:43:44.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.725" endtime="20201112 09:43:44.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.059" level="INFO">${RESULT} = [{'time': 3.114439986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000338503e-06, 'source_diff': 2.6250000000338503e-06}, {'time': 3.114451181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:44.055" endtime="20201112 09:43:44.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.072" level="INFO">${ACCURACY} = {'time': [3.114439986, 3.114451181, 3.114459097, 3.114467069, 3.114474111, 3.114480986, 3.114493, 3.114504194, 3.114509056, 3.114522194, 3.114532069, 3.114541958, 3.114554097, 3.114561, 3.114568972, 3...</msg>
<status status="PASS" starttime="20201112 09:43:44.060" endtime="20201112 09:43:44.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.077" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.075" endtime="20201112 09:43:44.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.079" level="INFO">VALUE: [2.6250000000338503e-06, 2.931000000039319e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.9299999999565784e-06, 2.6250000000338503e-06, 3.235999999962047e-06, 2.334000000381309e-06, 3.262999999975591e-06, 2.901999999860294e-06, 2.3330000002985685e-06, 2.9299999999565784e-06, 2.9170000002132213e-06, 2.6250000000338503e-06, 2.6250000000338503e-06, 2.347000000124666e-06, 2.9309999995952296e-06, 2.931000000039319e-06, 2.6110000002077527e-06, 2.9159999996863917e-06, 2.9299999999565784e-06, 2.6250000000338503e-06, 2.347000000124666e-06, 2.9299999999565784e-06, 2.9450000003095056e-06, 2.320000000111122e-06, 2.320000000111122e-06, 2.9450000003095056e-06, 3.2229999997746006e-06, 2.931000000039319e-06, 2.596999999937566e-06, 2.9449999998654164e-06, 2.277999999744651e-06, 2.624999999589761e-06, 2.9170000002132213e-06, 2.638999999859948e-06, 2.3329999998544793e-06, 2.931000000039319e-06, 2.3190000000283817e-06, 2.7079999997958737e-06, 2.6250000000338503e-06, 2.3329999998544793e-06, 2.9170000002132213e-06, 2.305000000202284e-06, 2.916000000130481e-06, 3.208000000309852e-06, 2.6530000001301346e-06, 2.3329999998544793e-06, 2.931000000039319e-06]</msg>
<status status="PASS" starttime="20201112 09:43:44.078" endtime="20201112 09:43:44.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.073" endtime="20201112 09:43:44.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.082" endtime="20201112 09:43:44.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.086" endtime="20201112 09:43:44.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.084" endtime="20201112 09:43:44.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.081" endtime="20201112 09:43:44.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.674" endtime="20201112 09:43:44.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.673" endtime="20201112 09:43:44.107"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.115" endtime="20201112 09:43:44.129"></status>
</kw>
<msg timestamp="20201112 09:43:44.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.114" endtime="20201112 09:43:44.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.131" endtime="20201112 09:43:44.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.133" endtime="20201112 09:43:44.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.111" endtime="20201112 09:43:44.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.109" endtime="20201112 09:43:44.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.143" endtime="20201112 09:43:44.433"></status>
</kw>
<msg timestamp="20201112 09:43:44.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.142" endtime="20201112 09:43:44.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.437" endtime="20201112 09:43:44.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.446" endtime="20201112 09:43:44.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.139" endtime="20201112 09:43:44.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.138" endtime="20201112 09:43:44.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.452" level="INFO">${RESULT} = [{'time': 0.019548056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.019560125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:44.449" endtime="20201112 09:43:44.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.467" level="INFO">${ACCURACY} = {'time': [0.019548056, 0.019560125, 0.019573222, 0.019579153, 0.019591111, 0.019599278, 0.019605292, 0.019614167, 0.019621292, 0.019630056, 0.019643264, 0.019651125, 0.019661111, 0.019673264, 0.019686...</msg>
<status status="PASS" starttime="20201112 09:43:44.454" endtime="20201112 09:43:44.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.476" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.474" endtime="20201112 09:43:44.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.481" level="INFO">VALUE: [3.5139999999996008e-06, 4.125000000000656e-06, 4.111000000001086e-06, 3.2219999999971716e-06, 3.52800000000264e-06, 4.152999999999796e-06, 3.5279999999991707e-06, 3.2359999999967415e-06, 4.09799999999752e-06, 3.83400000000117e-06, 3.5139999999996008e-06, 4.1109999999976166e-06, 3.2219999999971716e-06, 4.1109999999976166e-06, 3.804999999999087e-06, 3.5139999999996008e-06, 4.111000000001086e-06, 4.08399999999795e-06, 3.833000000001696e-06, 3.8059999999985605e-06, 3.222000000000641e-06, 3.819000000002126e-06, 3.818999999998657e-06, 4.111000000001086e-06, 3.5279999999991707e-06, 3.790999999999517e-06, 4.125000000000656e-06, 3.2369999999996846e-06, 3.80600000000203e-06, 4.1109999999976166e-06, 4.111000000001086e-06, 3.2090000000005448e-06, 3.236000000000211e-06, 3.4579999999978517e-06, 3.54200000000221e-06, 3.526999999999697e-06, 3.54200000000221e-06, 3.222000000000641e-06, 3.2369999999996846e-06, 3.5139999999996008e-06, 3.763999999999851e-06, 3.5139999999996008e-06, 4.125000000000656e-06, 3.249999999999781e-06, 3.804999999999087e-06, 4.111000000001086e-06, 3.833000000001696e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.818999999998657e-06]</msg>
<status status="PASS" starttime="20201112 09:43:44.478" endtime="20201112 09:43:44.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.469" endtime="20201112 09:43:44.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.488" endtime="20201112 09:43:44.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.495" endtime="20201112 09:43:44.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.492" endtime="20201112 09:43:44.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.485" endtime="20201112 09:43:44.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.108" endtime="20201112 09:43:44.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.107" endtime="20201112 09:43:44.520"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.538" endtime="20201112 09:43:44.556"></status>
</kw>
<msg timestamp="20201112 09:43:44.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.535" endtime="20201112 09:43:44.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.559" endtime="20201112 09:43:44.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.564" endtime="20201112 09:43:44.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.530" endtime="20201112 09:43:44.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.525" endtime="20201112 09:43:44.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.577" endtime="20201112 09:43:44.866"></status>
</kw>
<msg timestamp="20201112 09:43:44.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033959569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033964278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.575" endtime="20201112 09:43:44.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033959569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033964278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.870" endtime="20201112 09:43:44.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.878" endtime="20201112 09:43:44.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.573" endtime="20201112 09:43:44.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.571" endtime="20201112 09:43:44.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.886" level="INFO">${RESULT} = [{'time': 0.033964278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7089999999985754e-06, 'source_diff': 4.7089999999985754e-06}, {'time': 0.03397625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:44.882" endtime="20201112 09:43:44.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.899" level="INFO">${ACCURACY} = {'time': [0.033964278, 0.03397625, 0.033986319, 0.033997444, 0.034009444, 0.034022292, 0.034031333, 0.034044319, 0.0340515, 0.034066375, 0.034075292, 0.034085347, 0.034099347, 0.034110528, 0.034119389...</msg>
<status status="PASS" starttime="20201112 09:43:44.887" endtime="20201112 09:43:44.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.904" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.903" endtime="20201112 09:43:44.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.906" level="INFO">VALUE: [4.7089999999985754e-06, 4.389000000000476e-06, 4.416000000000142e-06, 5.013000000005097e-06, 5.012999999998158e-06, 4.416999999999616e-06, 4.401999999993633e-06, 4.708000000006041e-06, 4.693999999999532e-06, 5.01400000000457e-06, 4.9999999999980616e-06, 4.416000000000142e-06, 5.01400000000457e-06, 5.30600000000353e-06, 4.707999999999102e-06, 4.777999999996951e-06, 5.0000000000050004e-06, 4.361000000001336e-06, 4.723000000005084e-06, 4.416000000000142e-06, 5.0139999999976315e-06, 4.7089999999985754e-06, 4.722999999998145e-06, 4.9999999999980616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.707999999999102e-06, 4.693999999999532e-06, 5.0139999999976315e-06, 4.9999999999980616e-06, 4.721999999998672e-06, 4.416000000000142e-06, 5.041999999996771e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.111000000001086e-06, 4.138000000000752e-06, 4.9999999999980616e-06, 5.02800000000414e-06, 4.403000000000046e-06, 4.722000000005611e-06, 5.30600000000353e-06, 4.7089999999985754e-06, 5.040999999997298e-06, 5.02800000000414e-06, 4.401999999993633e-06, 4.7499999999978115e-06, 4.430999999999186e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 09:43:44.905" endtime="20201112 09:43:44.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.900" endtime="20201112 09:43:44.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.909" endtime="20201112 09:43:44.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.913" endtime="20201112 09:43:44.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.911" endtime="20201112 09:43:44.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.908" endtime="20201112 09:43:44.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.522" endtime="20201112 09:43:44.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.521" endtime="20201112 09:43:44.934"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.942" endtime="20201112 09:43:44.957"></status>
</kw>
<msg timestamp="20201112 09:43:44.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.941" endtime="20201112 09:43:44.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.958" endtime="20201112 09:43:44.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.961" endtime="20201112 09:43:44.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.938" endtime="20201112 09:43:44.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.936" endtime="20201112 09:43:44.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.971" endtime="20201112 09:43:45.258"></status>
</kw>
<msg timestamp="20201112 09:43:45.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019535847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.969" endtime="20201112 09:43:45.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019535847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.262" endtime="20201112 09:43:45.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.271" endtime="20201112 09:43:45.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.967" endtime="20201112 09:43:45.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.965" endtime="20201112 09:43:45.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.277" level="INFO">${RESULT} = [{'time': 0.019542056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.019553944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:45.274" endtime="20201112 09:43:45.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.291" level="INFO">${ACCURACY} = {'time': [0.019542056, 0.019553944, 0.019564, 0.019579014, 0.019588931, 0.019603056, 0.019618042, 0.019630056, 0.019646125, 0.019656167, 0.019668125, 0.019677, 0.019693153, 0.019706042, 0.019715069, 0...</msg>
<status status="PASS" starttime="20201112 09:43:45.278" endtime="20201112 09:43:45.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.295" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.294" endtime="20201112 09:43:45.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.298" level="INFO">VALUE: [6.2090000000000756e-06, 5.596999999999547e-06, 5.889000000001976e-06, 5.319999999999631e-06, 5.223000000002115e-06, 5.61200000000206e-06, 5.624999999998687e-06, 5.8889999999985065e-06, 6.208000000000602e-06, 5.8889999999985065e-06, 5.582999999999977e-06, 5.610999999999117e-06, 6.222000000000172e-06, 5.903000000001546e-06, 5.597000000003016e-06, 5.306000000000061e-06, 5.5979999999990204e-06, 5.889000000001976e-06, 6.1939999999975626e-06, 5.59800000000249e-06, 5.304999999997118e-06, 5.610999999999117e-06, 5.569999999999881e-06, 5.596999999999547e-06, 5.889000000001976e-06, 6.195000000000506e-06, 5.610999999999117e-06, 5.292000000000491e-06, 5.61199999999859e-06, 5.931000000000686e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.944000000000782e-06, 5.34800000000224e-06, 5.319000000000157e-06, 6.166999999997896e-06, 6.1939999999975626e-06, 5.903000000001546e-06, 5.526999999998228e-06, 5.610999999999117e-06, 5.292000000000491e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.610999999999117e-06, 5.610999999999117e-06, 6.2229999999996455e-06, 6.250000000002781e-06]</msg>
<status status="PASS" starttime="20201112 09:43:45.296" endtime="20201112 09:43:45.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.292" endtime="20201112 09:43:45.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.301" endtime="20201112 09:43:45.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.304" endtime="20201112 09:43:45.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.303" endtime="20201112 09:43:45.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.299" endtime="20201112 09:43:45.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.935" endtime="20201112 09:43:45.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.934" endtime="20201112 09:43:45.326"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.335" endtime="20201112 09:43:45.348"></status>
</kw>
<msg timestamp="20201112 09:43:45.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.334" endtime="20201112 09:43:45.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.350" endtime="20201112 09:43:45.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.352" endtime="20201112 09:43:45.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.331" endtime="20201112 09:43:45.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.328" endtime="20201112 09:43:45.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.363" endtime="20201112 09:43:45.647"></status>
</kw>
<msg timestamp="20201112 09:43:45.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020971222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.361" endtime="20201112 09:43:45.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020971222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.652" endtime="20201112 09:43:45.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.660" endtime="20201112 09:43:45.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.358" endtime="20201112 09:43:45.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.357" endtime="20201112 09:43:45.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.667" level="INFO">${RESULT} = [{'time': 0.020971222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020982403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.663" endtime="20201112 09:43:45.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.680" level="INFO">${ACCURACY} = {'time': [0.020971222, 0.020982403, 0.020994292, 0.021008222, 0.021020222, 0.021036403, 0.021050153, 0.021060389, 0.021069431, 0.021084361, 0.021094347, 0.021109417, 0.021123181, 0.021138167, 0.021150...</msg>
<status status="PASS" starttime="20201112 09:43:45.668" endtime="20201112 09:43:45.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.685" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.684" endtime="20201112 09:43:45.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.687" level="INFO">VALUE: [7.111000000000617e-06, 6.7919999999985214e-06, 6.264000000002351e-06, 6.513999999999132e-06, 6.194000000001032e-06, 6.736000000000242e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.459000000000326e-06, 6.485999999999992e-06, 6.790999999999048e-06, 6.7919999999985214e-06, 6.153000000001796e-06, 6.7919999999985214e-06, 7.0980000000005206e-06, 6.804999999998618e-06, 6.179999999997993e-06, 7.084000000000951e-06, 6.471999999996952e-06, 6.2229999999996455e-06, 6.2079999999971325e-06, 6.512999999999658e-06, 6.7919999999985214e-06, 6.805999999998091e-06, 6.485999999999992e-06, 7.069000000001907e-06, 6.499999999999562e-06, 6.804999999998618e-06, 6.2090000000000756e-06, 6.499999999999562e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 6.499999999999562e-06, 6.512999999999658e-06, 7.0279999999992016e-06, 7.097000000001047e-06, 7.097999999997051e-06, 6.165999999998423e-06, 7.125000000000187e-06, 6.790999999999048e-06, 6.499999999999562e-06, 7.097000000001047e-06, 6.1389999999987566e-06, 6.222000000000172e-06, 7.110999999997147e-06, 7.0980000000005206e-06, 6.458000000000852e-06, 7.125000000000187e-06, 6.485999999999992e-06, 6.2079999999971325e-06]</msg>
<status status="PASS" starttime="20201112 09:43:45.686" endtime="20201112 09:43:45.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.681" endtime="20201112 09:43:45.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.691" endtime="20201112 09:43:45.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.694" endtime="20201112 09:43:45.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.692" endtime="20201112 09:43:45.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.689" endtime="20201112 09:43:45.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.327" endtime="20201112 09:43:45.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.326" endtime="20201112 09:43:45.715"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.724" endtime="20201112 09:43:45.738"></status>
</kw>
<msg timestamp="20201112 09:43:45.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.722" endtime="20201112 09:43:45.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.739" endtime="20201112 09:43:45.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.742" endtime="20201112 09:43:45.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.719" endtime="20201112 09:43:45.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.717" endtime="20201112 09:43:45.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.752" endtime="20201112 09:43:46.038"></status>
</kw>
<msg timestamp="20201112 09:43:46.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.750" endtime="20201112 09:43:46.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.042" endtime="20201112 09:43:46.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.051" endtime="20201112 09:43:46.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.748" endtime="20201112 09:43:46.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.746" endtime="20201112 09:43:46.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.058" level="INFO">${RESULT} = [{'time': 0.019612778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.019623903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.054" endtime="20201112 09:43:46.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.071" level="INFO">${ACCURACY} = {'time': [0.019612778, 0.019623903, 0.019635903, 0.019651014, 0.019661972, 0.019677028, 0.019688986, 0.019700056, 0.019710958, 0.019725069, 0.019740083, 0.019751, 0.019764944, 0.019779986, 0.019794806...</msg>
<status status="PASS" starttime="20201112 09:43:46.059" endtime="20201112 09:43:46.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.075" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.074" endtime="20201112 09:43:46.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.078" level="INFO">VALUE: [7.097000000001047e-06, 7.709000000001576e-06, 7.402999999999577e-06, 8.264000000000882e-06, 7.693999999999063e-06, 7.958999999998356e-06, 8.292000000000022e-06, 8.278000000000452e-06, 7.402000000000103e-06, 8.000000000001062e-06, 7.707999999998633e-06, 7.958000000002352e-06, 8.054999999999868e-06, 7.3469999999978275e-06, 7.084000000000951e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.707999999998633e-06, 8.013999999997162e-06, 7.0980000000005206e-06, 7.388000000000533e-06, 7.055000000002337e-06, 7.736000000001242e-06, 7.707999999998633e-06, 7.987000000000966e-06, 7.361000000000867e-06, 7.693999999999063e-06, 8.028000000000202e-06, 7.652999999999827e-06, 7.375000000000437e-06, 7.985999999998022e-06, 8.291000000000548e-06, 7.693999999999063e-06, 7.402000000000103e-06, 7.694999999998536e-06, 7.959000000001826e-06, 7.375000000000437e-06, 7.694999999998536e-06, 7.4169999999991465e-06, 7.402999999999577e-06, 8.000000000001062e-06, 8.278000000000452e-06, 7.986000000001492e-06, 7.944000000002782e-06, 8.291000000000548e-06, 7.695000000002006e-06, 7.389000000000007e-06, 7.986999999997496e-06, 8.000000000001062e-06, 7.709000000001576e-06]</msg>
<status status="PASS" starttime="20201112 09:43:46.077" endtime="20201112 09:43:46.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.072" endtime="20201112 09:43:46.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.081" endtime="20201112 09:43:46.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.084" endtime="20201112 09:43:46.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.083" endtime="20201112 09:43:46.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.079" endtime="20201112 09:43:46.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.716" endtime="20201112 09:43:46.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.715" endtime="20201112 09:43:46.105"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.114" endtime="20201112 09:43:46.128"></status>
</kw>
<msg timestamp="20201112 09:43:46.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.113" endtime="20201112 09:43:46.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.130" endtime="20201112 09:43:46.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.133" endtime="20201112 09:43:46.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.110" endtime="20201112 09:43:46.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.108" endtime="20201112 09:43:46.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.144" endtime="20201112 09:43:46.429"></status>
</kw>
<msg timestamp="20201112 09:43:46.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.142" endtime="20201112 09:43:46.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.433" endtime="20201112 09:43:46.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.441" endtime="20201112 09:43:46.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.140" endtime="20201112 09:43:46.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.138" endtime="20201112 09:43:46.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.448" level="INFO">${RESULT} = [{'time': 0.019710792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.125000000002187e-06, 'source_diff': 9.125000000002187e-06}, {'time': 0.019729611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.445" endtime="20201112 09:43:46.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.462" level="INFO">${ACCURACY} = {'time': [0.019710792, 0.019729611, 0.019743542, 0.019756833, 0.019773778, 0.019785681, 0.019802819, 0.019817764, 0.019833694, 0.019848736, 0.019861736, 0.019872722, 0.019885583, 0.019899639, 0.019914...</msg>
<status status="PASS" starttime="20201112 09:43:46.449" endtime="20201112 09:43:46.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.466" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.465" endtime="20201112 09:43:46.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.469" level="INFO">VALUE: [9.125000000002187e-06, 8.875000000001937e-06, 8.292000000000022e-06, 8.597000000002547e-06, 9.181000000000467e-06, 9.111999999998621e-06, 9.194000000000563e-06, 8.347000000002297e-06, 8.291000000000548e-06, 8.263999999997412e-06, 8.305000000000118e-06, 8.291000000000548e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.278000000000452e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.889000000001507e-06, 9.180000000000993e-06, 9.181000000000467e-06, 9.180000000000993e-06, 8.582999999999508e-06, 8.638999999997787e-06, 9.180999999996997e-06, 8.318999999999688e-06, 8.582999999999508e-06, 8.901999999998134e-06, 8.555999999999842e-06, 8.888999999998037e-06, 8.277000000000978e-06, 8.61200000000159e-06, 8.292000000000022e-06, 8.903000000001077e-06, 8.568999999999938e-06, 8.583000000002977e-06, 9.221999999999703e-06, 8.874999999998467e-06, 9.165999999997954e-06, 8.874999999998467e-06, 8.931000000000217e-06, 9.208000000000133e-06, 9.180000000000993e-06, 8.889000000001507e-06, 8.292000000000022e-06, 8.319999999999161e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201112 09:43:46.467" endtime="20201112 09:43:46.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.462" endtime="20201112 09:43:46.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.472" endtime="20201112 09:43:46.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.475" endtime="20201112 09:43:46.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.474" endtime="20201112 09:43:46.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.470" endtime="20201112 09:43:46.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.106" endtime="20201112 09:43:46.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.106" endtime="20201112 09:43:46.496"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.505" endtime="20201112 09:43:46.519"></status>
</kw>
<msg timestamp="20201112 09:43:46.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.504" endtime="20201112 09:43:46.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.521" endtime="20201112 09:43:46.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.523" endtime="20201112 09:43:46.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.501" endtime="20201112 09:43:46.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.499" endtime="20201112 09:43:46.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.533" endtime="20201112 09:43:46.818"></status>
</kw>
<msg timestamp="20201112 09:43:46.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.531" endtime="20201112 09:43:46.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.822" endtime="20201112 09:43:46.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.831" endtime="20201112 09:43:46.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.529" endtime="20201112 09:43:46.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.527" endtime="20201112 09:43:46.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.837" level="INFO">${RESULT} = [{'time': 0.020516236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0055000000001868e-05, 'source_diff': 1.0055000000001868e-05}, {'time': 0.020531347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:46.834" endtime="20201112 09:43:46.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.850" level="INFO">${ACCURACY} = {'time': [0.020516236, 0.020531347, 0.020547167, 0.020567167, 0.020582111, 0.020597222, 0.020610083, 0.020627236, 0.020646111, 0.020663292, 0.020679111, 0.020697167, 0.020711167, 0.020731125, 0.020745...</msg>
<status status="PASS" starttime="20201112 09:43:46.838" endtime="20201112 09:43:46.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.855" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.854" endtime="20201112 09:43:46.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.857" level="INFO">VALUE: [1.0055000000001868e-05, 9.735999999999773e-06, 9.764000000002382e-06, 1.0056000000001342e-05, 9.777999999998482e-06, 9.763999999998912e-06, 1.0083000000001008e-05, 1.0055000000001868e-05, 9.194000000000563e-06, 9.485999999999523e-06, 9.777999999998482e-06, 1.0098000000000051e-05, 9.166999999997427e-06, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 9.485999999999523e-06, 9.194000000000563e-06, 9.749999999999343e-06, 9.485999999999523e-06, 9.181000000000467e-06, 9.819000000001188e-06, 1.0084000000000481e-05, 9.430000000001243e-06, 9.778000000001952e-06, 9.485999999999523e-06, 9.778000000001952e-06, 1.0069000000001438e-05, 9.180000000000993e-06, 9.485999999999523e-06, 9.485999999999523e-06, 9.194000000000563e-06, 9.763999999998912e-06, 1.0083000000001008e-05, 9.777999999998482e-06, 1.0056000000001342e-05, 9.778000000001952e-06, 9.471999999999953e-06, 9.763999999998912e-06, 9.790999999998579e-06, 9.167000000000897e-06, 9.180000000000993e-06, 9.153000000001327e-06, 1.0069000000001438e-05, 9.471999999999953e-06, 9.542000000001272e-06, 9.833000000000758e-06, 9.458000000000383e-06, 1.0082999999997538e-05, 9.458999999999856e-06]</msg>
<status status="PASS" starttime="20201112 09:43:46.856" endtime="20201112 09:43:46.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.851" endtime="20201112 09:43:46.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.861" endtime="20201112 09:43:46.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.864" endtime="20201112 09:43:46.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.863" endtime="20201112 09:43:46.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.859" endtime="20201112 09:43:46.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.497" endtime="20201112 09:43:46.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.497" endtime="20201112 09:43:46.886"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.894" endtime="20201112 09:43:46.908"></status>
</kw>
<msg timestamp="20201112 09:43:46.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.892" endtime="20201112 09:43:46.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.910" endtime="20201112 09:43:46.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.912" endtime="20201112 09:43:46.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.890" endtime="20201112 09:43:46.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.888" endtime="20201112 09:43:46.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.922" endtime="20201112 09:43:47.210"></status>
</kw>
<msg timestamp="20201112 09:43:47.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019392097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.921" endtime="20201112 09:43:47.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019392097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.214" endtime="20201112 09:43:47.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.223" endtime="20201112 09:43:47.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.918" endtime="20201112 09:43:47.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.916" endtime="20201112 09:43:47.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.229" level="INFO">${RESULT} = [{'time': 0.019402514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.019415625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:47.226" endtime="20201112 09:43:47.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.243" level="INFO">${ACCURACY} = {'time': [0.019402514, 0.019415625, 0.019436486, 0.019451542, 0.019470458, 0.019487444, 0.019503444, 0.019523611, 0.019543431, 0.019562708, 0.019576514, 0.019591681, 0.019608625, 0.019622694, 0.019641...</msg>
<status status="PASS" starttime="20201112 09:43:47.230" endtime="20201112 09:43:47.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.247" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.246" endtime="20201112 09:43:47.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.250" level="INFO">VALUE: [1.0416999999998677e-05, 1.0638999999999788e-05, 1.0957999999998413e-05, 1.0666999999998927e-05, 1.0957999999998413e-05, 1.0374999999999968e-05, 1.0375000000003437e-05, 1.1264000000000413e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.1250000000000843e-05, 1.0667000000002397e-05, 1.0401999999999634e-05, 1.0916999999999177e-05, 1.0388999999999537e-05, 1.0651999999999884e-05, 1.0679999999999024e-05, 1.0666999999998927e-05, 1.0694999999998067e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0722000000001203e-05, 1.0388000000000064e-05, 1.0972000000001453e-05, 1.0361000000000398e-05, 1.0680999999998497e-05, 1.0667000000002397e-05, 1.0374999999999968e-05, 1.0958999999997887e-05, 1.0652999999999357e-05, 1.1250000000000843e-05, 1.0959000000001357e-05, 1.0388000000000064e-05, 1.0361999999999871e-05, 1.0680999999998497e-05, 1.0638999999999788e-05, 1.1264000000000413e-05, 1.0651999999999884e-05, 1.0999999999997123e-05, 1.0943999999998844e-05, 1.0957999999998413e-05, 1.0930999999998747e-05, 1.0666999999998927e-05, 1.0611000000000648e-05, 1.0958999999997887e-05, 1.0374999999999968e-05, 1.0665999999999454e-05, 1.0665999999999454e-05, 1.0334000000000731e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.248" endtime="20201112 09:43:47.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.243" endtime="20201112 09:43:47.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.253" endtime="20201112 09:43:47.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.257" endtime="20201112 09:43:47.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.255" endtime="20201112 09:43:47.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.251" endtime="20201112 09:43:47.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.886" endtime="20201112 09:43:47.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.886" endtime="20201112 09:43:47.277"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.286" endtime="20201112 09:43:47.301"></status>
</kw>
<msg timestamp="20201112 09:43:47.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.284" endtime="20201112 09:43:47.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.302" endtime="20201112 09:43:47.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.305" endtime="20201112 09:43:47.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.282" endtime="20201112 09:43:47.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.280" endtime="20201112 09:43:47.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.315" endtime="20201112 09:43:47.600"></status>
</kw>
<msg timestamp="20201112 09:43:47.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.313" endtime="20201112 09:43:47.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.604" endtime="20201112 09:43:47.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.613" endtime="20201112 09:43:47.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.311" endtime="20201112 09:43:47.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.309" endtime="20201112 09:43:47.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.620" level="INFO">${RESULT} = [{'time': 0.019644458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.019659569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:47.616" endtime="20201112 09:43:47.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.633" level="INFO">${ACCURACY} = {'time': [0.019644458, 0.019659569, 0.019676333, 0.019693292, 0.019710361, 0.019725486, 0.019744472, 0.019760431, 0.019778375, 0.019796556, 0.019818667, 0.019833333, 0.019851375, 0.019866486, 0.019884...</msg>
<status status="PASS" starttime="20201112 09:43:47.621" endtime="20201112 09:43:47.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.638" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.636" endtime="20201112 09:43:47.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.640" level="INFO">VALUE: [1.1875000000001468e-05, 1.1568999999999469e-05, 1.1250000000000843e-05, 1.1861000000001898e-05, 1.1250000000000843e-05, 1.1805000000000149e-05, 1.1264000000000413e-05, 1.1263999999996943e-05, 1.1597000000002078e-05, 1.1625000000001218e-05, 1.2236000000002273e-05, 1.1554999999999899e-05, 1.1277999999999982e-05, 1.1860999999998428e-05, 1.1570000000002412e-05, 1.1610999999998178e-05, 1.1264000000000413e-05, 1.1874999999997998e-05, 1.1596999999998608e-05, 1.1903000000000608e-05, 1.2153000000000858e-05, 1.1832999999999289e-05, 1.1860999999998428e-05, 1.1568999999999469e-05, 1.1860999999998428e-05, 1.1569000000002938e-05, 1.1569999999998942e-05, 1.1819000000003188e-05, 1.1860999999998428e-05, 1.1181000000002467e-05, 1.1555999999999372e-05, 1.1554999999999899e-05, 1.1554999999999899e-05, 1.1861999999997902e-05, 1.1250000000000843e-05, 1.1860999999998428e-05, 1.1264000000000413e-05, 1.1860999999998428e-05, 1.1556000000002842e-05, 1.2153000000000858e-05, 1.1264000000000413e-05, 1.1541999999999802e-05, 1.1568999999999469e-05, 1.1500000000001093e-05, 1.1514000000000663e-05, 1.1846999999998858e-05, 1.1250000000000843e-05, 1.1848000000001802e-05, 1.1847000000002328e-05, 1.1541999999999802e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.639" endtime="20201112 09:43:47.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.634" endtime="20201112 09:43:47.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.644" endtime="20201112 09:43:47.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.647" endtime="20201112 09:43:47.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.645" endtime="20201112 09:43:47.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.642" endtime="20201112 09:43:47.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.278" endtime="20201112 09:43:47.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.278" endtime="20201112 09:43:47.668"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.676" endtime="20201112 09:43:47.691"></status>
</kw>
<msg timestamp="20201112 09:43:47.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.675" endtime="20201112 09:43:47.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.693" endtime="20201112 09:43:47.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.695" endtime="20201112 09:43:47.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.672" endtime="20201112 09:43:47.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.670" endtime="20201112 09:43:47.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.706" endtime="20201112 09:43:47.992"></status>
</kw>
<msg timestamp="20201112 09:43:47.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019583319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.704" endtime="20201112 09:43:47.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019583319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.996" endtime="20201112 09:43:48.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.005" endtime="20201112 09:43:48.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.702" endtime="20201112 09:43:48.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.700" endtime="20201112 09:43:48.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.012" level="INFO">${RESULT} = [{'time': 0.019583319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2443999999996874e-05, 'source_diff': 1.2443999999996874e-05}, {'time': 0.019605361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:48.008" endtime="20201112 09:43:48.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.025" level="INFO">${ACCURACY} = {'time': [0.019583319, 0.019605361, 0.019625278, 0.019642236, 0.019658347, 0.01967625, 0.019694236, 0.019716264, 0.019738153, 0.019754333, 0.019772264, 0.019791292, 0.019810167, 0.019827167, 0.0198424...</msg>
<status status="PASS" starttime="20201112 09:43:48.013" endtime="20201112 09:43:48.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.030" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.029" endtime="20201112 09:43:48.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.032" level="INFO">VALUE: [1.2443999999996874e-05, 1.3139000000002288e-05, 1.2749999999998873e-05, 1.3069000000000969e-05, 1.2457999999999914e-05, 1.2749999999998873e-05, 1.3055000000001399e-05, 1.3056000000000872e-05, 1.2736000000002773e-05, 1.2721999999999734e-05, 1.3070000000000442e-05, 1.2458999999999387e-05, 1.3070000000000442e-05, 1.2139000000001288e-05, 1.2444999999999817e-05, 1.2485999999999053e-05, 1.2153000000000858e-05, 1.304099999999836e-05, 1.2458999999999387e-05, 1.2708999999999637e-05, 1.3028000000001733e-05, 1.3347999999999832e-05, 1.2985999999999553e-05, 1.2138999999997818e-05, 1.3041000000001829e-05, 1.2749999999998873e-05, 1.2750000000002343e-05, 1.2722999999999207e-05, 1.3334000000000262e-05, 1.2749999999998873e-05, 1.3110999999999678e-05, 1.2444999999999817e-05, 1.2749999999998873e-05, 1.2444000000000344e-05, 1.2999999999999123e-05, 1.2735999999999303e-05, 1.2486999999998527e-05, 1.2749999999998873e-05, 1.305499999999793e-05, 1.2735999999999303e-05, 1.2763999999998443e-05, 1.2444000000000344e-05, 1.2749999999998873e-05, 1.3070000000000442e-05, 1.2750000000002343e-05, 1.2444000000000344e-05, 1.2472999999998957e-05, 1.2153000000000858e-05, 1.3055000000001399e-05, 1.3070000000000442e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.031" endtime="20201112 09:43:48.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.026" endtime="20201112 09:43:48.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.036" endtime="20201112 09:43:48.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.039" endtime="20201112 09:43:48.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.038" endtime="20201112 09:43:48.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.034" endtime="20201112 09:43:48.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.669" endtime="20201112 09:43:48.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.668" endtime="20201112 09:43:48.060"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.069" endtime="20201112 09:43:48.084"></status>
</kw>
<msg timestamp="20201112 09:43:48.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.067" endtime="20201112 09:43:48.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.085" endtime="20201112 09:43:48.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.088" endtime="20201112 09:43:48.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.065" endtime="20201112 09:43:48.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.063" endtime="20201112 09:43:48.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.098" endtime="20201112 09:43:48.386"></status>
</kw>
<msg timestamp="20201112 09:43:48.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.096" endtime="20201112 09:43:48.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.390" endtime="20201112 09:43:48.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.398" endtime="20201112 09:43:48.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.094" endtime="20201112 09:43:48.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.092" endtime="20201112 09:43:48.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.405" level="INFO">${RESULT} = [{'time': 0.019748153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019768972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:48.401" endtime="20201112 09:43:48.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.418" level="INFO">${ACCURACY} = {'time': [0.019748153, 0.019768972, 0.019790167, 0.019812111, 0.019834139, 0.019853083, 0.019876958, 0.019896931, 0.019914903, 0.019937056, 0.019957139, 0.019977056, 0.019995139, 0.020018194, 0.020040...</msg>
<status status="PASS" starttime="20201112 09:43:48.406" endtime="20201112 09:43:48.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.423" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.422" endtime="20201112 09:43:48.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.425" level="INFO">VALUE: [1.3360999999999928e-05, 1.3360999999999928e-05, 1.3653000000002358e-05, 1.3916999999998708e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.3944000000001844e-05, 1.3930999999998278e-05, 1.3347000000000359e-05, 1.3959000000000887e-05, 1.3985999999997084e-05, 1.3347999999999832e-05, 1.3638999999999318e-05, 1.3360999999999928e-05, 1.3360999999999928e-05, 1.3347000000000359e-05, 1.3347000000000359e-05, 1.3360999999999928e-05, 1.3638999999999318e-05, 1.3666000000002454e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3360999999999928e-05, 1.3625000000003218e-05, 1.3333000000000789e-05, 1.3652999999998888e-05, 1.3986000000000554e-05, 1.3943999999998374e-05, 1.3653000000002358e-05, 1.4222000000001234e-05, 1.3944000000001844e-05, 1.3568999999998e-05, 1.3611999999999652e-05, 1.3347000000000359e-05, 1.3652999999998888e-05, 1.4250000000000373e-05, 1.3375000000002968e-05, 1.3638999999999318e-05, 1.3652999999998888e-05, 1.3945000000001317e-05, 1.3944999999997848e-05, 1.3653000000002358e-05, 1.3930999999998278e-05, 1.3666999999998458e-05, 1.3929999999998804e-05, 1.3360999999999928e-05, 1.4263999999999943e-05, 1.3347999999999832e-05, 1.3360999999999928e-05, 1.3624999999999748e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.424" endtime="20201112 09:43:48.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.419" endtime="20201112 09:43:48.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.429" endtime="20201112 09:43:48.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.432" endtime="20201112 09:43:48.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.431" endtime="20201112 09:43:48.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.427" endtime="20201112 09:43:48.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.061" endtime="20201112 09:43:48.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.060" endtime="20201112 09:43:48.453"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.462" endtime="20201112 09:43:48.477"></status>
</kw>
<msg timestamp="20201112 09:43:48.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.460" endtime="20201112 09:43:48.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.479" endtime="20201112 09:43:48.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.481" endtime="20201112 09:43:48.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.458" endtime="20201112 09:43:48.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.456" endtime="20201112 09:43:48.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.491" endtime="20201112 09:43:48.777"></status>
</kw>
<msg timestamp="20201112 09:43:48.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019996319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.490" endtime="20201112 09:43:48.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019996319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.781" endtime="20201112 09:43:48.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.789" endtime="20201112 09:43:48.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.487" endtime="20201112 09:43:48.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.485" endtime="20201112 09:43:48.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.796" level="INFO">${RESULT} = [{'time': 0.019996319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.455499999999943e-05, 'source_diff': 1.455499999999943e-05}, {'time': 0.020014403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:48.793" endtime="20201112 09:43:48.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.809" level="INFO">${ACCURACY} = {'time': [0.019996319, 0.020014403, 0.020035306, 0.020053333, 0.020074597, 0.020098514, 0.020118458, 0.020136486, 0.020154514, 0.020174458, 0.020195458, 0.0202205, 0.020241514, 0.020259542, 0.02028155...</msg>
<status status="PASS" starttime="20201112 09:43:48.797" endtime="20201112 09:43:48.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.814" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.813" endtime="20201112 09:43:48.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.817" level="INFO">VALUE: [1.455499999999943e-05, 1.4764000000000443e-05, 1.4541999999999333e-05, 1.4457999999998444e-05, 1.4903000000000138e-05, 1.4527999999999763e-05, 1.484699999999839e-05, 1.483299999999882e-05, 1.4541999999999333e-05, 1.452700000000029e-05, 1.4221999999997764e-05, 1.5180999999999528e-05, 1.4457999999998444e-05, 1.4833999999998293e-05, 1.4541999999999333e-05, 1.4778000000000013e-05, 1.4833000000002289e-05, 1.4541999999999333e-05, 1.4235999999997334e-05, 1.5124999999997779e-05, 1.4527999999999763e-05, 1.4833000000002289e-05, 1.486099999999796e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.431899999999875e-05, 1.4250000000000373e-05, 1.4541999999999333e-05, 1.5111000000001679e-05, 1.5151999999997445e-05, 1.431899999999875e-05, 1.483299999999882e-05, 1.5139000000000818e-05, 1.4834000000001762e-05, 1.4555999999998903e-05, 1.4514000000000193e-05, 1.5125000000001249e-05, 1.4527999999999763e-05, 1.4541999999999333e-05, 1.5152000000000915e-05, 1.454099999999986e-05, 1.483299999999882e-05, 1.483299999999882e-05, 1.4527999999999763e-05, 1.5124999999997779e-05, 1.483299999999882e-05, 1.4527999999999763e-05, 1.5125000000001249e-05, 1.483299999999882e-05, 1.454099999999986e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.815" endtime="20201112 09:43:48.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.810" endtime="20201112 09:43:48.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.825" endtime="20201112 09:43:48.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.828" endtime="20201112 09:43:48.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.827" endtime="20201112 09:43:48.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.823" endtime="20201112 09:43:48.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.454" endtime="20201112 09:43:48.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.454" endtime="20201112 09:43:48.849"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.859" endtime="20201112 09:43:48.874"></status>
</kw>
<msg timestamp="20201112 09:43:48.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.857" endtime="20201112 09:43:48.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.876" endtime="20201112 09:43:48.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.878" endtime="20201112 09:43:48.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.854" endtime="20201112 09:43:48.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.852" endtime="20201112 09:43:48.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.889" endtime="20201112 09:43:49.174"></status>
</kw>
<msg timestamp="20201112 09:43:49.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.887" endtime="20201112 09:43:49.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.179" endtime="20201112 09:43:49.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.187" endtime="20201112 09:43:49.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.884" endtime="20201112 09:43:49.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.882" endtime="20201112 09:43:49.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.194" level="INFO">${RESULT} = [{'time': 0.020302222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6028000000001263e-05, 'source_diff': 1.6028000000001263e-05}, {'time': 0.020326153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:49.190" endtime="20201112 09:43:49.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.207" level="INFO">${ACCURACY} = {'time': [0.020302222, 0.020326153, 0.020347292, 0.020370139, 0.020390236, 0.020415083, 0.020438278, 0.020462264, 0.020481083, 0.02050125, 0.020525222, 0.020545125, 0.02056325, 0.020588139, 0.02060836...</msg>
<status status="PASS" starttime="20201112 09:43:49.195" endtime="20201112 09:43:49.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.212" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.211" endtime="20201112 09:43:49.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.214" level="INFO">VALUE: [1.6028000000001263e-05, 1.5735999999998834e-05, 1.5708999999999168e-05, 1.6027999999997794e-05, 1.5707999999999694e-05, 1.50689999999995e-05, 1.5736000000002304e-05, 1.6042000000000833e-05, 1.5152000000000915e-05, 1.5735999999998834e-05, 1.5721999999999264e-05, 1.5430999999999778e-05, 1.541700000000021e-05, 1.536099999999846e-05, 1.608300000000007e-05, 1.6027999999997794e-05, 1.6013999999998224e-05, 1.5124999999997779e-05, 1.5486000000002054e-05, 1.6014000000001694e-05, 1.602700000000179e-05, 1.5735999999998834e-05, 1.541700000000021e-05, 1.5513999999997724e-05, 1.5735999999998834e-05, 1.5721999999999264e-05, 1.5430000000000305e-05, 1.5681000000000028e-05, 1.6027999999997794e-05, 1.5764000000001444e-05, 1.5722000000002734e-05, 1.5708999999999168e-05, 1.5138999999997349e-05, 1.6028000000001263e-05, 1.602700000000179e-05, 1.5722000000002734e-05, 1.6013999999998224e-05, 1.6028000000001263e-05, 1.5749999999998404e-05, 1.5443999999999874e-05, 1.5750000000001874e-05, 1.5473000000001957e-05, 1.6014000000001694e-05, 1.5694999999999598e-05, 1.5444999999999348e-05, 1.5125000000001249e-05, 1.5736000000002304e-05, 1.5430999999999778e-05, 1.6320000000000223e-05, 1.6041999999997364e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.213" endtime="20201112 09:43:49.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.208" endtime="20201112 09:43:49.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.218" endtime="20201112 09:43:49.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.221" endtime="20201112 09:43:49.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.220" endtime="20201112 09:43:49.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.216" endtime="20201112 09:43:49.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.850" endtime="20201112 09:43:49.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.850" endtime="20201112 09:43:49.242"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.251" endtime="20201112 09:43:49.267"></status>
</kw>
<msg timestamp="20201112 09:43:49.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.249" endtime="20201112 09:43:49.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.268" endtime="20201112 09:43:49.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.271" endtime="20201112 09:43:49.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.247" endtime="20201112 09:43:49.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.245" endtime="20201112 09:43:49.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.282" endtime="20201112 09:43:49.582"></status>
</kw>
<msg timestamp="20201112 09:43:49.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019677806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019695014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.280" endtime="20201112 09:43:49.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019677806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019695014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.591" endtime="20201112 09:43:49.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.610" endtime="20201112 09:43:49.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.278" endtime="20201112 09:43:49.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.276" endtime="20201112 09:43:49.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.621" level="INFO">${RESULT} = [{'time': 0.019695014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7208000000001195e-05, 'source_diff': 1.7208000000001195e-05}, {'time': 0.019716097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:49.617" endtime="20201112 09:43:49.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.634" level="INFO">${ACCURACY} = {'time': [0.019695014, 0.019716097, 0.019740083, 0.019762111, 0.019782042, 0.019801986, 0.019824, 0.019846972, 0.019874083, 0.019894903, 0.019920903, 0.019945097, 0.019968875, 0.019992, 0.020015917, 0...</msg>
<status status="PASS" starttime="20201112 09:43:49.622" endtime="20201112 09:43:49.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.639" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.638" endtime="20201112 09:43:49.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.641" level="INFO">VALUE: [1.7208000000001195e-05, 1.662499999999928e-05, 1.6915999999998765e-05, 1.662499999999928e-05, 1.668100000000103e-05, 1.633300000000032e-05, 1.691700000000171e-05, 1.661099999999971e-05, 1.7249999999999904e-05, 1.690299999999867e-05, 1.6320000000000223e-05, 1.7207999999997725e-05, 1.693100000000128e-05, 1.662499999999928e-05, 1.691700000000171e-05, 1.6361999999998933e-05, 1.659700000000014e-05, 1.7278000000002514e-05, 1.7209000000000668e-05, 1.6944000000001375e-05, 1.661099999999971e-05, 1.631900000000075e-05, 1.693099999999781e-05, 1.7249999999999904e-05, 1.661099999999971e-05, 1.7208000000001195e-05, 1.659700000000014e-05, 1.691700000000171e-05, 1.690299999999867e-05, 1.7209000000000668e-05, 1.690299999999867e-05, 1.662499999999928e-05, 1.690300000000214e-05, 1.629100000000161e-05, 1.687499999999953e-05, 1.6333999999999793e-05, 1.7209000000000668e-05, 1.693099999999781e-05, 1.6611999999999183e-05, 1.6333999999999793e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.6333999999999793e-05, 1.6986000000000084e-05, 1.691700000000171e-05, 1.6999999999999654e-05, 1.6915999999998765e-05, 1.7249999999999904e-05, 1.662499999999928e-05, 1.691699999999824e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.640" endtime="20201112 09:43:49.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.635" endtime="20201112 09:43:49.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.645" endtime="20201112 09:43:49.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.648" endtime="20201112 09:43:49.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.647" endtime="20201112 09:43:49.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.643" endtime="20201112 09:43:49.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.243" endtime="20201112 09:43:49.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.243" endtime="20201112 09:43:49.669"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.678" endtime="20201112 09:43:49.693"></status>
</kw>
<msg timestamp="20201112 09:43:49.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.676" endtime="20201112 09:43:49.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.695" endtime="20201112 09:43:49.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.697" endtime="20201112 09:43:49.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.674" endtime="20201112 09:43:49.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.672" endtime="20201112 09:43:49.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.707" endtime="20201112 09:43:49.993"></status>
</kw>
<msg timestamp="20201112 09:43:49.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.706" endtime="20201112 09:43:49.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.998" endtime="20201112 09:43:50.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.006" endtime="20201112 09:43:50.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.703" endtime="20201112 09:43:50.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.701" endtime="20201112 09:43:50.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.013" level="INFO">${RESULT} = [{'time': 0.019760264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.811100000000121e-05, 'source_diff': 1.811100000000121e-05}, {'time': 0.019781333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.009" endtime="20201112 09:43:50.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.026" level="INFO">${ACCURACY} = {'time': [0.019760264, 0.019781333, 0.019805222, 0.019831097, 0.019857167, 0.019880306, 0.019905319, 0.019929181, 0.019954222, 0.019981056, 0.02000325, 0.020027292, 0.020048236, 0.020070125, 0.0200942...</msg>
<status status="PASS" starttime="20201112 09:43:50.014" endtime="20201112 09:43:50.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.031" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.030" endtime="20201112 09:43:50.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.033" level="INFO">VALUE: [1.811100000000121e-05, 1.812500000000078e-05, 1.754099999999939e-05, 1.715299999999892e-05, 1.7833999999997824e-05, 1.7513999999999724e-05, 1.752699999999982e-05, 1.7473000000000488e-05, 1.779099999999964e-05, 1.7195000000001098e-05, 1.7722000000001265e-05, 1.7513999999999724e-05, 1.7513999999999724e-05, 1.7500000000000154e-05, 1.811100000000121e-05, 1.7513999999999724e-05, 1.7527999999999294e-05, 1.7514000000003194e-05, 1.809700000000164e-05, 1.7791999999999114e-05, 1.7833999999997824e-05, 1.80829999999986e-05, 1.754099999999939e-05, 1.809699999999817e-05, 1.7541999999998864e-05, 1.7514000000003194e-05, 1.7513999999999724e-05, 1.7819999999998254e-05, 1.7805999999998684e-05, 1.7249999999999904e-05, 1.7527999999999294e-05, 1.783300000000182e-05, 1.7500000000000154e-05, 1.7555999999998434e-05, 1.7805999999998684e-05, 1.7194000000001625e-05, 1.7736000000000834e-05, 1.7500000000000154e-05, 1.7222000000000764e-05, 1.7473000000000488e-05, 1.7820000000001723e-05, 1.7819999999998254e-05, 1.7527999999999294e-05, 1.813900000000035e-05, 1.754100000000286e-05, 1.7513999999999724e-05, 1.809699999999817e-05, 1.7222000000000764e-05, 1.812500000000078e-05, 1.7500000000000154e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.032" endtime="20201112 09:43:50.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.027" endtime="20201112 09:43:50.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.037" endtime="20201112 09:43:50.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.040" endtime="20201112 09:43:50.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.039" endtime="20201112 09:43:50.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.035" endtime="20201112 09:43:50.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.670" endtime="20201112 09:43:50.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.670" endtime="20201112 09:43:50.061"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.070" endtime="20201112 09:43:50.086"></status>
</kw>
<msg timestamp="20201112 09:43:50.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.069" endtime="20201112 09:43:50.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.088" endtime="20201112 09:43:50.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.090" endtime="20201112 09:43:50.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.066" endtime="20201112 09:43:50.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.064" endtime="20201112 09:43:50.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.100" endtime="20201112 09:43:50.387"></status>
</kw>
<msg timestamp="20201112 09:43:50.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019770389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.099" endtime="20201112 09:43:50.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019770389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.391" endtime="20201112 09:43:50.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.400" endtime="20201112 09:43:50.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.096" endtime="20201112 09:43:50.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.094" endtime="20201112 09:43:50.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.407" level="INFO">${RESULT} = [{'time': 0.019770389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8707999999999225e-05, 'source_diff': 1.8707999999999225e-05}, {'time': 0.019795222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:50.403" endtime="20201112 09:43:50.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.421" level="INFO">${ACCURACY} = {'time': [0.019770389, 0.019795222, 0.019823306, 0.019848181, 0.019872111, 0.019899306, 0.019922333, 0.019948292, 0.019972403, 0.019994306, 0.020018264, 0.020045431, 0.020071361, 0.020095347, 0.020119...</msg>
<status status="PASS" starttime="20201112 09:43:50.408" endtime="20201112 09:43:50.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.426" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.424" endtime="20201112 09:43:50.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.428" level="INFO">VALUE: [1.8707999999999225e-05, 1.9028000000000794e-05, 1.841699999999974e-05, 1.8764000000000974e-05, 1.811100000000121e-05, 1.9013999999997755e-05, 1.929100000000114e-05, 1.836099999999799e-05, 1.894499999999938e-05, 1.87089999999987e-05, 1.83890000000006e-05, 1.843099999999931e-05, 1.8707999999999225e-05, 1.8416000000000265e-05, 1.8707999999999225e-05, 1.840300000000017e-05, 1.8723000000001738e-05, 1.9292000000000614e-05, 1.9306000000000184e-05, 1.840300000000017e-05, 1.840300000000017e-05, 1.9013999999997755e-05, 1.8707999999999225e-05, 1.90829999999996e-05, 1.872299999999827e-05, 1.8652000000000946e-05, 1.9013999999997755e-05, 1.869499999999913e-05, 1.8680000000000085e-05, 1.9028000000000794e-05, 1.9000000000001654e-05, 1.9000000000001654e-05, 1.9292000000000614e-05, 1.9306000000000184e-05, 1.8986000000002085e-05, 1.87089999999987e-05, 1.9000000000001654e-05, 1.838899999999713e-05, 1.84029999999967e-05, 1.840300000000017e-05, 1.83890000000006e-05, 1.929100000000114e-05, 1.87089999999987e-05, 1.8957999999999475e-05, 1.8680000000000085e-05, 1.9319999999999754e-05, 1.840300000000017e-05, 1.840300000000017e-05, 1.9292000000000614e-05, 1.933299999999985e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.427" endtime="20201112 09:43:50.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.422" endtime="20201112 09:43:50.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.432" endtime="20201112 09:43:50.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.435" endtime="20201112 09:43:50.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.434" endtime="20201112 09:43:50.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.430" endtime="20201112 09:43:50.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.062" endtime="20201112 09:43:50.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.062" endtime="20201112 09:43:50.456"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.465" endtime="20201112 09:43:50.480"></status>
</kw>
<msg timestamp="20201112 09:43:50.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.463" endtime="20201112 09:43:50.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.482" endtime="20201112 09:43:50.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.484" endtime="20201112 09:43:50.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.461" endtime="20201112 09:43:50.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.459" endtime="20201112 09:43:50.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.494" endtime="20201112 09:43:50.780"></status>
</kw>
<msg timestamp="20201112 09:43:50.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.493" endtime="20201112 09:43:50.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.784" endtime="20201112 09:43:50.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.793" endtime="20201112 09:43:50.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.490" endtime="20201112 09:43:50.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.488" endtime="20201112 09:43:50.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.800" level="INFO">${RESULT} = [{'time': 0.019745083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.959699999999967e-05, 'source_diff': 1.959699999999967e-05}, {'time': 0.019770167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.796" endtime="20201112 09:43:50.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.813" level="INFO">${ACCURACY} = {'time': [0.019745083, 0.019770167, 0.019796, 0.019824014, 0.019849125, 0.019878097, 0.019904111, 0.019930028, 0.019953042, 0.019978167, 0.020005, 0.020029069, 0.020055056, 0.020080986, 0.020105111, 0...</msg>
<status status="PASS" starttime="20201112 09:43:50.801" endtime="20201112 09:43:50.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.818" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.817" endtime="20201112 09:43:50.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.820" level="INFO">VALUE: [1.959699999999967e-05, 1.991700000000124e-05, 1.933299999999985e-05, 1.9306000000000184e-05, 1.9306000000000184e-05, 1.959699999999967e-05, 1.987499999999906e-05, 1.961099999999924e-05, 1.9306000000000184e-05, 1.9306000000000184e-05, 1.959699999999967e-05, 1.9930000000001336e-05, 1.990300000000167e-05, 1.95830000000001e-05, 1.99029999999982e-05, 1.990300000000167e-05, 2.016699999999802e-05, 1.988899999999863e-05, 1.930500000000071e-05, 1.981900000000078e-05, 1.9277999999997575e-05, 1.988899999999863e-05, 1.987499999999906e-05, 2.019500000000063e-05, 1.961100000000271e-05, 1.99029999999982e-05, 1.9930000000001336e-05, 2.02090000000002e-05, 1.959699999999967e-05, 1.9292000000000614e-05, 1.929100000000114e-05, 2.0194000000001155e-05, 1.95830000000001e-05, 1.92769999999981e-05, 2.0249999999999435e-05, 1.98890000000021e-05, 2.0194000000001155e-05, 1.931900000000028e-05, 2.0194000000001155e-05, 1.961099999999924e-05, 1.9305999999996715e-05, 1.959699999999967e-05, 1.9291999999997145e-05, 2.0208000000000725e-05, 1.9278000000001044e-05, 1.959699999999967e-05, 2.0194000000001155e-05, 1.9235999999998865e-05, 1.9583999999999574e-05, 1.959700000000314e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.819" endtime="20201112 09:43:50.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.814" endtime="20201112 09:43:50.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.824" endtime="20201112 09:43:50.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.827" endtime="20201112 09:43:50.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.826" endtime="20201112 09:43:50.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.822" endtime="20201112 09:43:50.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.457" endtime="20201112 09:43:50.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.457" endtime="20201112 09:43:50.848"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.857" endtime="20201112 09:43:50.873"></status>
</kw>
<msg timestamp="20201112 09:43:50.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.855" endtime="20201112 09:43:50.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.874" endtime="20201112 09:43:50.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.877" endtime="20201112 09:43:50.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.853" endtime="20201112 09:43:50.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.851" endtime="20201112 09:43:50.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.888" endtime="20201112 09:43:51.174"></status>
</kw>
<msg timestamp="20201112 09:43:51.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.886" endtime="20201112 09:43:51.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.178" endtime="20201112 09:43:51.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.186" endtime="20201112 09:43:51.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.884" endtime="20201112 09:43:51.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.882" endtime="20201112 09:43:51.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.193" level="INFO">${RESULT} = [{'time': 0.019881042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1084000000001074e-05, 'source_diff': 2.1084000000001074e-05}, {'time': 0.019910917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:51.190" endtime="20201112 09:43:51.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.206" level="INFO">${ACCURACY} = {'time': [0.019881042, 0.019910917, 0.019938861, 0.019969833, 0.019996861, 0.020024069, 0.020054931, 0.020082014, 0.020107014, 0.020129931, 0.020157056, 0.020184139, 0.020208972, 0.020237056, 0.020265...</msg>
<status status="PASS" starttime="20201112 09:43:51.194" endtime="20201112 09:43:51.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.211" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.210" endtime="20201112 09:43:51.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.213" level="INFO">VALUE: [2.1084000000001074e-05, 2.019500000000063e-05, 2.0235999999999865e-05, 2.106899999999856e-05, 2.0499999999999685e-05, 2.1165999999999546e-05, 2.1084000000001074e-05, 2.0486000000000115e-05, 2.0749999999999935e-05, 2.012499999999931e-05, 2.1069999999998035e-05, 2.0791999999998645e-05, 2.10969999999977e-05, 2.0749999999999935e-05, 2.019500000000063e-05, 2.0792000000002114e-05, 2.0819999999997785e-05, 2.0499999999999685e-05, 2.10830000000016e-05, 2.10830000000016e-05, 2.10830000000016e-05, 2.1056000000001934e-05, 2.018100000000106e-05, 2.02090000000002e-05, 2.0249999999999435e-05, 2.0179999999998116e-05, 2.0778000000002544e-05, 2.0194000000001155e-05, 2.106899999999856e-05, 2.0693999999998186e-05, 2.0777999999999075e-05, 2.043099999999784e-05, 2.0486000000000115e-05, 2.0777999999999075e-05, 2.0472000000000545e-05, 2.07769999999996e-05, 2.109700000000117e-05, 2.1069999999998035e-05, 2.0180000000001586e-05, 2.0792000000002114e-05, 2.0791999999998645e-05, 2.0499999999999685e-05, 2.108299999999813e-05, 2.019500000000063e-05, 2.043100000000131e-05, 2.0486000000000115e-05, 2.0777999999999075e-05, 2.0194000000001155e-05, 2.1084000000001074e-05, 2.0486000000000115e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.212" endtime="20201112 09:43:51.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.207" endtime="20201112 09:43:51.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.217" endtime="20201112 09:43:51.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.221" endtime="20201112 09:43:51.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.219" endtime="20201112 09:43:51.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.215" endtime="20201112 09:43:51.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.849" endtime="20201112 09:43:51.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.849" endtime="20201112 09:43:51.241"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.250" endtime="20201112 09:43:51.265"></status>
</kw>
<msg timestamp="20201112 09:43:51.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.249" endtime="20201112 09:43:51.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.266" endtime="20201112 09:43:51.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.269" endtime="20201112 09:43:51.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.246" endtime="20201112 09:43:51.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.244" endtime="20201112 09:43:51.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.279" endtime="20201112 09:43:51.565"></status>
</kw>
<msg timestamp="20201112 09:43:51.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.278" endtime="20201112 09:43:51.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.569" endtime="20201112 09:43:51.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.577" endtime="20201112 09:43:51.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.275" endtime="20201112 09:43:51.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.273" endtime="20201112 09:43:51.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.584" level="INFO">${RESULT} = [{'time': 0.019769611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.137500000000056e-05, 'source_diff': 2.137500000000056e-05}, {'time': 0.019798819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.581" endtime="20201112 09:43:51.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.597" level="INFO">${ACCURACY} = {'time': [0.019769611, 0.019798819, 0.019829667, 0.01985875, 0.019886847, 0.019912639, 0.019943667, 0.01997475, 0.020000778, 0.020024875, 0.020050819, 0.020081875, 0.020107889, 0.020137764, 0.02016479...</msg>
<status status="PASS" starttime="20201112 09:43:51.585" endtime="20201112 09:43:51.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.602" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.601" endtime="20201112 09:43:51.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.604" level="INFO">VALUE: [2.137500000000056e-05, 2.1957999999999006e-05, 2.169499999999866e-05, 2.136100000000099e-05, 2.1971999999998576e-05, 2.14029999999997e-05, 2.166700000000299e-05, 2.138900000000013e-05, 2.2055999999999465e-05, 2.1458000000001975e-05, 2.22770000000011e-05, 2.166699999999952e-05, 2.138900000000013e-05, 2.136099999999752e-05, 2.137500000000056e-05, 2.1679999999999616e-05, 2.137500000000056e-05, 2.137500000000056e-05, 2.1693999999999186e-05, 2.1986000000001615e-05, 2.2028000000000325e-05, 2.1083999999997605e-05, 2.169500000000213e-05, 2.1694000000002656e-05, 2.138900000000013e-05, 2.1971999999998576e-05, 2.2013999999997286e-05, 2.1972000000002045e-05, 2.1985999999998146e-05, 2.2222000000002295e-05, 2.1652000000000476e-05, 2.1986000000001615e-05, 2.1735999999997896e-05, 2.163899999999691e-05, 2.1971999999998576e-05, 2.197300000000152e-05, 2.138900000000013e-05, 2.2235999999998396e-05, 2.1986000000001615e-05, 2.1693999999999186e-05, 2.1666000000000046e-05, 2.138900000000013e-05, 2.1958000000002476e-05, 2.2276999999997632e-05, 2.1707999999998756e-05, 2.138900000000013e-05, 2.162500000000081e-05, 2.1666000000000046e-05, 2.1679999999999616e-05, 2.1444000000002406e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.603" endtime="20201112 09:43:51.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.598" endtime="20201112 09:43:51.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.608" endtime="20201112 09:43:51.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.612" endtime="20201112 09:43:51.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.610" endtime="20201112 09:43:51.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.606" endtime="20201112 09:43:51.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.242" endtime="20201112 09:43:51.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.242" endtime="20201112 09:43:51.632"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.641" endtime="20201112 09:43:51.655"></status>
</kw>
<msg timestamp="20201112 09:43:51.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.640" endtime="20201112 09:43:51.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.657" endtime="20201112 09:43:51.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.659" endtime="20201112 09:43:51.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.637" endtime="20201112 09:43:51.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.635" endtime="20201112 09:43:51.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.669" endtime="20201112 09:43:51.955"></status>
</kw>
<msg timestamp="20201112 09:43:51.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019688917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.668" endtime="20201112 09:43:51.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019688917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.960" endtime="20201112 09:43:51.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.968" endtime="20201112 09:43:51.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.665" endtime="20201112 09:43:51.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.664" endtime="20201112 09:43:51.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.975" level="INFO">${RESULT} = [{'time': 0.019711181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2264000000001005e-05, 'source_diff': 2.2264000000001005e-05}, {'time': 0.019737306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:51.971" endtime="20201112 09:43:51.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.988" level="INFO">${ACCURACY} = {'time': [0.019711181, 0.019737306, 0.019763083, 0.019791069, 0.019817083, 0.019846167, 0.019872306, 0.019904097, 0.019934069, 0.019966333, 0.019996222, 0.02002425, 0.020055194, 0.020082083, 0.0201092...</msg>
<status status="PASS" starttime="20201112 09:43:51.976" endtime="20201112 09:43:51.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.993" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.992" endtime="20201112 09:43:51.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.995" level="INFO">VALUE: [2.2264000000001005e-05, 2.316700000000102e-05, 2.2264000000001005e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.2570000000003004e-05, 2.318100000000059e-05, 2.25969999999992e-05, 2.2276999999997632e-05, 2.256900000000006e-05, 2.287500000000206e-05, 2.287500000000206e-05, 2.2276999999997632e-05, 2.22770000000011e-05, 2.2583999999999105e-05, 2.2292000000000145e-05, 2.2236000000001865e-05, 2.2570000000003004e-05, 2.287500000000206e-05, 2.2277999999997106e-05, 2.288899999999816e-05, 2.2277999999997106e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.256900000000006e-05, 2.2290999999997202e-05, 2.256900000000006e-05, 2.284700000000292e-05, 2.287499999999859e-05, 2.258299999999963e-05, 2.2305999999999715e-05, 2.319500000000016e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.2555999999999965e-05, 2.2569999999999535e-05, 2.288900000000163e-05, 2.25969999999992e-05, 2.2569999999999535e-05, 2.319500000000016e-05, 2.22770000000011e-05, 2.315300000000145e-05, 2.2290999999997202e-05, 2.3151999999998507e-05, 2.286099999999902e-05, 2.256900000000006e-05, 2.258299999999963e-05, 2.318100000000059e-05, 2.284699999999945e-05, 2.287499999999859e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.994" endtime="20201112 09:43:51.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.989" endtime="20201112 09:43:51.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.999" endtime="20201112 09:43:52.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.002" endtime="20201112 09:43:52.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.001" endtime="20201112 09:43:52.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.997" endtime="20201112 09:43:52.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.633" endtime="20201112 09:43:52.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.633" endtime="20201112 09:43:52.023"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.032" endtime="20201112 09:43:52.048"></status>
</kw>
<msg timestamp="20201112 09:43:52.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.031" endtime="20201112 09:43:52.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.050" endtime="20201112 09:43:52.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.052" endtime="20201112 09:43:52.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.028" endtime="20201112 09:43:52.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.026" endtime="20201112 09:43:52.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.062" endtime="20201112 09:43:52.349"></status>
</kw>
<msg timestamp="20201112 09:43:52.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020457125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.061" endtime="20201112 09:43:52.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020457125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.353" endtime="20201112 09:43:52.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.361" endtime="20201112 09:43:52.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.058" endtime="20201112 09:43:52.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.056" endtime="20201112 09:43:52.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.368" level="INFO">${RESULT} = [{'time': 0.020457125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3763999999999036e-05, 'source_diff': 2.3763999999999036e-05}, {'time': 0.020489403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:52.365" endtime="20201112 09:43:52.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.382" level="INFO">${ACCURACY} = {'time': [0.020457125, 0.020489403, 0.020516333, 0.020542347, 0.020574167, 0.020605153, 0.020637417, 0.020669139, 0.020695306, 0.020721319, 0.020755264, 0.020784222, 0.020815361, 0.020846194, 0.020875...</msg>
<status status="PASS" starttime="20201112 09:43:52.369" endtime="20201112 09:43:52.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.386" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.385" endtime="20201112 09:43:52.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.389" level="INFO">VALUE: [2.3763999999999036e-05, 2.4027999999998856e-05, 2.3764000000002505e-05, 2.3458000000000506e-05, 2.3792000000001645e-05, 2.345899999999998e-05, 2.4056000000001465e-05, 2.3763999999999036e-05, 2.345899999999998e-05, 2.3457999999997037e-05, 2.4082999999997662e-05, 2.3166000000001546e-05, 2.406900000000156e-05, 2.3749999999999466e-05, 2.4068999999998092e-05, 2.316700000000102e-05, 2.406900000000156e-05, 2.3749999999999466e-05, 2.3777999999998606e-05, 2.4070000000001035e-05, 2.3776999999999132e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.345899999999998e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.413899999999941e-05, 2.3778000000002075e-05, 2.347300000000302e-05, 2.3764000000002505e-05, 2.40970000000007e-05, 2.3485999999999646e-05, 2.3777999999998606e-05, 2.341700000000127e-05, 2.3776999999999132e-05, 2.406900000000156e-05, 2.3763999999999036e-05, 2.4055999999997996e-05, 2.345899999999998e-05, 2.4069999999997566e-05, 2.4056000000001465e-05, 2.348699999999912e-05, 2.344500000000041e-05, 2.3485999999999646e-05, 2.4070000000001035e-05, 2.3750000000002935e-05, 2.3430000000001366e-05, 2.341700000000127e-05, 2.3792000000001645e-05, 2.3763999999999036e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.387" endtime="20201112 09:43:52.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.382" endtime="20201112 09:43:52.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.392" endtime="20201112 09:43:52.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.396" endtime="20201112 09:43:52.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.394" endtime="20201112 09:43:52.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.391" endtime="20201112 09:43:52.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.024" endtime="20201112 09:43:52.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.024" endtime="20201112 09:43:52.417"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.426" endtime="20201112 09:43:52.442"></status>
</kw>
<msg timestamp="20201112 09:43:52.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.424" endtime="20201112 09:43:52.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.443" endtime="20201112 09:43:52.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.446" endtime="20201112 09:43:52.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.422" endtime="20201112 09:43:52.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.419" endtime="20201112 09:43:52.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.457" endtime="20201112 09:43:52.743"></status>
</kw>
<msg timestamp="20201112 09:43:52.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.455" endtime="20201112 09:43:52.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.747" endtime="20201112 09:43:52.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.755" endtime="20201112 09:43:52.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.452" endtime="20201112 09:43:52.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.451" endtime="20201112 09:43:52.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.762" level="INFO">${RESULT} = [{'time': 0.020506306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.463899999999991e-05, 'source_diff': 2.463899999999991e-05}, {'time': 0.020540375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.759" endtime="20201112 09:43:52.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.776" level="INFO">${ACCURACY} = {'time': [0.020506306, 0.020540375, 0.020574347, 0.020604389, 0.020632333, 0.020660347, 0.020693264, 0.020727486, 0.020760403, 0.020788431, 0.020819458, 0.020848472, 0.020878514, 0.020910458, 0.020941...</msg>
<status status="PASS" starttime="20201112 09:43:52.763" endtime="20201112 09:43:52.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.780" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.779" endtime="20201112 09:43:52.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.783" level="INFO">VALUE: [2.463899999999991e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.4943999999998967e-05, 2.436100000000052e-05, 2.4957999999998537e-05, 2.5236000000001396e-05, 2.495900000000148e-05, 2.5250000000000966e-05, 2.4665999999999577e-05, 2.5278000000000106e-05, 2.4958000000002006e-05, 2.4652000000000007e-05, 2.4943999999998967e-05, 2.433300000000138e-05, 2.466699999999905e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.44169999999988e-05, 2.4361999999999995e-05, 2.4346999999997482e-05, 2.4679999999999147e-05, 2.495900000000148e-05, 2.436100000000052e-05, 2.5250000000000966e-05, 2.52369999999974e-05, 2.4361999999999995e-05, 2.4972000000001576e-05, 2.4348000000000425e-05, 2.4972000000001576e-05, 2.4665999999999577e-05, 2.440299999999923e-05, 2.443100000000184e-05, 2.4943999999998967e-05, 2.466699999999905e-05, 2.4929999999999397e-05, 2.463899999999991e-05, 2.469500000000166e-05, 2.4361999999999995e-05, 2.45970000000012e-05, 2.465299999999948e-05, 2.436099999999705e-05, 2.4957999999998537e-05, 2.4348000000000425e-05, 2.5262999999997593e-05, 2.437500000000009e-05, 2.4665999999999577e-05, 2.4348000000000425e-05, 2.5278000000000106e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.781" endtime="20201112 09:43:52.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.777" endtime="20201112 09:43:52.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.786" endtime="20201112 09:43:52.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.790" endtime="20201112 09:43:52.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.788" endtime="20201112 09:43:52.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.785" endtime="20201112 09:43:52.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.418" endtime="20201112 09:43:52.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.417" endtime="20201112 09:43:52.811"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.819" endtime="20201112 09:43:52.835"></status>
</kw>
<msg timestamp="20201112 09:43:52.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.818" endtime="20201112 09:43:52.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.836" endtime="20201112 09:43:52.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.839" endtime="20201112 09:43:52.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.815" endtime="20201112 09:43:52.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.813" endtime="20201112 09:43:52.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.849" endtime="20201112 09:43:53.135"></status>
</kw>
<msg timestamp="20201112 09:43:53.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.847" endtime="20201112 09:43:53.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.140" endtime="20201112 09:43:53.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.148" endtime="20201112 09:43:53.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.845" endtime="20201112 09:43:53.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.843" endtime="20201112 09:43:53.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.155" level="INFO">${RESULT} = [{'time': 0.019732653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5819999999999316e-05, 'source_diff': 2.5819999999999316e-05}, {'time': 0.019760764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:53.152" endtime="20201112 09:43:53.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.168" level="INFO">${ACCURACY} = {'time': [0.019732653, 0.019760764, 0.019788569, 0.019821722, 0.019853694, 0.019886708, 0.019915681, 0.019949667, 0.019981569, 0.020015806, 0.020049833, 0.020081792, 0.020114722, 0.020143778, 0.020178...</msg>
<status status="PASS" starttime="20201112 09:43:53.156" endtime="20201112 09:43:53.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.173" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.172" endtime="20201112 09:43:53.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.175" level="INFO">VALUE: [2.5819999999999316e-05, 2.5541999999999926e-05, 2.5262999999997593e-05, 2.5846999999998982e-05, 2.6166000000001077e-05, 2.5555000000000022e-05, 2.5555999999999496e-05, 2.5250000000000966e-05, 2.584700000000245e-05, 2.5555999999999496e-05, 2.5846999999998982e-05, 2.5848000000001925e-05, 2.586100000000202e-05, 2.587500000000159e-05, 2.5193999999999217e-05, 2.6138000000001937e-05, 2.5264000000000536e-05, 2.5528000000000356e-05, 2.5818999999999842e-05, 2.584700000000245e-05, 2.5555000000000022e-05, 2.562500000000134e-05, 2.55970000000022e-05, 2.5236000000001396e-05, 2.584700000000245e-05, 2.5902000000001257e-05, 2.5555000000000022e-05, 2.5555000000000022e-05, 2.5862000000001495e-05, 2.5568999999999592e-05, 2.615300000000098e-05, 2.5250000000000966e-05, 2.5848000000001925e-05, 2.6152000000001507e-05, 2.5805000000000272e-05, 2.5250000000000966e-05, 2.6165999999997608e-05, 2.5556000000002965e-05, 2.5555999999999496e-05, 2.5556000000002965e-05, 2.6194000000000217e-05, 2.5263000000001062e-05, 2.5264000000000536e-05, 2.616700000000055e-05, 2.6194000000000217e-05, 2.5528000000000356e-05, 2.5541000000000452e-05, 2.584700000000245e-05, 2.6194000000000217e-05, 2.615299999999751e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.174" endtime="20201112 09:43:53.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.169" endtime="20201112 09:43:53.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.179" endtime="20201112 09:43:53.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.182" endtime="20201112 09:43:53.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.181" endtime="20201112 09:43:53.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.177" endtime="20201112 09:43:53.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.812" endtime="20201112 09:43:53.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.811" endtime="20201112 09:43:53.203"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.212" endtime="20201112 09:43:53.229"></status>
</kw>
<msg timestamp="20201112 09:43:53.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.211" endtime="20201112 09:43:53.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.230" endtime="20201112 09:43:53.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.232" endtime="20201112 09:43:53.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.208" endtime="20201112 09:43:53.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.206" endtime="20201112 09:43:53.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.243" endtime="20201112 09:43:53.527"></status>
</kw>
<msg timestamp="20201112 09:43:53.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020761153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020787931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.241" endtime="20201112 09:43:53.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020761153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020787931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.532" endtime="20201112 09:43:53.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.540" endtime="20201112 09:43:53.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.238" endtime="20201112 09:43:53.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.237" endtime="20201112 09:43:53.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.547" level="INFO">${RESULT} = [{'time': 0.020787931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6777999999998137e-05, 'source_diff': 2.6777999999998137e-05}, {'time': 0.020819736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:53.543" endtime="20201112 09:43:53.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.560" level="INFO">${ACCURACY} = {'time': [0.020787931, 0.020819736, 0.020855792, 0.020890736, 0.020926792, 0.020962944, 0.020994903, 0.021023889, 0.021058806, 0.021093958, 0.021127875, 0.021164847, 0.021198764, 0.021230792, 0.021261...</msg>
<status status="PASS" starttime="20201112 09:43:53.548" endtime="20201112 09:43:53.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.565" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.564" endtime="20201112 09:43:53.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.567" level="INFO">VALUE: [2.6777999999998137e-05, 2.6735999999999427e-05, 2.643100000000037e-05, 2.6749999999998997e-05, 2.620899999999926e-05, 2.6749999999998997e-05, 2.7041999999997957e-05, 2.644499999999994e-05, 2.616700000000055e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.7041000000001952e-05, 2.644499999999994e-05, 2.6110999999998802e-05, 2.7028000000001856e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.7041999999997957e-05, 2.7040999999998483e-05, 2.6736000000002896e-05, 2.7333000000000912e-05, 2.6735999999999427e-05, 2.6735999999999427e-05, 2.6444000000000467e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.644499999999994e-05, 2.613899999999794e-05, 2.7013999999998817e-05, 2.7056000000000996e-05, 2.7026999999998913e-05, 2.7028000000001856e-05, 2.615300000000098e-05, 2.7014000000002286e-05, 2.7027999999998387e-05, 2.6985999999999677e-05, 2.6764000000002036e-05, 2.6972000000000107e-05, 2.647300000000255e-05, 2.613900000000141e-05, 2.6458000000000037e-05, 2.6430000000000897e-05, 2.7042000000001426e-05, 2.6443999999996998e-05, 2.64309999999969e-05, 2.6736000000002896e-05, 2.6721999999999857e-05, 2.6415999999997858e-05, 2.6735999999999427e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.566" endtime="20201112 09:43:53.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.561" endtime="20201112 09:43:53.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.571" endtime="20201112 09:43:53.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.574" endtime="20201112 09:43:53.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.573" endtime="20201112 09:43:53.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.569" endtime="20201112 09:43:53.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.204" endtime="20201112 09:43:53.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.204" endtime="20201112 09:43:53.595"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.604" endtime="20201112 09:43:53.619"></status>
</kw>
<msg timestamp="20201112 09:43:53.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.603" endtime="20201112 09:43:53.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.621" endtime="20201112 09:43:53.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.623" endtime="20201112 09:43:53.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.600" endtime="20201112 09:43:53.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.598" endtime="20201112 09:43:53.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.633" endtime="20201112 09:43:53.918"></status>
</kw>
<msg timestamp="20201112 09:43:53.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.632" endtime="20201112 09:43:53.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.923" endtime="20201112 09:43:53.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.931" endtime="20201112 09:43:53.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.629" endtime="20201112 09:43:53.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.627" endtime="20201112 09:43:53.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.938" level="INFO">${RESULT} = [{'time': 0.019775181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7624999999999872e-05, 'source_diff': 2.7624999999999872e-05}, {'time': 0.019811319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:53.934" endtime="20201112 09:43:53.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.951" level="INFO">${ACCURACY} = {'time': [0.019775181, 0.019811319, 0.01984825, 0.019882236, 0.019914042, 0.019948028, 0.019983236, 0.02002025, 0.020054111, 0.020090306, 0.020125306, 0.020161264, 0.020198153, 0.020231125, 0.02026131...</msg>
<status status="PASS" starttime="20201112 09:43:53.939" endtime="20201112 09:43:53.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.956" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.955" endtime="20201112 09:43:53.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.958" level="INFO">VALUE: [2.7624999999999872e-05, 2.7651999999999538e-05, 2.7958000000001537e-05, 2.765300000000248e-05, 2.791699999999883e-05, 2.7611000000000302e-05, 2.765300000000248e-05, 2.7333000000000912e-05, 2.7347000000000482e-05, 2.791699999999883e-05, 2.82370000000004e-05, 2.8236000000000927e-05, 2.79309999999984e-05, 2.7318999999997873e-05, 2.7583000000001162e-05, 2.7318999999997873e-05, 2.7638999999999442e-05, 2.763900000000291e-05, 2.7638999999999442e-05, 2.794499999999797e-05, 2.738900000000266e-05, 2.7665999999999108e-05, 2.791699999999883e-05, 2.7319999999997346e-05, 2.7624999999999872e-05, 2.793100000000187e-05, 2.7638999999999442e-05, 2.7611000000000302e-05, 2.7333000000000912e-05, 2.7333000000000912e-05, 2.791699999999883e-05, 2.79309999999984e-05, 2.818100000000212e-05, 2.7694000000001717e-05, 2.7333000000000912e-05, 2.7624999999999872e-05, 2.7679999999998678e-05, 2.7638999999999442e-05, 2.7888999999999692e-05, 2.7333000000000912e-05, 2.7346999999997013e-05, 2.8222000000001357e-05, 2.795900000000101e-05, 2.7652000000003008e-05, 2.816699999999908e-05, 2.793100000000187e-05, 2.8236000000000927e-05, 2.7333000000000912e-05, 2.7568999999998123e-05, 2.7930000000002397e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.957" endtime="20201112 09:43:53.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.952" endtime="20201112 09:43:53.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.968" endtime="20201112 09:43:53.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.972" endtime="20201112 09:43:53.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.970" endtime="20201112 09:43:53.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.966" endtime="20201112 09:43:53.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.596" endtime="20201112 09:43:53.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.596" endtime="20201112 09:43:53.993"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.001" endtime="20201112 09:43:54.016"></status>
</kw>
<msg timestamp="20201112 09:43:54.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.000" endtime="20201112 09:43:54.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.018" endtime="20201112 09:43:54.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.020" endtime="20201112 09:43:54.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.997" endtime="20201112 09:43:54.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.995" endtime="20201112 09:43:54.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.031" endtime="20201112 09:43:54.317"></status>
</kw>
<msg timestamp="20201112 09:43:54.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019921833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.030" endtime="20201112 09:43:54.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019921833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.321" endtime="20201112 09:43:54.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.329" endtime="20201112 09:43:54.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.027" endtime="20201112 09:43:54.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.026" endtime="20201112 09:43:54.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.336" level="INFO">${RESULT} = [{'time': 0.019950375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8541999999999457e-05, 'source_diff': 2.8541999999999457e-05}, {'time': 0.019982208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:54.333" endtime="20201112 09:43:54.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.349" level="INFO">${ACCURACY} = {'time': [0.019950375, 0.019982208, 0.020020278, 0.020056181, 0.020088194, 0.02012225, 0.020160278, 0.020193389, 0.020225167, 0.020263375, 0.020301306, 0.020336278, 0.020371278, 0.020403361, 0.0204344...</msg>
<status status="PASS" starttime="20201112 09:43:54.337" endtime="20201112 09:43:54.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.354" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.353" endtime="20201112 09:43:54.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.357" level="INFO">VALUE: [2.8541999999999457e-05, 2.9139000000000942e-05, 2.8221999999997888e-05, 2.8805999999999277e-05, 2.8791000000000233e-05, 2.9125000000001372e-05, 2.9125000000001372e-05, 2.9138999999997472e-05, 2.8527999999999887e-05, 2.8832999999998943e-05, 2.822300000000083e-05, 2.8221999999997888e-05, 2.8236000000000927e-05, 2.9082999999999193e-05, 2.8500000000000747e-05, 2.8541999999999457e-05, 2.8847000000001982e-05, 2.9110999999998333e-05, 2.8138000000000468e-05, 2.8848000000001456e-05, 2.8861000000001552e-05, 2.9139000000000942e-05, 2.8250000000000497e-05, 2.8818999999999373e-05, 2.8541999999999457e-05, 2.9125000000001372e-05, 2.9138999999997472e-05, 2.9124999999997903e-05, 2.847299999999761e-05, 2.8819999999998847e-05, 2.8804999999999803e-05, 2.8555999999999027e-05, 2.8541999999999457e-05, 2.8832999999998943e-05, 2.8514000000000317e-05, 2.9096999999998763e-05, 2.8875000000001122e-05, 2.8791999999999707e-05, 2.8764000000000567e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8528000000003356e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8847000000001982e-05, 2.8832999999998943e-05, 2.8472000000001607e-05, 2.8500000000000747e-05, 2.8500000000000747e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.355" endtime="20201112 09:43:54.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.350" endtime="20201112 09:43:54.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.360" endtime="20201112 09:43:54.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.364" endtime="20201112 09:43:54.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.362" endtime="20201112 09:43:54.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.359" endtime="20201112 09:43:54.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.993" endtime="20201112 09:43:54.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.993" endtime="20201112 09:43:54.385"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.393" endtime="20201112 09:43:54.408"></status>
</kw>
<msg timestamp="20201112 09:43:54.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.392" endtime="20201112 09:43:54.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.409" endtime="20201112 09:43:54.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.412" endtime="20201112 09:43:54.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.389" endtime="20201112 09:43:54.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.387" endtime="20201112 09:43:54.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.422" endtime="20201112 09:43:54.708"></status>
</kw>
<msg timestamp="20201112 09:43:54.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.420" endtime="20201112 09:43:54.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.712" endtime="20201112 09:43:54.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.721" endtime="20201112 09:43:54.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.418" endtime="20201112 09:43:54.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.416" endtime="20201112 09:43:54.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.728" level="INFO">${RESULT} = [{'time': 0.019799264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9346999999999013e-05, 'source_diff': 2.9346999999999013e-05}, {'time': 0.019832292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:54.724" endtime="20201112 09:43:54.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.741" level="INFO">${ACCURACY} = {'time': [0.019799264, 0.019832292, 0.019868069, 0.019906111, 0.019945028, 0.019981278, 0.020017222, 0.020051208, 0.020087306, 0.020121194, 0.020155097, 0.020189125, 0.020222264, 0.020260097, 0.020292...</msg>
<status status="PASS" starttime="20201112 09:43:54.729" endtime="20201112 09:43:54.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.746" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.744" endtime="20201112 09:43:54.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.748" level="INFO">VALUE: [2.9346999999999013e-05, 3.0014000000001817e-05, 2.941599999999739e-05, 3.0083000000000193e-05, 2.9125000000001372e-05, 2.9417000000000332e-05, 2.9416000000000858e-05, 3.0014000000001817e-05, 3.0041999999997487e-05, 2.9971999999999638e-05, 2.9443999999999998e-05, 2.94309999999999e-05, 2.9707999999999818e-05, 2.9416000000000858e-05, 2.9430000000000428e-05, 2.94309999999999e-05, 3.0028000000001387e-05, 2.9999999999998778e-05, 3.0014000000001817e-05, 2.9999999999998778e-05, 2.9707999999999818e-05, 2.969499999999972e-05, 3.0013999999998348e-05, 3.0000000000002247e-05, 2.9736000000002427e-05, 2.9749999999998528e-05, 2.9417000000000332e-05, 3.0013999999998348e-05, 2.9485999999998708e-05, 3.0014000000001817e-05, 3.0014000000001817e-05, 3.0320000000000347e-05, 2.94309999999999e-05, 2.9430000000000428e-05, 3.0041000000001483e-05, 2.94309999999999e-05, 2.969500000000319e-05, 2.942999999999696e-05, 2.9735999999998958e-05, 2.9763999999998098e-05, 2.9416000000000858e-05, 3.0012999999998874e-05, 2.973699999999843e-05, 2.972299999999886e-05, 3.0013999999998348e-05, 2.9735999999998958e-05, 2.9707999999999818e-05, 3.0014000000001817e-05, 3.0319000000000873e-05, 3.0319000000000873e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.747" endtime="20201112 09:43:54.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.742" endtime="20201112 09:43:54.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.752" endtime="20201112 09:43:54.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.755" endtime="20201112 09:43:54.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.754" endtime="20201112 09:43:54.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.750" endtime="20201112 09:43:54.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.386" endtime="20201112 09:43:54.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.385" endtime="20201112 09:43:54.776"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.785" endtime="20201112 09:43:54.801"></status>
</kw>
<msg timestamp="20201112 09:43:54.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.783" endtime="20201112 09:43:54.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.802" endtime="20201112 09:43:54.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.805" endtime="20201112 09:43:54.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.781" endtime="20201112 09:43:54.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.779" endtime="20201112 09:43:54.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.815" endtime="20201112 09:43:55.100"></status>
</kw>
<msg timestamp="20201112 09:43:55.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.813" endtime="20201112 09:43:55.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.104" endtime="20201112 09:43:55.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.113" endtime="20201112 09:43:55.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.811" endtime="20201112 09:43:55.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.809" endtime="20201112 09:43:55.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.120" level="INFO">${RESULT} = [{'time': 0.020449806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.090300000000226e-05, 'source_diff': 3.090300000000226e-05}, {'time': 0.02048475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:55.116" endtime="20201112 09:43:55.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.133" level="INFO">${ACCURACY} = {'time': [0.020449806, 0.02048475, 0.020520986, 0.020556931, 0.020592931, 0.02062675, 0.020664042, 0.020700917, 0.020737833, 0.020774, 0.020811931, 0.02085, 0.020883917, 0.020917917, 0.020954972, 0.02...</msg>
<status status="PASS" starttime="20201112 09:43:55.121" endtime="20201112 09:43:55.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.138" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.137" endtime="20201112 09:43:55.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.140" level="INFO">VALUE: [3.090300000000226e-05, 3.0319000000000873e-05, 3.086100000000008e-05, 3.0611999999999306e-05, 3.090299999999879e-05, 3.0319000000000873e-05, 3.09310000000014e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.0319000000000873e-05, 3.0861999999999556e-05, 3.059700000000026e-05, 3.120899999999732e-05, 3.0333999999999917e-05, 3.0304999999997834e-05, 3.0304999999997834e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.0291000000001733e-05, 3.0347000000000013e-05, 3.061099999999983e-05, 3.0306000000000777e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.0305000000001303e-05, 3.061099999999983e-05, 3.0305000000001303e-05, 3.095900000000054e-05, 3.122200000000089e-05, 3.061099999999983e-05, 3.0597999999999737e-05, 3.059700000000026e-05, 3.0333999999999917e-05, 3.090300000000226e-05, 3.059700000000026e-05, 3.091699999999836e-05, 3.0306000000000777e-05, 3.0291999999997737e-05, 3.120899999999732e-05, 3.119399999999828e-05, 3.0597999999999737e-05, 3.06249999999994e-05, 3.090299999999879e-05, 3.0305000000001303e-05, 3.120900000000079e-05, 3.119500000000122e-05, 3.0360999999999583e-05, 3.119399999999828e-05, 3.0611999999999306e-05, 3.090299999999879e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.139" endtime="20201112 09:43:55.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.134" endtime="20201112 09:43:55.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.144" endtime="20201112 09:43:55.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.147" endtime="20201112 09:43:55.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.146" endtime="20201112 09:43:55.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.142" endtime="20201112 09:43:55.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.777" endtime="20201112 09:43:55.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.777" endtime="20201112 09:43:55.168"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.177" endtime="20201112 09:43:55.194"></status>
</kw>
<msg timestamp="20201112 09:43:55.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.175" endtime="20201112 09:43:55.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.196" endtime="20201112 09:43:55.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.198" endtime="20201112 09:43:55.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.173" endtime="20201112 09:43:55.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.171" endtime="20201112 09:43:55.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.208" endtime="20201112 09:43:55.497"></status>
</kw>
<msg timestamp="20201112 09:43:55.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020582111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.207" endtime="20201112 09:43:55.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020582111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.501" endtime="20201112 09:43:55.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.510" endtime="20201112 09:43:55.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.204" endtime="20201112 09:43:55.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.202" endtime="20201112 09:43:55.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.517" level="INFO">${RESULT} = [{'time': 0.020616694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4583000000001224e-05, 'source_diff': 3.4583000000001224e-05}, {'time': 0.020658722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:55.513" endtime="20201112 09:43:55.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.530" level="INFO">${ACCURACY} = {'time': [0.020616694, 0.020658722, 0.020703694, 0.020747708, 0.020789708, 0.020836722, 0.020882722, 0.020924722, 0.020965792, 0.02101075, 0.021057736, 0.021102764, 0.02114875, 0.021194764, 0.02124176...</msg>
<status status="PASS" starttime="20201112 09:43:55.518" endtime="20201112 09:43:55.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.534" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.533" endtime="20201112 09:43:55.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.537" level="INFO">VALUE: [3.4583000000001224e-05, 3.542999999999949e-05, 3.466600000000264e-05, 3.476399999999963e-05, 3.5111000000000864e-05, 3.4902999999999323e-05, 3.4554999999998615e-05, 3.47779999999992e-05, 3.4652999999999073e-05, 3.488900000000322e-05, 3.47779999999992e-05, 3.457000000000113e-05, 3.475000000000006e-05, 3.480600000000181e-05, 3.506999999999816e-05, 3.4875000000000184e-05, 3.4388999999999253e-05, 3.4624999999999934e-05, 3.506999999999816e-05, 3.49580000000016e-05, 3.484799999999705e-05, 3.5139000000000004e-05, 3.4638999999999504e-05, 3.5332999999998504e-05, 3.4875000000000184e-05, 3.493000000000246e-05, 3.4763000000000155e-05, 3.540200000000035e-05, 3.4597000000000794e-05, 3.5290999999999795e-05, 3.4847000000001044e-05, 3.522200000000142e-05, 3.5125000000000434e-05, 3.526400000000013e-05, 3.449999999999981e-05, 3.4624999999999934e-05, 3.437500000000315e-05, 3.520800000000185e-05, 3.52779999999997e-05, 3.508399999999773e-05, 3.470900000000082e-05, 3.459800000000027e-05, 3.498600000000074e-05, 3.4624999999999934e-05, 3.457000000000113e-05, 3.475000000000006e-05, 3.45840000000007e-05, 3.491600000000289e-05, 3.448600000000024e-05, 3.441599999999892e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.536" endtime="20201112 09:43:55.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.531" endtime="20201112 09:43:55.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.541" endtime="20201112 09:43:55.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.544" endtime="20201112 09:43:55.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.543" endtime="20201112 09:43:55.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.539" endtime="20201112 09:43:55.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.169" endtime="20201112 09:43:55.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.169" endtime="20201112 09:43:55.565"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.574" endtime="20201112 09:43:55.589"></status>
</kw>
<msg timestamp="20201112 09:43:55.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.572" endtime="20201112 09:43:55.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.590" endtime="20201112 09:43:55.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.593" endtime="20201112 09:43:55.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.570" endtime="20201112 09:43:55.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.567" endtime="20201112 09:43:55.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.604" endtime="20201112 09:43:55.890"></status>
</kw>
<msg timestamp="20201112 09:43:55.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.602" endtime="20201112 09:43:55.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.894" endtime="20201112 09:43:55.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.903" endtime="20201112 09:43:55.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.600" endtime="20201112 09:43:55.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.598" endtime="20201112 09:43:55.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.910" level="INFO">${RESULT} = [{'time': 0.019711472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6291000000000795e-05, 'source_diff': 3.6291000000000795e-05}, {'time': 0.019755458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:55.906" endtime="20201112 09:43:55.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.923" level="INFO">${ACCURACY} = {'time': [0.019711472, 0.019755458, 0.0198035, 0.019851472, 0.019897486, 0.0199395, 0.019984486, 0.020031569, 0.0200785, 0.020126514, 0.020168528, 0.020215514, 0.020262514, 0.020311528, 0.020356542, 0...</msg>
<status status="PASS" starttime="20201112 09:43:55.911" endtime="20201112 09:43:55.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.928" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.927" endtime="20201112 09:43:55.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.930" level="INFO">VALUE: [3.6291000000000795e-05, 3.570799999999888e-05, 3.5639000000000504e-05, 3.5832999999999005e-05, 3.6402999999997354e-05, 3.620799999999938e-05, 3.594399999999956e-05, 3.643000000000049e-05, 3.6082999999999255e-05, 3.6333000000002974e-05, 3.550000000000081e-05, 3.570799999999888e-05, 3.5832999999999005e-05, 3.620899999999885e-05, 3.569499999999878e-05, 3.641600000000092e-05, 3.5639000000000504e-05, 3.552799999999995e-05, 3.619399999999981e-05, 3.567999999999974e-05, 3.547299999999767e-05, 3.6041000000000545e-05, 3.615199999999763e-05, 3.569400000000278e-05, 3.5846999999998574e-05, 3.627799999999723e-05, 3.5777000000000725e-05, 3.576399999999716e-05, 3.598600000000174e-05, 3.579199999999977e-05, 3.620799999999938e-05, 3.5875000000001184e-05, 3.5889000000000754e-05, 3.6346999999999074e-05, 3.631999999999941e-05, 3.548600000000124e-05, 3.6374999999998214e-05, 3.6403000000000824e-05, 3.5416999999999393e-05, 3.5875000000001184e-05, 3.641600000000092e-05, 3.5638999999997034e-05, 3.5874999999997714e-05, 3.6167000000000143e-05, 3.5874999999997714e-05, 3.590200000000085e-05, 3.5597000000001794e-05, 3.54580000000021e-05, 3.6374999999998214e-05, 3.5639000000000504e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.929" endtime="20201112 09:43:55.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.924" endtime="20201112 09:43:55.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.934" endtime="20201112 09:43:55.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.937" endtime="20201112 09:43:55.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.936" endtime="20201112 09:43:55.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.932" endtime="20201112 09:43:55.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.566" endtime="20201112 09:43:55.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.565" endtime="20201112 09:43:55.958"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.967" endtime="20201112 09:43:55.982"></status>
</kw>
<msg timestamp="20201112 09:43:55.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.965" endtime="20201112 09:43:55.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.984" endtime="20201112 09:43:55.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.986" endtime="20201112 09:43:55.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.963" endtime="20201112 09:43:55.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.961" endtime="20201112 09:43:55.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.997" endtime="20201112 09:43:56.282"></status>
</kw>
<msg timestamp="20201112 09:43:56.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019766028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.995" endtime="20201112 09:43:56.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019766028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.286" endtime="20201112 09:43:56.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.295" endtime="20201112 09:43:56.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.992" endtime="20201112 09:43:56.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.991" endtime="20201112 09:43:56.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.301" level="INFO">${RESULT} = [{'time': 0.019766028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6625000000001934e-05, 'source_diff': 3.6625000000001934e-05}, {'time': 0.019814014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:56.298" endtime="20201112 09:43:56.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.315" level="INFO">${ACCURACY} = {'time': [0.019766028, 0.019814014, 0.019862083, 0.019908028, 0.019957042, 0.020001042, 0.020050042, 0.020096056, 0.020144069, 0.020188056, 0.020237083, 0.020281083, 0.020329069, 0.020374139, 0.020421...</msg>
<status status="PASS" starttime="20201112 09:43:56.302" endtime="20201112 09:43:56.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.319" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.318" endtime="20201112 09:43:56.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.322" level="INFO">VALUE: [3.6625000000001934e-05, 3.679200000000077e-05, 3.741599999999845e-05, 3.723599999999952e-05, 3.7403000000001824e-05, 3.724999999999909e-05, 3.684799999999905e-05, 3.698700000000221e-05, 3.6555000000000615e-05, 3.676399999999816e-05, 3.6776999999998256e-05, 3.6860999999999144e-05, 3.647200000000267e-05, 3.6653000000001074e-05, 3.6582999999999755e-05, 3.658399999999923e-05, 3.722199999999995e-05, 3.6555000000000615e-05, 3.701399999999841e-05, 3.6888999999998284e-05, 3.677799999999773e-05, 3.7096999999999825e-05, 3.670799999999988e-05, 3.654200000000052e-05, 3.680600000000034e-05, 3.72919999999978e-05, 3.67780000000012e-05, 3.7096999999999825e-05, 3.6610999999998894e-05, 3.680600000000034e-05, 3.7305000000001365e-05, 3.6610999999998894e-05, 3.6653000000001074e-05, 3.694400000000056e-05, 3.6889000000001754e-05, 3.7181000000000713e-05, 3.694400000000056e-05, 3.7374999999999214e-05, 3.6639000000001504e-05, 3.71659999999982e-05, 3.7431000000000964e-05, 3.655600000000009e-05, 3.698600000000274e-05, 3.727799999999823e-05, 3.7319000000000935e-05, 3.656999999999966e-05, 3.6931000000000463e-05, 3.669499999999978e-05, 3.64719999999992e-05, 3.7124999999998964e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.320" endtime="20201112 09:43:56.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.316" endtime="20201112 09:43:56.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.325" endtime="20201112 09:43:56.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.329" endtime="20201112 09:43:56.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.327" endtime="20201112 09:43:56.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.324" endtime="20201112 09:43:56.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.959" endtime="20201112 09:43:56.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.959" endtime="20201112 09:43:56.350"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.359" endtime="20201112 09:43:56.374"></status>
</kw>
<msg timestamp="20201112 09:43:56.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.357" endtime="20201112 09:43:56.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.375" endtime="20201112 09:43:56.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.378" endtime="20201112 09:43:56.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.354" endtime="20201112 09:43:56.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.352" endtime="20201112 09:43:56.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.388" endtime="20201112 09:43:56.674"></status>
</kw>
<msg timestamp="20201112 09:43:56.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.386" endtime="20201112 09:43:56.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.678" endtime="20201112 09:43:56.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.687" endtime="20201112 09:43:56.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.384" endtime="20201112 09:43:56.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.382" endtime="20201112 09:43:56.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.694" level="INFO">${RESULT} = [{'time': 0.019775208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7597000000000325e-05, 'source_diff': 3.7597000000000325e-05}, {'time': 0.019820208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:56.690" endtime="20201112 09:43:56.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.707" level="INFO">${ACCURACY} = {'time': [0.019775208, 0.019820208, 0.019867222, 0.019915222, 0.019959222, 0.020003222, 0.020051278, 0.020099264, 0.020149333, 0.020194264, 0.020242264, 0.020290278, 0.020340264, 0.020391278, 0.020438...</msg>
<status status="PASS" starttime="20201112 09:43:56.695" endtime="20201112 09:43:56.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.712" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.711" endtime="20201112 09:43:56.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.714" level="INFO">VALUE: [3.7597000000000325e-05, 3.81659999999992e-05, 3.826399999999966e-05, 3.8388999999999784e-05, 3.7638999999999034e-05, 3.8069000000001685e-05, 3.8111000000000395e-05, 3.823599999999705e-05, 3.749999999999934e-05, 3.8388999999999784e-05, 3.776399999999916e-05, 3.751399999999891e-05, 3.7847000000000575e-05, 3.7944999999997564e-05, 3.755600000000109e-05, 3.7945000000001033e-05, 3.798600000000027e-05, 3.7624999999999464e-05, 3.761200000000284e-05, 3.8290999999999326e-05, 3.8276999999999756e-05, 3.8304999999998895e-05, 3.819400000000181e-05, 3.8332999999998035e-05, 3.749999999999934e-05, 3.744400000000106e-05, 3.799999999999984e-05, 3.820799999999791e-05, 3.8111000000000395e-05, 3.804200000000202e-05, 3.772200000000045e-05, 3.7874999999999714e-05, 3.7833000000001005e-05, 3.826399999999966e-05, 3.826399999999966e-05, 3.7402999999998354e-05, 3.7917000000001894e-05, 3.8375000000000214e-05, 3.822300000000042e-05, 3.808400000000073e-05, 3.804199999999855e-05, 3.788799999999981e-05, 3.757000000000066e-05, 3.749999999999934e-05, 3.8263000000000186e-05, 3.7874999999999714e-05, 3.817999999999877e-05, 3.8304999999998895e-05, 3.7638999999999034e-05, 3.8290999999999326e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.713" endtime="20201112 09:43:56.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.708" endtime="20201112 09:43:56.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.718" endtime="20201112 09:43:56.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.721" endtime="20201112 09:43:56.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.720" endtime="20201112 09:43:56.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.716" endtime="20201112 09:43:56.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.351" endtime="20201112 09:43:56.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.350" endtime="20201112 09:43:56.742"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.751" endtime="20201112 09:43:56.767"></status>
</kw>
<msg timestamp="20201112 09:43:56.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.749" endtime="20201112 09:43:56.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.769" endtime="20201112 09:43:56.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.771" endtime="20201112 09:43:56.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.747" endtime="20201112 09:43:56.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.745" endtime="20201112 09:43:56.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.781" endtime="20201112 09:43:57.066"></status>
</kw>
<msg timestamp="20201112 09:43:57.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.780" endtime="20201112 09:43:57.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.071" endtime="20201112 09:43:57.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.079" endtime="20201112 09:43:57.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.777" endtime="20201112 09:43:57.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.775" endtime="20201112 09:43:57.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.086" level="INFO">${RESULT} = [{'time': 0.020280014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.873599999999755e-05, 'source_diff': 3.873599999999755e-05}, {'time': 0.020325014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:57.082" endtime="20201112 09:43:57.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.099" level="INFO">${ACCURACY} = {'time': [0.020280014, 0.020325014, 0.020371028, 0.020422056, 0.020473042, 0.020521042, 0.020569042, 0.020614056, 0.020662056, 0.020708056, 0.020754111, 0.020804056, 0.020855097, 0.020906083, 0.020951...</msg>
<status status="PASS" starttime="20201112 09:43:57.087" endtime="20201112 09:43:57.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.104" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.103" endtime="20201112 09:43:57.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.106" level="INFO">VALUE: [3.873599999999755e-05, 3.9194999999998814e-05, 3.855599999999862e-05, 3.8875000000000715e-05, 3.8611000000000895e-05, 3.8694999999998314e-05, 3.883399999999801e-05, 3.905599999999912e-05, 3.933400000000198e-05, 3.901400000000041e-05, 3.920799999999891e-05, 3.925000000000109e-05, 3.9389000000000784e-05, 3.9374999999997745e-05, 3.902799999999998e-05, 3.8582999999998285e-05, 3.8916999999999424e-05, 3.923599999999805e-05, 3.8667000000002644e-05, 3.894399999999909e-05, 3.9346999999998605e-05, 3.8917000000002894e-05, 3.8861000000001145e-05, 3.880599999999887e-05, 3.9194999999998814e-05, 3.883400000000148e-05, 3.934799999999808e-05, 3.850000000000034e-05, 3.857000000000166e-05, 3.899999999999737e-05, 3.9374999999997745e-05, 3.8903000000003324e-05, 3.880599999999887e-05, 3.848600000000077e-05, 3.920799999999891e-05, 3.8832999999998535e-05, 3.863800000000056e-05, 3.876400000000016e-05, 3.917999999999977e-05, 3.84720000000012e-05, 3.8790999999999826e-05, 3.9346999999998605e-05, 3.8860999999997675e-05, 3.92919999999998e-05, 3.87919999999993e-05, 3.934799999999808e-05, 3.9124999999997495e-05, 3.8695000000001784e-05, 3.9139000000000534e-05, 3.8945000000002034e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.105" endtime="20201112 09:43:57.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.100" endtime="20201112 09:43:57.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.110" endtime="20201112 09:43:57.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.113" endtime="20201112 09:43:57.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.112" endtime="20201112 09:43:57.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.108" endtime="20201112 09:43:57.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.743" endtime="20201112 09:43:57.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.743" endtime="20201112 09:43:57.134"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.143" endtime="20201112 09:43:57.160"></status>
</kw>
<msg timestamp="20201112 09:43:57.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.141" endtime="20201112 09:43:57.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.162" endtime="20201112 09:43:57.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.164" endtime="20201112 09:43:57.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.139" endtime="20201112 09:43:57.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.137" endtime="20201112 09:43:57.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.175" endtime="20201112 09:43:57.461"></status>
</kw>
<msg timestamp="20201112 09:43:57.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.174" endtime="20201112 09:43:57.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.465" endtime="20201112 09:43:57.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.474" endtime="20201112 09:43:57.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.171" endtime="20201112 09:43:57.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.169" endtime="20201112 09:43:57.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.480" level="INFO">${RESULT} = [{'time': 0.020560944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943000000000002e-05, 'source_diff': 3.943000000000002e-05}, {'time': 0.020611958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:57.477" endtime="20201112 09:43:57.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.494" level="INFO">${ACCURACY} = {'time': [0.020560944, 0.020611958, 0.020658944, 0.020707972, 0.020759958, 0.020807972, 0.020858972, 0.020907972, 0.020960986, 0.021013042, 0.021064, 0.021111014, 0.021162028, 0.021213028, 0.021265069...</msg>
<status status="PASS" starttime="20201112 09:43:57.481" endtime="20201112 09:43:57.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.498" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.497" endtime="20201112 09:43:57.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.501" level="INFO">VALUE: [3.943000000000002e-05, 3.9791000000000826e-05, 3.9582999999999285e-05, 3.945800000000263e-05, 3.999999999999837e-05, 4.020799999999991e-05, 3.9791000000000826e-05, 4.0153000000001104e-05, 4.0139000000001535e-05, 4.009799999999883e-05, 3.9860999999998675e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.955599999999962e-05, 4.0361000000002645e-05, 3.9917000000000424e-05, 3.958399999999876e-05, 3.9930999999999994e-05, 4.0125000000001965e-05, 3.9709000000002354e-05, 4.0208999999999384e-05, 3.9874999999998245e-05, 4.0041000000001076e-05, 4.0346999999999605e-05, 4.0360999999999175e-05, 4.0305000000000896e-05, 3.9639000000001035e-05, 3.9624999999997995e-05, 4.020799999999991e-05, 4.019400000000034e-05, 3.9875000000001715e-05, 3.969399999999984e-05, 3.9875000000001715e-05, 3.950000000000134e-05, 3.952800000000048e-05, 4.031999999999994e-05, 4.0346999999999605e-05, 3.998600000000227e-05, 4.026399999999819e-05, 3.9430999999999494e-05, 3.9444999999999064e-05, 3.955599999999962e-05, 4.009799999999883e-05, 3.96799999999968e-05, 3.9708999999998884e-05, 3.9638999999997565e-05, 3.9582999999999285e-05, 4.0333000000000035e-05, 4.015200000000163e-05, 4.020799999999991e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.500" endtime="20201112 09:43:57.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.495" endtime="20201112 09:43:57.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.505" endtime="20201112 09:43:57.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.509" endtime="20201112 09:43:57.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.507" endtime="20201112 09:43:57.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.503" endtime="20201112 09:43:57.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.135" endtime="20201112 09:43:57.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.135" endtime="20201112 09:43:57.530"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.539" endtime="20201112 09:43:57.554"></status>
</kw>
<msg timestamp="20201112 09:43:57.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.538" endtime="20201112 09:43:57.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.556" endtime="20201112 09:43:57.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.559" endtime="20201112 09:43:57.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.535" endtime="20201112 09:43:57.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.533" endtime="20201112 09:43:57.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.569" endtime="20201112 09:43:57.854"></status>
</kw>
<msg timestamp="20201112 09:43:57.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:57.567" endtime="20201112 09:43:57.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:57.858" endtime="20201112 09:43:57.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.867" endtime="20201112 09:43:57.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.564" endtime="20201112 09:43:57.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.563" endtime="20201112 09:43:57.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.873" level="INFO">${RESULT} = [{'time': 0.019913597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1097000000000355e-05, 'source_diff': 4.1097000000000355e-05}, {'time': 0.019963569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:57.870" endtime="20201112 09:43:57.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.887" level="INFO">${ACCURACY} = {'time': [0.019913597, 0.019963569, 0.020014597, 0.020061583, 0.020108597, 0.020158597, 0.020211625, 0.020264639, 0.020314625, 0.020361611, 0.020409708, 0.020457625, 0.020509653, 0.020557639, 0.020604...</msg>
<status status="PASS" starttime="20201112 09:43:57.874" endtime="20201112 09:43:57.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.891" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.890" endtime="20201112 09:43:57.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.894" level="INFO">VALUE: [4.1097000000000355e-05, 4.123600000000005e-05, 4.077799999999826e-05, 4.0555000000001146e-05, 4.1054999999998176e-05, 4.0860999999999675e-05, 4.0639000000002035e-05, 4.104200000000155e-05, 4.047199999999973e-05, 4.101400000000241e-05, 4.069399999999737e-05, 4.0596999999999855e-05, 4.0652999999998135e-05, 4.0652999999998135e-05, 4.0639000000002035e-05, 4.0695000000000314e-05, 4.0847000000000105e-05, 4.1138999999999065e-05, 4.099999999999937e-05, 4.1138999999999065e-05, 4.116599999999873e-05, 4.0972999999999704e-05, 4.072199999999998e-05, 4.0583000000000286e-05, 4.11660000000022e-05, 4.1055000000001646e-05, 4.0610999999999425e-05, 4.0625000000002465e-05, 4.0540999999998106e-05, 4.1166999999998205e-05, 4.0667000000001174e-05, 4.12920000000018e-05, 4.0916999999997955e-05, 4.1138999999999065e-05, 4.0930999999997525e-05, 4.050000000000234e-05, 4.082000000000044e-05, 4.082000000000044e-05, 4.0874999999999245e-05, 4.1195000000000814e-05, 4.0875000000002715e-05, 4.0541000000001576e-05, 4.0972999999999704e-05, 4.0917000000001424e-05, 4.091599999999848e-05, 4.115200000000263e-05, 4.072199999999998e-05, 4.1110999999999925e-05, 4.0889000000002285e-05, 4.0847000000000105e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.892" endtime="20201112 09:43:57.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.888" endtime="20201112 09:43:57.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.898" endtime="20201112 09:43:57.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.901" endtime="20201112 09:43:57.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.899" endtime="20201112 09:43:57.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.896" endtime="20201112 09:43:57.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.531" endtime="20201112 09:43:57.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.531" endtime="20201112 09:43:57.922"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.931" endtime="20201112 09:43:57.948"></status>
</kw>
<msg timestamp="20201112 09:43:57.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.929" endtime="20201112 09:43:57.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.949" endtime="20201112 09:43:57.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.952" endtime="20201112 09:43:57.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.927" endtime="20201112 09:43:57.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.924" endtime="20201112 09:43:57.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.962" endtime="20201112 09:43:58.248"></status>
</kw>
<msg timestamp="20201112 09:43:58.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020815792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.960" endtime="20201112 09:43:58.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020815792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.252" endtime="20201112 09:43:58.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.261" endtime="20201112 09:43:58.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.958" endtime="20201112 09:43:58.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.956" endtime="20201112 09:43:58.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.268" level="INFO">${RESULT} = [{'time': 0.020815792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.151399999999944e-05, 'source_diff': 4.151399999999944e-05}, {'time': 0.020864778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.264" endtime="20201112 09:43:58.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.281" level="INFO">${ACCURACY} = {'time': [0.020815792, 0.020864778, 0.020913806, 0.020961806, 0.021014806, 0.021068819, 0.021120875, 0.021172819, 0.021223833, 0.021278847, 0.021331847, 0.021384847, 0.021434861, 0.021487875, 0.021536...</msg>
<status status="PASS" starttime="20201112 09:43:58.268" endtime="20201112 09:43:58.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.286" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.284" endtime="20201112 09:43:58.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.288" level="INFO">VALUE: [4.151399999999944e-05, 4.2139000000000065e-05, 4.1945000000001564e-05, 4.159800000000033e-05, 4.155600000000162e-05, 4.2346999999998136e-05, 4.1569000000001716e-05, 4.222199999999801e-05, 4.219400000000234e-05, 4.2304999999999426e-05, 4.1569000000001716e-05, 4.152799999999901e-05, 4.1597000000000856e-05, 4.2139000000000065e-05, 4.157000000000119e-05, 4.2430999999999025e-05, 4.2347000000001606e-05, 4.154200000000205e-05, 4.1624999999999995e-05, 4.158400000000076e-05, 4.205599999999865e-05, 4.155599999999815e-05, 4.2208999999997915e-05, 4.184800000000058e-05, 4.175000000000012e-05, 4.202799999999951e-05, 4.16119999999999e-05, 4.1681000000001744e-05, 4.1847000000001106e-05, 4.1791000000002826e-05, 4.175000000000012e-05, 4.2069000000002216e-05, 4.1804999999998926e-05, 4.194400000000209e-05, 4.2347000000001606e-05, 4.2111000000000925e-05, 4.2139000000000065e-05, 4.149999999999987e-05, 4.227799999999976e-05, 4.2166999999999205e-05, 4.2139000000000065e-05, 4.1944999999998095e-05, 4.1902999999999385e-05, 4.2374999999997276e-05, 4.2139000000000065e-05, 4.183400000000101e-05, 4.2068999999998746e-05, 4.1554999999998676e-05, 4.208400000000126e-05, 4.191599999999948e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.287" endtime="20201112 09:43:58.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.282" endtime="20201112 09:43:58.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.292" endtime="20201112 09:43:58.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.295" endtime="20201112 09:43:58.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.293" endtime="20201112 09:43:58.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.290" endtime="20201112 09:43:58.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.923" endtime="20201112 09:43:58.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.922" endtime="20201112 09:43:58.316"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.325" endtime="20201112 09:43:58.341"></status>
</kw>
<msg timestamp="20201112 09:43:58.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.323" endtime="20201112 09:43:58.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.342" endtime="20201112 09:43:58.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.345" endtime="20201112 09:43:58.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.321" endtime="20201112 09:43:58.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.319" endtime="20201112 09:43:58.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.355" endtime="20201112 09:43:58.641"></status>
</kw>
<msg timestamp="20201112 09:43:58.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.353" endtime="20201112 09:43:58.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.645" endtime="20201112 09:43:58.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.654" endtime="20201112 09:43:58.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.351" endtime="20201112 09:43:58.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.349" endtime="20201112 09:43:58.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.660" level="INFO">${RESULT} = [{'time': 0.019737056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.329200000000033e-05, 'source_diff': 4.329200000000033e-05}, {'time': 0.019789014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.657" endtime="20201112 09:43:58.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.674" level="INFO">${ACCURACY} = {'time': [0.019737056, 0.019789014, 0.019842097, 0.019897056, 0.019948028, 0.020004069, 0.020057042, 0.020112056, 0.020162056, 0.020218083, 0.020268083, 0.020322125, 0.020373097, 0.020429083, 0.020478...</msg>
<status status="PASS" starttime="20201112 09:43:58.661" endtime="20201112 09:43:58.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.678" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.677" endtime="20201112 09:43:58.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.681" level="INFO">VALUE: [4.329200000000033e-05, 4.331999999999947e-05, 4.275000000000112e-05, 4.286200000000115e-05, 4.29999999999979e-05, 4.3374999999998276e-05, 4.255599999999915e-05, 4.3139000000001065e-05, 4.329200000000033e-05, 4.291600000000048e-05, 4.324999999999815e-05, 4.2680999999999275e-05, 4.2639000000000565e-05, 4.3332999999999566e-05, 4.2625000000000995e-05, 4.247200000000173e-05, 4.2903000000000385e-05, 4.3361000000002176e-05, 4.2680999999999275e-05, 4.3124999999998026e-05, 4.28059999999994e-05, 4.305599999999965e-05, 4.28059999999994e-05, 4.3417000000000455e-05, 4.326400000000119e-05, 4.2860999999998206e-05, 4.3153000000000635e-05, 4.331999999999947e-05, 4.2582999999998816e-05, 4.3305000000000426e-05, 4.3332999999999566e-05, 4.2568999999999246e-05, 4.3346999999999136e-05, 4.2638999999997096e-05, 4.241599999999998e-05, 4.2832999999999066e-05, 4.2611000000001426e-05, 4.308399999999879e-05, 4.3125000000001495e-05, 4.2874999999997776e-05, 4.329200000000033e-05, 4.2875000000001245e-05, 4.320799999999944e-05, 4.2416999999999455e-05, 4.331999999999947e-05, 4.29999999999979e-05, 4.3110999999998456e-05, 4.341600000000098e-05, 4.3360999999998706e-05, 4.291600000000048e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.679" endtime="20201112 09:43:58.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.675" endtime="20201112 09:43:58.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.684" endtime="20201112 09:43:58.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.688" endtime="20201112 09:43:58.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.686" endtime="20201112 09:43:58.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.683" endtime="20201112 09:43:58.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.317" endtime="20201112 09:43:58.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.316" endtime="20201112 09:43:58.709"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.718" endtime="20201112 09:43:58.734"></status>
</kw>
<msg timestamp="20201112 09:43:58.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.716" endtime="20201112 09:43:58.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.736" endtime="20201112 09:43:58.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.738" endtime="20201112 09:43:58.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.713" endtime="20201112 09:43:58.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.711" endtime="20201112 09:43:58.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.749" endtime="20201112 09:43:59.034"></status>
</kw>
<msg timestamp="20201112 09:43:59.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.748" endtime="20201112 09:43:59.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.039" endtime="20201112 09:43:59.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.047" endtime="20201112 09:43:59.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.745" endtime="20201112 09:43:59.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.743" endtime="20201112 09:43:59.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.054" level="INFO">${RESULT} = [{'time': 0.019858917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3889000000001815e-05, 'source_diff': 4.3889000000001815e-05}, {'time': 0.019911917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:59.050" endtime="20201112 09:43:59.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.067" level="INFO">${ACCURACY} = {'time': [0.019858917, 0.019911917, 0.019962903, 0.020015903, 0.020069917, 0.020121917, 0.020178931, 0.020234931, 0.020288972, 0.020340958, 0.020391972, 0.020444958, 0.020497958, 0.020553, 0.020603986...</msg>
<status status="PASS" starttime="20201112 09:43:59.055" endtime="20201112 09:43:59.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.072" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.071" endtime="20201112 09:43:59.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.074" level="INFO">VALUE: [4.3889000000001815e-05, 4.3958999999999665e-05, 4.4096999999999886e-05, 4.400000000000237e-05, 4.34999999999984e-05, 4.3472999999998735e-05, 4.386200000000215e-05, 4.3431000000000025e-05, 4.402799999999804e-05, 4.3888999999998346e-05, 4.345799999999969e-05, 4.401399999999847e-05, 4.376400000000169e-05, 4.427799999999829e-05, 4.376400000000169e-05, 4.4055000000001177e-05, 4.427799999999829e-05, 4.3874999999998776e-05, 4.38060000000004e-05, 4.39999999999989e-05, 4.426399999999872e-05, 4.350000000000187e-05, 4.4096999999999886e-05, 4.359799999999886e-05, 4.4138999999998596e-05, 4.4374999999999276e-05, 4.4208999999999915e-05, 4.388799999999887e-05, 4.4388999999998846e-05, 4.3819000000000496e-05, 4.427699999999882e-05, 4.379100000000136e-05, 4.41800000000013e-05, 4.4055000000001177e-05, 4.39860000000028e-05, 4.427800000000176e-05, 4.4374999999999276e-05, 4.4347000000000136e-05, 4.429199999999786e-05, 4.4374999999999276e-05, 4.38060000000004e-05, 4.3945000000000095e-05, 4.432000000000047e-05, 4.397199999999976e-05, 4.383399999999954e-05, 4.3973000000002704e-05, 4.3639000000001565e-05, 4.4096999999999886e-05, 4.4012999999999e-05, 4.4360999999999706e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.073" endtime="20201112 09:43:59.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.068" endtime="20201112 09:43:59.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.082" endtime="20201112 09:43:59.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.086" endtime="20201112 09:43:59.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.084" endtime="20201112 09:43:59.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.080" endtime="20201112 09:43:59.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.710" endtime="20201112 09:43:59.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.709" endtime="20201112 09:43:59.107"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.115" endtime="20201112 09:43:59.131"></status>
</kw>
<msg timestamp="20201112 09:43:59.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.114" endtime="20201112 09:43:59.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.133" endtime="20201112 09:43:59.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.135" endtime="20201112 09:43:59.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.111" endtime="20201112 09:43:59.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.109" endtime="20201112 09:43:59.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.145" endtime="20201112 09:43:59.431"></status>
</kw>
<msg timestamp="20201112 09:43:59.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.144" endtime="20201112 09:43:59.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.435" endtime="20201112 09:43:59.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.444" endtime="20201112 09:43:59.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.141" endtime="20201112 09:43:59.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.139" endtime="20201112 09:43:59.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.451" level="INFO">${RESULT} = [{'time': 0.019781764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5181000000001775e-05, 'source_diff': 4.5181000000001775e-05}, {'time': 0.019836764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:59.447" endtime="20201112 09:43:59.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.464" level="INFO">${ACCURACY} = {'time': [0.019781764, 0.019836764, 0.019889764, 0.019941792, 0.019997778, 0.020051778, 0.020108792, 0.020160806, 0.020212792, 0.020265819, 0.020318833, 0.020369889, 0.020427861, 0.020484833, 0.020536...</msg>
<status status="PASS" starttime="20201112 09:43:59.452" endtime="20201112 09:43:59.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.469" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.468" endtime="20201112 09:43:59.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.471" level="INFO">VALUE: [4.5181000000001775e-05, 4.498600000000033e-05, 4.529200000000233e-05, 4.4638999999999096e-05, 4.448599999999983e-05, 4.4638999999999096e-05, 4.459799999999986e-05, 4.5166999999998736e-05, 4.5138999999999596e-05, 4.474999999999965e-05, 4.540199999999994e-05, 4.470799999999747e-05, 4.495799999999772e-05, 4.4847000000000636e-05, 4.4583000000000816e-05, 4.442999999999808e-05, 4.455600000000115e-05, 4.5375000000000276e-05, 4.444400000000112e-05, 4.5195000000001345e-05, 4.4861000000000206e-05, 4.470799999999747e-05, 4.454200000000158e-05, 4.497200000000076e-05, 4.4444999999997126e-05, 4.5194999999997876e-05, 4.509699999999742e-05, 4.461199999999943e-05, 4.4638999999999096e-05, 4.530500000000243e-05, 4.4583000000000816e-05, 4.506899999999828e-05, 4.4819000000001497e-05, 4.4624999999999526e-05, 4.508299999999785e-05, 4.519400000000187e-05, 4.494400000000162e-05, 4.4819000000001497e-05, 4.44999999999994e-05, 4.520799999999797e-05, 4.4847000000000636e-05, 4.467999999999833e-05, 4.495800000000119e-05, 4.48060000000014e-05, 4.4916999999998486e-05, 4.4597000000000386e-05, 4.482000000000097e-05, 4.504199999999861e-05, 4.4472999999999735e-05, 4.5237000000000055e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.470" endtime="20201112 09:43:59.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.465" endtime="20201112 09:43:59.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.475" endtime="20201112 09:43:59.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.478" endtime="20201112 09:43:59.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.477" endtime="20201112 09:43:59.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.473" endtime="20201112 09:43:59.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.108" endtime="20201112 09:43:59.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.107" endtime="20201112 09:43:59.499"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.508" endtime="20201112 09:43:59.524"></status>
</kw>
<msg timestamp="20201112 09:43:59.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.506" endtime="20201112 09:43:59.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.526" endtime="20201112 09:43:59.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.528" endtime="20201112 09:43:59.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.504" endtime="20201112 09:43:59.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.502" endtime="20201112 09:43:59.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.539" endtime="20201112 09:43:59.827"></status>
</kw>
<msg timestamp="20201112 09:43:59.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019825556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.538" endtime="20201112 09:43:59.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019825556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.832" endtime="20201112 09:43:59.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.840" endtime="20201112 09:43:59.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.535" endtime="20201112 09:43:59.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.533" endtime="20201112 09:43:59.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.847" level="INFO">${RESULT} = [{'time': 0.019871819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.626299999999778e-05, 'source_diff': 4.626299999999778e-05}, {'time': 0.01992975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:59.843" endtime="20201112 09:43:59.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.860" level="INFO">${ACCURACY} = {'time': [0.019871819, 0.01992975, 0.019984764, 0.020036778, 0.020093806, 0.020151778, 0.020205792, 0.020257792, 0.020316792, 0.020375806, 0.020429819, 0.020488819, 0.020540833, 0.020595833, 0.0206498...</msg>
<status status="PASS" starttime="20201112 09:43:59.848" endtime="20201112 09:43:59.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.865" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.864" endtime="20201112 09:43:59.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.867" level="INFO">VALUE: [4.626299999999778e-05, 4.58329999999986e-05, 4.570799999999847e-05, 4.5709000000001415e-05, 4.580599999999893e-05, 4.5416999999998986e-05, 4.6194999999998876e-05, 4.548600000000083e-05, 4.6125000000001026e-05, 4.5889000000000346e-05, 4.61939999999994e-05, 4.634699999999867e-05, 4.6319000000003e-05, 4.594400000000262e-05, 4.548600000000083e-05, 4.599999999999743e-05, 4.601400000000047e-05, 4.545799999999822e-05, 4.5861000000001206e-05, 4.554199999999911e-05, 4.5902999999999916e-05, 4.55000000000004e-05, 4.5430999999998556e-05, 4.612499999999756e-05, 4.5902999999999916e-05, 4.5695000000001845e-05, 4.555600000000215e-05, 4.559800000000086e-05, 4.612499999999756e-05, 4.605600000000265e-05, 4.5416999999998986e-05, 4.6013000000001e-05, 4.552700000000007e-05, 4.56939999999989e-05, 4.617999999999983e-05, 4.627799999999682e-05, 4.5847000000001636e-05, 4.630499999999996e-05, 4.604199999999961e-05, 4.622199999999854e-05, 4.63329999999991e-05, 4.5902999999999916e-05, 4.623600000000158e-05, 4.5902999999999916e-05, 4.607000000000222e-05, 4.576400000000022e-05, 4.583400000000154e-05, 4.573599999999761e-05, 4.609799999999789e-05, 4.604199999999961e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.866" endtime="20201112 09:43:59.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.861" endtime="20201112 09:43:59.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.871" endtime="20201112 09:43:59.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.874" endtime="20201112 09:43:59.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.872" endtime="20201112 09:43:59.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.869" endtime="20201112 09:43:59.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.500" endtime="20201112 09:43:59.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.500" endtime="20201112 09:43:59.895"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.903" endtime="20201112 09:43:59.921"></status>
</kw>
<msg timestamp="20201112 09:43:59.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.902" endtime="20201112 09:43:59.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.922" endtime="20201112 09:43:59.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.925" endtime="20201112 09:43:59.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.899" endtime="20201112 09:43:59.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.897" endtime="20201112 09:43:59.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.935" endtime="20201112 09:44:00.221"></status>
</kw>
<msg timestamp="20201112 09:44:00.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.933" endtime="20201112 09:44:00.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.231" endtime="20201112 09:44:00.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.249" endtime="20201112 09:44:00.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.931" endtime="20201112 09:44:00.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.929" endtime="20201112 09:44:00.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.264" level="INFO">${RESULT} = [{'time': 0.020335264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722199999999954e-05, 'source_diff': 4.722199999999954e-05}, {'time': 0.020394319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:00.256" endtime="20201112 09:44:00.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.293" level="INFO">${ACCURACY} = {'time': [0.020335264, 0.020394319, 0.020449292, 0.020502292, 0.020558306, 0.020617306, 0.020671333, 0.020730319, 0.020790347, 0.020846347, 0.020903333, 0.020958389, 0.021015417, 0.021073375, 0.021128...</msg>
<status status="PASS" starttime="20201112 09:44:00.266" endtime="20201112 09:44:00.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.303" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.301" endtime="20201112 09:44:00.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.308" level="INFO">VALUE: [4.722199999999954e-05, 4.7125000000002026e-05, 4.7223000000002485e-05, 4.708399999999932e-05, 4.655599999999968e-05, 4.7013999999998e-05, 4.734699999999967e-05, 4.731900000000053e-05, 4.698600000000233e-05, 4.6625000000001526e-05, 4.644399999999965e-05, 4.645799999999922e-05, 4.6639000000001096e-05, 4.679199999999689e-05, 4.687499999999831e-05, 4.71940000000004e-05, 4.648600000000183e-05, 4.672199999999904e-05, 4.712499999999856e-05, 4.672200000000251e-05, 4.737499999999881e-05, 4.725000000000215e-05, 4.6986999999998336e-05, 4.723599999999911e-05, 4.736099999999924e-05, 4.736200000000218e-05, 4.691599999999754e-05, 4.684699999999917e-05, 4.6861000000002206e-05, 4.726399999999825e-05, 4.6667000000000236e-05, 4.691600000000101e-05, 4.7013999999998e-05, 4.7181000000000306e-05, 4.725000000000215e-05, 4.7153000000001166e-05, 4.656999999999925e-05, 4.647199999999879e-05, 4.683399999999907e-05, 4.7195000000003345e-05, 4.740299999999795e-05, 4.65269999999976e-05, 4.698599999999886e-05, 4.6875000000001776e-05, 4.66939999999999e-05, 4.705600000000018e-05, 4.729100000000139e-05, 4.66939999999999e-05, 4.737499999999881e-05, 4.729100000000139e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.305" endtime="20201112 09:44:00.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.295" endtime="20201112 09:44:00.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.315" endtime="20201112 09:44:00.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.320" endtime="20201112 09:44:00.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.318" endtime="20201112 09:44:00.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.312" endtime="20201112 09:44:00.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.896" endtime="20201112 09:44:00.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.895" endtime="20201112 09:44:00.341"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.350" endtime="20201112 09:44:00.366"></status>
</kw>
<msg timestamp="20201112 09:44:00.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.348" endtime="20201112 09:44:00.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.368" endtime="20201112 09:44:00.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.370" endtime="20201112 09:44:00.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.346" endtime="20201112 09:44:00.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.343" endtime="20201112 09:44:00.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.381" endtime="20201112 09:44:00.668"></status>
</kw>
<msg timestamp="20201112 09:44:00.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.380" endtime="20201112 09:44:00.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.672" endtime="20201112 09:44:00.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.680" endtime="20201112 09:44:00.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.377" endtime="20201112 09:44:00.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.375" endtime="20201112 09:44:00.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.687" level="INFO">${RESULT} = [{'time': 0.019738208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.794400000000115e-05, 'source_diff': 4.794400000000115e-05}, {'time': 0.019792222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:00.683" endtime="20201112 09:44:00.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.700" level="INFO">${ACCURACY} = {'time': [0.019738208, 0.019792222, 0.019848208, 0.019903222, 0.019961236, 0.020018236, 0.020076236, 0.020137236, 0.02019125, 0.020251278, 0.020306264, 0.020362264, 0.020418278, 0.020473278, 0.0205272...</msg>
<status status="PASS" starttime="20201112 09:44:00.688" endtime="20201112 09:44:00.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.704" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.703" endtime="20201112 09:44:00.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.707" level="INFO">VALUE: [4.794400000000115e-05, 4.7625000000002526e-05, 4.836100000000024e-05, 4.768000000000133e-05, 4.793000000000158e-05, 4.812499999999956e-05, 4.7917000000001486e-05, 4.805499999999824e-05, 4.754200000000111e-05, 4.786099999999974e-05, 4.776400000000222e-05, 4.770800000000047e-05, 4.8125000000003026e-05, 4.808400000000032e-05, 4.786099999999974e-05, 4.7639000000002096e-05, 4.75139999999985e-05, 4.794400000000115e-05, 4.758300000000035e-05, 4.790199999999897e-05, 4.834700000000067e-05, 4.756900000000078e-05, 4.752800000000154e-05, 4.817999999999836e-05, 4.811099999999999e-05, 4.776399999999875e-05, 4.830499999999849e-05, 4.812499999999956e-05, 4.838899999999938e-05, 4.811099999999999e-05, 4.7903000000001916e-05, 4.768099999999734e-05, 4.784799999999964e-05, 4.787499999999931e-05, 4.749999999999893e-05, 4.758299999999688e-05, 4.815200000000269e-05, 4.813799999999965e-05, 4.815200000000269e-05, 4.763800000000262e-05, 4.766600000000176e-05, 4.804099999999867e-05, 4.806899999999781e-05, 4.762499999999906e-05, 4.76940000000009e-05, 4.755500000000121e-05, 4.7944999999997157e-05, 4.827800000000229e-05, 4.806900000000128e-05, 4.783400000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.706" endtime="20201112 09:44:00.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.701" endtime="20201112 09:44:00.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.710" endtime="20201112 09:44:00.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.714" endtime="20201112 09:44:00.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.712" endtime="20201112 09:44:00.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.709" endtime="20201112 09:44:00.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.342" endtime="20201112 09:44:00.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.341" endtime="20201112 09:44:00.735"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.744" endtime="20201112 09:44:00.760"></status>
</kw>
<msg timestamp="20201112 09:44:00.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.742" endtime="20201112 09:44:00.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.762" endtime="20201112 09:44:00.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.764" endtime="20201112 09:44:00.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.740" endtime="20201112 09:44:00.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.737" endtime="20201112 09:44:00.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.774" endtime="20201112 09:44:01.060"></status>
</kw>
<msg timestamp="20201112 09:44:01.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.773" endtime="20201112 09:44:01.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.064" endtime="20201112 09:44:01.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.072" endtime="20201112 09:44:01.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.770" endtime="20201112 09:44:01.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.769" endtime="20201112 09:44:01.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.079" level="INFO">${RESULT} = [{'time': 0.020334264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.872200000000104e-05, 'source_diff': 4.872200000000104e-05}, {'time': 0.020390194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.075" endtime="20201112 09:44:01.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.092" level="INFO">${ACCURACY} = {'time': [0.020334264, 0.020390194, 0.020448208, 0.020504222, 0.020563292, 0.020621236, 0.020681236, 0.020739236, 0.02079625, 0.020856278, 0.020914278, 0.020976278, 0.021031264, 0.021092278, 0.0211483...</msg>
<status status="PASS" starttime="20201112 09:44:01.080" endtime="20201112 09:44:01.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.097" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.096" endtime="20201112 09:44:01.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.099" level="INFO">VALUE: [4.872200000000104e-05, 4.843000000000208e-05, 4.876399999999975e-05, 4.93469999999982e-05, 4.907000000000175e-05, 4.8917000000002486e-05, 4.861099999999702e-05, 4.844400000000165e-05, 4.836100000000024e-05, 4.936099999999777e-05, 4.847200000000079e-05, 4.933400000000157e-05, 4.927799999999982e-05, 4.859699999999745e-05, 4.888899999999988e-05, 4.855599999999821e-05, 4.916699999999927e-05, 4.863899999999963e-05, 4.937500000000081e-05, 4.919399999999893e-05, 4.927700000000035e-05, 4.85139999999995e-05, 4.842999999999861e-05, 4.887500000000031e-05, 4.844400000000165e-05, 4.934700000000167e-05, 4.9014e-05, 4.876399999999975e-05, 4.913900000000013e-05, 4.897199999999782e-05, 4.862500000000006e-05, 4.8945000000001626e-05, 4.926400000000025e-05, 4.8459000000000696e-05, 4.883400000000107e-05, 4.83879999999999e-05, 4.840299999999895e-05, 4.881900000000203e-05, 4.926300000000078e-05, 4.924999999999721e-05, 4.88469999999977e-05, 4.855499999999874e-05, 4.900000000000043e-05, 4.906900000000228e-05, 4.848600000000036e-05, 4.91529999999997e-05, 4.877799999999932e-05, 4.918099999999884e-05, 4.855600000000168e-05, 4.9320000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.098" endtime="20201112 09:44:01.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.093" endtime="20201112 09:44:01.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.103" endtime="20201112 09:44:01.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.106" endtime="20201112 09:44:01.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.104" endtime="20201112 09:44:01.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.101" endtime="20201112 09:44:01.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.736" endtime="20201112 09:44:01.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.735" endtime="20201112 09:44:01.127"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.136" endtime="20201112 09:44:01.153"></status>
</kw>
<msg timestamp="20201112 09:44:01.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.134" endtime="20201112 09:44:01.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.155" endtime="20201112 09:44:01.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.157" endtime="20201112 09:44:01.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.131" endtime="20201112 09:44:01.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.129" endtime="20201112 09:44:01.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.167" endtime="20201112 09:44:01.452"></status>
</kw>
<msg timestamp="20201112 09:44:01.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.166" endtime="20201112 09:44:01.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.457" endtime="20201112 09:44:01.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.465" endtime="20201112 09:44:01.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.163" endtime="20201112 09:44:01.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.161" endtime="20201112 09:44:01.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.472" level="INFO">${RESULT} = [{'time': 0.019792833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.942999999999961e-05, 'source_diff': 4.942999999999961e-05}, {'time': 0.019849819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.468" endtime="20201112 09:44:01.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.485" level="INFO">${ACCURACY} = {'time': [0.019792833, 0.019849819, 0.019912847, 0.019968833, 0.020027889, 0.020089861, 0.020146875, 0.020206875, 0.020264889, 0.020327903, 0.020384889, 0.020447903, 0.020508903, 0.020569903, 0.020632...</msg>
<status status="PASS" starttime="20201112 09:44:01.473" endtime="20201112 09:44:01.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.490" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.489" endtime="20201112 09:44:01.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.492" level="INFO">VALUE: [4.942999999999961e-05, 5.012500000000156e-05, 4.995799999999925e-05, 4.955499999999974e-05, 5.027800000000082e-05, 5.033299999999963e-05, 4.984700000000217e-05, 4.969399999999943e-05, 4.9431000000002556e-05, 4.991700000000002e-05, 5.008299999999938e-05, 4.988900000000088e-05, 4.995899999999873e-05, 4.963900000000063e-05, 4.987500000000131e-05, 4.962500000000106e-05, 5.002699999999763e-05, 4.987500000000131e-05, 4.987499999999784e-05, 5.026400000000125e-05, 4.977700000000085e-05, 4.981899999999956e-05, 4.954199999999964e-05, 4.977800000000032e-05, 4.959700000000192e-05, 4.972200000000204e-05, 4.98330000000026e-05, 5.02079999999995e-05, 4.95140000000005e-05, 4.962500000000106e-05, 5.037500000000181e-05, 5.030599999999996e-05, 4.991700000000002e-05, 4.948599999999789e-05, 4.998599999999839e-05, 5.03339999999991e-05, 5.030500000000049e-05, 4.991600000000054e-05, 4.954100000000017e-05, 5.029100000000092e-05, 5.011100000000199e-05, 4.96530000000002e-05, 5.004200000000014e-05, 4.981999999999903e-05, 4.948600000000136e-05, 5.012499999999809e-05, 4.943099999999909e-05, 5.033299999999963e-05, 5.018099999999984e-05, 5.005599999999971e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.491" endtime="20201112 09:44:01.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.486" endtime="20201112 09:44:01.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.496" endtime="20201112 09:44:01.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.499" endtime="20201112 09:44:01.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.498" endtime="20201112 09:44:01.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.494" endtime="20201112 09:44:01.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.128" endtime="20201112 09:44:01.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.127" endtime="20201112 09:44:01.520"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.528" endtime="20201112 09:44:01.545"></status>
</kw>
<msg timestamp="20201112 09:44:01.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.527" endtime="20201112 09:44:01.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.546" endtime="20201112 09:44:01.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.549" endtime="20201112 09:44:01.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.524" endtime="20201112 09:44:01.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.522" endtime="20201112 09:44:01.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.559" endtime="20201112 09:44:01.846"></status>
</kw>
<msg timestamp="20201112 09:44:01.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.557" endtime="20201112 09:44:01.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.850" endtime="20201112 09:44:01.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.858" endtime="20201112 09:44:01.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.554" endtime="20201112 09:44:01.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.553" endtime="20201112 09:44:01.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.865" level="INFO">${RESULT} = [{'time': 0.019558222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.091600000000154e-05, 'source_diff': 5.091600000000154e-05}, {'time': 0.01961725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:01.862" endtime="20201112 09:44:01.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.879" level="INFO">${ACCURACY} = {'time': [0.019558222, 0.01961725, 0.01967725, 0.019737264, 0.01979725, 0.019855264, 0.019918264, 0.019978278, 0.020036278, 0.020097278, 0.020157333, 0.020215292, 0.020272306, 0.020335319, 0.020399333...</msg>
<status status="PASS" starttime="20201112 09:44:01.866" endtime="20201112 09:44:01.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.883" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.882" endtime="20201112 09:44:01.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.886" level="INFO">VALUE: [5.091600000000154e-05, 5.112499999999909e-05, 5.069400000000043e-05, 5.091700000000102e-05, 5.0943999999997214e-05, 5.138900000000238e-05, 5.100000000000243e-05, 5.124999999999921e-05, 5.058400000000282e-05, 5.051399999999803e-05, 5.051399999999803e-05, 5.076399999999828e-05, 5.056999999999978e-05, 5.075000000000218e-05, 5.113899999999866e-05, 5.047199999999932e-05, 5.076400000000175e-05, 5.111099999999952e-05, 5.141699999999805e-05, 5.097199999999982e-05, 5.051399999999803e-05, 5.087500000000231e-05, 5.084700000000317e-05, 5.094500000000016e-05, 5.056999999999978e-05, 5.134799999999967e-05, 5.069499999999991e-05, 5.112499999999909e-05, 5.136200000000271e-05, 5.109799999999942e-05, 5.084799999999917e-05, 5.045799999999975e-05, 5.061099999999902e-05, 5.054100000000117e-05, 5.069400000000043e-05, 5.037500000000181e-05, 5.080500000000099e-05, 5.122299999999955e-05, 5.127799999999835e-05, 5.099999999999896e-05, 5.122200000000007e-05, 5.044499999999966e-05, 5.06530000000012e-05, 5.09729999999993e-05, 5.090300000000145e-05, 5.104199999999767e-05, 5.141699999999805e-05, 5.093100000000059e-05, 5.112499999999909e-05, 5.056999999999978e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.884" endtime="20201112 09:44:01.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.880" endtime="20201112 09:44:01.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.889" endtime="20201112 09:44:01.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.893" endtime="20201112 09:44:01.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.891" endtime="20201112 09:44:01.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.888" endtime="20201112 09:44:01.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.521" endtime="20201112 09:44:01.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.520" endtime="20201112 09:44:01.914"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.922" endtime="20201112 09:44:01.940"></status>
</kw>
<msg timestamp="20201112 09:44:01.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.921" endtime="20201112 09:44:01.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.942" endtime="20201112 09:44:01.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.944" endtime="20201112 09:44:01.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.918" endtime="20201112 09:44:01.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.916" endtime="20201112 09:44:01.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.955" endtime="20201112 09:44:02.241"></status>
</kw>
<msg timestamp="20201112 09:44:02.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.954" endtime="20201112 09:44:02.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.245" endtime="20201112 09:44:02.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.254" endtime="20201112 09:44:02.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.951" endtime="20201112 09:44:02.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.949" endtime="20201112 09:44:02.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.260" level="INFO">${RESULT} = [{'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.226399999999978e-05, 'source_diff': 5.226399999999978e-05}, {'time': 0.01988525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:02.257" endtime="20201112 09:44:02.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.274" level="INFO">${ACCURACY} = {'time': [0.019824292, 0.01988525, 0.019943222, 0.02000325, 0.02006225, 0.020126278, 0.020184264, 0.020249278, 0.020308278, 0.020370292, 0.020434361, 0.020493306, 0.020551292, 0.020612306, 0.020674333...</msg>
<status status="PASS" starttime="20201112 09:44:02.261" endtime="20201112 09:44:02.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.278" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.277" endtime="20201112 09:44:02.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.281" level="INFO">VALUE: [5.226399999999978e-05, 5.149999999999946e-05, 5.225000000000021e-05, 5.230599999999849e-05, 5.161100000000002e-05, 5.209700000000095e-05, 5.180600000000146e-05, 5.215299999999923e-05, 5.213899999999966e-05, 5.158400000000035e-05, 5.208300000000138e-05, 5.191699999999855e-05, 5.177799999999885e-05, 5.169500000000091e-05, 5.2179999999998894e-05, 5.237500000000034e-05, 5.183300000000113e-05, 5.2151999999999754e-05, 5.213899999999966e-05, 5.199999999999996e-05, 5.229199999999892e-05, 5.199999999999996e-05, 5.156899999999784e-05, 5.144500000000066e-05, 5.157000000000078e-05, 5.219500000000141e-05, 5.237500000000034e-05, 5.213899999999966e-05, 5.201399999999953e-05, 5.237500000000034e-05, 5.194500000000116e-05, 5.20409999999992e-05, 5.2207999999998034e-05, 5.1708000000001e-05, 5.161100000000002e-05, 5.163899999999916e-05, 5.198600000000039e-05, 5.158299999999741e-05, 5.229200000000239e-05, 5.202800000000257e-05, 5.223600000000064e-05, 5.169500000000091e-05, 5.141699999999805e-05, 5.182000000000103e-05, 5.191700000000202e-05, 5.240299999999948e-05, 5.169500000000091e-05, 5.207000000000128e-05, 5.197200000000082e-05, 5.151300000000303e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.279" endtime="20201112 09:44:02.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.275" endtime="20201112 09:44:02.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.284" endtime="20201112 09:44:02.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.288" endtime="20201112 09:44:02.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.286" endtime="20201112 09:44:02.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.283" endtime="20201112 09:44:02.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.915" endtime="20201112 09:44:02.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.914" endtime="20201112 09:44:02.309"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.317" endtime="20201112 09:44:02.335"></status>
</kw>
<msg timestamp="20201112 09:44:02.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.316" endtime="20201112 09:44:02.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.336" endtime="20201112 09:44:02.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.339" endtime="20201112 09:44:02.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.313" endtime="20201112 09:44:02.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.311" endtime="20201112 09:44:02.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.349" endtime="20201112 09:44:02.634"></status>
</kw>
<msg timestamp="20201112 09:44:02.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.347" endtime="20201112 09:44:02.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.638" endtime="20201112 09:44:02.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.647" endtime="20201112 09:44:02.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.345" endtime="20201112 09:44:02.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.343" endtime="20201112 09:44:02.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.654" level="INFO">${RESULT} = [{'time': 0.019905931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.286200000000074e-05, 'source_diff': 5.286200000000074e-05}, {'time': 0.019970931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.650" endtime="20201112 09:44:02.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.667" level="INFO">${ACCURACY} = {'time': [0.019905931, 0.019970931, 0.020035958, 0.020098931, 0.020159944, 0.020224944, 0.020288958, 0.020348986, 0.020410972, 0.020470972, 0.020534986, 0.0206, 0.020665014, 0.020724, 0.020787028, 0.0...</msg>
<status status="PASS" starttime="20201112 09:44:02.655" endtime="20201112 09:44:02.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.672" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.671" endtime="20201112 09:44:02.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.674" level="INFO">VALUE: [5.286200000000074e-05, 5.331999999999906e-05, 5.329100000000045e-05, 5.337500000000134e-05, 5.3193999999999464e-05, 5.330500000000002e-05, 5.28609999999978e-05, 5.334699999999873e-05, 5.2929999999999644e-05, 5.244400000000218e-05, 5.287500000000084e-05, 5.301400000000053e-05, 5.340300000000048e-05, 5.2457999999998284e-05, 5.2999999999997494e-05, 5.26669999999993e-05, 5.284800000000117e-05, 5.306899999999934e-05, 5.306999999999881e-05, 5.270900000000148e-05, 5.240299999999948e-05, 5.3166000000000324e-05, 5.284699999999823e-05, 5.305599999999924e-05, 5.2721999999998104e-05, 5.256899999999884e-05, 5.336100000000177e-05, 5.255500000000274e-05, 5.305499999999977e-05, 5.28470000000017e-05, 5.284699999999823e-05, 5.287500000000084e-05, 5.312499999999762e-05, 5.272300000000105e-05, 5.325000000000121e-05, 5.238899999999991e-05, 5.280599999999899e-05, 5.3179999999999894e-05, 5.315300000000023e-05, 5.3138000000001184e-05, 5.2652000000000254e-05, 5.2708000000002e-05, 5.255499999999927e-05, 5.244400000000218e-05, 5.284699999999823e-05, 5.31669999999998e-05, 5.327800000000035e-05, 5.250000000000046e-05, 5.279199999999942e-05, 5.312499999999762e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.673" endtime="20201112 09:44:02.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.668" endtime="20201112 09:44:02.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.678" endtime="20201112 09:44:02.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.681" endtime="20201112 09:44:02.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.680" endtime="20201112 09:44:02.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.676" endtime="20201112 09:44:02.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.310" endtime="20201112 09:44:02.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.309" endtime="20201112 09:44:02.702"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.711" endtime="20201112 09:44:02.727"></status>
</kw>
<msg timestamp="20201112 09:44:02.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.709" endtime="20201112 09:44:02.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.729" endtime="20201112 09:44:02.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.731" endtime="20201112 09:44:02.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.707" endtime="20201112 09:44:02.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.705" endtime="20201112 09:44:02.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.741" endtime="20201112 09:44:03.027"></status>
</kw>
<msg timestamp="20201112 09:44:03.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.740" endtime="20201112 09:44:03.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.031" endtime="20201112 09:44:03.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.039" endtime="20201112 09:44:03.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.737" endtime="20201112 09:44:03.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.735" endtime="20201112 09:44:03.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.046" level="INFO">${RESULT} = [{'time': 0.020121861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.388900000000141e-05, 'source_diff': 5.388900000000141e-05}, {'time': 0.020185861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:03.043" endtime="20201112 09:44:03.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.060" level="INFO">${ACCURACY} = {'time': [0.020121861, 0.020185861, 0.020245903, 0.020308917, 0.020373889, 0.020436889, 0.020500931, 0.020563931, 0.020624931, 0.020688931, 0.020748931, 0.020809958, 0.020876944, 0.020939986, 0.021001...</msg>
<status status="PASS" starttime="20201112 09:44:03.047" endtime="20201112 09:44:03.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.064" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.063" endtime="20201112 09:44:03.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.067" level="INFO">VALUE: [5.388900000000141e-05, 5.358299999999941e-05, 5.406999999999981e-05, 5.3735999999998674e-05, 5.4249999999998744e-05, 5.351400000000103e-05, 5.401400000000153e-05, 5.375000000000171e-05, 5.3763999999997814e-05, 5.39730000000023e-05, 5.376400000000128e-05, 5.361099999999855e-05, 5.4138000000002184e-05, 5.3707999999999534e-05, 5.356899999999984e-05, 5.387500000000184e-05, 5.3707999999999534e-05, 5.4194000000000464e-05, 5.438900000000191e-05, 5.401400000000153e-05, 5.388899999999794e-05, 5.379200000000042e-05, 5.440299999999801e-05, 5.430500000000102e-05, 5.344500000000266e-05, 5.413899999999819e-05, 5.4249999999998744e-05, 5.408399999999938e-05, 5.434699999999973e-05, 5.3721999999999104e-05, 5.4180000000000894e-05, 5.362500000000159e-05, 5.43609999999993e-05, 5.440299999999801e-05, 5.431900000000059e-05, 5.357000000000278e-05, 5.381999999999956e-05, 5.341700000000005e-05, 5.3499999999997994e-05, 5.343099999999962e-05, 5.393100000000012e-05, 5.359800000000192e-05, 5.394499999999969e-05, 5.415300000000123e-05, 5.3985999999998924e-05, 5.436200000000224e-05, 5.3721999999999104e-05, 5.3694000000003433e-05, 5.408299999999991e-05, 5.434699999999973e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.065" endtime="20201112 09:44:03.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.060" endtime="20201112 09:44:03.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.070" endtime="20201112 09:44:03.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.074" endtime="20201112 09:44:03.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.072" endtime="20201112 09:44:03.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.069" endtime="20201112 09:44:03.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.703" endtime="20201112 09:44:03.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.702" endtime="20201112 09:44:03.095"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.103" endtime="20201112 09:44:03.120"></status>
</kw>
<msg timestamp="20201112 09:44:03.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.102" endtime="20201112 09:44:03.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.122" endtime="20201112 09:44:03.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.124" endtime="20201112 09:44:03.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.099" endtime="20201112 09:44:03.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.097" endtime="20201112 09:44:03.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.134" endtime="20201112 09:44:03.421"></status>
</kw>
<msg timestamp="20201112 09:44:03.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020484972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.133" endtime="20201112 09:44:03.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020484972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.425" endtime="20201112 09:44:03.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.434" endtime="20201112 09:44:03.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.130" endtime="20201112 09:44:03.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.129" endtime="20201112 09:44:03.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.440" level="INFO">${RESULT} = [{'time': 0.020484972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4985999999999924e-05, 'source_diff': 5.4985999999999924e-05}, {'time': 0.020551972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.437" endtime="20201112 09:44:03.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.454" level="INFO">${ACCURACY} = {'time': [0.020484972, 0.020551972, 0.020616986, 0.020678986, 0.020742986, 0.020807, 0.02087, 0.020932028, 0.020998056, 0.021059069, 0.021121042, 0.021189069, 0.021255042, 0.021322069, 0.021387083, 0....</msg>
<status status="PASS" starttime="20201112 09:44:03.441" endtime="20201112 09:44:03.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.458" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.457" endtime="20201112 09:44:03.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.461" level="INFO">VALUE: [5.4985999999999924e-05, 5.45410000000017e-05, 5.5236000000000174e-05, 5.538899999999944e-05, 5.48609999999998e-05, 5.51809999999979e-05, 5.463899999999869e-05, 5.534699999999726e-05, 5.459799999999945e-05, 5.461099999999955e-05, 5.483400000000013e-05, 5.530500000000202e-05, 5.534799999999673e-05, 5.4901999999999035e-05, 5.538900000000291e-05, 5.479100000000195e-05, 5.451299999999909e-05, 5.50280000000021e-05, 5.512499999999962e-05, 5.5221999999997134e-05, 5.5208000000001034e-05, 5.534699999999726e-05, 5.4749999999999244e-05, 5.4707999999997065e-05, 5.494500000000069e-05, 5.470900000000001e-05, 5.469500000000044e-05, 5.4999999999999494e-05, 5.4999999999999494e-05, 5.4763999999998814e-05, 5.520900000000051e-05, 5.49869999999994e-05, 5.512499999999962e-05, 5.456900000000084e-05, 5.511100000000005e-05, 5.506899999999787e-05, 5.5165999999998855e-05, 5.479200000000142e-05, 5.4735999999999674e-05, 5.529200000000192e-05, 5.462500000000259e-05, 5.494500000000069e-05, 5.508400000000038e-05, 5.509700000000048e-05, 5.452699999999866e-05, 5.536099999999683e-05, 5.537499999999987e-05, 5.513899999999919e-05, 5.457000000000031e-05, 5.4985999999999924e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.459" endtime="20201112 09:44:03.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.454" endtime="20201112 09:44:03.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.464" endtime="20201112 09:44:03.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.468" endtime="20201112 09:44:03.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.466" endtime="20201112 09:44:03.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.463" endtime="20201112 09:44:03.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.096" endtime="20201112 09:44:03.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.095" endtime="20201112 09:44:03.489"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.497" endtime="20201112 09:44:03.515"></status>
</kw>
<msg timestamp="20201112 09:44:03.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.496" endtime="20201112 09:44:03.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.516" endtime="20201112 09:44:03.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.519" endtime="20201112 09:44:03.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.493" endtime="20201112 09:44:03.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.491" endtime="20201112 09:44:03.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.530" endtime="20201112 09:44:03.816"></status>
</kw>
<msg timestamp="20201112 09:44:03.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020710319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.528" endtime="20201112 09:44:03.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020710319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.820" endtime="20201112 09:44:03.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.829" endtime="20201112 09:44:03.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.525" endtime="20201112 09:44:03.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.524" endtime="20201112 09:44:03.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.835" level="INFO">${RESULT} = [{'time': 0.020710319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.627700000000041e-05, 'source_diff': 5.627700000000041e-05}, {'time': 0.020779319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:03.832" endtime="20201112 09:44:03.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.892" level="INFO">${ACCURACY} = {'time': [0.020710319, 0.020779319, 0.020845333, 0.020911333, 0.020979375, 0.021043375, 0.021111375, 0.021175361, 0.021243389, 0.021309389, 0.021375417, 0.021438417, 0.021502444, 0.021565486, 0.021634...</msg>
<status status="PASS" starttime="20201112 09:44:03.836" endtime="20201112 09:44:03.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.897" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.896" endtime="20201112 09:44:03.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.900" level="INFO">VALUE: [5.627700000000041e-05, 5.637500000000087e-05, 5.5986000000000924e-05, 5.556900000000184e-05, 5.590300000000298e-05, 5.56809999999984e-05, 5.541700000000205e-05, 5.612500000000062e-05, 5.632000000000206e-05, 5.630600000000249e-05, 5.633400000000163e-05, 5.641699999999958e-05, 5.562500000000012e-05, 5.638899999999697e-05, 5.613900000000019e-05, 5.5805999999998523e-05, 5.5929999999999175e-05, 5.6152000000000285e-05, 5.5915999999999605e-05, 5.6235999999997704e-05, 5.608299999999844e-05, 5.641700000000305e-05, 5.5486000000000424e-05, 5.6236000000001174e-05, 5.63610000000013e-05, 5.559700000000098e-05, 5.605600000000224e-05, 5.6291999999999454e-05, 5.6236000000001174e-05, 5.584700000000123e-05, 5.611200000000052e-05, 5.5777999999999384e-05, 5.6221999999998135e-05, 5.587500000000037e-05, 5.561100000000055e-05, 5.5930000000002644e-05, 5.6000000000000494e-05, 5.5915999999999605e-05, 5.606899999999887e-05, 5.5763999999999814e-05, 5.6055999999998773e-05, 5.604200000000267e-05, 5.6207999999998565e-05, 5.6250000000000744e-05, 5.615299999999976e-05, 5.5513999999999564e-05, 5.569500000000144e-05, 5.5541999999998704e-05, 5.620900000000151e-05, 5.5943999999998745e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.898" endtime="20201112 09:44:03.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.893" endtime="20201112 09:44:03.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.904" endtime="20201112 09:44:03.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.907" endtime="20201112 09:44:03.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.906" endtime="20201112 09:44:03.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.902" endtime="20201112 09:44:03.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.490" endtime="20201112 09:44:03.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.489" endtime="20201112 09:44:03.928"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.937" endtime="20201112 09:44:03.953"></status>
</kw>
<msg timestamp="20201112 09:44:03.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.935" endtime="20201112 09:44:03.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.954" endtime="20201112 09:44:03.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.957" endtime="20201112 09:44:03.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.933" endtime="20201112 09:44:03.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.931" endtime="20201112 09:44:03.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.966" endtime="20201112 09:44:04.251"></status>
</kw>
<msg timestamp="20201112 09:44:04.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.964" endtime="20201112 09:44:04.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.255" endtime="20201112 09:44:04.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.263" endtime="20201112 09:44:04.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.962" endtime="20201112 09:44:04.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.960" endtime="20201112 09:44:04.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.270" level="INFO">${RESULT} = [{'time': 0.019733653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.695899999999879e-05, 'source_diff': 5.695899999999879e-05}, {'time': 0.019803639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:04.267" endtime="20201112 09:44:04.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.284" level="INFO">${ACCURACY} = {'time': [0.019733653, 0.019803639, 0.019869639, 0.019938667, 0.020001667, 0.020069667, 0.020135694, 0.020200694, 0.020269694, 0.020339694, 0.020405736, 0.020473722, 0.020537736, 0.020607736, 0.020672...</msg>
<status status="PASS" starttime="20201112 09:44:04.271" endtime="20201112 09:44:04.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.288" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.287" endtime="20201112 09:44:04.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.291" level="INFO">VALUE: [5.695899999999879e-05, 5.711100000000205e-05, 5.690300000000051e-05, 5.659800000000145e-05, 5.658400000000188e-05, 5.6999999999998024e-05, 5.7207999999999565e-05, 5.708300000000291e-05, 5.677700000000091e-05, 5.68749999999979e-05, 5.656899999999937e-05, 5.7264000000001314e-05, 5.662500000000112e-05, 5.680500000000005e-05, 5.693099999999965e-05, 5.688900000000094e-05, 5.7249999999998274e-05, 5.68610000000018e-05, 5.655600000000274e-05, 5.697299999999836e-05, 5.701300000000159e-05, 5.672299999999811e-05, 5.722299999999861e-05, 5.659800000000145e-05, 5.670900000000201e-05, 5.68610000000018e-05, 5.6429999999999675e-05, 5.6514000000000564e-05, 5.6555999999999274e-05, 5.6971999999998885e-05, 5.6541999999999704e-05, 5.73749999999984e-05, 5.713900000000119e-05, 5.6471999999998385e-05, 5.658300000000241e-05, 5.715300000000076e-05, 5.661099999999808e-05, 5.736099999999883e-05, 5.719499999999947e-05, 5.7221999999999135e-05, 5.6500000000000994e-05, 5.7207999999999565e-05, 5.6722000000002104e-05, 5.658300000000241e-05, 5.7014000000001064e-05, 5.6986000000001924e-05, 5.7027999999997164e-05, 5.6721999999998635e-05, 5.7193999999999995e-05, 5.740300000000101e-05]</msg>
<status status="PASS" starttime="20201112 09:44:04.290" endtime="20201112 09:44:04.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.285" endtime="20201112 09:44:04.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.301" endtime="20201112 09:44:04.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.304" endtime="20201112 09:44:04.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.303" endtime="20201112 09:44:04.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.299" endtime="20201112 09:44:04.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.929" endtime="20201112 09:44:04.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.928" endtime="20201112 09:44:04.325"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.334" endtime="20201112 09:44:04.350"></status>
</kw>
<msg timestamp="20201112 09:44:04.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.332" endtime="20201112 09:44:04.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.351" endtime="20201112 09:44:04.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.354" endtime="20201112 09:44:04.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.330" endtime="20201112 09:44:04.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.328" endtime="20201112 09:44:04.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.363" endtime="20201112 09:44:04.648"></status>
</kw>
<msg timestamp="20201112 09:44:04.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.361" endtime="20201112 09:44:04.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.653" endtime="20201112 09:44:04.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.661" endtime="20201112 09:44:04.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.359" endtime="20201112 09:44:04.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.357" endtime="20201112 09:44:04.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.668" level="INFO">${RESULT} = [{'time': 0.019820931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.822299999999961e-05, 'source_diff': 5.822299999999961e-05}, {'time': 0.019885944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:04.665" endtime="20201112 09:44:04.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.681" level="INFO">${ACCURACY} = {'time': [0.019820931, 0.019885944, 0.019954958, 0.020022958, 0.020093028, 0.020162, 0.020227972, 0.020295986, 0.02036, 0.020426014, 0.020494, 0.020559069, 0.020627042, 0.020697056, 0.020762056, 0.020...</msg>
<status status="PASS" starttime="20201112 09:44:04.669" endtime="20201112 09:44:04.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.686" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.685" endtime="20201112 09:44:04.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.688" level="INFO">VALUE: [5.822299999999961e-05, 5.8401999999999066e-05, 5.8193999999997525e-05, 5.752700000000166e-05, 5.813899999999872e-05, 5.8056000000000774e-05, 5.788900000000194e-05, 5.7471999999999385e-05, 5.836099999999983e-05, 5.811099999999958e-05, 5.762499999999865e-05, 5.7485999999998955e-05, 5.759800000000245e-05, 5.794499999999675e-05, 5.8320000000000594e-05, 5.8347999999999733e-05, 5.762500000000212e-05, 5.798699999999893e-05, 5.8137999999999246e-05, 5.780499999999758e-05, 5.787500000000237e-05, 5.834700000000026e-05, 5.7485999999998955e-05, 5.833300000000069e-05, 5.8319999999997124e-05, 5.8292000000001454e-05, 5.790300000000151e-05, 5.7735999999999205e-05, 5.766699999999736e-05, 5.7556000000000274e-05, 5.744499999999972e-05, 5.8042000000001204e-05, 5.811099999999958e-05, 5.763899999999822e-05, 5.7471999999999385e-05, 5.7750000000002244e-05, 5.8028000000001634e-05, 5.78749999999989e-05, 5.8277999999998414e-05, 5.784699999999976e-05, 5.841699999999811e-05, 5.766699999999736e-05, 5.815299999999829e-05, 5.8028000000001634e-05, 5.7971999999999885e-05, 5.8222000000000135e-05, 5.7777999999997914e-05, 5.763900000000169e-05, 5.794500000000022e-05, 5.813900000000219e-05]</msg>
<status status="PASS" starttime="20201112 09:44:04.687" endtime="20201112 09:44:04.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.682" endtime="20201112 09:44:04.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.692" endtime="20201112 09:44:04.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.696" endtime="20201112 09:44:04.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.694" endtime="20201112 09:44:04.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.690" endtime="20201112 09:44:04.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.326" endtime="20201112 09:44:04.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.325" endtime="20201112 09:44:04.717"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.725" endtime="20201112 09:44:04.743"></status>
</kw>
<msg timestamp="20201112 09:44:04.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.724" endtime="20201112 09:44:04.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.744" endtime="20201112 09:44:04.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.747" endtime="20201112 09:44:04.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.721" endtime="20201112 09:44:04.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.719" endtime="20201112 09:44:04.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.756" endtime="20201112 09:44:05.043"></status>
</kw>
<msg timestamp="20201112 09:44:05.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020565625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.754" endtime="20201112 09:44:05.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020565625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.047" endtime="20201112 09:44:05.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.056" endtime="20201112 09:44:05.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.752" endtime="20201112 09:44:05.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.750" endtime="20201112 09:44:05.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.062" level="INFO">${RESULT} = [{'time': 0.020624292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.866699999999836e-05, 'source_diff': 5.866699999999836e-05}, {'time': 0.020693292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.059" endtime="20201112 09:44:05.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.076" level="INFO">${ACCURACY} = {'time': [0.020624292, 0.020693292, 0.020765319, 0.020836319, 0.020901333, 0.020970319, 0.021042347, 0.021110431, 0.021176347, 0.021245347, 0.021316361, 0.021387375, 0.021453375, 0.021522389, 0.021588...</msg>
<status status="PASS" starttime="20201112 09:44:05.063" endtime="20201112 09:44:05.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.080" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.079" endtime="20201112 09:44:05.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.083" level="INFO">VALUE: [5.866699999999836e-05, 5.8597999999999983e-05, 5.8986000000000455e-05, 5.854099999999876e-05, 5.906900000000187e-05, 5.93750000000004e-05, 5.93750000000004e-05, 5.9347999999997264e-05, 5.908300000000144e-05, 5.8514000000002564e-05, 5.8929999999998706e-05, 5.888899999999947e-05, 5.908300000000144e-05, 5.9305999999998554e-05, 5.9333999999997694e-05, 5.915299999999929e-05, 5.929099999999951e-05, 5.844499999999725e-05, 5.897300000000036e-05, 5.927699999999994e-05, 5.8736000000000205e-05, 5.906900000000187e-05, 5.861100000000008e-05, 5.8749999999999775e-05, 5.879099999999901e-05, 5.9207999999998095e-05, 5.912500000000015e-05, 5.884699999999729e-05, 5.891700000000208e-05, 5.933300000000169e-05, 5.86810000000014e-05, 5.919500000000147e-05, 5.8834000000000664e-05, 5.85689999999979e-05, 5.933300000000169e-05, 5.865299999999879e-05, 5.931900000000212e-05, 5.9429999999999206e-05, 5.929099999999951e-05, 5.8986000000000455e-05, 5.929099999999951e-05, 5.883300000000119e-05, 5.9028000000002634e-05, 5.869500000000097e-05, 5.909700000000101e-05, 5.93750000000004e-05, 5.904099999999926e-05, 5.8541999999998234e-05, 5.8750000000003244e-05, 5.872300000000011e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.081" endtime="20201112 09:44:05.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.077" endtime="20201112 09:44:05.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.086" endtime="20201112 09:44:05.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.090" endtime="20201112 09:44:05.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.088" endtime="20201112 09:44:05.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.085" endtime="20201112 09:44:05.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.717" endtime="20201112 09:44:05.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.717" endtime="20201112 09:44:05.111"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.119" endtime="20201112 09:44:05.136"></status>
</kw>
<msg timestamp="20201112 09:44:05.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.118" endtime="20201112 09:44:05.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.138" endtime="20201112 09:44:05.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.140" endtime="20201112 09:44:05.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.115" endtime="20201112 09:44:05.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.113" endtime="20201112 09:44:05.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.149" endtime="20201112 09:44:05.436"></status>
</kw>
<msg timestamp="20201112 09:44:05.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.148" endtime="20201112 09:44:05.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.440" endtime="20201112 09:44:05.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.449" endtime="20201112 09:44:05.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.145" endtime="20201112 09:44:05.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.143" endtime="20201112 09:44:05.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.456" level="INFO">${RESULT} = [{'time': 0.019780347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9443999999998776e-05, 'source_diff': 5.9443999999998776e-05}, {'time': 0.019851347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:05.452" endtime="20201112 09:44:05.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.469" level="INFO">${ACCURACY} = {'time': [0.019780347, 0.019851347, 0.019919347, 0.019986403, 0.020053375, 0.020126375, 0.020194375, 0.020264389, 0.020336403, 0.020405417, 0.020476417, 0.020543431, 0.020612444, 0.020678444, 0.020745...</msg>
<status status="PASS" starttime="20201112 09:44:05.457" endtime="20201112 09:44:05.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.474" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.473" endtime="20201112 09:44:05.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.476" level="INFO">VALUE: [5.9443999999998776e-05, 6.005499999999983e-05, 5.9415999999999636e-05, 5.9541999999999234e-05, 6.0249999999997805e-05, 6.0193999999999526e-05, 5.959700000000151e-05, 6.0278000000000415e-05, 6.0291999999999984e-05, 5.9527999999999665e-05, 5.970900000000154e-05, 6.041700000000011e-05, 5.9943999999999276e-05, 6.036100000000183e-05, 6.031899999999965e-05, 6.0250000000001275e-05, 5.9430000000002675e-05, 5.9415999999999636e-05, 5.9736000000001205e-05, 5.970900000000154e-05, 5.991699999999961e-05, 6.03750000000014e-05, 5.943099999999868e-05, 6.0194999999999e-05, 6.038900000000097e-05, 5.994500000000222e-05, 5.9707999999998596e-05, 6.0014000000000595e-05, 6.012499999999768e-05, 5.9999999999997555e-05, 6.0305999999999554e-05, 6.0055999999999304e-05, 5.986100000000133e-05, 6.030500000000008e-05, 6.013899999999725e-05, 5.994499999999875e-05, 5.959699999999804e-05, 5.961100000000108e-05, 5.9514000000000095e-05, 6.0207999999999096e-05, 5.966699999999936e-05, 6.0000000000001025e-05, 6.005499999999983e-05, 6.0305999999999554e-05, 5.9471999999997915e-05, 6.0236000000001705e-05, 5.9888999999997e-05, 5.9916000000000136e-05, 5.9472000000001385e-05, 6.043099999999968e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.475" endtime="20201112 09:44:05.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.470" endtime="20201112 09:44:05.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.480" endtime="20201112 09:44:05.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.483" endtime="20201112 09:44:05.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.482" endtime="20201112 09:44:05.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.478" endtime="20201112 09:44:05.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.112" endtime="20201112 09:44:05.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.111" endtime="20201112 09:44:05.504"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.513" endtime="20201112 09:44:05.530"></status>
</kw>
<msg timestamp="20201112 09:44:05.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.511" endtime="20201112 09:44:05.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.531" endtime="20201112 09:44:05.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.534" endtime="20201112 09:44:05.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.509" endtime="20201112 09:44:05.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.507" endtime="20201112 09:44:05.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.543" endtime="20201112 09:44:05.828"></status>
</kw>
<msg timestamp="20201112 09:44:05.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.541" endtime="20201112 09:44:05.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.832" endtime="20201112 09:44:05.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.841" endtime="20201112 09:44:05.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.539" endtime="20201112 09:44:05.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.537" endtime="20201112 09:44:05.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.848" level="INFO">${RESULT} = [{'time': 0.019728097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.119400000000053e-05, 'source_diff': 6.119400000000053e-05}, {'time': 0.019799083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.844" endtime="20201112 09:44:05.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.861" level="INFO">${ACCURACY} = {'time': [0.019728097, 0.019799083, 0.019871111, 0.019943097, 0.020010181, 0.020079125, 0.020149139, 0.020217153, 0.020287139, 0.020357167, 0.020430153, 0.020498181, 0.020571208, 0.020644181, 0.020711...</msg>
<status status="PASS" starttime="20201112 09:44:05.849" endtime="20201112 09:44:05.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.865" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.864" endtime="20201112 09:44:05.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.868" level="INFO">VALUE: [6.119400000000053e-05, 6.105499999999736e-05, 6.109699999999954e-05, 6.086099999999886e-05, 6.093099999999671e-05, 6.0499999999998055e-05, 6.0457999999999346e-05, 6.069500000000297e-05, 6.0457999999999346e-05, 6.044499999999925e-05, 6.0763999999997875e-05, 6.0750000000001775e-05, 6.140200000000207e-05, 6.0848000000002234e-05, 6.12499999999988e-05, 6.0708000000003065e-05, 6.113899999999825e-05, 6.05689999999999e-05, 6.106999999999987e-05, 6.0958000000003315e-05, 6.0721999999999166e-05, 6.093100000000018e-05, 6.106999999999987e-05, 6.0555999999999804e-05, 6.1028000000001165e-05, 6.109699999999954e-05, 6.0528000000000665e-05, 6.0694000000000026e-05, 6.123599999999924e-05, 6.116700000000086e-05, 6.12080000000001e-05, 6.111100000000258e-05, 6.0721999999999166e-05, 6.093100000000018e-05, 6.130499999999761e-05, 6.113899999999825e-05, 6.063899999999775e-05, 6.123599999999924e-05, 6.0971999999999416e-05, 6.138900000000197e-05, 6.087499999999843e-05, 6.116700000000086e-05, 6.134799999999926e-05, 6.097300000000236e-05, 6.138900000000197e-05, 6.105500000000083e-05, 6.0486000000001955e-05, 6.088900000000147e-05, 6.0986000000002455e-05, 6.0514000000001095e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.866" endtime="20201112 09:44:05.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.862" endtime="20201112 09:44:05.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.871" endtime="20201112 09:44:05.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.875" endtime="20201112 09:44:05.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.873" endtime="20201112 09:44:05.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.870" endtime="20201112 09:44:05.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.505" endtime="20201112 09:44:05.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.504" endtime="20201112 09:44:05.896"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.904" endtime="20201112 09:44:05.921"></status>
</kw>
<msg timestamp="20201112 09:44:05.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.903" endtime="20201112 09:44:05.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.923" endtime="20201112 09:44:05.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.925" endtime="20201112 09:44:05.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.900" endtime="20201112 09:44:05.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.898" endtime="20201112 09:44:05.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.934" endtime="20201112 09:44:06.221"></status>
</kw>
<msg timestamp="20201112 09:44:06.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.933" endtime="20201112 09:44:06.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.225" endtime="20201112 09:44:06.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.234" endtime="20201112 09:44:06.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.930" endtime="20201112 09:44:06.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.929" endtime="20201112 09:44:06.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.241" level="INFO">${RESULT} = [{'time': 0.019927736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.158300000000047e-05, 'source_diff': 6.158300000000047e-05}, {'time': 0.020002764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.237" endtime="20201112 09:44:06.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.254" level="INFO">${ACCURACY} = {'time': [0.019927736, 0.020002764, 0.02007275, 0.020141778, 0.020215819, 0.020288792, 0.020357792, 0.020432806, 0.020507819, 0.020575806, 0.020644833, 0.020718847, 0.020789833, 0.020859903, 0.0209318...</msg>
<status status="PASS" starttime="20201112 09:44:06.242" endtime="20201112 09:44:06.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.259" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.258" endtime="20201112 09:44:06.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.261" level="INFO">VALUE: [6.158300000000047e-05, 6.198599999999999e-05, 6.212499999999968e-05, 6.15560000000008e-05, 6.236100000000036e-05, 6.204199999999827e-05, 6.161099999999961e-05, 6.190300000000204e-05, 6.19019999999991e-05, 6.177799999999845e-05, 6.168000000000146e-05, 6.154099999999829e-05, 6.19300000000017e-05, 6.243099999999821e-05, 6.201399999999913e-05, 6.223600000000024e-05, 6.201399999999913e-05, 6.175000000000277e-05, 6.157000000000037e-05, 6.207000000000087e-05, 6.195900000000032e-05, 6.22080000000011e-05, 6.168100000000093e-05, 6.184700000000029e-05, 6.233300000000122e-05, 6.204099999999879e-05, 6.152699999999872e-05, 6.2195000000001e-05, 6.236100000000036e-05, 6.155500000000133e-05, 6.1888999999999e-05, 6.163899999999875e-05, 6.198599999999999e-05, 6.193100000000118e-05, 6.180599999999759e-05, 6.170900000000007e-05, 6.147299999999939e-05, 6.226399999999938e-05, 6.220900000000057e-05, 6.143100000000068e-05, 6.234700000000079e-05, 6.19019999999991e-05, 6.231899999999818e-05, 6.163899999999875e-05, 6.237499999999993e-05, 6.14300000000012e-05, 6.20279999999987e-05, 6.209700000000054e-05, 6.218100000000143e-05, 6.209700000000054e-05]</msg>
<status status="PASS" starttime="20201112 09:44:06.260" endtime="20201112 09:44:06.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.255" endtime="20201112 09:44:06.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.265" endtime="20201112 09:44:06.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.268" endtime="20201112 09:44:06.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.267" endtime="20201112 09:44:06.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.263" endtime="20201112 09:44:06.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.897" endtime="20201112 09:44:06.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.896" endtime="20201112 09:44:06.289"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.298" endtime="20201112 09:44:06.315"></status>
</kw>
<msg timestamp="20201112 09:44:06.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.296" endtime="20201112 09:44:06.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.317" endtime="20201112 09:44:06.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.319" endtime="20201112 09:44:06.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.294" endtime="20201112 09:44:06.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.292" endtime="20201112 09:44:06.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.328" endtime="20201112 09:44:06.614"></status>
</kw>
<msg timestamp="20201112 09:44:06.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020135708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.327" endtime="20201112 09:44:06.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020135708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.619" endtime="20201112 09:44:06.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.627" endtime="20201112 09:44:06.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.324" endtime="20201112 09:44:06.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.322" endtime="20201112 09:44:06.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.634" level="INFO">${RESULT} = [{'time': 0.020198431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.272300000000064e-05, 'source_diff': 6.272300000000064e-05}, {'time': 0.020272444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.630" endtime="20201112 09:44:06.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.647" level="INFO">${ACCURACY} = {'time': [0.020198431, 0.020272444, 0.020341472, 0.020414486, 0.020486486, 0.0205595, 0.020633486, 0.020702514, 0.020771528, 0.020846514, 0.020917528, 0.020987542, 0.021061556, 0.021137542, 0.02120958...</msg>
<status status="PASS" starttime="20201112 09:44:06.635" endtime="20201112 09:44:06.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.652" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.651" endtime="20201112 09:44:06.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.655" level="INFO">VALUE: [6.272300000000064e-05, 6.262500000000018e-05, 6.277799999999945e-05, 6.305499999999936e-05, 6.286100000000086e-05, 6.284700000000129e-05, 6.319399999999906e-05, 6.322200000000167e-05, 6.263899999999975e-05, 6.251399999999963e-05, 6.247200000000092e-05, 6.315299999999982e-05, 6.262500000000018e-05, 6.277799999999945e-05, 6.250000000000006e-05, 6.336199999999736e-05, 6.255499999999886e-05, 6.312500000000068e-05, 6.333299999999875e-05, 6.262500000000018e-05, 6.309699999999807e-05, 6.257000000000137e-05, 6.262500000000018e-05, 6.327799999999995e-05, 6.313800000000078e-05, 6.332000000000212e-05, 6.257000000000137e-05, 6.305599999999884e-05, 6.298600000000099e-05, 6.279199999999902e-05, 6.279099999999954e-05, 6.30690000000024e-05, 6.301299999999718e-05, 6.251399999999963e-05, 6.247200000000092e-05, 6.284700000000129e-05, 6.318100000000243e-05, 6.322200000000167e-05, 6.27500000000003e-05, 6.279199999999902e-05, 6.2889e-05, 6.270900000000107e-05, 6.305599999999884e-05, 6.276399999999988e-05, 6.256899999999843e-05, 6.27500000000003e-05, 6.263899999999975e-05, 6.319400000000253e-05, 6.286100000000086e-05, 6.344499999999878e-05]</msg>
<status status="PASS" starttime="20201112 09:44:06.653" endtime="20201112 09:44:06.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.648" endtime="20201112 09:44:06.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.659" endtime="20201112 09:44:06.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.662" endtime="20201112 09:44:06.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.660" endtime="20201112 09:44:06.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.657" endtime="20201112 09:44:06.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.290" endtime="20201112 09:44:06.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.289" endtime="20201112 09:44:06.683"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.692" endtime="20201112 09:44:06.709"></status>
</kw>
<msg timestamp="20201112 09:44:06.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.690" endtime="20201112 09:44:06.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.711" endtime="20201112 09:44:06.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.713" endtime="20201112 09:44:06.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.688" endtime="20201112 09:44:06.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.685" endtime="20201112 09:44:06.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.722" endtime="20201112 09:44:07.009"></status>
</kw>
<msg timestamp="20201112 09:44:07.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020553236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.721" endtime="20201112 09:44:07.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020553236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.013" endtime="20201112 09:44:07.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.022" endtime="20201112 09:44:07.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.718" endtime="20201112 09:44:07.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.716" endtime="20201112 09:44:07.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.029" level="INFO">${RESULT} = [{'time': 0.020616875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.363900000000075e-05, 'source_diff': 6.363900000000075e-05}, {'time': 0.020688903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:07.025" endtime="20201112 09:44:07.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.042" level="INFO">${ACCURACY} = {'time': [0.020616875, 0.020688903, 0.020764903, 0.020838903, 0.020914917, 0.020987917, 0.021057931, 0.021127944, 0.021200958, 0.021270958, 0.021346958, 0.021416986, 0.021489972, 0.021567, 0.02164, 0....</msg>
<status status="PASS" starttime="20201112 09:44:07.030" endtime="20201112 09:44:07.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.046" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.045" endtime="20201112 09:44:07.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.049" level="INFO">VALUE: [6.363900000000075e-05, 6.397200000000242e-05, 6.423600000000224e-05, 6.358399999999848e-05, 6.391700000000014e-05, 6.343099999999921e-05, 6.43479999999988e-05, 6.386099999999839e-05, 6.352699999999725e-05, 6.361099999999814e-05, 6.355499999999986e-05, 6.412499999999821e-05, 6.409699999999907e-05, 6.397199999999895e-05, 6.362500000000118e-05, 6.348600000000149e-05, 6.344499999999878e-05, 6.386100000000186e-05, 6.35699999999989e-05, 6.434800000000226e-05, 6.429200000000052e-05, 6.370900000000207e-05, 6.390300000000057e-05, 6.393000000000024e-05, 6.44159999999977e-05, 6.395799999999938e-05, 6.401400000000113e-05, 6.433299999999975e-05, 6.384700000000229e-05, 6.384699999999882e-05, 6.436200000000183e-05, 6.42080000000031e-05, 6.426400000000138e-05, 6.408399999999898e-05, 6.37089999999986e-05, 6.440199999999813e-05, 6.38479999999983e-05, 6.341600000000017e-05, 6.387499999999796e-05, 6.405500000000036e-05, 6.420799999999963e-05, 6.429200000000052e-05, 6.348600000000149e-05, 6.420799999999963e-05, 6.35280000000002e-05, 6.420799999999963e-05, 6.365300000000032e-05, 6.429200000000052e-05, 6.423600000000224e-05, 6.386100000000186e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.048" endtime="20201112 09:44:07.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.043" endtime="20201112 09:44:07.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.053" endtime="20201112 09:44:07.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.056" endtime="20201112 09:44:07.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.054" endtime="20201112 09:44:07.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.051" endtime="20201112 09:44:07.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.684" endtime="20201112 09:44:07.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.683" endtime="20201112 09:44:07.077"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.086" endtime="20201112 09:44:07.103"></status>
</kw>
<msg timestamp="20201112 09:44:07.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.084" endtime="20201112 09:44:07.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.105" endtime="20201112 09:44:07.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.107" endtime="20201112 09:44:07.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.081" endtime="20201112 09:44:07.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.079" endtime="20201112 09:44:07.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.116" endtime="20201112 09:44:07.403"></status>
</kw>
<msg timestamp="20201112 09:44:07.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020576736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020641194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.114" endtime="20201112 09:44:07.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020576736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020641194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.407" endtime="20201112 09:44:07.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.415" endtime="20201112 09:44:07.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.112" endtime="20201112 09:44:07.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.110" endtime="20201112 09:44:07.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.422" level="INFO">${RESULT} = [{'time': 0.020641194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.445799999999988e-05, 'source_diff': 6.445799999999988e-05}, {'time': 0.020713208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:07.419" endtime="20201112 09:44:07.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.435" level="INFO">${ACCURACY} = {'time': [0.020641194, 0.020713208, 0.020791208, 0.020863222, 0.020940222, 0.021012236, 0.02108925, 0.021166264, 0.02123725, 0.021308292, 0.021384278, 0.021455278, 0.021527347, 0.021601292, 0.02167631...</msg>
<status status="PASS" starttime="20201112 09:44:07.423" endtime="20201112 09:44:07.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.440" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.439" endtime="20201112 09:44:07.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.442" level="INFO">VALUE: [6.445799999999988e-05, 6.486099999999939e-05, 6.536099999999989e-05, 6.4583e-05, 6.50830000000005e-05, 6.509700000000007e-05, 6.483300000000025e-05, 6.540300000000207e-05, 6.533300000000075e-05, 6.454200000000077e-05, 6.448599999999902e-05, 6.526400000000238e-05, 6.488899999999853e-05, 6.532000000000066e-05, 6.517999999999802e-05, 6.469400000000056e-05, 6.530499999999814e-05, 6.49159999999982e-05, 6.49159999999982e-05, 6.509700000000007e-05, 6.455499999999739e-05, 6.533300000000075e-05, 6.4583e-05, 6.443100000000021e-05, 6.509700000000007e-05, 6.449999999999859e-05, 6.509700000000007e-05, 6.468099999999699e-05, 6.54029999999986e-05, 6.449999999999859e-05, 6.505500000000136e-05, 6.481899999999721e-05, 6.49440000000008e-05, 6.499999999999909e-05, 6.519400000000106e-05, 6.537499999999946e-05, 6.50830000000005e-05, 6.450000000000206e-05, 6.479200000000102e-05, 6.534700000000032e-05, 6.47089999999996e-05, 6.472300000000264e-05, 6.524999999999934e-05, 6.506900000000093e-05, 6.524999999999934e-05, 6.538899999999903e-05, 6.454099999999782e-05, 6.536099999999989e-05, 6.477799999999798e-05, 6.454200000000077e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.441" endtime="20201112 09:44:07.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.436" endtime="20201112 09:44:07.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.446" endtime="20201112 09:44:07.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.449" endtime="20201112 09:44:07.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.448" endtime="20201112 09:44:07.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.444" endtime="20201112 09:44:07.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.078" endtime="20201112 09:44:07.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.077" endtime="20201112 09:44:07.470"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.479" endtime="20201112 09:44:07.496"></status>
</kw>
<msg timestamp="20201112 09:44:07.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.477" endtime="20201112 09:44:07.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.498" endtime="20201112 09:44:07.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.500" endtime="20201112 09:44:07.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.475" endtime="20201112 09:44:07.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.473" endtime="20201112 09:44:07.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.509" endtime="20201112 09:44:07.796"></status>
</kw>
<msg timestamp="20201112 09:44:07.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.508" endtime="20201112 09:44:07.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.801" endtime="20201112 09:44:07.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.809" endtime="20201112 09:44:07.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.505" endtime="20201112 09:44:07.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.503" endtime="20201112 09:44:07.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.816" level="INFO">${RESULT} = [{'time': 0.019785903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.577799999999898e-05, 'source_diff': 6.577799999999898e-05}, {'time': 0.019857875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:07.813" endtime="20201112 09:44:07.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.829" level="INFO">${ACCURACY} = {'time': [0.019785903, 0.019857875, 0.019932889, 0.020007903, 0.020086917, 0.020158903, 0.020233931, 0.020308931, 0.020387944, 0.020460958, 0.020538986, 0.020616958, 0.020691972, 0.020769986, 0.020848...</msg>
<status status="PASS" starttime="20201112 09:44:07.817" endtime="20201112 09:44:07.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.834" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.833" endtime="20201112 09:44:07.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.836" level="INFO">VALUE: [6.577799999999898e-05, 6.556900000000143e-05, 6.612500000000021e-05, 6.555600000000134e-05, 6.636100000000089e-05, 6.579199999999855e-05, 6.619500000000153e-05, 6.633399999999776e-05, 6.583300000000125e-05, 6.559700000000057e-05, 6.641699999999917e-05, 6.600000000000009e-05, 6.601399999999966e-05, 6.586100000000039e-05, 6.587499999999996e-05, 6.605599999999837e-05, 6.543100000000121e-05, 6.598600000000052e-05, 6.587499999999996e-05, 6.591699999999867e-05, 6.63480000000008e-05, 6.613800000000031e-05, 6.583299999999778e-05, 6.595800000000138e-05, 6.561100000000014e-05, 6.586100000000039e-05, 6.592999999999877e-05, 6.548600000000002e-05, 6.579199999999855e-05, 6.582000000000116e-05, 6.574999999999984e-05, 6.573600000000027e-05, 6.634699999999785e-05, 6.580599999999812e-05, 6.629200000000252e-05, 6.631899999999871e-05, 6.577799999999898e-05, 6.559700000000057e-05, 6.586100000000039e-05, 6.605499999999889e-05, 6.595799999999791e-05, 6.62639999999999e-05, 6.580500000000211e-05, 6.627799999999948e-05, 6.641699999999917e-05, 6.59440000000018e-05, 6.612500000000021e-05, 6.615300000000282e-05, 6.630599999999862e-05, 6.591699999999867e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.835" endtime="20201112 09:44:07.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.830" endtime="20201112 09:44:07.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.840" endtime="20201112 09:44:07.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.843" endtime="20201112 09:44:07.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.842" endtime="20201112 09:44:07.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.838" endtime="20201112 09:44:07.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.471" endtime="20201112 09:44:07.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.471" endtime="20201112 09:44:07.864"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.873" endtime="20201112 09:44:07.892"></status>
</kw>
<msg timestamp="20201112 09:44:07.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.872" endtime="20201112 09:44:07.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.893" endtime="20201112 09:44:07.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.896" endtime="20201112 09:44:07.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.869" endtime="20201112 09:44:07.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.867" endtime="20201112 09:44:07.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.905" endtime="20201112 09:44:08.192"></status>
</kw>
<msg timestamp="20201112 09:44:08.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.903" endtime="20201112 09:44:08.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.196" endtime="20201112 09:44:08.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.204" endtime="20201112 09:44:08.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.901" endtime="20201112 09:44:08.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.899" endtime="20201112 09:44:08.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.212" level="INFO">${RESULT} = [{'time': 0.019794667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.719499999999906e-05, 'source_diff': 6.719499999999906e-05}, {'time': 0.019868667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.208" endtime="20201112 09:44:08.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.225" level="INFO">${ACCURACY} = {'time': [0.019794667, 0.019868667, 0.019946681, 0.020025694, 0.020103708, 0.020181694, 0.020261722, 0.020337708, 0.020415722, 0.02048975, 0.020564764, 0.02063775, 0.020716764, 0.020795778, 0.02087077...</msg>
<status status="PASS" starttime="20201112 09:44:08.213" endtime="20201112 09:44:08.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.230" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.229" endtime="20201112 09:44:08.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.233" level="INFO">VALUE: [6.719499999999906e-05, 6.733399999999876e-05, 6.67640000000004e-05, 6.70969999999986e-05, 6.737500000000146e-05, 6.683299999999878e-05, 6.720799999999916e-05, 6.733299999999928e-05, 6.679100000000007e-05, 6.687500000000096e-05, 6.70969999999986e-05, 6.72359999999983e-05, 6.699999999999762e-05, 6.662500000000071e-05, 6.651400000000016e-05, 6.724999999999787e-05, 6.716699999999992e-05, 6.67090000000016e-05, 6.706899999999946e-05, 6.72640000000009e-05, 6.684699999999835e-05, 6.680499999999964e-05, 6.730599999999962e-05, 6.676399999999694e-05, 6.693099999999924e-05, 6.716699999999992e-05, 6.659700000000157e-05, 6.663900000000028e-05, 6.700000000000109e-05, 6.740299999999713e-05, 6.68480000000013e-05, 6.644399999999884e-05, 6.727800000000048e-05, 6.736100000000189e-05, 6.658299999999853e-05, 6.675000000000084e-05, 6.642999999999927e-05, 6.687500000000096e-05, 6.64440000000023e-05, 6.677799999999998e-05, 6.659700000000157e-05, 6.691699999999967e-05, 6.681999999999869e-05, 6.684700000000182e-05, 6.682000000000216e-05, 6.677799999999998e-05, 6.644500000000178e-05, 6.645800000000188e-05, 6.702700000000075e-05, 6.69160000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:44:08.231" endtime="20201112 09:44:08.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.227" endtime="20201112 09:44:08.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.237" endtime="20201112 09:44:08.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.240" endtime="20201112 09:44:08.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.239" endtime="20201112 09:44:08.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.235" endtime="20201112 09:44:08.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.865" endtime="20201112 09:44:08.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.865" endtime="20201112 09:44:08.261"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.270" endtime="20201112 09:44:08.287"></status>
</kw>
<msg timestamp="20201112 09:44:08.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.268" endtime="20201112 09:44:08.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.289" endtime="20201112 09:44:08.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.291" endtime="20201112 09:44:08.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.266" endtime="20201112 09:44:08.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.264" endtime="20201112 09:44:08.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.300" endtime="20201112 09:44:08.589"></status>
</kw>
<msg timestamp="20201112 09:44:08.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020041944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.299" endtime="20201112 09:44:08.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020041944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.594" endtime="20201112 09:44:08.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.602" endtime="20201112 09:44:08.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.296" endtime="20201112 09:44:08.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.294" endtime="20201112 09:44:08.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.609" level="INFO">${RESULT} = [{'time': 0.020041944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.822199999999973e-05, 'source_diff': 6.822199999999973e-05}, {'time': 0.020116, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:08.606" endtime="20201112 09:44:08.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.622" level="INFO">${ACCURACY} = {'time': [0.020041944, 0.020116, 0.020190986, 0.020271972, 0.020345972, 0.020422986, 0.020500986, 0.020580014, 0.020656028, 0.020735028, 0.020814042, 0.020895042, 0.020970069, 0.021044069, 0.021123069...</msg>
<status status="PASS" starttime="20201112 09:44:08.610" endtime="20201112 09:44:08.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.627" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.626" endtime="20201112 09:44:08.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.630" level="INFO">VALUE: [6.822199999999973e-05, 6.79169999999972e-05, 6.770799999999966e-05, 6.783299999999978e-05, 6.780500000000064e-05, 6.769400000000009e-05, 6.743000000000027e-05, 6.779200000000055e-05, 6.765300000000085e-05, 6.802799999999776e-05, 6.811100000000264e-05, 6.805600000000037e-05, 6.756899999999996e-05, 6.794399999999687e-05, 6.756899999999996e-05, 6.790199999999816e-05, 6.77359999999988e-05, 6.783299999999978e-05, 6.806900000000046e-05, 6.815299999999788e-05, 6.763899999999781e-05, 6.756999999999944e-05, 6.822199999999973e-05, 6.751400000000116e-05, 6.797300000000242e-05, 6.819399999999712e-05, 6.805600000000037e-05, 6.804100000000132e-05, 6.836099999999942e-05, 6.747199999999898e-05, 6.781900000000021e-05, 6.805500000000089e-05, 6.818000000000102e-05, 6.75420000000003e-05, 6.772199999999923e-05, 6.823600000000277e-05, 6.752800000000073e-05, 6.812499999999874e-05, 6.798600000000252e-05, 6.780600000000012e-05, 6.80839999999995e-05, 6.766600000000095e-05, 6.805500000000089e-05, 6.768000000000052e-05, 6.804100000000132e-05, 6.766600000000095e-05, 6.780499999999717e-05, 6.829200000000105e-05, 6.827800000000148e-05, 6.787499999999849e-05]</msg>
<status status="PASS" starttime="20201112 09:44:08.628" endtime="20201112 09:44:08.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.623" endtime="20201112 09:44:08.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.633" endtime="20201112 09:44:08.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.637" endtime="20201112 09:44:08.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.635" endtime="20201112 09:44:08.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.631" endtime="20201112 09:44:08.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.262" endtime="20201112 09:44:08.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.262" endtime="20201112 09:44:08.658"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.666" endtime="20201112 09:44:08.684"></status>
</kw>
<msg timestamp="20201112 09:44:08.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.665" endtime="20201112 09:44:08.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.686" endtime="20201112 09:44:08.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.688" endtime="20201112 09:44:08.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.662" endtime="20201112 09:44:08.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.660" endtime="20201112 09:44:08.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.697" endtime="20201112 09:44:08.984"></status>
</kw>
<msg timestamp="20201112 09:44:08.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.696" endtime="20201112 09:44:08.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.989" endtime="20201112 09:44:08.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.997" endtime="20201112 09:44:08.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.693" endtime="20201112 09:44:09.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.692" endtime="20201112 09:44:09.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.004" level="INFO">${RESULT} = [{'time': 0.020083889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.936100000000042e-05, 'source_diff': 6.936100000000042e-05}, {'time': 0.020159903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.001" endtime="20201112 09:44:09.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.018" level="INFO">${ACCURACY} = {'time': [0.020083889, 0.020159903, 0.020239889, 0.020320903, 0.020398917, 0.020474917, 0.020549944, 0.020626, 0.020704944, 0.020782972, 0.020858958, 0.020940986, 0.021017986, 0.021099014, 0.021176014...</msg>
<status status="PASS" starttime="20201112 09:44:09.005" endtime="20201112 09:44:09.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.022" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.021" endtime="20201112 09:44:09.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.024" level="INFO">VALUE: [6.936100000000042e-05, 6.90970000000006e-05, 6.927799999999901e-05, 6.907000000000094e-05, 6.899999999999962e-05, 6.866699999999795e-05, 6.902699999999928e-05, 6.866699999999795e-05, 6.85970000000001e-05, 6.855500000000139e-05, 6.883300000000078e-05, 6.891700000000167e-05, 6.861099999999967e-05, 6.911100000000017e-05, 6.891700000000167e-05, 6.844500000000031e-05, 6.922200000000073e-05, 6.874999999999937e-05, 6.920900000000063e-05, 6.87359999999998e-05, 6.899999999999962e-05, 6.881899999999774e-05, 6.918000000000202e-05, 6.934700000000085e-05, 6.852799999999826e-05, 6.886099999999992e-05, 6.915299999999888e-05, 6.912499999999974e-05, 6.893100000000124e-05, 6.887499999999949e-05, 6.887499999999949e-05, 6.927800000000248e-05, 6.936100000000042e-05, 6.857000000000044e-05, 6.886200000000287e-05, 6.894499999999734e-05, 6.872200000000023e-05, 6.920800000000116e-05, 6.840199999999866e-05, 6.904199999999833e-05, 6.877799999999851e-05, 6.930600000000162e-05, 6.870800000000066e-05, 6.895800000000091e-05, 6.918100000000149e-05, 6.927799999999901e-05, 6.890199999999916e-05, 6.849999999999912e-05, 6.858299999999706e-05, 6.845800000000041e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.023" endtime="20201112 09:44:09.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.018" endtime="20201112 09:44:09.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.028" endtime="20201112 09:44:09.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.032" endtime="20201112 09:44:09.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.030" endtime="20201112 09:44:09.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.027" endtime="20201112 09:44:09.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.659" endtime="20201112 09:44:09.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.658" endtime="20201112 09:44:09.052"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.061" endtime="20201112 09:44:09.079"></status>
</kw>
<msg timestamp="20201112 09:44:09.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.060" endtime="20201112 09:44:09.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.080" endtime="20201112 09:44:09.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.083" endtime="20201112 09:44:09.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.057" endtime="20201112 09:44:09.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.055" endtime="20201112 09:44:09.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.092" endtime="20201112 09:44:09.378"></status>
</kw>
<msg timestamp="20201112 09:44:09.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.090" endtime="20201112 09:44:09.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.382" endtime="20201112 09:44:09.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.391" endtime="20201112 09:44:09.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.088" endtime="20201112 09:44:09.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.086" endtime="20201112 09:44:09.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.397" level="INFO">${RESULT} = [{'time': 0.019872375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.947200000000098e-05, 'source_diff': 6.947200000000098e-05}, {'time': 0.019952389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.394" endtime="20201112 09:44:09.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.411" level="INFO">${ACCURACY} = {'time': [0.019872375, 0.019952389, 0.020028375, 0.020107403, 0.020188403, 0.020266417, 0.020346417, 0.020429417, 0.020507444, 0.020583472, 0.020660458, 0.020737458, 0.020815486, 0.020893472, 0.020972...</msg>
<status status="PASS" starttime="20201112 09:44:09.398" endtime="20201112 09:44:09.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.415" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.414" endtime="20201112 09:44:09.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.418" level="INFO">VALUE: [6.947200000000098e-05, 7.022200000000173e-05, 6.963899999999981e-05, 7.04169999999997e-05, 6.980600000000212e-05, 6.994499999999834e-05, 6.990299999999963e-05, 7.036099999999795e-05, 7.013800000000084e-05, 6.956899999999849e-05, 6.954099999999935e-05, 7.013900000000031e-05, 6.998600000000105e-05, 6.938899999999956e-05, 6.962500000000024e-05, 7.037500000000099e-05, 6.970800000000166e-05, 7.007000000000194e-05, 7.00840000000015e-05, 7.015299999999988e-05, 7.016699999999945e-05, 7.013900000000031e-05, 7.043000000000327e-05, 7.002699999999681e-05, 7.008299999999856e-05, 6.948600000000055e-05, 6.961100000000067e-05, 6.984699999999788e-05, 6.956900000000196e-05, 7.004199999999933e-05, 6.955600000000187e-05, 6.99169999999992e-05, 6.958399999999754e-05, 7.00559999999989e-05, 7.016699999999945e-05, 6.988800000000059e-05, 6.991599999999973e-05, 7.004099999999985e-05, 7.038900000000056e-05, 6.945800000000141e-05, 7.020799999999869e-05, 6.965299999999938e-05, 7.043099999999927e-05, 6.972200000000123e-05, 7.020899999999816e-05, 6.990299999999963e-05, 6.99169999999992e-05, 7.020900000000163e-05, 6.988900000000006e-05, 6.99169999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.416" endtime="20201112 09:44:09.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.412" endtime="20201112 09:44:09.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.426" endtime="20201112 09:44:09.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.429" endtime="20201112 09:44:09.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.428" endtime="20201112 09:44:09.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.424" endtime="20201112 09:44:09.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.053" endtime="20201112 09:44:09.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.053" endtime="20201112 09:44:09.450"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.459" endtime="20201112 09:44:09.477"></status>
</kw>
<msg timestamp="20201112 09:44:09.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.457" endtime="20201112 09:44:09.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.479" endtime="20201112 09:44:09.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.481" endtime="20201112 09:44:09.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.455" endtime="20201112 09:44:09.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.453" endtime="20201112 09:44:09.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.491" endtime="20201112 09:44:09.777"></status>
</kw>
<msg timestamp="20201112 09:44:09.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.489" endtime="20201112 09:44:09.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.781" endtime="20201112 09:44:09.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.789" endtime="20201112 09:44:09.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.486" endtime="20201112 09:44:09.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.485" endtime="20201112 09:44:09.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.796" level="INFO">${RESULT} = [{'time': 0.019793056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.056999999999897e-05, 'source_diff': 7.056999999999897e-05}, {'time': 0.019871056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.793" endtime="20201112 09:44:09.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.810" level="INFO">${ACCURACY} = {'time': [0.019793056, 0.019871056, 0.019955083, 0.020034069, 0.020112097, 0.020194111, 0.020278097, 0.020357125, 0.020437125, 0.020516125, 0.020596167, 0.020674153, 0.020755222, 0.020836167, 0.020915...</msg>
<status status="PASS" starttime="20201112 09:44:09.797" endtime="20201112 09:44:09.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.814" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.813" endtime="20201112 09:44:09.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.817" level="INFO">VALUE: [7.056999999999897e-05, 7.083400000000226e-05, 7.117999999999708e-05, 7.038800000000109e-05, 7.077800000000051e-05, 7.126400000000144e-05, 7.087499999999802e-05, 7.088900000000106e-05, 7.118100000000002e-05, 7.04169999999997e-05, 7.070899999999866e-05, 7.061100000000167e-05, 7.080500000000017e-05, 7.138899999999809e-05, 7.068000000000005e-05, 7.063799999999787e-05, 7.1069e-05, 7.130500000000067e-05, 7.115300000000088e-05, 7.084699999999888e-05, 7.126400000000144e-05, 7.05689999999995e-05, 7.077800000000051e-05, 7.129200000000058e-05, 7.133399999999929e-05, 7.075000000000137e-05, 7.136099999999895e-05, 7.129200000000058e-05, 7.068000000000005e-05, 7.130500000000067e-05, 7.081899999999974e-05, 7.054199999999983e-05, 7.119400000000012e-05, 7.100000000000162e-05, 7.077799999999704e-05, 7.1069e-05, 7.1069e-05, 7.137499999999852e-05, 7.120899999999916e-05, 7.098600000000205e-05, 7.106999999999947e-05, 7.05559999999994e-05, 7.106999999999947e-05, 7.077800000000051e-05, 7.065200000000091e-05, 7.102800000000076e-05, 7.087500000000149e-05, 7.134699999999938e-05, 7.112499999999827e-05, 7.079200000000008e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.815" endtime="20201112 09:44:09.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.810" endtime="20201112 09:44:09.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.820" endtime="20201112 09:44:09.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.824" endtime="20201112 09:44:09.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.822" endtime="20201112 09:44:09.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.818" endtime="20201112 09:44:09.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.451" endtime="20201112 09:44:09.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.451" endtime="20201112 09:44:09.844"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.853" endtime="20201112 09:44:09.870"></status>
</kw>
<msg timestamp="20201112 09:44:09.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.852" endtime="20201112 09:44:09.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.872" endtime="20201112 09:44:09.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.874" endtime="20201112 09:44:09.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.849" endtime="20201112 09:44:09.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.847" endtime="20201112 09:44:09.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.883" endtime="20201112 09:44:10.171"></status>
</kw>
<msg timestamp="20201112 09:44:10.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020026208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.882" endtime="20201112 09:44:10.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020026208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.176" endtime="20201112 09:44:10.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.184" endtime="20201112 09:44:10.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.879" endtime="20201112 09:44:10.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.878" endtime="20201112 09:44:10.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.191" level="INFO">${RESULT} = [{'time': 0.020026208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.236099999999995e-05, 'source_diff': 7.236099999999995e-05}, {'time': 0.020111222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.188" endtime="20201112 09:44:10.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.204" level="INFO">${ACCURACY} = {'time': [0.020026208, 0.020111222, 0.020192222, 0.020274236, 0.020357264, 0.020439264, 0.020523264, 0.020602278, 0.020684292, 0.020767306, 0.020845319, 0.020924306, 0.021004333, 0.021086347, 0.021170...</msg>
<status status="PASS" starttime="20201112 09:44:10.192" endtime="20201112 09:44:10.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.209" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.208" endtime="20201112 09:44:10.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.211" level="INFO">VALUE: [7.236099999999995e-05, 7.236099999999995e-05, 7.194400000000087e-05, 7.158300000000006e-05, 7.187499999999902e-05, 7.183300000000031e-05, 7.232000000000072e-05, 7.209700000000013e-05, 7.176399999999847e-05, 7.15560000000004e-05, 7.222200000000026e-05, 7.138900000000156e-05, 7.236099999999995e-05, 7.204099999999838e-05, 7.199999999999915e-05, 7.237499999999952e-05, 7.236099999999995e-05, 7.21109999999997e-05, 7.202800000000176e-05, 7.219500000000059e-05, 7.238900000000256e-05, 7.14170000000007e-05, 7.162499999999877e-05, 7.193100000000077e-05, 7.163900000000181e-05, 7.17499999999989e-05, 7.24300000000018e-05, 7.216600000000198e-05, 7.238900000000256e-05, 7.161100000000267e-05, 7.194400000000087e-05, 7.179200000000108e-05, 7.205599999999743e-05, 7.22499999999994e-05, 7.222200000000026e-05, 7.158399999999954e-05, 7.226399999999897e-05, 7.188799999999912e-05, 7.216599999999851e-05, 7.197200000000001e-05, 7.21109999999997e-05, 7.155500000000092e-05, 7.237499999999952e-05, 7.186099999999945e-05, 7.195799999999697e-05, 7.219500000000059e-05, 7.190300000000163e-05, 7.169399999999715e-05, 7.197299999999948e-05, 7.180600000000065e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.210" endtime="20201112 09:44:10.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.205" endtime="20201112 09:44:10.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.215" endtime="20201112 09:44:10.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.218" endtime="20201112 09:44:10.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.217" endtime="20201112 09:44:10.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.213" endtime="20201112 09:44:10.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.845" endtime="20201112 09:44:10.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.845" endtime="20201112 09:44:10.239"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.248" endtime="20201112 09:44:10.264"></status>
</kw>
<msg timestamp="20201112 09:44:10.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.247" endtime="20201112 09:44:10.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.266" endtime="20201112 09:44:10.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.268" endtime="20201112 09:44:10.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.244" endtime="20201112 09:44:10.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.242" endtime="20201112 09:44:10.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.278" endtime="20201112 09:44:10.565"></status>
</kw>
<msg timestamp="20201112 09:44:10.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019756583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.276" endtime="20201112 09:44:10.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019756583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.570" endtime="20201112 09:44:10.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.578" endtime="20201112 09:44:10.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.273" endtime="20201112 09:44:10.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.272" endtime="20201112 09:44:10.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.585" level="INFO">${RESULT} = [{'time': 0.019756583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.309700000000113e-05, 'source_diff': 7.309700000000113e-05}, {'time': 0.019841569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.581" endtime="20201112 09:44:10.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.598" level="INFO">${ACCURACY} = {'time': [0.019756583, 0.019841569, 0.019920597, 0.020000583, 0.020080611, 0.020163625, 0.020245625, 0.020326625, 0.020405667, 0.020487653, 0.020566653, 0.020646667, 0.020728667, 0.020812681, 0.020897...</msg>
<status status="PASS" starttime="20201112 09:44:10.586" endtime="20201112 09:44:10.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.603" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.602" endtime="20201112 09:44:10.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.605" level="INFO">VALUE: [7.309700000000113e-05, 7.283300000000131e-05, 7.286100000000045e-05, 7.265199999999944e-05, 7.318000000000255e-05, 7.32500000000004e-05, 7.302799999999929e-05, 7.318100000000202e-05, 7.329199999999911e-05, 7.316700000000245e-05, 7.257000000000097e-05, 7.309800000000061e-05, 7.323600000000083e-05, 7.255599999999793e-05, 7.313899999999984e-05, 7.283299999999784e-05, 7.252699999999931e-05, 7.3069000000002e-05, 7.255599999999793e-05, 7.315299999999941e-05, 7.287500000000002e-05, 7.319399999999865e-05, 7.336100000000095e-05, 7.312500000000027e-05, 7.251399999999922e-05, 7.256899999999802e-05, 7.252799999999879e-05, 7.284700000000088e-05, 7.265199999999944e-05, 7.286100000000045e-05, 7.277799999999904e-05, 7.323600000000083e-05, 7.302799999999929e-05, 7.345800000000194e-05, 7.262499999999977e-05, 7.257000000000097e-05, 7.319499999999812e-05, 7.315300000000288e-05, 7.276399999999947e-05, 7.280500000000217e-05, 7.338800000000062e-05, 7.327700000000006e-05, 7.249999999999965e-05, 7.320800000000169e-05, 7.244400000000137e-05, 7.320800000000169e-05, 7.298600000000058e-05, 7.287500000000002e-05, 7.30560000000019e-05, 7.255599999999793e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.604" endtime="20201112 09:44:10.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.599" endtime="20201112 09:44:10.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.609" endtime="20201112 09:44:10.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.612" endtime="20201112 09:44:10.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.611" endtime="20201112 09:44:10.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.607" endtime="20201112 09:44:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.240" endtime="20201112 09:44:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.240" endtime="20201112 09:44:10.633"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.642" endtime="20201112 09:44:10.660"></status>
</kw>
<msg timestamp="20201112 09:44:10.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.640" endtime="20201112 09:44:10.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.661" endtime="20201112 09:44:10.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.664" endtime="20201112 09:44:10.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.638" endtime="20201112 09:44:10.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.636" endtime="20201112 09:44:10.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.673" endtime="20201112 09:44:10.964"></status>
</kw>
<msg timestamp="20201112 09:44:10.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.671" endtime="20201112 09:44:10.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.968" endtime="20201112 09:44:10.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.977" endtime="20201112 09:44:10.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.669" endtime="20201112 09:44:10.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.667" endtime="20201112 09:44:10.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.983" level="INFO">${RESULT} = [{'time': 0.019821042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.416699999999998e-05, 'source_diff': 7.416699999999998e-05}, {'time': 0.019906042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.980" endtime="20201112 09:44:10.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.997" level="INFO">${ACCURACY} = {'time': [0.019821042, 0.019906042, 0.019989042, 0.020071042, 0.020155042, 0.020242056, 0.020324056, 0.020406069, 0.020493083, 0.020574083, 0.020655097, 0.020741125, 0.020827125, 0.020910139, 0.020990...</msg>
<status status="PASS" starttime="20201112 09:44:10.984" endtime="20201112 09:44:10.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.001" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.000" endtime="20201112 09:44:11.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.004" level="INFO">VALUE: [7.416699999999998e-05, 7.429200000000011e-05, 7.365299999999991e-05, 7.391699999999973e-05, 7.390300000000016e-05, 7.430599999999968e-05, 7.363900000000034e-05, 7.366600000000001e-05, 7.413899999999737e-05, 7.340200000000019e-05, 7.359700000000163e-05, 7.347199999999804e-05, 7.386099999999798e-05, 7.401400000000072e-05, 7.35560000000024e-05, 7.383299999999884e-05, 7.413900000000084e-05, 7.401400000000072e-05, 7.427799999999707e-05, 7.376299999999752e-05, 7.369399999999915e-05, 7.397200000000201e-05, 7.355499999999945e-05, 7.419399999999965e-05, 7.400000000000115e-05, 7.419499999999912e-05, 7.423600000000183e-05, 7.350000000000065e-05, 7.384700000000188e-05, 7.412500000000127e-05, 7.383399999999832e-05, 7.344400000000237e-05, 7.358400000000154e-05, 7.387499999999755e-05, 7.44309999999998e-05, 7.380500000000317e-05, 7.399999999999768e-05, 7.363900000000034e-05, 7.436100000000195e-05, 7.372200000000176e-05, 7.362500000000077e-05, 7.413899999999737e-05, 7.436099999999848e-05, 7.408400000000204e-05, 7.348700000000055e-05, 7.416699999999998e-05, 7.440199999999772e-05, 7.413900000000084e-05, 7.437500000000152e-05, 7.365300000000338e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.002" endtime="20201112 09:44:11.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.998" endtime="20201112 09:44:11.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.008" endtime="20201112 09:44:11.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.011" endtime="20201112 09:44:11.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.009" endtime="20201112 09:44:11.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.006" endtime="20201112 09:44:11.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.634" endtime="20201112 09:44:11.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.633" endtime="20201112 09:44:11.032"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.041" endtime="20201112 09:44:11.058"></status>
</kw>
<msg timestamp="20201112 09:44:11.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.039" endtime="20201112 09:44:11.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.059" endtime="20201112 09:44:11.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.062" endtime="20201112 09:44:11.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.036" endtime="20201112 09:44:11.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.034" endtime="20201112 09:44:11.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.071" endtime="20201112 09:44:11.357"></status>
</kw>
<msg timestamp="20201112 09:44:11.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.069" endtime="20201112 09:44:11.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.361" endtime="20201112 09:44:11.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.370" endtime="20201112 09:44:11.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.067" endtime="20201112 09:44:11.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.065" endtime="20201112 09:44:11.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.377" level="INFO">${RESULT} = [{'time': 0.019728292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.495900000000291e-05, 'source_diff': 7.495900000000291e-05}, {'time': 0.019812347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.373" endtime="20201112 09:44:11.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.390" level="INFO">${ACCURACY} = {'time': [0.019728292, 0.019812347, 0.019898333, 0.019980333, 0.020065347, 0.020146375, 0.020229361, 0.020313361, 0.020395444, 0.020481389, 0.020562403, 0.020644417, 0.020726417, 0.020814431, 0.020899...</msg>
<status status="PASS" starttime="20201112 09:44:11.378" endtime="20201112 09:44:11.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.395" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.394" endtime="20201112 09:44:11.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.397" level="INFO">VALUE: [7.495900000000291e-05, 7.47500000000019e-05, 7.509699999999966e-05, 7.469400000000015e-05, 7.540300000000166e-05, 7.512500000000227e-05, 7.53050000000012e-05, 7.469400000000015e-05, 7.490199999999822e-05, 7.497199999999954e-05, 7.465300000000091e-05, 7.491700000000073e-05, 7.524999999999893e-05, 7.498700000000205e-05, 7.515199999999847e-05, 7.486099999999898e-05, 7.455500000000045e-05, 7.50830000000001e-05, 7.479100000000113e-05, 7.534699999999991e-05, 7.491700000000073e-05, 7.513899999999837e-05, 7.470799999999972e-05, 7.543000000000133e-05, 7.536099999999948e-05, 7.541599999999829e-05, 7.536100000000295e-05, 7.495899999999944e-05, 7.51249999999988e-05, 7.513899999999837e-05, 7.518000000000108e-05, 7.49310000000003e-05, 7.53050000000012e-05, 7.527799999999807e-05, 7.519500000000012e-05, 7.473600000000233e-05, 7.527800000000154e-05, 7.532000000000025e-05, 7.486099999999898e-05, 7.470900000000266e-05, 7.443000000000033e-05, 7.448600000000208e-05, 7.520800000000022e-05, 7.501399999999825e-05, 7.455500000000045e-05, 7.509699999999966e-05, 7.487500000000202e-05, 7.506899999999705e-05, 7.461099999999873e-05, 7.491699999999726e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.396" endtime="20201112 09:44:11.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.391" endtime="20201112 09:44:11.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.401" endtime="20201112 09:44:11.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.404" endtime="20201112 09:44:11.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.403" endtime="20201112 09:44:11.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.399" endtime="20201112 09:44:11.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.033" endtime="20201112 09:44:11.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.032" endtime="20201112 09:44:11.425"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.434" endtime="20201112 09:44:11.451"></status>
</kw>
<msg timestamp="20201112 09:44:11.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.432" endtime="20201112 09:44:11.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.453" endtime="20201112 09:44:11.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.455" endtime="20201112 09:44:11.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.430" endtime="20201112 09:44:11.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.428" endtime="20201112 09:44:11.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.464" endtime="20201112 09:44:11.752"></status>
</kw>
<msg timestamp="20201112 09:44:11.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.463" endtime="20201112 09:44:11.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.757" endtime="20201112 09:44:11.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.765" endtime="20201112 09:44:11.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.460" endtime="20201112 09:44:11.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.459" endtime="20201112 09:44:11.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.772" level="INFO">${RESULT} = [{'time': 0.019723028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.548599999999961e-05, 'source_diff': 7.548599999999961e-05}, {'time': 0.019807056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.769" endtime="20201112 09:44:11.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.785" level="INFO">${ACCURACY} = {'time': [0.019723028, 0.019807056, 0.019895056, 0.019982097, 0.020064083, 0.020146083, 0.020229111, 0.020317097, 0.020400153, 0.020487153, 0.020569125, 0.020656153, 0.020743181, 0.020831153, 0.020918...</msg>
<status status="PASS" starttime="20201112 09:44:11.773" endtime="20201112 09:44:11.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.790" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.789" endtime="20201112 09:44:11.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.792" level="INFO">VALUE: [7.548599999999961e-05, 7.588899999999912e-05, 7.583400000000032e-05, 7.559700000000016e-05, 7.57769999999991e-05, 7.60969999999972e-05, 7.641700000000223e-05, 7.630499999999873e-05, 7.587499999999955e-05, 7.558400000000007e-05, 7.555600000000093e-05, 7.597200000000054e-05, 7.594500000000087e-05, 7.608400000000057e-05, 7.584799999999989e-05, 7.56249999999993e-05, 7.588800000000312e-05, 7.593000000000183e-05, 7.58890000000026e-05, 7.615299999999894e-05, 7.579200000000161e-05, 7.601399999999925e-05, 7.547200000000004e-05, 7.611100000000023e-05, 7.587499999999955e-05, 7.586099999999998e-05, 7.638899999999962e-05, 7.593099999999783e-05, 7.561099999999973e-05, 7.638800000000015e-05, 7.622200000000079e-05, 7.617999999999861e-05, 7.558299999999712e-05, 7.606899999999805e-05, 7.60830000000011e-05, 7.636100000000048e-05, 7.64029999999992e-05, 7.637500000000005e-05, 7.636100000000048e-05, 7.6070000000001e-05, 7.586099999999998e-05, 7.59310000000013e-05, 7.608299999999762e-05, 7.620799999999775e-05, 7.547200000000004e-05, 7.548599999999961e-05, 7.548599999999961e-05, 7.637500000000005e-05, 7.56249999999993e-05, 7.630600000000168e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.791" endtime="20201112 09:44:11.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.786" endtime="20201112 09:44:11.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.796" endtime="20201112 09:44:11.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.799" endtime="20201112 09:44:11.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.798" endtime="20201112 09:44:11.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.794" endtime="20201112 09:44:11.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.426" endtime="20201112 09:44:11.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.426" endtime="20201112 09:44:11.820"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.829" endtime="20201112 09:44:11.846"></status>
</kw>
<msg timestamp="20201112 09:44:11.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.827" endtime="20201112 09:44:11.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.847" endtime="20201112 09:44:11.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.850" endtime="20201112 09:44:11.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.825" endtime="20201112 09:44:11.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.823" endtime="20201112 09:44:11.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.859" endtime="20201112 09:44:12.145"></status>
</kw>
<msg timestamp="20201112 09:44:12.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.857" endtime="20201112 09:44:12.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.150" endtime="20201112 09:44:12.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.158" endtime="20201112 09:44:12.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.854" endtime="20201112 09:44:12.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.853" endtime="20201112 09:44:12.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.165" level="INFO">${RESULT} = [{'time': 0.019764222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.727800000000007e-05, 'source_diff': 7.727800000000007e-05}, {'time': 0.019853236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:12.161" endtime="20201112 09:44:12.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.178" level="INFO">${ACCURACY} = {'time': [0.019764222, 0.019853236, 0.01994025, 0.02002825, 0.020115264, 0.020202264, 0.020289292, 0.020377306, 0.020461292, 0.020544319, 0.020629319, 0.020713333, 0.020800347, 0.020888347, 0.02097237...</msg>
<status status="PASS" starttime="20201112 09:44:12.166" endtime="20201112 09:44:12.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.183" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.182" endtime="20201112 09:44:12.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.185" level="INFO">VALUE: [7.727800000000007e-05, 7.722199999999832e-05, 7.700000000000068e-05, 7.656900000000202e-05, 7.719500000000212e-05, 7.679200000000261e-05, 7.683400000000132e-05, 7.682000000000175e-05, 7.643099999999833e-05, 7.656899999999855e-05, 7.694399999999893e-05, 7.684700000000141e-05, 7.705499999999949e-05, 7.702799999999982e-05, 7.663899999999987e-05, 7.708299999999862e-05, 7.656999999999803e-05, 7.691699999999926e-05, 7.643099999999833e-05, 7.719500000000212e-05, 7.665299999999944e-05, 7.677799999999957e-05, 7.655600000000193e-05, 7.652699999999985e-05, 7.679099999999967e-05, 7.679099999999967e-05, 7.654099999999942e-05, 7.705499999999949e-05, 7.698600000000111e-05, 7.725000000000093e-05, 7.700000000000068e-05, 7.698600000000111e-05, 7.727800000000007e-05, 7.716699999999951e-05, 7.66250000000003e-05, 7.680599999999871e-05, 7.716600000000004e-05, 7.69579999999985e-05, 7.698600000000111e-05, 7.730499999999974e-05, 7.64440000000019e-05, 7.691699999999926e-05, 7.65830000000016e-05, 7.694500000000187e-05, 7.69029999999997e-05, 7.655599999999846e-05, 7.652799999999932e-05, 7.655499999999898e-05, 7.654099999999942e-05, 7.670800000000172e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.184" endtime="20201112 09:44:12.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.179" endtime="20201112 09:44:12.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.189" endtime="20201112 09:44:12.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.192" endtime="20201112 09:44:12.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.191" endtime="20201112 09:44:12.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.187" endtime="20201112 09:44:12.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.821" endtime="20201112 09:44:12.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.821" endtime="20201112 09:44:12.213"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.222" endtime="20201112 09:44:12.241"></status>
</kw>
<msg timestamp="20201112 09:44:12.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.220" endtime="20201112 09:44:12.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.243" endtime="20201112 09:44:12.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.245" endtime="20201112 09:44:12.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.218" endtime="20201112 09:44:12.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.216" endtime="20201112 09:44:12.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.254" endtime="20201112 09:44:12.542"></status>
</kw>
<msg timestamp="20201112 09:44:12.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02044925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:12.253" endtime="20201112 09:44:12.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02044925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:12.546" endtime="20201112 09:44:12.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.555" endtime="20201112 09:44:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.250" endtime="20201112 09:44:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.249" endtime="20201112 09:44:12.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.562" level="INFO">${RESULT} = [{'time': 0.02044925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.80969999999992e-05, 'source_diff': 7.80969999999992e-05}, {'time': 0.020535278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:12.558" endtime="20201112 09:44:12.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.575" level="INFO">${ACCURACY} = {'time': [0.02044925, 0.020535278, 0.020621264, 0.020706278, 0.020794292, 0.020884319, 0.020971306, 0.021058333, 0.021148347, 0.021235333, 0.021320361, 0.021409375, 0.021497417, 0.021584389, 0.0216733...</msg>
<status status="PASS" starttime="20201112 09:44:12.563" endtime="20201112 09:44:12.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.580" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.579" endtime="20201112 09:44:12.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.582" level="INFO">VALUE: [7.80969999999992e-05, 7.798600000000211e-05, 7.805599999999996e-05, 7.783400000000232e-05, 7.756999999999903e-05, 7.744399999999943e-05, 7.823699999999836e-05, 7.747199999999857e-05, 7.777800000000057e-05, 7.769399999999968e-05, 7.791700000000026e-05, 7.805599999999996e-05, 7.809800000000214e-05, 7.773599999999839e-05, 7.795800000000297e-05, 7.815300000000094e-05, 7.75700000000025e-05, 7.74449999999989e-05, 7.802800000000082e-05, 7.804100000000092e-05, 7.763799999999793e-05, 7.820799999999975e-05, 7.786099999999851e-05, 7.833399999999935e-05, 7.834699999999944e-05, 7.795800000000297e-05, 7.79030000000007e-05, 7.82779999999976e-05, 7.84030000000012e-05, 7.775000000000143e-05, 7.743099999999933e-05, 7.745900000000194e-05, 7.756899999999955e-05, 7.816600000000104e-05, 7.81250000000018e-05, 7.786099999999851e-05, 7.752800000000032e-05, 7.742999999999986e-05, 7.82779999999976e-05, 7.741699999999976e-05, 7.761099999999826e-05, 7.79030000000007e-05, 7.818100000000008e-05, 7.836199999999849e-05, 7.823600000000236e-05, 7.77770000000011e-05, 7.755499999999999e-05, 7.838900000000162e-05, 7.813900000000137e-05, 7.815300000000094e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.581" endtime="20201112 09:44:12.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.576" endtime="20201112 09:44:12.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.586" endtime="20201112 09:44:12.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.589" endtime="20201112 09:44:12.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.588" endtime="20201112 09:44:12.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.584" endtime="20201112 09:44:12.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.214" endtime="20201112 09:44:12.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.214" endtime="20201112 09:44:12.610"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.619" endtime="20201112 09:44:12.637"></status>
</kw>
<msg timestamp="20201112 09:44:12.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.617" endtime="20201112 09:44:12.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.638" endtime="20201112 09:44:12.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.641" endtime="20201112 09:44:12.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.615" endtime="20201112 09:44:12.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.613" endtime="20201112 09:44:12.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.650" endtime="20201112 09:44:12.936"></status>
</kw>
<msg timestamp="20201112 09:44:12.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020651083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.648" endtime="20201112 09:44:12.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020651083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.941" endtime="20201112 09:44:12.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.949" endtime="20201112 09:44:12.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.646" endtime="20201112 09:44:12.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.644" endtime="20201112 09:44:12.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.956" level="INFO">${RESULT} = [{'time': 0.020651083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.863900000000187e-05, 'source_diff': 7.863900000000187e-05}, {'time': 0.020743083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:12.952" endtime="20201112 09:44:12.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.969" level="INFO">${ACCURACY} = {'time': [0.020651083, 0.020743083, 0.020829097, 0.020919111, 0.021005153, 0.021090139, 0.021182153, 0.021271167, 0.021362167, 0.021447181, 0.021538194, 0.021627181, 0.021715194, 0.021800208, 0.021885...</msg>
<status status="PASS" starttime="20201112 09:44:12.957" endtime="20201112 09:44:12.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.974" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.973" endtime="20201112 09:44:12.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.976" level="INFO">VALUE: [7.863900000000187e-05, 7.894399999999746e-05, 7.915300000000194e-05, 7.88190000000008e-05, 7.872199999999982e-05, 7.901400000000225e-05, 7.91389999999989e-05, 7.883399999999985e-05, 7.869500000000015e-05, 7.929199999999817e-05, 7.880500000000124e-05, 7.852799999999785e-05, 7.916599999999857e-05, 7.856900000000056e-05, 7.87909999999982e-05, 7.904200000000139e-05, 7.919399999999771e-05, 7.943100000000133e-05, 7.856900000000056e-05, 7.89030000000017e-05, 7.929200000000164e-05, 7.933400000000035e-05, 7.883399999999985e-05, 7.858300000000012e-05, 7.89580000000005e-05, 7.920800000000075e-05, 7.93329999999974e-05, 7.865299999999797e-05, 7.908300000000063e-05, 7.898599999999964e-05, 7.862499999999883e-05, 7.869500000000015e-05, 7.920900000000022e-05, 7.882000000000028e-05, 7.857000000000003e-05, 7.932000000000078e-05, 7.841700000000076e-05, 7.919399999999771e-05, 7.888900000000212e-05, 7.901400000000225e-05, 7.894399999999746e-05, 7.912499999999933e-05, 7.852799999999785e-05, 7.868099999999711e-05, 7.863900000000187e-05, 7.902800000000182e-05, 7.868000000000111e-05, 7.944400000000143e-05, 7.872199999999982e-05, 7.92909999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.975" endtime="20201112 09:44:12.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.970" endtime="20201112 09:44:12.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.980" endtime="20201112 09:44:12.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.983" endtime="20201112 09:44:13.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.982" endtime="20201112 09:44:13.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.978" endtime="20201112 09:44:13.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.611" endtime="20201112 09:44:13.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.610" endtime="20201112 09:44:13.004"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.013" endtime="20201112 09:44:13.032"></status>
</kw>
<msg timestamp="20201112 09:44:13.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.012" endtime="20201112 09:44:13.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.034" endtime="20201112 09:44:13.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.036" endtime="20201112 09:44:13.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.009" endtime="20201112 09:44:13.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.007" endtime="20201112 09:44:13.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.045" endtime="20201112 09:44:13.333"></status>
</kw>
<msg timestamp="20201112 09:44:13.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.044" endtime="20201112 09:44:13.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.338" endtime="20201112 09:44:13.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.346" endtime="20201112 09:44:13.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.041" endtime="20201112 09:44:13.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.040" endtime="20201112 09:44:13.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.353" level="INFO">${RESULT} = [{'time': 0.019952653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.945900000000047e-05, 'source_diff': 7.945900000000047e-05}, {'time': 0.020040653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.349" endtime="20201112 09:44:13.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.366" level="INFO">${ACCURACY} = {'time': [0.019952653, 0.020040653, 0.020129681, 0.020217694, 0.020306694, 0.020392694, 0.020484722, 0.020570736, 0.020662736, 0.020752736, 0.02084175, 0.020931764, 0.021018819, 0.021106806, 0.0211978...</msg>
<status status="PASS" starttime="20201112 09:44:13.354" endtime="20201112 09:44:13.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.370" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.369" endtime="20201112 09:44:13.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.373" level="INFO">VALUE: [7.945900000000047e-05, 8.031999999999831e-05, 7.954199999999842e-05, 8.038800000000068e-05, 8.025000000000046e-05, 7.972200000000082e-05, 7.994400000000193e-05, 8.004199999999892e-05, 8.040299999999972e-05, 7.991700000000226e-05, 7.987500000000008e-05, 7.959699999999723e-05, 8.020800000000175e-05, 7.993099999999836e-05, 8.029199999999917e-05, 7.961100000000026e-05, 7.991599999999932e-05, 7.954100000000242e-05, 8.022200000000132e-05, 7.994399999999846e-05, 8.011100000000076e-05, 8.018100000000208e-05, 8.020799999999828e-05, 8.019399999999871e-05, 8.00840000000011e-05, 7.993099999999836e-05, 8.02909999999997e-05, 7.995900000000097e-05, 7.988899999999965e-05, 8.00130000000003e-05, 8.030500000000274e-05, 8.03329999999984e-05, 7.947200000000057e-05, 8.04169999999993e-05, 7.952799999999885e-05, 8.03329999999984e-05, 7.969500000000115e-05, 7.951399999999928e-05, 8.01389999999999e-05, 8.023600000000089e-05, 7.952799999999885e-05, 7.984799999999695e-05, 8.036100000000101e-05, 7.9458000000001e-05, 7.976399999999953e-05, 8.026400000000003e-05, 8.006899999999859e-05, 7.99030000000027e-05, 7.957000000000103e-05, 7.988899999999965e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.371" endtime="20201112 09:44:13.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.367" endtime="20201112 09:44:13.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.377" endtime="20201112 09:44:13.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.380" endtime="20201112 09:44:13.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.378" endtime="20201112 09:44:13.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.375" endtime="20201112 09:44:13.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.005" endtime="20201112 09:44:13.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.005" endtime="20201112 09:44:13.401"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.410" endtime="20201112 09:44:13.428"></status>
</kw>
<msg timestamp="20201112 09:44:13.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.408" endtime="20201112 09:44:13.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.429" endtime="20201112 09:44:13.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.432" endtime="20201112 09:44:13.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.405" endtime="20201112 09:44:13.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.403" endtime="20201112 09:44:13.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.441" endtime="20201112 09:44:13.727"></status>
</kw>
<msg timestamp="20201112 09:44:13.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.439" endtime="20201112 09:44:13.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.732" endtime="20201112 09:44:13.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.740" endtime="20201112 09:44:13.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.436" endtime="20201112 09:44:13.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.435" endtime="20201112 09:44:13.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.747" level="INFO">${RESULT} = [{'time': 0.019901167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068100000000258e-05, 'source_diff': 8.068100000000258e-05}, {'time': 0.019989125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.744" endtime="20201112 09:44:13.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.761" level="INFO">${ACCURACY} = {'time': [0.019901167, 0.019989125, 0.020080153, 0.020173153, 0.020266167, 0.020356153, 0.020444167, 0.020533222, 0.02062625, 0.020720208, 0.020808236, 0.020896236, 0.020987278, 0.021076264, 0.0211682...</msg>
<status status="PASS" starttime="20201112 09:44:13.748" endtime="20201112 09:44:13.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.766" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.765" endtime="20201112 09:44:13.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.768" level="INFO">VALUE: [8.068100000000258e-05, 8.043099999999886e-05, 8.106999999999906e-05, 8.07780000000001e-05, 8.079200000000314e-05, 8.122199999999885e-05, 8.09169999999998e-05, 8.051400000000028e-05, 8.08329999999989e-05, 8.131899999999984e-05, 8.06390000000004e-05, 8.079199999999967e-05, 8.104199999999992e-05, 8.050000000000071e-05, 8.07780000000001e-05, 8.043100000000233e-05, 8.066699999999954e-05, 8.136099999999855e-05, 8.106999999999906e-05, 8.127700000000113e-05, 8.08190000000028e-05, 8.070799999999878e-05, 8.048600000000114e-05, 8.109699999999873e-05, 8.050000000000071e-05, 8.115300000000047e-05, 8.12369999999979e-05, 8.134699999999898e-05, 8.116700000000004e-05, 8.04169999999993e-05, 8.104199999999992e-05, 8.099999999999774e-05, 8.101399999999731e-05, 8.056899999999909e-05, 8.042999999999939e-05, 8.100000000000121e-05, 8.061100000000126e-05, 8.08329999999989e-05, 8.124999999999799e-05, 8.080599999999924e-05, 8.108299999999916e-05, 8.084699999999848e-05, 8.12780000000006e-05, 8.04169999999993e-05, 8.076299999999759e-05, 8.083300000000238e-05, 8.126399999999756e-05, 8.093099999999936e-05, 8.134700000000245e-05, 8.065299999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.767" endtime="20201112 09:44:13.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.762" endtime="20201112 09:44:13.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.772" endtime="20201112 09:44:13.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.776" endtime="20201112 09:44:13.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.774" endtime="20201112 09:44:13.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.770" endtime="20201112 09:44:13.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.402" endtime="20201112 09:44:13.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.401" endtime="20201112 09:44:13.797"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.805" endtime="20201112 09:44:13.824"></status>
</kw>
<msg timestamp="20201112 09:44:13.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.804" endtime="20201112 09:44:13.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.825" endtime="20201112 09:44:13.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.828" endtime="20201112 09:44:13.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.801" endtime="20201112 09:44:13.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.799" endtime="20201112 09:44:13.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.837" endtime="20201112 09:44:14.123"></status>
</kw>
<msg timestamp="20201112 09:44:14.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.836" endtime="20201112 09:44:14.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.127" endtime="20201112 09:44:14.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.136" endtime="20201112 09:44:14.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.833" endtime="20201112 09:44:14.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.831" endtime="20201112 09:44:14.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.142" level="INFO">${RESULT} = [{'time': 0.019899556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.201399999999831e-05, 'source_diff': 8.201399999999831e-05}, {'time': 0.019990556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.139" endtime="20201112 09:44:14.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.156" level="INFO">${ACCURACY} = {'time': [0.019899556, 0.019990556, 0.020079542, 0.020168556, 0.020257583, 0.020350583, 0.020444597, 0.020536625, 0.020630611, 0.020725625, 0.020819653, 0.020911653, 0.021004667, 0.021094667, 0.021189...</msg>
<status status="PASS" starttime="20201112 09:44:14.143" endtime="20201112 09:44:14.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.160" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.159" endtime="20201112 09:44:14.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.163" level="INFO">VALUE: [8.201399999999831e-05, 8.172299999999882e-05, 8.143099999999986e-05, 8.143099999999986e-05, 8.240199999999878e-05, 8.212499999999887e-05, 8.231899999999737e-05, 8.186099999999905e-05, 8.154200000000042e-05, 8.238900000000215e-05, 8.234699999999998e-05, 8.174999999999849e-05, 8.165300000000097e-05, 8.165300000000097e-05, 8.213799999999896e-05, 8.195800000000003e-05, 8.241600000000182e-05, 8.190199999999828e-05, 8.17910000000012e-05, 8.192999999999742e-05, 8.213899999999844e-05, 8.195800000000003e-05, 8.198599999999917e-05, 8.218100000000061e-05, 8.201400000000178e-05, 8.226399999999856e-05, 8.213899999999844e-05, 8.236199999999902e-05, 8.205500000000102e-05, 8.204100000000145e-05, 8.168000000000064e-05, 8.201400000000178e-05, 8.156900000000009e-05, 8.207000000000006e-05, 8.154200000000042e-05, 8.17910000000012e-05, 8.233399999999988e-05, 8.184699999999948e-05, 8.211200000000224e-05, 8.148599999999867e-05, 8.20269999999984e-05, 8.162500000000183e-05, 8.22910000000017e-05, 8.206900000000059e-05, 8.195800000000003e-05, 8.226400000000203e-05, 8.174999999999849e-05, 8.163899999999794e-05, 8.169499999999968e-05, 8.176399999999806e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.161" endtime="20201112 09:44:14.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.157" endtime="20201112 09:44:14.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.167" endtime="20201112 09:44:14.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.170" endtime="20201112 09:44:14.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.168" endtime="20201112 09:44:14.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.165" endtime="20201112 09:44:14.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.797" endtime="20201112 09:44:14.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.797" endtime="20201112 09:44:14.191"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.200" endtime="20201112 09:44:14.217"></status>
</kw>
<msg timestamp="20201112 09:44:14.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.198" endtime="20201112 09:44:14.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.218" endtime="20201112 09:44:14.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.221" endtime="20201112 09:44:14.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.195" endtime="20201112 09:44:14.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.193" endtime="20201112 09:44:14.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.230" endtime="20201112 09:44:14.516"></status>
</kw>
<msg timestamp="20201112 09:44:14.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.228" endtime="20201112 09:44:14.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.521" endtime="20201112 09:44:14.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.529" endtime="20201112 09:44:14.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.226" endtime="20201112 09:44:14.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.224" endtime="20201112 09:44:14.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.536" level="INFO">${RESULT} = [{'time': 0.020108708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.277699999999916e-05, 'source_diff': 8.277699999999916e-05}, {'time': 0.020202722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.532" endtime="20201112 09:44:14.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.549" level="INFO">${ACCURACY} = {'time': [0.020108708, 0.020202722, 0.020292722, 0.020388736, 0.02048175, 0.02057675, 0.020670778, 0.020766792, 0.020860792, 0.020954806, 0.021047819, 0.021142833, 0.021235847, 0.021328847, 0.02142086...</msg>
<status status="PASS" starttime="20201112 09:44:14.537" endtime="20201112 09:44:14.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.554" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.553" endtime="20201112 09:44:14.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.556" level="INFO">VALUE: [8.277699999999916e-05, 8.334700000000098e-05, 8.283299999999744e-05, 8.337500000000012e-05, 8.331899999999837e-05, 8.29170000000018e-05, 8.262499999999937e-05, 8.283400000000038e-05, 8.32919999999987e-05, 8.261199999999927e-05, 8.298600000000017e-05, 8.262499999999937e-05, 8.31659999999991e-05, 8.331900000000184e-05, 8.272200000000035e-05, 8.334700000000098e-05, 8.281900000000134e-05, 8.322200000000085e-05, 8.291699999999833e-05, 8.333400000000088e-05, 8.338899999999969e-05, 8.305499999999855e-05, 8.266699999999808e-05, 8.288900000000265e-05, 8.324999999999999e-05, 8.322199999999738e-05, 8.315300000000247e-05, 8.295799999999756e-05, 8.320800000000128e-05, 8.327799999999913e-05, 8.283400000000038e-05, 8.308399999999716e-05, 8.265300000000197e-05, 8.2846999999997e-05, 8.340199999999978e-05, 8.290299999999876e-05, 8.317999999999867e-05, 8.305500000000202e-05, 8.279200000000167e-05, 8.288899999999919e-05, 8.32780000000026e-05, 8.249999999999924e-05, 8.336099999999708e-05, 8.307000000000106e-05, 8.297300000000007e-05, 8.280500000000177e-05, 8.334700000000098e-05, 8.244400000000096e-05, 8.298699999999964e-05, 8.283299999999744e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.555" endtime="20201112 09:44:14.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.550" endtime="20201112 09:44:14.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.563" endtime="20201112 09:44:14.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.567" endtime="20201112 09:44:14.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.565" endtime="20201112 09:44:14.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.562" endtime="20201112 09:44:14.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.192" endtime="20201112 09:44:14.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.191" endtime="20201112 09:44:14.588"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.597" endtime="20201112 09:44:14.614"></status>
</kw>
<msg timestamp="20201112 09:44:14.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.595" endtime="20201112 09:44:14.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.616" endtime="20201112 09:44:14.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.618" endtime="20201112 09:44:14.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.592" endtime="20201112 09:44:14.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.590" endtime="20201112 09:44:14.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.627" endtime="20201112 09:44:14.916"></status>
</kw>
<msg timestamp="20201112 09:44:14.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.625" endtime="20201112 09:44:14.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.920" endtime="20201112 09:44:14.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.928" endtime="20201112 09:44:14.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.623" endtime="20201112 09:44:14.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.621" endtime="20201112 09:44:14.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.935" level="INFO">${RESULT} = [{'time': 0.020052875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.345800000000153e-05, 'source_diff': 8.345800000000153e-05}, {'time': 0.020144875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.931" endtime="20201112 09:44:14.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.948" level="INFO">${ACCURACY} = {'time': [0.020052875, 0.020144875, 0.020236889, 0.020330903, 0.020426944, 0.020516931, 0.020607944, 0.020700972, 0.020794972, 0.020885958, 0.020979, 0.021069986, 0.021162, 0.021253014, 0.021345069, 0...</msg>
<status status="PASS" starttime="20201112 09:44:14.936" endtime="20201112 09:44:14.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.953" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.952" endtime="20201112 09:44:14.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.955" level="INFO">VALUE: [8.345800000000153e-05, 8.4153e-05, 8.387500000000062e-05, 8.407000000000206e-05, 8.344399999999849e-05, 8.355599999999852e-05, 8.426300000000109e-05, 8.420800000000228e-05, 8.344399999999849e-05, 8.391599999999985e-05, 8.370800000000178e-05, 8.34859999999972e-05, 8.422200000000185e-05, 8.36529999999995e-05, 8.402700000000041e-05, 8.370900000000125e-05, 8.436100000000155e-05, 8.348700000000014e-05, 8.36659999999996e-05, 8.336100000000055e-05, 8.405599999999902e-05, 8.340299999999926e-05, 8.391599999999985e-05, 8.408299999999869e-05, 8.394499999999847e-05, 8.419499999999872e-05, 8.420800000000228e-05, 8.379200000000267e-05, 8.411200000000077e-05, 8.34720000000011e-05, 8.391699999999933e-05, 8.344399999999849e-05, 8.41660000000001e-05, 8.366700000000254e-05, 8.363899999999994e-05, 8.400000000000074e-05, 8.386100000000105e-05, 8.424999999999752e-05, 8.40980000000012e-05, 8.388900000000019e-05, 8.387500000000062e-05, 8.387500000000062e-05, 8.38049999999993e-05, 8.43469999999985e-05, 8.430599999999927e-05, 8.37919999999992e-05, 8.409699999999826e-05, 8.436100000000155e-05, 8.377799999999963e-05, 8.427800000000013e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.954" endtime="20201112 09:44:14.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.949" endtime="20201112 09:44:14.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.959" endtime="20201112 09:44:14.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.962" endtime="20201112 09:44:14.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.961" endtime="20201112 09:44:14.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.957" endtime="20201112 09:44:14.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.589" endtime="20201112 09:44:14.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.588" endtime="20201112 09:44:14.983"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.992" endtime="20201112 09:44:15.010"></status>
</kw>
<msg timestamp="20201112 09:44:15.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.990" endtime="20201112 09:44:15.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.012" endtime="20201112 09:44:15.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.014" endtime="20201112 09:44:15.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.988" endtime="20201112 09:44:15.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.986" endtime="20201112 09:44:15.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.023" endtime="20201112 09:44:15.310"></status>
</kw>
<msg timestamp="20201112 09:44:15.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019970958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.022" endtime="20201112 09:44:15.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019970958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.314" endtime="20201112 09:44:15.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.322" endtime="20201112 09:44:15.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.019" endtime="20201112 09:44:15.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.017" endtime="20201112 09:44:15.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.329" level="INFO">${RESULT} = [{'time': 0.019970958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.468000000000017e-05, 'source_diff': 8.468000000000017e-05}, {'time': 0.020066986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:15.326" endtime="20201112 09:44:15.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.342" level="INFO">${ACCURACY} = {'time': [0.019970958, 0.020066986, 0.020158986, 0.020251, 0.020343014, 0.020440028, 0.020532042, 0.020627042, 0.020718042, 0.020810083, 0.020904069, 0.020996097, 0.021092083, 0.021188111, 0.021284111...</msg>
<status status="PASS" starttime="20201112 09:44:15.330" endtime="20201112 09:44:15.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.347" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.346" endtime="20201112 09:44:15.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.349" level="INFO">VALUE: [8.468000000000017e-05, 8.513899999999797e-05, 8.501400000000131e-05, 8.484700000000248e-05, 8.536099999999908e-05, 8.516700000000058e-05, 8.447300000000157e-05, 8.483400000000238e-05, 8.502799999999741e-05, 8.463900000000094e-05, 8.470799999999931e-05, 8.480499999999683e-05, 8.508299999999969e-05, 8.51249999999984e-05, 8.502800000000088e-05, 8.497199999999913e-05, 8.501399999999784e-05, 8.537499999999865e-05, 8.486100000000205e-05, 8.508300000000316e-05, 8.484800000000195e-05, 8.46530000000005e-05, 8.542999999999745e-05, 8.455500000000005e-05, 8.487500000000162e-05, 8.53469999999995e-05, 8.455599999999952e-05, 8.448600000000167e-05, 8.483299999999944e-05, 8.492999999999695e-05, 8.470900000000225e-05, 8.500000000000174e-05, 8.490300000000076e-05, 8.531999999999984e-05, 8.463800000000146e-05, 8.459699999999876e-05, 8.51249999999984e-05, 8.494399999999999e-05, 8.508299999999969e-05, 8.47920000000002e-05, 8.454199999999995e-05, 8.488900000000119e-05, 8.520899999999929e-05, 8.526400000000156e-05, 8.442999999999992e-05, 8.479099999999726e-05, 8.476400000000106e-05, 8.461099999999833e-05, 8.515299999999754e-05, 8.49859999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.348" endtime="20201112 09:44:15.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.343" endtime="20201112 09:44:15.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.353" endtime="20201112 09:44:15.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.357" endtime="20201112 09:44:15.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.355" endtime="20201112 09:44:15.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.351" endtime="20201112 09:44:15.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.984" endtime="20201112 09:44:15.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.983" endtime="20201112 09:44:15.377"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.386" endtime="20201112 09:44:15.404"></status>
</kw>
<msg timestamp="20201112 09:44:15.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.385" endtime="20201112 09:44:15.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.406" endtime="20201112 09:44:15.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.408" endtime="20201112 09:44:15.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.382" endtime="20201112 09:44:15.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.380" endtime="20201112 09:44:15.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.417" endtime="20201112 09:44:15.704"></status>
</kw>
<msg timestamp="20201112 09:44:15.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01990125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:15.416" endtime="20201112 09:44:15.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01990125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:15.708" endtime="20201112 09:44:15.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.717" endtime="20201112 09:44:15.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.413" endtime="20201112 09:44:15.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.411" endtime="20201112 09:44:15.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.723" level="INFO">${RESULT} = [{'time': 0.01990125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.579199999999773e-05, 'source_diff': 8.579199999999773e-05}, {'time': 0.019996278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:15.720" endtime="20201112 09:44:15.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.737" level="INFO">${ACCURACY} = {'time': [0.01990125, 0.019996278, 0.020089278, 0.020186319, 0.020278375, 0.020371361, 0.020465333, 0.020562375, 0.020658347, 0.020752347, 0.020850375, 0.020945375, 0.021038389, 0.021137417, 0.0212354...</msg>
<status status="PASS" starttime="20201112 09:44:15.724" endtime="20201112 09:44:15.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.741" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.740" endtime="20201112 09:44:15.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.744" level="INFO">VALUE: [8.579199999999773e-05, 8.577799999999816e-05, 8.613899999999897e-05, 8.605500000000155e-05, 8.619400000000124e-05, 8.588900000000219e-05, 8.608299999999722e-05, 8.558300000000019e-05, 8.544400000000049e-05, 8.547199999999963e-05, 8.583300000000044e-05, 8.618099999999768e-05, 8.538900000000169e-05, 8.599999999999927e-05, 8.632000000000084e-05, 8.619500000000072e-05, 8.543000000000092e-05, 8.595799999999709e-05, 8.583300000000044e-05, 8.561099999999933e-05, 8.556899999999715e-05, 8.575000000000249e-05, 8.570799999999684e-05, 8.57920000000012e-05, 8.577799999999816e-05, 8.625000000000299e-05, 8.637499999999965e-05, 8.615199999999906e-05, 8.605500000000155e-05, 8.555500000000105e-05, 8.587500000000262e-05, 8.587499999999915e-05, 8.580600000000077e-05, 8.56530000000015e-05, 8.570899999999979e-05, 8.580600000000077e-05, 8.588899999999872e-05, 8.638899999999922e-05, 8.584799999999948e-05, 8.572199999999988e-05, 8.563899999999847e-05, 8.633300000000094e-05, 8.613899999999897e-05, 8.609700000000026e-05, 8.563899999999847e-05, 8.601399999999884e-05, 8.573599999999945e-05, 8.634699999999704e-05, 8.634799999999998e-05, 8.565299999999804e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.742" endtime="20201112 09:44:15.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.738" endtime="20201112 09:44:15.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.747" endtime="20201112 09:44:15.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.751" endtime="20201112 09:44:15.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.749" endtime="20201112 09:44:15.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.746" endtime="20201112 09:44:15.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.378" endtime="20201112 09:44:15.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.378" endtime="20201112 09:44:15.772"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.781" endtime="20201112 09:44:15.801"></status>
</kw>
<msg timestamp="20201112 09:44:15.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.780" endtime="20201112 09:44:15.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.803" endtime="20201112 09:44:15.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.805" endtime="20201112 09:44:15.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.777" endtime="20201112 09:44:15.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.774" endtime="20201112 09:44:15.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.814" endtime="20201112 09:44:16.101"></status>
</kw>
<msg timestamp="20201112 09:44:16.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.813" endtime="20201112 09:44:16.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.106" endtime="20201112 09:44:16.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.114" endtime="20201112 09:44:16.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.810" endtime="20201112 09:44:16.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.808" endtime="20201112 09:44:16.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.121" level="INFO">${RESULT} = [{'time': 0.021682139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.700000000000027e-05, 'source_diff': 8.700000000000027e-05}, {'time': 0.021780181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.118" endtime="20201112 09:44:16.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.134" level="INFO">${ACCURACY} = {'time': [0.021682139, 0.021780181, 0.021876167, 0.021969181, 0.022064181, 0.022158208, 0.022256222, 0.022356208, 0.022453222, 0.022550292, 0.02264625, 0.022744278, 0.022843278, 0.022943347, 0.0230362...</msg>
<status status="PASS" starttime="20201112 09:44:16.122" endtime="20201112 09:44:16.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.139" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.138" endtime="20201112 09:44:16.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.141" level="INFO">VALUE: [8.700000000000027e-05, 8.663899999999947e-05, 8.688899999999972e-05, 8.71250000000004e-05, 8.641699999999836e-05, 8.733299999999847e-05, 8.68189999999984e-05, 8.71250000000004e-05, 8.655499999999858e-05, 8.731999999999837e-05, 8.644399999999802e-05, 8.706999999999812e-05, 8.652800000000238e-05, 8.704099999999951e-05, 8.672300000000036e-05, 8.680499999999883e-05, 8.649999999999977e-05, 8.649999999999977e-05, 8.704099999999951e-05, 8.701399999999984e-05, 8.665299999999904e-05, 8.709800000000073e-05, 8.701399999999984e-05, 8.672200000000088e-05, 8.71669999999991e-05, 8.644500000000097e-05, 8.727799999999966e-05, 8.648699999999968e-05, 8.720799999999834e-05, 8.677699999999969e-05, 8.647200000000063e-05, 8.74310000000024e-05, 8.733299999999847e-05, 8.693099999999843e-05, 8.652800000000238e-05, 8.73189999999989e-05, 8.695900000000104e-05, 8.691699999999886e-05, 8.688899999999972e-05, 8.704099999999951e-05, 8.706899999999865e-05, 8.661100000000033e-05, 8.729099999999976e-05, 8.708300000000169e-05, 8.744400000000249e-05, 8.734699999999804e-05, 8.693099999999843e-05, 8.64860000000002e-05, 8.686100000000058e-05, 8.698700000000018e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.140" endtime="20201112 09:44:16.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.135" endtime="20201112 09:44:16.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.145" endtime="20201112 09:44:16.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.148" endtime="20201112 09:44:16.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.147" endtime="20201112 09:44:16.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.143" endtime="20201112 09:44:16.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.773" endtime="20201112 09:44:16.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.772" endtime="20201112 09:44:16.169"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.178" endtime="20201112 09:44:16.198"></status>
</kw>
<msg timestamp="20201112 09:44:16.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.177" endtime="20201112 09:44:16.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.200" endtime="20201112 09:44:16.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.202" endtime="20201112 09:44:16.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.174" endtime="20201112 09:44:16.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.172" endtime="20201112 09:44:16.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.211" endtime="20201112 09:44:16.499"></status>
</kw>
<msg timestamp="20201112 09:44:16.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020502333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020590694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.210" endtime="20201112 09:44:16.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020502333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020590694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.503" endtime="20201112 09:44:16.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.511" endtime="20201112 09:44:16.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.207" endtime="20201112 09:44:16.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.205" endtime="20201112 09:44:16.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.518" level="INFO">${RESULT} = [{'time': 0.020590694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.836099999999861e-05, 'source_diff': 8.836099999999861e-05}, {'time': 0.020688694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.515" endtime="20201112 09:44:16.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.531" level="INFO">${ACCURACY} = {'time': [0.020590694, 0.020688694, 0.020784722, 0.020882722, 0.020982722, 0.021083736, 0.02118375, 0.021279764, 0.021373806, 0.021468792, 0.021564806, 0.021660806, 0.021757847, 0.021851847, 0.0219508...</msg>
<status status="PASS" starttime="20201112 09:44:16.519" endtime="20201112 09:44:16.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.536" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.535" endtime="20201112 09:44:16.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.538" level="INFO">VALUE: [8.836099999999861e-05, 8.830500000000033e-05, 8.751399999999687e-05, 8.820799999999934e-05, 8.740299999999979e-05, 8.787499999999768e-05, 8.744400000000249e-05, 8.813900000000097e-05, 8.829200000000023e-05, 8.801400000000084e-05, 8.790300000000029e-05, 8.741700000000283e-05, 8.81250000000014e-05, 8.822199999999891e-05, 8.829100000000076e-05, 8.757000000000209e-05, 8.798599999999823e-05, 8.843099999999993e-05, 8.834699999999904e-05, 8.755599999999905e-05, 8.777800000000016e-05, 8.845799999999959e-05, 8.759799999999776e-05, 8.788799999999777e-05, 8.816599999999716e-05, 8.79999999999978e-05, 8.802800000000041e-05, 8.747199999999816e-05, 8.809699999999879e-05, 8.756999999999862e-05, 8.824999999999805e-05, 8.820900000000229e-05, 8.804199999999998e-05, 8.776400000000059e-05, 8.804199999999998e-05, 8.787500000000115e-05, 8.813900000000097e-05, 8.783300000000244e-05, 8.804199999999998e-05, 8.770800000000231e-05, 8.801400000000084e-05, 8.773599999999798e-05, 8.787500000000115e-05, 8.791699999999986e-05, 8.820799999999934e-05, 8.748700000000068e-05, 8.838900000000122e-05, 8.836099999999861e-05, 8.815300000000054e-05, 8.752799999999991e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.537" endtime="20201112 09:44:16.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.532" endtime="20201112 09:44:16.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.542" endtime="20201112 09:44:16.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.545" endtime="20201112 09:44:16.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.544" endtime="20201112 09:44:16.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.540" endtime="20201112 09:44:16.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.170" endtime="20201112 09:44:16.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.170" endtime="20201112 09:44:16.566"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.575" endtime="20201112 09:44:16.596"></status>
</kw>
<msg timestamp="20201112 09:44:16.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.574" endtime="20201112 09:44:16.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.597" endtime="20201112 09:44:16.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.600" endtime="20201112 09:44:16.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.571" endtime="20201112 09:44:16.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.569" endtime="20201112 09:44:16.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.609" endtime="20201112 09:44:16.896"></status>
</kw>
<msg timestamp="20201112 09:44:16.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020777778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020867028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.607" endtime="20201112 09:44:16.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020777778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020867028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.900" endtime="20201112 09:44:16.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.909" endtime="20201112 09:44:16.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.605" endtime="20201112 09:44:16.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.603" endtime="20201112 09:44:16.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.915" level="INFO">${RESULT} = [{'time': 0.020867028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.924999999999905e-05, 'source_diff': 8.924999999999905e-05}, {'time': 0.020968042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.912" endtime="20201112 09:44:16.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.929" level="INFO">${ACCURACY} = {'time': [0.020867028, 0.020968042, 0.021070042, 0.021168083, 0.021267042, 0.021368069, 0.021464097, 0.021566083, 0.021662097, 0.021762125, 0.021859125, 0.021959125, 0.022057139, 0.022156153, 0.022255...</msg>
<status status="PASS" starttime="20201112 09:44:16.916" endtime="20201112 09:44:16.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.933" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.932" endtime="20201112 09:44:16.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.936" level="INFO">VALUE: [8.924999999999905e-05, 8.8638999999998e-05, 8.900000000000227e-05, 8.869400000000027e-05, 8.920899999999982e-05, 8.91519999999986e-05, 8.893000000000095e-05, 8.912499999999893e-05, 8.886100000000258e-05, 8.856900000000015e-05, 8.88060000000003e-05, 8.856900000000015e-05, 8.923599999999948e-05, 8.925000000000252e-05, 8.876399999999812e-05, 8.901400000000184e-05, 8.863900000000147e-05, 8.929100000000176e-05, 8.909699999999979e-05, 8.912499999999893e-05, 8.879099999999779e-05, 8.8638999999998e-05, 8.863900000000147e-05, 8.883299999999997e-05, 8.865299999999757e-05, 8.873599999999898e-05, 8.938900000000222e-05, 8.88060000000003e-05, 8.854100000000101e-05, 8.859699999999929e-05, 8.89999999999988e-05, 8.859699999999929e-05, 8.872199999999941e-05, 8.841700000000036e-05, 8.868100000000018e-05, 8.923599999999948e-05, 8.938900000000222e-05, 8.922300000000286e-05, 8.905499999999761e-05, 8.84999999999983e-05, 8.884699999999954e-05, 8.93190000000009e-05, 8.879099999999779e-05, 8.879100000000126e-05, 8.913900000000197e-05, 8.905600000000055e-05, 8.886100000000258e-05, 8.884799999999901e-05, 8.895900000000304e-05, 8.877699999999822e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.934" endtime="20201112 09:44:16.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.930" endtime="20201112 09:44:16.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.939" endtime="20201112 09:44:16.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.943" endtime="20201112 09:44:16.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.941" endtime="20201112 09:44:16.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.938" endtime="20201112 09:44:16.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.567" endtime="20201112 09:44:16.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.567" endtime="20201112 09:44:16.964"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.972" endtime="20201112 09:44:16.991"></status>
</kw>
<msg timestamp="20201112 09:44:16.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.971" endtime="20201112 09:44:16.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.992" endtime="20201112 09:44:16.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.995" endtime="20201112 09:44:16.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.968" endtime="20201112 09:44:16.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.966" endtime="20201112 09:44:16.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.004" endtime="20201112 09:44:17.290"></status>
</kw>
<msg timestamp="20201112 09:44:17.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.002" endtime="20201112 09:44:17.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.294" endtime="20201112 09:44:17.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.303" endtime="20201112 09:44:17.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.000" endtime="20201112 09:44:17.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.998" endtime="20201112 09:44:17.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.310" level="INFO">${RESULT} = [{'time': 0.019804458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.008300000000122e-05, 'source_diff': 9.008300000000122e-05}, {'time': 0.019906486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.306" endtime="20201112 09:44:17.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.323" level="INFO">${ACCURACY} = {'time': [0.019804458, 0.019906486, 0.0200075, 0.020104486, 0.020203514, 0.020303514, 0.020403528, 0.020504542, 0.020606542, 0.020708583, 0.020804569, 0.020904597, 0.021003625, 0.021105611, 0.02120661...</msg>
<status status="PASS" starttime="20201112 09:44:17.310" endtime="20201112 09:44:17.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.327" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.326" endtime="20201112 09:44:17.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.330" level="INFO">VALUE: [9.008300000000122e-05, 8.993000000000195e-05, 9.03190000000019e-05, 8.974999999999955e-05, 9.019499999999778e-05, 9.015300000000254e-05, 9.023600000000048e-05, 9.029200000000223e-05, 8.958400000000019e-05, 9.042999999999898e-05, 8.977699999999922e-05, 9.006900000000165e-05, 9.026400000000309e-05, 8.962499999999943e-05, 9.002799999999894e-05, 8.95129999999994e-05, 8.995800000000109e-05, 9.011100000000036e-05, 9.033399999999747e-05, 8.947299999999964e-05, 9.029099999999929e-05, 8.943000000000145e-05, 8.986100000000011e-05, 8.977799999999869e-05, 9.005500000000208e-05, 8.98329999999975e-05, 8.951400000000234e-05, 9.019500000000125e-05, 9.025000000000005e-05, 8.961099999999986e-05, 8.972199999999694e-05, 8.982000000000087e-05, 8.94999999999993e-05, 9.002699999999947e-05, 8.980499999999836e-05, 8.986100000000011e-05, 8.984700000000054e-05, 8.950000000000277e-05, 8.972299999999989e-05, 8.966699999999814e-05, 8.955599999999758e-05, 9.001399999999937e-05, 8.961099999999986e-05, 9.01800000000022e-05, 9.038899999999975e-05, 8.986100000000011e-05, 9.01939999999983e-05, 9.013900000000297e-05, 9.020800000000134e-05, 9.009700000000079e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.328" endtime="20201112 09:44:17.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.324" endtime="20201112 09:44:17.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.333" endtime="20201112 09:44:17.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.337" endtime="20201112 09:44:17.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.335" endtime="20201112 09:44:17.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.332" endtime="20201112 09:44:17.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.964" endtime="20201112 09:44:17.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.964" endtime="20201112 09:44:17.358"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.367" endtime="20201112 09:44:17.386"></status>
</kw>
<msg timestamp="20201112 09:44:17.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.365" endtime="20201112 09:44:17.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.387" endtime="20201112 09:44:17.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.390" endtime="20201112 09:44:17.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.362" endtime="20201112 09:44:17.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.360" endtime="20201112 09:44:17.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.399" endtime="20201112 09:44:17.685"></status>
</kw>
<msg timestamp="20201112 09:44:17.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020036083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.397" endtime="20201112 09:44:17.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020036083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.689" endtime="20201112 09:44:17.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.698" endtime="20201112 09:44:17.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.394" endtime="20201112 09:44:17.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.393" endtime="20201112 09:44:17.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.704" level="INFO">${RESULT} = [{'time': 0.020036083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.117999999999973e-05, 'source_diff': 9.117999999999973e-05}, {'time': 0.020137097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.701" endtime="20201112 09:44:17.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.718" level="INFO">${ACCURACY} = {'time': [0.020036083, 0.020137097, 0.020236097, 0.020334125, 0.020435125, 0.020532125, 0.020632153, 0.020731153, 0.020828181, 0.020931181, 0.021034194, 0.021137194, 0.021238292, 0.021340236, 0.021438...</msg>
<status status="PASS" starttime="20201112 09:44:17.705" endtime="20201112 09:44:17.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.722" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.721" endtime="20201112 09:44:17.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.725" level="INFO">VALUE: [9.117999999999973e-05, 9.081899999999893e-05, 9.079099999999979e-05, 9.109700000000179e-05, 9.059699999999782e-05, 9.055599999999858e-05, 9.125000000000105e-05, 9.136099999999814e-05, 9.137500000000118e-05, 9.0639e-05, 9.061099999999739e-05, 9.108300000000222e-05, 9.084799999999754e-05, 9.049999999999683e-05, 9.126400000000062e-05, 9.075000000000055e-05, 9.141699999999989e-05, 9.052699999999997e-05, 9.129199999999976e-05, 9.137499999999771e-05, 9.091599999999991e-05, 9.10000000000008e-05, 9.079099999999979e-05, 9.112500000000093e-05, 9.086100000000111e-05, 9.047200000000116e-05, 9.141699999999989e-05, 9.073600000000098e-05, 9.062500000000043e-05, 9.062500000000043e-05, 9.048600000000073e-05, 9.091599999999991e-05, 9.062500000000043e-05, 9.083300000000197e-05, 9.134700000000204e-05, 9.130500000000333e-05, 9.069400000000227e-05, 9.134700000000204e-05, 9.112499999999746e-05, 9.077799999999969e-05, 9.057000000000162e-05, 9.080599999999883e-05, 9.115300000000007e-05, 9.06520000000001e-05, 9.105499999999961e-05, 9.109700000000179e-05, 9.108299999999875e-05, 9.126400000000062e-05, 9.080599999999883e-05, 9.123599999999801e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.723" endtime="20201112 09:44:17.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.719" endtime="20201112 09:44:17.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.728" endtime="20201112 09:44:17.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.732" endtime="20201112 09:44:17.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.730" endtime="20201112 09:44:17.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.727" endtime="20201112 09:44:17.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.359" endtime="20201112 09:44:17.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.358" endtime="20201112 09:44:17.753"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.762" endtime="20201112 09:44:17.780"></status>
</kw>
<msg timestamp="20201112 09:44:17.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.760" endtime="20201112 09:44:17.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.781" endtime="20201112 09:44:17.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.784" endtime="20201112 09:44:17.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.757" endtime="20201112 09:44:17.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.755" endtime="20201112 09:44:17.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.793" endtime="20201112 09:44:18.081"></status>
</kw>
<msg timestamp="20201112 09:44:18.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020085069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.791" endtime="20201112 09:44:18.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020085069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.085" endtime="20201112 09:44:18.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.093" endtime="20201112 09:44:18.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.789" endtime="20201112 09:44:18.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.787" endtime="20201112 09:44:18.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.100" level="INFO">${RESULT} = [{'time': 0.020085069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.141600000000041e-05, 'source_diff': 9.141600000000041e-05}, {'time': 0.020184083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.097" endtime="20201112 09:44:18.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.113" level="INFO">${ACCURACY} = {'time': [0.020085069, 0.020184083, 0.020284083, 0.020387097, 0.020492111, 0.020596139, 0.020697139, 0.020798167, 0.020900153, 0.020999222, 0.021101194, 0.021203264, 0.021304222, 0.021402208, 0.021501...</msg>
<status status="PASS" starttime="20201112 09:44:18.101" endtime="20201112 09:44:18.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.118" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.117" endtime="20201112 09:44:18.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.121" level="INFO">VALUE: [9.141600000000041e-05, 9.162499999999796e-05, 9.187500000000168e-05, 9.177800000000069e-05, 9.238900000000175e-05, 9.1639000000001e-05, 9.190300000000082e-05, 9.227799999999772e-05, 9.21390000000015e-05, 9.175000000000155e-05, 9.176300000000165e-05, 9.159699999999882e-05, 9.147200000000216e-05, 9.16939999999998e-05, 9.216600000000116e-05, 9.191699999999692e-05, 9.237499999999871e-05, 9.162500000000143e-05, 9.234699999999957e-05, 9.21390000000015e-05, 9.162500000000143e-05, 9.209800000000226e-05, 9.193000000000048e-05, 9.176399999999765e-05, 9.145799999999912e-05, 9.21390000000015e-05, 9.223599999999901e-05, 9.212499999999846e-05, 9.20000000000018e-05, 9.143099999999946e-05, 9.188900000000125e-05, 9.209800000000226e-05, 9.16939999999998e-05, 9.177699999999775e-05, 9.20000000000018e-05, 9.236100000000261e-05, 9.14719999999987e-05, 9.177800000000069e-05, 9.212500000000193e-05, 9.148600000000173e-05, 9.20139999999979e-05, 9.231900000000043e-05, 9.19589999999991e-05, 9.227800000000119e-05, 9.198599999999876e-05, 9.180500000000036e-05, 9.188900000000125e-05, 9.229099999999782e-05, 9.238900000000175e-05, 9.147200000000216e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.119" endtime="20201112 09:44:18.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.114" endtime="20201112 09:44:18.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.124" endtime="20201112 09:44:18.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.128" endtime="20201112 09:44:18.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.126" endtime="20201112 09:44:18.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.123" endtime="20201112 09:44:18.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.754" endtime="20201112 09:44:18.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.753" endtime="20201112 09:44:18.149"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.157" endtime="20201112 09:44:18.176"></status>
</kw>
<msg timestamp="20201112 09:44:18.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.156" endtime="20201112 09:44:18.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.178" endtime="20201112 09:44:18.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.180" endtime="20201112 09:44:18.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.153" endtime="20201112 09:44:18.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.151" endtime="20201112 09:44:18.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.189" endtime="20201112 09:44:18.476"></status>
</kw>
<msg timestamp="20201112 09:44:18.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.188" endtime="20201112 09:44:18.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.480" endtime="20201112 09:44:18.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.489" endtime="20201112 09:44:18.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.185" endtime="20201112 09:44:18.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.183" endtime="20201112 09:44:18.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.495" level="INFO">${RESULT} = [{'time': 0.019899236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.272199999999994e-05, 'source_diff': 9.272199999999994e-05}, {'time': 0.01999825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:18.492" endtime="20201112 09:44:18.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.509" level="INFO">${ACCURACY} = {'time': [0.019899236, 0.01999825, 0.020099292, 0.020201278, 0.020305292, 0.020410333, 0.020512333, 0.020617333, 0.020716333, 0.020815333, 0.020914347, 0.021019361, 0.021124375, 0.021229389, 0.0213284...</msg>
<status status="PASS" starttime="20201112 09:44:18.496" endtime="20201112 09:44:18.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.513" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.512" endtime="20201112 09:44:18.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.516" level="INFO">VALUE: [9.272199999999994e-05, 9.280599999999736e-05, 9.315300000000207e-05, 9.25139999999984e-05, 9.305599999999761e-05, 9.327699999999925e-05, 9.248599999999926e-05, 9.286100000000311e-05, 9.281900000000093e-05, 9.279099999999832e-05, 9.254099999999807e-05, 9.251400000000187e-05, 9.315300000000207e-05, 9.316700000000164e-05, 9.305599999999761e-05, 9.304199999999804e-05, 9.307000000000065e-05, 9.336199999999961e-05, 9.306900000000118e-05, 9.256900000000068e-05, 9.317999999999826e-05, 9.270800000000037e-05, 9.306900000000118e-05, 9.323600000000001e-05, 9.294500000000053e-05, 9.291700000000139e-05, 9.307000000000065e-05, 9.311099999999989e-05, 9.242999999999751e-05, 9.334700000000057e-05, 9.305499999999814e-05, 9.340300000000232e-05, 9.304200000000151e-05, 9.258300000000025e-05, 9.334700000000057e-05, 9.284799999999954e-05, 9.274999999999908e-05, 9.315300000000207e-05, 9.261100000000286e-05, 9.25000000000023e-05, 9.305500000000161e-05, 9.272199999999994e-05, 9.290300000000182e-05, 9.277799999999822e-05, 9.279200000000126e-05, 9.329200000000176e-05, 9.288899999999878e-05, 9.31529999999986e-05, 9.326400000000262e-05, 9.33879999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.514" endtime="20201112 09:44:18.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.510" endtime="20201112 09:44:18.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.519" endtime="20201112 09:44:18.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.523" endtime="20201112 09:44:18.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.521" endtime="20201112 09:44:18.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.518" endtime="20201112 09:44:18.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.150" endtime="20201112 09:44:18.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.149" endtime="20201112 09:44:18.544"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.552" endtime="20201112 09:44:18.571"></status>
</kw>
<msg timestamp="20201112 09:44:18.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.551" endtime="20201112 09:44:18.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.572" endtime="20201112 09:44:18.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.575" endtime="20201112 09:44:18.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.548" endtime="20201112 09:44:18.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.546" endtime="20201112 09:44:18.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.584" endtime="20201112 09:44:18.870"></status>
</kw>
<msg timestamp="20201112 09:44:18.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.582" endtime="20201112 09:44:18.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.874" endtime="20201112 09:44:18.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.883" endtime="20201112 09:44:18.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.580" endtime="20201112 09:44:18.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.578" endtime="20201112 09:44:18.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.890" level="INFO">${RESULT} = [{'time': 0.019829639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.441699999999942e-05, 'source_diff': 9.441699999999942e-05}, {'time': 0.019931681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.886" endtime="20201112 09:44:18.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.903" level="INFO">${ACCURACY} = {'time': [0.019829639, 0.019931681, 0.020036639, 0.020136639, 0.020242653, 0.020342708, 0.020447708, 0.020547694, 0.020649722, 0.020751708, 0.020854722, 0.02095875, 0.021058764, 0.021161764, 0.0212678...</msg>
<status status="PASS" starttime="20201112 09:44:18.891" endtime="20201112 09:44:18.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.908" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.907" endtime="20201112 09:44:18.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.910" level="INFO">VALUE: [9.441699999999942e-05, 9.363899999999953e-05, 9.405599999999861e-05, 9.395800000000162e-05, 9.340299999999885e-05, 9.384700000000107e-05, 9.413900000000003e-05, 9.380499999999889e-05, 9.39859999999973e-05, 9.434700000000157e-05, 9.392999999999901e-05, 9.423600000000101e-05, 9.386100000000064e-05, 9.355599999999811e-05, 9.363899999999953e-05, 9.358400000000072e-05, 9.398700000000024e-05, 9.433400000000147e-05, 9.422200000000144e-05, 9.43469999999981e-05, 9.347199999999722e-05, 9.349999999999983e-05, 9.438900000000028e-05, 9.416699999999917e-05, 9.406999999999818e-05, 9.406999999999818e-05, 9.41529999999996e-05, 9.445800000000212e-05, 9.355599999999811e-05, 9.425000000000058e-05, 9.437499999999724e-05, 9.426400000000015e-05, 9.356899999999821e-05, 9.394500000000153e-05, 9.372200000000094e-05, 9.394500000000153e-05, 9.397300000000067e-05, 9.348600000000026e-05, 9.348600000000026e-05, 9.413900000000003e-05, 9.395799999999815e-05, 9.379099999999932e-05, 9.384700000000107e-05, 9.37079999999979e-05, 9.375000000000008e-05, 9.413900000000003e-05, 9.411099999999742e-05, 9.390299999999935e-05, 9.368099999999824e-05, 9.427799999999972e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.909" endtime="20201112 09:44:18.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.904" endtime="20201112 09:44:18.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.914" endtime="20201112 09:44:18.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.917" endtime="20201112 09:44:18.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.916" endtime="20201112 09:44:18.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.912" endtime="20201112 09:44:18.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.545" endtime="20201112 09:44:18.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.544" endtime="20201112 09:44:18.938"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.947" endtime="20201112 09:44:18.967"></status>
</kw>
<msg timestamp="20201112 09:44:18.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.945" endtime="20201112 09:44:18.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.968" endtime="20201112 09:44:18.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.971" endtime="20201112 09:44:18.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.943" endtime="20201112 09:44:18.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.941" endtime="20201112 09:44:18.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.980" endtime="20201112 09:44:19.267"></status>
</kw>
<msg timestamp="20201112 09:44:19.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:18.979" endtime="20201112 09:44:19.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:19.271" endtime="20201112 09:44:19.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.280" endtime="20201112 09:44:19.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.976" endtime="20201112 09:44:19.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.974" endtime="20201112 09:44:19.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.286" level="INFO">${RESULT} = [{'time': 0.020394722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.49720000000022e-05, 'source_diff': 9.49720000000022e-05}, {'time': 0.020498708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:19.283" endtime="20201112 09:44:19.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.300" level="INFO">${ACCURACY} = {'time': [0.020394722, 0.020498708, 0.020600722, 0.020703778, 0.02081175, 0.020912778, 0.021015778, 0.021117778, 0.021222792, 0.021326806, 0.021432819, 0.021539833, 0.021644861, 0.021752861, 0.0218538...</msg>
<status status="PASS" starttime="20201112 09:44:19.287" endtime="20201112 09:44:19.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.304" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.303" endtime="20201112 09:44:19.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.307" level="INFO">VALUE: [9.49720000000022e-05, 9.477700000000075e-05, 9.537499999999824e-05, 9.518099999999974e-05, 9.53469999999991e-05, 9.480599999999936e-05, 9.463900000000053e-05, 9.530599999999986e-05, 9.506999999999918e-05, 9.500000000000133e-05, 9.477699999999728e-05, 9.463900000000053e-05, 9.477800000000022e-05, 9.481899999999946e-05, 9.459700000000182e-05, 9.473599999999804e-05, 9.486100000000164e-05, 9.53469999999991e-05, 9.486099999999817e-05, 9.509699999999885e-05, 9.480499999999989e-05, 9.488899999999731e-05, 9.493099999999949e-05, 9.500000000000133e-05, 9.444400000000255e-05, 9.529200000000029e-05, 9.495800000000262e-05, 9.523600000000201e-05, 9.537499999999824e-05, 9.470899999999838e-05, 9.490300000000035e-05, 9.536099999999867e-05, 9.49720000000022e-05, 9.487499999999774e-05, 9.506900000000318e-05, 9.51530000000006e-05, 9.451299999999746e-05, 9.469500000000228e-05, 9.481999999999893e-05, 9.488900000000078e-05, 9.481999999999893e-05, 9.444400000000255e-05, 9.481899999999946e-05, 9.523599999999854e-05, 9.498600000000176e-05, 9.494400000000305e-05, 9.463900000000053e-05, 9.44859999999978e-05, 9.527800000000072e-05, 9.502800000000047e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.305" endtime="20201112 09:44:19.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.301" endtime="20201112 09:44:19.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.310" endtime="20201112 09:44:19.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.314" endtime="20201112 09:44:19.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.312" endtime="20201112 09:44:19.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.309" endtime="20201112 09:44:19.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.939" endtime="20201112 09:44:19.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.938" endtime="20201112 09:44:19.335"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.343" endtime="20201112 09:44:19.362"></status>
</kw>
<msg timestamp="20201112 09:44:19.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.342" endtime="20201112 09:44:19.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.363" endtime="20201112 09:44:19.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.366" endtime="20201112 09:44:19.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.339" endtime="20201112 09:44:19.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.337" endtime="20201112 09:44:19.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.375" endtime="20201112 09:44:19.662"></status>
</kw>
<msg timestamp="20201112 09:44:19.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.373" endtime="20201112 09:44:19.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.667" endtime="20201112 09:44:19.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.675" endtime="20201112 09:44:19.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.371" endtime="20201112 09:44:19.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.369" endtime="20201112 09:44:19.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.682" level="INFO">${RESULT} = [{'time': 0.019807111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.631899999999749e-05, 'source_diff': 9.631899999999749e-05}, {'time': 0.019912125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:19.679" endtime="20201112 09:44:19.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.695" level="INFO">${ACCURACY} = {'time': [0.019807111, 0.019912125, 0.020014139, 0.020117153, 0.020221153, 0.020327181, 0.020432194, 0.020540194, 0.020646236, 0.020754208, 0.020861236, 0.02096525, 0.021067306, 0.021176264, 0.0212812...</msg>
<status status="PASS" starttime="20201112 09:44:19.683" endtime="20201112 09:44:19.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.700" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.699" endtime="20201112 09:44:19.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.702" level="INFO">VALUE: [9.631899999999749e-05, 9.626399999999868e-05, 9.604200000000104e-05, 9.562499999999849e-05, 9.611099999999942e-05, 9.640299999999838e-05, 9.593000000000101e-05, 9.568000000000076e-05, 9.577799999999775e-05, 9.606900000000071e-05, 9.605499999999767e-05, 9.590300000000135e-05, 9.616700000000117e-05, 9.627800000000172e-05, 9.572199999999947e-05, 9.6334e-05, 9.56530000000011e-05, 9.558400000000272e-05, 9.63470000000001e-05, 9.580500000000089e-05, 9.568100000000024e-05, 9.54859999999988e-05, 9.569500000000328e-05, 9.631900000000096e-05, 9.561099999999892e-05, 9.624999999999911e-05, 9.556999999999968e-05, 9.565200000000162e-05, 9.595800000000015e-05, 9.590300000000135e-05, 9.569400000000033e-05, 9.58469999999996e-05, 9.638900000000228e-05, 9.591700000000092e-05, 9.594500000000006e-05, 9.572299999999895e-05, 9.599999999999886e-05, 9.587499999999874e-05, 9.541700000000042e-05, 9.602699999999853e-05, 9.637499999999924e-05, 9.586099999999917e-05, 9.62080000000004e-05, 9.55140000000014e-05, 9.592999999999755e-05, 9.615299999999813e-05, 9.626399999999868e-05, 9.599999999999886e-05, 9.63880000000028e-05, 9.61660000000017e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.701" endtime="20201112 09:44:19.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.696" endtime="20201112 09:44:19.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.710" endtime="20201112 09:44:19.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.713" endtime="20201112 09:44:19.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.711" endtime="20201112 09:44:19.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.708" endtime="20201112 09:44:19.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.336" endtime="20201112 09:44:19.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.335" endtime="20201112 09:44:19.734"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.743" endtime="20201112 09:44:19.762"></status>
</kw>
<msg timestamp="20201112 09:44:19.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.741" endtime="20201112 09:44:19.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.764" endtime="20201112 09:44:19.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.766" endtime="20201112 09:44:19.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.739" endtime="20201112 09:44:19.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.736" endtime="20201112 09:44:19.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.775" endtime="20201112 09:44:20.062"></status>
</kw>
<msg timestamp="20201112 09:44:20.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019813014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.774" endtime="20201112 09:44:20.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019813014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.066" endtime="20201112 09:44:20.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.075" endtime="20201112 09:44:20.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.771" endtime="20201112 09:44:20.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.769" endtime="20201112 09:44:20.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.082" level="INFO">${RESULT} = [{'time': 0.019813014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708300000000128e-05, 'source_diff': 9.708300000000128e-05}, {'time': 0.019920042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:20.078" endtime="20201112 09:44:20.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.095" level="INFO">${ACCURACY} = {'time': [0.019813014, 0.019920042, 0.020028042, 0.020134056, 0.020243083, 0.020351083, 0.020459097, 0.020562125, 0.020668139, 0.020773125, 0.020877139, 0.020986153, 0.021091181, 0.021200181, 0.021306...</msg>
<status status="PASS" starttime="20201112 09:44:20.083" endtime="20201112 09:44:20.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.100" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.099" endtime="20201112 09:44:20.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.102" level="INFO">VALUE: [9.708300000000128e-05, 9.701399999999943e-05, 9.677799999999875e-05, 9.644500000000056e-05, 9.694399999999812e-05, 9.702699999999953e-05, 9.662499999999949e-05, 9.733300000000153e-05, 9.712499999999999e-05, 9.713899999999956e-05, 9.658300000000078e-05, 9.686100000000017e-05, 9.66530000000021e-05, 9.737499999999677e-05, 9.672200000000047e-05, 9.694400000000158e-05, 9.67080000000009e-05, 9.711100000000042e-05, 9.72080000000014e-05, 9.66669999999982e-05, 9.652699999999903e-05, 9.672200000000047e-05, 9.663899999999906e-05, 9.706999999999771e-05, 9.656900000000121e-05, 9.69860000000003e-05, 9.64859999999998e-05, 9.699999999999986e-05, 9.71669999999987e-05, 9.694500000000106e-05, 9.680600000000136e-05, 9.690300000000235e-05, 9.704199999999857e-05, 9.718100000000174e-05, 9.672200000000047e-05, 9.658300000000078e-05, 9.67080000000009e-05, 9.740299999999938e-05, 9.701399999999943e-05, 9.719400000000183e-05, 9.713899999999956e-05, 9.727799999999925e-05, 9.725000000000011e-05, 9.677799999999875e-05, 9.736100000000067e-05, 9.686100000000017e-05, 9.706899999999824e-05, 9.684699999999713e-05, 9.737500000000024e-05, 9.655499999999817e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.101" endtime="20201112 09:44:20.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.096" endtime="20201112 09:44:20.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.106" endtime="20201112 09:44:20.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.109" endtime="20201112 09:44:20.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.108" endtime="20201112 09:44:20.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.104" endtime="20201112 09:44:20.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.735" endtime="20201112 09:44:20.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.734" endtime="20201112 09:44:20.130"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.139" endtime="20201112 09:44:20.159"></status>
</kw>
<msg timestamp="20201112 09:44:20.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.137" endtime="20201112 09:44:20.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.161" endtime="20201112 09:44:20.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.163" endtime="20201112 09:44:20.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.135" endtime="20201112 09:44:20.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.132" endtime="20201112 09:44:20.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.172" endtime="20201112 09:44:20.460"></status>
</kw>
<msg timestamp="20201112 09:44:20.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02048625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:20.171" endtime="20201112 09:44:20.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02048625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:20.464" endtime="20201112 09:44:20.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.472" endtime="20201112 09:44:20.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.168" endtime="20201112 09:44:20.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.166" endtime="20201112 09:44:20.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.479" level="INFO">${RESULT} = [{'time': 0.02048625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.744400000000208e-05, 'source_diff': 9.744400000000208e-05}, {'time': 0.02059625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:20.476" endtime="20201112 09:44:20.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.493" level="INFO">${ACCURACY} = {'time': [0.02048625, 0.02059625, 0.020703278, 0.020809278, 0.020914292, 0.021018306, 0.021127306, 0.021231333, 0.021339333, 0.021447347, 0.021552375, 0.021662375, 0.021766403, 0.021876417, 0.02198444...</msg>
<status status="PASS" starttime="20201112 09:44:20.480" endtime="20201112 09:44:20.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.497" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.496" endtime="20201112 09:44:20.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.500" level="INFO">VALUE: [9.744400000000208e-05, 9.783299999999856e-05, 9.795899999999816e-05, 9.765299999999963e-05, 9.829199999999982e-05, 9.744500000000156e-05, 9.754199999999907e-05, 9.751399999999993e-05, 9.774999999999714e-05, 9.79999999999974e-05, 9.838899999999734e-05, 9.81669999999997e-05, 9.755599999999864e-05, 9.783399999999803e-05, 9.745799999999818e-05, 9.769499999999834e-05, 9.772300000000095e-05, 9.759700000000135e-05, 9.791599999999998e-05, 9.820799999999894e-05, 9.750000000000036e-05, 9.80410000000001e-05, 9.83609999999982e-05, 9.820900000000188e-05, 9.79860000000013e-05, 9.820900000000188e-05, 9.755499999999917e-05, 9.740299999999938e-05, 9.741599999999948e-05, 9.824999999999764e-05, 9.831899999999949e-05, 9.78470000000016e-05, 9.756900000000221e-05, 9.791699999999945e-05, 9.832000000000243e-05, 9.813900000000056e-05, 9.827800000000025e-05, 9.802699999999706e-05, 9.815200000000066e-05, 9.79020000000004e-05, 9.79999999999974e-05, 9.756899999999874e-05, 9.762500000000049e-05, 9.76669999999992e-05, 9.790299999999988e-05, 9.820899999999841e-05, 9.750000000000036e-05, 9.825000000000111e-05, 9.77080000000019e-05, 9.830499999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.498" endtime="20201112 09:44:20.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.493" endtime="20201112 09:44:20.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.503" endtime="20201112 09:44:20.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.507" endtime="20201112 09:44:20.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.505" endtime="20201112 09:44:20.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.502" endtime="20201112 09:44:20.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.131" endtime="20201112 09:44:20.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.130" endtime="20201112 09:44:20.528"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.536" endtime="20201112 09:44:20.557"></status>
</kw>
<msg timestamp="20201112 09:44:20.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.535" endtime="20201112 09:44:20.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.558" endtime="20201112 09:44:20.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.561" endtime="20201112 09:44:20.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.532" endtime="20201112 09:44:20.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.530" endtime="20201112 09:44:20.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.570" endtime="20201112 09:44:20.856"></status>
</kw>
<msg timestamp="20201112 09:44:20.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020557681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.568" endtime="20201112 09:44:20.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020557681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.861" endtime="20201112 09:44:20.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.870" endtime="20201112 09:44:20.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.566" endtime="20201112 09:44:20.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.564" endtime="20201112 09:44:20.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.877" level="INFO">${RESULT} = [{'time': 0.020656556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.887499999999827e-05, 'source_diff': 9.887499999999827e-05}, {'time': 0.020763556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:20.873" endtime="20201112 09:44:20.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.890" level="INFO">${ACCURACY} = {'time': [0.020656556, 0.020763556, 0.020875569, 0.020983583, 0.021092597, 0.021204625, 0.021309625, 0.021414639, 0.021525653, 0.021636667, 0.021743667, 0.021854681, 0.021964736, 0.022069708, 0.022175...</msg>
<status status="PASS" starttime="20201112 09:44:20.878" endtime="20201112 09:44:20.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.894" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.893" endtime="20201112 09:44:20.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.897" level="INFO">VALUE: [9.887499999999827e-05, 9.843099999999952e-05, 9.894400000000012e-05, 9.893000000000055e-05, 9.858300000000278e-05, 9.938900000000181e-05, 9.929199999999735e-05, 9.862499999999802e-05, 9.909699999999938e-05, 9.940299999999791e-05, 9.905600000000014e-05, 9.884800000000207e-05, 9.937499999999877e-05, 9.84860000000018e-05, 9.884699999999913e-05, 9.862499999999802e-05, 9.937499999999877e-05, 9.909699999999938e-05, 9.913900000000156e-05, 9.936100000000267e-05, 9.882000000000293e-05, 9.927800000000125e-05, 9.881899999999999e-05, 9.895799999999969e-05, 9.934699999999963e-05, 9.890300000000088e-05, 9.930500000000092e-05, 9.886100000000217e-05, 9.86670000000002e-05, 9.927800000000125e-05, 9.888899999999784e-05, 9.944400000000062e-05, 9.916599999999776e-05, 9.897199999999926e-05, 9.859700000000235e-05, 9.934699999999963e-05, 9.879200000000032e-05, 9.927799999999778e-05, 9.844499999999909e-05, 9.941700000000095e-05, 9.88059999999999e-05, 9.848599999999832e-05, 9.894400000000012e-05, 9.888899999999784e-05, 9.906900000000024e-05, 9.862500000000149e-05, 9.937499999999877e-05, 9.88059999999999e-05, 9.934699999999963e-05, 9.884699999999913e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.896" endtime="20201112 09:44:20.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.891" endtime="20201112 09:44:20.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.901" endtime="20201112 09:44:20.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.904" endtime="20201112 09:44:20.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.903" endtime="20201112 09:44:20.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.899" endtime="20201112 09:44:20.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.529" endtime="20201112 09:44:20.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.528" endtime="20201112 09:44:20.925"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.934" endtime="20201112 09:44:20.952"></status>
</kw>
<msg timestamp="20201112 09:44:20.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.932" endtime="20201112 09:44:20.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.953" endtime="20201112 09:44:20.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.956" endtime="20201112 09:44:20.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.930" endtime="20201112 09:44:20.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.928" endtime="20201112 09:44:20.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.965" endtime="20201112 09:44:21.252"></status>
</kw>
<msg timestamp="20201112 09:44:21.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019808028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.963" endtime="20201112 09:44:21.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019808028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.257" endtime="20201112 09:44:21.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.265" endtime="20201112 09:44:21.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.961" endtime="20201112 09:44:21.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.959" endtime="20201112 09:44:21.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.271" level="INFO">${RESULT} = [{'time': 0.019808028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001003199999999975, 'source_diff': 0.0001003199999999975}, {'time': 0.019919014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:21.268" endtime="20201112 09:44:21.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.285" level="INFO">${ACCURACY} = {'time': [0.019808028, 0.019919014, 0.020029028, 0.020135028, 0.020244097, 0.020351069, 0.020458083, 0.020568083, 0.020679097, 0.020786111, 0.020892111, 0.021000125, 0.021110167, 0.021217181, 0.021323...</msg>
<status status="PASS" starttime="20201112 09:44:21.273" endtime="20201112 09:44:21.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.289" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.288" endtime="20201112 09:44:21.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.292" level="INFO">VALUE: [0.0001003199999999975, 0.00010005599999999767, 9.944500000000009e-05, 0.0001003610000000002, 9.980499999999795e-05, 0.00010026299999999974, 9.994399999999765e-05, 9.958300000000031e-05, 0.000100028000000002, 0.00010040299999999891, 0.00010019400000000137, 0.00010013900000000256, 9.99999999999994e-05, 0.00010033400000000053, 9.959799999999935e-05, 0.0001003610000000002, 0.0001003480000000001, 0.00010006900000000124, 0.00010030500000000192, 9.970799999999697e-05, 9.982000000000046e-05, 9.982000000000046e-05, 9.988899999999884e-05, 9.955500000000117e-05, 0.0001003610000000002, 0.00010013899999999909, 0.00010023699999999955, 9.954099999999813e-05, 9.941600000000148e-05, 0.00010037500000000324, 0.0001000419999999981, 9.984700000000013e-05, 9.970899999999991e-05, 0.00010020900000000041, 9.962499999999902e-05, 0.00010005500000000167, 0.00010005500000000167, 9.952699999999856e-05, 0.00010016599999999876, 0.00010012499999999952, 9.961099999999945e-05, 0.00010037499999999977, 9.995800000000069e-05, 0.00010020900000000041, 0.00010012499999999952, 0.00010005600000000114, 9.954099999999813e-05, 9.944399999999715e-05, 0.00010015299999999866, 9.959699999999988e-05]</msg>
<status status="PASS" starttime="20201112 09:44:21.290" endtime="20201112 09:44:21.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.286" endtime="20201112 09:44:21.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.295" endtime="20201112 09:44:21.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.299" endtime="20201112 09:44:21.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.297" endtime="20201112 09:44:21.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.294" endtime="20201112 09:44:21.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.926" endtime="20201112 09:44:21.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.925" endtime="20201112 09:44:21.320"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.328" endtime="20201112 09:44:21.348"></status>
</kw>
<msg timestamp="20201112 09:44:21.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.327" endtime="20201112 09:44:21.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.349" endtime="20201112 09:44:21.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.352" endtime="20201112 09:44:21.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.324" endtime="20201112 09:44:21.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.322" endtime="20201112 09:44:21.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.361" endtime="20201112 09:44:21.647"></status>
</kw>
<msg timestamp="20201112 09:44:21.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.359" endtime="20201112 09:44:21.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.651" endtime="20201112 09:44:21.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.660" endtime="20201112 09:44:21.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.357" endtime="20201112 09:44:21.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.355" endtime="20201112 09:44:21.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.666" level="INFO">${RESULT} = [{'time': 0.019894097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010070799999999797, 'source_diff': 0.00010070799999999797}, {'time': 0.020001125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:21.663" endtime="20201112 09:44:21.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.679" level="INFO">${ACCURACY} = {'time': [0.019894097, 0.020001125, 0.020113125, 0.020226153, 0.020337222, 0.020445181, 0.020555167, 0.020662181, 0.020770208, 0.020881222, 0.020990222, 0.021101236, 0.021215264, 0.021325264, 0.021439...</msg>
<status status="PASS" starttime="20201112 09:44:21.667" endtime="20201112 09:44:21.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.684" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.683" endtime="20201112 09:44:21.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.686" level="INFO">VALUE: [0.00010070799999999797, 0.00010134700000000163, 0.00010070799999999797, 0.00010062500000000002, 0.00010059699999999741, 0.00010070900000000091, 0.0001008480000000006, 0.00010129200000000282, 0.0001009159999999995, 0.0001012220000000015, 0.000100415999999999, 0.00010098599999999736, 0.00010113900000000009, 0.00010047200000000076, 0.0001013610000000012, 0.00010094500000000159, 0.00010133400000000153, 0.00010111099999999748, 0.00010091600000000298, 0.00010083299999999809, 0.00010141700000000295, 0.00010101399999999996, 0.00010054200000000207, 0.00010069500000000134, 0.00010043100000000152, 0.00010108400000000128, 0.000101416, 0.00010051299999999999, 0.00010137500000000077, 0.00010134700000000163, 0.0001011939999999989, 0.00010063900000000306, 0.00010076300000000024, 0.00010116699999999923, 0.00010105599999999867, 0.00010076399999999971, 0.00010048600000000033, 0.00010083300000000156, 0.0001013610000000012, 0.00010106900000000224, 0.00010063899999999959, 0.00010063899999999959, 0.00010073600000000058, 0.00010088899999999984, 0.00010072199999999754, 0.00010076399999999971, 0.00010120899999999794, 0.00010125000000000065, 0.00010072199999999754, 0.00010048600000000033]</msg>
<status status="PASS" starttime="20201112 09:44:21.685" endtime="20201112 09:44:21.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.680" endtime="20201112 09:44:21.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.690" endtime="20201112 09:44:21.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.693" endtime="20201112 09:44:21.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.692" endtime="20201112 09:44:21.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.688" endtime="20201112 09:44:21.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.321" endtime="20201112 09:44:21.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.320" endtime="20201112 09:44:21.714"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.723" endtime="20201112 09:44:21.742"></status>
</kw>
<msg timestamp="20201112 09:44:21.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.721" endtime="20201112 09:44:21.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.744" endtime="20201112 09:44:21.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.746" endtime="20201112 09:44:21.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.719" endtime="20201112 09:44:21.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.717" endtime="20201112 09:44:21.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.755" endtime="20201112 09:44:22.043"></status>
</kw>
<msg timestamp="20201112 09:44:22.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019857042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.754" endtime="20201112 09:44:22.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019857042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.047" endtime="20201112 09:44:22.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.055" endtime="20201112 09:44:22.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.751" endtime="20201112 09:44:22.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.749" endtime="20201112 09:44:22.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.062" level="INFO">${RESULT} = [{'time': 0.019857042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010209799999999838, 'source_diff': 0.00010209799999999838}, {'time': 0.019970083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:22.059" endtime="20201112 09:44:22.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.075" level="INFO">${ACCURACY} = {'time': [0.019857042, 0.019970083, 0.020081056, 0.020191111, 0.020301083, 0.020409097, 0.020521111, 0.020631111, 0.020739139, 0.020851153, 0.020961167, 0.021072194, 0.021183236, 0.021293194, 0.021402...</msg>
<status status="PASS" starttime="20201112 09:44:22.063" endtime="20201112 09:44:22.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.080" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.079" endtime="20201112 09:44:22.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.082" level="INFO">VALUE: [0.00010209799999999838, 0.00010167999999999983, 0.00010216700000000023, 0.00010201400000000097, 0.00010230500000000045, 0.00010212500000000152, 0.00010198600000000183, 0.00010156899999999927, 0.00010188900000000084, 0.00010201400000000097, 0.00010172299999999801, 0.00010243000000000058, 0.00010173600000000158, 0.00010159700000000188, 0.00010211099999999848, 0.00010229099999999741, 0.00010163900000000059, 0.00010158299999999884, 0.00010227800000000078, 0.00010202800000000053, 0.00010194499999999912, 0.00010166600000000026, 0.0001023199999999995, 0.00010220799999999947, 0.00010183299999999909, 0.00010231900000000002, 0.00010151400000000046, 0.00010193099999999955, 0.000101722000000002, 0.00010233399999999906, 0.00010230599999999992, 0.00010163900000000059, 0.00010220899999999894, 0.00010227699999999784, 0.00010229100000000088, 0.00010145799999999872, 0.00010188900000000084, 0.00010170900000000191, 0.00010229200000000035, 0.00010194399999999965, 0.00010165300000000016, 0.00010219499999999937, 0.00010143100000000252, 0.00010170800000000244, 0.00010227800000000078, 0.00010229200000000035, 0.00010231900000000002, 0.00010187500000000127, 0.00010145799999999872, 0.0001020420000000001]</msg>
<status status="PASS" starttime="20201112 09:44:22.081" endtime="20201112 09:44:22.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.076" endtime="20201112 09:44:22.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.086" endtime="20201112 09:44:22.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.089" endtime="20201112 09:44:22.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.088" endtime="20201112 09:44:22.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.084" endtime="20201112 09:44:22.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.715" endtime="20201112 09:44:22.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.715" endtime="20201112 09:44:22.110"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.119" endtime="20201112 09:44:22.138"></status>
</kw>
<msg timestamp="20201112 09:44:22.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.117" endtime="20201112 09:44:22.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.140" endtime="20201112 09:44:22.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.142" endtime="20201112 09:44:22.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.114" endtime="20201112 09:44:22.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.112" endtime="20201112 09:44:22.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.151" endtime="20201112 09:44:22.437"></status>
</kw>
<msg timestamp="20201112 09:44:22.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.150" endtime="20201112 09:44:22.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.441" endtime="20201112 09:44:22.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.449" endtime="20201112 09:44:22.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.147" endtime="20201112 09:44:22.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.145" endtime="20201112 09:44:22.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.456" level="INFO">${RESULT} = [{'time': 0.019804375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010261099999999898, 'source_diff': 0.00010261099999999898}, {'time': 0.019919403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:22.453" endtime="20201112 09:44:22.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.469" level="INFO">${ACCURACY} = {'time': [0.019804375, 0.019919403, 0.020033403, 0.020143417, 0.020252458, 0.020368444, 0.020482458, 0.020594472, 0.020706486, 0.020820486, 0.0209335, 0.021049528, 0.021164528, 0.021277597, 0.02139358...</msg>
<status status="PASS" starttime="20201112 09:44:22.457" endtime="20201112 09:44:22.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.474" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.473" endtime="20201112 09:44:22.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.476" level="INFO">VALUE: [0.00010261099999999898, 0.00010280600000000042, 0.00010326400000000222, 0.00010302800000000154, 0.00010308300000000034, 0.00010313799999999915, 0.00010258299999999984, 0.000102513999999998, 0.0001031940000000009, 0.00010326399999999875, 0.00010316700000000123, 0.00010297199999999979, 0.00010299999999999893, 0.00010263899999999812, 0.0001030000000000024, 0.00010256900000000027, 0.00010336099999999973, 0.00010274999999999868, 0.00010327800000000179, 0.00010265300000000116, 0.00010244499999999962, 0.00010280600000000042, 0.00010298599999999936, 0.00010283399999999956, 0.00010270899999999944, 0.00010334700000000016, 0.00010263900000000159, 0.0001025550000000007, 0.0001030000000000024, 0.0001030139999999985, 0.00010305600000000067, 0.00010327799999999832, 0.00010302800000000154, 0.00010333300000000059, 0.00010334799999999963, 0.00010297199999999979, 0.00010309699999999991, 0.00010259699999999941, 0.00010241700000000048, 0.00010333299999999712, 0.00010270799999999997, 0.00010306999999999678, 0.00010316700000000123, 0.00010266700000000073, 0.00010245799999999972, 0.00010308300000000034, 0.0001032359999999996, 0.00010256900000000027, 0.00010325000000000265, 0.00010258299999999984]</msg>
<status status="PASS" starttime="20201112 09:44:22.475" endtime="20201112 09:44:22.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.470" endtime="20201112 09:44:22.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.480" endtime="20201112 09:44:22.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.483" endtime="20201112 09:44:22.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.482" endtime="20201112 09:44:22.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.478" endtime="20201112 09:44:22.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.111" endtime="20201112 09:44:22.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.110" endtime="20201112 09:44:22.504"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.513" endtime="20201112 09:44:22.532"></status>
</kw>
<msg timestamp="20201112 09:44:22.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.511" endtime="20201112 09:44:22.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.533" endtime="20201112 09:44:22.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.536" endtime="20201112 09:44:22.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.509" endtime="20201112 09:44:22.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.507" endtime="20201112 09:44:22.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.545" endtime="20201112 09:44:22.831"></status>
</kw>
<msg timestamp="20201112 09:44:22.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.543" endtime="20201112 09:44:22.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.836" endtime="20201112 09:44:22.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.844" endtime="20201112 09:44:22.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.541" endtime="20201112 09:44:22.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.539" endtime="20201112 09:44:22.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.850" level="INFO">${RESULT} = [{'time': 0.019801681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010386200000000317, 'source_diff': 0.00010386200000000317}, {'time': 0.019916681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:22.847" endtime="20201112 09:44:22.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.863" level="INFO">${ACCURACY} = {'time': [0.019801681, 0.019916681, 0.020030736, 0.02014175, 0.020257722, 0.02037075, 0.02048375, 0.02059875, 0.020715764, 0.020832778, 0.020943792, 0.021058806, 0.021172833, 0.021282861, 0.021394847,...</msg>
<status status="PASS" starttime="20201112 09:44:22.851" endtime="20201112 09:44:22.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.868" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.867" endtime="20201112 09:44:22.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.870" level="INFO">VALUE: [0.00010386200000000317, 0.00010347299999999976, 0.00010429199999999889, 0.00010441699999999901, 0.00010386100000000023, 0.00010420800000000147, 0.00010348599999999986, 0.00010363899999999912, 0.00010434700000000116, 0.00010419500000000137, 0.00010354199999999814, 0.00010358400000000031, 0.0001040689999999983, 0.00010374999999999968, 0.00010398600000000036, 0.00010434699999999769, 0.00010343000000000158, 0.00010427799999999932, 0.00010434800000000063, 0.0001042360000000006, 0.00010379200000000185, 0.00010438899999999987, 0.00010361099999999998, 0.00010408300000000134, 0.00010384699999999719, 0.0001035420000000016, 0.00010383300000000109, 0.0001035420000000016, 0.00010411100000000048, 0.00010402699999999959, 0.00010438899999999987, 0.00010397200000000079, 0.00010365199999999922, 0.00010438899999999987, 0.00010411100000000048, 0.00010401400000000297, 0.000103513999999999, 0.00010429199999999889, 0.00010434700000000116, 0.00010363899999999912, 0.0001036949999999974, 0.00010440299999999944, 0.0001042360000000006, 0.00010425000000000018, 0.00010413899999999962, 0.0001038749999999998, 0.00010422200000000104, 0.00010390299999999894, 0.0001040420000000021, 0.00010384800000000013]</msg>
<status status="PASS" starttime="20201112 09:44:22.869" endtime="20201112 09:44:22.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.864" endtime="20201112 09:44:22.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.874" endtime="20201112 09:44:22.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.878" endtime="20201112 09:44:22.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.876" endtime="20201112 09:44:22.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.872" endtime="20201112 09:44:22.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.505" endtime="20201112 09:44:22.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.504" endtime="20201112 09:44:22.899"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.907" endtime="20201112 09:44:22.929"></status>
</kw>
<msg timestamp="20201112 09:44:22.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.906" endtime="20201112 09:44:22.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.930" endtime="20201112 09:44:22.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.933" endtime="20201112 09:44:22.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.903" endtime="20201112 09:44:22.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.901" endtime="20201112 09:44:22.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.942" endtime="20201112 09:44:23.229"></status>
</kw>
<msg timestamp="20201112 09:44:23.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021024708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.940" endtime="20201112 09:44:23.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021024708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.233" endtime="20201112 09:44:23.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.241" endtime="20201112 09:44:23.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.938" endtime="20201112 09:44:23.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.936" endtime="20201112 09:44:23.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:23.248" level="INFO">${RESULT} = [{'time': 0.021129931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010522300000000151, 'source_diff': 0.00010522300000000151}, {'time': 0.021247944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:23.245" endtime="20201112 09:44:23.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:23.261" level="INFO">${ACCURACY} = {'time': [0.021129931, 0.021247944, 0.021362944, 0.021474986, 0.021586986, 0.021697972, 0.021815986, 0.021928, 0.022044042, 0.022159042, 0.022273056, 0.022384056, 0.022497069, 0.022609083, 0.022720125...</msg>
<status status="PASS" starttime="20201112 09:44:23.249" endtime="20201112 09:44:23.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.265" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:44:23.264" endtime="20201112 09:44:23.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.268" level="INFO">VALUE: [0.00010522300000000151, 0.00010491600000000004, 0.0001054019999999975, 0.00010463900000000012, 0.00010502800000000007, 0.00010463900000000012, 0.00010534699999999869, 0.00010536099999999826, 0.00010512500000000105, 0.00010469500000000187, 0.0001045559999999987, 0.00010527800000000032, 0.00010529100000000041, 0.00010509699999999844, 0.00010530599999999946, 0.00010456999999999828, 0.0001045689999999988, 0.00010507000000000224, 0.00010486100000000123, 0.0001050140000000005, 0.00010536199999999774, 0.00010498599999999789, 0.0001048880000000009, 0.0001046940000000024, 0.000104514, 0.0001050140000000005, 0.00010513900000000062, 0.000105207999999999, 0.00010445899999999772, 0.00010509800000000138, 0.00010491600000000004, 0.00010497199999999832, 0.0001045689999999988, 0.00010504100000000016, 0.00010466699999999926, 0.00010493100000000255, 0.00010529199999999989, 0.00010473599999999764, 0.00010469500000000187, 0.00010461200000000045, 0.00010456900000000227, 0.0001045689999999988, 0.00010470800000000197, 0.00010527800000000032, 0.00010491699999999951, 0.00010537499999999783, 0.00010527800000000032, 0.00010462500000000055, 0.00010465299999999969, 0.00010512499999999758]</msg>
<status status="PASS" starttime="20201112 09:44:23.267" endtime="20201112 09:44:23.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.262" endtime="20201112 09:44:23.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.272" endtime="20201112 09:44:23.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.275" endtime="20201112 09:44:23.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.273" endtime="20201112 09:44:23.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.270" endtime="20201112 09:44:23.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.900" endtime="20201112 09:44:23.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.899" endtime="20201112 09:44:23.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.671" endtime="20201112 09:44:23.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.301" endtime="20201112 09:44:23.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.299" endtime="20201112 09:44:23.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.298" endtime="20201112 09:44:23.321"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:40.554" endtime="20201112 09:44:23.322" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.329" endtime="20201112 09:44:23.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.327" endtime="20201112 09:44:23.349"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.363" endtime="20201112 09:44:26.391"></status>
</kw>
<msg timestamp="20201112 09:44:26.392" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.361" endtime="20201112 09:44:26.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.397" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.394" endtime="20201112 09:44:26.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.403" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:26.399" endtime="20201112 09:44:26.404"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.358" endtime="20201112 09:44:26.405"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.355" endtime="20201112 09:44:26.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.354" endtime="20201112 09:44:26.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:26.415" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:26.413" endtime="20201112 09:44:26.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.409" endtime="20201112 09:44:26.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.353" endtime="20201112 09:44:26.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.353" endtime="20201112 09:44:26.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.418" endtime="20201112 09:44:26.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.351" endtime="20201112 09:44:26.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.350" endtime="20201112 09:44:26.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.326" endtime="20201112 09:44:26.424"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.439" endtime="20201112 09:44:26.453"></status>
</kw>
<msg timestamp="20201112 09:44:26.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.437" endtime="20201112 09:44:26.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.455" endtime="20201112 09:44:26.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.457" endtime="20201112 09:44:26.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.434" endtime="20201112 09:44:26.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.431" endtime="20201112 09:44:26.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.466" endtime="20201112 09:44:26.764"></status>
</kw>
<msg timestamp="20201112 09:44:26.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100552708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100557764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.465" endtime="20201112 09:44:26.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100552708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100557764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.769" endtime="20201112 09:44:26.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.777" endtime="20201112 09:44:26.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.462" endtime="20201112 09:44:26.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.460" endtime="20201112 09:44:26.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:26.785" level="INFO">${RESULT} = [{'time': 3.100557764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 3.100569833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:26.781" endtime="20201112 09:44:26.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:26.798" level="INFO">${ACCURACY} = {'time': [3.100557764, 3.100569833, 3.100583806, 3.100592861, 3.100607875, 3.100621972, 3.100632847, 3.100644875, 3.100653972, 3.100663736, 3.100673806, 3.100687889, 3.100700694, 3.100712833, 3.100722...</msg>
<status status="PASS" starttime="20201112 09:44:26.786" endtime="20201112 09:44:26.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.802" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:44:26.801" endtime="20201112 09:44:26.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.805" level="INFO">VALUE: [5.05600000000328e-06, 5.347000000099911e-06, 5.278000000163985e-06, 5.096999999842922e-06, 5.639000000279282e-06, 5.6389999998351925e-06, 5.347000000099911e-06, 5.889000000092182e-06, 5.929999999931823e-06, 5.347000000099911e-06, 5.653000000105379e-06, 5.9310000000145635e-06, 5.026999999824255e-06, 5.65199999957855e-06, 5.94400000020201e-06, 5.041000000094442e-06, 5.041999999733093e-06, 5.6389999998351925e-06, 5.625000000009095e-06, 5.347000000099911e-06, 5.0420000001771825e-06, 5.65299999966129e-06, 5.347000000099911e-06, 5.666999999931477e-06, 5.971999999854205e-06, 5.041999999733093e-06, 5.943999999757921e-06, 5.347000000099911e-06, 5.65299999966129e-06, 5.625000000009095e-06, 5.6389999998351925e-06, 5.347999999738562e-06, 5.6389999998351925e-06, 5.347000000099911e-06, 5.611000000182997e-06, 5.027999999906996e-06, 5.6389999998351925e-06, 5.347000000099911e-06, 5.347000000099911e-06, 5.055000000364629e-06, 5.374999999752106e-06, 5.333000000273813e-06, 5.9310000000145635e-06, 5.041999999733093e-06, 5.625000000009095e-06, 5.05499999992054e-06, 5.083000000016824e-06, 5.263999999893798e-06, 5.639000000279282e-06, 5.639000000279282e-06]</msg>
<status status="PASS" starttime="20201112 09:44:26.804" endtime="20201112 09:44:26.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.799" endtime="20201112 09:44:26.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.808" endtime="20201112 09:44:26.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.812" endtime="20201112 09:44:26.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.810" endtime="20201112 09:44:26.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.807" endtime="20201112 09:44:26.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.428" endtime="20201112 09:44:26.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.427" endtime="20201112 09:44:26.833"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.842" endtime="20201112 09:44:26.856"></status>
</kw>
<msg timestamp="20201112 09:44:26.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.840" endtime="20201112 09:44:26.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.858" endtime="20201112 09:44:26.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.860" endtime="20201112 09:44:26.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.838" endtime="20201112 09:44:26.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.835" endtime="20201112 09:44:26.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.869" endtime="20201112 09:44:27.160"></status>
</kw>
<msg timestamp="20201112 09:44:27.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020274028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.868" endtime="20201112 09:44:27.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020274028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.165" endtime="20201112 09:44:27.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.173" endtime="20201112 09:44:27.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.865" endtime="20201112 09:44:27.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.863" endtime="20201112 09:44:27.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:27.180" level="INFO">${RESULT} = [{'time': 0.020280333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.020293236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:27.176" endtime="20201112 09:44:27.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:27.195" level="INFO">${ACCURACY} = {'time': [0.020280333, 0.020293236, 0.020308139, 0.020317069, 0.020332278, 0.020341028, 0.020352083, 0.020361139, 0.020371028, 0.020380236, 0.020389319, 0.020398028, 0.020411319, 0.020422069, 0.020431...</msg>
<status status="PASS" starttime="20201112 09:44:27.181" endtime="20201112 09:44:27.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.199" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:44:27.198" endtime="20201112 09:44:27.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.202" level="INFO">VALUE: [6.305000000001587e-06, 6.888999999999507e-06, 6.222000000000172e-06, 6.262999999999408e-06, 6.833999999997231e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.542000000001741e-06, 5.9589999999998255e-06, 6.499999999999562e-06, 6.583000000000977e-06, 6.235999999999742e-06, 6.235999999999742e-06, 5.944000000000782e-06, 6.2229999999996455e-06, 6.763999999999382e-06, 6.181000000000936e-06, 6.235999999999742e-06, 5.931000000000686e-06, 6.541999999998271e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.568999999997938e-06, 6.236000000003211e-06, 6.8329999999977575e-06, 6.584000000000451e-06, 6.540999999998798e-06, 6.512999999999658e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.540999999998798e-06, 6.818999999998188e-06, 6.8329999999977575e-06, 5.944999999996786e-06, 5.917000000001116e-06, 5.930000000001212e-06, 5.917000000001116e-06, 5.917000000001116e-06, 5.944000000000782e-06, 6.833000000001227e-06, 6.819999999997661e-06, 6.834000000000701e-06, 5.9589999999998255e-06, 6.833000000001227e-06, 6.222000000000172e-06, 6.236999999999215e-06, 6.249999999999312e-06, 6.167000000001366e-06, 6.833000000001227e-06, 6.527000000002697e-06]</msg>
<status status="PASS" starttime="20201112 09:44:27.200" endtime="20201112 09:44:27.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.196" endtime="20201112 09:44:27.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.205" endtime="20201112 09:44:27.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:27.209" endtime="20201112 09:44:27.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.207" endtime="20201112 09:44:27.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.204" endtime="20201112 09:44:27.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.834" endtime="20201112 09:44:27.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.833" endtime="20201112 09:44:27.230"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.238" endtime="20201112 09:44:27.253"></status>
</kw>
<msg timestamp="20201112 09:44:27.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.237" endtime="20201112 09:44:27.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.255" endtime="20201112 09:44:27.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.257" endtime="20201112 09:44:27.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.234" endtime="20201112 09:44:27.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.232" endtime="20201112 09:44:27.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.266" endtime="20201112 09:44:27.552"></status>
</kw>
<msg timestamp="20201112 09:44:27.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020035139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.265" endtime="20201112 09:44:27.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020035139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.556" endtime="20201112 09:44:27.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.565" endtime="20201112 09:44:27.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.262" endtime="20201112 09:44:27.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.260" endtime="20201112 09:44:27.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:27.571" level="INFO">${RESULT} = [{'time': 0.020042264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.020054208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:27.568" endtime="20201112 09:44:27.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:27.585" level="INFO">${ACCURACY} = {'time': [0.020042264, 0.020054208, 0.020068319, 0.020081278, 0.020098375, 0.020113306, 0.020130389, 0.020145208, 0.020157514, 0.020174278, 0.020188167, 0.020204236, 0.020221319, 0.02023125, 0.0202483...</msg>
<status status="PASS" starttime="20201112 09:44:27.572" endtime="20201112 09:44:27.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.589" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:44:27.588" endtime="20201112 09:44:27.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.592" level="INFO">VALUE: [7.125000000000187e-06, 7.138999999999757e-06, 7.151999999999853e-06, 7.125000000000187e-06, 7.403000000003046e-06, 7.431000000002186e-06, 7.457999999998383e-06, 7.125000000000187e-06, 7.472000000001422e-06, 7.1669999999988965e-06, 7.125000000000187e-06, 7.429999999999243e-06, 7.430000000002712e-06, 7.707999999998633e-06, 7.429999999999243e-06, 7.2079999999981326e-06, 8.000000000001062e-06, 7.138999999999757e-06, 7.735999999997772e-06, 7.443999999998813e-06, 7.125000000000187e-06, 7.430999999998716e-06, 7.139000000003226e-06, 7.431000000002186e-06, 7.3620000000003405e-06, 7.430000000002712e-06, 7.722000000001672e-06, 7.443999999998813e-06, 7.721999999998203e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.444999999998286e-06, 6.819000000001657e-06, 7.445000000001756e-06, 7.722000000001672e-06, 7.430999999998716e-06, 7.722000000001672e-06, 7.415999999999673e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.180999999998466e-06, 8.014000000000632e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.430999999998716e-06, 8.013999999997162e-06, 7.429999999999243e-06, 7.125000000000187e-06, 7.445000000001756e-06, 7.138999999999757e-06]</msg>
<status status="PASS" starttime="20201112 09:44:27.590" endtime="20201112 09:44:27.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.586" endtime="20201112 09:44:27.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.595" endtime="20201112 09:44:27.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:27.599" endtime="20201112 09:44:27.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.597" endtime="20201112 09:44:27.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.594" endtime="20201112 09:44:27.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.231" endtime="20201112 09:44:27.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.230" endtime="20201112 09:44:27.620"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.628" endtime="20201112 09:44:27.643"></status>
</kw>
<msg timestamp="20201112 09:44:27.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.627" endtime="20201112 09:44:27.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.645" endtime="20201112 09:44:27.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.647" endtime="20201112 09:44:27.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.624" endtime="20201112 09:44:27.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.622" endtime="20201112 09:44:27.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.656" endtime="20201112 09:44:27.942"></status>
</kw>
<msg timestamp="20201112 09:44:27.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.654" endtime="20201112 09:44:27.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.946" endtime="20201112 09:44:27.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.954" endtime="20201112 09:44:27.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.652" endtime="20201112 09:44:27.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.650" endtime="20201112 09:44:27.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:27.961" level="INFO">${RESULT} = [{'time': 0.019815194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.019827125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:27.958" endtime="20201112 09:44:27.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:27.974" level="INFO">${ACCURACY} = {'time': [0.019815194, 0.019827125, 0.019842194, 0.019854208, 0.019865264, 0.019878181, 0.019891278, 0.019905139, 0.019916278, 0.019927125, 0.019943222, 0.019955236, 0.019969333, 0.019984278, 0.019999...</msg>
<status status="PASS" starttime="20201112 09:44:27.962" endtime="20201112 09:44:27.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.979" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:44:27.978" endtime="20201112 09:44:27.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.982" level="INFO">VALUE: [8.318999999999688e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.305000000000118e-06, 8.596999999999078e-06, 8.028000000000202e-06, 8.916999999997177e-06, 8.319999999999161e-06, 8.624999999998217e-06, 8.346999999998828e-06, 8.903000000001077e-06, 8.611000000002117e-06, 8.276999999997509e-06, 8.611000000002117e-06, 8.306000000003061e-06, 8.028000000000202e-06, 8.666999999996927e-06, 8.346999999998828e-06, 8.903000000001077e-06, 8.652999999997357e-06, 8.028000000000202e-06, 8.292000000000022e-06, 8.013999999997162e-06, 8.276999999997509e-06, 8.708999999999106e-06, 8.028000000000202e-06, 8.028000000000202e-06, 8.639000000001257e-06, 8.610999999998648e-06, 8.999999999998592e-06, 8.930000000000743e-06, 8.624999999998217e-06, 8.596999999999078e-06, 8.638999999997787e-06, 8.028000000000202e-06, 8.305000000000118e-06, 8.013999999997162e-06, 8.027000000000728e-06, 8.931000000000217e-06, 8.625000000001687e-06, 8.917000000000647e-06, 8.292000000000022e-06, 8.596999999999078e-06, 8.624999999998217e-06, 8.318999999999688e-06, 8.028000000000202e-06, 8.611000000002117e-06, 8.041999999999772e-06, 8.625000000001687e-06, 8.305999999999591e-06]</msg>
<status status="PASS" starttime="20201112 09:44:27.980" endtime="20201112 09:44:27.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.975" endtime="20201112 09:44:27.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.985" endtime="20201112 09:44:27.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:27.989" endtime="20201112 09:44:28.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.987" endtime="20201112 09:44:28.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.984" endtime="20201112 09:44:28.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.621" endtime="20201112 09:44:28.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.620" endtime="20201112 09:44:28.010"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.019" endtime="20201112 09:44:28.034"></status>
</kw>
<msg timestamp="20201112 09:44:28.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.017" endtime="20201112 09:44:28.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.036" endtime="20201112 09:44:28.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.038" endtime="20201112 09:44:28.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.014" endtime="20201112 09:44:28.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.012" endtime="20201112 09:44:28.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.047" endtime="20201112 09:44:28.335"></status>
</kw>
<msg timestamp="20201112 09:44:28.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021333167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:28.045" endtime="20201112 09:44:28.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021333167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:28.340" endtime="20201112 09:44:28.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.348" endtime="20201112 09:44:28.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.043" endtime="20201112 09:44:28.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.041" endtime="20201112 09:44:28.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.355" level="INFO">${RESULT} = [{'time': 0.021343, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.021355917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:28.351" endtime="20201112 09:44:28.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:28.368" level="INFO">${ACCURACY} = {'time': [0.021343, 0.021355917, 0.021368819, 0.021385708, 0.021398944, 0.021410722, 0.021427847, 0.021444806, 0.021458778, 0.021475792, 0.021491792, 0.021504903, 0.021519944, 0.021532736, 0.021545847...</msg>
<status status="PASS" starttime="20201112 09:44:28.356" endtime="20201112 09:44:28.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.373" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:44:28.372" endtime="20201112 09:44:28.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.375" level="INFO">VALUE: [9.833000000000758e-06, 9.235999999999273e-06, 9.512999999999189e-06, 8.916000000001173e-06, 9.526999999998759e-06, 9.513999999998662e-06, 9.208000000000133e-06, 9.499999999999093e-06, 8.917000000000647e-06, 9.792000000001522e-06, 9.499999999999093e-06, 9.235999999999273e-06, 9.194000000000563e-06, 8.917000000000647e-06, 8.874999999998467e-06, 9.513999999998662e-06, 9.820000000000662e-06, 9.514000000002132e-06, 9.805000000001618e-06, 9.278000000001452e-06, 8.929999999997273e-06, 9.208000000000133e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.209000000003076e-06, 9.888999999999037e-06, 8.860999999998898e-06, 9.556000000000842e-06, 9.208999999999606e-06, 9.806000000001092e-06, 9.222999999999176e-06, 9.750000000002812e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.749999999999343e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.223000000002646e-06, 8.931000000000217e-06, 8.917000000000647e-06, 9.526999999998759e-06, 9.749999999999343e-06, 8.917000000000647e-06, 8.916000000001173e-06, 9.499999999999093e-06, 9.512999999999189e-06, 9.833000000000758e-06, 9.528000000001702e-06, 9.512999999999189e-06]</msg>
<status status="PASS" starttime="20201112 09:44:28.374" endtime="20201112 09:44:28.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.369" endtime="20201112 09:44:28.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.379" endtime="20201112 09:44:28.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:28.382" endtime="20201112 09:44:28.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.381" endtime="20201112 09:44:28.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.377" endtime="20201112 09:44:28.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.011" endtime="20201112 09:44:28.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.010" endtime="20201112 09:44:28.403"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.412" endtime="20201112 09:44:28.427"></status>
</kw>
<msg timestamp="20201112 09:44:28.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.411" endtime="20201112 09:44:28.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.429" endtime="20201112 09:44:28.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.431" endtime="20201112 09:44:28.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.408" endtime="20201112 09:44:28.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.406" endtime="20201112 09:44:28.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.440" endtime="20201112 09:44:28.727"></status>
</kw>
<msg timestamp="20201112 09:44:28.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021053069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.439" endtime="20201112 09:44:28.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021053069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.731" endtime="20201112 09:44:28.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.740" endtime="20201112 09:44:28.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.436" endtime="20201112 09:44:28.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.434" endtime="20201112 09:44:28.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.747" level="INFO">${RESULT} = [{'time': 0.021053069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.021067903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:28.743" endtime="20201112 09:44:28.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:28.762" level="INFO">${ACCURACY} = {'time': [0.021053069, 0.021067903, 0.021087, 0.021104153, 0.021116931, 0.021131986, 0.021149028, 0.021164028, 0.021178097, 0.021191083, 0.021207083, 0.021221986, 0.021237083, 0.021255056, 0.021272028...</msg>
<status status="PASS" starttime="20201112 09:44:28.748" endtime="20201112 09:44:28.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.766" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:44:28.765" endtime="20201112 09:44:28.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.769" level="INFO">VALUE: [1.0401999999999634e-05, 1.0416999999998677e-05, 1.0403000000002577e-05, 1.1070000000001912e-05, 1.0402999999999107e-05, 1.0707999999998163e-05, 1.0722000000001203e-05, 1.0124999999999718e-05, 1.0069000000001438e-05, 1.0097000000000578e-05, 1.0694000000002063e-05, 1.0708000000001633e-05, 1.1000000000000593e-05, 1.0709000000001107e-05, 1.0416999999998677e-05, 1.0763999999999913e-05, 1.0111999999999621e-05, 1.0096999999997108e-05, 1.0958000000001883e-05, 1.0666999999998927e-05, 1.0638999999999788e-05, 1.0319000000001688e-05, 1.0417000000002147e-05, 1.0722000000001203e-05, 1.0152999999998857e-05, 1.0068999999997968e-05, 1.0402999999999107e-05, 1.0098000000000051e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.1000000000000593e-05, 1.0666999999998927e-05, 1.0973000000000926e-05, 1.0417000000002147e-05, 1.0402999999999107e-05, 1.0402999999999107e-05, 1.0695000000001537e-05, 1.0694999999998067e-05, 1.0402999999999107e-05, 1.0401999999999634e-05, 1.0472000000000953e-05, 1.0431000000001717e-05, 1.0388000000000064e-05, 1.1054999999999399e-05, 9.806000000001092e-06, 1.0707999999998163e-05, 1.0402999999999107e-05, 1.0430999999998247e-05, 1.0750000000000343e-05, 1.0014000000002632e-05]</msg>
<status status="PASS" starttime="20201112 09:44:28.767" endtime="20201112 09:44:28.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.763" endtime="20201112 09:44:28.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.772" endtime="20201112 09:44:28.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:28.776" endtime="20201112 09:44:28.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.774" endtime="20201112 09:44:28.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.771" endtime="20201112 09:44:28.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.404" endtime="20201112 09:44:28.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.404" endtime="20201112 09:44:28.797"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.806" endtime="20201112 09:44:28.820"></status>
</kw>
<msg timestamp="20201112 09:44:28.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.804" endtime="20201112 09:44:28.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.822" endtime="20201112 09:44:28.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.824" endtime="20201112 09:44:28.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.801" endtime="20201112 09:44:28.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.799" endtime="20201112 09:44:28.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.833" endtime="20201112 09:44:29.121"></status>
</kw>
<msg timestamp="20201112 09:44:29.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020858903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:28.832" endtime="20201112 09:44:29.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020858903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:29.125" endtime="20201112 09:44:29.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.134" endtime="20201112 09:44:29.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.829" endtime="20201112 09:44:29.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.828" endtime="20201112 09:44:29.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:29.141" level="INFO">${RESULT} = [{'time': 0.020858903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.020876861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:29.137" endtime="20201112 09:44:29.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:29.154" level="INFO">${ACCURACY} = {'time': [0.020858903, 0.020876861, 0.020890847, 0.020909819, 0.020923986, 0.020940028, 0.020960958, 0.020978819, 0.020992986, 0.021012792, 0.021030958, 0.021051819, 0.021071819, 0.021090861, 0.021106...</msg>
<status status="PASS" starttime="20201112 09:44:29.142" endtime="20201112 09:44:29.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.159" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:44:29.158" endtime="20201112 09:44:29.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.161" level="INFO">VALUE: [1.1903000000000608e-05, 1.1000000000000593e-05, 1.1000000000000593e-05, 1.1291000000000079e-05, 1.1888999999997568e-05, 1.1610999999998178e-05, 1.1304999999999649e-05, 1.1610999999998178e-05, 1.1903000000000608e-05, 1.1597999999998082e-05, 1.1915999999997234e-05, 1.1291000000000079e-05, 1.127699999999704e-05, 1.1582999999999039e-05, 1.1874999999997998e-05, 1.1305000000003118e-05, 1.1333999999998262e-05, 1.1903000000000608e-05, 1.0986000000001023e-05, 1.1888999999997568e-05, 1.0986000000001023e-05, 1.1958999999998887e-05, 1.1597000000002078e-05, 1.1888000000001564e-05, 1.1596999999998608e-05, 1.1250000000000843e-05, 1.1639000000000788e-05, 1.1597000000002078e-05, 1.1305999999999122e-05, 1.1598000000001552e-05, 1.1917000000000177e-05, 1.0986000000001023e-05, 1.1319000000002688e-05, 1.1583000000002508e-05, 1.1611000000001648e-05, 1.1304999999999649e-05, 1.1638000000001314e-05, 1.1291999999999552e-05, 1.1888000000001564e-05, 1.1027999999999732e-05, 1.1638000000001314e-05, 1.1597999999998082e-05, 1.1624999999997748e-05, 1.1624999999997748e-05, 1.1277999999999982e-05, 1.1597000000002078e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1305999999999122e-05]</msg>
<status status="PASS" starttime="20201112 09:44:29.160" endtime="20201112 09:44:29.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.155" endtime="20201112 09:44:29.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.165" endtime="20201112 09:44:29.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:29.168" endtime="20201112 09:44:29.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.167" endtime="20201112 09:44:29.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.163" endtime="20201112 09:44:29.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.798" endtime="20201112 09:44:29.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.797" endtime="20201112 09:44:29.189"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.198" endtime="20201112 09:44:29.213"></status>
</kw>
<msg timestamp="20201112 09:44:29.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.196" endtime="20201112 09:44:29.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.214" endtime="20201112 09:44:29.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.217" endtime="20201112 09:44:29.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.194" endtime="20201112 09:44:29.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.191" endtime="20201112 09:44:29.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.226" endtime="20201112 09:44:29.512"></status>
</kw>
<msg timestamp="20201112 09:44:29.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.224" endtime="20201112 09:44:29.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.517" endtime="20201112 09:44:29.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.525" endtime="20201112 09:44:29.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.222" endtime="20201112 09:44:29.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.220" endtime="20201112 09:44:29.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:29.532" level="INFO">${RESULT} = [{'time': 0.019875069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1887999999998095e-05, 'source_diff': 1.1887999999998095e-05}, {'time': 0.01989525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:44:29.528" endtime="20201112 09:44:29.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:29.545" level="INFO">${ACCURACY} = {'time': [0.019875069, 0.01989525, 0.019915306, 0.019935236, 0.01995125, 0.019969125, 0.019990264, 0.020008278, 0.020026083, 0.020042153, 0.020058208, 0.020075111, 0.020096056, 0.020117208, 0.02013920...</msg>
<status status="PASS" starttime="20201112 09:44:29.533" endtime="20201112 09:44:29.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.550" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:44:29.549" endtime="20201112 09:44:29.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.552" level="INFO">VALUE: [1.1887999999998095e-05, 1.2485999999999053e-05, 1.2792000000001053e-05, 1.2166999999996958e-05, 1.2778000000001483e-05, 1.2444000000000344e-05, 1.2194999999999567e-05, 1.2167000000000427e-05, 1.2180000000000524e-05, 1.2153000000000858e-05, 1.2194000000000094e-05, 1.2777999999998013e-05, 1.2487000000001997e-05, 1.1972000000002453e-05, 1.2485999999999053e-05, 1.2500000000002093e-05, 1.2485999999999053e-05, 1.2194000000000094e-05, 1.2485999999999053e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.2778000000001483e-05, 1.1917000000000177e-05, 1.2778000000001483e-05, 1.2167000000000427e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.1889000000001038e-05, 1.2792000000001053e-05, 1.2194000000000094e-05, 1.2500000000002093e-05, 1.1875000000001468e-05, 1.2763999999998443e-05, 1.2485999999999053e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.2263999999997943e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.2194000000000094e-05, 1.1888999999997568e-05, 1.2472999999998957e-05, 1.1889000000001038e-05, 1.2514000000001663e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.2207999999999664e-05, 1.1888999999997568e-05]</msg>
<status status="PASS" starttime="20201112 09:44:29.551" endtime="20201112 09:44:29.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.546" endtime="20201112 09:44:29.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.556" endtime="20201112 09:44:29.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:29.559" endtime="20201112 09:44:29.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.558" endtime="20201112 09:44:29.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.554" endtime="20201112 09:44:29.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.190" endtime="20201112 09:44:29.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.189" endtime="20201112 09:44:29.580"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.589" endtime="20201112 09:44:29.603"></status>
</kw>
<msg timestamp="20201112 09:44:29.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.588" endtime="20201112 09:44:29.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.605" endtime="20201112 09:44:29.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.607" endtime="20201112 09:44:29.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.585" endtime="20201112 09:44:29.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.583" endtime="20201112 09:44:29.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.617" endtime="20201112 09:44:29.904"></status>
</kw>
<msg timestamp="20201112 09:44:29.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.615" endtime="20201112 09:44:29.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.908" endtime="20201112 09:44:29.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.917" endtime="20201112 09:44:29.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.612" endtime="20201112 09:44:29.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.611" endtime="20201112 09:44:29.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:29.923" level="INFO">${RESULT} = [{'time': 0.020004528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.020020542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:29.920" endtime="20201112 09:44:29.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:29.937" level="INFO">${ACCURACY} = {'time': [0.020004528, 0.020020542, 0.020040333, 0.020058542, 0.020076347, 0.020097347, 0.020116444, 0.020136569, 0.020157597, 0.020174625, 0.020190444, 0.020210694, 0.020228542, 0.020246514, 0.020269...</msg>
<status status="PASS" starttime="20201112 09:44:29.924" endtime="20201112 09:44:29.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.941" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:44:29.940" endtime="20201112 09:44:29.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.944" level="INFO">VALUE: [1.3374999999999498e-05, 1.3110999999999678e-05, 1.3083000000000539e-05, 1.3013999999998693e-05, 1.3375000000002968e-05, 1.3083000000000539e-05, 1.3083000000000539e-05, 1.3083000000000539e-05, 1.3986000000000554e-05, 1.3097000000000109e-05, 1.308299999999707e-05, 1.3444000000001344e-05, 1.3972999999996988e-05, 1.3013999999998693e-05, 1.3652999999998888e-05, 1.3986000000000554e-05, 1.4027999999999263e-05, 1.3389000000002538e-05, 1.3958000000001414e-05, 1.3667000000001928e-05, 1.3374999999999498e-05, 1.3111000000003148e-05, 1.3986000000000554e-05, 1.3360999999999928e-05, 1.3681000000001498e-05, 1.3695000000001067e-05, 1.3680000000002024e-05, 1.3681000000001498e-05, 1.3097000000000109e-05, 1.3681000000001498e-05, 1.3749999999999873e-05, 1.3084000000000012e-05, 1.3097000000000109e-05, 1.3388999999999068e-05, 1.4013999999999693e-05, 1.3097000000000109e-05, 1.3681000000001498e-05, 1.3681000000001498e-05, 1.3624999999999748e-05, 1.3361999999999402e-05, 1.3360999999999928e-05, 1.3694999999997598e-05, 1.3679999999998554e-05, 1.3986000000000554e-05, 1.3430999999997778e-05, 1.3346999999996889e-05, 1.3069000000000969e-05, 1.3680999999998028e-05, 1.3069000000000969e-05, 1.3139000000002288e-05]</msg>
<status status="PASS" starttime="20201112 09:44:29.942" endtime="20201112 09:44:29.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.938" endtime="20201112 09:44:29.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.947" endtime="20201112 09:44:29.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:29.951" endtime="20201112 09:44:29.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.949" endtime="20201112 09:44:29.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.946" endtime="20201112 09:44:29.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.581" endtime="20201112 09:44:29.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.581" endtime="20201112 09:44:29.972"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.980" endtime="20201112 09:44:29.995"></status>
</kw>
<msg timestamp="20201112 09:44:29.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.979" endtime="20201112 09:44:29.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.996" endtime="20201112 09:44:29.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.999" endtime="20201112 09:44:30.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.976" endtime="20201112 09:44:30.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.974" endtime="20201112 09:44:30.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.008" endtime="20201112 09:44:30.296"></status>
</kw>
<msg timestamp="20201112 09:44:30.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.006" endtime="20201112 09:44:30.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.300" endtime="20201112 09:44:30.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.309" endtime="20201112 09:44:30.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.004" endtime="20201112 09:44:30.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.002" endtime="20201112 09:44:30.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:30.315" level="INFO">${RESULT} = [{'time': 0.019932972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.455499999999943e-05, 'source_diff': 1.455499999999943e-05}, {'time': 0.019953889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:30.312" endtime="20201112 09:44:30.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:30.330" level="INFO">${ACCURACY} = {'time': [0.019932972, 0.019953889, 0.019976931, 0.019994833, 0.020015903, 0.020037875, 0.020061014, 0.02007775, 0.020094931, 0.020114944, 0.020137875, 0.020160903, 0.020179819, 0.020199056, 0.0202178...</msg>
<status status="PASS" starttime="20201112 09:44:30.316" endtime="20201112 09:44:30.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.335" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:44:30.334" endtime="20201112 09:44:30.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.337" level="INFO">VALUE: [1.455499999999943e-05, 1.4569999999998473e-05, 1.4541999999999333e-05, 1.3943999999998374e-05, 1.4263999999999943e-05, 1.3931000000001748e-05, 1.4249999999996904e-05, 1.3943999999998374e-05, 1.4250000000000373e-05, 1.4874999999997529e-05, 1.4000000000000123e-05, 1.4584000000001512e-05, 1.4583000000002039e-05, 1.4584000000001512e-05, 1.4875000000000999e-05, 1.4875000000000999e-05, 1.3971999999997514e-05, 1.4570000000001943e-05, 1.431899999999875e-05, 1.4499999999997154e-05, 1.429099999999961e-05, 1.4277999999999513e-05, 1.4514000000000193e-05, 1.4583000000002039e-05, 1.4514000000000193e-05, 1.4874999999997529e-05, 1.429099999999961e-05, 1.4597000000001609e-05, 1.4568999999999e-05, 1.4570000000001943e-05, 1.483299999999882e-05, 1.483299999999882e-05, 1.3945000000001317e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.484699999999839e-05, 1.4278000000002983e-05, 1.426300000000047e-05, 1.4263999999999943e-05, 1.429099999999961e-05, 1.4278000000002983e-05, 1.4889000000000568e-05, 1.4611000000001179e-05, 1.3985999999997084e-05, 1.4862000000000902e-05, 1.4250000000000373e-05, 1.4569000000002469e-05, 1.4583000000002039e-05, 1.427700000000004e-05, 1.4000000000000123e-05]</msg>
<status status="PASS" starttime="20201112 09:44:30.336" endtime="20201112 09:44:30.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.331" endtime="20201112 09:44:30.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.341" endtime="20201112 09:44:30.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:30.344" endtime="20201112 09:44:30.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.343" endtime="20201112 09:44:30.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.339" endtime="20201112 09:44:30.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.973" endtime="20201112 09:44:30.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.972" endtime="20201112 09:44:30.365"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.374" endtime="20201112 09:44:30.388"></status>
</kw>
<msg timestamp="20201112 09:44:30.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.372" endtime="20201112 09:44:30.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.390" endtime="20201112 09:44:30.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.392" endtime="20201112 09:44:30.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.370" endtime="20201112 09:44:30.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.368" endtime="20201112 09:44:30.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.401" endtime="20201112 09:44:30.687"></status>
</kw>
<msg timestamp="20201112 09:44:30.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019802181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.400" endtime="20201112 09:44:30.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019802181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.692" endtime="20201112 09:44:30.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.700" endtime="20201112 09:44:30.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.397" endtime="20201112 09:44:30.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.395" endtime="20201112 09:44:30.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:30.707" level="INFO">${RESULT} = [{'time': 0.019802181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4847999999997863e-05, 'source_diff': 1.4847999999997863e-05}, {'time': 0.019820194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:30.703" endtime="20201112 09:44:30.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:30.720" level="INFO">${ACCURACY} = {'time': [0.019802181, 0.019820194, 0.019841431, 0.019865236, 0.019883389, 0.019904222, 0.019923375, 0.01994725, 0.019966417, 0.019986236, 0.020010222, 0.020028236, 0.020048292, 0.020069361, 0.0200894...</msg>
<status status="PASS" starttime="20201112 09:44:30.708" endtime="20201112 09:44:30.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.725" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:44:30.724" endtime="20201112 09:44:30.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.727" level="INFO">VALUE: [1.4847999999997863e-05, 1.486099999999796e-05, 1.5472999999998488e-05, 1.5166999999999958e-05, 1.5153000000000388e-05, 1.5763999999997974e-05, 1.5457999999999444e-05, 1.5139000000000818e-05, 1.5444999999999348e-05, 1.5472000000002484e-05, 1.4889000000000568e-05, 1.4861000000001429e-05, 1.5458999999998918e-05, 1.5472000000002484e-05, 1.5487000000001527e-05, 1.5222999999998238e-05, 1.5764000000001444e-05, 1.5472000000002484e-05, 1.5513999999997724e-05, 1.5166999999999958e-05, 1.5166999999999958e-05, 1.5166999999999958e-05, 1.5153000000000388e-05, 1.5764000000001444e-05, 1.5737000000001777e-05, 1.5166999999999958e-05, 1.5749999999998404e-05, 1.5165999999997015e-05, 1.5457999999999444e-05, 1.5764000000001444e-05, 1.5458999999998918e-05, 1.5152999999996919e-05, 1.5764000000001444e-05, 1.5486999999998058e-05, 1.5152000000000915e-05, 1.5458000000002914e-05, 1.4874999999997529e-05, 1.5180000000000055e-05, 1.5180999999999528e-05, 1.5457999999999444e-05, 1.540300000000064e-05, 1.5735999999998834e-05, 1.5694000000000125e-05, 1.5764000000001444e-05, 1.5694000000000125e-05, 1.5486000000002054e-05, 1.5444999999999348e-05, 1.486099999999796e-05, 1.5791999999997114e-05, 1.5777999999997544e-05]</msg>
<status status="PASS" starttime="20201112 09:44:30.726" endtime="20201112 09:44:30.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.721" endtime="20201112 09:44:30.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.731" endtime="20201112 09:44:30.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:30.734" endtime="20201112 09:44:30.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.733" endtime="20201112 09:44:30.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.729" endtime="20201112 09:44:30.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.366" endtime="20201112 09:44:30.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.366" endtime="20201112 09:44:30.755"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.764" endtime="20201112 09:44:30.781"></status>
</kw>
<msg timestamp="20201112 09:44:30.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.763" endtime="20201112 09:44:30.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.782" endtime="20201112 09:44:30.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.785" endtime="20201112 09:44:30.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.760" endtime="20201112 09:44:30.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.758" endtime="20201112 09:44:30.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.794" endtime="20201112 09:44:31.080"></status>
</kw>
<msg timestamp="20201112 09:44:31.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020897472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020913528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.792" endtime="20201112 09:44:31.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020897472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020913528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.084" endtime="20201112 09:44:31.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.093" endtime="20201112 09:44:31.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.790" endtime="20201112 09:44:31.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.788" endtime="20201112 09:44:31.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.099" level="INFO">${RESULT} = [{'time': 0.020913528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6056000000000403e-05, 'source_diff': 1.6056000000000403e-05}, {'time': 0.020936403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:31.096" endtime="20201112 09:44:31.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:31.113" level="INFO">${ACCURACY} = {'time': [0.020913528, 0.020936403, 0.0209615, 0.020981639, 0.021003556, 0.021026431, 0.021045583, 0.021066472, 0.021085569, 0.021106694, 0.0211295, 0.0211485, 0.021171486, 0.021193375, 0.021215458, 0...</msg>
<status status="PASS" starttime="20201112 09:44:31.100" endtime="20201112 09:44:31.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.117" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:44:31.116" endtime="20201112 09:44:31.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.120" level="INFO">VALUE: [1.6056000000000403e-05, 1.63889999999986e-05, 1.665300000000189e-05, 1.6986000000000084e-05, 1.6097999999999113e-05, 1.643100000000078e-05, 1.60690000000005e-05, 1.605500000000093e-05, 1.6651999999998945e-05, 1.6722000000000264e-05, 1.637499999999903e-05, 1.609699999999964e-05, 1.605500000000093e-05, 1.633300000000032e-05, 1.60690000000005e-05, 1.666700000000146e-05, 1.6320000000000223e-05, 1.6945000000000848e-05, 1.665300000000189e-05, 1.604099999999789e-05, 1.634699999999989e-05, 1.6348000000002832e-05, 1.6665999999998515e-05, 1.6111999999998683e-05, 1.636099999999946e-05, 1.6945000000000848e-05, 1.6056000000000403e-05, 1.6666000000001985e-05, 1.663900000000232e-05, 1.6056000000000403e-05, 1.6958000000000945e-05, 1.60690000000005e-05, 1.6056000000000403e-05, 1.6651999999998945e-05, 1.60690000000005e-05, 1.6362000000002402e-05, 1.6056000000000403e-05, 1.6999999999999654e-05, 1.665300000000189e-05, 1.659700000000014e-05, 1.636099999999946e-05, 1.666700000000146e-05, 1.60690000000005e-05, 1.665299999999842e-05, 1.636100000000293e-05, 1.63889999999986e-05, 1.6958000000000945e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.663900000000232e-05]</msg>
<status status="PASS" starttime="20201112 09:44:31.119" endtime="20201112 09:44:31.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.114" endtime="20201112 09:44:31.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.123" endtime="20201112 09:44:31.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.127" endtime="20201112 09:44:31.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.125" endtime="20201112 09:44:31.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.122" endtime="20201112 09:44:31.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.756" endtime="20201112 09:44:31.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.756" endtime="20201112 09:44:31.148"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.157" endtime="20201112 09:44:31.172"></status>
</kw>
<msg timestamp="20201112 09:44:31.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.155" endtime="20201112 09:44:31.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.173" endtime="20201112 09:44:31.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.176" endtime="20201112 09:44:31.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.152" endtime="20201112 09:44:31.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.150" endtime="20201112 09:44:31.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.185" endtime="20201112 09:44:31.471"></status>
</kw>
<msg timestamp="20201112 09:44:31.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020824, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:31.183" endtime="20201112 09:44:31.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020824, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:31.475" endtime="20201112 09:44:31.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.483" endtime="20201112 09:44:31.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.181" endtime="20201112 09:44:31.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.179" endtime="20201112 09:44:31.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.490" level="INFO">${RESULT} = [{'time': 0.020840958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6958000000000945e-05, 'source_diff': 1.6958000000000945e-05}, {'time': 0.020867903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:31.487" endtime="20201112 09:44:31.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:31.504" level="INFO">${ACCURACY} = {'time': [0.020840958, 0.020867903, 0.020895083, 0.020921917, 0.020943097, 0.020965125, 0.020988917, 0.021015042, 0.021038958, 0.021064972, 0.021086167, 0.021108069, 0.021133972, 0.021157056, 0.021178...</msg>
<status status="PASS" starttime="20201112 09:44:31.491" endtime="20201112 09:44:31.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.508" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:44:31.507" endtime="20201112 09:44:31.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.511" level="INFO">VALUE: [1.6958000000000945e-05, 1.7277999999999044e-05, 1.755499999999896e-05, 1.7264000000002944e-05, 1.7527999999999294e-05, 1.783300000000182e-05, 1.7541999999998864e-05, 1.7223000000000238e-05, 1.6944000000001375e-05, 1.7528000000002764e-05, 1.7319999999997754e-05, 1.7486000000000584e-05, 1.6958000000000945e-05, 1.7249999999999904e-05, 1.7264000000002944e-05, 1.7820000000001723e-05, 1.7528000000002764e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7207999999997725e-05, 1.7541999999998864e-05, 1.718099999999806e-05, 1.733299999999785e-05, 1.7264000000002944e-05, 1.7528000000002764e-05, 1.7320000000001223e-05, 1.733299999999785e-05, 1.786099999999749e-05, 1.7555999999998434e-05, 1.6986000000000084e-05, 1.6959000000000418e-05, 1.786100000000096e-05, 1.7556000000001903e-05, 1.7263999999999474e-05, 1.7541999999998864e-05, 1.7249999999999904e-05, 1.6929999999998335e-05, 1.755499999999896e-05, 1.6958000000000945e-05, 1.7249999999999904e-05, 1.7471999999997545e-05, 1.752699999999982e-05, 1.6958000000000945e-05, 1.755500000000243e-05, 1.754100000000286e-05, 1.7555999999998434e-05, 1.7263999999999474e-05, 1.694499999999738e-05, 1.784699999999792e-05, 1.786100000000096e-05]</msg>
<status status="PASS" starttime="20201112 09:44:31.509" endtime="20201112 09:44:31.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.504" endtime="20201112 09:44:31.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.514" endtime="20201112 09:44:31.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.518" endtime="20201112 09:44:31.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.516" endtime="20201112 09:44:31.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.513" endtime="20201112 09:44:31.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.149" endtime="20201112 09:44:31.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.148" endtime="20201112 09:44:31.539"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.547" endtime="20201112 09:44:31.563"></status>
</kw>
<msg timestamp="20201112 09:44:31.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.546" endtime="20201112 09:44:31.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.564" endtime="20201112 09:44:31.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.567" endtime="20201112 09:44:31.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.543" endtime="20201112 09:44:31.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.541" endtime="20201112 09:44:31.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.576" endtime="20201112 09:44:31.862"></status>
</kw>
<msg timestamp="20201112 09:44:31.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.574" endtime="20201112 09:44:31.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.866" endtime="20201112 09:44:31.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.875" endtime="20201112 09:44:31.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.572" endtime="20201112 09:44:31.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.570" endtime="20201112 09:44:31.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.882" level="INFO">${RESULT} = [{'time': 0.020335278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8221999999998295e-05, 'source_diff': 1.8221999999998295e-05}, {'time': 0.020360194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:31.878" endtime="20201112 09:44:31.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:31.896" level="INFO">${ACCURACY} = {'time': [0.020335278, 0.020360194, 0.020384083, 0.02040925, 0.020435194, 0.020457153, 0.020484125, 0.020507208, 0.020533097, 0.020557264, 0.020584361, 0.020609278, 0.020630208, 0.020652361, 0.0206773...</msg>
<status status="PASS" starttime="20201112 09:44:31.883" endtime="20201112 09:44:31.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.901" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:44:31.900" endtime="20201112 09:44:31.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.903" level="INFO">VALUE: [1.8221999999998295e-05, 1.8722000000002265e-05, 1.8666000000000516e-05, 1.813900000000035e-05, 1.8736000000001835e-05, 1.8735999999998365e-05, 1.8735999999998365e-05, 1.8721999999998795e-05, 1.8443999999999405e-05, 1.815299999999992e-05, 1.8471999999998545e-05, 1.811100000000121e-05, 1.8707999999999225e-05, 1.8443999999999405e-05, 1.8166000000000015e-05, 1.8166000000000015e-05, 1.816700000000296e-05, 1.844499999999888e-05, 1.8736000000001835e-05, 1.8735999999998365e-05, 1.812499999999731e-05, 1.813900000000035e-05, 1.9028000000000794e-05, 1.8722000000002265e-05, 1.8737000000001308e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.8778000000000544e-05, 1.815299999999992e-05, 1.784699999999792e-05, 1.847299999999802e-05, 1.8458000000002445e-05, 1.812500000000078e-05, 1.841699999999974e-05, 1.8735999999998365e-05, 1.8764000000000974e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8763999999997505e-05, 1.8457999999998975e-05, 1.813900000000035e-05, 1.8721999999998795e-05, 1.8750000000001404e-05, 1.8208000000002195e-05, 1.8443999999999405e-05, 1.8736000000001835e-05, 1.8443999999999405e-05, 1.815299999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:44:31.902" endtime="20201112 09:44:31.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.897" endtime="20201112 09:44:31.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.907" endtime="20201112 09:44:31.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.910" endtime="20201112 09:44:31.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.909" endtime="20201112 09:44:31.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.905" endtime="20201112 09:44:31.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.540" endtime="20201112 09:44:31.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.539" endtime="20201112 09:44:31.931"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.940" endtime="20201112 09:44:31.956"></status>
</kw>
<msg timestamp="20201112 09:44:31.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.939" endtime="20201112 09:44:31.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.958" endtime="20201112 09:44:31.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.960" endtime="20201112 09:44:31.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.936" endtime="20201112 09:44:31.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.934" endtime="20201112 09:44:31.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.969" endtime="20201112 09:44:32.257"></status>
</kw>
<msg timestamp="20201112 09:44:32.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02058, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020599028, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:44:31.968" endtime="20201112 09:44:32.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02058, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020599028, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:44:32.262" endtime="20201112 09:44:32.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.270" endtime="20201112 09:44:32.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.965" endtime="20201112 09:44:32.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.963" endtime="20201112 09:44:32.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:32.277" level="INFO">${RESULT} = [{'time': 0.020599028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9027999999997325e-05, 'source_diff': 1.9027999999997325e-05}, {'time': 0.020621333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:32.273" endtime="20201112 09:44:32.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:32.290" level="INFO">${ACCURACY} = {'time': [0.020599028, 0.020621333, 0.020647111, 0.020670264, 0.020697222, 0.020721278, 0.020745208, 0.020767056, 0.02079425, 0.02082325, 0.020850208, 0.020876069, 0.020905056, 0.020929111, 0.02095429...</msg>
<status status="PASS" starttime="20201112 09:44:32.278" endtime="20201112 09:44:32.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.295" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:44:32.294" endtime="20201112 09:44:32.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.297" level="INFO">VALUE: [1.9027999999997325e-05, 1.938899999999813e-05, 1.931900000000028e-05, 1.993100000000081e-05, 1.9666000000001516e-05, 1.991699999999777e-05, 1.931900000000028e-05, 1.965299999999795e-05, 1.993100000000081e-05, 1.963900000000185e-05, 1.9943999999997436e-05, 1.961099999999924e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.9306000000000184e-05, 1.9347999999998894e-05, 1.8999999999998185e-05, 1.934699999999942e-05, 1.9319999999999754e-05, 1.933299999999985e-05, 1.9042000000000364e-05, 1.963900000000185e-05, 1.9915999999998296e-05, 1.965299999999795e-05, 1.934699999999942e-05, 1.9055999999999934e-05, 1.993099999999734e-05, 1.934699999999942e-05, 1.934699999999942e-05, 1.9042000000000364e-05, 1.9042000000000364e-05, 1.9027999999997325e-05, 1.962499999999881e-05, 1.931900000000028e-05, 1.963900000000185e-05, 1.931900000000028e-05, 1.9041999999996895e-05, 1.909699999999917e-05, 1.962499999999881e-05, 1.961099999999924e-05, 1.963899999999838e-05, 1.955500000000096e-05, 1.938899999999813e-05, 1.933299999999985e-05, 1.962499999999881e-05, 1.933299999999985e-05, 1.9930000000001336e-05, 1.963899999999838e-05, 1.90829999999996e-05, 1.963899999999838e-05]</msg>
<status status="PASS" starttime="20201112 09:44:32.296" endtime="20201112 09:44:32.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.291" endtime="20201112 09:44:32.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.301" endtime="20201112 09:44:32.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:32.304" endtime="20201112 09:44:32.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.303" endtime="20201112 09:44:32.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.299" endtime="20201112 09:44:32.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.932" endtime="20201112 09:44:32.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.932" endtime="20201112 09:44:32.326"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.335" endtime="20201112 09:44:32.350"></status>
</kw>
<msg timestamp="20201112 09:44:32.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.333" endtime="20201112 09:44:32.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.351" endtime="20201112 09:44:32.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.354" endtime="20201112 09:44:32.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.330" endtime="20201112 09:44:32.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.328" endtime="20201112 09:44:32.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.363" endtime="20201112 09:44:32.649"></status>
</kw>
<msg timestamp="20201112 09:44:32.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020586667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020607472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.361" endtime="20201112 09:44:32.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020586667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020607472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.654" endtime="20201112 09:44:32.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.662" endtime="20201112 09:44:32.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.359" endtime="20201112 09:44:32.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.357" endtime="20201112 09:44:32.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:32.669" level="INFO">${RESULT} = [{'time': 0.020607472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.080500000000221e-05, 'source_diff': 2.080500000000221e-05}, {'time': 0.020636583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:32.666" endtime="20201112 09:44:32.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:32.682" level="INFO">${ACCURACY} = {'time': [0.020607472, 0.020636583, 0.020661458, 0.020685625, 0.020708583, 0.020732514, 0.020757389, 0.020782444, 0.020811611, 0.020837611, 0.020864403, 0.020888583, 0.020913458, 0.020938528, 0.020967...</msg>
<status status="PASS" starttime="20201112 09:44:32.670" endtime="20201112 09:44:32.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.687" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:44:32.686" endtime="20201112 09:44:32.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.689" level="INFO">VALUE: [2.080500000000221e-05, 2.088899999999963e-05, 2.083300000000135e-05, 2.0305999999997715e-05, 2.083299999999788e-05, 2.0499999999999685e-05, 2.0235999999999865e-05, 1.9930000000001336e-05, 2.0222000000000295e-05, 2.0222000000000295e-05, 2.0222000000000295e-05, 2.0222000000000295e-05, 2.0222000000000295e-05, 1.993100000000081e-05, 2.081899999999831e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 2.0249999999999435e-05, 2.0499999999999685e-05, 2.0291999999998145e-05, 2.0541999999998395e-05, 1.993099999999734e-05, 2.0235999999999865e-05, 2.0820000000001254e-05, 1.993100000000081e-05, 2.0500000000003155e-05, 2.0263999999999005e-05, 2.0527999999998825e-05, 1.988899999999863e-05, 2.0513999999999255e-05, 2.086099999999702e-05, 2.080499999999874e-05, 2.0263999999999005e-05, 2.018099999999759e-05, 2.055500000000196e-05, 2.0513999999999255e-05, 2.084700000000092e-05, 2.0222000000000295e-05, 2.0513999999999255e-05, 2.083300000000135e-05, 2.076300000000003e-05, 1.991700000000124e-05, 2.0541999999998395e-05, 1.991700000000124e-05, 2.0472000000000545e-05, 2.0222000000000295e-05, 2.0222000000000295e-05, 2.0528000000002294e-05, 1.9944000000000905e-05, 2.0513999999999255e-05]</msg>
<status status="PASS" starttime="20201112 09:44:32.688" endtime="20201112 09:44:32.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.683" endtime="20201112 09:44:32.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.693" endtime="20201112 09:44:32.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:32.697" endtime="20201112 09:44:32.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.695" endtime="20201112 09:44:32.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.691" endtime="20201112 09:44:32.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.327" endtime="20201112 09:44:32.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.326" endtime="20201112 09:44:32.718"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.726" endtime="20201112 09:44:32.743"></status>
</kw>
<msg timestamp="20201112 09:44:32.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.725" endtime="20201112 09:44:32.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.744" endtime="20201112 09:44:32.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.747" endtime="20201112 09:44:32.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.722" endtime="20201112 09:44:32.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.720" endtime="20201112 09:44:32.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.756" endtime="20201112 09:44:33.042"></status>
</kw>
<msg timestamp="20201112 09:44:33.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020749847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020771306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.754" endtime="20201112 09:44:33.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020749847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020771306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.047" endtime="20201112 09:44:33.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.055" endtime="20201112 09:44:33.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.752" endtime="20201112 09:44:33.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.750" endtime="20201112 09:44:33.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.062" level="INFO">${RESULT} = [{'time': 0.020771306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.145900000000145e-05, 'source_diff': 2.145900000000145e-05}, {'time': 0.020798306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:33.059" endtime="20201112 09:44:33.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:33.075" level="INFO">${ACCURACY} = {'time': [0.020771306, 0.020798306, 0.020825222, 0.020849319, 0.020879222, 0.020905347, 0.020934431, 0.020961403, 0.020987264, 0.021014375, 0.021041403, 0.021065333, 0.021095389, 0.021121403, 0.021149...</msg>
<status status="PASS" starttime="20201112 09:44:33.063" endtime="20201112 09:44:33.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.080" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:44:33.079" endtime="20201112 09:44:33.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.082" level="INFO">VALUE: [2.145900000000145e-05, 2.145899999999798e-05, 2.1415999999999796e-05, 2.1416000000003266e-05, 2.138900000000013e-05, 2.1708000000002226e-05, 2.2055999999999465e-05, 2.1472000000001545e-05, 2.168099999999909e-05, 2.108299999999813e-05, 2.14029999999997e-05, 2.138900000000013e-05, 2.143099999999884e-05, 2.109700000000117e-05, 2.141699999999927e-05, 2.1138000000000406e-05, 2.112500000000031e-05, 2.170899999999823e-05, 2.1151999999999976e-05, 2.141700000000274e-05, 2.143099999999884e-05, 2.170899999999823e-05, 2.112500000000031e-05, 2.1721999999998326e-05, 2.112500000000031e-05, 2.143099999999884e-05, 2.112499999999684e-05, 2.2014000000000755e-05, 2.115299999999945e-05, 2.1721999999998326e-05, 2.1693999999999186e-05, 2.141700000000274e-05, 2.081899999999831e-05, 2.140300000000317e-05, 2.143100000000231e-05, 2.141700000000274e-05, 2.201300000000128e-05, 2.112500000000031e-05, 2.141700000000274e-05, 2.141699999999927e-05, 2.1721999999998326e-05, 2.2069999999999035e-05, 2.1098000000000644e-05, 2.1070000000001504e-05, 2.143100000000231e-05, 2.1415999999999796e-05, 2.115299999999945e-05, 2.1694000000002656e-05, 2.111100000000074e-05, 2.1415999999999796e-05]</msg>
<status status="PASS" starttime="20201112 09:44:33.081" endtime="20201112 09:44:33.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.076" endtime="20201112 09:44:33.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.086" endtime="20201112 09:44:33.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.090" endtime="20201112 09:44:33.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.088" endtime="20201112 09:44:33.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.084" endtime="20201112 09:44:33.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.718" endtime="20201112 09:44:33.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.718" endtime="20201112 09:44:33.111"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.119" endtime="20201112 09:44:33.134"></status>
</kw>
<msg timestamp="20201112 09:44:33.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.118" endtime="20201112 09:44:33.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.136" endtime="20201112 09:44:33.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.138" endtime="20201112 09:44:33.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.115" endtime="20201112 09:44:33.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.113" endtime="20201112 09:44:33.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.147" endtime="20201112 09:44:33.434"></status>
</kw>
<msg timestamp="20201112 09:44:33.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.146" endtime="20201112 09:44:33.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.439" endtime="20201112 09:44:33.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.447" endtime="20201112 09:44:33.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.143" endtime="20201112 09:44:33.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.141" endtime="20201112 09:44:33.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.454" level="INFO">${RESULT} = [{'time': 0.020142208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2916000000001296e-05, 'source_diff': 2.2916000000001296e-05}, {'time': 0.020170042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:33.450" endtime="20201112 09:44:33.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:33.469" level="INFO">${ACCURACY} = {'time': [0.020142208, 0.020170042, 0.02020225, 0.020228153, 0.020259153, 0.020287181, 0.020318208, 0.020346292, 0.020378194, 0.020406042, 0.02043725, 0.020465264, 0.020490097, 0.020515083, 0.02054705...</msg>
<status status="PASS" starttime="20201112 09:44:33.455" endtime="20201112 09:44:33.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.473" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:44:33.472" endtime="20201112 09:44:33.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.476" level="INFO">VALUE: [2.2916000000001296e-05, 2.2305999999999715e-05, 2.261100000000224e-05, 2.29169999999973e-05, 2.262499999999834e-05, 2.29030000000012e-05, 2.2250000000001435e-05, 2.2305999999999715e-05, 2.2290999999997202e-05, 2.1999999999997716e-05, 2.2028000000000325e-05, 2.287500000000206e-05, 2.262499999999834e-05, 2.2014000000000755e-05, 2.262500000000181e-05, 2.230500000000024e-05, 2.231900000000328e-05, 2.2320000000002754e-05, 2.2319999999999285e-05, 2.261099999999877e-05, 2.261099999999877e-05, 2.229100000000067e-05, 2.234699999999895e-05, 2.263899999999791e-05, 2.230500000000024e-05, 2.2013999999997286e-05, 2.2598000000002144e-05, 2.2028000000000325e-05, 2.229100000000067e-05, 2.29030000000012e-05, 2.2014000000000755e-05, 2.2319999999999285e-05, 2.2597999999998675e-05, 2.234700000000242e-05, 2.290299999999773e-05, 2.29169999999973e-05, 2.2305999999999715e-05, 2.291700000000077e-05, 2.230500000000024e-05, 2.231899999999981e-05, 2.29030000000012e-05, 2.261099999999877e-05, 2.2305999999999715e-05, 2.265300000000095e-05, 2.263899999999791e-05, 2.261099999999877e-05, 2.262499999999834e-05, 2.25969999999992e-05, 2.2305999999999715e-05, 2.230500000000024e-05]</msg>
<status status="PASS" starttime="20201112 09:44:33.474" endtime="20201112 09:44:33.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.469" endtime="20201112 09:44:33.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.479" endtime="20201112 09:44:33.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.483" endtime="20201112 09:44:33.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.481" endtime="20201112 09:44:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.478" endtime="20201112 09:44:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.111" endtime="20201112 09:44:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.111" endtime="20201112 09:44:33.504"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.512" endtime="20201112 09:44:33.526"></status>
</kw>
<msg timestamp="20201112 09:44:33.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.511" endtime="20201112 09:44:33.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.528" endtime="20201112 09:44:33.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.530" endtime="20201112 09:44:33.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.508" endtime="20201112 09:44:33.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.506" endtime="20201112 09:44:33.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.539" endtime="20201112 09:44:33.825"></status>
</kw>
<msg timestamp="20201112 09:44:33.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.538" endtime="20201112 09:44:33.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.830" endtime="20201112 09:44:33.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.838" endtime="20201112 09:44:33.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.535" endtime="20201112 09:44:33.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.533" endtime="20201112 09:44:33.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.845" level="INFO">${RESULT} = [{'time': 0.020074347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3208000000000256e-05, 'source_diff': 2.3208000000000256e-05}, {'time': 0.020106361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:33.841" endtime="20201112 09:44:33.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:33.858" level="INFO">${ACCURACY} = {'time': [0.020074347, 0.020106361, 0.020132583, 0.020161486, 0.020192597, 0.020223556, 0.020251542, 0.020284472, 0.020311542, 0.020343389, 0.020374403, 0.020405375, 0.020435375, 0.020467417, 0.020498...</msg>
<status status="PASS" starttime="20201112 09:44:33.846" endtime="20201112 09:44:33.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.863" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:44:33.862" endtime="20201112 09:44:33.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.865" level="INFO">VALUE: [2.3208000000000256e-05, 2.288899999999816e-05, 2.3526999999998882e-05, 2.3804999999998272e-05, 2.3194000000000686e-05, 2.316700000000102e-05, 2.3806000000001215e-05, 2.3485999999999646e-05, 2.386100000000002e-05, 2.319500000000016e-05, 2.3485999999999646e-05, 2.3221999999999826e-05, 2.3527999999998356e-05, 2.295900000000295e-05, 2.32770000000021e-05, 2.287500000000206e-05, 2.3499999999999216e-05, 2.319499999999669e-05, 2.380500000000174e-05, 2.380500000000174e-05, 2.3791999999998176e-05, 2.3208000000000256e-05, 2.293100000000034e-05, 2.32090000000032e-05, 2.3208000000000256e-05, 2.2848000000002394e-05, 2.3805999999997746e-05, 2.3527999999998356e-05, 2.3791999999998176e-05, 2.3499999999999216e-05, 2.3791999999998176e-05, 2.320899999999973e-05, 2.3194000000000686e-05, 2.3834000000000355e-05, 2.3485999999999646e-05, 2.284700000000292e-05, 2.3499999999999216e-05, 2.291700000000077e-05, 2.3208000000000256e-05, 2.293099999999687e-05, 2.3514000000002255e-05, 2.3444000000000936e-05, 2.3208000000000256e-05, 2.2944000000000436e-05, 2.320899999999973e-05, 2.3792000000001645e-05, 2.319500000000016e-05, 2.3513999999998786e-05, 2.320899999999973e-05, 2.3806000000001215e-05]</msg>
<status status="PASS" starttime="20201112 09:44:33.864" endtime="20201112 09:44:33.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.859" endtime="20201112 09:44:33.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.869" endtime="20201112 09:44:33.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.872" endtime="20201112 09:44:33.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.871" endtime="20201112 09:44:33.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.867" endtime="20201112 09:44:33.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.504" endtime="20201112 09:44:33.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.504" endtime="20201112 09:44:33.893"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.902" endtime="20201112 09:44:33.918"></status>
</kw>
<msg timestamp="20201112 09:44:33.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.900" endtime="20201112 09:44:33.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.920" endtime="20201112 09:44:33.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.922" endtime="20201112 09:44:33.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.898" endtime="20201112 09:44:33.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.896" endtime="20201112 09:44:33.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.931" endtime="20201112 09:44:34.217"></status>
</kw>
<msg timestamp="20201112 09:44:34.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020574736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020599431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.930" endtime="20201112 09:44:34.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020574736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020599431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.222" endtime="20201112 09:44:34.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.230" endtime="20201112 09:44:34.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.927" endtime="20201112 09:44:34.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.925" endtime="20201112 09:44:34.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:34.237" level="INFO">${RESULT} = [{'time': 0.020599431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.469500000000166e-05, 'source_diff': 2.469500000000166e-05}, {'time': 0.020626361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:34.233" endtime="20201112 09:44:34.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:34.250" level="INFO">${ACCURACY} = {'time': [0.020599431, 0.020626361, 0.020654431, 0.0206835, 0.020712458, 0.020743403, 0.020776528, 0.020803458, 0.020833333, 0.020865472, 0.020897306, 0.020927361, 0.020956472, 0.020988306, 0.02101837...</msg>
<status status="PASS" starttime="20201112 09:44:34.238" endtime="20201112 09:44:34.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.255" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:44:34.254" endtime="20201112 09:44:34.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.257" level="INFO">VALUE: [2.469500000000166e-05, 2.44169999999988e-05, 2.469500000000166e-05, 2.44169999999988e-05, 2.438899999999966e-05, 2.469500000000166e-05, 2.4735999999997427e-05, 2.4693999999998717e-05, 2.4082999999997662e-05, 2.4665999999999577e-05, 2.440299999999923e-05, 2.4693999999998717e-05, 2.4693999999998717e-05, 2.438900000000313e-05, 2.4693999999998717e-05, 2.469499999999819e-05, 2.438899999999966e-05, 2.4693999999998717e-05, 2.469500000000166e-05, 2.4084000000000605e-05, 2.438899999999966e-05, 2.469500000000166e-05, 2.40970000000007e-05, 2.440299999999923e-05, 2.4694000000002186e-05, 2.4750000000000466e-05, 2.4098000000000175e-05, 2.469499999999819e-05, 2.438899999999966e-05, 2.4958000000002006e-05, 2.4098000000000175e-05, 2.438899999999966e-05, 2.5014000000000286e-05, 2.462500000000034e-05, 2.4096999999997232e-05, 2.4693999999998717e-05, 2.44030000000027e-05, 2.44169999999988e-05, 2.431900000000181e-05, 2.465299999999948e-05, 2.469500000000166e-05, 2.494499999999844e-05, 2.4680000000002617e-05, 2.4346999999997482e-05, 2.4694000000002186e-05, 2.438899999999966e-05, 2.4693999999998717e-05, 2.412499999999984e-05, 2.44169999999988e-05, 2.40970000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:44:34.256" endtime="20201112 09:44:34.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.251" endtime="20201112 09:44:34.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.261" endtime="20201112 09:44:34.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:34.264" endtime="20201112 09:44:34.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.263" endtime="20201112 09:44:34.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.259" endtime="20201112 09:44:34.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.894" endtime="20201112 09:44:34.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.893" endtime="20201112 09:44:34.285"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.294" endtime="20201112 09:44:34.312"></status>
</kw>
<msg timestamp="20201112 09:44:34.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.293" endtime="20201112 09:44:34.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.313" endtime="20201112 09:44:34.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.316" endtime="20201112 09:44:34.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.290" endtime="20201112 09:44:34.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.288" endtime="20201112 09:44:34.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.325" endtime="20201112 09:44:34.611"></status>
</kw>
<msg timestamp="20201112 09:44:34.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020807014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.323" endtime="20201112 09:44:34.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020807014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.615" endtime="20201112 09:44:34.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.623" endtime="20201112 09:44:34.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.321" endtime="20201112 09:44:34.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.319" endtime="20201112 09:44:34.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:34.630" level="INFO">${RESULT} = [{'time': 0.020831986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4972000000001576e-05, 'source_diff': 2.4972000000001576e-05}, {'time': 0.020865028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:34.627" endtime="20201112 09:44:34.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:34.643" level="INFO">${ACCURACY} = {'time': [0.020831986, 0.020865028, 0.020893944, 0.020926028, 0.020957111, 0.020985264, 0.021015083, 0.021046194, 0.021080056, 0.02111, 0.021137958, 0.021170111, 0.021200028, 0.021233014, 0.021261125,...</msg>
<status status="PASS" starttime="20201112 09:44:34.631" endtime="20201112 09:44:34.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.648" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:44:34.647" endtime="20201112 09:44:34.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.651" level="INFO">VALUE: [2.4972000000001576e-05, 2.536100000000152e-05, 2.5568999999999592e-05, 2.5235999999997927e-05, 2.5291999999999676e-05, 2.566700000000005e-05, 2.5000000000000716e-05, 2.5582999999999162e-05, 2.49169999999993e-05, 2.5596999999998732e-05, 2.5290999999996733e-05, 2.590299999999726e-05, 2.5278000000000106e-05, 2.4972000000001576e-05, 2.5596999999998732e-05, 2.5014000000000286e-05, 2.5291999999999676e-05, 2.5014000000000286e-05, 2.5264000000000536e-05, 2.561100000000177e-05, 2.5291999999999676e-05, 2.497300000000105e-05, 2.5334000000001855e-05, 2.4986000000001146e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.5278000000000106e-05, 2.4986000000001146e-05, 2.4986000000001146e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.5000000000000716e-05, 2.5291999999999676e-05, 2.5568999999999592e-05, 2.5583999999998636e-05, 2.4985999999997677e-05, 2.4986000000001146e-05, 2.5596999999998732e-05, 2.4986000000001146e-05, 2.588899999999769e-05, 2.5874999999998122e-05, 2.5583999999998636e-05, 2.5846999999998982e-05, 2.4999999999997247e-05, 2.5291999999999676e-05, 2.55970000000022e-05, 2.4986000000001146e-05, 2.498700000000062e-05, 2.558300000000263e-05]</msg>
<status status="PASS" starttime="20201112 09:44:34.649" endtime="20201112 09:44:34.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.644" endtime="20201112 09:44:34.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.654" endtime="20201112 09:44:34.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:34.658" endtime="20201112 09:44:34.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.656" endtime="20201112 09:44:34.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.653" endtime="20201112 09:44:34.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.286" endtime="20201112 09:44:34.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.286" endtime="20201112 09:44:34.679"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.687" endtime="20201112 09:44:34.702"></status>
</kw>
<msg timestamp="20201112 09:44:34.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.686" endtime="20201112 09:44:34.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.704" endtime="20201112 09:44:34.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.707" endtime="20201112 09:44:34.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.683" endtime="20201112 09:44:34.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.681" endtime="20201112 09:44:34.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.716" endtime="20201112 09:44:35.002"></status>
</kw>
<msg timestamp="20201112 09:44:35.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.714" endtime="20201112 09:44:35.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.006" endtime="20201112 09:44:35.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.014" endtime="20201112 09:44:35.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.711" endtime="20201112 09:44:35.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.710" endtime="20201112 09:44:35.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:35.021" level="INFO">${RESULT} = [{'time': 0.019949153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.618100000000012e-05, 'source_diff': 2.618100000000012e-05}, {'time': 0.019980347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:35.018" endtime="20201112 09:44:35.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:35.036" level="INFO">${ACCURACY} = {'time': [0.019949153, 0.019980347, 0.020012444, 0.020044208, 0.020075181, 0.020105417, 0.020141292, 0.020174194, 0.020204361, 0.020240333, 0.020271278, 0.020302472, 0.020333306, 0.020365208, 0.020397...</msg>
<status status="PASS" starttime="20201112 09:44:35.022" endtime="20201112 09:44:35.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.040" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:44:35.039" endtime="20201112 09:44:35.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.043" level="INFO">VALUE: [2.618100000000012e-05, 2.6777999999998137e-05, 2.6471999999999607e-05, 2.6471999999999607e-05, 2.590300000000073e-05, 2.6792000000001176e-05, 2.6778000000001606e-05, 2.6166000000001077e-05, 2.6778000000001606e-05, 2.6776999999998663e-05, 2.6735999999999427e-05, 2.6777999999998137e-05, 2.616700000000055e-05, 2.5874999999998122e-05, 2.6791999999997707e-05, 2.6806000000000746e-05, 2.6778000000001606e-05, 2.6721999999999857e-05, 2.6180000000000647e-05, 2.6776999999998663e-05, 2.6512999999998843e-05, 2.6180000000000647e-05, 2.6485999999999177e-05, 2.6778000000001606e-05, 2.6527999999997887e-05, 2.6207999999999787e-05, 2.6194000000000217e-05, 2.6763999999998567e-05, 2.6750000000002466e-05, 2.6749999999998997e-05, 2.6777000000002132e-05, 2.6180000000000647e-05, 2.6111999999998275e-05, 2.6708000000000287e-05, 2.6764000000002036e-05, 2.6833999999999886e-05, 2.615299999999751e-05, 2.6485999999999177e-05, 2.6235999999998927e-05, 2.645899999999951e-05, 2.590300000000073e-05, 2.6485999999999177e-05, 2.6513999999998317e-05, 2.6777000000002132e-05, 2.6486000000002646e-05, 2.6764000000002036e-05, 2.6485999999999177e-05, 2.6458000000000037e-05, 2.6471999999999607e-05, 2.6792000000001176e-05]</msg>
<status status="PASS" starttime="20201112 09:44:35.041" endtime="20201112 09:44:35.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.037" endtime="20201112 09:44:35.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.047" endtime="20201112 09:44:35.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:35.050" endtime="20201112 09:44:35.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.049" endtime="20201112 09:44:35.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.045" endtime="20201112 09:44:35.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.679" endtime="20201112 09:44:35.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.679" endtime="20201112 09:44:35.071"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.080" endtime="20201112 09:44:35.095"></status>
</kw>
<msg timestamp="20201112 09:44:35.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.078" endtime="20201112 09:44:35.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.097" endtime="20201112 09:44:35.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.099" endtime="20201112 09:44:35.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.076" endtime="20201112 09:44:35.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.073" endtime="20201112 09:44:35.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.108" endtime="20201112 09:44:35.394"></status>
</kw>
<msg timestamp="20201112 09:44:35.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.107" endtime="20201112 09:44:35.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.398" endtime="20201112 09:44:35.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.407" endtime="20201112 09:44:35.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.104" endtime="20201112 09:44:35.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.103" endtime="20201112 09:44:35.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:35.413" level="INFO">${RESULT} = [{'time': 0.019897389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7361000000000052e-05, 'source_diff': 2.7361000000000052e-05}, {'time': 0.019927611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:35.410" endtime="20201112 09:44:35.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:35.427" level="INFO">${ACCURACY} = {'time': [0.019897389, 0.019927611, 0.019964472, 0.020001486, 0.020032597, 0.020062417, 0.020094431, 0.020128542, 0.020164375, 0.020200444, 0.020231458, 0.020266583, 0.020301458, 0.020338556, 0.020369...</msg>
<status status="PASS" starttime="20201112 09:44:35.414" endtime="20201112 09:44:35.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.431" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:44:35.430" endtime="20201112 09:44:35.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.434" level="INFO">VALUE: [2.7361000000000052e-05, 2.7069000000001092e-05, 2.7665999999999108e-05, 2.766699999999858e-05, 2.7971999999997638e-05, 2.7374999999999622e-05, 2.768099999999815e-05, 2.7070000000000566e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.7333000000000912e-05, 2.7374999999999622e-05, 2.7666000000002577e-05, 2.768100000000162e-05, 2.7374999999999622e-05, 2.770900000000076e-05, 2.7638999999999442e-05, 2.7056000000000996e-05, 2.7084000000000136e-05, 2.766700000000205e-05, 2.741699999999833e-05, 2.7070000000000566e-05, 2.7333000000000912e-05, 2.7374999999999622e-05, 2.7361999999999526e-05, 2.797300000000058e-05, 2.7332999999997443e-05, 2.7638999999999442e-05, 2.795900000000101e-05, 2.7388999999999192e-05, 2.7110999999999802e-05, 2.7084000000000136e-05, 2.7361000000000052e-05, 2.7054999999998053e-05, 2.7084000000000136e-05, 2.7374999999999622e-05, 2.7679999999998678e-05, 2.7347000000000482e-05, 2.768100000000162e-05, 2.768100000000162e-05, 2.768100000000162e-05, 2.7388999999999192e-05, 2.7736000000000427e-05, 2.7082999999997193e-05, 2.766699999999858e-05, 2.7361000000000052e-05, 2.7028000000001856e-05, 2.7374999999999622e-05, 2.7347999999999956e-05, 2.766699999999858e-05]</msg>
<status status="PASS" starttime="20201112 09:44:35.432" endtime="20201112 09:44:35.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.428" endtime="20201112 09:44:35.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.438" endtime="20201112 09:44:35.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:35.441" endtime="20201112 09:44:35.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.439" endtime="20201112 09:44:35.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.436" endtime="20201112 09:44:35.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.072" endtime="20201112 09:44:35.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.071" endtime="20201112 09:44:35.462"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.471" endtime="20201112 09:44:35.487"></status>
</kw>
<msg timestamp="20201112 09:44:35.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.469" endtime="20201112 09:44:35.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.488" endtime="20201112 09:44:35.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.491" endtime="20201112 09:44:35.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.466" endtime="20201112 09:44:35.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.464" endtime="20201112 09:44:35.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.500" endtime="20201112 09:44:35.787"></status>
</kw>
<msg timestamp="20201112 09:44:35.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.498" endtime="20201112 09:44:35.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.791" endtime="20201112 09:44:35.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.800" endtime="20201112 09:44:35.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.495" endtime="20201112 09:44:35.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.494" endtime="20201112 09:44:35.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:35.806" level="INFO">${RESULT} = [{'time': 0.020270486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8541999999999457e-05, 'source_diff': 2.8541999999999457e-05}, {'time': 0.020301597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:35.803" endtime="20201112 09:44:35.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:35.820" level="INFO">${ACCURACY} = {'time': [0.020270486, 0.020301597, 0.020337556, 0.020372611, 0.020406597, 0.020438542, 0.020471583, 0.020505639, 0.020541639, 0.020576653, 0.020612653, 0.020649736, 0.020684569, 0.020715639, 0.020747...</msg>
<status status="PASS" starttime="20201112 09:44:35.807" endtime="20201112 09:44:35.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.824" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:44:35.823" endtime="20201112 09:44:35.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.827" level="INFO">VALUE: [2.8541999999999457e-05, 2.790300000000273e-05, 2.8277999999999637e-05, 2.8568999999999123e-05, 2.8624999999997403e-05, 2.8861000000001552e-05, 2.8861000000001552e-05, 2.7957999999998068e-05, 2.8555999999999027e-05, 2.7972000000001107e-05, 2.8570000000002066e-05, 2.8846999999998513e-05, 2.8263000000000593e-05, 2.8570000000002066e-05, 2.8264000000000067e-05, 2.8540999999999983e-05, 2.8569999999998597e-05, 2.8334000000001386e-05, 2.8250000000000497e-05, 2.8555999999999027e-05, 2.7985999999997208e-05, 2.8597000000001732e-05, 2.8874999999997653e-05, 2.8264000000000067e-05, 2.8861999999997556e-05, 2.8860999999998083e-05, 2.8540999999999983e-05, 2.8291999999999207e-05, 2.8861000000001552e-05, 2.8541999999999457e-05, 2.795899999999754e-05, 2.7944000000001967e-05, 2.8611000000001302e-05, 2.8569000000002592e-05, 2.8916999999999832e-05, 2.8264000000000067e-05, 2.7972000000001107e-05, 2.8888999999997222e-05, 2.8236000000000927e-05, 2.8569000000002592e-05, 2.8541999999999457e-05, 2.8582999999998693e-05, 2.7958000000001537e-05, 2.8625000000000872e-05, 2.8264000000000067e-05, 2.8555999999999027e-05, 2.8554999999999553e-05, 2.8555999999999027e-05, 2.8264000000000067e-05, 2.795900000000101e-05]</msg>
<status status="PASS" starttime="20201112 09:44:35.825" endtime="20201112 09:44:35.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.821" endtime="20201112 09:44:35.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.831" endtime="20201112 09:44:35.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:35.834" endtime="20201112 09:44:35.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.832" endtime="20201112 09:44:35.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.829" endtime="20201112 09:44:35.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.463" endtime="20201112 09:44:35.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.462" endtime="20201112 09:44:35.855"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.864" endtime="20201112 09:44:35.880"></status>
</kw>
<msg timestamp="20201112 09:44:35.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.862" endtime="20201112 09:44:35.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.882" endtime="20201112 09:44:35.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.884" endtime="20201112 09:44:35.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.859" endtime="20201112 09:44:35.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.857" endtime="20201112 09:44:35.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.893" endtime="20201112 09:44:36.180"></status>
</kw>
<msg timestamp="20201112 09:44:36.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.892" endtime="20201112 09:44:36.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.184" endtime="20201112 09:44:36.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.192" endtime="20201112 09:44:36.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.889" endtime="20201112 09:44:36.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.887" endtime="20201112 09:44:36.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.199" level="INFO">${RESULT} = [{'time': 0.020548333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8860999999998083e-05, 'source_diff': 2.8860999999998083e-05}, {'time': 0.020587458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:36.196" endtime="20201112 09:44:36.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:36.213" level="INFO">${ACCURACY} = {'time': [0.020548333, 0.020587458, 0.020621569, 0.020654431, 0.020689431, 0.020721389, 0.020758333, 0.020795431, 0.020834514, 0.020866417, 0.020903486, 0.020940625, 0.020973361, 0.021006611, 0.021039...</msg>
<status status="PASS" starttime="20201112 09:44:36.200" endtime="20201112 09:44:36.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.217" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:44:36.216" endtime="20201112 09:44:36.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.220" level="INFO">VALUE: [2.8860999999998083e-05, 2.9457999999999568e-05, 2.9457999999999568e-05, 2.9153000000000512e-05, 2.9167000000000082e-05, 2.969499999999972e-05, 2.9750000000001997e-05, 2.9167000000000082e-05, 2.9749999999998528e-05, 2.945900000000251e-05, 2.9138999999997472e-05, 2.9457999999999568e-05, 2.8875000000001122e-05, 2.9111000000001802e-05, 2.9153000000000512e-05, 2.9471999999999138e-05, 2.9472000000002607e-05, 2.8847000000001982e-05, 2.9721999999999388e-05, 2.9124999999997903e-05, 2.8861000000001552e-05, 2.9750000000001997e-05, 2.8861000000001552e-05, 2.9152999999997042e-05, 2.9764000000001567e-05, 2.9471999999999138e-05, 2.9736000000002427e-05, 2.9749999999998528e-05, 2.9167000000000082e-05, 2.9153000000000512e-05, 2.9749999999998528e-05, 2.9485999999998708e-05, 2.9082999999999193e-05, 2.94309999999999e-05, 2.9138999999997472e-05, 2.9764000000001567e-05, 2.915199999999757e-05, 2.916599999999714e-05, 2.9416000000000858e-05, 2.8818999999999373e-05, 2.9457999999999568e-05, 2.9749999999998528e-05, 2.9166000000000608e-05, 2.8875000000001122e-05, 2.9707999999999818e-05, 2.8860999999998083e-05, 3.0041999999997487e-05, 2.8861000000001552e-05, 2.9457999999999568e-05, 2.944499999999947e-05]</msg>
<status status="PASS" starttime="20201112 09:44:36.219" endtime="20201112 09:44:36.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.214" endtime="20201112 09:44:36.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.224" endtime="20201112 09:44:36.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:36.227" endtime="20201112 09:44:36.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.225" endtime="20201112 09:44:36.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.222" endtime="20201112 09:44:36.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.856" endtime="20201112 09:44:36.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.855" endtime="20201112 09:44:36.248"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.257" endtime="20201112 09:44:36.274"></status>
</kw>
<msg timestamp="20201112 09:44:36.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.255" endtime="20201112 09:44:36.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.275" endtime="20201112 09:44:36.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.278" endtime="20201112 09:44:36.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.253" endtime="20201112 09:44:36.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.250" endtime="20201112 09:44:36.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.287" endtime="20201112 09:44:36.574"></status>
</kw>
<msg timestamp="20201112 09:44:36.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020804458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020834806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.285" endtime="20201112 09:44:36.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020804458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020834806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.578" endtime="20201112 09:44:36.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.587" endtime="20201112 09:44:36.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.283" endtime="20201112 09:44:36.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.281" endtime="20201112 09:44:36.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.593" level="INFO">${RESULT} = [{'time': 0.020834806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0347999999999486e-05, 'source_diff': 3.0347999999999486e-05}, {'time': 0.020874931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:36.590" endtime="20201112 09:44:36.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:36.608" level="INFO">${ACCURACY} = {'time': [0.020834806, 0.020874931, 0.020914792, 0.020954819, 0.020993736, 0.021026958, 0.021061889, 0.02109475, 0.021127903, 0.02116075, 0.021197917, 0.021232875, 0.021267764, 0.021301792, 0.02133491...</msg>
<status status="PASS" starttime="20201112 09:44:36.594" endtime="20201112 09:44:36.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.612" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:44:36.611" endtime="20201112 09:44:36.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.615" level="INFO">VALUE: [3.0347999999999486e-05, 3.094500000000097e-05, 3.068100000000115e-05, 3.090199999999932e-05, 3.0054999999997584e-05, 3.094399999999803e-05, 3.0347000000000013e-05, 3.0347000000000013e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.0056000000000527e-05, 3.0097999999999236e-05, 3.095899999999707e-05, 3.070800000000082e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0347000000000013e-05, 3.095800000000107e-05, 3.062500000000287e-05, 3.094399999999803e-05, 3.070800000000082e-05, 3.058300000000069e-05, 3.0361999999999056e-05, 2.9985999999999208e-05, 3.0347000000000013e-05, 3.0013999999998348e-05, 3.0347000000000013e-05, 3.09440000000015e-05, 3.091699999999836e-05, 3.0042000000000957e-05, 3.067999999999821e-05, 3.0347000000000013e-05, 3.06249999999994e-05, 3.094500000000097e-05, 3.0347999999999486e-05, 3.0042000000000957e-05, 3.094500000000097e-05, 3.06379999999995e-05, 3.06379999999995e-05, 3.0055000000001053e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.0042000000000957e-05, 3.0374999999999153e-05, 3.0347000000000013e-05, 3.0083000000000193e-05]</msg>
<status status="PASS" starttime="20201112 09:44:36.614" endtime="20201112 09:44:36.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.609" endtime="20201112 09:44:36.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.619" endtime="20201112 09:44:36.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:36.622" endtime="20201112 09:44:36.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.621" endtime="20201112 09:44:36.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.617" endtime="20201112 09:44:36.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.249" endtime="20201112 09:44:36.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.248" endtime="20201112 09:44:36.643"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.652" endtime="20201112 09:44:36.668"></status>
</kw>
<msg timestamp="20201112 09:44:36.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.650" endtime="20201112 09:44:36.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.669" endtime="20201112 09:44:36.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.671" endtime="20201112 09:44:36.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.648" endtime="20201112 09:44:36.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.645" endtime="20201112 09:44:36.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.681" endtime="20201112 09:44:36.967"></status>
</kw>
<msg timestamp="20201112 09:44:36.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.679" endtime="20201112 09:44:36.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.971" endtime="20201112 09:44:36.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.979" endtime="20201112 09:44:36.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.676" endtime="20201112 09:44:36.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.675" endtime="20201112 09:44:36.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.986" level="INFO">${RESULT} = [{'time': 0.019982806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.09449999999975e-05, 'source_diff': 3.09449999999975e-05}, {'time': 0.020021917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:36.983" endtime="20201112 09:44:36.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:36.999" level="INFO">${ACCURACY} = {'time': [0.019982806, 0.020021917, 0.020057944, 0.020097056, 0.020138056, 0.020173944, 0.020213944, 0.020253111, 0.020291917, 0.020332931, 0.020373083, 0.020411958, 0.020452139, 0.020488931, 0.020526...</msg>
<status status="PASS" starttime="20201112 09:44:36.987" endtime="20201112 09:44:37.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.004" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:44:37.003" endtime="20201112 09:44:37.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.007" level="INFO">VALUE: [3.09449999999975e-05, 3.183400000000142e-05, 3.095800000000107e-05, 3.184799999999752e-05, 3.190299999999979e-05, 3.1540999999999514e-05, 3.13050000000023e-05, 3.151399999999985e-05, 3.184800000000099e-05, 3.161199999999684e-05, 3.158300000000169e-05, 3.125000000000003e-05, 3.123600000000046e-05, 3.118099999999818e-05, 3.1540999999999514e-05, 3.154199999999899e-05, 3.125000000000003e-05, 3.154200000000246e-05, 3.152799999999942e-05, 3.1804999999999334e-05, 3.095900000000054e-05, 3.184800000000099e-05, 3.1818999999998904e-05, 3.097300000000011e-05, 3.1540999999999514e-05, 3.1540999999999514e-05, 3.1554999999999084e-05, 3.094399999999803e-05, 3.095899999999707e-05, 3.151399999999985e-05, 3.187500000000065e-05, 3.1832999999998474e-05, 3.186100000000108e-05, 3.187500000000065e-05, 3.12639999999996e-05, 3.122300000000036e-05, 3.125000000000003e-05, 3.186100000000108e-05, 3.1846999999998044e-05, 3.183300000000194e-05, 3.1832999999998474e-05, 3.094500000000097e-05, 3.120799999999785e-05, 3.125000000000003e-05, 3.1832999999998474e-05, 3.1554999999999084e-05, 3.154199999999899e-05, 3.155500000000255e-05, 3.154200000000246e-05, 3.125000000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:44:37.005" endtime="20201112 09:44:37.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.000" endtime="20201112 09:44:37.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.010" endtime="20201112 09:44:37.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.014" endtime="20201112 09:44:37.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.012" endtime="20201112 09:44:37.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.009" endtime="20201112 09:44:37.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.644" endtime="20201112 09:44:37.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.643" endtime="20201112 09:44:37.035"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.043" endtime="20201112 09:44:37.060"></status>
</kw>
<msg timestamp="20201112 09:44:37.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.042" endtime="20201112 09:44:37.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.062" endtime="20201112 09:44:37.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.064" endtime="20201112 09:44:37.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.039" endtime="20201112 09:44:37.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.037" endtime="20201112 09:44:37.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.073" endtime="20201112 09:44:37.361"></status>
</kw>
<msg timestamp="20201112 09:44:37.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.072" endtime="20201112 09:44:37.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.365" endtime="20201112 09:44:37.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.374" endtime="20201112 09:44:37.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.069" endtime="20201112 09:44:37.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.067" endtime="20201112 09:44:37.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.380" level="INFO">${RESULT} = [{'time': 0.019892278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.243099999999943e-05, 'source_diff': 3.243099999999943e-05}, {'time': 0.019931181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:37.377" endtime="20201112 09:44:37.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:37.394" level="INFO">${ACCURACY} = {'time': [0.019892278, 0.019931181, 0.019970167, 0.020009097, 0.020047194, 0.020088194, 0.020129264, 0.020170222, 0.020212361, 0.020247375, 0.020286181, 0.020323264, 0.020359361, 0.020396264, 0.020433...</msg>
<status status="PASS" starttime="20201112 09:44:37.381" endtime="20201112 09:44:37.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.398" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:44:37.397" endtime="20201112 09:44:37.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.401" level="INFO">VALUE: [3.243099999999943e-05, 3.2374999999997683e-05, 3.243099999999943e-05, 3.242999999999996e-05, 3.273600000000196e-05, 3.21250000000009e-05, 3.241699999999986e-05, 3.268000000000021e-05, 3.270800000000282e-05, 3.269399999999978e-05, 3.266700000000011e-05, 3.216699999999961e-05, 3.244399999999953e-05, 3.273600000000196e-05, 3.272299999999839e-05, 3.2110999999997863e-05, 3.24310000000029e-05, 3.215300000000004e-05, 3.272199999999892e-05, 3.216699999999961e-05, 3.244500000000247e-05, 3.242999999999996e-05, 3.212499999999743e-05, 3.272199999999892e-05, 3.1862000000000557e-05, 3.215300000000004e-05, 3.244500000000247e-05, 3.27640000000011e-05, 3.3027000000001444e-05, 3.21250000000009e-05, 3.242999999999996e-05, 3.238900000000072e-05, 3.179199999999924e-05, 3.2444999999999e-05, 3.270799999999935e-05, 3.3055000000000584e-05, 3.243099999999943e-05, 3.273600000000196e-05, 3.242999999999996e-05, 3.304200000000049e-05, 3.183300000000194e-05, 3.273599999999849e-05, 3.2110999999997863e-05, 3.215300000000004e-05, 3.273599999999849e-05, 3.21250000000009e-05, 3.250000000000128e-05, 3.24310000000029e-05, 3.184800000000099e-05, 3.215300000000004e-05]</msg>
<status status="PASS" starttime="20201112 09:44:37.400" endtime="20201112 09:44:37.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.395" endtime="20201112 09:44:37.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.405" endtime="20201112 09:44:37.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.408" endtime="20201112 09:44:37.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.407" endtime="20201112 09:44:37.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.403" endtime="20201112 09:44:37.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.035" endtime="20201112 09:44:37.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.035" endtime="20201112 09:44:37.429"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.438" endtime="20201112 09:44:37.453"></status>
</kw>
<msg timestamp="20201112 09:44:37.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.436" endtime="20201112 09:44:37.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.455" endtime="20201112 09:44:37.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.457" endtime="20201112 09:44:37.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.434" endtime="20201112 09:44:37.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.432" endtime="20201112 09:44:37.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.466" endtime="20201112 09:44:37.752"></status>
</kw>
<msg timestamp="20201112 09:44:37.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.465" endtime="20201112 09:44:37.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.757" endtime="20201112 09:44:37.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.766" endtime="20201112 09:44:37.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.462" endtime="20201112 09:44:37.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.461" endtime="20201112 09:44:37.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.772" level="INFO">${RESULT} = [{'time': 0.020038069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3304999999997364e-05, 'source_diff': 3.3304999999997364e-05}, {'time': 0.020075153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:37.769" endtime="20201112 09:44:37.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:37.786" level="INFO">${ACCURACY} = {'time': [0.020038069, 0.020075153, 0.020112194, 0.020150167, 0.020192083, 0.020233208, 0.020270278, 0.020308194, 0.020346236, 0.020387222, 0.020429194, 0.020472167, 0.020508306, 0.020550264, 0.020590...</msg>
<status status="PASS" starttime="20201112 09:44:37.773" endtime="20201112 09:44:37.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.790" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:44:37.789" endtime="20201112 09:44:37.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.793" level="INFO">VALUE: [3.3304999999997364e-05, 3.3596999999999794e-05, 3.3276999999998225e-05, 3.331999999999988e-05, 3.3041000000001014e-05, 3.3583000000000224e-05, 3.390299999999832e-05, 3.3027000000001444e-05, 3.391700000000136e-05, 3.390299999999832e-05, 3.36250000000024e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.3332999999999974e-05, 3.338900000000172e-05, 3.3026999999997975e-05, 3.36250000000024e-05, 3.3319000000000404e-05, 3.363799999999903e-05, 3.3318999999996934e-05, 3.3026999999997975e-05, 3.3624999999998934e-05, 3.333399999999945e-05, 3.3374999999998683e-05, 3.3638999999998503e-05, 3.393100000000093e-05, 3.3318999999996934e-05, 3.302800000000092e-05, 3.3319000000000404e-05, 3.3346999999999544e-05, 3.333399999999945e-05, 3.3332999999999974e-05, 3.304200000000049e-05, 3.301400000000135e-05, 3.3026999999997975e-05, 3.3610999999999364e-05, 3.3305000000000834e-05, 3.302800000000092e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.302800000000092e-05, 3.3610999999999364e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.3319000000000404e-05, 3.302800000000092e-05, 3.36250000000024e-05, 3.297299999999864e-05, 3.3346999999999544e-05, 3.333399999999945e-05]</msg>
<status status="PASS" starttime="20201112 09:44:37.791" endtime="20201112 09:44:37.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.787" endtime="20201112 09:44:37.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.796" endtime="20201112 09:44:37.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.800" endtime="20201112 09:44:37.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.798" endtime="20201112 09:44:37.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.795" endtime="20201112 09:44:37.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.430" endtime="20201112 09:44:37.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.429" endtime="20201112 09:44:37.821"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.830" endtime="20201112 09:44:37.846"></status>
</kw>
<msg timestamp="20201112 09:44:37.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.828" endtime="20201112 09:44:37.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.848" endtime="20201112 09:44:37.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.850" endtime="20201112 09:44:37.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.825" endtime="20201112 09:44:37.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.823" endtime="20201112 09:44:37.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.859" endtime="20201112 09:44:38.147"></status>
</kw>
<msg timestamp="20201112 09:44:38.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.858" endtime="20201112 09:44:38.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.151" endtime="20201112 09:44:38.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.159" endtime="20201112 09:44:38.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.855" endtime="20201112 09:44:38.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.854" endtime="20201112 09:44:38.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.166" level="INFO">${RESULT} = [{'time': 0.020442542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2416999999999455e-05, 'source_diff': 4.2416999999999455e-05}, {'time': 0.020492556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:38.163" endtime="20201112 09:44:38.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:38.182" level="INFO">${ACCURACY} = {'time': [0.020442542, 0.020492556, 0.020540542, 0.020591542, 0.020643569, 0.020691569, 0.020743569, 0.020788569, 0.020836569, 0.020886597, 0.020933583, 0.020983611, 0.021028597, 0.021080597, 0.021131...</msg>
<status status="PASS" starttime="20201112 09:44:38.167" endtime="20201112 09:44:38.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.187" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:44:38.185" endtime="20201112 09:44:38.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.189" level="INFO">VALUE: [4.2416999999999455e-05, 4.251399999999697e-05, 4.2638999999997096e-05, 4.331999999999947e-05, 4.315200000000116e-05, 4.272199999999851e-05, 4.2596999999998386e-05, 4.272199999999851e-05, 4.269399999999937e-05, 4.275000000000112e-05, 4.265199999999719e-05, 4.251400000000044e-05, 4.24860000000013e-05, 4.277800000000026e-05, 4.3333000000003036e-05, 4.2804999999999926e-05, 4.2680999999999275e-05, 4.2875000000001245e-05, 4.2610999999997956e-05, 4.2388999999996846e-05, 4.258399999999829e-05, 4.327800000000076e-05, 4.2917000000003425e-05, 4.2611000000001426e-05, 4.2459000000001634e-05, 4.2653000000000135e-05, 4.3124999999998026e-05, 4.265200000000066e-05, 4.2541000000000107e-05, 4.3096999999998886e-05, 4.295799999999919e-05, 4.2596999999998386e-05, 4.2568999999999246e-05, 4.266599999999676e-05, 4.2610999999997956e-05, 4.3194999999999345e-05, 4.251400000000044e-05, 4.329200000000033e-05, 4.2624999999997526e-05, 4.320799999999944e-05, 4.2653000000000135e-05, 4.254199999999958e-05, 4.2597000000001856e-05, 4.2375000000000745e-05, 4.3153000000000635e-05, 4.283400000000201e-05, 4.309800000000183e-05, 4.2875000000001245e-05, 4.269399999999937e-05, 4.329099999999739e-05]</msg>
<status status="PASS" starttime="20201112 09:44:38.188" endtime="20201112 09:44:38.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.183" endtime="20201112 09:44:38.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.193" endtime="20201112 09:44:38.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:38.196" endtime="20201112 09:44:38.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.195" endtime="20201112 09:44:38.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.191" endtime="20201112 09:44:38.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.822" endtime="20201112 09:44:38.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.821" endtime="20201112 09:44:38.217"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.226" endtime="20201112 09:44:38.241"></status>
</kw>
<msg timestamp="20201112 09:44:38.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.224" endtime="20201112 09:44:38.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.242" endtime="20201112 09:44:38.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.245" endtime="20201112 09:44:38.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.222" endtime="20201112 09:44:38.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.220" endtime="20201112 09:44:38.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.254" endtime="20201112 09:44:38.540"></status>
</kw>
<msg timestamp="20201112 09:44:38.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:38.252" endtime="20201112 09:44:38.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:38.544" endtime="20201112 09:44:38.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.553" endtime="20201112 09:44:38.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.250" endtime="20201112 09:44:38.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.248" endtime="20201112 09:44:38.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.560" level="INFO">${RESULT} = [{'time': 0.0199495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.398599999999933e-05, 'source_diff': 4.398599999999933e-05}, {'time': 0.020000528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:38.556" endtime="20201112 09:44:38.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:38.573" level="INFO">${ACCURACY} = {'time': [0.0199495, 0.020000528, 0.020049514, 0.020098528, 0.020145528, 0.020194583, 0.020244542, 0.020296556, 0.020343569, 0.020395569, 0.020444597, 0.020492569, 0.020540583, 0.020587597, 0.02063558...</msg>
<status status="PASS" starttime="20201112 09:44:38.560" endtime="20201112 09:44:38.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.577" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:44:38.576" endtime="20201112 09:44:38.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.580" level="INFO">VALUE: [4.398599999999933e-05, 4.381999999999997e-05, 4.3945000000000095e-05, 4.4110999999999456e-05, 4.3846999999999636e-05, 4.3860999999999206e-05, 4.400000000000237e-05, 4.386199999999868e-05, 4.3610999999998956e-05, 4.355499999999721e-05, 4.348599999999883e-05, 4.3833000000000066e-05, 4.343000000000055e-05, 4.427799999999829e-05, 4.4138999999998596e-05, 4.401400000000194e-05, 4.4153000000001635e-05, 4.3555000000000677e-05, 4.4360999999999706e-05, 4.3667000000000705e-05, 4.4181000000000775e-05, 4.3444999999999595e-05, 4.4167000000001205e-05, 4.407000000000022e-05, 4.3374999999998276e-05, 4.430599999999743e-05, 4.429199999999786e-05, 4.355600000000015e-05, 4.3361000000002176e-05, 4.3473000000002204e-05, 4.341600000000098e-05, 4.3931000000000525e-05, 4.366600000000123e-05, 4.3875000000002246e-05, 4.3332999999999566e-05, 4.34999999999984e-05, 4.391600000000148e-05, 4.3888999999998346e-05, 4.379199999999736e-05, 4.3624999999998526e-05, 4.3833000000000066e-05, 4.372199999999951e-05, 4.3639000000001565e-05, 4.3931000000000525e-05, 4.3875000000002246e-05, 4.3444999999999595e-05, 4.3582999999999816e-05, 4.377800000000126e-05, 4.3459000000002634e-05, 4.373599999999908e-05]</msg>
<status status="PASS" starttime="20201112 09:44:38.578" endtime="20201112 09:44:38.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.574" endtime="20201112 09:44:38.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.583" endtime="20201112 09:44:38.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:38.587" endtime="20201112 09:44:38.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.585" endtime="20201112 09:44:38.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.582" endtime="20201112 09:44:38.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.218" endtime="20201112 09:44:38.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.218" endtime="20201112 09:44:38.608"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.617" endtime="20201112 09:44:38.634"></status>
</kw>
<msg timestamp="20201112 09:44:38.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.615" endtime="20201112 09:44:38.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.635" endtime="20201112 09:44:38.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.638" endtime="20201112 09:44:38.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.613" endtime="20201112 09:44:38.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.610" endtime="20201112 09:44:38.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.647" endtime="20201112 09:44:38.933"></status>
</kw>
<msg timestamp="20201112 09:44:38.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020654625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.645" endtime="20201112 09:44:38.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020654625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.937" endtime="20201112 09:44:38.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.946" endtime="20201112 09:44:38.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.643" endtime="20201112 09:44:38.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.641" endtime="20201112 09:44:38.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.952" level="INFO">${RESULT} = [{'time': 0.020654625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.020704681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:38.949" endtime="20201112 09:44:38.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:38.966" level="INFO">${ACCURACY} = {'time': [0.020654625, 0.020704681, 0.020758625, 0.020807625, 0.020854681, 0.020903639, 0.020955639, 0.021008653, 0.021058667, 0.02111375, 0.021163667, 0.021216667, 0.021268681, 0.021320681, 0.0213697...</msg>
<status status="PASS" starttime="20201112 09:44:38.953" endtime="20201112 09:44:38.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.970" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:44:38.969" endtime="20201112 09:44:38.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.973" level="INFO">VALUE: [4.4610999999999956e-05, 4.5416999999998986e-05, 4.529199999999886e-05, 4.4417000000001455e-05, 4.454200000000158e-05, 4.5139000000003066e-05, 4.5153000000002635e-05, 4.456999999999725e-05, 4.4445000000000595e-05, 4.544400000000212e-05, 4.4459000000000165e-05, 4.4610999999999956e-05, 4.4973000000000235e-05, 4.4722999999999985e-05, 4.4833000000001066e-05, 4.490199999999944e-05, 4.4624999999999526e-05, 4.4583000000000816e-05, 4.472199999999704e-05, 4.448599999999983e-05, 4.454100000000211e-05, 4.470799999999747e-05, 4.4666999999998236e-05, 4.4916999999998486e-05, 4.4374999999999276e-05, 4.5139000000003066e-05, 4.455600000000115e-05, 4.448599999999983e-05, 4.4597000000000386e-05, 4.452800000000201e-05, 4.532000000000147e-05, 4.49999999999999e-05, 4.4459000000000165e-05, 4.5153000000002635e-05, 4.53060000000019e-05, 4.522200000000101e-05, 4.4888999999999346e-05, 4.477800000000226e-05, 4.480499999999846e-05, 4.504099999999914e-05, 4.523599999999711e-05, 4.502799999999904e-05, 4.4652999999998666e-05, 4.5167000000002205e-05, 4.502800000000251e-05, 4.5069000000001747e-05, 4.5138999999999596e-05, 4.48060000000014e-05, 4.469400000000137e-05, 4.529199999999886e-05]</msg>
<status status="PASS" starttime="20201112 09:44:38.971" endtime="20201112 09:44:38.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.967" endtime="20201112 09:44:38.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.976" endtime="20201112 09:44:38.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:38.980" endtime="20201112 09:44:38.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.978" endtime="20201112 09:44:39.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.975" endtime="20201112 09:44:39.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.609" endtime="20201112 09:44:39.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.608" endtime="20201112 09:44:39.001"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.010" endtime="20201112 09:44:39.027"></status>
</kw>
<msg timestamp="20201112 09:44:39.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.008" endtime="20201112 09:44:39.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.028" endtime="20201112 09:44:39.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.030" endtime="20201112 09:44:39.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.006" endtime="20201112 09:44:39.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.003" endtime="20201112 09:44:39.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.040" endtime="20201112 09:44:39.326"></status>
</kw>
<msg timestamp="20201112 09:44:39.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.038" endtime="20201112 09:44:39.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.330" endtime="20201112 09:44:39.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.338" endtime="20201112 09:44:39.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.035" endtime="20201112 09:44:39.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.034" endtime="20201112 09:44:39.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.345" level="INFO">${RESULT} = [{'time': 0.020163597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5402999999999416e-05, 'source_diff': 4.5402999999999416e-05}, {'time': 0.020211653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:39.342" endtime="20201112 09:44:39.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:39.359" level="INFO">${ACCURACY} = {'time': [0.020163597, 0.020211653, 0.020260625, 0.020310611, 0.020361625, 0.020410625, 0.020463625, 0.020513639, 0.020561708, 0.020613667, 0.020665653, 0.020720681, 0.020774681, 0.020824667, 0.020877...</msg>
<status status="PASS" starttime="20201112 09:44:39.346" endtime="20201112 09:44:39.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.363" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:44:39.362" endtime="20201112 09:44:39.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.365" level="INFO">VALUE: [4.5402999999999416e-05, 4.577799999999979e-05, 4.5388999999999846e-05, 4.5875000000000776e-05, 4.5875000000000776e-05, 4.623600000000158e-05, 4.577799999999979e-05, 4.5889000000000346e-05, 4.554100000000311e-05, 4.6166999999999736e-05, 4.5444999999998126e-05, 4.58060000000024e-05, 4.584800000000111e-05, 4.63060000000029e-05, 4.555599999999868e-05, 4.60000000000009e-05, 4.5875000000000776e-05, 4.573599999999761e-05, 4.5861000000001206e-05, 4.554099999999964e-05, 4.63329999999991e-05, 4.636099999999824e-05, 4.5875000000000776e-05, 4.5652999999999666e-05, 4.549999999999693e-05, 4.561099999999749e-05, 4.6180999999999306e-05, 4.570799999999847e-05, 4.5917000000002955e-05, 4.5652999999999666e-05, 4.5611000000000956e-05, 4.5416999999998986e-05, 4.5916999999999486e-05, 4.584799999999764e-05, 4.561200000000043e-05, 4.576400000000022e-05, 4.5944999999998626e-05, 4.6125000000001026e-05, 4.569400000000237e-05, 4.581899999999903e-05, 4.631899999999953e-05, 4.637499999999781e-05, 4.577799999999979e-05, 4.584699999999817e-05, 4.63329999999991e-05, 4.5569000000002247e-05, 4.632000000000247e-05, 4.6111000000001456e-05, 4.612499999999756e-05, 4.570799999999847e-05]</msg>
<status status="PASS" starttime="20201112 09:44:39.364" endtime="20201112 09:44:39.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.359" endtime="20201112 09:44:39.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.369" endtime="20201112 09:44:39.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:39.373" endtime="20201112 09:44:39.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.371" endtime="20201112 09:44:39.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.367" endtime="20201112 09:44:39.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.002" endtime="20201112 09:44:39.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.001" endtime="20201112 09:44:39.394"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.402" endtime="20201112 09:44:39.420"></status>
</kw>
<msg timestamp="20201112 09:44:39.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.401" endtime="20201112 09:44:39.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.421" endtime="20201112 09:44:39.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.424" endtime="20201112 09:44:39.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.398" endtime="20201112 09:44:39.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.396" endtime="20201112 09:44:39.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.433" endtime="20201112 09:44:39.719"></status>
</kw>
<msg timestamp="20201112 09:44:39.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019868681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.431" endtime="20201112 09:44:39.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019868681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.723" endtime="20201112 09:44:39.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.731" endtime="20201112 09:44:39.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.428" endtime="20201112 09:44:39.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.427" endtime="20201112 09:44:39.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.738" level="INFO">${RESULT} = [{'time': 0.019915153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.647200000000226e-05, 'source_diff': 4.647200000000226e-05}, {'time': 0.019966139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:39.735" endtime="20201112 09:44:39.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:39.753" level="INFO">${ACCURACY} = {'time': [0.019915153, 0.019966139, 0.020015139, 0.020067139, 0.020117153, 0.020167153, 0.020216167, 0.020271167, 0.020325181, 0.020378181, 0.020430181, 0.020479194, 0.020535222, 0.020584222, 0.020637...</msg>
<status status="PASS" starttime="20201112 09:44:39.739" endtime="20201112 09:44:39.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.757" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:44:39.756" endtime="20201112 09:44:39.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.760" level="INFO">VALUE: [4.647200000000226e-05, 4.706999999999975e-05, 4.679200000000036e-05, 4.6416999999999986e-05, 4.6319999999999e-05, 4.677800000000079e-05, 4.65000000000014e-05, 4.683399999999907e-05, 4.727800000000129e-05, 4.6680999999999806e-05, 4.638899999999738e-05, 4.656899999999978e-05, 4.644399999999965e-05, 4.680500000000046e-05, 4.720799999999997e-05, 4.722199999999954e-05, 4.679100000000089e-05, 4.68199999999995e-05, 4.6653000000000666e-05, 4.655500000000021e-05, 4.659699999999892e-05, 4.680599999999993e-05, 4.6625000000001526e-05, 4.680599999999993e-05, 4.655600000000315e-05, 4.722199999999954e-05, 4.7153000000001166e-05, 4.677799999999732e-05, 4.724999999999868e-05, 4.7403000000001416e-05, 4.727799999999782e-05, 4.731900000000053e-05, 4.677699999999785e-05, 4.6875000000001776e-05, 4.643000000000008e-05, 4.658299999999935e-05, 4.655500000000021e-05, 4.7389000000001846e-05, 4.712499999999856e-05, 4.6694999999999376e-05, 4.662499999999806e-05, 4.706900000000028e-05, 4.6680999999999806e-05, 4.6931000000000056e-05, 4.6653000000000666e-05, 4.677800000000079e-05, 4.6403000000000416e-05, 4.662499999999806e-05, 4.6708999999998946e-05, 4.727800000000129e-05]</msg>
<status status="PASS" starttime="20201112 09:44:39.758" endtime="20201112 09:44:39.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.754" endtime="20201112 09:44:39.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.763" endtime="20201112 09:44:39.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:39.767" endtime="20201112 09:44:39.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.765" endtime="20201112 09:44:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.762" endtime="20201112 09:44:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.395" endtime="20201112 09:44:39.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.394" endtime="20201112 09:44:39.788"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.796" endtime="20201112 09:44:39.813"></status>
</kw>
<msg timestamp="20201112 09:44:39.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.795" endtime="20201112 09:44:39.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.814" endtime="20201112 09:44:39.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.817" endtime="20201112 09:44:39.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.792" endtime="20201112 09:44:39.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.790" endtime="20201112 09:44:39.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.826" endtime="20201112 09:44:40.112"></status>
</kw>
<msg timestamp="20201112 09:44:40.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019940625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.824" endtime="20201112 09:44:40.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019940625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.116" endtime="20201112 09:44:40.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.124" endtime="20201112 09:44:40.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.821" endtime="20201112 09:44:40.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.820" endtime="20201112 09:44:40.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:40.131" level="INFO">${RESULT} = [{'time': 0.019988278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7653000000001666e-05, 'source_diff': 4.7653000000001666e-05}, {'time': 0.020039278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:40.128" endtime="20201112 09:44:40.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:40.144" level="INFO">${ACCURACY} = {'time': [0.019988278, 0.020039278, 0.020095292, 0.020150292, 0.020204292, 0.020261306, 0.020313306, 0.020369333, 0.020424361, 0.020480319, 0.020533333, 0.020589333, 0.020641403, 0.020695375, 0.020748...</msg>
<status status="PASS" starttime="20201112 09:44:40.132" endtime="20201112 09:44:40.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.149" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:44:40.148" endtime="20201112 09:44:40.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.151" level="INFO">VALUE: [4.7653000000001666e-05, 4.758399999999982e-05, 4.786099999999974e-05, 4.804200000000161e-05, 4.81529999999987e-05, 4.807000000000075e-05, 4.787499999999931e-05, 4.834700000000067e-05, 4.799999999999943e-05, 4.824999999999968e-05, 4.834700000000067e-05, 4.801400000000247e-05, 4.76529999999982e-05, 4.752799999999807e-05, 4.763899999999863e-05, 4.737499999999881e-05, 4.797200000000029e-05, 4.805599999999771e-05, 4.779200000000136e-05, 4.7653000000001666e-05, 4.748600000000283e-05, 4.757000000000025e-05, 4.7931000000001056e-05, 4.786099999999974e-05, 4.754199999999764e-05, 4.7653000000001666e-05, 4.786199999999921e-05, 4.743000000000108e-05, 4.741599999999804e-05, 4.740199999999847e-05, 4.75139999999985e-05, 4.80269999999991e-05, 4.76940000000009e-05, 4.809700000000042e-05, 4.777799999999832e-05, 4.78339999999966e-05, 4.806900000000128e-05, 4.780499999999799e-05, 4.8320000000001e-05, 4.768000000000133e-05, 4.808300000000085e-05, 4.807000000000075e-05, 4.748600000000283e-05, 4.734699999999967e-05, 4.833400000000057e-05, 4.763899999999863e-05, 4.830600000000143e-05, 4.780599999999746e-05, 4.81940000000014e-05, 4.754099999999817e-05]</msg>
<status status="PASS" starttime="20201112 09:44:40.150" endtime="20201112 09:44:40.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.145" endtime="20201112 09:44:40.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.155" endtime="20201112 09:44:40.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:40.159" endtime="20201112 09:44:40.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.157" endtime="20201112 09:44:40.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.153" endtime="20201112 09:44:40.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.789" endtime="20201112 09:44:40.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.788" endtime="20201112 09:44:40.180"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.188" endtime="20201112 09:44:40.206"></status>
</kw>
<msg timestamp="20201112 09:44:40.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.187" endtime="20201112 09:44:40.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.207" endtime="20201112 09:44:40.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.210" endtime="20201112 09:44:40.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.184" endtime="20201112 09:44:40.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.182" endtime="20201112 09:44:40.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.219" endtime="20201112 09:44:40.506"></status>
</kw>
<msg timestamp="20201112 09:44:40.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.218" endtime="20201112 09:44:40.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.510" endtime="20201112 09:44:40.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.519" endtime="20201112 09:44:40.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.215" endtime="20201112 09:44:40.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.213" endtime="20201112 09:44:40.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:40.525" level="INFO">${RESULT} = [{'time': 0.019980403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.876399999999975e-05, 'source_diff': 4.876399999999975e-05}, {'time': 0.020038389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:40.522" endtime="20201112 09:44:40.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:40.538" level="INFO">${ACCURACY} = {'time': [0.019980403, 0.020038389, 0.020090417, 0.020147403, 0.020204444, 0.020258417, 0.020316417, 0.020370431, 0.020426431, 0.020484444, 0.020537458, 0.020594458, 0.020648458, 0.020699472, 0.020758...</msg>
<status status="PASS" starttime="20201112 09:44:40.526" endtime="20201112 09:44:40.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.543" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:44:40.542" endtime="20201112 09:44:40.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.545" level="INFO">VALUE: [4.876399999999975e-05, 4.905599999999871e-05, 4.927799999999982e-05, 4.898600000000086e-05, 4.936099999999777e-05, 4.934800000000114e-05, 4.836100000000024e-05, 4.8945000000001626e-05, 4.8486999999999836e-05, 4.890199999999997e-05, 4.930500000000296e-05, 4.837499999999981e-05, 4.918000000000283e-05, 4.847200000000079e-05, 4.934700000000167e-05, 4.870800000000147e-05, 4.923600000000111e-05, 4.8445000000001126e-05, 4.859700000000092e-05, 4.855600000000168e-05, 4.926400000000025e-05, 4.904200000000261e-05, 4.847200000000079e-05, 4.837499999999981e-05, 4.879200000000236e-05, 4.880499999999899e-05, 4.844400000000165e-05, 4.8667000000002236e-05, 4.8959000000001196e-05, 4.859700000000092e-05, 4.872200000000104e-05, 4.856899999999831e-05, 4.911100000000099e-05, 4.911100000000099e-05, 4.849999999999993e-05, 4.933299999999863e-05, 4.929199999999939e-05, 4.859700000000092e-05, 4.859700000000092e-05, 4.930599999999896e-05, 4.854099999999917e-05, 4.841699999999852e-05, 4.884800000000064e-05, 4.8903000000002916e-05, 4.873600000000061e-05, 4.849999999999993e-05, 4.8389000000002846e-05, 4.900000000000043e-05, 4.875000000000018e-05, 4.884700000000117e-05]</msg>
<status status="PASS" starttime="20201112 09:44:40.544" endtime="20201112 09:44:40.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.539" endtime="20201112 09:44:40.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.549" endtime="20201112 09:44:40.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:40.552" endtime="20201112 09:44:40.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.551" endtime="20201112 09:44:40.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.547" endtime="20201112 09:44:40.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.181" endtime="20201112 09:44:40.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.180" endtime="20201112 09:44:40.573"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.582" endtime="20201112 09:44:40.599"></status>
</kw>
<msg timestamp="20201112 09:44:40.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.580" endtime="20201112 09:44:40.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.601" endtime="20201112 09:44:40.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.603" endtime="20201112 09:44:40.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.578" endtime="20201112 09:44:40.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.576" endtime="20201112 09:44:40.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.612" endtime="20201112 09:44:40.900"></status>
</kw>
<msg timestamp="20201112 09:44:40.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020494958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.611" endtime="20201112 09:44:40.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020494958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.904" endtime="20201112 09:44:40.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.913" endtime="20201112 09:44:40.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.608" endtime="20201112 09:44:40.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.607" endtime="20201112 09:44:40.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:40.920" level="INFO">${RESULT} = [{'time': 0.020494958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.022199999999907e-05, 'source_diff': 5.022199999999907e-05}, {'time': 0.020548986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:40.916" endtime="20201112 09:44:40.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:40.933" level="INFO">${ACCURACY} = {'time': [0.020494958, 0.020548986, 0.020602972, 0.020656986, 0.020711, 0.020764, 0.020821, 0.020874, 0.020929028, 0.020982014, 0.021040028, 0.021098028, 0.021157042, 0.021213042, 0.021266042, 0.02132...</msg>
<status status="PASS" starttime="20201112 09:44:40.921" endtime="20201112 09:44:40.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.937" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:44:40.936" endtime="20201112 09:44:40.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.940" level="INFO">VALUE: [5.022199999999907e-05, 4.98330000000026e-05, 4.987500000000131e-05, 5.012499999999809e-05, 5.006899999999981e-05, 4.938900000000038e-05, 4.950000000000093e-05, 4.954199999999964e-05, 5.020899999999898e-05, 5.000000000000143e-05, 5.026399999999778e-05, 4.961100000000149e-05, 5.01530000000007e-05, 4.952800000000007e-05, 4.937499999999734e-05, 5.026399999999778e-05, 5.012499999999809e-05, 4.976399999999728e-05, 4.95270000000006e-05, 4.937500000000081e-05, 5.019399999999993e-05, 5.019399999999993e-05, 4.98469999999987e-05, 4.983400000000207e-05, 4.990299999999698e-05, 4.941699999999952e-05, 4.999999999999796e-05, 4.988899999999741e-05, 4.990300000000045e-05, 5.033400000000257e-05, 5.019499999999941e-05, 5.018099999999984e-05, 4.961100000000149e-05, 4.984799999999817e-05, 4.951299999999756e-05, 4.940299999999995e-05, 4.981899999999956e-05, 4.941600000000004e-05, 4.9707999999999e-05, 5.0165999999997324e-05, 4.952800000000007e-05, 5.03469999999992e-05, 4.942999999999961e-05, 4.988900000000088e-05, 5.018099999999984e-05, 5.024999999999821e-05, 4.991700000000002e-05, 4.956999999999878e-05, 5.0014000000001e-05, 4.95140000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:44:40.938" endtime="20201112 09:44:40.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.934" endtime="20201112 09:44:40.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.943" endtime="20201112 09:44:40.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:40.947" endtime="20201112 09:44:40.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.945" endtime="20201112 09:44:40.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.942" endtime="20201112 09:44:40.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.574" endtime="20201112 09:44:40.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.574" endtime="20201112 09:44:40.968"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.977" endtime="20201112 09:44:40.994"></status>
</kw>
<msg timestamp="20201112 09:44:40.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.975" endtime="20201112 09:44:40.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.995" endtime="20201112 09:44:40.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.998" endtime="20201112 09:44:40.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.972" endtime="20201112 09:44:41.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.970" endtime="20201112 09:44:41.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.007" endtime="20201112 09:44:41.293"></status>
</kw>
<msg timestamp="20201112 09:44:41.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020942056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.005" endtime="20201112 09:44:41.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020942056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.298" endtime="20201112 09:44:41.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.306" endtime="20201112 09:44:41.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.003" endtime="20201112 09:44:41.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.001" endtime="20201112 09:44:41.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.313" level="INFO">${RESULT} = [{'time': 0.020992514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.045799999999975e-05, 'source_diff': 5.045799999999975e-05}, {'time': 0.021045528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:41.310" endtime="20201112 09:44:41.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:41.328" level="INFO">${ACCURACY} = {'time': [0.020992514, 0.021045528, 0.021102528, 0.021159556, 0.021214583, 0.021272556, 0.021331569, 0.021386583, 0.021445569, 0.021500569, 0.021554569, 0.021608583, 0.021665583, 0.021723597, 0.021778...</msg>
<status status="PASS" starttime="20201112 09:44:41.314" endtime="20201112 09:44:41.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.332" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:44:41.331" endtime="20201112 09:44:41.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.334" level="INFO">VALUE: [5.045799999999975e-05, 5.075000000000218e-05, 5.076399999999828e-05, 5.0486999999998367e-05, 5.063899999999816e-05, 5.075000000000218e-05, 5.0638000000002154e-05, 5.133300000000063e-05, 5.109699999999995e-05, 5.0902000000001973e-05, 5.05409999999977e-05, 5.086099999999927e-05, 5.0429999999997144e-05, 5.122200000000007e-05, 5.113899999999866e-05, 5.055499999999727e-05, 5.065299999999773e-05, 5.122200000000007e-05, 5.118100000000084e-05, 5.061099999999902e-05, 5.066700000000077e-05, 5.107000000000028e-05, 5.055600000000021e-05, 5.072200000000304e-05, 5.122299999999955e-05, 5.11530000000017e-05, 5.061199999999849e-05, 5.0887999999998934e-05, 5.130500000000149e-05, 5.08469999999997e-05, 5.077800000000132e-05, 5.080500000000099e-05, 5.131900000000106e-05, 5.074999999999871e-05, 5.06530000000012e-05, 5.062499999999859e-05, 5.072199999999957e-05, 5.111099999999952e-05, 5.130600000000096e-05, 5.074999999999871e-05, 5.043100000000009e-05, 5.048599999999889e-05, 5.123599999999964e-05, 5.084799999999917e-05, 5.094500000000016e-05, 5.068100000000034e-05, 5.063899999999816e-05, 5.069400000000043e-05, 5.037500000000181e-05, 5.104100000000167e-05]</msg>
<status status="PASS" starttime="20201112 09:44:41.333" endtime="20201112 09:44:41.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.328" endtime="20201112 09:44:41.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.338" endtime="20201112 09:44:41.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:41.341" endtime="20201112 09:44:41.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.340" endtime="20201112 09:44:41.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.336" endtime="20201112 09:44:41.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.969" endtime="20201112 09:44:41.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.968" endtime="20201112 09:44:41.362"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.371" endtime="20201112 09:44:41.387"></status>
</kw>
<msg timestamp="20201112 09:44:41.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.369" endtime="20201112 09:44:41.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.389" endtime="20201112 09:44:41.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.391" endtime="20201112 09:44:41.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.367" endtime="20201112 09:44:41.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.365" endtime="20201112 09:44:41.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.400" endtime="20201112 09:44:41.687"></status>
</kw>
<msg timestamp="20201112 09:44:41.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.399" endtime="20201112 09:44:41.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.691" endtime="20201112 09:44:41.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.700" endtime="20201112 09:44:41.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.396" endtime="20201112 09:44:41.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.394" endtime="20201112 09:44:41.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.706" level="INFO">${RESULT} = [{'time': 0.019905542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.174999999999971e-05, 'source_diff': 5.174999999999971e-05}, {'time': 0.019966542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:41.703" endtime="20201112 09:44:41.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:41.720" level="INFO">${ACCURACY} = {'time': [0.019905542, 0.019966542, 0.020024569, 0.020082583, 0.020141583, 0.020195569, 0.020252583, 0.020312583, 0.020370611, 0.020427597, 0.020487611, 0.020542611, 0.020603653, 0.020658625, 0.020714...</msg>
<status status="PASS" starttime="20201112 09:44:41.707" endtime="20201112 09:44:41.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.724" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:44:41.723" endtime="20201112 09:44:41.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.727" level="INFO">VALUE: [5.174999999999971e-05, 5.230600000000196e-05, 5.1679999999998394e-05, 5.154100000000217e-05, 5.205500000000224e-05, 5.156900000000131e-05, 5.1708000000001e-05, 5.201399999999953e-05, 5.143000000000161e-05, 5.211099999999705e-05, 5.161100000000002e-05, 5.199999999999996e-05, 5.191699999999855e-05, 5.225000000000021e-05, 5.188899999999941e-05, 5.166700000000177e-05, 5.180600000000146e-05, 5.188900000000288e-05, 5.140299999999848e-05, 5.195900000000073e-05, 5.159799999999992e-05, 5.179199999999842e-05, 5.176400000000275e-05, 5.227699999999988e-05, 5.187499999999984e-05, 5.222200000000107e-05, 5.1471999999996854e-05, 5.190299999999898e-05, 5.201399999999953e-05, 5.193100000000159e-05, 5.180499999999852e-05, 5.166700000000177e-05, 5.147200000000032e-05, 5.168100000000134e-05, 5.177799999999885e-05, 5.201399999999953e-05, 5.184699999999723e-05, 5.16530000000022e-05, 5.14729999999998e-05, 5.23340000000011e-05, 5.159799999999992e-05, 5.190299999999898e-05, 5.212500000000009e-05, 5.22080000000015e-05, 5.1916000000002543e-05, 5.201399999999953e-05, 5.206900000000181e-05, 5.168000000000186e-05, 5.165299999999873e-05, 5.213899999999966e-05]</msg>
<status status="PASS" starttime="20201112 09:44:41.725" endtime="20201112 09:44:41.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.721" endtime="20201112 09:44:41.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.730" endtime="20201112 09:44:41.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:41.734" endtime="20201112 09:44:41.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.732" endtime="20201112 09:44:41.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.729" endtime="20201112 09:44:41.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.363" endtime="20201112 09:44:41.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.363" endtime="20201112 09:44:41.755"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.764" endtime="20201112 09:44:41.780"></status>
</kw>
<msg timestamp="20201112 09:44:41.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.762" endtime="20201112 09:44:41.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.782" endtime="20201112 09:44:41.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.784" endtime="20201112 09:44:41.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.759" endtime="20201112 09:44:41.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.757" endtime="20201112 09:44:41.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.793" endtime="20201112 09:44:42.079"></status>
</kw>
<msg timestamp="20201112 09:44:42.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.792" endtime="20201112 09:44:42.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.084" endtime="20201112 09:44:42.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.092" endtime="20201112 09:44:42.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.789" endtime="20201112 09:44:42.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.787" endtime="20201112 09:44:42.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.099" level="INFO">${RESULT} = [{'time': 0.020154222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305499999999977e-05, 'source_diff': 5.305499999999977e-05}, {'time': 0.020216222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:42.095" endtime="20201112 09:44:42.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:42.112" level="INFO">${ACCURACY} = {'time': [0.020154222, 0.020216222, 0.020272264, 0.020329222, 0.020386236, 0.020445236, 0.02050125, 0.02055925, 0.020618278, 0.020673292, 0.020729306, 0.020786278, 0.020842306, 0.020898292, 0.02095531...</msg>
<status status="PASS" starttime="20201112 09:44:42.100" endtime="20201112 09:44:42.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.117" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:44:42.116" endtime="20201112 09:44:42.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.119" level="INFO">VALUE: [5.305499999999977e-05, 5.290299999999998e-05, 5.282000000000203e-05, 5.308300000000238e-05, 5.312499999999762e-05, 5.291699999999955e-05, 5.333299999999916e-05, 5.243100000000209e-05, 5.245900000000123e-05, 5.256999999999831e-05, 5.309799999999795e-05, 5.283399999999813e-05, 5.254200000000264e-05, 5.308399999999838e-05, 5.331899999999959e-05, 5.251300000000056e-05, 5.252700000000013e-05, 5.300000000000096e-05, 5.269400000000243e-05, 5.279099999999995e-05, 5.237500000000034e-05, 5.306899999999934e-05, 5.30280000000001e-05, 5.2929999999999644e-05, 5.248600000000089e-05, 5.301400000000053e-05, 5.2485999999997424e-05, 5.305599999999924e-05, 5.279200000000289e-05, 5.333399999999863e-05, 5.258400000000135e-05, 5.308400000000185e-05, 5.297299999999783e-05, 5.250000000000046e-05, 5.261200000000049e-05, 5.2402000000000004e-05, 5.251299999999709e-05, 5.308299999999891e-05, 5.280499999999952e-05, 5.280499999999952e-05, 5.250000000000046e-05, 5.329199999999992e-05, 5.333299999999916e-05, 5.334699999999873e-05, 5.33470000000022e-05, 5.291699999999955e-05, 5.2763999999996813e-05, 5.240299999999948e-05, 5.275000000000071e-05, 5.254199999999917e-05]</msg>
<status status="PASS" starttime="20201112 09:44:42.118" endtime="20201112 09:44:42.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.113" endtime="20201112 09:44:42.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.123" endtime="20201112 09:44:42.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:42.126" endtime="20201112 09:44:42.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.124" endtime="20201112 09:44:42.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.121" endtime="20201112 09:44:42.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.756" endtime="20201112 09:44:42.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.755" endtime="20201112 09:44:42.147"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.156" endtime="20201112 09:44:42.173"></status>
</kw>
<msg timestamp="20201112 09:44:42.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.154" endtime="20201112 09:44:42.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.175" endtime="20201112 09:44:42.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.177" endtime="20201112 09:44:42.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.151" endtime="20201112 09:44:42.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.149" endtime="20201112 09:44:42.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.186" endtime="20201112 09:44:42.472"></status>
</kw>
<msg timestamp="20201112 09:44:42.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019914653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.185" endtime="20201112 09:44:42.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019914653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.476" endtime="20201112 09:44:42.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.485" endtime="20201112 09:44:42.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.182" endtime="20201112 09:44:42.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.180" endtime="20201112 09:44:42.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.491" level="INFO">${RESULT} = [{'time': 0.019968417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3763999999997814e-05, 'source_diff': 5.3763999999997814e-05}, {'time': 0.020031417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:42.488" endtime="20201112 09:44:42.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:42.505" level="INFO">${ACCURACY} = {'time': [0.019968417, 0.020031417, 0.020092444, 0.020152444, 0.020212444, 0.020270458, 0.020333472, 0.020390458, 0.020450472, 0.020509486, 0.020568486, 0.020628486, 0.020691556, 0.0207485, 0.02080551...</msg>
<status status="PASS" starttime="20201112 09:44:42.492" endtime="20201112 09:44:42.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.509" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:44:42.508" endtime="20201112 09:44:42.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.512" level="INFO">VALUE: [5.3763999999997814e-05, 5.405600000000024e-05, 5.402700000000163e-05, 5.4249999999998744e-05, 5.3693999999999964e-05, 5.3916000000001074e-05, 5.3429999999996675e-05, 5.406900000000034e-05, 5.4166000000001324e-05, 5.3944000000000214e-05, 5.387500000000184e-05, 5.391700000000055e-05, 5.419499999999994e-05, 5.4013999999998064e-05, 5.426400000000178e-05, 5.380599999999999e-05, 5.418100000000037e-05, 5.3999999999998494e-05, 5.377800000000085e-05, 5.3749999999998244e-05, 5.383399999999913e-05, 5.4221999999999604e-05, 5.433300000000016e-05, 5.4221999999999604e-05, 5.3651999999997785e-05, 5.434699999999973e-05, 5.361100000000202e-05, 5.3457999999999284e-05, 5.379100000000095e-05, 5.355599999999974e-05, 5.3485999999998424e-05, 5.406900000000034e-05, 5.400000000000196e-05, 5.366699999999683e-05, 5.401400000000153e-05, 5.361100000000202e-05, 5.358400000000235e-05, 5.38479999999987e-05, 5.41670000000008e-05, 5.359699999999898e-05, 5.384699999999923e-05, 5.434699999999973e-05, 5.358300000000288e-05, 5.356900000000331e-05, 5.3513999999997564e-05, 5.434699999999973e-05, 5.386100000000227e-05, 5.379200000000042e-05, 5.359699999999898e-05, 5.3707999999999534e-05]</msg>
<status status="PASS" starttime="20201112 09:44:42.510" endtime="20201112 09:44:42.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.506" endtime="20201112 09:44:42.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.516" endtime="20201112 09:44:42.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:42.519" endtime="20201112 09:44:42.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.517" endtime="20201112 09:44:42.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.514" endtime="20201112 09:44:42.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.148" endtime="20201112 09:44:42.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.147" endtime="20201112 09:44:42.540"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.549" endtime="20201112 09:44:42.565"></status>
</kw>
<msg timestamp="20201112 09:44:42.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.547" endtime="20201112 09:44:42.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.567" endtime="20201112 09:44:42.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.569" endtime="20201112 09:44:42.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.544" endtime="20201112 09:44:42.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.542" endtime="20201112 09:44:42.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.578" endtime="20201112 09:44:42.865"></status>
</kw>
<msg timestamp="20201112 09:44:42.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020218847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.577" endtime="20201112 09:44:42.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020218847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.869" endtime="20201112 09:44:42.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.878" endtime="20201112 09:44:42.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.574" endtime="20201112 09:44:42.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.572" endtime="20201112 09:44:42.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.884" level="INFO">${RESULT} = [{'time': 0.020273792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.494499999999722e-05, 'source_diff': 5.494499999999722e-05}, {'time': 0.020332792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:42.881" endtime="20201112 09:44:42.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:42.899" level="INFO">${ACCURACY} = {'time': [0.020273792, 0.020332792, 0.020391806, 0.020455833, 0.020515819, 0.020578847, 0.020636861, 0.020694833, 0.020754847, 0.020817847, 0.020879861, 0.020937875, 0.020994889, 0.021058889, 0.021117...</msg>
<status status="PASS" starttime="20201112 09:44:42.885" endtime="20201112 09:44:42.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.904" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:44:42.903" endtime="20201112 09:44:42.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.906" level="INFO">VALUE: [5.494499999999722e-05, 5.482000000000056e-05, 5.513899999999919e-05, 5.508300000000091e-05, 5.4708000000000534e-05, 5.463900000000216e-05, 5.456900000000084e-05, 5.5013999999999064e-05, 5.511100000000005e-05, 5.508300000000091e-05, 5.5027999999998634e-05, 5.437500000000234e-05, 5.4735999999999674e-05, 5.482000000000056e-05, 5.443100000000062e-05, 5.455600000000074e-05, 5.50280000000021e-05, 5.4999999999999494e-05, 5.459699999999998e-05, 5.529099999999898e-05, 5.4985999999999924e-05, 5.455500000000127e-05, 5.4972000000000354e-05, 5.4471999999999854e-05, 5.4722000000000104e-05, 5.4416000000001574e-05, 5.477800000000185e-05, 5.4999999999999494e-05, 5.4749999999999244e-05, 5.462499999999912e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.53610000000003e-05, 5.4471999999999854e-05, 5.4485999999999424e-05, 5.5277999999998884e-05, 5.477800000000185e-05, 5.494500000000069e-05, 5.4958000000000784e-05, 5.532000000000106e-05, 5.5137999999999715e-05, 5.501299999999959e-05, 5.508300000000091e-05, 5.455500000000127e-05, 5.4471999999999854e-05, 5.481900000000109e-05, 5.500000000000296e-05, 5.533300000000116e-05, 5.463899999999869e-05, 5.451400000000203e-05]</msg>
<status status="PASS" starttime="20201112 09:44:42.905" endtime="20201112 09:44:42.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.900" endtime="20201112 09:44:42.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.910" endtime="20201112 09:44:42.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:42.913" endtime="20201112 09:44:42.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.912" endtime="20201112 09:44:42.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.908" endtime="20201112 09:44:42.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.541" endtime="20201112 09:44:42.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.540" endtime="20201112 09:44:42.934"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.943" endtime="20201112 09:44:42.959"></status>
</kw>
<msg timestamp="20201112 09:44:42.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.941" endtime="20201112 09:44:42.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.961" endtime="20201112 09:44:42.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.963" endtime="20201112 09:44:42.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.939" endtime="20201112 09:44:42.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.937" endtime="20201112 09:44:42.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.972" endtime="20201112 09:44:43.260"></status>
</kw>
<msg timestamp="20201112 09:44:43.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.971" endtime="20201112 09:44:43.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.264" endtime="20201112 09:44:43.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.273" endtime="20201112 09:44:43.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.968" endtime="20201112 09:44:43.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.966" endtime="20201112 09:44:43.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:43.279" level="INFO">${RESULT} = [{'time': 0.019967014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.587500000000037e-05, 'source_diff': 5.587500000000037e-05}, {'time': 0.020025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:43.276" endtime="20201112 09:44:43.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:43.293" level="INFO">${ACCURACY} = {'time': [0.019967014, 0.020025, 0.020088014, 0.020146028, 0.020208028, 0.020270028, 0.020332042, 0.020394056, 0.020455056, 0.020516056, 0.020578069, 0.020638069, 0.020700097, 0.020765083, 0.020830139...</msg>
<status status="PASS" starttime="20201112 09:44:43.280" endtime="20201112 09:44:43.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.297" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:44:43.296" endtime="20201112 09:44:43.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.300" level="INFO">VALUE: [5.587500000000037e-05, 5.5722000000001104e-05, 5.619500000000194e-05, 5.5486000000000424e-05, 5.6235999999997704e-05, 5.544499999999772e-05, 5.576400000000328e-05, 5.613900000000019e-05, 5.538899999999944e-05, 5.570900000000101e-05, 5.576300000000034e-05, 5.5415999999999105e-05, 5.5763999999999814e-05, 5.613900000000019e-05, 5.561100000000055e-05, 5.5458000000001284e-05, 5.537499999999987e-05, 5.611100000000105e-05, 5.558299999999794e-05, 5.583300000000166e-05, 5.608399999999791e-05, 5.538899999999944e-05, 5.562500000000012e-05, 5.6250000000000744e-05, 5.581899999999862e-05, 5.6152000000000285e-05, 5.6264000000000314e-05, 5.5638000000000215e-05, 5.5429999999998675e-05, 5.561099999999708e-05, 5.565299999999926e-05, 5.584700000000123e-05, 5.613900000000019e-05, 5.613900000000019e-05, 5.556999999999784e-05, 5.556899999999837e-05, 5.634700000000173e-05, 5.607000000000181e-05, 5.5513999999999564e-05, 5.623700000000065e-05, 5.586099999999733e-05, 5.6027999999999634e-05, 5.5736000000000674e-05, 5.543099999999815e-05, 5.584700000000123e-05, 5.6207999999998565e-05, 5.606899999999887e-05, 5.5651999999999785e-05, 5.580500000000252e-05, 5.629099999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:44:43.298" endtime="20201112 09:44:43.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.293" endtime="20201112 09:44:43.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.303" endtime="20201112 09:44:43.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:43.307" endtime="20201112 09:44:43.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.305" endtime="20201112 09:44:43.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.302" endtime="20201112 09:44:43.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.935" endtime="20201112 09:44:43.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.935" endtime="20201112 09:44:43.328"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.336" endtime="20201112 09:44:43.352"></status>
</kw>
<msg timestamp="20201112 09:44:43.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.335" endtime="20201112 09:44:43.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.354" endtime="20201112 09:44:43.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.356" endtime="20201112 09:44:43.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.332" endtime="20201112 09:44:43.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.330" endtime="20201112 09:44:43.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.365" endtime="20201112 09:44:43.652"></status>
</kw>
<msg timestamp="20201112 09:44:43.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.364" endtime="20201112 09:44:43.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.657" endtime="20201112 09:44:43.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.665" endtime="20201112 09:44:43.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.361" endtime="20201112 09:44:43.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.359" endtime="20201112 09:44:43.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:43.672" level="INFO">${RESULT} = [{'time': 0.019830069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7151999999997816e-05, 'source_diff': 5.7151999999997816e-05}, {'time': 0.019891069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:43.669" endtime="20201112 09:44:43.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:43.685" level="INFO">${ACCURACY} = {'time': [0.019830069, 0.019891069, 0.019954069, 0.020018083, 0.020084097, 0.020146111, 0.020207125, 0.020268125, 0.020333125, 0.020396125, 0.020461139, 0.020526153, 0.020591153, 0.020656208, 0.020721...</msg>
<status status="PASS" starttime="20201112 09:44:43.673" endtime="20201112 09:44:43.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.690" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:44:43.689" endtime="20201112 09:44:43.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.692" level="INFO">VALUE: [5.7151999999997816e-05, 5.6402000000000535e-05, 5.7152000000001285e-05, 5.6971999999998885e-05, 5.715299999999729e-05, 5.6486000000001424e-05, 5.643099999999915e-05, 5.665300000000026e-05, 5.681899999999962e-05, 5.66809999999994e-05, 5.661099999999808e-05, 5.709699999999901e-05, 5.6791999999999954e-05, 5.713899999999772e-05, 5.662499999999765e-05, 5.715300000000076e-05, 5.6735999999998205e-05, 5.715300000000076e-05, 5.6430000000003144e-05, 5.6985999999998455e-05, 5.711100000000205e-05, 5.7193999999999995e-05, 5.690300000000051e-05, 5.73610000000023e-05, 5.730500000000055e-05, 5.63610000000013e-05, 5.6750000000001244e-05, 5.738900000000144e-05, 5.662500000000112e-05, 5.7027999999997164e-05, 5.663900000000069e-05, 5.6735999999998205e-05, 5.723700000000165e-05, 5.6721999999998635e-05, 5.6819999999999093e-05, 5.656899999999937e-05, 5.6679999999999925e-05, 5.7000000000001494e-05, 5.690300000000051e-05, 5.734699999999926e-05, 5.7042000000000204e-05, 5.715299999999729e-05, 5.658399999999841e-05, 5.631899999999912e-05, 5.656899999999937e-05, 5.7306000000000024e-05, 5.680600000000299e-05, 5.7069999999999343e-05, 5.713900000000119e-05, 5.683399999999866e-05]</msg>
<status status="PASS" starttime="20201112 09:44:43.691" endtime="20201112 09:44:43.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.686" endtime="20201112 09:44:43.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.696" endtime="20201112 09:44:43.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:43.699" endtime="20201112 09:44:43.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.698" endtime="20201112 09:44:43.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.694" endtime="20201112 09:44:43.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.329" endtime="20201112 09:44:43.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.328" endtime="20201112 09:44:43.720"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.729" endtime="20201112 09:44:43.746"></status>
</kw>
<msg timestamp="20201112 09:44:43.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.727" endtime="20201112 09:44:43.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.747" endtime="20201112 09:44:43.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.750" endtime="20201112 09:44:43.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.725" endtime="20201112 09:44:43.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.723" endtime="20201112 09:44:43.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.759" endtime="20201112 09:44:44.046"></status>
</kw>
<msg timestamp="20201112 09:44:44.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020503931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:43.757" endtime="20201112 09:44:44.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020503931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:44.050" endtime="20201112 09:44:44.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.058" endtime="20201112 09:44:44.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.755" endtime="20201112 09:44:44.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.753" endtime="20201112 09:44:44.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.065" level="INFO">${RESULT} = [{'time': 0.020503931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.743100000000015e-05, 'source_diff': 5.743100000000015e-05}, {'time': 0.020569944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:44.061" endtime="20201112 09:44:44.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:44.078" level="INFO">${ACCURACY} = {'time': [0.020503931, 0.020569944, 0.020632972, 0.020696972, 0.020758958, 0.020821972, 0.020889042, 0.020952986, 0.021018083, 0.021083, 0.021150014, 0.021216014, 0.021278028, 0.021342028, 0.021407042...</msg>
<status status="PASS" starttime="20201112 09:44:44.066" endtime="20201112 09:44:44.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.083" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:44:44.082" endtime="20201112 09:44:44.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.085" level="INFO">VALUE: [5.743100000000015e-05, 5.777699999999844e-05, 5.830499999999808e-05, 5.7930000000001175e-05, 5.7652000000001785e-05, 5.7694000000000495e-05, 5.747299999999886e-05, 5.7985999999999455e-05, 5.788899999999847e-05, 5.8042000000001204e-05, 5.8070000000000344e-05, 5.8013999999998594e-05, 5.765300000000126e-05, 5.791699999999761e-05, 5.7806000000000524e-05, 5.8278000000001884e-05, 5.813900000000219e-05, 5.780500000000105e-05, 5.761099999999908e-05, 5.8222000000000135e-05, 5.7527999999997664e-05, 5.805499999999783e-05, 5.8180000000001425e-05, 5.80550000000013e-05, 5.816700000000133e-05, 5.815300000000176e-05, 5.781900000000062e-05, 5.78749999999989e-05, 5.7542000000000704e-05, 5.7721999999999635e-05, 5.8013999999998594e-05, 5.759799999999898e-05, 5.813899999999872e-05, 5.7708000000000065e-05, 5.8278000000001884e-05, 5.836099999999983e-05, 5.734699999999926e-05, 5.7499999999998525e-05, 5.831899999999765e-05, 5.815299999999829e-05, 5.7916000000001605e-05, 5.758299999999994e-05, 5.811099999999958e-05, 5.743100000000015e-05, 5.8028000000001634e-05, 5.8027999999998164e-05, 5.737500000000187e-05, 5.7583999999999413e-05, 5.840299999999854e-05, 5.7985999999999455e-05]</msg>
<status status="PASS" starttime="20201112 09:44:44.084" endtime="20201112 09:44:44.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.079" endtime="20201112 09:44:44.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.089" endtime="20201112 09:44:44.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.092" endtime="20201112 09:44:44.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.091" endtime="20201112 09:44:44.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.087" endtime="20201112 09:44:44.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.721" endtime="20201112 09:44:44.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.720" endtime="20201112 09:44:44.113"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.122" endtime="20201112 09:44:44.139"></status>
</kw>
<msg timestamp="20201112 09:44:44.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.120" endtime="20201112 09:44:44.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.141" endtime="20201112 09:44:44.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.143" endtime="20201112 09:44:44.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.118" endtime="20201112 09:44:44.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.116" endtime="20201112 09:44:44.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.152" endtime="20201112 09:44:44.438"></status>
</kw>
<msg timestamp="20201112 09:44:44.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020831431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020890264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.151" endtime="20201112 09:44:44.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020831431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020890264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.443" endtime="20201112 09:44:44.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.451" endtime="20201112 09:44:44.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.148" endtime="20201112 09:44:44.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.147" endtime="20201112 09:44:44.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.458" level="INFO">${RESULT} = [{'time': 0.020890264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.883299999999772e-05, 'source_diff': 5.883299999999772e-05}, {'time': 0.020956292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:44.454" endtime="20201112 09:44:44.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:44.472" level="INFO">${ACCURACY} = {'time': [0.020890264, 0.020956292, 0.021020292, 0.021081278, 0.021142292, 0.021204319, 0.021268347, 0.021335333, 0.021401333, 0.021467375, 0.021532361, 0.021595361, 0.021659375, 0.021727361, 0.021792...</msg>
<status status="PASS" starttime="20201112 09:44:44.459" endtime="20201112 09:44:44.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.477" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:44:44.476" endtime="20201112 09:44:44.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.479" level="INFO">VALUE: [5.883299999999772e-05, 5.8764000000002814e-05, 5.9348000000000734e-05, 5.8471999999996915e-05, 5.8736000000000205e-05, 5.880499999999858e-05, 5.8915999999999136e-05, 5.8986000000000455e-05, 5.90550000000023e-05, 5.884700000000076e-05, 5.8708000000001065e-05, 5.8680000000001925e-05, 5.936100000000083e-05, 5.890299999999904e-05, 5.893099999999818e-05, 5.884700000000076e-05, 5.841699999999811e-05, 5.9070000000001344e-05, 5.934699999999779e-05, 5.844499999999725e-05, 5.9027999999999164e-05, 5.891699999999861e-05, 5.9277999999999414e-05, 5.9098000000000483e-05, 5.9151999999999816e-05, 5.905499999999883e-05, 5.8986000000000455e-05, 5.841700000000158e-05, 5.913899999999972e-05, 5.8972000000000885e-05, 5.8972000000000885e-05, 5.8778000000002384e-05, 5.883300000000119e-05, 5.906900000000187e-05, 5.884699999999729e-05, 5.916700000000233e-05, 5.8570000000000844e-05, 5.8806000000001524e-05, 5.9236000000000705e-05, 5.893099999999818e-05, 5.8472000000000385e-05, 5.8665999999998886e-05, 5.8944000000001745e-05, 5.880499999999858e-05, 5.8401999999999066e-05, 5.879099999999901e-05, 5.85689999999979e-05, 5.931899999999865e-05, 5.8721999999997165e-05, 5.869500000000097e-05]</msg>
<status status="PASS" starttime="20201112 09:44:44.478" endtime="20201112 09:44:44.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.473" endtime="20201112 09:44:44.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.483" endtime="20201112 09:44:44.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.486" endtime="20201112 09:44:44.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.485" endtime="20201112 09:44:44.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.481" endtime="20201112 09:44:44.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.114" endtime="20201112 09:44:44.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.114" endtime="20201112 09:44:44.507"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.516" endtime="20201112 09:44:44.533"></status>
</kw>
<msg timestamp="20201112 09:44:44.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.514" endtime="20201112 09:44:44.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.534" endtime="20201112 09:44:44.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.537" endtime="20201112 09:44:44.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.512" endtime="20201112 09:44:44.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.510" endtime="20201112 09:44:44.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.546" endtime="20201112 09:44:44.832"></status>
</kw>
<msg timestamp="20201112 09:44:44.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019975514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.544" endtime="20201112 09:44:44.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019975514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.836" endtime="20201112 09:44:44.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.844" endtime="20201112 09:44:44.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.541" endtime="20201112 09:44:44.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.540" endtime="20201112 09:44:44.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.851" level="INFO">${RESULT} = [{'time': 0.019975514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.988900000000047e-05, 'source_diff': 5.988900000000047e-05}, {'time': 0.020044528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:44.848" endtime="20201112 09:44:44.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:44.864" level="INFO">${ACCURACY} = {'time': [0.019975514, 0.020044528, 0.020110514, 0.020173528, 0.020241597, 0.020304556, 0.020372556, 0.020436611, 0.020503583, 0.020565569, 0.020628625, 0.020691583, 0.020756611, 0.020821597, 0.020887...</msg>
<status status="PASS" starttime="20201112 09:44:44.852" endtime="20201112 09:44:44.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.869" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:44:44.868" endtime="20201112 09:44:44.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.871" level="INFO">VALUE: [5.988900000000047e-05, 5.944499999999825e-05, 5.9471999999997915e-05, 5.9541999999999234e-05, 6.038900000000097e-05, 5.938899999999997e-05, 6.0264000000000845e-05, 5.9957999999998846e-05, 5.9749999999997305e-05, 5.955499999999933e-05, 5.943100000000215e-05, 5.9764000000000345e-05, 5.9736000000001205e-05, 6.0166000000000386e-05, 6.0236000000001705e-05, 5.9500000000000525e-05, 5.9833999999998194e-05, 5.990300000000004e-05, 5.9555999999998804e-05, 5.9986000000001455e-05, 5.9694000000002495e-05, 6.0320000000002594e-05, 5.9791999999999484e-05, 5.988900000000047e-05, 6.0305999999999554e-05, 5.9486000000000955e-05, 5.9444000000002245e-05, 5.963900000000022e-05, 5.9514000000000095e-05, 5.9486000000000955e-05, 5.9777999999999915e-05, 5.9777999999999915e-05, 5.9528000000003134e-05, 5.9500000000000525e-05, 5.986100000000133e-05, 5.936099999999736e-05, 5.9834000000001664e-05, 6.018099999999943e-05, 5.963900000000022e-05, 6.0028000000000165e-05, 5.9805999999999054e-05, 5.934700000000126e-05, 6.037499999999793e-05, 5.980500000000305e-05, 5.988900000000047e-05, 6.0028000000000165e-05, 5.9541999999999234e-05, 5.9971999999998415e-05, 5.9500000000000525e-05, 5.9750000000000775e-05]</msg>
<status status="PASS" starttime="20201112 09:44:44.870" endtime="20201112 09:44:44.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.865" endtime="20201112 09:44:44.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.875" endtime="20201112 09:44:44.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.878" endtime="20201112 09:44:44.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.877" endtime="20201112 09:44:44.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.873" endtime="20201112 09:44:44.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.508" endtime="20201112 09:44:44.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.508" endtime="20201112 09:44:44.899"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.908" endtime="20201112 09:44:44.926"></status>
</kw>
<msg timestamp="20201112 09:44:44.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.906" endtime="20201112 09:44:44.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.927" endtime="20201112 09:44:44.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.930" endtime="20201112 09:44:44.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.904" endtime="20201112 09:44:44.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.902" endtime="20201112 09:44:44.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.938" endtime="20201112 09:44:45.224"></status>
</kw>
<msg timestamp="20201112 09:44:45.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.937" endtime="20201112 09:44:45.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.228" endtime="20201112 09:44:45.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.237" endtime="20201112 09:44:45.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.934" endtime="20201112 09:44:45.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.933" endtime="20201112 09:44:45.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:45.243" level="INFO">${RESULT} = [{'time': 0.019863417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.045900000000229e-05, 'source_diff': 6.045900000000229e-05}, {'time': 0.019933417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:45.240" endtime="20201112 09:44:45.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:45.257" level="INFO">${ACCURACY} = {'time': [0.019863417, 0.019933417, 0.020001431, 0.020067458, 0.020130458, 0.020199444, 0.020267458, 0.020335472, 0.0204055, 0.020474486, 0.020542486, 0.020610514, 0.0206765, 0.020739514, 0.020806514,...</msg>
<status status="PASS" starttime="20201112 09:44:45.244" endtime="20201112 09:44:45.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.261" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:44:45.260" endtime="20201112 09:44:45.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.264" level="INFO">VALUE: [6.045900000000229e-05, 6.0583999999998944e-05, 6.073700000000168e-05, 6.0721999999999166e-05, 6.058299999999947e-05, 6.054100000000076e-05, 6.0499999999998055e-05, 6.0500000000001525e-05, 6.0792000000000485e-05, 6.0985999999998985e-05, 6.0735999999998735e-05, 6.058299999999947e-05, 6.036100000000183e-05, 6.0500000000001525e-05, 6.066700000000036e-05, 6.0985999999998985e-05, 6.113900000000172e-05, 6.0764000000001345e-05, 6.111100000000258e-05, 6.1014000000001595e-05, 6.0430000000000206e-05, 6.0652000000001316e-05, 6.108299999999997e-05, 6.118100000000043e-05, 6.090300000000104e-05, 6.1013999999998125e-05, 6.083299999999972e-05, 6.0735999999998735e-05, 6.127799999999795e-05, 6.0584000000002414e-05, 6.094499999999975e-05, 6.066699999999689e-05, 6.136199999999883e-05, 6.130600000000055e-05, 6.0514000000001095e-05, 6.0792000000000485e-05, 6.0542000000000235e-05, 6.111099999999911e-05, 6.047299999999839e-05, 6.108299999999997e-05, 6.090299999999757e-05, 6.090300000000104e-05, 6.086099999999886e-05, 6.0555999999999804e-05, 6.1195e-05, 6.0778000000000915e-05, 6.0555999999999804e-05, 6.0749999999998305e-05, 6.061099999999861e-05, 6.132000000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:44:45.262" endtime="20201112 09:44:45.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.258" endtime="20201112 09:44:45.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.268" endtime="20201112 09:44:45.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:45.271" endtime="20201112 09:44:45.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.269" endtime="20201112 09:44:45.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.266" endtime="20201112 09:44:45.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.900" endtime="20201112 09:44:45.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.900" endtime="20201112 09:44:45.292"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.301" endtime="20201112 09:44:45.318"></status>
</kw>
<msg timestamp="20201112 09:44:45.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.299" endtime="20201112 09:44:45.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.319" endtime="20201112 09:44:45.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.322" endtime="20201112 09:44:45.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.297" endtime="20201112 09:44:45.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.295" endtime="20201112 09:44:45.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.331" endtime="20201112 09:44:45.617"></status>
</kw>
<msg timestamp="20201112 09:44:45.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.329" endtime="20201112 09:44:45.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.622" endtime="20201112 09:44:45.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.630" endtime="20201112 09:44:45.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.327" endtime="20201112 09:44:45.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.325" endtime="20201112 09:44:45.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:45.637" level="INFO">${RESULT} = [{'time': 0.020169917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.155599999999734e-05, 'source_diff': 6.155599999999734e-05}, {'time': 0.020238917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:45.633" endtime="20201112 09:44:45.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:45.650" level="INFO">${ACCURACY} = {'time': [0.020169917, 0.020238917, 0.020303944, 0.020370944, 0.020435944, 0.020501958, 0.020566958, 0.020634958, 0.020700972, 0.020768972, 0.020835986, 0.0209, 0.020966014, 0.021035028, 0.021102069, ...</msg>
<status status="PASS" starttime="20201112 09:44:45.638" endtime="20201112 09:44:45.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.654" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:44:45.653" endtime="20201112 09:44:45.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.657" level="INFO">VALUE: [6.155599999999734e-05, 6.169499999999703e-05, 6.227699999999947e-05, 6.211100000000011e-05, 6.177700000000244e-05, 6.183300000000072e-05, 6.209700000000054e-05, 6.198599999999999e-05, 6.159700000000004e-05, 6.168000000000146e-05, 6.183300000000072e-05, 6.149999999999906e-05, 6.168100000000093e-05, 6.197200000000042e-05, 6.198599999999999e-05, 6.211100000000011e-05, 6.223600000000024e-05, 6.2195000000001e-05, 6.176399999999888e-05, 6.207000000000087e-05, 6.234700000000079e-05, 6.144400000000078e-05, 6.184700000000029e-05, 6.195800000000085e-05, 6.158300000000047e-05, 6.230499999999861e-05, 6.22080000000011e-05, 6.147199999999992e-05, 6.156899999999743e-05, 6.237499999999993e-05, 6.140299999999807e-05, 6.194500000000075e-05, 6.20279999999987e-05, 6.173599999999974e-05, 6.163900000000222e-05, 6.202699999999922e-05, 6.154099999999829e-05, 6.188799999999953e-05, 6.184700000000029e-05, 6.186099999999986e-05, 6.17080000000006e-05, 6.144400000000078e-05, 6.162499999999918e-05, 6.179200000000148e-05, 6.233300000000122e-05, 6.172200000000017e-05, 6.186099999999986e-05, 6.218100000000143e-05, 6.186099999999986e-05, 6.13889999999985e-05]</msg>
<status status="PASS" starttime="20201112 09:44:45.655" endtime="20201112 09:44:45.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.651" endtime="20201112 09:44:45.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.660" endtime="20201112 09:44:45.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:45.664" endtime="20201112 09:44:45.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.662" endtime="20201112 09:44:45.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.659" endtime="20201112 09:44:45.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.293" endtime="20201112 09:44:45.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.292" endtime="20201112 09:44:45.685"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.693" endtime="20201112 09:44:45.711"></status>
</kw>
<msg timestamp="20201112 09:44:45.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.692" endtime="20201112 09:44:45.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.712" endtime="20201112 09:44:45.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.715" endtime="20201112 09:44:45.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.689" endtime="20201112 09:44:45.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.687" endtime="20201112 09:44:45.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.724" endtime="20201112 09:44:46.012"></status>
</kw>
<msg timestamp="20201112 09:44:46.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:45.722" endtime="20201112 09:44:46.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:46.016" endtime="20201112 09:44:46.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.025" endtime="20201112 09:44:46.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.720" endtime="20201112 09:44:46.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.718" endtime="20201112 09:44:46.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.031" level="INFO">${RESULT} = [{'time': 0.019948, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.276399999999988e-05, 'source_diff': 6.276399999999988e-05}, {'time': 0.020019014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:46.028" endtime="20201112 09:44:46.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:46.046" level="INFO">${ACCURACY} = {'time': [0.019948, 0.020019014, 0.020087014, 0.020153028, 0.020221069, 0.020294042, 0.020359042, 0.020425056, 0.020494083, 0.020565069, 0.020630083, 0.020702083, 0.020774111, 0.020840097, 0.020912125...</msg>
<status status="PASS" starttime="20201112 09:44:46.032" endtime="20201112 09:44:46.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.050" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:44:46.049" endtime="20201112 09:44:46.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.053" level="INFO">VALUE: [6.276399999999988e-05, 6.302800000000316e-05, 6.287500000000043e-05, 6.32500000000008e-05, 6.313800000000078e-05, 6.336100000000136e-05, 6.279200000000248e-05, 6.304199999999927e-05, 6.300000000000056e-05, 6.331899999999918e-05, 6.255499999999886e-05, 6.313900000000025e-05, 6.283300000000172e-05, 6.319399999999906e-05, 6.30829999999985e-05, 6.300000000000056e-05, 6.250000000000006e-05, 6.282000000000162e-05, 6.266700000000236e-05, 6.327799999999995e-05, 6.297199999999795e-05, 6.2889e-05, 6.315299999999982e-05, 6.288800000000053e-05, 6.245800000000135e-05, 6.30829999999985e-05, 6.326400000000038e-05, 6.283299999999825e-05, 6.309700000000154e-05, 6.309700000000154e-05, 6.261100000000061e-05, 6.250000000000006e-05, 6.273599999999727e-05, 6.300000000000056e-05, 6.263899999999975e-05, 6.279199999999902e-05, 6.276399999999988e-05, 6.241700000000211e-05, 6.279199999999902e-05, 6.291599999999967e-05, 6.23889999999995e-05, 6.277799999999945e-05, 6.245800000000135e-05, 6.281899999999868e-05, 6.261100000000061e-05, 6.313900000000025e-05, 6.280499999999911e-05, 6.309699999999807e-05, 6.301400000000013e-05, 6.251399999999963e-05]</msg>
<status status="PASS" starttime="20201112 09:44:46.051" endtime="20201112 09:44:46.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.047" endtime="20201112 09:44:46.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.061" endtime="20201112 09:44:46.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.064" endtime="20201112 09:44:46.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.063" endtime="20201112 09:44:46.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.059" endtime="20201112 09:44:46.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.686" endtime="20201112 09:44:46.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.685" endtime="20201112 09:44:46.086"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.095" endtime="20201112 09:44:46.112"></status>
</kw>
<msg timestamp="20201112 09:44:46.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.093" endtime="20201112 09:44:46.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.113" endtime="20201112 09:44:46.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.116" endtime="20201112 09:44:46.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.090" endtime="20201112 09:44:46.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.088" endtime="20201112 09:44:46.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.125" endtime="20201112 09:44:46.431"></status>
</kw>
<msg timestamp="20201112 09:44:46.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020446236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020510125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.124" endtime="20201112 09:44:46.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020446236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020510125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.435" endtime="20201112 09:44:46.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.444" endtime="20201112 09:44:46.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.121" endtime="20201112 09:44:46.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.119" endtime="20201112 09:44:46.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.451" level="INFO">${RESULT} = [{'time': 0.020510125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3889000000001e-05, 'source_diff': 6.3889000000001e-05}, {'time': 0.020579111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 09:44:46.447" endtime="20201112 09:44:46.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:46.465" level="INFO">${ACCURACY} = {'time': [0.020510125, 0.020579111, 0.020651111, 0.020719125, 0.020789125, 0.020857125, 0.020928153, 0.020996153, 0.021069167, 0.021140153, 0.021208167, 0.021278181, 0.021345181, 0.021418208, 0.021486...</msg>
<status status="PASS" starttime="20201112 09:44:46.452" endtime="20201112 09:44:46.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.469" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:44:46.468" endtime="20201112 09:44:46.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.472" level="INFO">VALUE: [6.3889000000001e-05, 6.348600000000149e-05, 6.426400000000138e-05, 6.431900000000018e-05, 6.37639999999974e-05, 6.390300000000057e-05, 6.398600000000199e-05, 6.379200000000002e-05, 6.431999999999966e-05, 6.379200000000002e-05, 6.341699999999964e-05, 6.423700000000171e-05, 6.377800000000045e-05, 6.361100000000161e-05, 6.365200000000085e-05, 6.359699999999857e-05, 6.373599999999827e-05, 6.373600000000174e-05, 6.356899999999943e-05, 6.361099999999814e-05, 6.393099999999971e-05, 6.387499999999796e-05, 6.355599999999934e-05, 6.34439999999993e-05, 6.365300000000032e-05, 6.3889000000001e-05, 6.376400000000088e-05, 6.413900000000125e-05, 6.342999999999974e-05, 6.42639999999979e-05, 6.34439999999993e-05, 6.434700000000279e-05, 6.379099999999707e-05, 6.381899999999968e-05, 6.426400000000138e-05, 6.359699999999857e-05, 6.377800000000045e-05, 6.39439999999998e-05, 6.42639999999979e-05, 6.366699999999989e-05, 6.349999999999759e-05, 6.408399999999898e-05, 6.369499999999903e-05, 6.383399999999873e-05, 6.431999999999966e-05, 6.431900000000018e-05, 6.402699999999775e-05, 6.398599999999852e-05, 6.345799999999888e-05, 6.365299999999685e-05]</msg>
<status status="PASS" starttime="20201112 09:44:46.470" endtime="20201112 09:44:46.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.466" endtime="20201112 09:44:46.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.476" endtime="20201112 09:44:46.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.479" endtime="20201112 09:44:46.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.478" endtime="20201112 09:44:46.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.474" endtime="20201112 09:44:46.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.087" endtime="20201112 09:44:46.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.086" endtime="20201112 09:44:46.500"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.510" endtime="20201112 09:44:46.527"></status>
</kw>
<msg timestamp="20201112 09:44:46.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.508" endtime="20201112 09:44:46.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.529" endtime="20201112 09:44:46.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.531" endtime="20201112 09:44:46.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.505" endtime="20201112 09:44:46.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.503" endtime="20201112 09:44:46.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.541" endtime="20201112 09:44:46.829"></status>
</kw>
<msg timestamp="20201112 09:44:46.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020545972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.539" endtime="20201112 09:44:46.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020545972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.833" endtime="20201112 09:44:46.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.842" endtime="20201112 09:44:46.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.537" endtime="20201112 09:44:46.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.535" endtime="20201112 09:44:46.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.849" level="INFO">${RESULT} = [{'time': 0.020611083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.511099999999964e-05, 'source_diff': 6.511099999999964e-05}, {'time': 0.020683083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:46.846" endtime="20201112 09:44:46.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:46.863" level="INFO">${ACCURACY} = {'time': [0.020611083, 0.020683083, 0.020753097, 0.020826111, 0.020895111, 0.020965139, 0.021037125, 0.021105139, 0.021176153, 0.021246153, 0.021320167, 0.021391194, 0.021463181, 0.021530194, 0.021600...</msg>
<status status="PASS" starttime="20201112 09:44:46.850" endtime="20201112 09:44:46.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.867" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:44:46.866" endtime="20201112 09:44:46.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.870" level="INFO">VALUE: [6.511099999999964e-05, 6.520800000000063e-05, 6.447200000000292e-05, 6.533300000000075e-05, 6.512499999999921e-05, 6.465300000000132e-05, 6.473599999999927e-05, 6.502799999999823e-05, 6.445899999999935e-05, 6.466700000000089e-05, 6.50700000000004e-05, 6.501299999999918e-05, 6.473700000000221e-05, 6.454099999999782e-05, 6.517999999999802e-05, 6.52639999999989e-05, 6.479200000000102e-05, 6.442999999999727e-05, 6.479099999999807e-05, 6.536099999999989e-05, 6.465300000000132e-05, 6.484699999999982e-05, 6.519500000000053e-05, 6.440300000000107e-05, 6.486099999999939e-05, 6.482000000000016e-05, 6.466700000000089e-05, 6.497199999999995e-05, 6.534700000000032e-05, 6.456899999999696e-05, 6.447199999999945e-05, 6.461099999999914e-05, 6.52220000000002e-05, 6.486099999999939e-05, 6.480600000000059e-05, 6.476400000000188e-05, 6.509700000000007e-05, 6.465300000000132e-05, 6.502700000000222e-05, 6.473599999999927e-05, 6.486099999999939e-05, 6.436200000000183e-05, 6.459800000000251e-05, 6.476299999999893e-05, 6.497199999999995e-05, 6.469400000000056e-05, 6.456900000000043e-05, 6.479199999999755e-05, 6.436099999999889e-05, 6.50830000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:44:46.869" endtime="20201112 09:44:46.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.864" endtime="20201112 09:44:46.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.874" endtime="20201112 09:44:46.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.877" endtime="20201112 09:44:46.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.876" endtime="20201112 09:44:46.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.872" endtime="20201112 09:44:46.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.501" endtime="20201112 09:44:46.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.501" endtime="20201112 09:44:46.898"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.908" endtime="20201112 09:44:46.925"></status>
</kw>
<msg timestamp="20201112 09:44:46.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.906" endtime="20201112 09:44:46.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.926" endtime="20201112 09:44:46.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.929" endtime="20201112 09:44:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.903" endtime="20201112 09:44:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.901" endtime="20201112 09:44:46.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.938" endtime="20201112 09:44:47.226"></status>
</kw>
<msg timestamp="20201112 09:44:47.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.937" endtime="20201112 09:44:47.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.230" endtime="20201112 09:44:47.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.239" endtime="20201112 09:44:47.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.934" endtime="20201112 09:44:47.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.932" endtime="20201112 09:44:47.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:47.246" level="INFO">${RESULT} = [{'time': 0.020459708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.549999999999959e-05, 'source_diff': 6.549999999999959e-05}, {'time': 0.020529708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:47.242" endtime="20201112 09:44:47.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:47.259" level="INFO">${ACCURACY} = {'time': [0.020459708, 0.020529708, 0.020600708, 0.020671722, 0.020741764, 0.020810722, 0.020879736, 0.020954764, 0.02102475, 0.021095764, 0.021167764, 0.021237778, 0.021306778, 0.021381792, 0.0214538...</msg>
<status status="PASS" starttime="20201112 09:44:47.247" endtime="20201112 09:44:47.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.264" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:44:47.263" endtime="20201112 09:44:47.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.267" level="INFO">VALUE: [6.549999999999959e-05, 6.536099999999989e-05, 6.588899999999953e-05, 6.636100000000089e-05, 6.634699999999785e-05, 6.600000000000009e-05, 6.552799999999873e-05, 6.591700000000214e-05, 6.630599999999862e-05, 6.636100000000089e-05, 6.62359999999973e-05, 6.55969999999971e-05, 6.561100000000014e-05, 6.55700000000009e-05, 6.593099999999824e-05, 6.60969999999976e-05, 6.545800000000088e-05, 6.554099999999882e-05, 6.579099999999907e-05, 6.62359999999973e-05, 6.594399999999834e-05, 6.559700000000057e-05, 6.64029999999996e-05, 6.561100000000014e-05, 6.632000000000166e-05, 6.568099999999799e-05, 6.537500000000293e-05, 6.612500000000021e-05, 6.636200000000037e-05, 6.613899999999978e-05, 6.538899999999903e-05, 6.633299999999828e-05, 6.601399999999966e-05, 6.536099999999989e-05, 6.637500000000046e-05, 6.573600000000027e-05, 6.62639999999999e-05, 6.577799999999898e-05, 6.587499999999996e-05, 6.612500000000021e-05, 6.590300000000257e-05, 6.587499999999996e-05, 6.545800000000088e-05, 6.593100000000171e-05, 6.63480000000008e-05, 6.637500000000046e-05, 6.612500000000021e-05, 6.6277e-05, 6.62639999999999e-05, 6.606900000000193e-05]</msg>
<status status="PASS" starttime="20201112 09:44:47.265" endtime="20201112 09:44:47.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.260" endtime="20201112 09:44:47.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.271" endtime="20201112 09:44:47.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:47.274" endtime="20201112 09:44:47.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.273" endtime="20201112 09:44:47.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.269" endtime="20201112 09:44:47.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.899" endtime="20201112 09:44:47.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.899" endtime="20201112 09:44:47.296"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.305" endtime="20201112 09:44:47.322"></status>
</kw>
<msg timestamp="20201112 09:44:47.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.303" endtime="20201112 09:44:47.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.324" endtime="20201112 09:44:47.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.327" endtime="20201112 09:44:47.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.300" endtime="20201112 09:44:47.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.298" endtime="20201112 09:44:47.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.337" endtime="20201112 09:44:47.625"></status>
</kw>
<msg timestamp="20201112 09:44:47.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021337986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021404986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.335" endtime="20201112 09:44:47.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021337986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021404986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.629" endtime="20201112 09:44:47.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.638" endtime="20201112 09:44:47.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.332" endtime="20201112 09:44:47.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.331" endtime="20201112 09:44:47.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:47.645" level="INFO">${RESULT} = [{'time': 0.021404986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.700000000000109e-05, 'source_diff': 6.700000000000109e-05}, {'time': 0.021479, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:47.641" endtime="20201112 09:44:47.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:47.660" level="INFO">${ACCURACY} = {'time': [0.021404986, 0.021479, 0.021554014, 0.021628028, 0.021703028, 0.021777028, 0.021847056, 0.021918042, 0.021992069, 0.022068069, 0.022140069, 0.022214083, 0.022284083, 0.022357097, 0.022432111...</msg>
<status status="PASS" starttime="20201112 09:44:47.646" endtime="20201112 09:44:47.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.664" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:44:47.663" endtime="20201112 09:44:47.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.667" level="INFO">VALUE: [6.700000000000109e-05, 6.647200000000145e-05, 6.680599999999912e-05, 6.682000000000216e-05, 6.686099999999792e-05, 6.70419999999998e-05, 6.733399999999876e-05, 6.729200000000005e-05, 6.705499999999989e-05, 6.690200000000063e-05, 6.666599999999995e-05, 6.720799999999916e-05, 6.67770000000005e-05, 6.698599999999805e-05, 6.655499999999939e-05, 6.638900000000003e-05, 6.662500000000071e-05, 6.69030000000001e-05, 6.65969999999981e-05, 6.67640000000004e-05, 6.706999999999894e-05, 6.74299999999968e-05, 6.729200000000005e-05, 6.652799999999973e-05, 6.7277000000001e-05, 6.680599999999912e-05, 6.708299999999903e-05, 6.731899999999971e-05, 6.684700000000182e-05, 6.652799999999973e-05, 6.683299999999878e-05, 6.666699999999942e-05, 6.72090000000021e-05, 6.686099999999792e-05, 6.679199999999955e-05, 6.672199999999823e-05, 6.709799999999808e-05, 6.691699999999967e-05, 6.68619999999974e-05, 6.718000000000002e-05, 6.683300000000225e-05, 6.650000000000059e-05, 6.719399999999959e-05, 6.644399999999884e-05, 6.715300000000035e-05, 6.638900000000003e-05, 6.656900000000243e-05, 6.701400000000066e-05, 6.649999999999712e-05, 6.708400000000198e-05]</msg>
<status status="PASS" starttime="20201112 09:44:47.666" endtime="20201112 09:44:47.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.661" endtime="20201112 09:44:47.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.671" endtime="20201112 09:44:47.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:47.674" endtime="20201112 09:44:47.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.673" endtime="20201112 09:44:47.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.669" endtime="20201112 09:44:47.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.296" endtime="20201112 09:44:47.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.296" endtime="20201112 09:44:47.696"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.704" endtime="20201112 09:44:47.722"></status>
</kw>
<msg timestamp="20201112 09:44:47.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.703" endtime="20201112 09:44:47.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.724" endtime="20201112 09:44:47.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.726" endtime="20201112 09:44:47.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.700" endtime="20201112 09:44:47.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.698" endtime="20201112 09:44:47.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.737" endtime="20201112 09:44:48.027"></status>
</kw>
<msg timestamp="20201112 09:44:48.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020381944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.735" endtime="20201112 09:44:48.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020381944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.031" endtime="20201112 09:44:48.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.040" endtime="20201112 09:44:48.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.731" endtime="20201112 09:44:48.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.730" endtime="20201112 09:44:48.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:48.047" level="INFO">${RESULT} = [{'time': 0.020449944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.800000000000209e-05, 'source_diff': 6.800000000000209e-05}, {'time': 0.020526931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:48.044" endtime="20201112 09:44:48.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:48.061" level="INFO">${ACCURACY} = {'time': [0.020449944, 0.020526931, 0.020602958, 0.020675958, 0.020748972, 0.020818972, 0.020894972, 0.020970986, 0.021046028, 0.021119, 0.021194014, 0.021267014, 0.021344042, 0.021421028, 0.021498056...</msg>
<status status="PASS" starttime="20201112 09:44:48.048" endtime="20201112 09:44:48.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.066" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:44:48.065" endtime="20201112 09:44:48.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.068" level="INFO">VALUE: [6.800000000000209e-05, 6.780600000000012e-05, 6.780500000000064e-05, 6.793000000000077e-05, 6.747200000000245e-05, 6.780500000000064e-05, 6.825000000000234e-05, 6.80969999999996e-05, 6.830600000000062e-05, 6.836099999999942e-05, 6.822199999999973e-05, 6.787500000000196e-05, 6.832000000000019e-05, 6.812500000000221e-05, 6.829200000000105e-05, 6.765300000000085e-05, 6.779199999999708e-05, 6.774999999999837e-05, 6.790199999999816e-05, 6.748599999999855e-05, 6.750000000000159e-05, 6.788900000000153e-05, 6.79030000000011e-05, 6.781900000000021e-05, 6.751400000000116e-05, 6.743099999999974e-05, 6.745800000000288e-05, 6.77359999999988e-05, 6.759799999999858e-05, 6.743000000000027e-05, 6.793100000000024e-05, 6.824999999999887e-05, 6.77359999999988e-05, 6.816599999999798e-05, 6.77770000000015e-05, 6.763900000000128e-05, 6.79169999999972e-05, 6.758299999999953e-05, 6.79030000000011e-05, 6.780600000000012e-05, 6.832000000000019e-05, 6.827800000000148e-05, 6.744499999999931e-05, 6.780600000000012e-05, 6.813900000000178e-05, 6.755599999999987e-05, 6.82909999999981e-05, 6.801300000000218e-05, 6.751399999999769e-05, 6.741599999999723e-05]</msg>
<status status="PASS" starttime="20201112 09:44:48.067" endtime="20201112 09:44:48.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.062" endtime="20201112 09:44:48.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.072" endtime="20201112 09:44:48.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:48.076" endtime="20201112 09:44:48.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.074" endtime="20201112 09:44:48.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.070" endtime="20201112 09:44:48.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.697" endtime="20201112 09:44:48.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.696" endtime="20201112 09:44:48.097"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.106" endtime="20201112 09:44:48.125"></status>
</kw>
<msg timestamp="20201112 09:44:48.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.104" endtime="20201112 09:44:48.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.126" endtime="20201112 09:44:48.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.129" endtime="20201112 09:44:48.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.102" endtime="20201112 09:44:48.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.100" endtime="20201112 09:44:48.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.138" endtime="20201112 09:44:48.427"></status>
</kw>
<msg timestamp="20201112 09:44:48.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020626389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020695194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.137" endtime="20201112 09:44:48.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020626389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020695194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.431" endtime="20201112 09:44:48.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.439" endtime="20201112 09:44:48.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.134" endtime="20201112 09:44:48.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.132" endtime="20201112 09:44:48.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:48.446" level="INFO">${RESULT} = [{'time': 0.020695194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.880500000000164e-05, 'source_diff': 6.880500000000164e-05}, {'time': 0.020774264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:48.442" endtime="20201112 09:44:48.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:48.459" level="INFO">${ACCURACY} = {'time': [0.020695194, 0.020774264, 0.020851208, 0.020928222, 0.021004236, 0.021079236, 0.02115525, 0.02123225, 0.021304264, 0.021380278, 0.021457278, 0.021530361, 0.021608292, 0.021685333, 0.02176031...</msg>
<status status="PASS" starttime="20201112 09:44:48.447" endtime="20201112 09:44:48.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.464" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:44:48.463" endtime="20201112 09:44:48.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.466" level="INFO">VALUE: [6.880500000000164e-05, 6.940299999999913e-05, 6.908300000000103e-05, 6.926399999999944e-05, 6.917999999999855e-05, 6.850000000000259e-05, 6.849999999999912e-05, 6.901400000000266e-05, 6.90970000000006e-05, 6.90559999999979e-05, 6.899999999999962e-05, 6.87359999999998e-05, 6.841700000000117e-05, 6.880500000000164e-05, 6.92360000000003e-05, 6.87909999999986e-05, 6.911100000000017e-05, 6.92640000000029e-05, 6.854100000000182e-05, 6.908299999999756e-05, 6.927799999999901e-05, 6.926399999999944e-05, 6.932000000000119e-05, 6.890299999999863e-05, 6.90420000000018e-05, 6.84169999999977e-05, 6.930599999999815e-05, 6.840199999999866e-05, 6.884799999999983e-05, 6.920800000000116e-05, 6.908300000000103e-05, 6.931900000000171e-05, 6.883299999999731e-05, 6.90420000000018e-05, 6.905600000000137e-05, 6.869399999999762e-05, 6.861099999999967e-05, 6.886099999999992e-05, 6.915299999999888e-05, 6.868099999999752e-05, 6.84030000000016e-05, 6.932000000000119e-05, 6.849999999999912e-05, 6.85420000000013e-05, 6.855500000000139e-05, 6.931900000000171e-05, 6.852700000000225e-05, 6.84299999999978e-05, 6.894399999999787e-05, 6.862500000000271e-05]</msg>
<status status="PASS" starttime="20201112 09:44:48.465" endtime="20201112 09:44:48.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.460" endtime="20201112 09:44:48.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.470" endtime="20201112 09:44:48.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:48.473" endtime="20201112 09:44:48.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.472" endtime="20201112 09:44:48.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.468" endtime="20201112 09:44:48.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.098" endtime="20201112 09:44:48.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.097" endtime="20201112 09:44:48.495"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.503" endtime="20201112 09:44:48.522"></status>
</kw>
<msg timestamp="20201112 09:44:48.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.502" endtime="20201112 09:44:48.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.523" endtime="20201112 09:44:48.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.526" endtime="20201112 09:44:48.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.499" endtime="20201112 09:44:48.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.497" endtime="20201112 09:44:48.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.535" endtime="20201112 09:44:48.820"></status>
</kw>
<msg timestamp="20201112 09:44:48.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.533" endtime="20201112 09:44:48.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.825" endtime="20201112 09:44:48.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.833" endtime="20201112 09:44:48.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.531" endtime="20201112 09:44:48.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.529" endtime="20201112 09:44:48.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:48.840" level="INFO">${RESULT} = [{'time': 0.020214694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.997199999999801e-05, 'source_diff': 6.997199999999801e-05}, {'time': 0.020291681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:48.836" endtime="20201112 09:44:48.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:48.853" level="INFO">${ACCURACY} = {'time': [0.020214694, 0.020291681, 0.020370708, 0.020443722, 0.020515708, 0.020594722, 0.020670736, 0.020746736, 0.02082375, 0.02089775, 0.020971764, 0.021049778, 0.021124847, 0.021198792, 0.02127379...</msg>
<status status="PASS" starttime="20201112 09:44:48.841" endtime="20201112 09:44:48.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.857" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:44:48.856" endtime="20201112 09:44:48.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.860" level="INFO">VALUE: [6.997199999999801e-05, 6.950000000000012e-05, 7.015200000000041e-05, 6.987500000000049e-05, 6.955499999999892e-05, 6.983299999999831e-05, 6.976399999999994e-05, 6.951400000000316e-05, 7.00559999999989e-05, 6.990299999999963e-05, 7.030599999999915e-05, 7.026400000000044e-05, 7.041600000000023e-05, 7.011100000000117e-05, 6.947300000000045e-05, 6.94030000000026e-05, 6.984699999999788e-05, 7.04169999999997e-05, 6.956899999999849e-05, 7.015200000000041e-05, 7.001400000000019e-05, 6.948600000000055e-05, 6.995800000000191e-05, 6.95970000000011e-05, 6.956999999999797e-05, 7.019500000000206e-05, 7.015299999999988e-05, 6.976399999999994e-05, 7.00979999999976e-05, 6.951300000000021e-05, 7.017999999999955e-05, 6.97360000000008e-05, 7.031899999999924e-05, 6.95970000000011e-05, 7.031899999999924e-05, 7.004199999999933e-05, 7.00970000000016e-05, 7.034699999999838e-05, 6.975000000000037e-05, 7.009699999999813e-05, 7.023599999999783e-05, 7.026400000000044e-05, 6.945900000000088e-05, 6.977799999999951e-05, 6.979199999999908e-05, 7.013900000000031e-05, 6.97909999999996e-05, 7.020800000000216e-05, 7.040300000000013e-05, 7.030599999999915e-05]</msg>
<status status="PASS" starttime="20201112 09:44:48.858" endtime="20201112 09:44:48.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.854" endtime="20201112 09:44:48.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.863" endtime="20201112 09:44:48.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:48.867" endtime="20201112 09:44:48.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.865" endtime="20201112 09:44:48.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.862" endtime="20201112 09:44:48.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.496" endtime="20201112 09:44:48.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.495" endtime="20201112 09:44:48.888"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.896" endtime="20201112 09:44:48.914"></status>
</kw>
<msg timestamp="20201112 09:44:48.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.895" endtime="20201112 09:44:48.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.915" endtime="20201112 09:44:48.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.918" endtime="20201112 09:44:48.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.892" endtime="20201112 09:44:48.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.890" endtime="20201112 09:44:48.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.927" endtime="20201112 09:44:49.213"></status>
</kw>
<msg timestamp="20201112 09:44:49.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.925" endtime="20201112 09:44:49.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.217" endtime="20201112 09:44:49.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.225" endtime="20201112 09:44:49.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.923" endtime="20201112 09:44:49.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.921" endtime="20201112 09:44:49.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.232" level="INFO">${RESULT} = [{'time': 0.019866917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.070900000000213e-05, 'source_diff': 7.070900000000213e-05}, {'time': 0.019940917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:49.229" endtime="20201112 09:44:49.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:49.247" level="INFO">${ACCURACY} = {'time': [0.019866917, 0.019940917, 0.020017944, 0.020095931, 0.020174944, 0.020248958, 0.020324958, 0.020398972, 0.020475, 0.020554986, 0.020631, 0.020711, 0.020791014, 0.020865028, 0.020940028, 0.02...</msg>
<status status="PASS" starttime="20201112 09:44:49.233" endtime="20201112 09:44:49.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.251" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:44:49.250" endtime="20201112 09:44:49.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.254" level="INFO">VALUE: [7.070900000000213e-05, 7.12499999999984e-05, 7.070799999999919e-05, 7.080599999999965e-05, 7.109699999999913e-05, 7.07910000000006e-05, 7.094399999999987e-05, 7.126400000000144e-05, 7.119400000000012e-05, 7.058299999999906e-05, 7.063900000000081e-05, 7.040300000000013e-05, 7.043099999999927e-05, 7.125000000000187e-05, 7.106999999999947e-05, 7.094499999999934e-05, 7.05689999999995e-05, 7.045900000000188e-05, 7.079099999999713e-05, 7.065200000000091e-05, 7.077700000000103e-05, 7.109699999999913e-05, 7.091600000000073e-05, 7.115300000000088e-05, 7.138899999999809e-05, 7.07360000000018e-05, 7.086100000000192e-05, 7.086100000000192e-05, 7.056999999999897e-05, 7.065299999999691e-05, 7.116700000000045e-05, 7.136199999999843e-05, 7.087500000000149e-05, 7.080500000000017e-05, 7.059699999999863e-05, 7.076400000000094e-05, 7.108299999999956e-05, 7.04169999999997e-05, 7.086100000000192e-05, 7.063900000000081e-05, 7.126399999999797e-05, 7.084699999999888e-05, 7.113900000000131e-05, 7.065299999999691e-05, 7.077800000000051e-05, 7.079200000000008e-05, 7.133299999999981e-05, 7.083299999999931e-05, 7.055499999999992e-05, 7.083299999999931e-05]</msg>
<status status="PASS" starttime="20201112 09:44:49.252" endtime="20201112 09:44:49.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.248" endtime="20201112 09:44:49.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.257" endtime="20201112 09:44:49.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.261" endtime="20201112 09:44:49.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.259" endtime="20201112 09:44:49.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.256" endtime="20201112 09:44:49.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.889" endtime="20201112 09:44:49.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.888" endtime="20201112 09:44:49.281"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.290" endtime="20201112 09:44:49.308"></status>
</kw>
<msg timestamp="20201112 09:44:49.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.289" endtime="20201112 09:44:49.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.309" endtime="20201112 09:44:49.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.312" endtime="20201112 09:44:49.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.286" endtime="20201112 09:44:49.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.284" endtime="20201112 09:44:49.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.321" endtime="20201112 09:44:49.608"></status>
</kw>
<msg timestamp="20201112 09:44:49.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020528764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.319" endtime="20201112 09:44:49.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020528764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.612" endtime="20201112 09:44:49.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.621" endtime="20201112 09:44:49.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.317" endtime="20201112 09:44:49.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.315" endtime="20201112 09:44:49.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.627" level="INFO">${RESULT} = [{'time': 0.020600319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.155499999999745e-05, 'source_diff': 7.155499999999745e-05}, {'time': 0.020676319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:49.624" endtime="20201112 09:44:49.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:49.641" level="INFO">${ACCURACY} = {'time': [0.020600319, 0.020676319, 0.020750347, 0.020827347, 0.020902347, 0.020982361, 0.021058375, 0.021139375, 0.021219389, 0.021295403, 0.021371417, 0.021447444, 0.021526458, 0.021606444, 0.021683...</msg>
<status status="PASS" starttime="20201112 09:44:49.628" endtime="20201112 09:44:49.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.645" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:44:49.644" endtime="20201112 09:44:49.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.648" level="INFO">VALUE: [7.155499999999745e-05, 7.165199999999844e-05, 7.151399999999822e-05, 7.162499999999877e-05, 7.202800000000176e-05, 7.154200000000083e-05, 7.143100000000027e-05, 7.166699999999748e-05, 7.202800000000176e-05, 7.215300000000188e-05, 7.215300000000188e-05, 7.192999999999783e-05, 7.184699999999988e-05, 7.234700000000038e-05, 7.219399999999765e-05, 7.177699999999856e-05, 7.234700000000038e-05, 7.216700000000145e-05, 7.144400000000037e-05, 7.22499999999994e-05, 7.197200000000001e-05, 7.233300000000081e-05, 7.173599999999933e-05, 7.2069000000001e-05, 7.159699999999963e-05, 7.223599999999983e-05, 7.230600000000115e-05, 7.234700000000038e-05, 7.138800000000209e-05, 7.154100000000135e-05, 7.188900000000206e-05, 7.168100000000052e-05, 7.176399999999847e-05, 7.14170000000007e-05, 7.138899999999809e-05, 7.209700000000013e-05, 7.188900000000206e-05, 7.158300000000006e-05, 7.213899999999884e-05, 7.201399999999872e-05, 7.16109999999992e-05, 7.226399999999897e-05, 7.140199999999819e-05, 7.231900000000124e-05, 7.14300000000008e-05, 7.18049999999977e-05, 7.205500000000142e-05, 7.16109999999992e-05, 7.180500000000117e-05, 7.226399999999897e-05]</msg>
<status status="PASS" starttime="20201112 09:44:49.646" endtime="20201112 09:44:49.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.642" endtime="20201112 09:44:49.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.651" endtime="20201112 09:44:49.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.655" endtime="20201112 09:44:49.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.653" endtime="20201112 09:44:49.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.650" endtime="20201112 09:44:49.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.282" endtime="20201112 09:44:49.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.282" endtime="20201112 09:44:49.676"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.684" endtime="20201112 09:44:49.702"></status>
</kw>
<msg timestamp="20201112 09:44:49.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.683" endtime="20201112 09:44:49.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.703" endtime="20201112 09:44:49.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.706" endtime="20201112 09:44:49.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.680" endtime="20201112 09:44:49.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.678" endtime="20201112 09:44:49.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.715" endtime="20201112 09:44:50.002"></status>
</kw>
<msg timestamp="20201112 09:44:50.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020563736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020636194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.713" endtime="20201112 09:44:50.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020563736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020636194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.006" endtime="20201112 09:44:50.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.014" endtime="20201112 09:44:50.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.711" endtime="20201112 09:44:50.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.709" endtime="20201112 09:44:50.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:50.021" level="INFO">${RESULT} = [{'time': 0.020636194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.245800000000094e-05, 'source_diff': 7.245800000000094e-05}, {'time': 0.020716208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:50.017" endtime="20201112 09:44:50.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:50.034" level="INFO">${ACCURACY} = {'time': [0.020636194, 0.020716208, 0.020792222, 0.020869222, 0.020946236, 0.021029236, 0.02110425, 0.02118125, 0.021257264, 0.021339278, 0.021415278, 0.021494292, 0.021572361, 0.021652306, 0.02173131...</msg>
<status status="PASS" starttime="20201112 09:44:50.022" endtime="20201112 09:44:50.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.038" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:44:50.037" endtime="20201112 09:44:50.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.041" level="INFO">VALUE: [7.245800000000094e-05, 7.249999999999965e-05, 7.283299999999784e-05, 7.329099999999963e-05, 7.315299999999941e-05, 7.334700000000138e-05, 7.25690000000015e-05, 7.330599999999868e-05, 7.237500000000299e-05, 7.290299999999916e-05, 7.247200000000051e-05, 7.323600000000083e-05, 7.32500000000004e-05, 7.291699999999873e-05, 7.316599999999951e-05, 7.288899999999959e-05, 7.273600000000033e-05, 7.290299999999916e-05, 7.272200000000076e-05, 7.266699999999848e-05, 7.27499999999999e-05, 7.273600000000033e-05, 7.280599999999818e-05, 7.25690000000015e-05, 7.298600000000058e-05, 7.298700000000005e-05, 7.322300000000073e-05, 7.282000000000122e-05, 7.291699999999873e-05, 7.279099999999913e-05, 7.254200000000183e-05, 7.266600000000248e-05, 7.281899999999827e-05, 7.333300000000181e-05, 7.3069000000002e-05, 7.320800000000169e-05, 7.29309999999983e-05, 7.26110000000002e-05, 7.255599999999793e-05, 7.266700000000195e-05, 7.280599999999818e-05, 7.248600000000008e-05, 7.254099999999888e-05, 7.277799999999904e-05, 7.283299999999784e-05, 7.272200000000076e-05, 7.315299999999941e-05, 7.305500000000242e-05, 7.258300000000106e-05, 7.316700000000245e-05]</msg>
<status status="PASS" starttime="20201112 09:44:50.040" endtime="20201112 09:44:50.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.035" endtime="20201112 09:44:50.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.044" endtime="20201112 09:44:50.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:50.048" endtime="20201112 09:44:50.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.046" endtime="20201112 09:44:50.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.043" endtime="20201112 09:44:50.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.676" endtime="20201112 09:44:50.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.676" endtime="20201112 09:44:50.069"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.078" endtime="20201112 09:44:50.095"></status>
</kw>
<msg timestamp="20201112 09:44:50.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.076" endtime="20201112 09:44:50.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.097" endtime="20201112 09:44:50.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.099" endtime="20201112 09:44:50.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.073" endtime="20201112 09:44:50.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.071" endtime="20201112 09:44:50.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.108" endtime="20201112 09:44:50.395"></status>
</kw>
<msg timestamp="20201112 09:44:50.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.106" endtime="20201112 09:44:50.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.400" endtime="20201112 09:44:50.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.408" endtime="20201112 09:44:50.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.104" endtime="20201112 09:44:50.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.102" endtime="20201112 09:44:50.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:50.415" level="INFO">${RESULT} = [{'time': 0.019909278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.344499999999837e-05, 'source_diff': 7.344499999999837e-05}, {'time': 0.019987264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:50.411" endtime="20201112 09:44:50.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:50.428" level="INFO">${ACCURACY} = {'time': [0.019909278, 0.019987264, 0.020067278, 0.020147292, 0.020230292, 0.020314347, 0.020393319, 0.020472319, 0.020553333, 0.020629361, 0.020709347, 0.020792361, 0.020874375, 0.020951375, 0.021034...</msg>
<status status="PASS" starttime="20201112 09:44:50.416" endtime="20201112 09:44:50.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.432" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:44:50.431" endtime="20201112 09:44:50.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.435" level="INFO">VALUE: [7.344499999999837e-05, 7.413900000000084e-05, 7.37500000000009e-05, 7.369500000000209e-05, 7.429200000000011e-05, 7.440300000000066e-05, 7.387500000000102e-05, 7.418000000000008e-05, 7.420799999999922e-05, 7.351400000000022e-05, 7.415300000000041e-05, 7.366699999999948e-05, 7.377800000000004e-05, 7.426400000000097e-05, 7.359700000000163e-05, 7.37500000000009e-05, 7.390300000000016e-05, 7.419499999999912e-05, 7.387500000000102e-05, 7.398600000000158e-05, 7.350000000000065e-05, 7.348599999999761e-05, 7.347199999999804e-05, 7.43050000000002e-05, 7.392999999999983e-05, 7.430599999999968e-05, 7.409700000000213e-05, 7.430599999999968e-05, 7.345800000000194e-05, 7.386100000000145e-05, 7.355599999999893e-05, 7.419499999999912e-05, 7.431999999999925e-05, 7.408400000000204e-05, 7.369400000000262e-05, 7.427700000000106e-05, 7.415300000000041e-05, 7.35829999999986e-05, 7.433299999999934e-05, 7.359700000000163e-05, 7.402800000000029e-05, 7.379199999999961e-05, 7.388900000000059e-05, 7.372199999999829e-05, 7.377700000000056e-05, 7.368000000000305e-05, 7.355599999999893e-05, 7.387499999999755e-05, 7.38049999999997e-05, 7.342999999999933e-05]</msg>
<status status="PASS" starttime="20201112 09:44:50.433" endtime="20201112 09:44:50.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.429" endtime="20201112 09:44:50.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.438" endtime="20201112 09:44:50.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:50.442" endtime="20201112 09:44:50.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.440" endtime="20201112 09:44:50.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.437" endtime="20201112 09:44:50.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.070" endtime="20201112 09:44:50.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.069" endtime="20201112 09:44:50.463"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.471" endtime="20201112 09:44:50.489"></status>
</kw>
<msg timestamp="20201112 09:44:50.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.470" endtime="20201112 09:44:50.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.490" endtime="20201112 09:44:50.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.493" endtime="20201112 09:44:50.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.467" endtime="20201112 09:44:50.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.465" endtime="20201112 09:44:50.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.502" endtime="20201112 09:44:50.789"></status>
</kw>
<msg timestamp="20201112 09:44:50.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.500" endtime="20201112 09:44:50.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.793" endtime="20201112 09:44:50.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.802" endtime="20201112 09:44:50.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.498" endtime="20201112 09:44:50.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.496" endtime="20201112 09:44:50.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:50.808" level="INFO">${RESULT} = [{'time': 0.019865208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.53189999999973e-05, 'source_diff': 7.53189999999973e-05}, {'time': 0.019942236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:50.805" endtime="20201112 09:44:50.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:50.823" level="INFO">${ACCURACY} = {'time': [0.019865208, 0.019942236, 0.020025208, 0.020107222, 0.020189222, 0.020273236, 0.02035625, 0.02043525, 0.020513278, 0.020597292, 0.020680278, 0.020763292, 0.020848306, 0.020927319, 0.02100838...</msg>
<status status="PASS" starttime="20201112 09:44:50.809" endtime="20201112 09:44:50.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.828" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:44:50.826" endtime="20201112 09:44:50.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.830" level="INFO">VALUE: [7.53189999999973e-05, 7.452799999999732e-05, 7.509699999999966e-05, 7.529100000000163e-05, 7.48050000000007e-05, 7.529200000000111e-05, 7.533300000000034e-05, 7.530599999999721e-05, 7.533399999999982e-05, 7.468100000000005e-05, 7.509699999999966e-05, 7.431999999999925e-05, 7.534799999999939e-05, 7.481900000000027e-05, 7.520800000000022e-05, 7.46249999999983e-05, 7.455500000000045e-05, 7.502800000000129e-05, 7.509699999999966e-05, 7.473599999999886e-05, 7.474999999999843e-05, 7.515299999999794e-05, 7.487499999999855e-05, 7.473599999999886e-05, 7.51249999999988e-05, 7.448599999999861e-05, 7.483400000000279e-05, 7.459799999999864e-05, 7.474999999999843e-05, 7.495799999999997e-05, 7.52500000000024e-05, 7.527799999999807e-05, 7.456900000000002e-05, 7.47500000000019e-05, 7.473600000000233e-05, 7.483399999999932e-05, 7.477800000000104e-05, 7.480600000000018e-05, 7.508399999999957e-05, 7.451400000000122e-05, 7.483299999999984e-05, 7.495900000000291e-05, 7.450000000000165e-05, 7.506900000000052e-05, 7.50830000000001e-05, 7.465300000000091e-05, 7.455500000000045e-05, 7.49440000000004e-05, 7.527800000000154e-05, 7.473599999999886e-05]</msg>
<status status="PASS" starttime="20201112 09:44:50.829" endtime="20201112 09:44:50.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.824" endtime="20201112 09:44:50.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.833" endtime="20201112 09:44:50.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:50.837" endtime="20201112 09:44:50.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.835" endtime="20201112 09:44:50.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.832" endtime="20201112 09:44:50.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.464" endtime="20201112 09:44:50.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.463" endtime="20201112 09:44:50.858"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.866" endtime="20201112 09:44:50.885"></status>
</kw>
<msg timestamp="20201112 09:44:50.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.865" endtime="20201112 09:44:50.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.887" endtime="20201112 09:44:50.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.889" endtime="20201112 09:44:50.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.862" endtime="20201112 09:44:50.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.860" endtime="20201112 09:44:50.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.898" endtime="20201112 09:44:51.184"></status>
</kw>
<msg timestamp="20201112 09:44:51.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.896" endtime="20201112 09:44:51.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.188" endtime="20201112 09:44:51.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.196" endtime="20201112 09:44:51.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.894" endtime="20201112 09:44:51.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.892" endtime="20201112 09:44:51.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.203" level="INFO">${RESULT} = [{'time': 0.019832486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.630499999999873e-05, 'source_diff': 7.630499999999873e-05}, {'time': 0.019911514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:51.200" endtime="20201112 09:44:51.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:51.216" level="INFO">${ACCURACY} = {'time': [0.019832486, 0.019911514, 0.019990514, 0.020070514, 0.020152528, 0.020236528, 0.020314542, 0.020394569, 0.020475556, 0.020556569, 0.020636583, 0.020716597, 0.020797653, 0.020876625, 0.020956...</msg>
<status status="PASS" starttime="20201112 09:44:51.204" endtime="20201112 09:44:51.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.221" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:44:51.220" endtime="20201112 09:44:51.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.223" level="INFO">VALUE: [7.630499999999873e-05, 7.563900000000234e-05, 7.56249999999993e-05, 7.58890000000026e-05, 7.5763999999999e-05, 7.533399999999982e-05, 7.577800000000204e-05, 7.591600000000226e-05, 7.56249999999993e-05, 7.566599999999854e-05, 7.586099999999998e-05, 7.559700000000016e-05, 7.545899999999994e-05, 7.63189999999983e-05, 7.559700000000016e-05, 7.558400000000007e-05, 7.547200000000004e-05, 7.59029999999987e-05, 7.561099999999973e-05, 7.62639999999995e-05, 7.582000000000075e-05, 7.565300000000191e-05, 7.604199999999839e-05, 7.573599999999986e-05, 7.544399999999743e-05, 7.597200000000054e-05, 7.577800000000204e-05, 7.559700000000016e-05, 7.584700000000041e-05, 7.630600000000168e-05, 7.558400000000007e-05, 7.636100000000048e-05, 7.53890000000021e-05, 7.594500000000087e-05, 7.563899999999887e-05, 7.592999999999836e-05, 7.630499999999873e-05, 7.63189999999983e-05, 7.606899999999805e-05, 7.623600000000036e-05, 7.623600000000036e-05, 7.591699999999826e-05, 7.623600000000036e-05, 7.569500000000062e-05, 7.630600000000168e-05, 7.630600000000168e-05, 7.634800000000039e-05, 7.583400000000032e-05, 7.59440000000014e-05, 7.604099999999892e-05]</msg>
<status status="PASS" starttime="20201112 09:44:51.222" endtime="20201112 09:44:51.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.217" endtime="20201112 09:44:51.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.231" endtime="20201112 09:44:51.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.234" endtime="20201112 09:44:51.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.233" endtime="20201112 09:44:51.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.229" endtime="20201112 09:44:51.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.859" endtime="20201112 09:44:51.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.858" endtime="20201112 09:44:51.255"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.264" endtime="20201112 09:44:51.282"></status>
</kw>
<msg timestamp="20201112 09:44:51.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.262" endtime="20201112 09:44:51.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.283" endtime="20201112 09:44:51.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.286" endtime="20201112 09:44:51.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.259" endtime="20201112 09:44:51.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.257" endtime="20201112 09:44:51.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.295" endtime="20201112 09:44:51.581"></status>
</kw>
<msg timestamp="20201112 09:44:51.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.293" endtime="20201112 09:44:51.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.586" endtime="20201112 09:44:51.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.594" endtime="20201112 09:44:51.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.291" endtime="20201112 09:44:51.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.289" endtime="20201112 09:44:51.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.601" level="INFO">${RESULT} = [{'time': 0.019863028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.669500000000162e-05, 'source_diff': 7.669500000000162e-05}, {'time': 0.019945042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:51.597" endtime="20201112 09:44:51.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:51.614" level="INFO">${ACCURACY} = {'time': [0.019863028, 0.019945042, 0.020026042, 0.020112042, 0.020194056, 0.020274069, 0.020357083, 0.020443083, 0.020522097, 0.020608111, 0.020687167, 0.020769125, 0.020854139, 0.020936139, 0.021016...</msg>
<status status="PASS" starttime="20201112 09:44:51.602" endtime="20201112 09:44:51.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.619" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:44:51.617" endtime="20201112 09:44:51.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.621" level="INFO">VALUE: [7.669500000000162e-05, 7.695899999999797e-05, 7.641700000000223e-05, 7.713900000000037e-05, 7.734799999999792e-05, 7.726299999999756e-05, 7.716600000000004e-05, 7.71250000000008e-05, 7.655499999999898e-05, 7.666699999999901e-05, 7.66250000000003e-05, 7.663899999999987e-05, 7.679199999999914e-05, 7.69449999999984e-05, 7.679199999999914e-05, 7.711199999999724e-05, 7.638899999999962e-05, 7.730600000000268e-05, 7.679099999999967e-05, 7.661100000000073e-05, 7.654099999999942e-05, 7.733300000000234e-05, 7.643000000000233e-05, 7.68189999999988e-05, 7.675000000000043e-05, 7.708299999999862e-05, 7.702799999999982e-05, 7.638899999999962e-05, 7.643099999999833e-05, 7.652699999999985e-05, 7.734699999999844e-05, 7.686099999999751e-05, 7.687500000000055e-05, 7.72640000000005e-05, 7.706900000000252e-05, 7.642999999999886e-05, 7.656900000000202e-05, 7.673599999999739e-05, 7.670799999999825e-05, 7.647200000000104e-05, 7.732000000000225e-05, 7.727800000000007e-05, 7.718100000000255e-05, 7.649999999999671e-05, 7.638800000000015e-05, 7.665199999999997e-05, 7.70830000000021e-05, 7.733300000000234e-05, 7.679199999999914e-05, 7.655499999999898e-05]</msg>
<status status="PASS" starttime="20201112 09:44:51.620" endtime="20201112 09:44:51.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.615" endtime="20201112 09:44:51.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.624" endtime="20201112 09:44:51.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.628" endtime="20201112 09:44:51.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.626" endtime="20201112 09:44:51.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.623" endtime="20201112 09:44:51.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.256" endtime="20201112 09:44:51.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.255" endtime="20201112 09:44:51.649"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.658" endtime="20201112 09:44:51.676"></status>
</kw>
<msg timestamp="20201112 09:44:51.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.656" endtime="20201112 09:44:51.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.677" endtime="20201112 09:44:51.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.680" endtime="20201112 09:44:51.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.653" endtime="20201112 09:44:51.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.651" endtime="20201112 09:44:51.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.689" endtime="20201112 09:44:51.975"></status>
</kw>
<msg timestamp="20201112 09:44:51.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:51.687" endtime="20201112 09:44:51.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:51.979" endtime="20201112 09:44:51.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.988" endtime="20201112 09:44:51.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.685" endtime="20201112 09:44:51.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.683" endtime="20201112 09:44:51.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.994" level="INFO">${RESULT} = [{'time': 0.019883986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.748599999999814e-05, 'source_diff': 7.748599999999814e-05}, {'time': 0.019967, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:51.991" endtime="20201112 09:44:51.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:52.007" level="INFO">${ACCURACY} = {'time': [0.019883986, 0.019967, 0.020047, 0.020128028, 0.020209042, 0.020296042, 0.020377042, 0.020464056, 0.020545056, 0.020629069, 0.020710097, 0.020797097, 0.020885097, 0.020969111, 0.021053125, 0...</msg>
<status status="PASS" starttime="20201112 09:44:51.995" endtime="20201112 09:44:52.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.012" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:44:52.011" endtime="20201112 09:44:52.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.014" level="INFO">VALUE: [7.748599999999814e-05, 7.747199999999857e-05, 7.770799999999925e-05, 7.755599999999946e-05, 7.780599999999971e-05, 7.759800000000164e-05, 7.833400000000282e-05, 7.758400000000207e-05, 7.784799999999842e-05, 7.793000000000036e-05, 7.787500000000155e-05, 7.788900000000112e-05, 7.834699999999944e-05, 7.819400000000018e-05, 7.774999999999796e-05, 7.806900000000006e-05, 7.779200000000014e-05, 7.754199999999989e-05, 7.815299999999747e-05, 7.766700000000001e-05, 7.759800000000164e-05, 7.836099999999901e-05, 7.826399999999803e-05, 7.783299999999937e-05, 7.780500000000024e-05, 7.765300000000044e-05, 7.749999999999771e-05, 7.761100000000173e-05, 7.751400000000075e-05, 7.775000000000143e-05, 7.76389999999974e-05, 7.745899999999847e-05, 7.802799999999735e-05, 7.772200000000229e-05, 7.804200000000039e-05, 7.743000000000333e-05, 7.806900000000006e-05, 7.754100000000042e-05, 7.793000000000036e-05, 7.81389999999979e-05, 7.797200000000254e-05, 7.79030000000007e-05, 7.833399999999935e-05, 7.791700000000026e-05, 7.775000000000143e-05, 7.804200000000039e-05, 7.802699999999788e-05, 7.769399999999968e-05, 7.802699999999788e-05, 7.815299999999747e-05]</msg>
<status status="PASS" starttime="20201112 09:44:52.013" endtime="20201112 09:44:52.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.008" endtime="20201112 09:44:52.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.018" endtime="20201112 09:44:52.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:52.021" endtime="20201112 09:44:52.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.020" endtime="20201112 09:44:52.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.016" endtime="20201112 09:44:52.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.650" endtime="20201112 09:44:52.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.649" endtime="20201112 09:44:52.042"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.051" endtime="20201112 09:44:52.069"></status>
</kw>
<msg timestamp="20201112 09:44:52.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.049" endtime="20201112 09:44:52.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.071" endtime="20201112 09:44:52.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.073" endtime="20201112 09:44:52.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.047" endtime="20201112 09:44:52.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.045" endtime="20201112 09:44:52.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.082" endtime="20201112 09:44:52.368"></status>
</kw>
<msg timestamp="20201112 09:44:52.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.081" endtime="20201112 09:44:52.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.373" endtime="20201112 09:44:52.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.381" endtime="20201112 09:44:52.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.078" endtime="20201112 09:44:52.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.077" endtime="20201112 09:44:52.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:52.388" level="INFO">${RESULT} = [{'time': 0.019945764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.866700000000101e-05, 'source_diff': 7.866700000000101e-05}, {'time': 0.020033764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:52.384" endtime="20201112 09:44:52.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:52.403" level="INFO">${ACCURACY} = {'time': [0.019945764, 0.020033764, 0.020121792, 0.020203792, 0.020289792, 0.020375819, 0.020460833, 0.020544875, 0.020629833, 0.020712861, 0.020798847, 0.020883861, 0.020969875, 0.021051889, 0.021133...</msg>
<status status="PASS" starttime="20201112 09:44:52.389" endtime="20201112 09:44:52.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.408" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:44:52.407" endtime="20201112 09:44:52.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.410" level="INFO">VALUE: [7.866700000000101e-05, 7.866699999999754e-05, 7.89169999999978e-05, 7.92640000000025e-05, 7.918100000000108e-05, 7.85129999999988e-05, 7.916600000000204e-05, 7.874999999999896e-05, 7.899999999999921e-05, 7.844400000000043e-05, 7.844400000000043e-05, 7.876399999999853e-05, 7.856900000000056e-05, 7.879200000000114e-05, 7.930500000000174e-05, 7.857000000000003e-05, 7.85969999999997e-05, 7.847300000000251e-05, 7.84449999999999e-05, 7.90129999999993e-05, 7.847199999999957e-05, 7.8458e-05, 7.909699999999673e-05, 7.868100000000058e-05, 7.924999999999946e-05, 7.874999999999896e-05, 7.855600000000046e-05, 7.86389999999984e-05, 7.904200000000139e-05, 7.862499999999883e-05, 7.883399999999985e-05, 7.859799999999917e-05, 7.908300000000063e-05, 7.852700000000185e-05, 7.868000000000111e-05, 7.906900000000106e-05, 7.911099999999976e-05, 7.930500000000174e-05, 7.850000000000218e-05, 7.90970000000002e-05, 7.908300000000063e-05, 7.851399999999828e-05, 7.838899999999815e-05, 7.905500000000149e-05, 7.911099999999976e-05, 7.92779999999986e-05, 7.840200000000172e-05, 7.879200000000114e-05, 7.930500000000174e-05, 7.901400000000225e-05]</msg>
<status status="PASS" starttime="20201112 09:44:52.409" endtime="20201112 09:44:52.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.404" endtime="20201112 09:44:52.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.414" endtime="20201112 09:44:52.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:52.417" endtime="20201112 09:44:52.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.416" endtime="20201112 09:44:52.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.412" endtime="20201112 09:44:52.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.043" endtime="20201112 09:44:52.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.042" endtime="20201112 09:44:52.438"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.447" endtime="20201112 09:44:52.465"></status>
</kw>
<msg timestamp="20201112 09:44:52.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.445" endtime="20201112 09:44:52.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.466" endtime="20201112 09:44:52.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.469" endtime="20201112 09:44:52.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.442" endtime="20201112 09:44:52.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.440" endtime="20201112 09:44:52.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.478" endtime="20201112 09:44:52.764"></status>
</kw>
<msg timestamp="20201112 09:44:52.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.476" endtime="20201112 09:44:52.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.768" endtime="20201112 09:44:52.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.777" endtime="20201112 09:44:52.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.473" endtime="20201112 09:44:52.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.472" endtime="20201112 09:44:52.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:52.783" level="INFO">${RESULT} = [{'time': 0.019839056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.970900000000072e-05, 'source_diff': 7.970900000000072e-05}, {'time': 0.019926042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:52.780" endtime="20201112 09:44:52.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:52.797" level="INFO">${ACCURACY} = {'time': [0.019839056, 0.019926042, 0.020015097, 0.020097056, 0.020184069, 0.020268069, 0.020353069, 0.020441083, 0.020526097, 0.020614097, 0.020696125, 0.020784139, 0.020871125, 0.020957208, 0.021045...</msg>
<status status="PASS" starttime="20201112 09:44:52.784" endtime="20201112 09:44:52.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.801" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:44:52.800" endtime="20201112 09:44:52.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.804" level="INFO">VALUE: [7.970900000000072e-05, 7.982000000000128e-05, 7.948600000000014e-05, 7.981999999999781e-05, 8.023599999999742e-05, 7.95970000000007e-05, 8.011100000000076e-05, 7.984699999999748e-05, 7.940299999999872e-05, 7.977800000000257e-05, 7.951399999999928e-05, 7.955600000000146e-05, 7.956900000000156e-05, 8.030500000000274e-05, 8.032000000000178e-05, 7.965299999999897e-05, 8.018099999999861e-05, 8.031899999999884e-05, 7.98329999999979e-05, 8.036100000000101e-05, 8.002799999999935e-05, 8.01389999999999e-05, 8.036099999999755e-05, 7.956899999999809e-05, 7.961100000000026e-05, 7.99719999999976e-05, 7.937499999999958e-05, 7.974999999999996e-05, 7.966700000000201e-05, 7.955499999999852e-05, 7.990299999999922e-05, 8.001399999999978e-05, 8.026400000000003e-05, 7.986100000000051e-05, 8.018100000000208e-05, 7.94030000000022e-05, 7.986100000000051e-05, 8.001399999999978e-05, 8.01389999999999e-05, 8.006999999999806e-05, 8.000000000000021e-05, 8.04169999999993e-05, 7.963799999999993e-05, 8.036100000000101e-05, 7.973600000000039e-05, 7.9458000000001e-05, 7.96389999999994e-05, 7.968000000000211e-05, 7.962499999999983e-05, 7.947300000000004e-05]</msg>
<status status="PASS" starttime="20201112 09:44:52.802" endtime="20201112 09:44:52.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.798" endtime="20201112 09:44:52.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.807" endtime="20201112 09:44:52.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:52.811" endtime="20201112 09:44:52.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.809" endtime="20201112 09:44:52.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.806" endtime="20201112 09:44:52.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.439" endtime="20201112 09:44:52.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.438" endtime="20201112 09:44:52.832"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.840" endtime="20201112 09:44:52.858"></status>
</kw>
<msg timestamp="20201112 09:44:52.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.839" endtime="20201112 09:44:52.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.860" endtime="20201112 09:44:52.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.862" endtime="20201112 09:44:52.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.836" endtime="20201112 09:44:52.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.834" endtime="20201112 09:44:52.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.871" endtime="20201112 09:44:53.157"></status>
</kw>
<msg timestamp="20201112 09:44:53.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019775861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.870" endtime="20201112 09:44:53.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019775861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.162" endtime="20201112 09:44:53.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.170" endtime="20201112 09:44:53.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.867" endtime="20201112 09:44:53.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.865" endtime="20201112 09:44:53.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:53.177" level="INFO">${RESULT} = [{'time': 0.019856681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082000000000228e-05, 'source_diff': 8.082000000000228e-05}, {'time': 0.019945681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:53.173" endtime="20201112 09:44:53.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:53.190" level="INFO">${ACCURACY} = {'time': [0.019856681, 0.019945681, 0.020034694, 0.020120722, 0.020207708, 0.020292722, 0.02038175, 0.020469736, 0.02055475, 0.020645778, 0.020729764, 0.020816847, 0.020906806, 0.020992806, 0.02107880...</msg>
<status status="PASS" starttime="20201112 09:44:53.178" endtime="20201112 09:44:53.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.194" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:44:53.193" endtime="20201112 09:44:53.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.197" level="INFO">VALUE: [8.082000000000228e-05, 8.125000000000146e-05, 8.062499999999737e-05, 8.073600000000139e-05, 8.076400000000053e-05, 8.106899999999959e-05, 8.056899999999909e-05, 8.126399999999756e-05, 8.090300000000022e-05, 8.137500000000158e-05, 8.061100000000126e-05, 8.08329999999989e-05, 8.043099999999886e-05, 8.088900000000065e-05, 8.047299999999757e-05, 8.087500000000108e-05, 8.1152999999997e-05, 8.037500000000058e-05, 8.134699999999898e-05, 8.061100000000126e-05, 8.044399999999896e-05, 8.07780000000001e-05, 8.068099999999911e-05, 8.061100000000126e-05, 8.133399999999888e-05, 8.086099999999805e-05, 8.101400000000078e-05, 8.105500000000002e-05, 8.129200000000017e-05, 8.12780000000006e-05, 8.055499999999952e-05, 8.112499999999787e-05, 8.065299999999997e-05, 8.050000000000071e-05, 8.073599999999792e-05, 8.051400000000028e-05, 8.131899999999984e-05, 8.080499999999977e-05, 8.083400000000185e-05, 8.086200000000099e-05, 8.091600000000032e-05, 8.131899999999984e-05, 8.066600000000007e-05, 8.119399999999971e-05, 8.08190000000028e-05, 8.119399999999971e-05, 8.072199999999835e-05, 8.083300000000238e-05, 8.05970000000017e-05, 8.070899999999825e-05]</msg>
<status status="PASS" starttime="20201112 09:44:53.195" endtime="20201112 09:44:53.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.191" endtime="20201112 09:44:53.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.200" endtime="20201112 09:44:53.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:53.204" endtime="20201112 09:44:53.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.202" endtime="20201112 09:44:53.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.199" endtime="20201112 09:44:53.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.832" endtime="20201112 09:44:53.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.832" endtime="20201112 09:44:53.224"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.233" endtime="20201112 09:44:53.252"></status>
</kw>
<msg timestamp="20201112 09:44:53.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.232" endtime="20201112 09:44:53.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.253" endtime="20201112 09:44:53.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.256" endtime="20201112 09:44:53.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.229" endtime="20201112 09:44:53.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.227" endtime="20201112 09:44:53.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.265" endtime="20201112 09:44:53.552"></status>
</kw>
<msg timestamp="20201112 09:44:53.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019814417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.263" endtime="20201112 09:44:53.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019814417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.556" endtime="20201112 09:44:53.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.564" endtime="20201112 09:44:53.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.260" endtime="20201112 09:44:53.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.259" endtime="20201112 09:44:53.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:53.571" level="INFO">${RESULT} = [{'time': 0.019896625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.220800000000028e-05, 'source_diff': 8.220800000000028e-05}, {'time': 0.019987639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:53.567" endtime="20201112 09:44:53.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:53.584" level="INFO">${ACCURACY} = {'time': [0.019896625, 0.019987639, 0.020076639, 0.020164653, 0.020248722, 0.020336681, 0.020422681, 0.020507708, 0.020598722, 0.020685708, 0.020771736, 0.020860778, 0.02094575, 0.02103175, 0.02111880...</msg>
<status status="PASS" starttime="20201112 09:44:53.572" endtime="20201112 09:44:53.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.589" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:44:53.588" endtime="20201112 09:44:53.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.591" level="INFO">VALUE: [8.220800000000028e-05, 8.205600000000049e-05, 8.180600000000024e-05, 8.168100000000011e-05, 8.184699999999948e-05, 8.174999999999849e-05, 8.190300000000122e-05, 8.187499999999862e-05, 8.215300000000147e-05, 8.218000000000114e-05, 8.191699999999733e-05, 8.208399999999963e-05, 8.231899999999737e-05, 8.166699999999708e-05, 8.215300000000147e-05, 8.230599999999727e-05, 8.154200000000042e-05, 8.148699999999814e-05, 8.152800000000085e-05, 8.144399999999996e-05, 8.213799999999896e-05, 8.222199999999985e-05, 8.186099999999905e-05, 8.143000000000039e-05, 8.201399999999831e-05, 8.181900000000034e-05, 8.213899999999844e-05, 8.191699999999733e-05, 8.232000000000031e-05, 8.155599999999999e-05, 8.177700000000163e-05, 8.219399999999724e-05, 8.209699999999973e-05, 8.21390000000019e-05, 8.175000000000196e-05, 8.149999999999824e-05, 8.209699999999973e-05, 8.148599999999867e-05, 8.198599999999917e-05, 8.209699999999973e-05, 8.170899999999925e-05, 8.204200000000092e-05, 8.144499999999943e-05, 8.202800000000135e-05, 8.201299999999884e-05, 8.205500000000102e-05, 8.155500000000052e-05, 8.23049999999978e-05, 8.212500000000234e-05, 8.215300000000147e-05]</msg>
<status status="PASS" starttime="20201112 09:44:53.590" endtime="20201112 09:44:53.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.585" endtime="20201112 09:44:53.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.594" endtime="20201112 09:44:53.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:53.598" endtime="20201112 09:44:53.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.596" endtime="20201112 09:44:53.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.593" endtime="20201112 09:44:53.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.225" endtime="20201112 09:44:53.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.225" endtime="20201112 09:44:53.619"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.627" endtime="20201112 09:44:53.646"></status>
</kw>
<msg timestamp="20201112 09:44:53.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.626" endtime="20201112 09:44:53.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.647" endtime="20201112 09:44:53.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.650" endtime="20201112 09:44:53.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.623" endtime="20201112 09:44:53.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.621" endtime="20201112 09:44:53.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.659" endtime="20201112 09:44:53.945"></status>
</kw>
<msg timestamp="20201112 09:44:53.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.657" endtime="20201112 09:44:53.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.949" endtime="20201112 09:44:53.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.958" endtime="20201112 09:44:53.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.655" endtime="20201112 09:44:53.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.653" endtime="20201112 09:44:53.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:53.964" level="INFO">${RESULT} = [{'time': 0.019861222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.291600000000232e-05, 'source_diff': 8.291600000000232e-05}, {'time': 0.01995425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:53.961" endtime="20201112 09:44:53.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:53.979" level="INFO">${ACCURACY} = {'time': [0.019861222, 0.01995425, 0.02004225, 0.02013225, 0.020223264, 0.020316278, 0.020407292, 0.020497292, 0.020584319, 0.020670375, 0.020760333, 0.020847333, 0.020934389, 0.021025361, 0.021117361...</msg>
<status status="PASS" starttime="20201112 09:44:53.965" endtime="20201112 09:44:53.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.983" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:44:53.982" endtime="20201112 09:44:53.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.986" level="INFO">VALUE: [8.291600000000232e-05, 8.336100000000055e-05, 8.336100000000055e-05, 8.302800000000235e-05, 8.279200000000167e-05, 8.336100000000055e-05, 8.30980000000002e-05, 8.316699999999858e-05, 8.327699999999966e-05, 8.32780000000026e-05, 8.281899999999787e-05, 8.277699999999916e-05, 8.318100000000161e-05, 8.231900000000084e-05, 8.288900000000265e-05, 8.286100000000005e-05, 8.297199999999713e-05, 8.24309999999974e-05, 8.337500000000012e-05, 8.249999999999924e-05, 8.268100000000111e-05, 8.29720000000006e-05, 8.273599999999992e-05, 8.249999999999924e-05, 8.24720000000001e-05, 8.267999999999817e-05, 8.269400000000121e-05, 8.272200000000035e-05, 8.330599999999827e-05, 8.307000000000106e-05, 8.302800000000235e-05, 8.333299999999794e-05, 8.249999999999924e-05, 8.247299999999957e-05, 8.306900000000159e-05, 8.26109999999998e-05, 8.26109999999998e-05, 8.301399999999931e-05, 8.319400000000171e-05, 8.326400000000303e-05, 8.288899999999919e-05, 8.255600000000099e-05, 8.286100000000005e-05, 8.27780000000021e-05, 8.280599999999777e-05, 8.287499999999962e-05, 8.29720000000006e-05, 8.317999999999867e-05, 8.327699999999966e-05, 8.240300000000172e-05]</msg>
<status status="PASS" starttime="20201112 09:44:53.984" endtime="20201112 09:44:53.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.980" endtime="20201112 09:44:53.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.989" endtime="20201112 09:44:53.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:53.993" endtime="20201112 09:44:54.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.991" endtime="20201112 09:44:54.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.988" endtime="20201112 09:44:54.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.620" endtime="20201112 09:44:54.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.619" endtime="20201112 09:44:54.014"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.022" endtime="20201112 09:44:54.040"></status>
</kw>
<msg timestamp="20201112 09:44:54.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.021" endtime="20201112 09:44:54.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.042" endtime="20201112 09:44:54.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.044" endtime="20201112 09:44:54.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.018" endtime="20201112 09:44:54.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.016" endtime="20201112 09:44:54.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.053" endtime="20201112 09:44:54.340"></status>
</kw>
<msg timestamp="20201112 09:44:54.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.051" endtime="20201112 09:44:54.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.344" endtime="20201112 09:44:54.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.352" endtime="20201112 09:44:54.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.049" endtime="20201112 09:44:54.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.047" endtime="20201112 09:44:54.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.359" level="INFO">${RESULT} = [{'time': 0.019881556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.404200000000292e-05, 'source_diff': 8.404200000000292e-05}, {'time': 0.019970569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:54.356" endtime="20201112 09:44:54.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:54.372" level="INFO">${ACCURACY} = {'time': [0.019881556, 0.019970569, 0.020059625, 0.020151597, 0.020243597, 0.020337625, 0.020426653, 0.020518694, 0.020609639, 0.020701667, 0.020791667, 0.020879681, 0.020968681, 0.021061708, 0.021151...</msg>
<status status="PASS" starttime="20201112 09:44:54.360" endtime="20201112 09:44:54.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.377" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:44:54.376" endtime="20201112 09:44:54.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.379" level="INFO">VALUE: [8.404200000000292e-05, 8.394399999999899e-05, 8.39170000000028e-05, 8.426400000000056e-05, 8.3846999999998e-05, 8.437500000000112e-05, 8.387500000000062e-05, 8.431899999999937e-05, 8.380599999999877e-05, 8.37919999999992e-05, 8.351399999999981e-05, 8.407000000000206e-05, 8.394499999999847e-05, 8.344399999999849e-05, 8.376400000000006e-05, 8.433299999999894e-05, 8.43469999999985e-05, 8.34720000000011e-05, 8.344499999999797e-05, 8.419499999999872e-05, 8.36529999999995e-05, 8.3459000000001e-05, 8.434799999999798e-05, 8.363800000000046e-05, 8.357000000000156e-05, 8.366600000000307e-05, 8.43330000000024e-05, 8.375000000000049e-05, 8.417999999999967e-05, 8.387500000000062e-05, 8.355600000000199e-05, 8.408300000000216e-05, 8.370799999999831e-05, 8.423599999999795e-05, 8.432000000000231e-05, 8.343100000000186e-05, 8.368099999999865e-05, 8.386100000000105e-05, 8.341599999999935e-05, 8.423600000000142e-05, 8.338899999999969e-05, 8.355499999999905e-05, 8.345799999999806e-05, 8.358399999999766e-05, 8.387500000000062e-05, 8.37919999999992e-05, 8.363899999999994e-05, 8.413900000000044e-05, 8.387499999999715e-05, 8.343000000000239e-05]</msg>
<status status="PASS" starttime="20201112 09:44:54.378" endtime="20201112 09:44:54.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.373" endtime="20201112 09:44:54.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.383" endtime="20201112 09:44:54.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:54.386" endtime="20201112 09:44:54.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.385" endtime="20201112 09:44:54.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.381" endtime="20201112 09:44:54.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.015" endtime="20201112 09:44:54.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.014" endtime="20201112 09:44:54.407"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.416" endtime="20201112 09:44:54.436"></status>
</kw>
<msg timestamp="20201112 09:44:54.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.415" endtime="20201112 09:44:54.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.438" endtime="20201112 09:44:54.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.440" endtime="20201112 09:44:54.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.412" endtime="20201112 09:44:54.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.410" endtime="20201112 09:44:54.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.449" endtime="20201112 09:44:54.736"></status>
</kw>
<msg timestamp="20201112 09:44:54.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.447" endtime="20201112 09:44:54.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.740" endtime="20201112 09:44:54.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.749" endtime="20201112 09:44:54.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.445" endtime="20201112 09:44:54.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.443" endtime="20201112 09:44:54.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.755" level="INFO">${RESULT} = [{'time': 0.020467625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.445799999999906e-05, 'source_diff': 8.445799999999906e-05}, {'time': 0.020562639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:54.752" endtime="20201112 09:44:54.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:54.769" level="INFO">${ACCURACY} = {'time': [0.020467625, 0.020562639, 0.020655653, 0.020747722, 0.020839681, 0.020928681, 0.021022681, 0.021114694, 0.021204708, 0.021294736, 0.021386736, 0.02147575, 0.02156475, 0.021656764, 0.02174776...</msg>
<status status="PASS" starttime="20201112 09:44:54.756" endtime="20201112 09:44:54.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.773" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:44:54.772" endtime="20201112 09:44:54.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.776" level="INFO">VALUE: [8.445799999999906e-05, 8.536099999999908e-05, 8.430599999999927e-05, 8.487499999999815e-05, 8.530600000000027e-05, 8.506999999999959e-05, 8.507000000000306e-05, 8.491600000000085e-05, 8.445799999999906e-05, 8.537500000000212e-05, 8.481899999999987e-05, 8.46669999999966e-05, 8.466700000000008e-05, 8.520799999999981e-05, 8.449999999999777e-05, 8.513899999999797e-05, 8.438900000000069e-05, 8.502799999999741e-05, 8.479100000000073e-05, 8.505500000000055e-05, 8.440200000000078e-05, 8.479100000000073e-05, 8.441699999999983e-05, 8.445899999999854e-05, 8.486099999999858e-05, 8.522300000000232e-05, 8.530600000000027e-05, 8.459799999999823e-05, 8.52920000000007e-05, 8.497300000000207e-05, 8.484799999999848e-05, 8.501300000000184e-05, 8.5153000000001e-05, 8.53330000000034e-05, 8.51249999999984e-05, 8.473599999999845e-05, 8.480599999999977e-05, 8.463900000000094e-05, 8.454199999999995e-05, 8.461099999999833e-05, 8.506999999999959e-05, 8.454199999999995e-05, 8.494499999999947e-05, 8.488899999999772e-05, 8.527799999999766e-05, 8.523599999999895e-05, 8.48050000000003e-05, 8.519400000000024e-05, 8.462500000000137e-05, 8.536099999999908e-05]</msg>
<status status="PASS" starttime="20201112 09:44:54.774" endtime="20201112 09:44:54.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.770" endtime="20201112 09:44:54.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.783" endtime="20201112 09:44:54.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:54.790" endtime="20201112 09:44:54.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.787" endtime="20201112 09:44:54.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.779" endtime="20201112 09:44:54.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.408" endtime="20201112 09:44:54.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.408" endtime="20201112 09:44:54.815"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.833" endtime="20201112 09:44:54.855"></status>
</kw>
<msg timestamp="20201112 09:44:54.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.830" endtime="20201112 09:44:54.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.858" endtime="20201112 09:44:54.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.863" endtime="20201112 09:44:54.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.825" endtime="20201112 09:44:54.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.820" endtime="20201112 09:44:54.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.880" endtime="20201112 09:44:55.166"></status>
</kw>
<msg timestamp="20201112 09:44:55.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034109736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034195333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.878" endtime="20201112 09:44:55.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034109736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034195333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.170" endtime="20201112 09:44:55.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.179" endtime="20201112 09:44:55.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.874" endtime="20201112 09:44:55.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.870" endtime="20201112 09:44:55.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:55.185" level="INFO">${RESULT} = [{'time': 0.034195333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.559699999999976e-05, 'source_diff': 8.559699999999976e-05}, {'time': 0.034287319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:55.182" endtime="20201112 09:44:55.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:55.199" level="INFO">${ACCURACY} = {'time': [0.034195333, 0.034287319, 0.034376333, 0.034470403, 0.034564389, 0.034658375, 0.034753375, 0.034847389, 0.034942417, 0.035031403, 0.035127431, 0.035216431, 0.035308458, 0.035401444, 0.035491...</msg>
<status status="PASS" starttime="20201112 09:44:55.186" endtime="20201112 09:44:55.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.203" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:44:55.202" endtime="20201112 09:44:55.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.206" level="INFO">VALUE: [8.559699999999976e-05, 8.592999999999795e-05, 8.631900000000137e-05, 8.591699999999786e-05, 8.605600000000102e-05, 8.555600000000052e-05, 8.583300000000044e-05, 8.626400000000256e-05, 8.543100000000386e-05, 8.601400000000231e-05, 8.636199999999955e-05, 8.537499999999865e-05, 8.592999999999795e-05, 8.556900000000062e-05, 8.58329999999935e-05, 8.56249999999989e-05, 8.581900000000087e-05, 8.608300000000069e-05, 8.63470000000005e-05, 8.568100000000411e-05, 8.557000000000009e-05, 8.557000000000009e-05, 8.583399999999991e-05, 8.561099999999933e-05, 8.540299999999779e-05, 8.581899999999393e-05, 8.633300000000094e-05, 8.602800000000188e-05, 8.637499999999965e-05, 8.5847e-05, 8.59999999999958e-05, 8.54449999999965e-05, 8.626400000000256e-05, 8.573599999999598e-05, 8.536100000000602e-05, 8.558300000000019e-05, 8.5847e-05, 8.587500000000609e-05, 8.601400000000231e-05, 8.604200000000145e-05, 8.541699999999736e-05, 8.555500000000105e-05, 8.547199999999616e-05, 8.595799999999709e-05, 8.551400000000181e-05, 8.575000000000249e-05, 8.536099999999908e-05, 8.609700000000026e-05, 8.559699999999976e-05, 8.581900000000087e-05]</msg>
<status status="PASS" starttime="20201112 09:44:55.204" endtime="20201112 09:44:55.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.199" endtime="20201112 09:44:55.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.209" endtime="20201112 09:44:55.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:55.212" endtime="20201112 09:44:55.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.211" endtime="20201112 09:44:55.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.208" endtime="20201112 09:44:55.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.817" endtime="20201112 09:44:55.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.816" endtime="20201112 09:44:55.233"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.242" endtime="20201112 09:44:55.261"></status>
</kw>
<msg timestamp="20201112 09:44:55.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.241" endtime="20201112 09:44:55.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.262" endtime="20201112 09:44:55.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.265" endtime="20201112 09:44:55.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.238" endtime="20201112 09:44:55.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.236" endtime="20201112 09:44:55.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.274" endtime="20201112 09:44:55.561"></status>
</kw>
<msg timestamp="20201112 09:44:55.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021051167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.272" endtime="20201112 09:44:55.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021051167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.565" endtime="20201112 09:44:55.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.573" endtime="20201112 09:44:55.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.270" endtime="20201112 09:44:55.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.268" endtime="20201112 09:44:55.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:55.580" level="INFO">${RESULT} = [{'time': 0.021051167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.677799999999916e-05, 'source_diff': 8.677799999999916e-05}, {'time': 0.021144139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:55.576" endtime="20201112 09:44:55.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:55.594" level="INFO">${ACCURACY} = {'time': [0.021051167, 0.021144139, 0.021233153, 0.021324167, 0.021413167, 0.021504181, 0.021595208, 0.021690208, 0.021783208, 0.02187425, 0.021967236, 0.022059264, 0.022155264, 0.022250278, 0.0223453...</msg>
<status status="PASS" starttime="20201112 09:44:55.581" endtime="20201112 09:44:55.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.599" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:44:55.598" endtime="20201112 09:44:55.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.601" level="INFO">VALUE: [8.677799999999916e-05, 8.700000000000027e-05, 8.673600000000045e-05, 8.732000000000184e-05, 8.680600000000177e-05, 8.729199999999923e-05, 8.661100000000033e-05, 8.733299999999847e-05, 8.722199999999791e-05, 8.708300000000169e-05, 8.700000000000027e-05, 8.720799999999834e-05, 8.64310000000014e-05, 8.679199999999873e-05, 8.736099999999761e-05, 8.683400000000091e-05, 8.661100000000033e-05, 8.673699999999993e-05, 8.643000000000192e-05, 8.715200000000006e-05, 8.736099999999761e-05, 8.711100000000083e-05, 8.641699999999836e-05, 8.655600000000152e-05, 8.672199999999741e-05, 8.638900000000269e-05, 8.676399999999959e-05, 8.648699999999968e-05, 8.734799999999751e-05, 8.672200000000088e-05, 8.659700000000076e-05, 8.672200000000088e-05, 8.700000000000027e-05, 8.654200000000195e-05, 8.687500000000015e-05, 8.686100000000058e-05, 8.706999999999812e-05, 8.652799999999891e-05, 8.727799999999966e-05, 8.709800000000073e-05, 8.708300000000169e-05, 8.680499999999883e-05, 8.661100000000033e-05, 8.686100000000058e-05, 8.733299999999847e-05, 8.691699999999886e-05, 8.644399999999802e-05, 8.6847000000001e-05, 8.657000000000109e-05, 8.707000000000159e-05]</msg>
<status status="PASS" starttime="20201112 09:44:55.600" endtime="20201112 09:44:55.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.595" endtime="20201112 09:44:55.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.605" endtime="20201112 09:44:55.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:55.609" endtime="20201112 09:44:55.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.607" endtime="20201112 09:44:55.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.603" endtime="20201112 09:44:55.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.234" endtime="20201112 09:44:55.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.234" endtime="20201112 09:44:55.629"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.638" endtime="20201112 09:44:55.657"></status>
</kw>
<msg timestamp="20201112 09:44:55.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.637" endtime="20201112 09:44:55.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.658" endtime="20201112 09:44:55.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.661" endtime="20201112 09:44:55.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.634" endtime="20201112 09:44:55.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.632" endtime="20201112 09:44:55.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.670" endtime="20201112 09:44:55.957"></status>
</kw>
<msg timestamp="20201112 09:44:55.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.668" endtime="20201112 09:44:55.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.961" endtime="20201112 09:44:55.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.969" endtime="20201112 09:44:55.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.665" endtime="20201112 09:44:55.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.664" endtime="20201112 09:44:55.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:55.976" level="INFO">${RESULT} = [{'time': 0.020017222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.79860000000017e-05, 'source_diff': 8.79860000000017e-05}, {'time': 0.020108236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:55.973" endtime="20201112 09:44:55.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:55.989" level="INFO">${ACCURACY} = {'time': [0.020017222, 0.020108236, 0.02019825, 0.020292264, 0.020384264, 0.020474292, 0.020567278, 0.020659292, 0.020756319, 0.020848319, 0.020942319, 0.021032333, 0.021125361, 0.021218361, 0.0213153...</msg>
<status status="PASS" starttime="20201112 09:44:55.977" endtime="20201112 09:44:55.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.994" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:44:55.993" endtime="20201112 09:44:55.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.996" level="INFO">VALUE: [8.79860000000017e-05, 8.772200000000188e-05, 8.751400000000034e-05, 8.747200000000163e-05, 8.829200000000023e-05, 8.751400000000034e-05, 8.740299999999979e-05, 8.829200000000023e-05, 8.744399999999902e-05, 8.763800000000099e-05, 8.822200000000238e-05, 8.780499999999983e-05, 8.797199999999866e-05, 8.741700000000283e-05, 8.766700000000308e-05, 8.786200000000105e-05, 8.737500000000065e-05, 8.745900000000154e-05, 8.837500000000165e-05, 8.81670000000001e-05, 8.783400000000191e-05, 8.758299999999872e-05, 8.772199999999841e-05, 8.755499999999958e-05, 8.752799999999991e-05, 8.740299999999979e-05, 8.819400000000324e-05, 8.745800000000206e-05, 8.811099999999836e-05, 8.786100000000158e-05, 8.807000000000259e-05, 8.759800000000123e-05, 8.770899999999832e-05, 8.777800000000016e-05, 8.783299999999897e-05, 8.804199999999998e-05, 8.822200000000238e-05, 8.750000000000077e-05, 8.77920000000032e-05, 8.775000000000102e-05, 8.76250000000009e-05, 8.78059999999993e-05, 8.741699999999936e-05, 8.784699999999854e-05, 8.76669999999996e-05, 8.79999999999978e-05, 8.758300000000219e-05, 8.786099999999811e-05, 8.793099999999943e-05, 8.750000000000077e-05]</msg>
<status status="PASS" starttime="20201112 09:44:55.995" endtime="20201112 09:44:55.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.990" endtime="20201112 09:44:55.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.000" endtime="20201112 09:44:56.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.003" endtime="20201112 09:44:56.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.002" endtime="20201112 09:44:56.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.998" endtime="20201112 09:44:56.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.630" endtime="20201112 09:44:56.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.630" endtime="20201112 09:44:56.024"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.033" endtime="20201112 09:44:56.053"></status>
</kw>
<msg timestamp="20201112 09:44:56.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.031" endtime="20201112 09:44:56.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.055" endtime="20201112 09:44:56.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.058" endtime="20201112 09:44:56.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.029" endtime="20201112 09:44:56.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.027" endtime="20201112 09:44:56.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.066" endtime="20201112 09:44:56.354"></status>
</kw>
<msg timestamp="20201112 09:44:56.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020805917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020894694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.065" endtime="20201112 09:44:56.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020805917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020894694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.358" endtime="20201112 09:44:56.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.367" endtime="20201112 09:44:56.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.062" endtime="20201112 09:44:56.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.061" endtime="20201112 09:44:56.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.373" level="INFO">${RESULT} = [{'time': 0.020894694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.877699999999822e-05, 'source_diff': 8.877699999999822e-05}, {'time': 0.020987694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:56.370" endtime="20201112 09:44:56.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:56.386" level="INFO">${ACCURACY} = {'time': [0.020894694, 0.020987694, 0.021084694, 0.021178722, 0.021269736, 0.021366722, 0.021461736, 0.021555806, 0.021651778, 0.021749778, 0.021847778, 0.021944792, 0.022040819, 0.022134819, 0.022228...</msg>
<status status="PASS" starttime="20201112 09:44:56.374" endtime="20201112 09:44:56.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.391" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:44:56.390" endtime="20201112 09:44:56.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.393" level="INFO">VALUE: [8.877699999999822e-05, 8.890200000000181e-05, 8.854100000000101e-05, 8.84860000000022e-05, 8.851400000000134e-05, 8.884699999999954e-05, 8.867999999999723e-05, 8.874999999999855e-05, 8.907000000000012e-05, 8.915300000000154e-05, 8.888900000000172e-05, 8.876400000000159e-05, 8.843000000000045e-05, 8.863799999999852e-05, 8.847199999999916e-05, 8.843000000000045e-05, 8.916600000000163e-05, 8.919500000000025e-05, 8.877800000000116e-05, 8.854200000000048e-05, 8.922199999999991e-05, 8.86250000000019e-05, 8.84730000000021e-05, 8.926299999999915e-05, 8.89999999999988e-05, 8.88190000000004e-05, 8.869400000000027e-05, 8.920800000000034e-05, 8.924999999999905e-05, 8.920800000000034e-05, 8.887500000000215e-05, 8.902799999999794e-05, 8.872199999999941e-05, 8.831999999999937e-05, 8.845899999999907e-05, 8.905500000000108e-05, 8.876399999999812e-05, 8.841600000000088e-05, 8.838900000000122e-05, 8.879099999999779e-05, 8.915300000000154e-05, 8.936099999999961e-05, 8.884700000000301e-05, 8.854200000000048e-05, 8.909799999999926e-05, 8.905600000000055e-05, 8.858399999999919e-05, 8.884699999999954e-05, 8.879099999999779e-05, 8.881999999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:44:56.392" endtime="20201112 09:44:56.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.387" endtime="20201112 09:44:56.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.402" endtime="20201112 09:44:56.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.406" endtime="20201112 09:44:56.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.404" endtime="20201112 09:44:56.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.401" endtime="20201112 09:44:56.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.025" endtime="20201112 09:44:56.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.025" endtime="20201112 09:44:56.427"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.436" endtime="20201112 09:44:56.455"></status>
</kw>
<msg timestamp="20201112 09:44:56.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.434" endtime="20201112 09:44:56.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.457" endtime="20201112 09:44:56.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.460" endtime="20201112 09:44:56.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.432" endtime="20201112 09:44:56.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.430" endtime="20201112 09:44:56.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.469" endtime="20201112 09:44:56.756"></status>
</kw>
<msg timestamp="20201112 09:44:56.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.467" endtime="20201112 09:44:56.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.761" endtime="20201112 09:44:56.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.769" endtime="20201112 09:44:56.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.465" endtime="20201112 09:44:56.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.463" endtime="20201112 09:44:56.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.776" level="INFO">${RESULT} = [{'time': 0.020539722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.945800000000059e-05, 'source_diff': 8.945800000000059e-05}, {'time': 0.020635736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:56.773" endtime="20201112 09:44:56.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:56.791" level="INFO">${ACCURACY} = {'time': [0.020539722, 0.020635736, 0.02072975, 0.020823764, 0.020921764, 0.021014778, 0.021108792, 0.021201819, 0.021295819, 0.021388819, 0.021482833, 0.021580847, 0.021677875, 0.021775875, 0.0218728...</msg>
<status status="PASS" starttime="20201112 09:44:56.777" endtime="20201112 09:44:56.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.796" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:44:56.794" endtime="20201112 09:44:56.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.798" level="INFO">VALUE: [8.945800000000059e-05, 8.974999999999955e-05, 8.988900000000272e-05, 8.943100000000093e-05, 9.023600000000048e-05, 8.948599999999973e-05, 9.007000000000112e-05, 9.002699999999947e-05, 8.941600000000188e-05, 9.025000000000005e-05, 8.990199999999934e-05, 8.986100000000011e-05, 9.030599999999833e-05, 8.955600000000105e-05, 9.027799999999919e-05, 8.976399999999912e-05, 8.968099999999771e-05, 8.973699999999946e-05, 8.943000000000145e-05, 9.005599999999808e-05, 9.027699999999972e-05, 8.992999999999848e-05, 9.015299999999907e-05, 9.004200000000198e-05, 8.998600000000023e-05, 8.937499999999918e-05, 8.993099999999796e-05, 9.006999999999765e-05, 8.99999999999998e-05, 8.980599999999783e-05, 8.962499999999943e-05, 8.959700000000029e-05, 8.974999999999955e-05, 8.9638999999999e-05, 8.962499999999943e-05, 9.004200000000198e-05, 8.954200000000148e-05, 8.948599999999973e-05, 9.026399999999962e-05, 9.011100000000036e-05, 9.012499999999993e-05, 9.002800000000241e-05, 9.026399999999962e-05, 8.942999999999798e-05, 8.986100000000011e-05, 8.955500000000158e-05, 8.938899999999875e-05, 8.956899999999768e-05, 9.004199999999851e-05, 8.958299999999725e-05]</msg>
<status status="PASS" starttime="20201112 09:44:56.797" endtime="20201112 09:44:56.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.792" endtime="20201112 09:44:56.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.802" endtime="20201112 09:44:56.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.806" endtime="20201112 09:44:56.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.804" endtime="20201112 09:44:56.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.800" endtime="20201112 09:44:56.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.428" endtime="20201112 09:44:56.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.427" endtime="20201112 09:44:56.827"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.836" endtime="20201112 09:44:56.854"></status>
</kw>
<msg timestamp="20201112 09:44:56.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.834" endtime="20201112 09:44:56.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.856" endtime="20201112 09:44:56.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.859" endtime="20201112 09:44:56.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.831" endtime="20201112 09:44:56.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.829" endtime="20201112 09:44:56.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.868" endtime="20201112 09:44:57.171"></status>
</kw>
<msg timestamp="20201112 09:44:57.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020424278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.866" endtime="20201112 09:44:57.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020424278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.175" endtime="20201112 09:44:57.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.184" endtime="20201112 09:44:57.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.864" endtime="20201112 09:44:57.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.862" endtime="20201112 09:44:57.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.192" level="INFO">${RESULT} = [{'time': 0.020515403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.112500000000093e-05, 'source_diff': 9.112500000000093e-05}, {'time': 0.020610417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:57.188" endtime="20201112 09:44:57.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:57.207" level="INFO">${ACCURACY} = {'time': [0.020515403, 0.020610417, 0.020708444, 0.020804458, 0.020904444, 0.021002472, 0.021099472, 0.021199486, 0.0212985, 0.021394514, 0.021492583, 0.021591528, 0.021688542, 0.021785556, 0.02187955...</msg>
<status status="PASS" starttime="20201112 09:44:57.193" endtime="20201112 09:44:57.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.212" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:44:57.211" endtime="20201112 09:44:57.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.214" level="INFO">VALUE: [9.112500000000093e-05, 9.130599999999933e-05, 9.05000000000003e-05, 9.043000000000245e-05, 9.090200000000034e-05, 9.098600000000123e-05, 9.116600000000016e-05, 9.088900000000025e-05, 9.129199999999976e-05, 9.112500000000093e-05, 9.0639e-05, 9.061099999999739e-05, 9.073600000000098e-05, 9.052799999999944e-05, 9.108400000000169e-05, 9.048600000000073e-05, 9.094400000000252e-05, 9.061100000000086e-05, 9.102799999999994e-05, 9.084699999999807e-05, 9.044499999999803e-05, 9.069499999999828e-05, 9.119500000000225e-05, 9.129199999999976e-05, 9.11390000000005e-05, 9.107000000000212e-05, 9.086100000000111e-05, 9.075000000000055e-05, 9.086100000000111e-05, 9.088900000000025e-05, 9.048599999999726e-05, 9.113899999999703e-05, 9.083300000000197e-05, 9.106999999999865e-05, 9.098600000000123e-05, 9.072300000000089e-05, 9.13199999999989e-05, 9.091599999999991e-05, 9.066599999999966e-05, 9.055499999999911e-05, 9.09589999999981e-05, 9.086100000000111e-05, 9.052799999999944e-05, 9.098600000000123e-05, 9.11390000000005e-05, 9.098600000000123e-05, 9.0639e-05, 9.090299999999982e-05, 9.0639e-05, 9.1332999999999e-05]</msg>
<status status="PASS" starttime="20201112 09:44:57.213" endtime="20201112 09:44:57.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.208" endtime="20201112 09:44:57.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.218" endtime="20201112 09:44:57.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:57.222" endtime="20201112 09:44:57.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.220" endtime="20201112 09:44:57.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.216" endtime="20201112 09:44:57.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.828" endtime="20201112 09:44:57.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.827" endtime="20201112 09:44:57.243"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.252" endtime="20201112 09:44:57.270"></status>
</kw>
<msg timestamp="20201112 09:44:57.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.250" endtime="20201112 09:44:57.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.272" endtime="20201112 09:44:57.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.275" endtime="20201112 09:44:57.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.247" endtime="20201112 09:44:57.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.245" endtime="20201112 09:44:57.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.284" endtime="20201112 09:44:57.572"></status>
</kw>
<msg timestamp="20201112 09:44:57.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020518389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.283" endtime="20201112 09:44:57.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020518389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.576" endtime="20201112 09:44:57.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.586" endtime="20201112 09:44:57.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.280" endtime="20201112 09:44:57.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.278" endtime="20201112 09:44:57.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.593" level="INFO">${RESULT} = [{'time': 0.020518389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.222200000000291e-05, 'source_diff': 9.222200000000291e-05}, {'time': 0.020619417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:57.590" endtime="20201112 09:44:57.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:57.607" level="INFO">${ACCURACY} = {'time': [0.020518389, 0.020619417, 0.020714417, 0.020811417, 0.020908431, 0.021007458, 0.021104472, 0.021205458, 0.021306472, 0.021407486, 0.0215055, 0.021602514, 0.021700528, 0.021798542, 0.02189755...</msg>
<status status="PASS" starttime="20201112 09:44:57.594" endtime="20201112 09:44:57.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.611" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:44:57.610" endtime="20201112 09:44:57.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.614" level="INFO">VALUE: [9.222200000000291e-05, 9.161100000000186e-05, 9.209799999999879e-05, 9.219499999999978e-05, 9.140300000000032e-05, 9.181899999999993e-05, 9.19719999999992e-05, 9.166600000000066e-05, 9.181899999999993e-05, 9.190300000000082e-05, 9.223599999999901e-05, 9.219499999999978e-05, 9.223599999999901e-05, 9.223599999999901e-05, 9.158399999999872e-05, 9.23199999999999e-05, 9.155500000000011e-05, 9.16939999999998e-05, 9.168000000000023e-05, 9.218000000000073e-05, 9.18329999999995e-05, 9.158299999999925e-05, 9.186099999999864e-05, 9.161100000000186e-05, 9.148600000000173e-05, 9.208399999999922e-05, 9.206999999999965e-05, 9.134699999999857e-05, 9.224999999999858e-05, 9.219399999999683e-05, 9.227800000000119e-05, 9.226399999999815e-05, 9.212499999999846e-05, 9.20139999999979e-05, 9.140300000000032e-05, 9.224999999999858e-05, 9.198599999999876e-05, 9.166699999999667e-05, 9.166700000000014e-05, 9.199999999999833e-05, 9.234699999999957e-05, 9.145799999999912e-05, 9.195799999999962e-05, 9.211099999999889e-05, 9.174999999999808e-05, 9.209700000000279e-05, 9.179200000000026e-05, 9.181899999999993e-05, 9.19589999999991e-05, 9.212499999999846e-05]</msg>
<status status="PASS" starttime="20201112 09:44:57.613" endtime="20201112 09:44:57.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.608" endtime="20201112 09:44:57.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.618" endtime="20201112 09:44:57.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:57.621" endtime="20201112 09:44:57.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.620" endtime="20201112 09:44:57.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.616" endtime="20201112 09:44:57.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.244" endtime="20201112 09:44:57.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.243" endtime="20201112 09:44:57.642"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.651" endtime="20201112 09:44:57.671"></status>
</kw>
<msg timestamp="20201112 09:44:57.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.650" endtime="20201112 09:44:57.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.673" endtime="20201112 09:44:57.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.675" endtime="20201112 09:44:57.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.647" endtime="20201112 09:44:57.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.645" endtime="20201112 09:44:57.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.685" endtime="20201112 09:44:57.971"></status>
</kw>
<msg timestamp="20201112 09:44:57.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020801861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020894556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.683" endtime="20201112 09:44:57.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020801861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020894556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.975" endtime="20201112 09:44:57.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.984" endtime="20201112 09:44:57.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.680" endtime="20201112 09:44:57.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.678" endtime="20201112 09:44:57.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.991" level="INFO">${RESULT} = [{'time': 0.020894556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.269500000000028e-05, 'source_diff': 9.269500000000028e-05}, {'time': 0.020996569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:57.987" endtime="20201112 09:44:57.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:58.004" level="INFO">${ACCURACY} = {'time': [0.020894556, 0.020996569, 0.021093569, 0.021193597, 0.021289597, 0.021385611, 0.021481625, 0.021579639, 0.021676639, 0.021775653, 0.021875667, 0.021972694, 0.022070722, 0.022168736, 0.022268...</msg>
<status status="PASS" starttime="20201112 09:44:57.992" endtime="20201112 09:44:58.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.008" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:58.007" endtime="20201112 09:44:58.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.011" level="INFO">VALUE: [9.269500000000028e-05, 9.243000000000098e-05, 9.280499999999789e-05, 9.25000000000023e-05, 9.237499999999871e-05, 9.308299999999728e-05, 9.279200000000126e-05, 9.241700000000089e-05, 9.327800000000219e-05, 9.323600000000001e-05, 9.322299999999992e-05, 9.316600000000216e-05, 9.298599999999976e-05, 9.30000000000028e-05, 9.290200000000234e-05, 9.294399999999758e-05, 9.331900000000143e-05, 9.27079999999969e-05, 9.298599999999976e-05, 9.313899999999903e-05, 9.326399999999915e-05, 9.287499999999921e-05, 9.331900000000143e-05, 9.256900000000068e-05, 9.29720000000002e-05, 9.287500000000268e-05, 9.256899999999721e-05, 9.309700000000032e-05, 9.318100000000121e-05, 9.28200000000004e-05, 9.329200000000176e-05, 9.257000000000015e-05, 9.326399999999915e-05, 9.30139999999989e-05, 9.238800000000227e-05, 9.286099999999964e-05, 9.291600000000191e-05, 9.336100000000014e-05, 9.275000000000255e-05, 9.259699999999982e-05, 9.279200000000126e-05, 9.302799999999847e-05, 9.241700000000089e-05, 9.238899999999828e-05, 9.257000000000015e-05, 9.287499999999921e-05, 9.237500000000218e-05, 9.254200000000101e-05, 9.283399999999997e-05, 9.249999999999883e-05]</msg>
<status status="PASS" starttime="20201112 09:44:58.010" endtime="20201112 09:44:58.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.005" endtime="20201112 09:44:58.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.015" endtime="20201112 09:44:58.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:58.018" endtime="20201112 09:44:58.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.016" endtime="20201112 09:44:58.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.013" endtime="20201112 09:44:58.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.643" endtime="20201112 09:44:58.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.643" endtime="20201112 09:44:58.039"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.048" endtime="20201112 09:44:58.066"></status>
</kw>
<msg timestamp="20201112 09:44:58.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.046" endtime="20201112 09:44:58.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.068" endtime="20201112 09:44:58.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.070" endtime="20201112 09:44:58.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.044" endtime="20201112 09:44:58.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.041" endtime="20201112 09:44:58.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.079" endtime="20201112 09:44:58.365"></status>
</kw>
<msg timestamp="20201112 09:44:58.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020536736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.077" endtime="20201112 09:44:58.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020536736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.369" endtime="20201112 09:44:58.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.378" endtime="20201112 09:44:58.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.075" endtime="20201112 09:44:58.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.073" endtime="20201112 09:44:58.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:58.384" level="INFO">${RESULT} = [{'time': 0.020630917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.418099999999874e-05, 'source_diff': 9.418099999999874e-05}, {'time': 0.020729917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:58.381" endtime="20201112 09:44:58.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:58.398" level="INFO">${ACCURACY} = {'time': [0.020630917, 0.020729917, 0.020828944, 0.020927958, 0.021030972, 0.021133972, 0.021235986, 0.021334986, 0.021434, 0.021533014, 0.021635028, 0.021737042, 0.021841056, 0.021938056, 0.022036083...</msg>
<status status="PASS" starttime="20201112 09:44:58.385" endtime="20201112 09:44:58.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.402" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:58.401" endtime="20201112 09:44:58.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.404" level="INFO">VALUE: [9.418099999999874e-05, 9.370900000000085e-05, 9.395799999999815e-05, 9.348600000000026e-05, 9.408299999999828e-05, 9.431900000000243e-05, 9.379199999999879e-05, 9.387500000000021e-05, 9.345800000000112e-05, 9.387500000000021e-05, 9.409700000000132e-05, 9.338900000000275e-05, 9.436200000000061e-05, 9.43200000000019e-05, 9.429099999999982e-05, 9.384700000000107e-05, 9.36659999999992e-05, 9.387500000000021e-05, 9.379199999999879e-05, 9.338899999999928e-05, 9.427799999999972e-05, 9.411100000000089e-05, 9.429199999999929e-05, 9.352799999999897e-05, 9.343100000000146e-05, 9.379099999999932e-05, 9.395799999999815e-05, 9.391699999999892e-05, 9.379200000000226e-05, 9.354200000000201e-05, 9.379199999999879e-05, 9.361100000000039e-05, 9.431999999999843e-05, 9.338900000000275e-05, 9.388899999999978e-05, 9.436100000000114e-05, 9.415200000000012e-05, 9.38330000000015e-05, 9.340299999999885e-05, 9.337499999999971e-05, 9.366699999999867e-05, 9.411100000000089e-05, 9.40139999999999e-05, 9.407000000000165e-05, 9.381899999999846e-05, 9.372300000000042e-05, 9.413900000000003e-05, 9.355500000000211e-05, 9.354199999999854e-05, 9.345800000000112e-05]</msg>
<status status="PASS" starttime="20201112 09:44:58.403" endtime="20201112 09:44:58.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.398" endtime="20201112 09:44:58.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.408" endtime="20201112 09:44:58.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:58.411" endtime="20201112 09:44:58.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.410" endtime="20201112 09:44:58.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.406" endtime="20201112 09:44:58.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.040" endtime="20201112 09:44:58.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.039" endtime="20201112 09:44:58.432"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.441" endtime="20201112 09:44:58.462"></status>
</kw>
<msg timestamp="20201112 09:44:58.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.439" endtime="20201112 09:44:58.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.463" endtime="20201112 09:44:58.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.466" endtime="20201112 09:44:58.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.437" endtime="20201112 09:44:58.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.435" endtime="20201112 09:44:58.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.475" endtime="20201112 09:44:58.764"></status>
</kw>
<msg timestamp="20201112 09:44:58.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020916514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.473" endtime="20201112 09:44:58.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020916514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.769" endtime="20201112 09:44:58.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.777" endtime="20201112 09:44:58.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.471" endtime="20201112 09:44:58.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.469" endtime="20201112 09:44:58.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:58.784" level="INFO">${RESULT} = [{'time': 0.021011625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.511099999999842e-05, 'source_diff': 9.511099999999842e-05}, {'time': 0.021113639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:58.780" endtime="20201112 09:44:58.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:58.798" level="INFO">${ACCURACY} = {'time': [0.021011625, 0.021113639, 0.021213639, 0.021313667, 0.021417681, 0.021520722, 0.021624778, 0.021724708, 0.021823708, 0.021925736, 0.02202975, 0.02212775, 0.022231764, 0.022333778, 0.02243377...</msg>
<status status="PASS" starttime="20201112 09:44:58.785" endtime="20201112 09:44:58.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.803" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:58.802" endtime="20201112 09:44:58.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.806" level="INFO">VALUE: [9.511099999999842e-05, 9.519499999999931e-05, 9.447199999999822e-05, 9.49590000000021e-05, 9.513900000000103e-05, 9.529099999999735e-05, 9.450000000000083e-05, 9.487499999999774e-05, 9.46660000000002e-05, 9.520800000000287e-05, 9.531899999999996e-05, 9.526400000000115e-05, 9.443100000000246e-05, 9.505599999999961e-05, 9.516700000000017e-05, 9.477800000000022e-05, 9.537499999999824e-05, 9.463800000000105e-05, 9.47079999999989e-05, 9.442999999999951e-05, 9.505500000000014e-05, 9.437500000000071e-05, 9.483400000000197e-05, 9.462500000000096e-05, 9.526399999999768e-05, 9.440299999999985e-05, 9.438900000000028e-05, 9.487499999999774e-05, 9.509699999999885e-05, 9.491600000000044e-05, 9.484700000000207e-05, 9.53469999999991e-05, 9.515299999999713e-05, 9.486100000000164e-05, 9.467999999999976e-05, 9.44590000000016e-05, 9.452799999999997e-05, 9.481999999999893e-05, 9.518000000000026e-05, 9.459699999999835e-05, 9.51530000000006e-05, 9.438900000000028e-05, 9.516700000000017e-05, 9.44590000000016e-05, 9.480599999999936e-05, 9.466699999999967e-05, 9.444499999999856e-05, 9.483299999999903e-05, 9.461200000000086e-05, 9.458399999999825e-05]</msg>
<status status="PASS" starttime="20201112 09:44:58.804" endtime="20201112 09:44:58.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.799" endtime="20201112 09:44:58.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.809" endtime="20201112 09:44:58.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:58.812" endtime="20201112 09:44:58.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.811" endtime="20201112 09:44:58.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.807" endtime="20201112 09:44:58.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.433" endtime="20201112 09:44:58.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.433" endtime="20201112 09:44:58.833"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.842" endtime="20201112 09:44:58.861"></status>
</kw>
<msg timestamp="20201112 09:44:58.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.840" endtime="20201112 09:44:58.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.862" endtime="20201112 09:44:58.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.865" endtime="20201112 09:44:58.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.838" endtime="20201112 09:44:58.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.836" endtime="20201112 09:44:58.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.874" endtime="20201112 09:44:59.161"></status>
</kw>
<msg timestamp="20201112 09:44:59.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020693, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020789028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:58.872" endtime="20201112 09:44:59.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020693, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020789028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:59.166" endtime="20201112 09:44:59.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.174" endtime="20201112 09:44:59.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.870" endtime="20201112 09:44:59.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.868" endtime="20201112 09:44:59.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.181" level="INFO">${RESULT} = [{'time': 0.020789028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.602800000000147e-05, 'source_diff': 9.602800000000147e-05}, {'time': 0.020889014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:59.177" endtime="20201112 09:44:59.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:59.194" level="INFO">${ACCURACY} = {'time': [0.020789028, 0.020889014, 0.020990028, 0.021089042, 0.021194056, 0.021294083, 0.021395097, 0.021500083, 0.021605111, 0.021704139, 0.021806125, 0.021907153, 0.022009153, 0.022114153, 0.022212...</msg>
<status status="PASS" starttime="20201112 09:44:59.182" endtime="20201112 09:44:59.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.198" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:59.197" endtime="20201112 09:44:59.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.201" level="INFO">VALUE: [9.602800000000147e-05, 9.607000000000018e-05, 9.534700000000257e-05, 9.586099999999917e-05, 9.630600000000086e-05, 9.631899999999749e-05, 9.620799999999693e-05, 9.583300000000003e-05, 9.566700000000067e-05, 9.538900000000128e-05, 9.61669999999977e-05, 9.54859999999988e-05, 9.599999999999886e-05, 9.588900000000178e-05, 9.580600000000036e-05, 9.613899999999856e-05, 9.57079999999999e-05, 9.606900000000071e-05, 9.595800000000015e-05, 9.625000000000258e-05, 9.602800000000147e-05, 9.576400000000165e-05, 9.620899999999988e-05, 9.573599999999904e-05, 9.584799999999907e-05, 9.588899999999831e-05, 9.566700000000067e-05, 9.606899999999724e-05, 9.550000000000183e-05, 9.631900000000096e-05, 9.573599999999904e-05, 9.626399999999868e-05, 9.568100000000024e-05, 9.577799999999775e-05, 9.626399999999868e-05, 9.595899999999963e-05, 9.552800000000097e-05, 9.622199999999997e-05, 9.556900000000021e-05, 9.544400000000008e-05, 9.61660000000017e-05, 9.623600000000301e-05, 9.593100000000049e-05, 9.618100000000074e-05, 9.637500000000271e-05, 9.626400000000215e-05, 9.566700000000067e-05, 9.580499999999742e-05, 9.611099999999942e-05, 9.548600000000226e-05]</msg>
<status status="PASS" starttime="20201112 09:44:59.199" endtime="20201112 09:44:59.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.195" endtime="20201112 09:44:59.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.204" endtime="20201112 09:44:59.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.208" endtime="20201112 09:44:59.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.206" endtime="20201112 09:44:59.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.203" endtime="20201112 09:44:59.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.834" endtime="20201112 09:44:59.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.834" endtime="20201112 09:44:59.229"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.237" endtime="20201112 09:44:59.257"></status>
</kw>
<msg timestamp="20201112 09:44:59.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.236" endtime="20201112 09:44:59.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.258" endtime="20201112 09:44:59.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.261" endtime="20201112 09:44:59.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.233" endtime="20201112 09:44:59.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.231" endtime="20201112 09:44:59.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.270" endtime="20201112 09:44:59.557"></status>
</kw>
<msg timestamp="20201112 09:44:59.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:59.268" endtime="20201112 09:44:59.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:59.561" endtime="20201112 09:44:59.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.569" endtime="20201112 09:44:59.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.266" endtime="20201112 09:44:59.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.264" endtime="20201112 09:44:59.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.576" level="INFO">${RESULT} = [{'time': 0.0198955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.688899999999931e-05, 'source_diff': 9.688899999999931e-05}, {'time': 0.019998514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:59.572" endtime="20201112 09:44:59.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:59.589" level="INFO">${ACCURACY} = {'time': [0.0198955, 0.019998514, 0.020097528, 0.020203528, 0.020302542, 0.020406556, 0.020509569, 0.020613597, 0.020719597, 0.020824611, 0.020928625, 0.021031625, 0.021134639, 0.021240653, 0.02134368...</msg>
<status status="PASS" starttime="20201112 09:44:59.577" endtime="20201112 09:44:59.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.594" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:59.593" endtime="20201112 09:44:59.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.596" level="INFO">VALUE: [9.688899999999931e-05, 9.72219999999975e-05, 9.649999999999936e-05, 9.640299999999838e-05, 9.657000000000068e-05, 9.673699999999952e-05, 9.69019999999994e-05, 9.655500000000164e-05, 9.706899999999824e-05, 9.662499999999949e-05, 9.727799999999925e-05, 9.669400000000133e-05, 9.65279999999985e-05, 9.713900000000303e-05, 9.688899999999931e-05, 9.732000000000143e-05, 9.676400000000265e-05, 9.711100000000042e-05, 9.732000000000143e-05, 9.658300000000078e-05, 9.69860000000003e-05, 9.662499999999949e-05, 9.687499999999974e-05, 9.723600000000054e-05, 9.637499999999924e-05, 9.657000000000068e-05, 9.680500000000189e-05, 9.636099999999967e-05, 9.644500000000056e-05, 9.655499999999817e-05, 9.66799999999983e-05, 9.656900000000121e-05, 9.737499999999677e-05, 9.662500000000296e-05, 9.723600000000054e-05, 9.708400000000075e-05, 9.659799999999982e-05, 9.679199999999832e-05, 9.681899999999799e-05, 9.699999999999986e-05, 9.663899999999906e-05, 9.683299999999756e-05, 9.683300000000103e-05, 9.68470000000006e-05, 9.711099999999695e-05, 9.64859999999998e-05, 9.715299999999913e-05, 9.661199999999939e-05, 9.715199999999966e-05, 9.723599999999707e-05]</msg>
<status status="PASS" starttime="20201112 09:44:59.595" endtime="20201112 09:44:59.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.590" endtime="20201112 09:44:59.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.600" endtime="20201112 09:44:59.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.603" endtime="20201112 09:44:59.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.602" endtime="20201112 09:44:59.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.598" endtime="20201112 09:44:59.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.230" endtime="20201112 09:44:59.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.229" endtime="20201112 09:44:59.624"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.633" endtime="20201112 09:44:59.652"></status>
</kw>
<msg timestamp="20201112 09:44:59.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.631" endtime="20201112 09:44:59.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.653" endtime="20201112 09:44:59.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.656" endtime="20201112 09:44:59.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.629" endtime="20201112 09:44:59.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.627" endtime="20201112 09:44:59.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.665" endtime="20201112 09:44:59.952"></status>
</kw>
<msg timestamp="20201112 09:44:59.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020677153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020775347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.663" endtime="20201112 09:44:59.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020677153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020775347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.956" endtime="20201112 09:44:59.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.964" endtime="20201112 09:44:59.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.661" endtime="20201112 09:44:59.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.659" endtime="20201112 09:44:59.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.971" level="INFO">${RESULT} = [{'time': 0.020775347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819399999999937e-05, 'source_diff': 9.819399999999937e-05}, {'time': 0.020878347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:59.967" endtime="20201112 09:44:59.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:59.984" level="INFO">${ACCURACY} = {'time': [0.020775347, 0.020878347, 0.020982347, 0.021088375, 0.021191403, 0.021298458, 0.021399389, 0.021501403, 0.021602417, 0.021703444, 0.021807444, 0.021911472, 0.022017486, 0.022123472, 0.022230...</msg>
<status status="PASS" starttime="20201112 09:44:59.972" endtime="20201112 09:44:59.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.989" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:59.988" endtime="20201112 09:44:59.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.991" level="INFO">VALUE: [9.819399999999937e-05, 9.788899999999684e-05, 9.823599999999807e-05, 9.826400000000068e-05, 9.79860000000013e-05, 9.744399999999862e-05, 9.808300000000228e-05, 9.806999999999871e-05, 9.831999999999896e-05, 9.762500000000049e-05, 9.774999999999714e-05, 9.788900000000031e-05, 9.826400000000068e-05, 9.737500000000024e-05, 9.781899999999899e-05, 9.83059999999994e-05, 9.813900000000056e-05, 9.830600000000286e-05, 9.743100000000199e-05, 9.81799999999998e-05, 9.777799999999975e-05, 9.80410000000001e-05, 9.773600000000104e-05, 9.776400000000018e-05, 9.808299999999881e-05, 9.79860000000013e-05, 9.748599999999732e-05, 9.766700000000267e-05, 9.747200000000122e-05, 9.809800000000132e-05, 9.833299999999906e-05, 9.773599999999757e-05, 9.808299999999881e-05, 9.759699999999788e-05, 9.750000000000036e-05, 9.756899999999874e-05, 9.809699999999838e-05, 9.770899999999791e-05, 9.7721999999998e-05, 9.755599999999864e-05, 9.765200000000016e-05, 9.777700000000028e-05, 9.826400000000068e-05, 9.742999999999905e-05, 9.76669999999992e-05, 9.790299999999988e-05, 9.808300000000228e-05, 9.772200000000147e-05, 9.783300000000203e-05, 9.826400000000068e-05]</msg>
<status status="PASS" starttime="20201112 09:44:59.990" endtime="20201112 09:44:59.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.985" endtime="20201112 09:44:59.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.995" endtime="20201112 09:44:59.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.998" endtime="20201112 09:45:00.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.997" endtime="20201112 09:45:00.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.993" endtime="20201112 09:45:00.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.625" endtime="20201112 09:45:00.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.624" endtime="20201112 09:45:00.019"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.028" endtime="20201112 09:45:00.048"></status>
</kw>
<msg timestamp="20201112 09:45:00.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.026" endtime="20201112 09:45:00.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.049" endtime="20201112 09:45:00.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.051" endtime="20201112 09:45:00.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.024" endtime="20201112 09:45:00.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.022" endtime="20201112 09:45:00.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.060" endtime="20201112 09:45:00.346"></status>
</kw>
<msg timestamp="20201112 09:45:00.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.059" endtime="20201112 09:45:00.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.351" endtime="20201112 09:45:00.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.359" endtime="20201112 09:45:00.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.056" endtime="20201112 09:45:00.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.055" endtime="20201112 09:45:00.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:00.365" level="INFO">${RESULT} = [{'time': 0.020040833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.881899999999999e-05, 'source_diff': 9.881899999999999e-05}, {'time': 0.020147833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:45:00.362" endtime="20201112 09:45:00.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:00.380" level="INFO">${ACCURACY} = {'time': [0.020040833, 0.020147833, 0.020255847, 0.020360861, 0.020461889, 0.020566889, 0.020671903, 0.020775917, 0.020882917, 0.020986931, 0.021088958, 0.021194972, 0.021301972, 0.021407972, 0.021512...</msg>
<status status="PASS" starttime="20201112 09:45:00.366" endtime="20201112 09:45:00.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.385" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:45:00.384" endtime="20201112 09:45:00.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.387" level="INFO">VALUE: [9.881899999999999e-05, 9.879100000000085e-05, 9.859699999999888e-05, 9.89860000000023e-05, 9.875000000000161e-05, 9.845800000000265e-05, 9.924999999999864e-05, 9.895900000000263e-05, 9.854200000000007e-05, 9.912500000000199e-05, 9.927700000000178e-05, 9.89999999999984e-05, 9.908299999999981e-05, 9.897199999999926e-05, 9.850000000000136e-05, 9.908299999999981e-05, 9.843100000000299e-05, 9.924999999999864e-05, 9.873600000000204e-05, 9.895899999999916e-05, 9.89860000000023e-05, 9.856899999999974e-05, 9.893000000000055e-05, 9.856899999999974e-05, 9.891700000000045e-05, 9.9028000000001e-05, 9.883299999999956e-05, 9.901400000000143e-05, 9.915299999999766e-05, 9.908399999999928e-05, 9.840300000000038e-05, 9.934699999999963e-05, 9.844399999999962e-05, 9.9028000000001e-05, 9.938899999999834e-05, 9.89869999999983e-05, 9.898599999999882e-05, 9.86670000000002e-05, 9.881999999999946e-05, 9.848599999999832e-05, 9.931999999999996e-05, 9.883299999999956e-05, 9.905500000000067e-05, 9.909699999999938e-05, 9.854099999999713e-05, 9.92219999999995e-05, 9.894499999999959e-05, 9.865300000000063e-05, 9.886100000000217e-05, 9.937500000000224e-05]</msg>
<status status="PASS" starttime="20201112 09:45:00.386" endtime="20201112 09:45:00.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.381" endtime="20201112 09:45:00.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.391" endtime="20201112 09:45:00.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:00.394" endtime="20201112 09:45:00.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.393" endtime="20201112 09:45:00.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.389" endtime="20201112 09:45:00.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.020" endtime="20201112 09:45:00.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.020" endtime="20201112 09:45:00.415"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.424" endtime="20201112 09:45:00.442"></status>
</kw>
<msg timestamp="20201112 09:45:00.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.422" endtime="20201112 09:45:00.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.444" endtime="20201112 09:45:00.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.447" endtime="20201112 09:45:00.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.420" endtime="20201112 09:45:00.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.418" endtime="20201112 09:45:00.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.456" endtime="20201112 09:45:00.742"></status>
</kw>
<msg timestamp="20201112 09:45:00.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.454" endtime="20201112 09:45:00.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.746" endtime="20201112 09:45:00.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.755" endtime="20201112 09:45:00.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.451" endtime="20201112 09:45:00.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.450" endtime="20201112 09:45:00.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:00.761" level="INFO">${RESULT} = [{'time': 0.019896111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.948599999999932e-05, 'source_diff': 9.948599999999932e-05}, {'time': 0.020001139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:45:00.758" endtime="20201112 09:45:00.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:00.775" level="INFO">${ACCURACY} = {'time': [0.019896111, 0.020001139, 0.020103139, 0.020208139, 0.020312125, 0.020420167, 0.020528153, 0.020631167, 0.02073725, 0.020841194, 0.020948208, 0.021053208, 0.021157222, 0.021262236, 0.0213672...</msg>
<status status="PASS" starttime="20201112 09:45:00.762" endtime="20201112 09:45:00.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.779" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:45:00.778" endtime="20201112 09:45:00.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.782" level="INFO">VALUE: [9.948599999999932e-05, 9.945800000000019e-05, 9.977799999999828e-05, 9.987499999999927e-05, 0.000100028000000002, 0.0001003610000000002, 0.00010033400000000053, 0.00010026399999999921, 9.976399999999871e-05, 9.966600000000173e-05, 9.970800000000044e-05, 9.98609999999997e-05, 9.983300000000056e-05, 9.98609999999997e-05, 9.945800000000019e-05, 9.944500000000009e-05, 9.955600000000064e-05, 9.987499999999927e-05, 0.00010033400000000053, 9.951400000000193e-05, 9.961099999999945e-05, 0.00010006899999999777, 0.00010009700000000038, 9.977800000000175e-05, 0.00010032000000000096, 0.00010033400000000053, 9.976400000000218e-05, 9.951399999999846e-05, 0.00010027799999999878, 9.954099999999813e-05, 0.00010006900000000124, 0.0001003610000000002, 9.96670000000012e-05, 0.00010034700000000063, 0.00010034700000000063, 9.94999999999989e-05, 9.94999999999989e-05, 0.00010018100000000127, 9.942999999999758e-05, 9.991699999999798e-05, 0.00010016600000000223, 0.0001001670000000017, 9.988899999999884e-05, 9.990299999999841e-05, 9.963900000000206e-05, 9.979199999999785e-05, 0.00010019500000000084, 9.983400000000003e-05, 9.961200000000239e-05, 9.987500000000274e-05]</msg>
<status status="PASS" starttime="20201112 09:45:00.780" endtime="20201112 09:45:00.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.775" endtime="20201112 09:45:00.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.785" endtime="20201112 09:45:00.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:00.789" endtime="20201112 09:45:00.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.787" endtime="20201112 09:45:00.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.783" endtime="20201112 09:45:00.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.416" endtime="20201112 09:45:00.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.416" endtime="20201112 09:45:00.810"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.819" endtime="20201112 09:45:00.838"></status>
</kw>
<msg timestamp="20201112 09:45:00.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.817" endtime="20201112 09:45:00.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.840" endtime="20201112 09:45:00.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.842" endtime="20201112 09:45:00.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.814" endtime="20201112 09:45:00.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.812" endtime="20201112 09:45:00.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.851" endtime="20201112 09:45:01.138"></status>
</kw>
<msg timestamp="20201112 09:45:01.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02026325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:00.850" endtime="20201112 09:45:01.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02026325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:01.142" endtime="20201112 09:45:01.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.151" endtime="20201112 09:45:01.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.847" endtime="20201112 09:45:01.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.846" endtime="20201112 09:45:01.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:01.157" level="INFO">${RESULT} = [{'time': 0.02026325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010063899999999959, 'source_diff': 0.00010063899999999959}, {'time': 0.020367278, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:45:01.154" endtime="20201112 09:45:01.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:01.170" level="INFO">${ACCURACY} = {'time': [0.02026325, 0.020367278, 0.020472278, 0.020579292, 0.020687319, 0.020795333, 0.020898375, 0.021007333, 0.021111347, 0.021221375, 0.021328389, 0.021437389, 0.021543458, 0.021649444, 0.0217584...</msg>
<status status="PASS" starttime="20201112 09:45:01.158" endtime="20201112 09:45:01.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.175" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:45:01.174" endtime="20201112 09:45:01.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.177" level="INFO">VALUE: [0.00010063899999999959, 0.0001010419999999991, 0.00010065299999999916, 0.00010052799999999903, 0.00010051299999999999, 0.00010051399999999946, 0.0001008610000000007, 0.00010084700000000113, 0.00010084699999999766, 0.00010061100000000045, 0.00010094499999999812, 0.00010126400000000021, 0.00010093000000000255, 0.00010066599999999926, 0.00010038900000000281, 0.00010098599999999736, 0.00010058300000000131, 0.00010070800000000144, 0.00010056899999999827, 0.00010086200000000017, 0.00010037499999999977, 0.0001013060000000024, 0.00010038899999999934, 0.00010118100000000227, 0.0001008480000000006, 0.00010108299999999834, 0.00010040199999999944, 0.00010075000000000014, 0.00010043000000000205, 0.00010048600000000033, 0.00010099999999999693, 0.00010055600000000164, 0.00010070900000000091, 0.00010102799999999953, 0.00010130599999999892, 0.00010129099999999988, 0.00010065299999999916, 0.00010131899999999902, 0.00010083300000000156, 0.00010127800000000325, 0.00010038899999999934, 0.00010061100000000045, 0.00010098599999999736, 0.0001010000000000004, 0.00010057000000000121, 0.0001013199999999985, 0.00010088899999999984, 0.0001005549999999987, 0.00010091600000000298, 0.00010055500000000217]</msg>
<status status="PASS" starttime="20201112 09:45:01.176" endtime="20201112 09:45:01.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.171" endtime="20201112 09:45:01.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.181" endtime="20201112 09:45:01.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:01.184" endtime="20201112 09:45:01.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.183" endtime="20201112 09:45:01.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.179" endtime="20201112 09:45:01.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.811" endtime="20201112 09:45:01.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.810" endtime="20201112 09:45:01.205"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.214" endtime="20201112 09:45:01.233"></status>
</kw>
<msg timestamp="20201112 09:45:01.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:01.212" endtime="20201112 09:45:01.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:01.234" endtime="20201112 09:45:01.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.237" endtime="20201112 09:45:01.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.210" endtime="20201112 09:45:01.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.208" endtime="20201112 09:45:01.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.246" endtime="20201112 09:45:01.533"></status>
</kw>
<msg timestamp="20201112 09:45:01.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019893694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.244" endtime="20201112 09:45:01.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019893694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.537" endtime="20201112 09:45:01.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.545" endtime="20201112 09:45:01.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.241" endtime="20201112 09:45:01.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.240" endtime="20201112 09:45:01.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:01.552" level="INFO">${RESULT} = [{'time': 0.019995778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010208399999999881, 'source_diff': 0.00010208399999999881}, {'time': 0.020103778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:01.548" endtime="20201112 09:45:01.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:01.565" level="INFO">${ACCURACY} = {'time': [0.019995778, 0.020103778, 0.020208792, 0.020319806, 0.020426833, 0.020531847, 0.020642833, 0.020749847, 0.020859861, 0.020966889, 0.021075903, 0.021179917, 0.021288917, 0.021398931, 0.021507...</msg>
<status status="PASS" starttime="20201112 09:45:01.553" endtime="20201112 09:45:01.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.569" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:45:01.568" endtime="20201112 09:45:01.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.572" level="INFO">VALUE: [0.00010208399999999881, 0.00010169499999999887, 0.00010155599999999917, 0.00010190300000000041, 0.00010142999999999958, 0.00010154100000000013, 0.00010142999999999958, 0.0001021939999999999, 0.00010225000000000165, 0.00010172199999999854, 0.00010206999999999924, 0.00010158399999999831, 0.00010229200000000035, 0.00010138900000000034, 0.0001020420000000001, 0.00010227700000000131, 0.00010193000000000008, 0.00010131899999999902, 0.00010229200000000035, 0.00010161100000000145, 0.00010234700000000263, 0.0001020420000000001, 0.00010223600000000208, 0.00010213899999999762, 0.00010229200000000035, 0.00010158300000000231, 0.00010204100000000063, 0.00010140299999999991, 0.00010140299999999991, 0.00010176399999999725, 0.00010184700000000213, 0.00010187500000000127, 0.0001023199999999995, 0.00010219499999999937, 0.00010173600000000158, 0.00010234700000000263, 0.00010152700000000056, 0.0001020550000000002, 0.0001015419999999996, 0.00010220799999999947, 0.00010138900000000034, 0.00010233299999999959, 0.0001023749999999983, 0.00010176399999999725, 0.00010186200000000117, 0.00010233299999999959, 0.00010161100000000145, 0.00010195799999999922, 0.00010148599999999786, 0.00010159700000000188]</msg>
<status status="PASS" starttime="20201112 09:45:01.570" endtime="20201112 09:45:01.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.566" endtime="20201112 09:45:01.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.580" endtime="20201112 09:45:01.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:01.584" endtime="20201112 09:45:01.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.582" endtime="20201112 09:45:01.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.578" endtime="20201112 09:45:01.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.206" endtime="20201112 09:45:01.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.205" endtime="20201112 09:45:01.606"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.615" endtime="20201112 09:45:01.634"></status>
</kw>
<msg timestamp="20201112 09:45:01.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:01.613" endtime="20201112 09:45:01.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:01.636" endtime="20201112 09:45:01.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.638" endtime="20201112 09:45:01.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.611" endtime="20201112 09:45:01.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.608" endtime="20201112 09:45:01.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.648" endtime="20201112 09:45:01.936"></status>
</kw>
<msg timestamp="20201112 09:45:01.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021401528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.646" endtime="20201112 09:45:01.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021401528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.940" endtime="20201112 09:45:01.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.948" endtime="20201112 09:45:01.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.643" endtime="20201112 09:45:01.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.642" endtime="20201112 09:45:01.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:01.955" level="INFO">${RESULT} = [{'time': 0.021401528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010288899999999837, 'source_diff': 0.00010288899999999837}, {'time': 0.021509542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:01.952" endtime="20201112 09:45:01.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:01.969" level="INFO">${ACCURACY} = {'time': [0.021401528, 0.021509542, 0.021616611, 0.021726556, 0.021833597, 0.021938583, 0.022046611, 0.022153597, 0.022265625, 0.022371639, 0.022478653, 0.022586653, 0.022697681, 0.022806694, 0.022911...</msg>
<status status="PASS" starttime="20201112 09:45:01.956" endtime="20201112 09:45:01.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.974" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:45:01.973" endtime="20201112 09:45:01.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.976" level="INFO">VALUE: [0.00010288899999999837, 0.00010319500000000037, 0.00010320800000000047, 0.00010273700000000205, 0.00010280500000000095, 0.00010256900000000027, 0.0001025000000000019, 0.00010256900000000027, 0.00010277800000000128, 0.00010307000000000024, 0.00010308399999999981, 0.00010313900000000209, 0.00010238900000000134, 0.0001029299999999976, 0.00010249999999999843, 0.0001028610000000027, 0.0001026940000000004, 0.00010272300000000248, 0.00010265300000000116, 0.00010263900000000159, 0.00010309699999999991, 0.00010288800000000237, 0.00010298599999999936, 0.00010263799999999865, 0.0001031940000000009, 0.00010237500000000177, 0.00010266600000000126, 0.00010272199999999954, 0.0001025000000000019, 0.0001025000000000019, 0.00010243000000000058, 0.00010309699999999991, 0.00010282, 0.00010259800000000235, 0.00010236099999999873, 0.00010331900000000102, 0.0001030550000000012, 0.00010334700000000016, 0.0001026810000000003, 0.00010238899999999787, 0.00010265300000000116, 0.00010294500000000012, 0.00010248600000000233, 0.00010322200000000004, 0.00010333300000000059, 0.0001027359999999991, 0.00010334799999999963, 0.00010277800000000128, 0.00010315300000000166, 0.00010315300000000166]</msg>
<status status="PASS" starttime="20201112 09:45:01.975" endtime="20201112 09:45:01.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.970" endtime="20201112 09:45:01.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.980" endtime="20201112 09:45:01.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:01.983" endtime="20201112 09:45:02.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.982" endtime="20201112 09:45:02.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.978" endtime="20201112 09:45:02.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.607" endtime="20201112 09:45:02.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.606" endtime="20201112 09:45:02.004"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.013" endtime="20201112 09:45:02.031"></status>
</kw>
<msg timestamp="20201112 09:45:02.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.011" endtime="20201112 09:45:02.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.033" endtime="20201112 09:45:02.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.035" endtime="20201112 09:45:02.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.009" endtime="20201112 09:45:02.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.007" endtime="20201112 09:45:02.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.044" endtime="20201112 09:45:02.348"></status>
</kw>
<msg timestamp="20201112 09:45:02.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020558875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.043" endtime="20201112 09:45:02.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020558875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.352" endtime="20201112 09:45:02.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.360" endtime="20201112 09:45:02.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.040" endtime="20201112 09:45:02.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.039" endtime="20201112 09:45:02.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:02.367" level="INFO">${RESULT} = [{'time': 0.020663111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001042360000000006, 'source_diff': 0.0001042360000000006}, {'time': 0.020770153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:45:02.363" endtime="20201112 09:45:02.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:02.380" level="INFO">${ACCURACY} = {'time': [0.020663111, 0.020770153, 0.020877097, 0.020989097, 0.021102111, 0.021214125, 0.021326139, 0.021438153, 0.021551167, 0.021664181, 0.021776194, 0.021889194, 0.022002222, 0.022109222, 0.022222...</msg>
<status status="PASS" starttime="20201112 09:45:02.368" endtime="20201112 09:45:02.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.384" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:45:02.383" endtime="20201112 09:45:02.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.386" level="INFO">VALUE: [0.0001042360000000006, 0.00010409700000000091, 0.00010363899999999912, 0.00010433300000000159, 0.00010359700000000041, 0.00010379200000000185, 0.00010348599999999986, 0.00010377800000000229, 0.00010408400000000081, 0.0001036810000000013, 0.00010355499999999823, 0.0001038749999999998, 0.00010383299999999762, 0.00010401400000000297, 0.00010383299999999762, 0.00010341699999999801, 0.00010357000000000074, 0.00010416699999999876, 0.00010358300000000084, 0.00010375000000000315, 0.00010412500000000005, 0.00010372200000000054, 0.00010352800000000204, 0.00010397200000000079, 0.0001035420000000016, 0.00010343100000000105, 0.00010351400000000247, 0.00010372300000000001, 0.00010391599999999904, 0.0001043620000000002, 0.00010366699999999826, 0.00010351300000000299, 0.00010406999999999778, 0.00010338900000000234, 0.0001036940000000014, 0.00010434699999999769, 0.00010372200000000054, 0.00010431999999999803, 0.00010374999999999968, 0.000103513999999999, 0.00010357000000000074, 0.00010394399999999818, 0.00010354100000000213, 0.0001036940000000014, 0.00010411100000000048, 0.0001042360000000006, 0.00010386100000000023, 0.00010379200000000185, 0.00010420900000000094, 0.00010379199999999839]</msg>
<status status="PASS" starttime="20201112 09:45:02.385" endtime="20201112 09:45:02.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.380" endtime="20201112 09:45:02.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.390" endtime="20201112 09:45:02.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:02.393" endtime="20201112 09:45:02.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.392" endtime="20201112 09:45:02.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.388" endtime="20201112 09:45:02.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.005" endtime="20201112 09:45:02.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.004" endtime="20201112 09:45:02.414"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.423" endtime="20201112 09:45:02.444"></status>
</kw>
<msg timestamp="20201112 09:45:02.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.421" endtime="20201112 09:45:02.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.445" endtime="20201112 09:45:02.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.448" endtime="20201112 09:45:02.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.419" endtime="20201112 09:45:02.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.417" endtime="20201112 09:45:02.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.457" endtime="20201112 09:45:02.744"></status>
</kw>
<msg timestamp="20201112 09:45:02.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020943375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.455" endtime="20201112 09:45:02.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020943375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.748" endtime="20201112 09:45:02.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.756" endtime="20201112 09:45:02.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.453" endtime="20201112 09:45:02.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.451" endtime="20201112 09:45:02.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:02.763" level="INFO">${RESULT} = [{'time': 0.020943375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010483299999999862, 'source_diff': 0.00010483299999999862}, {'time': 0.021052389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:02.759" endtime="20201112 09:45:02.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:02.776" level="INFO">${ACCURACY} = {'time': [0.020943375, 0.021052389, 0.021162403, 0.021270431, 0.021381431, 0.021495444, 0.021606458, 0.021718486, 0.021832486, 0.0219405, 0.022050528, 0.022158569, 0.022267528, 0.022375542, 0.02248556...</msg>
<status status="PASS" starttime="20201112 09:45:02.764" endtime="20201112 09:45:02.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.780" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:45:02.779" endtime="20201112 09:45:02.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.782" level="INFO">VALUE: [0.00010483299999999862, 0.00010458300000000184, 0.00010511100000000148, 0.00010527800000000032, 0.00010523700000000108, 0.00010501299999999755, 0.00010445799999999825, 0.00010516699999999976, 0.00010506900000000277, 0.00010525000000000118, 0.00010490299999999994, 0.00010483299999999862, 0.00010511100000000148, 0.00010454199999999914, 0.0001047360000000011, 0.00010512500000000105, 0.00010501399999999703, 0.00010531899999999955, 0.00010461099999999751, 0.00010505600000000268, 0.00010508300000000234, 0.0001048750000000008, 0.00010515300000000019, 0.00010465200000000022, 0.00010516699999999976, 0.00010509699999999844, 0.00010447200000000129, 0.00010531899999999955, 0.00010440299999999944, 0.00010490299999999994, 0.00010506999999999878, 0.00010472300000000101, 0.0001052499999999977, 0.0001048880000000009, 0.00010473599999999764, 0.00010523599999999814, 0.00010455499999999923, 0.00010527800000000032, 0.0001045689999999988, 0.00010441699999999901, 0.00010513900000000062, 0.00010472299999999754, 0.00010443000000000258, 0.0001048750000000008, 0.00010509800000000138, 0.00010508299999999887, 0.00010484700000000166, 0.00010449999999999696, 0.00010494400000000265, 0.00010468099999999883]</msg>
<status status="PASS" starttime="20201112 09:45:02.781" endtime="20201112 09:45:02.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.777" endtime="20201112 09:45:02.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.786" endtime="20201112 09:45:02.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:02.790" endtime="20201112 09:45:02.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.788" endtime="20201112 09:45:02.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.784" endtime="20201112 09:45:02.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.415" endtime="20201112 09:45:02.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.415" endtime="20201112 09:45:02.810"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.819" endtime="20201112 09:45:02.838"></status>
</kw>
<msg timestamp="20201112 09:45:02.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.818" endtime="20201112 09:45:02.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.840" endtime="20201112 09:45:02.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.842" endtime="20201112 09:45:02.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.815" endtime="20201112 09:45:02.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.813" endtime="20201112 09:45:02.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.851" endtime="20201112 09:45:03.138"></status>
</kw>
<msg timestamp="20201112 09:45:03.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.850" endtime="20201112 09:45:03.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:03.142" endtime="20201112 09:45:03.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.150" endtime="20201112 09:45:03.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.847" endtime="20201112 09:45:03.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.845" endtime="20201112 09:45:03.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:03.157" level="INFO">${RESULT} = [{'time': 0.019837972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010583299999999962, 'source_diff': 0.00010583299999999962}, {'time': 0.019949917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:03.153" endtime="20201112 09:45:03.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:03.170" level="INFO">${ACCURACY} = {'time': [0.019837972, 0.019949917, 0.020061917, 0.020170944, 0.020281944, 0.020392986, 0.020505958, 0.020614028, 0.020725986, 0.020839028, 0.020954014, 0.021066042, 0.021177042, 0.021286056, 0.021397...</msg>
<status status="PASS" starttime="20201112 09:45:03.158" endtime="20201112 09:45:03.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.174" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:45:03.173" endtime="20201112 09:45:03.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.176" level="INFO">VALUE: [0.00010583299999999962, 0.0001062360000000026, 0.0001057499999999982, 0.00010555500000000023, 0.00010636099999999926, 0.00010622199999999957, 0.00010627700000000184, 0.00010562499999999808, 0.00010545799999999925, 0.00010577799999999735, 0.00010543099999999958, 0.00010588900000000137, 0.00010548599999999839, 0.00010562500000000155, 0.00010615200000000172, 0.00010575000000000168, 0.00010559699999999894, 0.00010573599999999864, 0.00010623599999999914, 0.00010630600000000046, 0.00010576400000000125, 0.00010629200000000089, 0.00010572300000000201, 0.0001060279999999976, 0.00010586099999999876, 0.00010633300000000012, 0.00010537499999999783, 0.000106208, 0.00010576400000000125, 0.00010602800000000107, 0.00010541700000000001, 0.00010536099999999826, 0.00010569399999999993, 0.00010541600000000054, 0.00010588799999999843, 0.00010613899999999815, 0.00010555500000000023, 0.00010629199999999742, 0.00010541700000000001, 0.0001055559999999997, 0.0001053339999999986, 0.0001063339999999996, 0.00010613899999999815, 0.00010547199999999882, 0.00010616600000000129, 0.00010594400000000018, 0.00010611099999999901, 0.00010604200000000064, 0.00010631900000000055, 0.00010630600000000046]</msg>
<status status="PASS" starttime="20201112 09:45:03.175" endtime="20201112 09:45:03.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.170" endtime="20201112 09:45:03.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.180" endtime="20201112 09:45:03.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:03.183" endtime="20201112 09:45:03.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.182" endtime="20201112 09:45:03.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.178" endtime="20201112 09:45:03.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.811" endtime="20201112 09:45:03.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.811" endtime="20201112 09:45:03.204"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.213" endtime="20201112 09:45:03.232"></status>
</kw>
<msg timestamp="20201112 09:45:03.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.211" endtime="20201112 09:45:03.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.234" endtime="20201112 09:45:03.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.236" endtime="20201112 09:45:03.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.209" endtime="20201112 09:45:03.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.207" endtime="20201112 09:45:03.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.245" endtime="20201112 09:45:03.530"></status>
</kw>
<msg timestamp="20201112 09:45:03.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020160875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:03.244" endtime="20201112 09:45:03.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020160875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:03.534" endtime="20201112 09:45:03.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.542" endtime="20201112 09:45:03.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.241" endtime="20201112 09:45:03.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.239" endtime="20201112 09:45:03.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:03.549" level="INFO">${RESULT} = [{'time': 0.020160875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010722200000000057, 'source_diff': 0.00010722200000000057}, {'time': 0.020273889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:03.546" endtime="20201112 09:45:03.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:03.564" level="INFO">${ACCURACY} = {'time': [0.020160875, 0.020273889, 0.020384903, 0.020500917, 0.020610931, 0.020722931, 0.020835944, 0.020951958, 0.021065986, 0.021176, 0.021291014, 0.021403014, 0.021516042, 0.021630042, 0.021745083...</msg>
<status status="PASS" starttime="20201112 09:45:03.550" endtime="20201112 09:45:03.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.569" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:45:03.568" endtime="20201112 09:45:03.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.571" level="INFO">VALUE: [0.00010722200000000057, 0.0001067499999999992, 0.00010732000000000103, 0.00010707000000000078, 0.0001063889999999984, 0.00010693100000000108, 0.00010694399999999771, 0.000106901999999999, 0.0001065829999999969, 0.00010640300000000144, 0.00010733300000000112, 0.00010734700000000069, 0.00010670899999999997, 0.00010649999999999896, 0.00010729099999999894, 0.00010633300000000012, 0.00010654100000000166, 0.00010722200000000057, 0.0001070690000000013, 0.00010654200000000114, 0.00010672299999999954, 0.00010643100000000058, 0.00010683300000000062, 0.00010650000000000243, 0.0001067080000000005, 0.00010666699999999779, 0.00010668000000000136, 0.00010734800000000017, 0.00010638900000000187, 0.00010644500000000015, 0.00010659699999999994, 0.00010668100000000083, 0.00010723600000000014, 0.00010702800000000207, 0.0001063620000000022, 0.00010661099999999951, 0.00010654100000000166, 0.0001072499999999997, 0.0001070279999999986, 0.00010691699999999804, 0.00010648599999999939, 0.00010666700000000126, 0.00010686100000000323, 0.0001065690000000008, 0.00010662499999999908, 0.00010718000000000186, 0.00010709700000000044, 0.00010663900000000212, 0.00010718100000000133, 0.00010711100000000001]</msg>
<status status="PASS" starttime="20201112 09:45:03.570" endtime="20201112 09:45:03.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.565" endtime="20201112 09:45:03.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.575" endtime="20201112 09:45:03.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:03.578" endtime="20201112 09:45:03.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.577" endtime="20201112 09:45:03.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.573" endtime="20201112 09:45:03.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.205" endtime="20201112 09:45:03.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.205" endtime="20201112 09:45:03.599"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.608" endtime="20201112 09:45:03.627"></status>
</kw>
<msg timestamp="20201112 09:45:03.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.606" endtime="20201112 09:45:03.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.629" endtime="20201112 09:45:03.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.631" endtime="20201112 09:45:03.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.604" endtime="20201112 09:45:03.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.602" endtime="20201112 09:45:03.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.640" endtime="20201112 09:45:03.929"></status>
</kw>
<msg timestamp="20201112 09:45:03.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:03.638" endtime="20201112 09:45:03.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:03.933" endtime="20201112 09:45:03.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.941" endtime="20201112 09:45:03.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.636" endtime="20201112 09:45:03.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.634" endtime="20201112 09:45:03.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:03.948" level="INFO">${RESULT} = [{'time': 0.020389875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010824999999999724, 'source_diff': 0.00010824999999999724}, {'time': 0.020501889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:03.944" endtime="20201112 09:45:03.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:03.961" level="INFO">${ACCURACY} = {'time': [0.020389875, 0.020501889, 0.020618903, 0.020729944, 0.020842931, 0.020958944, 0.021074986, 0.021189972, 0.021303, 0.021417986, 0.02153, 0.021641014, 0.021753028, 0.021866042, 0.021981056, 0....</msg>
<status status="PASS" starttime="20201112 09:45:03.949" endtime="20201112 09:45:03.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.965" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:45:03.964" endtime="20201112 09:45:03.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.967" level="INFO">VALUE: [0.00010824999999999724, 0.00010813900000000015, 0.00010815299999999972, 0.00010805499999999926, 0.00010818099999999886, 0.00010809700000000144, 0.00010804199999999917, 0.0001077500000000002, 0.00010787500000000033, 0.00010772200000000107, 0.00010759700000000094, 0.00010754199999999867, 0.00010807000000000178, 0.00010787500000000033, 0.00010801400000000003, 0.00010758300000000137, 0.0001080829999999984, 0.00010748600000000039, 0.00010768000000000236, 0.00010768099999999836, 0.00010813899999999668, 0.00010748600000000039, 0.00010747300000000029, 0.00010779100000000291, 0.00010767999999999889, 0.00010759700000000094, 0.00010836099999999779, 0.00010798700000000036, 0.00010813900000000015, 0.00010758300000000137, 0.0001073889999999994, 0.0001078479999999972, 0.00010793100000000208, 0.00010815299999999972, 0.00010772200000000107, 0.00010805500000000273, 0.00010740299999999897, 0.00010801400000000003, 0.00010813900000000015, 0.00010763799999999671, 0.00010827799999999985, 0.0001080279999999996, 0.00010806899999999883, 0.00010801400000000003, 0.00010773599999999717, 0.00010780499999999901, 0.00010759700000000094, 0.00010833300000000212, 0.0001078889999999999, 0.00010827799999999985]</msg>
<status status="PASS" starttime="20201112 09:45:03.966" endtime="20201112 09:45:03.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.961" endtime="20201112 09:45:03.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.971" endtime="20201112 09:45:03.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:03.974" endtime="20201112 09:45:03.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.973" endtime="20201112 09:45:03.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.969" endtime="20201112 09:45:03.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.600" endtime="20201112 09:45:03.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.599" endtime="20201112 09:45:03.995"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.004" endtime="20201112 09:45:04.024"></status>
</kw>
<msg timestamp="20201112 09:45:04.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:04.002" endtime="20201112 09:45:04.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:04.026" endtime="20201112 09:45:04.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.028" endtime="20201112 09:45:04.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.000" endtime="20201112 09:45:04.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.998" endtime="20201112 09:45:04.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.037" endtime="20201112 09:45:04.324"></status>
</kw>
<msg timestamp="20201112 09:45:04.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020282111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.035" endtime="20201112 09:45:04.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020282111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.329" endtime="20201112 09:45:04.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.337" endtime="20201112 09:45:04.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.033" endtime="20201112 09:45:04.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.031" endtime="20201112 09:45:04.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.343" level="INFO">${RESULT} = [{'time': 0.020390972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010886100000000176, 'source_diff': 0.00010886100000000176}, {'time': 0.020502958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:04.340" endtime="20201112 09:45:04.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:04.356" level="INFO">${ACCURACY} = {'time': [0.020390972, 0.020502958, 0.020619, 0.020736014, 0.020854, 0.020972014, 0.021087042, 0.021200042, 0.021313069, 0.021427069, 0.021540083, 0.021655097, 0.021771125, 0.021887125, 0.022001139, 0...</msg>
<status status="PASS" starttime="20201112 09:45:04.344" endtime="20201112 09:45:04.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.361" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:45:04.360" endtime="20201112 09:45:04.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.363" level="INFO">VALUE: [0.00010886100000000176, 0.00010933300000000312, 0.00010931900000000008, 0.00010929200000000042, 0.00010880599999999949, 0.00010886100000000176, 0.00010887500000000133, 0.00010859799999999795, 0.00010844399999999921, 0.00010841600000000007, 0.00010859700000000194, 0.00010901400000000103, 0.00010898599999999842, 0.00010845799999999878, 0.00010848599999999792, 0.00010875000000000121, 0.00010918099999999986, 0.00010863900000000065, 0.0001085280000000001, 0.00010918000000000039, 0.00010861100000000151, 0.00010876400000000078, 0.00010886100000000176, 0.00010905599999999974, 0.00010866699999999979, 0.00010883399999999863, 0.00010926400000000128, 0.00010933299999999965, 0.00010883299999999915, 0.0001092219999999991, 0.00010905500000000026, 0.00010866600000000032, 0.00010877800000000035, 0.00010913900000000115, 0.00010880599999999949, 0.00010880599999999949, 0.00010927800000000085, 0.00010905599999999974, 0.00010875000000000121, 0.0001087219999999986, 0.00010934699999999922, 0.00010845799999999878, 0.00010926400000000128, 0.0001092219999999991, 0.00010929200000000042, 0.00010930599999999999, 0.00010841699999999954, 0.000108902000000001, 0.00010912500000000158, 0.00010886099999999829]</msg>
<status status="PASS" starttime="20201112 09:45:04.362" endtime="20201112 09:45:04.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.357" endtime="20201112 09:45:04.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.367" endtime="20201112 09:45:04.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:04.370" endtime="20201112 09:45:04.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.369" endtime="20201112 09:45:04.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.365" endtime="20201112 09:45:04.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.996" endtime="20201112 09:45:04.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.996" endtime="20201112 09:45:04.391"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.400" endtime="20201112 09:45:04.418"></status>
</kw>
<msg timestamp="20201112 09:45:04.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:04.398" endtime="20201112 09:45:04.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:04.420" endtime="20201112 09:45:04.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.422" endtime="20201112 09:45:04.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.396" endtime="20201112 09:45:04.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.393" endtime="20201112 09:45:04.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.431" endtime="20201112 09:45:04.718"></status>
</kw>
<msg timestamp="20201112 09:45:04.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.430" endtime="20201112 09:45:04.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.723" endtime="20201112 09:45:04.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.731" endtime="20201112 09:45:04.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.427" endtime="20201112 09:45:04.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.425" endtime="20201112 09:45:04.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.737" level="INFO">${RESULT} = [{'time': 0.019981361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010981900000000058, 'source_diff': 0.00010981900000000058}, {'time': 0.020095361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:04.734" endtime="20201112 09:45:04.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:04.750" level="INFO">${ACCURACY} = {'time': [0.019981361, 0.020095361, 0.020208389, 0.020323444, 0.020441403, 0.020555431, 0.020667431, 0.020779444, 0.020893458, 0.021011486, 0.021129486, 0.021242528, 0.021355514, 0.021473528, 0.021588...</msg>
<status status="PASS" starttime="20201112 09:45:04.738" endtime="20201112 09:45:04.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.755" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:45:04.754" endtime="20201112 09:45:04.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.757" level="INFO">VALUE: [0.00010981900000000058, 0.00011029199999999795, 0.00010962499999999861, 0.00010993000000000114, 0.00010986099999999929, 0.00010961199999999852, 0.00010972299999999907, 0.00010980500000000101, 0.00011006900000000083, 0.00010954200000000067, 0.00011009699999999997, 0.00010941700000000054, 0.00010959699999999947, 0.00010979199999999745, 0.00011018000000000139, 0.00011009799999999945, 0.00011005500000000126, 0.00011004200000000117, 0.00010968000000000089, 0.00010966600000000132, 0.00010983300000000015, 0.00010970800000000003, 0.00010973599999999917, 0.00011036099999999979, 0.00011033400000000013, 0.00011020800000000053, 0.00010994400000000071, 0.00010990300000000147, 0.00011013899999999868, 0.00010968100000000036, 0.00010955600000000024, 0.00010941700000000054, 0.0001098890000000019, 0.00011005600000000074, 0.00010988899999999843, 0.00010947199999999935, 0.00010981900000000058, 0.00011026400000000228, 0.00011037499999999936, 0.00010965300000000122, 0.00010987499999999886, 0.00011018099999999739, 0.00011013899999999868, 0.00010943100000000011, 0.00010980600000000049, 0.00010951399999999806, 0.00010956900000000033, 0.00010977799999999788, 0.00011013899999999868, 0.0001100280000000016]</msg>
<status status="PASS" starttime="20201112 09:45:04.756" endtime="20201112 09:45:04.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.751" endtime="20201112 09:45:04.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.761" endtime="20201112 09:45:04.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:04.764" endtime="20201112 09:45:04.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.763" endtime="20201112 09:45:04.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.759" endtime="20201112 09:45:04.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.392" endtime="20201112 09:45:04.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.391" endtime="20201112 09:45:04.785"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.794" endtime="20201112 09:45:04.812"></status>
</kw>
<msg timestamp="20201112 09:45:04.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:04.792" endtime="20201112 09:45:04.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:04.814" endtime="20201112 09:45:04.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.816" endtime="20201112 09:45:04.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.790" endtime="20201112 09:45:04.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.788" endtime="20201112 09:45:04.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.825" endtime="20201112 09:45:05.112"></status>
</kw>
<msg timestamp="20201112 09:45:05.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.824" endtime="20201112 09:45:05.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.116" endtime="20201112 09:45:05.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.124" endtime="20201112 09:45:05.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.821" endtime="20201112 09:45:05.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.819" endtime="20201112 09:45:05.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:05.131" level="INFO">${RESULT} = [{'time': 0.019846583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011112500000000011, 'source_diff': 0.00011112500000000011}, {'time': 0.019961583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:05.127" endtime="20201112 09:45:05.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:05.145" level="INFO">${ACCURACY} = {'time': [0.019846583, 0.019961583, 0.020079597, 0.020199625, 0.020317625, 0.020431667, 0.020550667, 0.020669667, 0.020788681, 0.020904694, 0.021024708, 0.021138708, 0.021255722, 0.021373736, 0.021488...</msg>
<status status="PASS" starttime="20201112 09:45:05.132" endtime="20201112 09:45:05.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.149" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:45:05.148" endtime="20201112 09:45:05.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.152" level="INFO">VALUE: [0.00011112500000000011, 0.0001105830000000009, 0.00011120800000000153, 0.00011043099999999764, 0.00011097199999999738, 0.0001108480000000002, 0.00011086100000000029, 0.00011055599999999777, 0.00011108400000000088, 0.00011119400000000196, 0.00011066599999999885, 0.00011120799999999806, 0.00011048599999999992, 0.00011047200000000035, 0.00011130600000000199, 0.00011049999999999949, 0.0001107090000000005, 0.00011137500000000036, 0.00011040300000000197, 0.0001105549999999983, 0.00011074999999999974, 0.00011117999999999892, 0.00011127799999999938, 0.00011061100000000004, 0.00011086100000000029, 0.00011074999999999974, 0.00011077799999999888, 0.00011132000000000156, 0.00011076399999999931, 0.00011052799999999863, 0.00011120800000000153, 0.00011116700000000229, 0.0001108480000000002, 0.00011062499999999961, 0.00011088899999999943, 0.00011126400000000328, 0.000110902999999999, 0.00011138899999999993, 0.00011087499999999986, 0.00011101399999999956, 0.00011049999999999949, 0.00011079199999999845, 0.00011065299999999875, 0.00011045799999999731, 0.00011093099999999814, 0.0001105700000000008, 0.00011109800000000045, 0.0001105830000000009, 0.00011045799999999731, 0.00011134700000000122]</msg>
<status status="PASS" starttime="20201112 09:45:05.150" endtime="20201112 09:45:05.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.146" endtime="20201112 09:45:05.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.155" endtime="20201112 09:45:05.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:05.159" endtime="20201112 09:45:05.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.157" endtime="20201112 09:45:05.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.154" endtime="20201112 09:45:05.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.786" endtime="20201112 09:45:05.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.786" endtime="20201112 09:45:05.180"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.188" endtime="20201112 09:45:05.209"></status>
</kw>
<msg timestamp="20201112 09:45:05.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:05.187" endtime="20201112 09:45:05.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:05.210" endtime="20201112 09:45:05.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.213" endtime="20201112 09:45:05.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.184" endtime="20201112 09:45:05.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.182" endtime="20201112 09:45:05.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.222" endtime="20201112 09:45:05.508"></status>
</kw>
<msg timestamp="20201112 09:45:05.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020722417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020834264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.220" endtime="20201112 09:45:05.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020722417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020834264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.512" endtime="20201112 09:45:05.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.520" endtime="20201112 09:45:05.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.218" endtime="20201112 09:45:05.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.216" endtime="20201112 09:45:05.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:05.526" level="INFO">${RESULT} = [{'time': 0.020834264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011184700000000172, 'source_diff': 0.00011184700000000172}, {'time': 0.020956292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:05.523" endtime="20201112 09:45:05.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:05.539" level="INFO">${ACCURACY} = {'time': [0.020834264, 0.020956292, 0.021076306, 0.021192319, 0.021312319, 0.021430347, 0.021550361, 0.021668431, 0.021786375, 0.021904403, 0.022021403, 0.022141431, 0.022255431, 0.022376444, 0.022491...</msg>
<status status="PASS" starttime="20201112 09:45:05.527" endtime="20201112 09:45:05.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.544" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:45:05.543" endtime="20201112 09:45:05.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.546" level="INFO">VALUE: [0.00011184700000000172, 0.00011237500000000136, 0.00011180599999999902, 0.00011184700000000172, 0.00011138800000000046, 0.00011201400000000056, 0.00011226400000000081, 0.00011180599999999902, 0.00011145800000000178, 0.00011144499999999821, 0.00011147199999999788, 0.00011233399999999866, 0.00011175000000000074, 0.00011158299999999843, 0.00011162500000000061, 0.00011151400000000006, 0.00011176400000000031, 0.00011243000000000017, 0.00011155599999999877, 0.00011219499999999896, 0.00011205599999999927, 0.00011143100000000211, 0.0001117229999999976, 0.00011204100000000022, 0.00011192999999999967, 0.00011134699999999775, 0.00011166699999999932, 0.00011241700000000007, 0.00011138899999999993, 0.00011191699999999957, 0.00011152799999999963, 0.00011236100000000179, 0.00011142999999999917, 0.00011224999999999777, 0.00011161099999999757, 0.00011170799999999856, 0.00011141699999999907, 0.00011137500000000036, 0.00011205599999999927, 0.00011186200000000077, 0.00011209800000000145, 0.00011166600000000332, 0.00011162500000000061, 0.00011233299999999918, 0.0001120549999999998, 0.00011209700000000197, 0.00011233299999999918, 0.00011147199999999788, 0.00011166699999999932, 0.00011154099999999972]</msg>
<status status="PASS" starttime="20201112 09:45:05.545" endtime="20201112 09:45:05.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.540" endtime="20201112 09:45:05.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.550" endtime="20201112 09:45:05.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:05.553" endtime="20201112 09:45:05.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.552" endtime="20201112 09:45:05.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.548" endtime="20201112 09:45:05.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.181" endtime="20201112 09:45:05.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.180" endtime="20201112 09:45:05.574"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.583" endtime="20201112 09:45:05.603"></status>
</kw>
<msg timestamp="20201112 09:45:05.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:05.582" endtime="20201112 09:45:05.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:05.604" endtime="20201112 09:45:05.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.607" endtime="20201112 09:45:05.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.579" endtime="20201112 09:45:05.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.576" endtime="20201112 09:45:05.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.616" endtime="20201112 09:45:05.902"></status>
</kw>
<msg timestamp="20201112 09:45:05.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02077825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:05.614" endtime="20201112 09:45:05.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02077825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:05.906" endtime="20201112 09:45:05.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.915" endtime="20201112 09:45:05.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.612" endtime="20201112 09:45:05.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.610" endtime="20201112 09:45:05.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:05.921" level="INFO">${RESULT} = [{'time': 0.020891347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001130969999999995, 'source_diff': 0.0001130969999999995}, {'time': 0.021011361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:45:05.918" endtime="20201112 09:45:05.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:05.934" level="INFO">${ACCURACY} = {'time': [0.020891347, 0.021011361, 0.021132458, 0.021253389, 0.021371403, 0.021490403, 0.021606486, 0.021723431, 0.021844458, 0.021964472, 0.022086472, 0.022205486, 0.0223275, 0.022448514, 0.02256952...</msg>
<status status="PASS" starttime="20201112 09:45:05.922" endtime="20201112 09:45:05.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.939" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:45:05.938" endtime="20201112 09:45:05.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.941" level="INFO">VALUE: [0.0001130969999999995, 0.00011322199999999963, 0.00011341599999999813, 0.00011279200000000045, 0.00011234700000000222, 0.00011268100000000336, 0.00011261100000000204, 0.00011329200000000095, 0.00011334699999999975, 0.00011258299999999943, 0.00011243000000000017, 0.00011299999999999852, 0.000112596999999999, 0.00011276399999999784, 0.00011326399999999834, 0.00011319499999999996, 0.00011319499999999996, 0.00011244399999999974, 0.0001130969999999995, 0.00011306900000000036, 0.00011316700000000082, 0.00011256999999999934, 0.00011258299999999943, 0.00011277800000000088, 0.00011323700000000214, 0.00011255599999999977, 0.00011283299999999968, 0.0001128749999999984, 0.00011315300000000125, 0.00011334699999999975, 0.00011243099999999964, 0.00011338899999999846, 0.00011283399999999916, 0.00011248599999999845, 0.00011281999999999959, 0.00011269399999999999, 0.00011302699999999818, 0.00011308299999999993, 0.00011243099999999964, 0.00011269499999999946, 0.00011298599999999895, 0.00011287500000000186, 0.00011263900000000118, 0.00011294499999999971, 0.00011243000000000017, 0.00011237500000000136, 0.0001132359999999992, 0.00011311100000000254, 0.0001129169999999971, 0.00011262499999999814]</msg>
<status status="PASS" starttime="20201112 09:45:05.940" endtime="20201112 09:45:05.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.935" endtime="20201112 09:45:05.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.945" endtime="20201112 09:45:05.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:05.948" endtime="20201112 09:45:05.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.947" endtime="20201112 09:45:05.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.943" endtime="20201112 09:45:05.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.575" endtime="20201112 09:45:05.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.574" endtime="20201112 09:45:05.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.425" endtime="20201112 09:45:05.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:05.973" endtime="20201112 09:45:05.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.972" endtime="20201112 09:45:05.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.970" endtime="20201112 09:45:05.994"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:44:23.323" endtime="20201112 09:45:05.994" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:43:36.051" endtime="20201112 09:45:05.999"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.055" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:45:06.063" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:45:07.183" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:45:06.053" endtime="20201112 09:45:07.184"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.186" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:45:07.185" endtime="20201112 09:45:07.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.052" endtime="20201112 09:45:07.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:07.189" endtime="20201112 09:45:07.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.188" endtime="20201112 09:45:07.499"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.511" endtime="20201112 09:45:10.537"></status>
</kw>
<msg timestamp="20201112 09:45:10.538" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:07.509" endtime="20201112 09:45:10.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:10.541" endtime="20201112 09:45:10.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:45:10.546" endtime="20201112 09:45:10.550"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:07.507" endtime="20201112 09:45:10.552"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:07.505" endtime="20201112 09:45:10.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.503" endtime="20201112 09:45:10.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:45:10.561" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:45:10.560" endtime="20201112 09:45:10.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.555" endtime="20201112 09:45:10.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.503" endtime="20201112 09:45:10.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.502" endtime="20201112 09:45:10.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.565" endtime="20201112 09:45:10.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.501" endtime="20201112 09:45:10.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.571" endtime="20201112 09:45:10.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.499" endtime="20201112 09:45:10.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.051" endtime="20201112 09:45:10.576"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:10.590" endtime="20201112 09:45:10.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.585" endtime="20201112 09:45:10.613"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.628" endtime="20201112 09:45:13.654"></status>
</kw>
<msg timestamp="20201112 09:45:13.655" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:10.626" endtime="20201112 09:45:13.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.660" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:13.657" endtime="20201112 09:45:13.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.666" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:45:13.662" endtime="20201112 09:45:13.667"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:10.624" endtime="20201112 09:45:13.668"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:10.621" endtime="20201112 09:45:13.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.620" endtime="20201112 09:45:13.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:45:13.678" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:45:13.676" endtime="20201112 09:45:13.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.672" endtime="20201112 09:45:13.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.619" endtime="20201112 09:45:13.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.619" endtime="20201112 09:45:13.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.681" endtime="20201112 09:45:13.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.617" endtime="20201112 09:45:13.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.614" endtime="20201112 09:45:13.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.583" endtime="20201112 09:45:13.687"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:13.694" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.713" endtime="20201112 09:45:15.822"></status>
</kw>
<msg timestamp="20201112 09:45:15.824" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6082786, 'wakeups': [6092793, 6102793, 6112793, 6122793, 6132793, 6142...</msg>
<status status="PASS" starttime="20201112 09:45:13.708" endtime="20201112 09:45:15.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.829" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6082786, 'wakeups': [6092793, 6102793, 6112793, 6122793, 6132793, 6142...</msg>
<status status="PASS" starttime="20201112 09:45:15.826" endtime="20201112 09:45:15.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:15.832" endtime="20201112 09:45:15.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.703" endtime="20201112 09:45:15.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.699" endtime="20201112 09:45:15.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:15.844" level="INFO">${RESULT} = {'start-time': 6082786, 'wakeups': [6092793, 6102793, 6112793, 6122793, 6132793, 6142793, 6152793, 6162793, 6172793, 6182793, 6192793, 6202793, 6212793, 6222793, 6232793, 6242793, 6252793, 6262793, 62...</msg>
<status status="PASS" starttime="20201112 09:45:15.840" endtime="20201112 09:45:15.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.853" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:15.851" endtime="20201112 09:45:15.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.857" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:15.855" endtime="20201112 09:45:15.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.846" endtime="20201112 09:45:15.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.868" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:15.866" endtime="20201112 09:45:15.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.873" level="INFO">VALUE: 6082786</msg>
<status status="PASS" starttime="20201112 09:45:15.870" endtime="20201112 09:45:15.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.861" endtime="20201112 09:45:15.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.880" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:15.879" endtime="20201112 09:45:15.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.882" level="INFO">VALUE: [6092793, 6102793, 6112793, 6122793, 6132793, 6142793, 6152793, 6162793, 6172793, 6182793, 6192793, 6202793, 6212793, 6222793, 6232793, 6242793, 6252793, 6262793, 6272793, 6282793, 6292793, 6302793, 6312793, 6322793, 6332793, 6342793, 6352793, 6362793, 6372793, 6382793, 6392793, 6402793, 6412793, 6422793, 6432793, 6442793, 6452793, 6462793, 6472793, 6482793, 6492793, 6502793, 6512793, 6522793, 6532793, 6542793, 6552793, 6562793, 6572793, 6582793, 6592793, 6602793, 6612793, 6622793, 6632793, 6642793, 6652793, 6662793, 6672793, 6682793, 6692793, 6702793, 6712793, 6722793, 6732793, 6742793, 6752793, 6762793, 6772793, 6782793, 6792793, 6802793, 6812793, 6822793, 6832793, 6842793, 6852793, 6862793, 6872793, 6882793, 6892793, 6902793, 6912793, 6922793, 6932793, 6942793, 6952793, 6962793, 6972793, 6982793, 6992793, 7002793, 7012793, 7022793, 7032793, 7042793, 7052793, 7062793, 7072793, 7082793]</msg>
<status status="PASS" starttime="20201112 09:45:15.881" endtime="20201112 09:45:15.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.876" endtime="20201112 09:45:15.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:15.889" endtime="20201112 09:45:16.193"></status>
</kw>
<msg timestamp="20201112 09:45:16.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113172583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.123180625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:15.888" endtime="20201112 09:45:16.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113172583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.123180625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:16.197" endtime="20201112 09:45:16.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.204" endtime="20201112 09:45:16.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.885" endtime="20201112 09:45:16.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.883" endtime="20201112 09:45:16.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:16.231" level="INFO">${RESULT} = {'time': [3.113172583, 3.123180625, 3.133181792, 3.143182903, 3.153184069, 3.163185194, 3.173186347, 3.183187458, 3.193188667, 3.20318975, 3.213190917, 3.223192014, 3.233193167, 3.243194292, 3.2531954...</msg>
<status status="PASS" starttime="20201112 09:45:16.208" endtime="20201112 09:45:16.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.236" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:16.235" endtime="20201112 09:45:16.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.238" level="INFO">VALUE: 3.113172583</msg>
<status status="PASS" starttime="20201112 09:45:16.237" endtime="20201112 09:45:16.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.232" endtime="20201112 09:45:16.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.243" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:16.242" endtime="20201112 09:45:16.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.245" level="INFO">VALUE: [3.123180625, 3.133181792, 3.143182903, 3.153184069, 3.163185194, 3.173186347, 3.183187458, 3.193188667, 3.20318975, 3.213190917, 3.223192014, 3.233193167, 3.243194292, 3.253195444, 3.263196569, 3.273197736, 3.283198889, 3.2932, 3.303201125, 3.313202278, 3.323203389, 3.333204556, 3.343205694, 3.353206847, 3.363207944, 3.373209111, 3.383210222, 3.393211389, 3.403212514, 3.413213667, 3.423214792, 3.433215958, 3.443217056, 3.453218236, 3.463219333, 3.4732205, 3.483221625, 3.493222792, 3.503223889, 3.513225056, 3.523226167, 3.533227347, 3.543228444, 3.553229611, 3.563230722, 3.573231889, 3.583233069, 3.593234167, 3.603235278, 3.613236444, 3.623237556, 3.633238736, 3.643239833, 3.653241, 3.663242111, 3.673243278, 3.683244389, 3.693245556, 3.703246667, 3.713247819, 3.723248972, 3.733250097, 3.743251222, 3.753252389, 3.763253514, 3.773254653, 3.783255778, 3.793257, 3.803258056, 3.813259208, 3.823260319, 3.833261486, 3.843262597, 3.853263764, 3.863264875, 3.873266042, 3.883267153, 3.893268319, 3.903269431, 3.913270597, 3.923271708, 3.933272875, 3.943274, 3.953275153, 3.963276264, 3.973277486, 3.983278556, 3.993279722, 4.003280847, 4.013282, 4.023283111, 4.033284264, 4.043285375, 4.053286542, 4.063287667, 4.073288833, 4.083289944, 4.093291111, 4.103292222, 4.113293389] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:16.244" endtime="20201112 09:45:16.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.239" endtime="20201112 09:45:16.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.249" endtime="20201112 09:45:16.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:16.252" endtime="20201112 09:45:16.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.250" endtime="20201112 09:45:16.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.247" endtime="20201112 09:45:16.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.696" endtime="20201112 09:45:16.273"></status>
</kw>
<msg timestamp="20201112 09:45:16.273" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.281" endtime="20201112 09:45:18.389"></status>
</kw>
<msg timestamp="20201112 09:45:18.390" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8649655, 'wakeups': [8659662, 8669662, 8679662, 8689662, 8699662, 8709...</msg>
<status status="PASS" starttime="20201112 09:45:16.279" endtime="20201112 09:45:18.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.396" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8649655, 'wakeups': [8659662, 8669662, 8679662, 8689662, 8699662, 8709...</msg>
<status status="PASS" starttime="20201112 09:45:18.392" endtime="20201112 09:45:18.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.398" endtime="20201112 09:45:18.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.277" endtime="20201112 09:45:18.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.275" endtime="20201112 09:45:18.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:18.409" level="INFO">${RESULT} = {'start-time': 8649655, 'wakeups': [8659662, 8669662, 8679662, 8689662, 8699662, 8709662, 8719662, 8729662, 8739662, 8749662, 8759662, 8769662, 8779662, 8789662, 8799662, 8809662, 8819662, 8829662, 88...</msg>
<status status="PASS" starttime="20201112 09:45:18.405" endtime="20201112 09:45:18.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.417" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:18.415" endtime="20201112 09:45:18.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.421" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:18.419" endtime="20201112 09:45:18.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.411" endtime="20201112 09:45:18.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.433" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:18.430" endtime="20201112 09:45:18.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.435" level="INFO">VALUE: 8649655</msg>
<status status="PASS" starttime="20201112 09:45:18.434" endtime="20201112 09:45:18.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.424" endtime="20201112 09:45:18.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.440" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:18.439" endtime="20201112 09:45:18.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.442" level="INFO">VALUE: [8659662, 8669662, 8679662, 8689662, 8699662, 8709662, 8719662, 8729662, 8739662, 8749662, 8759662, 8769662, 8779662, 8789662, 8799662, 8809662, 8819662, 8829662, 8839662, 8849662, 8859662, 8869662, 8879662, 8889662, 8899662, 8909662, 8919662, 8929662, 8939662, 8949662, 8959662, 8969662, 8979662, 8989662, 8999662, 9009662, 9019662, 9029662, 9039662, 9049662, 9059662, 9069662, 9079662, 9089662, 9099662, 9109662, 9119662, 9129662, 9139662, 9149662, 9159662, 9169662, 9179662, 9189662, 9199662, 9209662, 9219662, 9229662, 9239662, 9249662, 9259662, 9269662, 9279662, 9289662, 9299662, 9309662, 9319662, 9329662, 9339662, 9349662, 9359662, 9369662, 9379662, 9389662, 9399662, 9409662, 9419662, 9429662, 9439662, 9449662, 9459662, 9469662, 9479662, 9489662, 9499662, 9509662, 9519662, 9529662, 9539662, 9549662, 9559662, 9569662, 9579662, 9589662, 9599662, 9609662, 9619662, 9629662, 9639662, 9649662]</msg>
<status status="PASS" starttime="20201112 09:45:18.441" endtime="20201112 09:45:18.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.436" endtime="20201112 09:45:18.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.449" endtime="20201112 09:45:18.741"></status>
</kw>
<msg timestamp="20201112 09:45:18.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018969514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028978014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:18.448" endtime="20201112 09:45:18.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018969514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028978014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:18.744" endtime="20201112 09:45:18.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.752" endtime="20201112 09:45:18.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.445" endtime="20201112 09:45:18.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.443" endtime="20201112 09:45:18.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:18.778" level="INFO">${RESULT} = {'time': [0.018969514, 0.028978014, 0.038979181, 0.048980292, 0.058981458, 0.068982569, 0.078983736, 0.088984847, 0.098986014, 0.108987153, 0.118988292, 0.128989417, 0.138990569, 0.148991694, 0.158992...</msg>
<status status="PASS" starttime="20201112 09:45:18.755" endtime="20201112 09:45:18.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.782" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:18.781" endtime="20201112 09:45:18.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.784" level="INFO">VALUE: 0.018969514</msg>
<status status="PASS" starttime="20201112 09:45:18.783" endtime="20201112 09:45:18.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.778" endtime="20201112 09:45:18.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.789" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:18.788" endtime="20201112 09:45:18.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.792" level="INFO">VALUE: [0.028978014, 0.038979181, 0.048980292, 0.058981458, 0.068982569, 0.078983736, 0.088984847, 0.098986014, 0.108987153, 0.118988292, 0.128989417, 0.138990569, 0.148991694, 0.158992875, 0.168993972, 0.178995208, 0.18899625, 0.198997417, 0.208998528, 0.218999694, 0.229000861, 0.239001986, 0.249003097, 0.259004264, 0.269005403, 0.279006556, 0.289007653, 0.299008833, 0.309009944, 0.319011111, 0.329012222, 0.339013389, 0.3490145, 0.359015667, 0.369016792, 0.379017958, 0.389019069, 0.399020236, 0.409021347, 0.419022514, 0.429023639, 0.439024806, 0.449025931, 0.459027097, 0.469028208, 0.479029361, 0.489030486, 0.499031653, 0.509032764, 0.519033931, 0.529035069, 0.539036208, 0.549037347, 0.5590385, 0.569039639, 0.579040778, 0.589041903, 0.599043056, 0.609044181, 0.619045361, 0.629046458, 0.639047625, 0.64904875, 0.659049903, 0.669051042, 0.67905225, 0.689053292, 0.699054486, 0.709055583, 0.719056736, 0.729057833, 0.739059, 0.749060111, 0.759061264, 0.769062389, 0.779063542, 0.789064653, 0.799065806, 0.809066917, 0.819068097, 0.829069194, 0.839070347, 0.849071458, 0.859072639, 0.869073736, 0.879074903, 0.889076, 0.899077181, 0.909078278, 0.919079431, 0.929080542, 0.939081722, 0.949082819, 0.959083972, 0.969085083, 0.979086292, 0.989087403, 0.999088514, 1.009089639, 1.019090792] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:18.790" endtime="20201112 09:45:18.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.785" endtime="20201112 09:45:18.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.796" endtime="20201112 09:45:18.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:18.799" endtime="20201112 09:45:18.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.798" endtime="20201112 09:45:18.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.794" endtime="20201112 09:45:18.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.273" endtime="20201112 09:45:18.820"></status>
</kw>
<msg timestamp="20201112 09:45:18.820" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.828" endtime="20201112 09:45:20.946"></status>
</kw>
<msg timestamp="20201112 09:45:20.947" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11196115, 'wakeups': [11206122, 11216122, 11226122, 11236122, 11246122...</msg>
<status status="PASS" starttime="20201112 09:45:18.827" endtime="20201112 09:45:20.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.953" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11196115, 'wakeups': [11206122, 11216122, 11226122, 11236122, 11246122...</msg>
<status status="PASS" starttime="20201112 09:45:20.949" endtime="20201112 09:45:20.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.955" endtime="20201112 09:45:20.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.824" endtime="20201112 09:45:20.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.822" endtime="20201112 09:45:20.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:20.966" level="INFO">${RESULT} = {'start-time': 11196115, 'wakeups': [11206122, 11216122, 11226122, 11236122, 11246122, 11256122, 11266122, 11276122, 11286122, 11296122, 11306122, 11316122, 11326122, 11336122, 11346122, 11356122, 113...</msg>
<status status="PASS" starttime="20201112 09:45:20.962" endtime="20201112 09:45:20.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.974" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:20.972" endtime="20201112 09:45:20.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.978" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:20.976" endtime="20201112 09:45:20.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.967" endtime="20201112 09:45:20.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.988" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:20.986" endtime="20201112 09:45:20.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.990" level="INFO">VALUE: 11196115</msg>
<status status="PASS" starttime="20201112 09:45:20.989" endtime="20201112 09:45:20.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.981" endtime="20201112 09:45:20.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.995" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:20.994" endtime="20201112 09:45:20.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.998" level="INFO">VALUE: [11206122, 11216122, 11226122, 11236122, 11246122, 11256122, 11266122, 11276122, 11286122, 11296122, 11306122, 11316122, 11326122, 11336122, 11346122, 11356122, 11366122, 11376122, 11386122, 11396122, 11406122, 11416122, 11426122, 11436122, 11446122, 11456122, 11466122, 11476122, 11486122, 11496122, 11506122, 11516122, 11526122, 11536122, 11546122, 11556122, 11566122, 11576122, 11586122, 11596122, 11606122, 11616122, 11626122, 11636122, 11646122, 11656122, 11666122, 11676122, 11686122, 11696122, 11706122, 11716122, 11726122, 11736122, 11746122, 11756122, 11766122, 11776122, 11786122, 11796122, 11806122, 11816122, 11826122, 11836122, 11846122, 11856122, 11866122, 11876122, 11886122, 11896122, 11906122, 11916122, 11926122, 11936122, 11946122, 11956122, 11966122, 11976122, 11986122, 11996122, 12006122, 12016122, 12026122, 12036122, 12046122, 12056122, 12066122, 12076122, 12086122, 12096122, 12106122, 12116122, 12126122, 12136122, 12146122, 12156122, 12166122, 12176122, 12186122, 12196122]</msg>
<status status="PASS" starttime="20201112 09:45:20.997" endtime="20201112 09:45:20.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.992" endtime="20201112 09:45:20.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:21.010" endtime="20201112 09:45:21.302"></status>
</kw>
<msg timestamp="20201112 09:45:21.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028120278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:21.008" endtime="20201112 09:45:21.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028120278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:21.306" endtime="20201112 09:45:21.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:21.314" endtime="20201112 09:45:21.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.006" endtime="20201112 09:45:21.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.000" endtime="20201112 09:45:21.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:21.340" level="INFO">${RESULT} = {'time': [0.018111819, 0.028120278, 0.038121431, 0.048122569, 0.058123708, 0.068124819, 0.078125986, 0.088127097, 0.098128264, 0.108129389, 0.118130542, 0.128131667, 0.138132833, 0.148133944, 0.158135...</msg>
<status status="PASS" starttime="20201112 09:45:21.317" endtime="20201112 09:45:21.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.344" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:21.343" endtime="20201112 09:45:21.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.347" level="INFO">VALUE: 0.018111819</msg>
<status status="PASS" starttime="20201112 09:45:21.346" endtime="20201112 09:45:21.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.341" endtime="20201112 09:45:21.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.352" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:21.351" endtime="20201112 09:45:21.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.354" level="INFO">VALUE: [0.028120278, 0.038121431, 0.048122569, 0.058123708, 0.068124819, 0.078125986, 0.088127097, 0.098128264, 0.108129389, 0.118130542, 0.128131667, 0.138132833, 0.148133944, 0.158135111, 0.168136222, 0.178137389, 0.188138514, 0.198139736, 0.208140792, 0.218141944, 0.228143069, 0.23814425, 0.248145375, 0.258146542, 0.268147639, 0.278148833, 0.288149917, 0.298151097, 0.308152194, 0.318153375, 0.328154556, 0.338155639, 0.348156778, 0.358157917, 0.368159056, 0.378160208, 0.388161319, 0.398162486, 0.408163625, 0.418164778, 0.428165889, 0.438167056, 0.448168167, 0.458169347, 0.468170472, 0.478171611, 0.48817275, 0.498173917, 0.508175014, 0.518176194, 0.528177306, 0.538178472, 0.548179625, 0.55818075, 0.568181861, 0.578183042, 0.588184153, 0.598185319, 0.608186486, 0.618187597, 0.628188722, 0.638189889, 0.648191, 0.658192167, 0.668193292, 0.678194444, 0.688195556, 0.698196722, 0.708197875, 0.718199069, 0.728200181, 0.738201292, 0.748202403, 0.758203569, 0.768204694, 0.778205875, 0.788206972, 0.798208167, 0.80820925, 0.818210417, 0.828211556, 0.838212708, 0.848213819, 0.858214986, 0.868216097, 0.878217278, 0.888218389, 0.898219597, 0.908220653, 0.918221806, 0.928222917, 0.938224069, 0.948225181, 0.958226347, 0.968227458, 0.978228611, 0.988229722, 0.998230889, 1.008232056, 1.018233167] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:21.353" endtime="20201112 09:45:21.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.348" endtime="20201112 09:45:21.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:21.357" endtime="20201112 09:45:21.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:21.360" endtime="20201112 09:45:21.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.359" endtime="20201112 09:45:21.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.355" endtime="20201112 09:45:21.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.821" endtime="20201112 09:45:21.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.691" endtime="20201112 09:45:21.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.689" endtime="20201112 09:45:21.381"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:21.384" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:21.393" endtime="20201112 09:45:23.511"></status>
</kw>
<msg timestamp="20201112 09:45:23.512" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13761458, 'wakeups': [13771472, 13781472, 13791472, 13801472, 13811472...</msg>
<status status="PASS" starttime="20201112 09:45:21.391" endtime="20201112 09:45:23.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.518" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13761458, 'wakeups': [13771472, 13781472, 13791472, 13801472, 13811472...</msg>
<status status="PASS" starttime="20201112 09:45:23.514" endtime="20201112 09:45:23.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.520" endtime="20201112 09:45:23.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.388" endtime="20201112 09:45:23.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.386" endtime="20201112 09:45:23.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:23.531" level="INFO">${RESULT} = {'start-time': 13761458, 'wakeups': [13771472, 13781472, 13791472, 13801472, 13811472, 13821472, 13831472, 13841472, 13851472, 13861472, 13871472, 13881472, 13891472, 13901472, 13911472, 13921472, 139...</msg>
<status status="PASS" starttime="20201112 09:45:23.527" endtime="20201112 09:45:23.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.539" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:23.537" endtime="20201112 09:45:23.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.542" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:23.541" endtime="20201112 09:45:23.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.533" endtime="20201112 09:45:23.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.547" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:23.546" endtime="20201112 09:45:23.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.549" level="INFO">VALUE: 13761458</msg>
<status status="PASS" starttime="20201112 09:45:23.548" endtime="20201112 09:45:23.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.544" endtime="20201112 09:45:23.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.554" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:23.553" endtime="20201112 09:45:23.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.556" level="INFO">VALUE: [13771472, 13781472, 13791472, 13801472, 13811472, 13821472, 13831472, 13841472, 13851472, 13861472, 13871472, 13881472, 13891472, 13901472, 13911472, 13921472, 13931472, 13941472, 13951472, 13961472, 13971472, 13981472, 13991472, 14001472, 14011472, 14021472, 14031472, 14041472, 14051472, 14061472, 14071472, 14081472, 14091472, 14101472, 14111472, 14121472, 14131472, 14141472, 14151472, 14161472, 14171472, 14181472, 14191472, 14201472, 14211472, 14221472, 14231472, 14241472, 14251472, 14261472, 14271472, 14281472, 14291472, 14301472, 14311472, 14321472, 14331472, 14341472, 14351472, 14361472, 14371472, 14381472, 14391472, 14401472, 14411472, 14421472, 14431472, 14441472, 14451472, 14461472, 14471472, 14481472, 14491472, 14501472, 14511472, 14521472, 14531472, 14541472, 14551472, 14561472, 14571472, 14581472, 14591472, 14601472, 14611472, 14621472, 14631472, 14641472, 14651472, 14661472, 14671472, 14681472, 14691472, 14701472, 14711472, 14721472, 14731472, 14741472, 14751472, 14761472]</msg>
<status status="PASS" starttime="20201112 09:45:23.555" endtime="20201112 09:45:23.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.551" endtime="20201112 09:45:23.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.564" endtime="20201112 09:45:23.855"></status>
</kw>
<msg timestamp="20201112 09:45:23.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032359875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:23.562" endtime="20201112 09:45:23.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032359875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:23.859" endtime="20201112 09:45:23.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.866" endtime="20201112 09:45:23.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.560" endtime="20201112 09:45:23.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.558" endtime="20201112 09:45:23.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:23.893" level="INFO">${RESULT} = {'time': [0.022343861, 0.032359875, 0.042361083, 0.052362153, 0.062363333, 0.072364444, 0.082365611, 0.092366722, 0.102367875, 0.112369, 0.122370167, 0.132371278, 0.142372431, 0.152373556, 0.162374722...</msg>
<status status="PASS" starttime="20201112 09:45:23.870" endtime="20201112 09:45:23.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.897" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:23.896" endtime="20201112 09:45:23.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.899" level="INFO">VALUE: 0.022343861</msg>
<status status="PASS" starttime="20201112 09:45:23.898" endtime="20201112 09:45:23.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.894" endtime="20201112 09:45:23.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.904" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:23.903" endtime="20201112 09:45:23.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.907" level="INFO">VALUE: [0.032359875, 0.042361083, 0.052362153, 0.062363333, 0.072364444, 0.082365611, 0.092366722, 0.102367875, 0.112369, 0.122370167, 0.132371278, 0.142372431, 0.152373556, 0.162374722, 0.172375847, 0.182377014, 0.192378111, 0.202379292, 0.212380403, 0.222381569, 0.232382681, 0.242383847, 0.252384972, 0.262386139, 0.272387264, 0.282388403, 0.292389528, 0.302390694, 0.312391819, 0.322392972, 0.332394125, 0.342395236, 0.352396347, 0.3623975, 0.372398611, 0.382399792, 0.392400903, 0.402402069, 0.412403194, 0.422404333, 0.432405444, 0.442406583, 0.452407694, 0.462408944, 0.472409972, 0.482411125, 0.49241225, 0.502413431, 0.512414542, 0.522415736, 0.532416778, 0.542417972, 0.552419056, 0.562420222, 0.572421319, 0.582422486, 0.592423611, 0.602424764, 0.612425917, 0.622427028, 0.632428139, 0.642429319, 0.652430417, 0.662431569, 0.672432681, 0.682433847, 0.692434958, 0.702436111, 0.71243725, 0.722438403, 0.7324395, 0.742440681, 0.752441778, 0.762442958, 0.772444056, 0.782445208, 0.792446319, 0.802447472, 0.812448597, 0.82244975, 0.832450917, 0.842452042, 0.852453153, 0.862454306, 0.872455403, 0.882456569, 0.892457681, 0.902458847, 0.912460014, 0.922461111, 0.932462222, 0.942463389, 0.9524645, 0.962465681, 0.972466778, 0.982467944, 0.992469069, 1.002470264, 1.012471319, 1.022472542] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:23.906" endtime="20201112 09:45:23.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.901" endtime="20201112 09:45:23.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.910" endtime="20201112 09:45:23.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:23.913" endtime="20201112 09:45:23.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.912" endtime="20201112 09:45:23.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.908" endtime="20201112 09:45:23.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.385" endtime="20201112 09:45:23.934"></status>
</kw>
<msg timestamp="20201112 09:45:23.934" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.942" endtime="20201112 09:45:26.061"></status>
</kw>
<msg timestamp="20201112 09:45:26.062" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16310061, 'wakeups': [16320075, 16330075, 16340075, 16350075, 16360075...</msg>
<status status="PASS" starttime="20201112 09:45:23.941" endtime="20201112 09:45:26.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.068" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16310061, 'wakeups': [16320075, 16330075, 16340075, 16350075, 16360075...</msg>
<status status="PASS" starttime="20201112 09:45:26.064" endtime="20201112 09:45:26.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:26.070" endtime="20201112 09:45:26.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.938" endtime="20201112 09:45:26.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.936" endtime="20201112 09:45:26.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:26.081" level="INFO">${RESULT} = {'start-time': 16310061, 'wakeups': [16320075, 16330075, 16340075, 16350075, 16360075, 16370075, 16380075, 16390075, 16400075, 16410075, 16420075, 16430075, 16440075, 16450075, 16460075, 16470075, 164...</msg>
<status status="PASS" starttime="20201112 09:45:26.077" endtime="20201112 09:45:26.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.090" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:26.088" endtime="20201112 09:45:26.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.094" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:26.092" endtime="20201112 09:45:26.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.083" endtime="20201112 09:45:26.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.100" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:26.099" endtime="20201112 09:45:26.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.103" level="INFO">VALUE: 16310061</msg>
<status status="PASS" starttime="20201112 09:45:26.101" endtime="20201112 09:45:26.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.096" endtime="20201112 09:45:26.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.108" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:26.107" endtime="20201112 09:45:26.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.110" level="INFO">VALUE: [16320075, 16330075, 16340075, 16350075, 16360075, 16370075, 16380075, 16390075, 16400075, 16410075, 16420075, 16430075, 16440075, 16450075, 16460075, 16470075, 16480075, 16490075, 16500075, 16510075, 16520075, 16530075, 16540075, 16550075, 16560075, 16570075, 16580075, 16590075, 16600075, 16610075, 16620075, 16630075, 16640075, 16650075, 16660075, 16670075, 16680075, 16690075, 16700075, 16710075, 16720075, 16730075, 16740075, 16750075, 16760075, 16770075, 16780075, 16790075, 16800075, 16810075, 16820075, 16830075, 16840075, 16850075, 16860075, 16870075, 16880075, 16890075, 16900075, 16910075, 16920075, 16930075, 16940075, 16950075, 16960075, 16970075, 16980075, 16990075, 17000075, 17010075, 17020075, 17030075, 17040075, 17050075, 17060075, 17070075, 17080075, 17090075, 17100075, 17110075, 17120075, 17130075, 17140075, 17150075, 17160075, 17170075, 17180075, 17190075, 17200075, 17210075, 17220075, 17230075, 17240075, 17250075, 17260075, 17270075, 17280075, 17290075, 17300075, 17310075]</msg>
<status status="PASS" starttime="20201112 09:45:26.109" endtime="20201112 09:45:26.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.104" endtime="20201112 09:45:26.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:26.118" endtime="20201112 09:45:26.409"></status>
</kw>
<msg timestamp="20201112 09:45:26.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028243361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:26.116" endtime="20201112 09:45:26.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028243361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:26.413" endtime="20201112 09:45:26.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:26.420" endtime="20201112 09:45:26.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.113" endtime="20201112 09:45:26.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.112" endtime="20201112 09:45:26.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:26.447" level="INFO">${RESULT} = {'time': [0.018227208, 0.028243361, 0.038244528, 0.048245625, 0.058246806, 0.068247917, 0.078249069, 0.088250208, 0.098251347, 0.108252472, 0.118253639, 0.128254764, 0.138255931, 0.148257042, 0.158258...</msg>
<status status="PASS" starttime="20201112 09:45:26.424" endtime="20201112 09:45:26.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.451" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:26.450" endtime="20201112 09:45:26.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.453" level="INFO">VALUE: 0.018227208</msg>
<status status="PASS" starttime="20201112 09:45:26.452" endtime="20201112 09:45:26.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.448" endtime="20201112 09:45:26.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.458" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:26.457" endtime="20201112 09:45:26.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:26.462" level="INFO">VALUE: [0.028243361, 0.038244528, 0.048245625, 0.058246806, 0.068247917, 0.078249069, 0.088250208, 0.098251347, 0.108252472, 0.118253639, 0.128254764, 0.138255931, 0.148257042, 0.158258194, 0.168259306, 0.178260528, 0.188261583, 0.198262764, 0.208263889, 0.218265056, 0.228266181, 0.238267319, 0.248268444, 0.258269597, 0.268270722, 0.278271875, 0.288273, 0.298274167, 0.308275278, 0.318276444, 0.328277569, 0.338278722, 0.348279847, 0.358281028, 0.368282125, 0.378283292, 0.388284417, 0.398285583, 0.408286694, 0.418287931, 0.428288986, 0.438290153, 0.448291264, 0.458292431, 0.468293556, 0.478294708, 0.488295819, 0.498296986, 0.508298097, 0.518299264, 0.528300389, 0.538301597, 0.548302653, 0.558303806, 0.568304931, 0.578306083, 0.588307222, 0.598308375, 0.608309472, 0.618310625, 0.62831175, 0.638312931, 0.648314014, 0.658315181, 0.668316292, 0.678317431, 0.688318542, 0.69831975, 0.708320819, 0.718321986, 0.728323097, 0.73832425, 0.748325375, 0.758326514, 0.768327639, 0.778328792, 0.788329931, 0.798331056, 0.808332167, 0.818333347, 0.828334444, 0.838335597, 0.848336722, 0.858337931, 0.868339, 0.878340153, 0.888341264, 0.898342417, 0.908343569, 0.918344694, 0.928345819, 0.938346986, 0.948348097, 0.958349292, 0.968350347, 0.978351514, 0.988352625, 0.998353806, 1.008354917, 1.018356056] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:26.460" endtime="20201112 09:45:26.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.454" endtime="20201112 09:45:26.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:26.465" endtime="20201112 09:45:26.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:26.468" endtime="20201112 09:45:26.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.467" endtime="20201112 09:45:26.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.463" endtime="20201112 09:45:26.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.935" endtime="20201112 09:45:26.489"></status>
</kw>
<msg timestamp="20201112 09:45:26.489" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:26.497" endtime="20201112 09:45:28.615"></status>
</kw>
<msg timestamp="20201112 09:45:28.617" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18865075, 'wakeups': [18875089, 18885089, 18895089, 18905089, 18915089...</msg>
<status status="PASS" starttime="20201112 09:45:26.496" endtime="20201112 09:45:28.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.622" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18865075, 'wakeups': [18875089, 18885089, 18895089, 18905089, 18915089...</msg>
<status status="PASS" starttime="20201112 09:45:28.619" endtime="20201112 09:45:28.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.625" endtime="20201112 09:45:28.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.493" endtime="20201112 09:45:28.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.491" endtime="20201112 09:45:28.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:28.635" level="INFO">${RESULT} = {'start-time': 18865075, 'wakeups': [18875089, 18885089, 18895089, 18905089, 18915089, 18925089, 18935089, 18945089, 18955089, 18965089, 18975089, 18985089, 18995089, 19005089, 19015089, 19025089, 190...</msg>
<status status="PASS" starttime="20201112 09:45:28.631" endtime="20201112 09:45:28.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.644" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:28.642" endtime="20201112 09:45:28.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.648" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:28.646" endtime="20201112 09:45:28.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.637" endtime="20201112 09:45:28.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.654" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:28.653" endtime="20201112 09:45:28.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.657" level="INFO">VALUE: 18865075</msg>
<status status="PASS" starttime="20201112 09:45:28.655" endtime="20201112 09:45:28.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.651" endtime="20201112 09:45:28.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.661" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:28.660" endtime="20201112 09:45:28.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.664" level="INFO">VALUE: [18875089, 18885089, 18895089, 18905089, 18915089, 18925089, 18935089, 18945089, 18955089, 18965089, 18975089, 18985089, 18995089, 19005089, 19015089, 19025089, 19035089, 19045089, 19055089, 19065089, 19075089, 19085089, 19095089, 19105089, 19115089, 19125089, 19135089, 19145089, 19155089, 19165089, 19175089, 19185089, 19195089, 19205089, 19215089, 19225089, 19235089, 19245089, 19255089, 19265089, 19275089, 19285089, 19295089, 19305089, 19315089, 19325089, 19335089, 19345089, 19355089, 19365089, 19375089, 19385089, 19395089, 19405089, 19415089, 19425089, 19435089, 19445089, 19455089, 19465089, 19475089, 19485089, 19495089, 19505089, 19515089, 19525089, 19535089, 19545089, 19555089, 19565089, 19575089, 19585089, 19595089, 19605089, 19615089, 19625089, 19635089, 19645089, 19655089, 19665089, 19675089, 19685089, 19695089, 19705089, 19715089, 19725089, 19735089, 19745089, 19755089, 19765089, 19775089, 19785089, 19795089, 19805089, 19815089, 19825089, 19835089, 19845089, 19855089, 19865089]</msg>
<status status="PASS" starttime="20201112 09:45:28.663" endtime="20201112 09:45:28.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.658" endtime="20201112 09:45:28.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.671" endtime="20201112 09:45:28.964"></status>
</kw>
<msg timestamp="20201112 09:45:28.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028157917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:28.670" endtime="20201112 09:45:28.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028157917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:28.968" endtime="20201112 09:45:28.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.976" endtime="20201112 09:45:28.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.667" endtime="20201112 09:45:28.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.666" endtime="20201112 09:45:28.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:29.001" level="INFO">${RESULT} = {'time': [0.018142111, 0.028157917, 0.038159069, 0.048160194, 0.058161361, 0.068162486, 0.078163653, 0.08816475, 0.098165917, 0.108167042, 0.118168194, 0.128169319, 0.138170472, 0.148171611, 0.1581727...</msg>
<status status="PASS" starttime="20201112 09:45:28.979" endtime="20201112 09:45:29.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.006" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:29.005" endtime="20201112 09:45:29.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.008" level="INFO">VALUE: 0.018142111</msg>
<status status="PASS" starttime="20201112 09:45:29.007" endtime="20201112 09:45:29.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.002" endtime="20201112 09:45:29.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.013" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:29.012" endtime="20201112 09:45:29.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.015" level="INFO">VALUE: [0.028157917, 0.038159069, 0.048160194, 0.058161361, 0.068162486, 0.078163653, 0.08816475, 0.098165917, 0.108167042, 0.118168194, 0.128169319, 0.138170472, 0.148171611, 0.15817275, 0.168173875, 0.178175042, 0.188176153, 0.198177333, 0.208178444, 0.218179597, 0.228180708, 0.238181889, 0.248183, 0.258184167, 0.268185292, 0.278186458, 0.288187556, 0.298188722, 0.308189847, 0.318191, 0.328192139, 0.338193292, 0.348194403, 0.358195583, 0.368196708, 0.378197861, 0.388198972, 0.398200153, 0.408201319, 0.418202417, 0.428203542, 0.438204708, 0.448205819, 0.458207, 0.468208097, 0.478209264, 0.488210458, 0.498211542, 0.508212667, 0.518213847, 0.528214972, 0.538216125, 0.548217236, 0.558218403, 0.568219514, 0.578220681, 0.588221806, 0.598222986, 0.608224083, 0.61822525, 0.628226375, 0.638227542, 0.648228639, 0.658229806, 0.668230931, 0.678232097, 0.688233222, 0.698234389, 0.7082355, 0.718236653, 0.728237778, 0.738238958, 0.748240056, 0.758241292, 0.768242375, 0.7782435, 0.788244625, 0.798245806, 0.808246903, 0.818248139, 0.828249181, 0.838250347, 0.848251472, 0.858252639, 0.868253764, 0.878254958, 0.888256042, 0.898257222, 0.908258333, 0.918259514, 0.928260625, 0.938261764, 0.948262903, 0.958264056, 0.968265181, 0.978266333, 0.988267458, 0.998268625, 1.008269736, 1.018270903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:29.014" endtime="20201112 09:45:29.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.009" endtime="20201112 09:45:29.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.018" endtime="20201112 09:45:29.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:29.022" endtime="20201112 09:45:29.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.020" endtime="20201112 09:45:29.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.017" endtime="20201112 09:45:29.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:26.490" endtime="20201112 09:45:29.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.383" endtime="20201112 09:45:29.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.382" endtime="20201112 09:45:29.043"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:29.046" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.054" endtime="20201112 09:45:31.173"></status>
</kw>
<msg timestamp="20201112 09:45:31.174" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21422429, 'wakeups': [21432452, 21442452, 21452452, 21462452, 21472452...</msg>
<status status="PASS" starttime="20201112 09:45:29.052" endtime="20201112 09:45:31.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.180" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21422429, 'wakeups': [21432452, 21442452, 21452452, 21462452, 21472452...</msg>
<status status="PASS" starttime="20201112 09:45:31.176" endtime="20201112 09:45:31.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.182" endtime="20201112 09:45:31.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.050" endtime="20201112 09:45:31.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.048" endtime="20201112 09:45:31.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:31.193" level="INFO">${RESULT} = {'start-time': 21422429, 'wakeups': [21432452, 21442452, 21452452, 21462452, 21472452, 21482452, 21492452, 21502452, 21512452, 21522452, 21532452, 21542452, 21552452, 21562452, 21572452, 21582452, 215...</msg>
<status status="PASS" starttime="20201112 09:45:31.189" endtime="20201112 09:45:31.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.201" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:31.199" endtime="20201112 09:45:31.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.206" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:31.204" endtime="20201112 09:45:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.195" endtime="20201112 09:45:31.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.211" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:31.210" endtime="20201112 09:45:31.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.213" level="INFO">VALUE: 21422429</msg>
<status status="PASS" starttime="20201112 09:45:31.212" endtime="20201112 09:45:31.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.207" endtime="20201112 09:45:31.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.218" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:31.216" endtime="20201112 09:45:31.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.220" level="INFO">VALUE: [21432452, 21442452, 21452452, 21462452, 21472452, 21482452, 21492452, 21502452, 21512452, 21522452, 21532452, 21542452, 21552452, 21562452, 21572452, 21582452, 21592452, 21602452, 21612452, 21622452, 21632452, 21642452, 21652452, 21662452, 21672452, 21682452, 21692452, 21702452, 21712452, 21722452, 21732452, 21742452, 21752452, 21762452, 21772452, 21782452, 21792452, 21802452, 21812452, 21822452, 21832452, 21842452, 21852452, 21862452, 21872452, 21882452, 21892452, 21902452, 21912452, 21922452, 21932452, 21942452, 21952452, 21962452, 21972452, 21982452, 21992452, 22002452, 22012452, 22022452, 22032452, 22042452, 22052452, 22062452, 22072452, 22082452, 22092452, 22102452, 22112452, 22122452, 22132452, 22142452, 22152452, 22162452, 22172452, 22182452, 22192452, 22202452, 22212452, 22222452, 22232452, 22242452, 22252452, 22262452, 22272452, 22282452, 22292452, 22302452, 22312452, 22322452, 22332452, 22342452, 22352452, 22362452, 22372452, 22382452, 22392452, 22402452, 22412452, 22422452]</msg>
<status status="PASS" starttime="20201112 09:45:31.219" endtime="20201112 09:45:31.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.214" endtime="20201112 09:45:31.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.232" endtime="20201112 09:45:31.522"></status>
</kw>
<msg timestamp="20201112 09:45:31.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032252611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:31.225" endtime="20201112 09:45:31.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032252611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:31.526" endtime="20201112 09:45:31.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.534" endtime="20201112 09:45:31.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.223" endtime="20201112 09:45:31.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.221" endtime="20201112 09:45:31.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:31.561" level="INFO">${RESULT} = {'time': [0.022228375, 0.032252611, 0.042253653, 0.05225475, 0.062255931, 0.072257028, 0.082258208, 0.092259319, 0.102260472, 0.112261597, 0.122262764, 0.132263875, 0.142265056, 0.152266167, 0.1622673...</msg>
<status status="PASS" starttime="20201112 09:45:31.537" endtime="20201112 09:45:31.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.565" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:31.564" endtime="20201112 09:45:31.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.567" level="INFO">VALUE: 0.022228375</msg>
<status status="PASS" starttime="20201112 09:45:31.566" endtime="20201112 09:45:31.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.562" endtime="20201112 09:45:31.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.573" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:31.572" endtime="20201112 09:45:31.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.575" level="INFO">VALUE: [0.032252611, 0.042253653, 0.05225475, 0.062255931, 0.072257028, 0.082258208, 0.092259319, 0.102260472, 0.112261597, 0.122262764, 0.132263875, 0.142265056, 0.152266167, 0.162267333, 0.172268431, 0.182269597, 0.192270708, 0.202271875, 0.212273014, 0.222274181, 0.232275278, 0.242276444, 0.252277611, 0.262278722, 0.272279847, 0.282281014, 0.292282139, 0.302283292, 0.312284403, 0.322285569, 0.332286694, 0.342287861, 0.352288972, 0.362290139, 0.37229125, 0.382292417, 0.392293542, 0.402294708, 0.412295847, 0.422296986, 0.432298111, 0.442299264, 0.452300389, 0.462301556, 0.472302681, 0.482303833, 0.492305, 0.502306139, 0.512307236, 0.522308403, 0.532309514, 0.542310681, 0.552311833, 0.562312958, 0.572314111, 0.582315264, 0.592316361, 0.602317542, 0.612318653, 0.622319833, 0.632320931, 0.642322083, 0.652323194, 0.662324347, 0.672325514, 0.682326653, 0.692327764, 0.702328903, 0.71233, 0.722331167, 0.732332278, 0.742333472, 0.752334556, 0.762335708, 0.772336819, 0.782337986, 0.792339083, 0.802340264, 0.812341375, 0.822342514, 0.832343639, 0.842344792, 0.852345903, 0.862347056, 0.872348181, 0.882349347, 0.892350458, 0.902351597, 0.912352708, 0.922353875, 0.932355, 0.942356194, 0.952357264, 0.962358444, 0.972359528, 0.982360694, 0.992361819, 1.002362972, 1.012364069, 1.022365236] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:31.574" endtime="20201112 09:45:31.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.569" endtime="20201112 09:45:31.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.578" endtime="20201112 09:45:31.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:31.581" endtime="20201112 09:45:31.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.580" endtime="20201112 09:45:31.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.576" endtime="20201112 09:45:31.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.046" endtime="20201112 09:45:31.602"></status>
</kw>
<msg timestamp="20201112 09:45:31.602" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.610" endtime="20201112 09:45:33.728"></status>
</kw>
<msg timestamp="20201112 09:45:33.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23977881, 'wakeups': [23987904, 23997904, 24007904, 24017904, 24027904...</msg>
<status status="PASS" starttime="20201112 09:45:31.609" endtime="20201112 09:45:33.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.736" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23977881, 'wakeups': [23987904, 23997904, 24007904, 24017904, 24027904...</msg>
<status status="PASS" starttime="20201112 09:45:33.731" endtime="20201112 09:45:33.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.738" endtime="20201112 09:45:33.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.606" endtime="20201112 09:45:33.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.604" endtime="20201112 09:45:33.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:33.749" level="INFO">${RESULT} = {'start-time': 23977881, 'wakeups': [23987904, 23997904, 24007904, 24017904, 24027904, 24037904, 24047904, 24057904, 24067904, 24077904, 24087904, 24097904, 24107904, 24117904, 24127904, 24137904, 241...</msg>
<status status="PASS" starttime="20201112 09:45:33.745" endtime="20201112 09:45:33.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.757" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:33.755" endtime="20201112 09:45:33.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.761" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:33.760" endtime="20201112 09:45:33.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.750" endtime="20201112 09:45:33.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.767" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:33.765" endtime="20201112 09:45:33.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.769" level="INFO">VALUE: 23977881</msg>
<status status="PASS" starttime="20201112 09:45:33.768" endtime="20201112 09:45:33.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.763" endtime="20201112 09:45:33.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.774" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:33.773" endtime="20201112 09:45:33.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.776" level="INFO">VALUE: [23987904, 23997904, 24007904, 24017904, 24027904, 24037904, 24047904, 24057904, 24067904, 24077904, 24087904, 24097904, 24107904, 24117904, 24127904, 24137904, 24147904, 24157904, 24167904, 24177904, 24187904, 24197904, 24207904, 24217904, 24227904, 24237904, 24247904, 24257904, 24267904, 24277904, 24287904, 24297904, 24307904, 24317904, 24327904, 24337904, 24347904, 24357904, 24367904, 24377904, 24387904, 24397904, 24407904, 24417904, 24427904, 24437904, 24447904, 24457904, 24467904, 24477904, 24487904, 24497904, 24507904, 24517904, 24527904, 24537904, 24547904, 24557904, 24567904, 24577904, 24587904, 24597904, 24607904, 24617904, 24627904, 24637904, 24647904, 24657904, 24667904, 24677904, 24687904, 24697904, 24707904, 24717904, 24727904, 24737904, 24747904, 24757904, 24767904, 24777904, 24787904, 24797904, 24807904, 24817904, 24827904, 24837904, 24847904, 24857904, 24867904, 24877904, 24887904, 24897904, 24907904, 24917904, 24927904, 24937904, 24947904, 24957904, 24967904, 24977904]</msg>
<status status="PASS" starttime="20201112 09:45:33.775" endtime="20201112 09:45:33.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.771" endtime="20201112 09:45:33.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.783" endtime="20201112 09:45:34.074"></status>
</kw>
<msg timestamp="20201112 09:45:34.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018246625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028271431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:33.782" endtime="20201112 09:45:34.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018246625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028271431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:34.078" endtime="20201112 09:45:34.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.086" endtime="20201112 09:45:34.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.779" endtime="20201112 09:45:34.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.778" endtime="20201112 09:45:34.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:34.111" level="INFO">${RESULT} = {'time': [0.018246625, 0.028271431, 0.038272431, 0.048273556, 0.058274694, 0.068275806, 0.078276986, 0.088278083, 0.098279319, 0.108280361, 0.118281528, 0.128282681, 0.138283806, 0.148284931, 0.158286...</msg>
<status status="PASS" starttime="20201112 09:45:34.089" endtime="20201112 09:45:34.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.116" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:34.115" endtime="20201112 09:45:34.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.118" level="INFO">VALUE: 0.018246625</msg>
<status status="PASS" starttime="20201112 09:45:34.117" endtime="20201112 09:45:34.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.112" endtime="20201112 09:45:34.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.124" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:34.122" endtime="20201112 09:45:34.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.126" level="INFO">VALUE: [0.028271431, 0.038272431, 0.048273556, 0.058274694, 0.068275806, 0.078276986, 0.088278083, 0.098279319, 0.108280361, 0.118281528, 0.128282681, 0.138283806, 0.148284931, 0.158286097, 0.168287208, 0.178288375, 0.188289486, 0.198290667, 0.208291792, 0.218292931, 0.228294069, 0.238295222, 0.248296333, 0.2582975, 0.268298611, 0.278299819, 0.288300903, 0.298302069, 0.308303167, 0.318304347, 0.328305458, 0.338306597, 0.348307722, 0.358308875, 0.368309986, 0.378311153, 0.388312264, 0.398313472, 0.408314542, 0.418315694, 0.428316875, 0.438317986, 0.448319083, 0.458320236, 0.468321361, 0.478322528, 0.488323625, 0.498324792, 0.508325903, 0.518327083, 0.528328208, 0.538329347, 0.548330514, 0.558331639, 0.568332722, 0.578333903, 0.588335014, 0.598336167, 0.608337278, 0.618338458, 0.628339569, 0.638340736, 0.648341847, 0.658343, 0.668344111, 0.678345292, 0.688346389, 0.698347542, 0.708348667, 0.718349819, 0.728350958, 0.738352111, 0.74835325, 0.758354375, 0.7683555, 0.778356653, 0.788357778, 0.798358917, 0.808360042, 0.818361208, 0.828362319, 0.838363486, 0.848364583, 0.858365764, 0.868366875, 0.878368028, 0.888369181, 0.898370319, 0.908371417, 0.918372569, 0.928373708, 0.938374847, 0.948375972, 0.958377125, 0.968378236, 0.978379403, 0.988380542, 0.998381708, 1.008382792, 1.018383972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:34.125" endtime="20201112 09:45:34.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.119" endtime="20201112 09:45:34.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.129" endtime="20201112 09:45:34.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:34.133" endtime="20201112 09:45:34.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.131" endtime="20201112 09:45:34.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.128" endtime="20201112 09:45:34.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.603" endtime="20201112 09:45:34.153"></status>
</kw>
<msg timestamp="20201112 09:45:34.154" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.162" endtime="20201112 09:45:36.280"></status>
</kw>
<msg timestamp="20201112 09:45:36.281" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26529466, 'wakeups': [26539489, 26549489, 26559489, 26569489, 26579489...</msg>
<status status="PASS" starttime="20201112 09:45:34.160" endtime="20201112 09:45:36.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.286" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26529466, 'wakeups': [26539489, 26549489, 26559489, 26569489, 26579489...</msg>
<status status="PASS" starttime="20201112 09:45:36.283" endtime="20201112 09:45:36.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.289" endtime="20201112 09:45:36.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.158" endtime="20201112 09:45:36.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.156" endtime="20201112 09:45:36.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:36.300" level="INFO">${RESULT} = {'start-time': 26529466, 'wakeups': [26539489, 26549489, 26559489, 26569489, 26579489, 26589489, 26599489, 26609489, 26619489, 26629489, 26639489, 26649489, 26659489, 26669489, 26679489, 26689489, 266...</msg>
<status status="PASS" starttime="20201112 09:45:36.296" endtime="20201112 09:45:36.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.308" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:36.306" endtime="20201112 09:45:36.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.312" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:36.310" endtime="20201112 09:45:36.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.301" endtime="20201112 09:45:36.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.323" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:36.322" endtime="20201112 09:45:36.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.325" level="INFO">VALUE: 26529466</msg>
<status status="PASS" starttime="20201112 09:45:36.324" endtime="20201112 09:45:36.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.319" endtime="20201112 09:45:36.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.330" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:36.329" endtime="20201112 09:45:36.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.332" level="INFO">VALUE: [26539489, 26549489, 26559489, 26569489, 26579489, 26589489, 26599489, 26609489, 26619489, 26629489, 26639489, 26649489, 26659489, 26669489, 26679489, 26689489, 26699489, 26709489, 26719489, 26729489, 26739489, 26749489, 26759489, 26769489, 26779489, 26789489, 26799489, 26809489, 26819489, 26829489, 26839489, 26849489, 26859489, 26869489, 26879489, 26889489, 26899489, 26909489, 26919489, 26929489, 26939489, 26949489, 26959489, 26969489, 26979489, 26989489, 26999489, 27009489, 27019489, 27029489, 27039489, 27049489, 27059489, 27069489, 27079489, 27089489, 27099489, 27109489, 27119489, 27129489, 27139489, 27149489, 27159489, 27169489, 27179489, 27189489, 27199489, 27209489, 27219489, 27229489, 27239489, 27249489, 27259489, 27269489, 27279489, 27289489, 27299489, 27309489, 27319489, 27329489, 27339489, 27349489, 27359489, 27369489, 27379489, 27389489, 27399489, 27409489, 27419489, 27429489, 27439489, 27449489, 27459489, 27469489, 27479489, 27489489, 27499489, 27509489, 27519489, 27529489]</msg>
<status status="PASS" starttime="20201112 09:45:36.331" endtime="20201112 09:45:36.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.326" endtime="20201112 09:45:36.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.339" endtime="20201112 09:45:36.632"></status>
</kw>
<msg timestamp="20201112 09:45:36.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018211736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028235819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:36.338" endtime="20201112 09:45:36.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018211736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028235819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:36.635" endtime="20201112 09:45:36.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.643" endtime="20201112 09:45:36.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.335" endtime="20201112 09:45:36.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.333" endtime="20201112 09:45:36.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:36.669" level="INFO">${RESULT} = {'time': [0.018211736, 0.028235819, 0.038236847, 0.048237972, 0.058239194, 0.068240264, 0.078241403, 0.088242528, 0.098243694, 0.108244819, 0.118245972, 0.128247083, 0.138248306, 0.148249361, 0.158250...</msg>
<status status="PASS" starttime="20201112 09:45:36.646" endtime="20201112 09:45:36.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.673" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:36.672" endtime="20201112 09:45:36.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.675" level="INFO">VALUE: 0.018211736</msg>
<status status="PASS" starttime="20201112 09:45:36.674" endtime="20201112 09:45:36.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.670" endtime="20201112 09:45:36.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.681" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:36.680" endtime="20201112 09:45:36.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.683" level="INFO">VALUE: [0.028235819, 0.038236847, 0.048237972, 0.058239194, 0.068240264, 0.078241403, 0.088242528, 0.098243694, 0.108244819, 0.118245972, 0.128247083, 0.138248306, 0.148249361, 0.158250528, 0.168251639, 0.178252806, 0.188253972, 0.198255097, 0.208256208, 0.218257375, 0.228258486, 0.238259653, 0.248260764, 0.258261931, 0.268263042, 0.278264208, 0.288265347, 0.2982665, 0.308267611, 0.318268778, 0.328269931, 0.338271056, 0.348272181, 0.358273347, 0.368274458, 0.378275639, 0.38827675, 0.398277944, 0.408279028, 0.418280194, 0.428281361, 0.438282472, 0.448283583, 0.45828475, 0.468285917, 0.478287042, 0.488288153, 0.498289319, 0.508290444, 0.518291597, 0.528292736, 0.538293889, 0.548295014, 0.558296167, 0.568297292, 0.578298458, 0.588299569, 0.598300736, 0.608301847, 0.618303014, 0.628304139, 0.638305319, 0.648306417, 0.658307583, 0.668308694, 0.678309917, 0.688310972, 0.698312167, 0.70831325, 0.718314403, 0.728315514, 0.738316667, 0.748317792, 0.758318986, 0.768320042, 0.778321208, 0.788322333, 0.798323472, 0.808324583, 0.81832575, 0.828326861, 0.838328014, 0.848329139, 0.858330333, 0.868331403, 0.878332625, 0.888333667, 0.898334847, 0.908335944, 0.918337111, 0.928338208, 0.938339417, 0.9483405, 0.958341653, 0.968342764, 0.978343931, 0.988345028, 0.998346194, 1.008347319, 1.018348458] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:36.682" endtime="20201112 09:45:36.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.677" endtime="20201112 09:45:36.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.686" endtime="20201112 09:45:36.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:36.690" endtime="20201112 09:45:36.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.688" endtime="20201112 09:45:36.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.685" endtime="20201112 09:45:36.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.154" endtime="20201112 09:45:36.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.044" endtime="20201112 09:45:36.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.043" endtime="20201112 09:45:36.711"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:36.713" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.722" endtime="20201112 09:45:38.840"></status>
</kw>
<msg timestamp="20201112 09:45:38.842" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29090078, 'wakeups': [29100111, 29110110, 29120109, 29130109, 29140109...</msg>
<status status="PASS" starttime="20201112 09:45:36.720" endtime="20201112 09:45:38.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.848" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29090078, 'wakeups': [29100111, 29110110, 29120109, 29130109, 29140109...</msg>
<status status="PASS" starttime="20201112 09:45:38.844" endtime="20201112 09:45:38.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.850" endtime="20201112 09:45:38.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.717" endtime="20201112 09:45:38.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.715" endtime="20201112 09:45:38.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:38.861" level="INFO">${RESULT} = {'start-time': 29090078, 'wakeups': [29100111, 29110110, 29120109, 29130109, 29140109, 29150109, 29160109, 29170109, 29180109, 29190109, 29200109, 29210109, 29220109, 29230109, 29240109, 29250109, 292...</msg>
<status status="PASS" starttime="20201112 09:45:38.857" endtime="20201112 09:45:38.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.869" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:38.867" endtime="20201112 09:45:38.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.872" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:38.871" endtime="20201112 09:45:38.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.862" endtime="20201112 09:45:38.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.877" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:38.876" endtime="20201112 09:45:38.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.879" level="INFO">VALUE: 29090078</msg>
<status status="PASS" starttime="20201112 09:45:38.878" endtime="20201112 09:45:38.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.873" endtime="20201112 09:45:38.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.884" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:38.883" endtime="20201112 09:45:38.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.886" level="INFO">VALUE: [29100111, 29110110, 29120109, 29130109, 29140109, 29150109, 29160109, 29170109, 29180109, 29190109, 29200109, 29210109, 29220109, 29230109, 29240109, 29250109, 29260109, 29270109, 29280109, 29290109, 29300109, 29310109, 29320109, 29330109, 29340109, 29350109, 29360109, 29370109, 29380109, 29390109, 29400109, 29410109, 29420109, 29430109, 29440109, 29450109, 29460109, 29470109, 29480109, 29490109, 29500109, 29510109, 29520109, 29530109, 29540109, 29550109, 29560109, 29570109, 29580109, 29590109, 29600109, 29610109, 29620109, 29630109, 29640109, 29650109, 29660109, 29670109, 29680109, 29690109, 29700109, 29710109, 29720109, 29730109, 29740109, 29750109, 29760109, 29770109, 29780109, 29790109, 29800109, 29810109, 29820109, 29830109, 29840109, 29850109, 29860109, 29870109, 29880109, 29890109, 29900109, 29910109, 29920109, 29930109, 29940109, 29950109, 29960109, 29970109, 29980109, 29990109, 30000109, 30010109, 30020109, 30030109, 30040109, 30050109, 30060109, 30070109, 30080109, 30090109]</msg>
<status status="PASS" starttime="20201112 09:45:38.885" endtime="20201112 09:45:38.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.880" endtime="20201112 09:45:38.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.893" endtime="20201112 09:45:39.184"></status>
</kw>
<msg timestamp="20201112 09:45:39.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031927681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:38.892" endtime="20201112 09:45:39.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031927681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:39.188" endtime="20201112 09:45:39.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.195" endtime="20201112 09:45:39.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.889" endtime="20201112 09:45:39.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.888" endtime="20201112 09:45:39.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:39.221" level="INFO">${RESULT} = {'time': [0.021893153, 0.031927681, 0.041928389, 0.051928556, 0.061929667, 0.071930806, 0.081931944, 0.091933056, 0.101934222, 0.111935347, 0.1219365, 0.131937625, 0.141938806, 0.151939903, 0.16194106...</msg>
<status status="PASS" starttime="20201112 09:45:39.199" endtime="20201112 09:45:39.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.226" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:39.225" endtime="20201112 09:45:39.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.228" level="INFO">VALUE: 0.021893153</msg>
<status status="PASS" starttime="20201112 09:45:39.227" endtime="20201112 09:45:39.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.222" endtime="20201112 09:45:39.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.233" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:39.232" endtime="20201112 09:45:39.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.235" level="INFO">VALUE: [0.031927681, 0.041928389, 0.051928556, 0.061929667, 0.071930806, 0.081931944, 0.091933056, 0.101934222, 0.111935347, 0.1219365, 0.131937625, 0.141938806, 0.151939903, 0.161941069, 0.171942222, 0.181943347, 0.191944486, 0.201945667, 0.21194675, 0.221947931, 0.231949042, 0.241950208, 0.251951306, 0.261952486, 0.271953597, 0.281954792, 0.291955875, 0.301957056, 0.311958167, 0.321959319, 0.331960458, 0.341961611, 0.351962736, 0.361963958, 0.371965, 0.381966153, 0.391967264, 0.401968486, 0.411969528, 0.421970694, 0.431971806, 0.441972958, 0.451974069, 0.461975292, 0.471976347, 0.481977514, 0.491978611, 0.501979778, 0.511980931, 0.521982069, 0.531983153, 0.541984319, 0.551985431, 0.561986597, 0.571987694, 0.581988861, 0.591990014, 0.601991125, 0.611992292, 0.621993417, 0.631994542, 0.641995694, 0.651996778, 0.661997944, 0.671999056, 0.682000236, 0.692001333, 0.7020025, 0.712003597, 0.722004764, 0.732005889, 0.742007028, 0.752008139, 0.762009319, 0.772010431, 0.782011597, 0.792012694, 0.802013847, 0.812014958, 0.822016125, 0.832017236, 0.842018389, 0.852019514, 0.862020667, 0.872021792, 0.882022944, 0.892024056, 0.902025208, 0.912026319, 0.922027486, 0.932028611, 0.94202975, 0.952030861, 0.962032028, 0.972033139, 0.982034306, 0.992035417, 1.002036569, 1.012037681, 1.022038861] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:39.234" endtime="20201112 09:45:39.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.229" endtime="20201112 09:45:39.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.238" endtime="20201112 09:45:39.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:39.242" endtime="20201112 09:45:39.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.240" endtime="20201112 09:45:39.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.237" endtime="20201112 09:45:39.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.714" endtime="20201112 09:45:39.263"></status>
</kw>
<msg timestamp="20201112 09:45:39.263" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.271" endtime="20201112 09:45:41.374"></status>
</kw>
<msg timestamp="20201112 09:45:41.374" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31638878, 'wakeups': [31648911, 31658910, 31668909, 31678909, 31688909...</msg>
<status status="PASS" starttime="20201112 09:45:39.269" endtime="20201112 09:45:41.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.377" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31638878, 'wakeups': [31648911, 31658910, 31668909, 31678909, 31688909...</msg>
<status status="PASS" starttime="20201112 09:45:41.375" endtime="20201112 09:45:41.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.378" endtime="20201112 09:45:41.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.267" endtime="20201112 09:45:41.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.265" endtime="20201112 09:45:41.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:41.383" level="INFO">${RESULT} = {'start-time': 31638878, 'wakeups': [31648911, 31658910, 31668909, 31678909, 31688909, 31698909, 31708909, 31718909, 31728909, 31738909, 31748909, 31758909, 31768909, 31778909, 31788909, 31798909, 318...</msg>
<status status="PASS" starttime="20201112 09:45:41.381" endtime="20201112 09:45:41.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.388" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:41.387" endtime="20201112 09:45:41.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.390" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:41.389" endtime="20201112 09:45:41.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.384" endtime="20201112 09:45:41.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.394" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:41.393" endtime="20201112 09:45:41.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.398" level="INFO">VALUE: 31638878</msg>
<status status="PASS" starttime="20201112 09:45:41.396" endtime="20201112 09:45:41.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.391" endtime="20201112 09:45:41.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.403" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:41.402" endtime="20201112 09:45:41.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.405" level="INFO">VALUE: [31648911, 31658910, 31668909, 31678909, 31688909, 31698909, 31708909, 31718909, 31728909, 31738909, 31748909, 31758909, 31768909, 31778909, 31788909, 31798909, 31808909, 31818909, 31828909, 31838909, 31848909, 31858909, 31868909, 31878909, 31888909, 31898909, 31908909, 31918909, 31928909, 31938909, 31948909, 31958909, 31968909, 31978909, 31988909, 31998909, 32008909, 32018909, 32028909, 32038909, 32048909, 32058909, 32068909, 32078909, 32088909, 32098909, 32108909, 32118909, 32128909, 32138909, 32148909, 32158909, 32168909, 32178909, 32188909, 32198909, 32208909, 32218909, 32228909, 32238909, 32248909, 32258909, 32268909, 32278909, 32288909, 32298909, 32308909, 32318909, 32328909, 32338909, 32348909, 32358909, 32368909, 32378909, 32388909, 32398909, 32408909, 32418909, 32428909, 32438909, 32448909, 32458909, 32468909, 32478909, 32488909, 32498909, 32508909, 32518909, 32528909, 32538909, 32548909, 32558909, 32568909, 32578909, 32588909, 32598909, 32608909, 32618909, 32628909, 32638909]</msg>
<status status="PASS" starttime="20201112 09:45:41.404" endtime="20201112 09:45:41.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.399" endtime="20201112 09:45:41.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.412" endtime="20201112 09:45:41.702"></status>
</kw>
<msg timestamp="20201112 09:45:41.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018614556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028649069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:41.410" endtime="20201112 09:45:41.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018614556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028649069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:41.706" endtime="20201112 09:45:41.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.714" endtime="20201112 09:45:41.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.408" endtime="20201112 09:45:41.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.406" endtime="20201112 09:45:41.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:41.744" level="INFO">${RESULT} = {'time': [0.018614556, 0.028649069, 0.038649778, 0.048649889, 0.058651056, 0.068652208, 0.078653333, 0.088654458, 0.098655611, 0.108656764, 0.118657889, 0.128659014, 0.138660167, 0.148661306, 0.158662...</msg>
<status status="PASS" starttime="20201112 09:45:41.721" endtime="20201112 09:45:41.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.748" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:41.747" endtime="20201112 09:45:41.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.750" level="INFO">VALUE: 0.018614556</msg>
<status status="PASS" starttime="20201112 09:45:41.749" endtime="20201112 09:45:41.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.744" endtime="20201112 09:45:41.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.755" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:41.754" endtime="20201112 09:45:41.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.759" level="INFO">VALUE: [0.028649069, 0.038649778, 0.048649889, 0.058651056, 0.068652208, 0.078653333, 0.088654458, 0.098655611, 0.108656764, 0.118657889, 0.128659014, 0.138660167, 0.148661306, 0.158662472, 0.168663569, 0.178664764, 0.188665861, 0.198667014, 0.208668139, 0.218669292, 0.228670417, 0.238671583, 0.248672778, 0.258673861, 0.268675028, 0.278676139, 0.28867725, 0.298678472, 0.308679556, 0.31868075, 0.328681847, 0.338683, 0.348684097, 0.358685264, 0.368686417, 0.378687556, 0.388688667, 0.398689833, 0.408690944, 0.418692125, 0.428693236, 0.438694403, 0.448695556, 0.458696694, 0.468697806, 0.478698958, 0.488700083, 0.498701319, 0.508702389, 0.518703528, 0.528704653, 0.538705806, 0.548706931, 0.558708083, 0.568709208, 0.578710375, 0.588711486, 0.598712653, 0.608713792, 0.618714944, 0.628716069, 0.63871725, 0.648718333, 0.658719514, 0.668720639, 0.678721792, 0.688722903, 0.698724083, 0.708725194, 0.718726347, 0.728727472, 0.738728639, 0.74872975, 0.758730917, 0.768732028, 0.778733194, 0.788734333, 0.798735486, 0.808736597, 0.818737778, 0.828738889, 0.838740042, 0.848741167, 0.858742333, 0.868743444, 0.878744611, 0.888745722, 0.898746889, 0.908748, 0.918749194, 0.928750264, 0.938751431, 0.948752542, 0.958753694, 0.968754819, 0.978755972, 0.988757083, 0.998758292, 1.008759361, 1.018760514] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:41.758" endtime="20201112 09:45:41.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.751" endtime="20201112 09:45:41.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.762" endtime="20201112 09:45:41.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:41.766" endtime="20201112 09:45:41.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.764" endtime="20201112 09:45:41.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.761" endtime="20201112 09:45:41.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.263" endtime="20201112 09:45:41.787"></status>
</kw>
<msg timestamp="20201112 09:45:41.787" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.795" endtime="20201112 09:45:43.895"></status>
</kw>
<msg timestamp="20201112 09:45:43.896" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34162255, 'wakeups': [34172288, 34182287, 34192286, 34202286, 34212286...</msg>
<status status="PASS" starttime="20201112 09:45:41.793" endtime="20201112 09:45:43.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.898" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34162255, 'wakeups': [34172288, 34182287, 34192286, 34202286, 34212286...</msg>
<status status="PASS" starttime="20201112 09:45:43.897" endtime="20201112 09:45:43.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.899" endtime="20201112 09:45:43.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.791" endtime="20201112 09:45:43.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.789" endtime="20201112 09:45:43.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:43.905" level="INFO">${RESULT} = {'start-time': 34162255, 'wakeups': [34172288, 34182287, 34192286, 34202286, 34212286, 34222286, 34232286, 34242286, 34252286, 34262286, 34272286, 34282286, 34292286, 34302286, 34312286, 34322286, 343...</msg>
<status status="PASS" starttime="20201112 09:45:43.903" endtime="20201112 09:45:43.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.909" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:43.908" endtime="20201112 09:45:43.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.911" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:43.910" endtime="20201112 09:45:43.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.905" endtime="20201112 09:45:43.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.916" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:43.915" endtime="20201112 09:45:43.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.918" level="INFO">VALUE: 34162255</msg>
<status status="PASS" starttime="20201112 09:45:43.917" endtime="20201112 09:45:43.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.913" endtime="20201112 09:45:43.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.923" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:43.922" endtime="20201112 09:45:43.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.925" level="INFO">VALUE: [34172288, 34182287, 34192286, 34202286, 34212286, 34222286, 34232286, 34242286, 34252286, 34262286, 34272286, 34282286, 34292286, 34302286, 34312286, 34322286, 34332286, 34342286, 34352286, 34362286, 34372286, 34382286, 34392286, 34402286, 34412286, 34422286, 34432286, 34442286, 34452286, 34462286, 34472286, 34482286, 34492286, 34502286, 34512286, 34522286, 34532286, 34542286, 34552286, 34562286, 34572286, 34582286, 34592286, 34602286, 34612286, 34622286, 34632286, 34642286, 34652286, 34662286, 34672286, 34682286, 34692286, 34702286, 34712286, 34722286, 34732286, 34742286, 34752286, 34762286, 34772286, 34782286, 34792286, 34802286, 34812286, 34822286, 34832286, 34842286, 34852286, 34862286, 34872286, 34882286, 34892286, 34902286, 34912286, 34922286, 34932286, 34942286, 34952286, 34962286, 34972286, 34982286, 34992286, 35002286, 35012286, 35022286, 35032286, 35042286, 35052286, 35062286, 35072286, 35082286, 35092286, 35102286, 35112286, 35122286, 35132286, 35142286, 35152286, 35162286]</msg>
<status status="PASS" starttime="20201112 09:45:43.924" endtime="20201112 09:45:43.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.919" endtime="20201112 09:45:43.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.932" endtime="20201112 09:45:44.225"></status>
</kw>
<msg timestamp="20201112 09:45:44.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018202278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028236625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:43.931" endtime="20201112 09:45:44.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018202278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028236625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:44.229" endtime="20201112 09:45:44.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:44.236" endtime="20201112 09:45:44.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.928" endtime="20201112 09:45:44.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.927" endtime="20201112 09:45:44.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:44.262" level="INFO">${RESULT} = {'time': [0.018202278, 0.028236625, 0.038237347, 0.048237458, 0.058238653, 0.068239736, 0.078240889, 0.088242028, 0.098243194, 0.108244292, 0.118245458, 0.128246569, 0.13824775, 0.148248861, 0.1582500...</msg>
<status status="PASS" starttime="20201112 09:45:44.240" endtime="20201112 09:45:44.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.266" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:44.265" endtime="20201112 09:45:44.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.268" level="INFO">VALUE: 0.018202278</msg>
<status status="PASS" starttime="20201112 09:45:44.267" endtime="20201112 09:45:44.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.263" endtime="20201112 09:45:44.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.274" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:44.272" endtime="20201112 09:45:44.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.276" level="INFO">VALUE: [0.028236625, 0.038237347, 0.048237458, 0.058238653, 0.068239736, 0.078240889, 0.088242028, 0.098243194, 0.108244292, 0.118245458, 0.128246569, 0.13824775, 0.148248861, 0.158250014, 0.168251194, 0.178252333, 0.188253417, 0.198254583, 0.208255694, 0.218256875, 0.228257986, 0.238259139, 0.24826025, 0.258261417, 0.268262611, 0.278263708, 0.288264833, 0.298266, 0.308267097, 0.318268292, 0.328269431, 0.338270556, 0.348271667, 0.358272847, 0.368273972, 0.378275139, 0.388276236, 0.398277403, 0.408278528, 0.418279681, 0.428280806, 0.438281972, 0.448283083, 0.458284278, 0.468285361, 0.478286528, 0.488287667, 0.498288806, 0.508289931, 0.518291097, 0.528292208, 0.538293375, 0.5482945, 0.558295667, 0.568296806, 0.578297944, 0.588299056, 0.598300236, 0.608301347, 0.618302514, 0.628303625, 0.638304861, 0.648305917, 0.658307056, 0.668308167, 0.678309333, 0.688310444, 0.698311597, 0.708312708, 0.718313889, 0.728314986, 0.738316153, 0.748317264, 0.758318444, 0.768319514, 0.778320681, 0.788321792, 0.798322958, 0.808324097, 0.818325236, 0.828326333, 0.838327486, 0.848328597, 0.858329806, 0.868330875, 0.878332042, 0.888333167, 0.898334319, 0.908335417, 0.918336569, 0.928337694, 0.938338861, 0.948339972, 0.958341139, 0.968342222, 0.978343389, 0.988344514, 0.998345653, 1.008346764, 1.018347972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:44.275" endtime="20201112 09:45:44.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.270" endtime="20201112 09:45:44.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:44.279" endtime="20201112 09:45:44.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:44.283" endtime="20201112 09:45:44.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.281" endtime="20201112 09:45:44.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.278" endtime="20201112 09:45:44.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.787" endtime="20201112 09:45:44.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.712" endtime="20201112 09:45:44.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.711" endtime="20201112 09:45:44.304"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:44.307" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:44.316" endtime="20201112 09:45:46.435"></status>
</kw>
<msg timestamp="20201112 09:45:46.435" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36683686, 'wakeups': [36693730, 36703730, 36713730, 36723730, 36733730...</msg>
<status status="PASS" starttime="20201112 09:45:44.313" endtime="20201112 09:45:46.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.438" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36683686, 'wakeups': [36693730, 36703730, 36713730, 36723730, 36733730...</msg>
<status status="PASS" starttime="20201112 09:45:46.436" endtime="20201112 09:45:46.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.439" endtime="20201112 09:45:46.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.310" endtime="20201112 09:45:46.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.308" endtime="20201112 09:45:46.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:46.444" level="INFO">${RESULT} = {'start-time': 36683686, 'wakeups': [36693730, 36703730, 36713730, 36723730, 36733730, 36743730, 36753730, 36763730, 36773730, 36783730, 36793730, 36803730, 36813730, 36823730, 36833730, 36843730, 368...</msg>
<status status="PASS" starttime="20201112 09:45:46.442" endtime="20201112 09:45:46.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.448" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:46.447" endtime="20201112 09:45:46.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.450" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:46.450" endtime="20201112 09:45:46.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.445" endtime="20201112 09:45:46.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.455" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:46.454" endtime="20201112 09:45:46.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.457" level="INFO">VALUE: 36683686</msg>
<status status="PASS" starttime="20201112 09:45:46.456" endtime="20201112 09:45:46.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.452" endtime="20201112 09:45:46.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.463" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:46.462" endtime="20201112 09:45:46.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.465" level="INFO">VALUE: [36693730, 36703730, 36713730, 36723730, 36733730, 36743730, 36753730, 36763730, 36773730, 36783730, 36793730, 36803730, 36813730, 36823730, 36833730, 36843730, 36853730, 36863730, 36873730, 36883730, 36893730, 36903730, 36913730, 36923730, 36933730, 36943730, 36953730, 36963730, 36973730, 36983730, 36993730, 37003730, 37013730, 37023730, 37033730, 37043730, 37053730, 37063730, 37073730, 37083730, 37093730, 37103730, 37113730, 37123730, 37133730, 37143730, 37153730, 37163730, 37173730, 37183730, 37193730, 37203730, 37213730, 37223730, 37233730, 37243730, 37253730, 37263730, 37273730, 37283730, 37293730, 37303730, 37313730, 37323730, 37333730, 37343730, 37353730, 37363730, 37373730, 37383730, 37393730, 37403730, 37413730, 37423730, 37433730, 37443730, 37453730, 37463730, 37473730, 37483730, 37493730, 37503730, 37513730, 37523730, 37533730, 37543730, 37553730, 37563730, 37573730, 37583730, 37593730, 37603730, 37613730, 37623730, 37633730, 37643730, 37653730, 37663730, 37673730, 37683730]</msg>
<status status="PASS" starttime="20201112 09:45:46.464" endtime="20201112 09:45:46.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.459" endtime="20201112 09:45:46.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.472" endtime="20201112 09:45:46.764"></status>
</kw>
<msg timestamp="20201112 09:45:46.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032572806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:46.471" endtime="20201112 09:45:46.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032572806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:46.767" endtime="20201112 09:45:46.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.775" endtime="20201112 09:45:46.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.468" endtime="20201112 09:45:46.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.466" endtime="20201112 09:45:46.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:46.801" level="INFO">${RESULT} = {'time': [0.022528111, 0.032572806, 0.042573889, 0.052574986, 0.062576153, 0.072577264, 0.082578431, 0.092579556, 0.102580708, 0.112581833, 0.122583, 0.132584111, 0.142585278, 0.152586403, 0.162587569...</msg>
<status status="PASS" starttime="20201112 09:45:46.778" endtime="20201112 09:45:46.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.806" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:46.805" endtime="20201112 09:45:46.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.808" level="INFO">VALUE: 0.022528111</msg>
<status status="PASS" starttime="20201112 09:45:46.807" endtime="20201112 09:45:46.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.802" endtime="20201112 09:45:46.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.813" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:46.812" endtime="20201112 09:45:46.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.815" level="INFO">VALUE: [0.032572806, 0.042573889, 0.052574986, 0.062576153, 0.072577264, 0.082578431, 0.092579556, 0.102580708, 0.112581833, 0.122583, 0.132584111, 0.142585278, 0.152586403, 0.162587569, 0.172588694, 0.182589833, 0.192590972, 0.202592125, 0.212593236, 0.222594403, 0.232595514, 0.242596694, 0.252597792, 0.262599, 0.272600153, 0.282601264, 0.292602361, 0.302603556, 0.312604639, 0.322605806, 0.332606944, 0.342608125, 0.352609208, 0.362610361, 0.372611472, 0.382612653, 0.39261375, 0.402614903, 0.412616069, 0.422617167, 0.432618292, 0.442619444, 0.452620556, 0.462621708, 0.472622819, 0.482623986, 0.492625097, 0.502626264, 0.512627361, 0.522628528, 0.532629639, 0.542630861, 0.552631903, 0.562633083, 0.572634194, 0.582635347, 0.592636528, 0.602637625, 0.612638722, 0.622639875, 0.632641, 0.642642181, 0.652643306, 0.662644417, 0.672645542, 0.682646708, 0.692647806, 0.702648986, 0.712650097, 0.72265125, 0.732652347, 0.742653556, 0.752654625, 0.762655792, 0.772656917, 0.782658069, 0.792659167, 0.802660347, 0.812661444, 0.822662639, 0.832663708, 0.842664889, 0.852666, 0.862667167, 0.872668264, 0.882669417, 0.892670528, 0.902671694, 0.912672819, 0.922673958, 0.932675083, 0.94267625, 0.952677347, 0.962678556, 0.972679667, 0.982680778, 0.992681889, 1.002683056, 1.012684181, 1.022685347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:46.814" endtime="20201112 09:45:46.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.809" endtime="20201112 09:45:46.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.818" endtime="20201112 09:45:46.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:46.827" endtime="20201112 09:45:46.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.825" endtime="20201112 09:45:46.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.817" endtime="20201112 09:45:46.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.307" endtime="20201112 09:45:46.848"></status>
</kw>
<msg timestamp="20201112 09:45:46.848" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.856" endtime="20201112 09:45:48.974"></status>
</kw>
<msg timestamp="20201112 09:45:48.975" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39223306, 'wakeups': [39233350, 39243350, 39253350, 39263350, 39273350...</msg>
<status status="PASS" starttime="20201112 09:45:46.854" endtime="20201112 09:45:48.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.981" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39223306, 'wakeups': [39233350, 39243350, 39253350, 39263350, 39273350...</msg>
<status status="PASS" starttime="20201112 09:45:48.978" endtime="20201112 09:45:48.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:48.983" endtime="20201112 09:45:48.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.852" endtime="20201112 09:45:48.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.850" endtime="20201112 09:45:48.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:48.992" level="INFO">${RESULT} = {'start-time': 39223306, 'wakeups': [39233350, 39243350, 39253350, 39263350, 39273350, 39283350, 39293350, 39303350, 39313350, 39323350, 39333350, 39343350, 39353350, 39363350, 39373350, 39383350, 393...</msg>
<status status="PASS" starttime="20201112 09:45:48.990" endtime="20201112 09:45:48.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.996" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:48.995" endtime="20201112 09:45:48.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.998" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:48.997" endtime="20201112 09:45:48.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:48.993" endtime="20201112 09:45:48.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.005" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:49.002" endtime="20201112 09:45:49.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.007" level="INFO">VALUE: 39223306</msg>
<status status="PASS" starttime="20201112 09:45:49.006" endtime="20201112 09:45:49.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.000" endtime="20201112 09:45:49.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.012" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:49.011" endtime="20201112 09:45:49.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.014" level="INFO">VALUE: [39233350, 39243350, 39253350, 39263350, 39273350, 39283350, 39293350, 39303350, 39313350, 39323350, 39333350, 39343350, 39353350, 39363350, 39373350, 39383350, 39393350, 39403350, 39413350, 39423350, 39433350, 39443350, 39453350, 39463350, 39473350, 39483350, 39493350, 39503350, 39513350, 39523350, 39533350, 39543350, 39553350, 39563350, 39573350, 39583350, 39593350, 39603350, 39613350, 39623350, 39633350, 39643350, 39653350, 39663350, 39673350, 39683350, 39693350, 39703350, 39713350, 39723350, 39733350, 39743350, 39753350, 39763350, 39773350, 39783350, 39793350, 39803350, 39813350, 39823350, 39833350, 39843350, 39853350, 39863350, 39873350, 39883350, 39893350, 39903350, 39913350, 39923350, 39933350, 39943350, 39953350, 39963350, 39973350, 39983350, 39993350, 40003350, 40013350, 40023350, 40033350, 40043350, 40053350, 40063350, 40073350, 40083350, 40093350, 40103350, 40113350, 40123350, 40133350, 40143350, 40153350, 40163350, 40173350, 40183350, 40193350, 40203350, 40213350, 40223350]</msg>
<status status="PASS" starttime="20201112 09:45:49.013" endtime="20201112 09:45:49.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.008" endtime="20201112 09:45:49.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.022" endtime="20201112 09:45:49.314"></status>
</kw>
<msg timestamp="20201112 09:45:49.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028170208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:49.020" endtime="20201112 09:45:49.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028170208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:49.317" endtime="20201112 09:45:49.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.325" endtime="20201112 09:45:49.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.017" endtime="20201112 09:45:49.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.016" endtime="20201112 09:45:49.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:49.351" level="INFO">${RESULT} = {'time': [0.018125514, 0.028170208, 0.038171319, 0.048172403, 0.058173583, 0.068174694, 0.078175847, 0.088177042, 0.098178153, 0.10817925, 0.118180417, 0.128181542, 0.138182736, 0.148183819, 0.1581849...</msg>
<status status="PASS" starttime="20201112 09:45:49.328" endtime="20201112 09:45:49.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.355" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:49.354" endtime="20201112 09:45:49.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.357" level="INFO">VALUE: 0.018125514</msg>
<status status="PASS" starttime="20201112 09:45:49.356" endtime="20201112 09:45:49.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.351" endtime="20201112 09:45:49.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.363" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:49.361" endtime="20201112 09:45:49.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.365" level="INFO">VALUE: [0.028170208, 0.038171319, 0.048172403, 0.058173583, 0.068174694, 0.078175847, 0.088177042, 0.098178153, 0.10817925, 0.118180417, 0.128181542, 0.138182736, 0.148183819, 0.158184972, 0.168186097, 0.178187264, 0.188188375, 0.198189542, 0.208190653, 0.218191819, 0.228192931, 0.238194111, 0.248195236, 0.258196389, 0.268197583, 0.278198681, 0.288199778, 0.298200944, 0.308202069, 0.31820325, 0.328204347, 0.338205542, 0.348206639, 0.358207875, 0.368208917, 0.378210083, 0.388211194, 0.398212361, 0.4082135, 0.418214653, 0.428215778, 0.438216931, 0.448218042, 0.458219208, 0.468220361, 0.478221486, 0.488222597, 0.498223764, 0.508224875, 0.518226042, 0.528227139, 0.538228292, 0.548229403, 0.558230569, 0.568231681, 0.578232847, 0.588233944, 0.598235181, 0.608236236, 0.618237375, 0.628238486, 0.638239653, 0.648240806, 0.658241944, 0.668243028, 0.678244194, 0.688245306, 0.698246472, 0.708247569, 0.71824875, 0.728249861, 0.738251, 0.748252111, 0.758253306, 0.768254389, 0.778255542, 0.788256653, 0.798257847, 0.808258972, 0.818260097, 0.828261222, 0.838262375, 0.848263486, 0.858264667, 0.86826575, 0.878266931, 0.888268042, 0.898269181, 0.908270292, 0.918271458, 0.928272583, 0.938273722, 0.948274833, 0.958276014, 0.968277125, 0.978278278, 0.988279389, 0.998280556, 1.008281708, 1.018282833] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:49.364" endtime="20201112 09:45:49.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.358" endtime="20201112 09:45:49.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.368" endtime="20201112 09:45:49.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:49.372" endtime="20201112 09:45:49.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.370" endtime="20201112 09:45:49.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.367" endtime="20201112 09:45:49.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.848" endtime="20201112 09:45:49.392"></status>
</kw>
<msg timestamp="20201112 09:45:49.393" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.401" endtime="20201112 09:45:51.519"></status>
</kw>
<msg timestamp="20201112 09:45:51.520" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 41768104, 'wakeups': [41778148, 41788148, 41798148, 41808148, 41818148...</msg>
<status status="PASS" starttime="20201112 09:45:49.399" endtime="20201112 09:45:51.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.526" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 41768104, 'wakeups': [41778148, 41788148, 41798148, 41808148, 41818148...</msg>
<status status="PASS" starttime="20201112 09:45:51.522" endtime="20201112 09:45:51.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.529" endtime="20201112 09:45:51.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.397" endtime="20201112 09:45:51.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.395" endtime="20201112 09:45:51.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:51.540" level="INFO">${RESULT} = {'start-time': 41768104, 'wakeups': [41778148, 41788148, 41798148, 41808148, 41818148, 41828148, 41838148, 41848148, 41858148, 41868148, 41878148, 41888148, 41898148, 41908148, 41918148, 41928148, 419...</msg>
<status status="PASS" starttime="20201112 09:45:51.536" endtime="20201112 09:45:51.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.546" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:51.545" endtime="20201112 09:45:51.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.548" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:51.547" endtime="20201112 09:45:51.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.541" endtime="20201112 09:45:51.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.553" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:51.552" endtime="20201112 09:45:51.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.555" level="INFO">VALUE: 41768104</msg>
<status status="PASS" starttime="20201112 09:45:51.554" endtime="20201112 09:45:51.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.549" endtime="20201112 09:45:51.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.560" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:51.559" endtime="20201112 09:45:51.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.562" level="INFO">VALUE: [41778148, 41788148, 41798148, 41808148, 41818148, 41828148, 41838148, 41848148, 41858148, 41868148, 41878148, 41888148, 41898148, 41908148, 41918148, 41928148, 41938148, 41948148, 41958148, 41968148, 41978148, 41988148, 41998148, 42008148, 42018148, 42028148, 42038148, 42048148, 42058148, 42068148, 42078148, 42088148, 42098148, 42108148, 42118148, 42128148, 42138148, 42148148, 42158148, 42168148, 42178148, 42188148, 42198148, 42208148, 42218148, 42228148, 42238148, 42248148, 42258148, 42268148, 42278148, 42288148, 42298148, 42308148, 42318148, 42328148, 42338148, 42348148, 42358148, 42368148, 42378148, 42388148, 42398148, 42408148, 42418148, 42428148, 42438148, 42448148, 42458148, 42468148, 42478148, 42488148, 42498148, 42508148, 42518148, 42528148, 42538148, 42548148, 42558148, 42568148, 42578148, 42588148, 42598148, 42608148, 42618148, 42628148, 42638148, 42648148, 42658148, 42668148, 42678148, 42688148, 42698148, 42708148, 42718148, 42728148, 42738148, 42748148, 42758148, 42768148]</msg>
<status status="PASS" starttime="20201112 09:45:51.561" endtime="20201112 09:45:51.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.556" endtime="20201112 09:45:51.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.569" endtime="20201112 09:45:51.862"></status>
</kw>
<msg timestamp="20201112 09:45:51.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018168486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028214014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:51.568" endtime="20201112 09:45:51.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018168486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028214014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:51.866" endtime="20201112 09:45:51.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.874" endtime="20201112 09:45:51.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.565" endtime="20201112 09:45:51.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.563" endtime="20201112 09:45:51.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:51.899" level="INFO">${RESULT} = {'time': [0.018168486, 0.028214014, 0.038215097, 0.048216222, 0.058217375, 0.068218528, 0.078219667, 0.088220778, 0.098221986, 0.108223069, 0.118224306, 0.128225333, 0.1382265, 0.148227639, 0.15822877...</msg>
<status status="PASS" starttime="20201112 09:45:51.877" endtime="20201112 09:45:51.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.908" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:51.907" endtime="20201112 09:45:51.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.910" level="INFO">VALUE: 0.018168486</msg>
<status status="PASS" starttime="20201112 09:45:51.909" endtime="20201112 09:45:51.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.904" endtime="20201112 09:45:51.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.916" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:51.914" endtime="20201112 09:45:51.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.918" level="INFO">VALUE: [0.028214014, 0.038215097, 0.048216222, 0.058217375, 0.068218528, 0.078219667, 0.088220778, 0.098221986, 0.108223069, 0.118224306, 0.128225333, 0.1382265, 0.148227639, 0.158228778, 0.168229917, 0.178231153, 0.188232181, 0.198233347, 0.208234472, 0.218235625, 0.228236764, 0.238237917, 0.248239042, 0.258240194, 0.268241319, 0.278242472, 0.288243597, 0.29824475, 0.308245875, 0.318247042, 0.328248153, 0.338249319, 0.348250431, 0.358251583, 0.368252736, 0.378253875, 0.388254972, 0.398256153, 0.40825725, 0.418258417, 0.428259542, 0.438260681, 0.448261819, 0.458262958, 0.468264083, 0.47826525, 0.488266403, 0.498267556, 0.508268639, 0.518269792, 0.528270903, 0.538272083, 0.548273194, 0.558274333, 0.568275472, 0.578276611, 0.588277722, 0.598278903, 0.60828, 0.618281167, 0.628282306, 0.638283444, 0.648284556, 0.658285722, 0.668286847, 0.678288, 0.688289111, 0.698290333, 0.708291403, 0.718292556, 0.728293667, 0.738294833, 0.748295944, 0.758297111, 0.768298236, 0.778299403, 0.7883005, 0.798301694, 0.808302778, 0.818304014, 0.828305056, 0.838306208, 0.848307333, 0.858308486, 0.868309667, 0.878310778, 0.888311889, 0.898313042, 0.908314222, 0.918315361, 0.928316431, 0.938317597, 0.948318708, 0.958319875, 0.968321, 0.978322167, 0.988323292, 0.998324444, 1.008325542, 1.018326736] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:51.917" endtime="20201112 09:45:51.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.912" endtime="20201112 09:45:51.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.921" endtime="20201112 09:45:51.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:51.924" endtime="20201112 09:45:51.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.923" endtime="20201112 09:45:51.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.919" endtime="20201112 09:45:51.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.393" endtime="20201112 09:45:51.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.305" endtime="20201112 09:45:51.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.304" endtime="20201112 09:45:51.945"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:51.948" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.957" endtime="20201112 09:45:54.074"></status>
</kw>
<msg timestamp="20201112 09:45:54.076" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44324146, 'wakeups': [44334202, 44344201, 44354201, 44364201, 44374201...</msg>
<status status="PASS" starttime="20201112 09:45:51.955" endtime="20201112 09:45:54.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.081" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44324146, 'wakeups': [44334202, 44344201, 44354201, 44364201, 44374201...</msg>
<status status="PASS" starttime="20201112 09:45:54.078" endtime="20201112 09:45:54.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.084" endtime="20201112 09:45:54.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.952" endtime="20201112 09:45:54.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.950" endtime="20201112 09:45:54.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:54.095" level="INFO">${RESULT} = {'start-time': 44324146, 'wakeups': [44334202, 44344201, 44354201, 44364201, 44374201, 44384201, 44394201, 44404201, 44414201, 44424201, 44434201, 44444201, 44454201, 44464201, 44474201, 44484201, 444...</msg>
<status status="PASS" starttime="20201112 09:45:54.091" endtime="20201112 09:45:54.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.101" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:54.100" endtime="20201112 09:45:54.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.103" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:54.102" endtime="20201112 09:45:54.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.096" endtime="20201112 09:45:54.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.108" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:54.107" endtime="20201112 09:45:54.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.110" level="INFO">VALUE: 44324146</msg>
<status status="PASS" starttime="20201112 09:45:54.109" endtime="20201112 09:45:54.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.105" endtime="20201112 09:45:54.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.115" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:54.114" endtime="20201112 09:45:54.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.117" level="INFO">VALUE: [44334202, 44344201, 44354201, 44364201, 44374201, 44384201, 44394201, 44404201, 44414201, 44424201, 44434201, 44444201, 44454201, 44464201, 44474201, 44484201, 44494201, 44504201, 44514201, 44524201, 44534201, 44544201, 44554201, 44564201, 44574201, 44584201, 44594201, 44604201, 44614201, 44624201, 44634201, 44644201, 44654201, 44664201, 44674201, 44684201, 44694201, 44704201, 44714201, 44724201, 44734201, 44744201, 44754201, 44764201, 44774201, 44784201, 44794201, 44804201, 44814201, 44824201, 44834201, 44844201, 44854201, 44864201, 44874201, 44884201, 44894201, 44904201, 44914201, 44924201, 44934201, 44944201, 44954201, 44964201, 44974201, 44984201, 44994201, 45004201, 45014201, 45024201, 45034201, 45044201, 45054201, 45064201, 45074201, 45084201, 45094201, 45104201, 45114201, 45124201, 45134201, 45144201, 45154201, 45164201, 45174201, 45184201, 45194201, 45204201, 45214201, 45224201, 45234201, 45244201, 45254201, 45264201, 45274201, 45284201, 45294201, 45304201, 45314201, 45324201]</msg>
<status status="PASS" starttime="20201112 09:45:54.116" endtime="20201112 09:45:54.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.112" endtime="20201112 09:45:54.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.124" endtime="20201112 09:45:54.416"></status>
</kw>
<msg timestamp="20201112 09:45:54.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02185875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031916264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:54.123" endtime="20201112 09:45:54.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02185875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031916264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:54.419" endtime="20201112 09:45:54.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.427" endtime="20201112 09:45:54.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.120" endtime="20201112 09:45:54.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.119" endtime="20201112 09:45:54.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:54.454" level="INFO">${RESULT} = {'time': [0.02185875, 0.031916264, 0.041916292, 0.051917403, 0.061918569, 0.071919681, 0.081920847, 0.091921972, 0.101923139, 0.111924264, 0.121925431, 0.131926556, 0.141927736, 0.151928806, 0.1619300...</msg>
<status status="PASS" starttime="20201112 09:45:54.430" endtime="20201112 09:45:54.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.458" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:54.457" endtime="20201112 09:45:54.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.460" level="INFO">VALUE: 0.02185875</msg>
<status status="PASS" starttime="20201112 09:45:54.459" endtime="20201112 09:45:54.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.455" endtime="20201112 09:45:54.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.466" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:54.465" endtime="20201112 09:45:54.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.468" level="INFO">VALUE: [0.031916264, 0.041916292, 0.051917403, 0.061918569, 0.071919681, 0.081920847, 0.091921972, 0.101923139, 0.111924264, 0.121925431, 0.131926556, 0.141927736, 0.151928806, 0.161930014, 0.171931111, 0.18193225, 0.191933375, 0.201934556, 0.211935694, 0.221936819, 0.231937972, 0.241939097, 0.251940208, 0.261941375, 0.271942486, 0.281943639, 0.291944764, 0.301945944, 0.311947042, 0.321948181, 0.331949306, 0.341950458, 0.351951639, 0.361952722, 0.371953847, 0.381955014, 0.391956125, 0.401957347, 0.411958403, 0.421959542, 0.431960653, 0.441961819, 0.451962931, 0.461964111, 0.47196525, 0.481966361, 0.491967472, 0.501968639, 0.51196975, 0.521970917, 0.531972028, 0.541973181, 0.551974306, 0.561975458, 0.571976653, 0.581977736, 0.591978847, 0.601980028, 0.611981125, 0.621982333, 0.631983403, 0.641984556, 0.651985667, 0.661986833, 0.671987958, 0.681989111, 0.691990222, 0.701991375, 0.7119925, 0.721993653, 0.731994764, 0.741995944, 0.751997056, 0.761998208, 0.771999319, 0.782000472, 0.792001597, 0.80200275, 0.812003931, 0.822005028, 0.832006139, 0.842007347, 0.852008417, 0.862009583, 0.872010694, 0.882011889, 0.892012972, 0.902014125, 0.91201525, 0.922016431, 0.932017514, 0.942018681, 0.952019819, 0.962020986, 0.972022069, 0.982023236, 0.992024333, 1.0020255, 1.012026653, 1.022027778] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:54.467" endtime="20201112 09:45:54.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.462" endtime="20201112 09:45:54.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.471" endtime="20201112 09:45:54.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:54.475" endtime="20201112 09:45:54.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.473" endtime="20201112 09:45:54.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.470" endtime="20201112 09:45:54.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.948" endtime="20201112 09:45:54.496"></status>
</kw>
<msg timestamp="20201112 09:45:54.496" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.504" endtime="20201112 09:45:56.621"></status>
</kw>
<msg timestamp="20201112 09:45:56.622" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46871069, 'wakeups': [46881125, 46891124, 46901124, 46911124, 46921124...</msg>
<status status="PASS" starttime="20201112 09:45:54.502" endtime="20201112 09:45:56.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.628" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46871069, 'wakeups': [46881125, 46891124, 46901124, 46911124, 46921124...</msg>
<status status="PASS" starttime="20201112 09:45:56.624" endtime="20201112 09:45:56.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:56.630" endtime="20201112 09:45:56.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.500" endtime="20201112 09:45:56.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.498" endtime="20201112 09:45:56.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:56.641" level="INFO">${RESULT} = {'start-time': 46871069, 'wakeups': [46881125, 46891124, 46901124, 46911124, 46921124, 46931124, 46941124, 46951124, 46961124, 46971124, 46981124, 46991124, 47001124, 47011124, 47021124, 47031124, 470...</msg>
<status status="PASS" starttime="20201112 09:45:56.637" endtime="20201112 09:45:56.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.649" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:56.647" endtime="20201112 09:45:56.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.654" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:56.652" endtime="20201112 09:45:56.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.643" endtime="20201112 09:45:56.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.660" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:56.658" endtime="20201112 09:45:56.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.662" level="INFO">VALUE: 46871069</msg>
<status status="PASS" starttime="20201112 09:45:56.661" endtime="20201112 09:45:56.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.655" endtime="20201112 09:45:56.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.666" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:56.665" endtime="20201112 09:45:56.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.669" level="INFO">VALUE: [46881125, 46891124, 46901124, 46911124, 46921124, 46931124, 46941124, 46951124, 46961124, 46971124, 46981124, 46991124, 47001124, 47011124, 47021124, 47031124, 47041124, 47051124, 47061124, 47071124, 47081124, 47091124, 47101124, 47111124, 47121124, 47131124, 47141124, 47151124, 47161124, 47171124, 47181124, 47191124, 47201124, 47211124, 47221124, 47231124, 47241124, 47251124, 47261124, 47271124, 47281124, 47291124, 47301124, 47311124, 47321124, 47331124, 47341124, 47351124, 47361124, 47371124, 47381124, 47391124, 47401124, 47411124, 47421124, 47431124, 47441124, 47451124, 47461124, 47471124, 47481124, 47491124, 47501124, 47511124, 47521124, 47531124, 47541124, 47551124, 47561124, 47571124, 47581124, 47591124, 47601124, 47611124, 47621124, 47631124, 47641124, 47651124, 47661124, 47671124, 47681124, 47691124, 47701124, 47711124, 47721124, 47731124, 47741124, 47751124, 47761124, 47771124, 47781124, 47791124, 47801124, 47811124, 47821124, 47831124, 47841124, 47851124, 47861124, 47871124]</msg>
<status status="PASS" starttime="20201112 09:45:56.668" endtime="20201112 09:45:56.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.663" endtime="20201112 09:45:56.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:56.676" endtime="20201112 09:45:56.968"></status>
</kw>
<msg timestamp="20201112 09:45:56.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018137333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028194875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:56.675" endtime="20201112 09:45:56.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018137333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028194875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:56.972" endtime="20201112 09:45:56.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:56.980" endtime="20201112 09:45:56.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.672" endtime="20201112 09:45:56.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.670" endtime="20201112 09:45:56.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:57.006" level="INFO">${RESULT} = {'time': [0.018137333, 0.028194875, 0.038194903, 0.048196042, 0.058197194, 0.068198306, 0.078199486, 0.088200597, 0.098201764, 0.108202861, 0.118204028, 0.128205208, 0.138206306, 0.148207431, 0.158208...</msg>
<status status="PASS" starttime="20201112 09:45:56.983" endtime="20201112 09:45:57.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.010" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:57.009" endtime="20201112 09:45:57.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.012" level="INFO">VALUE: 0.018137333</msg>
<status status="PASS" starttime="20201112 09:45:57.011" endtime="20201112 09:45:57.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.006" endtime="20201112 09:45:57.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.018" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:57.016" endtime="20201112 09:45:57.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.020" level="INFO">VALUE: [0.028194875, 0.038194903, 0.048196042, 0.058197194, 0.068198306, 0.078199486, 0.088200597, 0.098201764, 0.108202861, 0.118204028, 0.128205208, 0.138206306, 0.148207431, 0.158208583, 0.168209736, 0.178210875, 0.188212, 0.198213153, 0.208214278, 0.218215431, 0.228216556, 0.238217722, 0.248218833, 0.25822, 0.268221111, 0.278222347, 0.288223389, 0.298224569, 0.308225681, 0.318226847, 0.328227986, 0.338229181, 0.34823025, 0.358231403, 0.368232542, 0.378233708, 0.388234833, 0.398235972, 0.408237083, 0.41823825, 0.428239375, 0.438240542, 0.448241653, 0.458242833, 0.468243931, 0.478245097, 0.488246222, 0.498247375, 0.508248486, 0.518249681, 0.528250778, 0.538251931, 0.548253042, 0.558254181, 0.568255306, 0.578256444, 0.588257569, 0.598258736, 0.608259903, 0.618261, 0.628262097, 0.638263264, 0.648264375, 0.658265528, 0.668266653, 0.678267806, 0.688268917, 0.698270069, 0.708271194, 0.718272403, 0.728273486, 0.738274611, 0.748275722, 0.758276903, 0.768278, 0.778279194, 0.788280278, 0.798281431, 0.808282542, 0.818283708, 0.828284833, 0.838285986, 0.848287083, 0.858288264, 0.868289361, 0.878290514, 0.888291639, 0.898292806, 0.908293917, 0.918295069, 0.928296194, 0.938297333, 0.948298444, 0.958299611, 0.968300764, 0.978301903, 0.988303, 0.998304153, 1.008305278, 1.018306431] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:57.019" endtime="20201112 09:45:57.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.013" endtime="20201112 09:45:57.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:57.023" endtime="20201112 09:45:57.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:57.027" endtime="20201112 09:45:57.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.025" endtime="20201112 09:45:57.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.022" endtime="20201112 09:45:57.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.496" endtime="20201112 09:45:57.048"></status>
</kw>
<msg timestamp="20201112 09:45:57.048" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:57.056" endtime="20201112 09:45:59.173"></status>
</kw>
<msg timestamp="20201112 09:45:59.175" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49423169, 'wakeups': [49433225, 49443224, 49453224, 49463224, 49473224...</msg>
<status status="PASS" starttime="20201112 09:45:57.054" endtime="20201112 09:45:59.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.181" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49423169, 'wakeups': [49433225, 49443224, 49453224, 49463224, 49473224...</msg>
<status status="PASS" starttime="20201112 09:45:59.178" endtime="20201112 09:45:59.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.184" endtime="20201112 09:45:59.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.052" endtime="20201112 09:45:59.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.050" endtime="20201112 09:45:59.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:59.194" level="INFO">${RESULT} = {'start-time': 49423169, 'wakeups': [49433225, 49443224, 49453224, 49463224, 49473224, 49483224, 49493224, 49503224, 49513224, 49523224, 49533224, 49543224, 49553224, 49563224, 49573224, 49583224, 495...</msg>
<status status="PASS" starttime="20201112 09:45:59.191" endtime="20201112 09:45:59.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.203" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:59.201" endtime="20201112 09:45:59.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.207" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:59.205" endtime="20201112 09:45:59.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.196" endtime="20201112 09:45:59.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.213" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:59.212" endtime="20201112 09:45:59.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.215" level="INFO">VALUE: 49423169</msg>
<status status="PASS" starttime="20201112 09:45:59.214" endtime="20201112 09:45:59.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.209" endtime="20201112 09:45:59.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.220" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:59.219" endtime="20201112 09:45:59.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.222" level="INFO">VALUE: [49433225, 49443224, 49453224, 49463224, 49473224, 49483224, 49493224, 49503224, 49513224, 49523224, 49533224, 49543224, 49553224, 49563224, 49573224, 49583224, 49593224, 49603224, 49613224, 49623224, 49633224, 49643224, 49653224, 49663224, 49673224, 49683224, 49693224, 49703224, 49713224, 49723224, 49733224, 49743224, 49753224, 49763224, 49773224, 49783224, 49793224, 49803224, 49813224, 49823224, 49833224, 49843224, 49853224, 49863224, 49873224, 49883224, 49893224, 49903224, 49913224, 49923224, 49933224, 49943224, 49953224, 49963224, 49973224, 49983224, 49993224, 50003224, 50013224, 50023224, 50033224, 50043224, 50053224, 50063224, 50073224, 50083224, 50093224, 50103224, 50113224, 50123224, 50133224, 50143224, 50153224, 50163224, 50173224, 50183224, 50193224, 50203224, 50213224, 50223224, 50233224, 50243224, 50253224, 50263224, 50273224, 50283224, 50293224, 50303224, 50313224, 50323224, 50333224, 50343224, 50353224, 50363224, 50373224, 50383224, 50393224, 50403224, 50413224, 50423224]</msg>
<status status="PASS" starttime="20201112 09:45:59.221" endtime="20201112 09:45:59.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.216" endtime="20201112 09:45:59.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.229" endtime="20201112 09:45:59.521"></status>
</kw>
<msg timestamp="20201112 09:45:59.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018189153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028246806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:59.228" endtime="20201112 09:45:59.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018189153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028246806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:59.525" endtime="20201112 09:45:59.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.533" endtime="20201112 09:45:59.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.225" endtime="20201112 09:45:59.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.223" endtime="20201112 09:45:59.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:59.559" level="INFO">${RESULT} = {'time': [0.018189153, 0.028246806, 0.038246847, 0.048247972, 0.058249125, 0.06825025, 0.078251431, 0.088252528, 0.098253708, 0.108254806, 0.118256028, 0.128257083, 0.13825825, 0.148259375, 0.15826054...</msg>
<status status="PASS" starttime="20201112 09:45:59.536" endtime="20201112 09:45:59.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.563" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:59.562" endtime="20201112 09:45:59.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.565" level="INFO">VALUE: 0.018189153</msg>
<status status="PASS" starttime="20201112 09:45:59.564" endtime="20201112 09:45:59.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.560" endtime="20201112 09:45:59.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.571" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:59.570" endtime="20201112 09:45:59.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.573" level="INFO">VALUE: [0.028246806, 0.038246847, 0.048247972, 0.058249125, 0.06825025, 0.078251431, 0.088252528, 0.098253708, 0.108254806, 0.118256028, 0.128257083, 0.13825825, 0.148259375, 0.158260542, 0.168261667, 0.178262833, 0.188263931, 0.198265139, 0.208266222, 0.218267389, 0.2282685, 0.238269667, 0.248270792, 0.258271944, 0.268273056, 0.278274222, 0.288275347, 0.298276528, 0.308277625, 0.318278792, 0.328279972, 0.338281069, 0.348282194, 0.358283361, 0.368284472, 0.378285653, 0.388286778, 0.398287972, 0.408289042, 0.418290208, 0.428291319, 0.438292486, 0.448293611, 0.458294778, 0.468295889, 0.478297056, 0.488298153, 0.498299319, 0.508300444, 0.518301583, 0.528302694, 0.538303861, 0.548304972, 0.558306139, 0.56830725, 0.578308417, 0.588309556, 0.598310667, 0.608311778, 0.618312944, 0.628314056, 0.638315208, 0.648316319, 0.658317486, 0.668318597, 0.67831975, 0.688320875, 0.698322028, 0.708323139, 0.718324306, 0.728325403, 0.738326569, 0.748327681, 0.758328833, 0.768329958, 0.778331125, 0.78833225, 0.798333403, 0.8083345, 0.818335681, 0.828336764, 0.838337931, 0.848339042, 0.858340208, 0.868341333, 0.8783425, 0.888343583, 0.89834475, 0.908345861, 0.918347014, 0.928348153, 0.938349361, 0.948350403, 0.958351569, 0.968352694, 0.978353833, 0.988354958, 0.998356111, 1.008357236, 1.018358389] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:59.572" endtime="20201112 09:45:59.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.567" endtime="20201112 09:45:59.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.576" endtime="20201112 09:45:59.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:59.579" endtime="20201112 09:45:59.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.578" endtime="20201112 09:45:59.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.574" endtime="20201112 09:45:59.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.048" endtime="20201112 09:45:59.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.946" endtime="20201112 09:45:59.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.946" endtime="20201112 09:45:59.601"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:59.603" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.612" endtime="20201112 09:46:01.730"></status>
</kw>
<msg timestamp="20201112 09:46:01.731" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51979384, 'wakeups': [51989453, 51999451, 52009451, 52019451, 52029451...</msg>
<status status="PASS" starttime="20201112 09:45:59.610" endtime="20201112 09:46:01.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.737" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51979384, 'wakeups': [51989453, 51999451, 52009451, 52019451, 52029451...</msg>
<status status="PASS" starttime="20201112 09:46:01.733" endtime="20201112 09:46:01.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:01.739" endtime="20201112 09:46:01.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.607" endtime="20201112 09:46:01.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.605" endtime="20201112 09:46:01.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:01.750" level="INFO">${RESULT} = {'start-time': 51979384, 'wakeups': [51989453, 51999451, 52009451, 52019451, 52029451, 52039451, 52049451, 52059451, 52069451, 52079451, 52089451, 52099451, 52109451, 52119451, 52129451, 52139451, 521...</msg>
<status status="PASS" starttime="20201112 09:46:01.746" endtime="20201112 09:46:01.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.759" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:01.757" endtime="20201112 09:46:01.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.763" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:01.761" endtime="20201112 09:46:01.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.752" endtime="20201112 09:46:01.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.768" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:01.767" endtime="20201112 09:46:01.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.770" level="INFO">VALUE: 51979384</msg>
<status status="PASS" starttime="20201112 09:46:01.769" endtime="20201112 09:46:01.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.765" endtime="20201112 09:46:01.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.775" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:01.774" endtime="20201112 09:46:01.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.777" level="INFO">VALUE: [51989453, 51999451, 52009451, 52019451, 52029451, 52039451, 52049451, 52059451, 52069451, 52079451, 52089451, 52099451, 52109451, 52119451, 52129451, 52139451, 52149451, 52159451, 52169451, 52179451, 52189451, 52199451, 52209451, 52219451, 52229451, 52239451, 52249451, 52259451, 52269451, 52279451, 52289451, 52299451, 52309451, 52319451, 52329451, 52339451, 52349451, 52359451, 52369451, 52379451, 52389451, 52399451, 52409451, 52419451, 52429451, 52439451, 52449451, 52459451, 52469451, 52479451, 52489451, 52499451, 52509451, 52519451, 52529451, 52539451, 52549451, 52559451, 52569451, 52579451, 52589451, 52599451, 52609451, 52619451, 52629451, 52639451, 52649451, 52659451, 52669451, 52679451, 52689451, 52699451, 52709451, 52719451, 52729451, 52739451, 52749451, 52759451, 52769451, 52779451, 52789451, 52799451, 52809451, 52819451, 52829451, 52839451, 52849451, 52859451, 52869451, 52879451, 52889451, 52899451, 52909451, 52919451, 52929451, 52939451, 52949451, 52959451, 52969451, 52979451]</msg>
<status status="PASS" starttime="20201112 09:46:01.776" endtime="20201112 09:46:01.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.772" endtime="20201112 09:46:01.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:01.784" endtime="20201112 09:46:02.078"></status>
</kw>
<msg timestamp="20201112 09:46:02.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031908014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:01.783" endtime="20201112 09:46:02.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031908014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:02.081" endtime="20201112 09:46:02.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:02.089" endtime="20201112 09:46:02.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.780" endtime="20201112 09:46:02.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.779" endtime="20201112 09:46:02.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:02.116" level="INFO">${RESULT} = {'time': [0.021837125, 0.031908014, 0.041907125, 0.05190825, 0.061909417, 0.071910528, 0.081911708, 0.091912806, 0.101913972, 0.111915083, 0.121916264, 0.131917375, 0.141918528, 0.151919639, 0.1619208...</msg>
<status status="PASS" starttime="20201112 09:46:02.093" endtime="20201112 09:46:02.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.120" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:02.119" endtime="20201112 09:46:02.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.122" level="INFO">VALUE: 0.021837125</msg>
<status status="PASS" starttime="20201112 09:46:02.121" endtime="20201112 09:46:02.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.117" endtime="20201112 09:46:02.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.128" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:02.127" endtime="20201112 09:46:02.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.130" level="INFO">VALUE: [0.031908014, 0.041907125, 0.05190825, 0.061909417, 0.071910528, 0.081911708, 0.091912806, 0.101913972, 0.111915083, 0.121916264, 0.131917375, 0.141918528, 0.151919639, 0.161920819, 0.171921944, 0.181923083, 0.191924208, 0.201925375, 0.211926486, 0.221927667, 0.231928764, 0.241929931, 0.251931056, 0.261932264, 0.271933347, 0.281934514, 0.291935625, 0.301936778, 0.311937889, 0.321939111, 0.331940222, 0.341941347, 0.351942458, 0.361943639, 0.37194475, 0.381945903, 0.391947028, 0.401948194, 0.411949306, 0.421950472, 0.431951597, 0.441952764, 0.451953875, 0.461955056, 0.471956167, 0.481957319, 0.491958444, 0.501959597, 0.511960708, 0.521961875, 0.531963, 0.541964153, 0.551965264, 0.561966431, 0.571967542, 0.581968708, 0.591969792, 0.601970972, 0.611972069, 0.621973222, 0.631974319, 0.6419755, 0.651976597, 0.661977778, 0.671978861, 0.681980028, 0.691981139, 0.701982292, 0.711983431, 0.721984583, 0.731985694, 0.741986833, 0.751987944, 0.761989111, 0.771990222, 0.781991389, 0.791992514, 0.801993653, 0.811994764, 0.821995986, 0.831997042, 0.841998194, 0.851999306, 0.862000472, 0.872001583, 0.882002764, 0.892003875, 0.902005014, 0.912006125, 0.922007319, 0.932008403, 0.942009556, 0.952010667, 0.962011847, 0.972012944, 0.982014097, 0.992015222, 1.002016375, 1.012017528, 1.022018653] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:02.129" endtime="20201112 09:46:02.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.124" endtime="20201112 09:46:02.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:02.133" endtime="20201112 09:46:02.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:02.137" endtime="20201112 09:46:02.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.135" endtime="20201112 09:46:02.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.132" endtime="20201112 09:46:02.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.604" endtime="20201112 09:46:02.158"></status>
</kw>
<msg timestamp="20201112 09:46:02.158" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:02.166" endtime="20201112 09:46:04.267"></status>
</kw>
<msg timestamp="20201112 09:46:04.268" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54533172, 'wakeups': [54543241, 54553239, 54563239, 54573239, 54583239...</msg>
<status status="PASS" starttime="20201112 09:46:02.164" endtime="20201112 09:46:04.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.271" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54533172, 'wakeups': [54543241, 54553239, 54563239, 54573239, 54583239...</msg>
<status status="PASS" starttime="20201112 09:46:04.269" endtime="20201112 09:46:04.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.272" endtime="20201112 09:46:04.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.162" endtime="20201112 09:46:04.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.160" endtime="20201112 09:46:04.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:04.277" level="INFO">${RESULT} = {'start-time': 54533172, 'wakeups': [54543241, 54553239, 54563239, 54573239, 54583239, 54593239, 54603239, 54613239, 54623239, 54633239, 54643239, 54653239, 54663239, 54673239, 54683239, 54693239, 547...</msg>
<status status="PASS" starttime="20201112 09:46:04.275" endtime="20201112 09:46:04.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.281" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:04.280" endtime="20201112 09:46:04.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.283" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:04.282" endtime="20201112 09:46:04.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.278" endtime="20201112 09:46:04.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.288" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:04.287" endtime="20201112 09:46:04.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.291" level="INFO">VALUE: 54533172</msg>
<status status="PASS" starttime="20201112 09:46:04.289" endtime="20201112 09:46:04.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.285" endtime="20201112 09:46:04.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.296" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:04.295" endtime="20201112 09:46:04.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.305" level="INFO">VALUE: [54543241, 54553239, 54563239, 54573239, 54583239, 54593239, 54603239, 54613239, 54623239, 54633239, 54643239, 54653239, 54663239, 54673239, 54683239, 54693239, 54703239, 54713239, 54723239, 54733239, 54743239, 54753239, 54763239, 54773239, 54783239, 54793239, 54803239, 54813239, 54823239, 54833239, 54843239, 54853239, 54863239, 54873239, 54883239, 54893239, 54903239, 54913239, 54923239, 54933239, 54943239, 54953239, 54963239, 54973239, 54983239, 54993239, 55003239, 55013239, 55023239, 55033239, 55043239, 55053239, 55063239, 55073239, 55083239, 55093239, 55103239, 55113239, 55123239, 55133239, 55143239, 55153239, 55163239, 55173239, 55183239, 55193239, 55203239, 55213239, 55223239, 55233239, 55243239, 55253239, 55263239, 55273239, 55283239, 55293239, 55303239, 55313239, 55323239, 55333239, 55343239, 55353239, 55363239, 55373239, 55383239, 55393239, 55403239, 55413239, 55423239, 55433239, 55443239, 55453239, 55463239, 55473239, 55483239, 55493239, 55503239, 55513239, 55523239, 55533239]</msg>
<status status="PASS" starttime="20201112 09:46:04.304" endtime="20201112 09:46:04.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.293" endtime="20201112 09:46:04.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.313" endtime="20201112 09:46:04.604"></status>
</kw>
<msg timestamp="20201112 09:46:04.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018206681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028276917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:04.311" endtime="20201112 09:46:04.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018206681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028276917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:04.608" endtime="20201112 09:46:04.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.615" endtime="20201112 09:46:04.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.309" endtime="20201112 09:46:04.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.307" endtime="20201112 09:46:04.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:04.641" level="INFO">${RESULT} = {'time': [0.018206681, 0.028276917, 0.038276153, 0.048277264, 0.058278458, 0.068279542, 0.078280708, 0.088281819, 0.098282986, 0.108284111, 0.118285264, 0.128286417, 0.138287556, 0.148288681, 0.158289...</msg>
<status status="PASS" starttime="20201112 09:46:04.618" endtime="20201112 09:46:04.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.646" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:04.645" endtime="20201112 09:46:04.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.648" level="INFO">VALUE: 0.018206681</msg>
<status status="PASS" starttime="20201112 09:46:04.647" endtime="20201112 09:46:04.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.642" endtime="20201112 09:46:04.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.653" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:04.652" endtime="20201112 09:46:04.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.656" level="INFO">VALUE: [0.028276917, 0.038276153, 0.048277264, 0.058278458, 0.068279542, 0.078280708, 0.088281819, 0.098282986, 0.108284111, 0.118285264, 0.128286417, 0.138287556, 0.148288681, 0.158289847, 0.168290944, 0.178292111, 0.188293222, 0.198294389, 0.208295528, 0.218296681, 0.228297806, 0.238299042, 0.248300069, 0.25830125, 0.268302347, 0.278303514, 0.288304639, 0.298305806, 0.308306917, 0.318308083, 0.328309194, 0.338310361, 0.348311486, 0.358312667, 0.368313764, 0.378314931, 0.388316056, 0.398317208, 0.408318333, 0.4183195, 0.428320611, 0.438321778, 0.448322917, 0.458324083, 0.468325181, 0.478326347, 0.488327458, 0.498328639, 0.508329764, 0.518330931, 0.528332042, 0.538333194, 0.548334319, 0.558335472, 0.568336597, 0.578337764, 0.588338875, 0.598340042, 0.608341167, 0.618342319, 0.628343444, 0.638344611, 0.648345722, 0.658346889, 0.668348014, 0.678349181, 0.688350292, 0.698351472, 0.708352653, 0.718353736, 0.728354875, 0.738356042, 0.748357153, 0.758358306, 0.768359417, 0.778360597, 0.788361708, 0.798362903, 0.808363986, 0.818365153, 0.828366264, 0.838367431, 0.848368542, 0.858369694, 0.868370861, 0.878371972, 0.888373097, 0.898374236, 0.908375361, 0.918376514, 0.928377625, 0.938378778, 0.948379889, 0.958381042, 0.968382181, 0.978383319, 0.988384444, 0.998385583, 1.008386736, 1.018387861] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:04.655" endtime="20201112 09:46:04.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.649" endtime="20201112 09:46:04.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.659" endtime="20201112 09:46:04.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:04.662" endtime="20201112 09:46:04.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.661" endtime="20201112 09:46:04.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.657" endtime="20201112 09:46:04.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.158" endtime="20201112 09:46:04.683"></status>
</kw>
<msg timestamp="20201112 09:46:04.684" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.692" endtime="20201112 09:46:06.809"></status>
</kw>
<msg timestamp="20201112 09:46:06.810" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57058966, 'wakeups': [57069035, 57079033, 57089033, 57099033, 57109033...</msg>
<status status="PASS" starttime="20201112 09:46:04.690" endtime="20201112 09:46:06.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.816" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57058966, 'wakeups': [57069035, 57079033, 57089033, 57099033, 57109033...</msg>
<status status="PASS" starttime="20201112 09:46:06.812" endtime="20201112 09:46:06.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:06.818" endtime="20201112 09:46:06.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.688" endtime="20201112 09:46:06.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.686" endtime="20201112 09:46:06.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:06.826" level="INFO">${RESULT} = {'start-time': 57058966, 'wakeups': [57069035, 57079033, 57089033, 57099033, 57109033, 57119033, 57129033, 57139033, 57149033, 57159033, 57169033, 57179033, 57189033, 57199033, 57209033, 57219033, 572...</msg>
<status status="PASS" starttime="20201112 09:46:06.824" endtime="20201112 09:46:06.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.830" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:06.829" endtime="20201112 09:46:06.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.832" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:06.831" endtime="20201112 09:46:06.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.827" endtime="20201112 09:46:06.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.837" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:06.836" endtime="20201112 09:46:06.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.839" level="INFO">VALUE: 57058966</msg>
<status status="PASS" starttime="20201112 09:46:06.838" endtime="20201112 09:46:06.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.833" endtime="20201112 09:46:06.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.844" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:06.842" endtime="20201112 09:46:06.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.846" level="INFO">VALUE: [57069035, 57079033, 57089033, 57099033, 57109033, 57119033, 57129033, 57139033, 57149033, 57159033, 57169033, 57179033, 57189033, 57199033, 57209033, 57219033, 57229033, 57239033, 57249033, 57259033, 57269033, 57279033, 57289033, 57299033, 57309033, 57319033, 57329033, 57339033, 57349033, 57359033, 57369033, 57379033, 57389033, 57399033, 57409033, 57419033, 57429033, 57439033, 57449033, 57459033, 57469033, 57479033, 57489033, 57499033, 57509033, 57519033, 57529033, 57539033, 57549033, 57559033, 57569033, 57579033, 57589033, 57599033, 57609033, 57619033, 57629033, 57639033, 57649033, 57659033, 57669033, 57679033, 57689033, 57699033, 57709033, 57719033, 57729033, 57739033, 57749033, 57759033, 57769033, 57779033, 57789033, 57799033, 57809033, 57819033, 57829033, 57839033, 57849033, 57859033, 57869033, 57879033, 57889033, 57899033, 57909033, 57919033, 57929033, 57939033, 57949033, 57959033, 57969033, 57979033, 57989033, 57999033, 58009033, 58019033, 58029033, 58039033, 58049033, 58059033]</msg>
<status status="PASS" starttime="20201112 09:46:06.845" endtime="20201112 09:46:06.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.840" endtime="20201112 09:46:06.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:06.853" endtime="20201112 09:46:07.144"></status>
</kw>
<msg timestamp="20201112 09:46:07.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018533236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028603167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:06.851" endtime="20201112 09:46:07.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018533236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028603167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:07.149" endtime="20201112 09:46:07.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.156" endtime="20201112 09:46:07.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.849" endtime="20201112 09:46:07.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.847" endtime="20201112 09:46:07.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:07.182" level="INFO">${RESULT} = {'time': [0.018533236, 0.028603167, 0.038602403, 0.048603542, 0.05860475, 0.068605806, 0.078606986, 0.088608083, 0.09860925, 0.108610361, 0.118611528, 0.128612653, 0.138613806, 0.148614931, 0.15861609...</msg>
<status status="PASS" starttime="20201112 09:46:07.160" endtime="20201112 09:46:07.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.186" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:07.185" endtime="20201112 09:46:07.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.189" level="INFO">VALUE: 0.018533236</msg>
<status status="PASS" starttime="20201112 09:46:07.188" endtime="20201112 09:46:07.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.183" endtime="20201112 09:46:07.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.194" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:07.193" endtime="20201112 09:46:07.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.196" level="INFO">VALUE: [0.028603167, 0.038602403, 0.048603542, 0.05860475, 0.068605806, 0.078606986, 0.088608083, 0.09860925, 0.108610361, 0.118611528, 0.128612653, 0.138613806, 0.148614931, 0.158616097, 0.168617208, 0.178618375, 0.188619528, 0.198620681, 0.208621778, 0.218622931, 0.228624056, 0.238625292, 0.248626333, 0.258627514, 0.268628611, 0.278629778, 0.288630903, 0.298632069, 0.308633194, 0.318634403, 0.328635472, 0.338636625, 0.348637764, 0.358638931, 0.368640056, 0.378641208, 0.388642319, 0.398643472, 0.408644583, 0.418645819, 0.428646861, 0.438648014, 0.448649167, 0.458650278, 0.468651403, 0.478652583, 0.488653667, 0.498654875, 0.508655944, 0.518657111, 0.528658208, 0.538659361, 0.548660486, 0.558661653, 0.568662764, 0.578663903, 0.588665014, 0.598666194, 0.608667292, 0.618668472, 0.628669569, 0.638670764, 0.648671833, 0.658672986, 0.668674111, 0.678675264, 0.688676403, 0.698677556, 0.708678639, 0.718679847, 0.728680917, 0.738682083, 0.748683194, 0.758684347, 0.768685486, 0.778686694, 0.788687736, 0.798688889, 0.808690028, 0.818691236, 0.828692278, 0.838693444, 0.848694556, 0.858695708, 0.868696819, 0.878697986, 0.888699111, 0.898700306, 0.908701375, 0.918702528, 0.928703639, 0.938704806, 0.948705931, 0.958707083, 0.968708181, 0.978709403, 0.988710458, 0.998711625, 1.00871275, 1.018713903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:07.195" endtime="20201112 09:46:07.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.190" endtime="20201112 09:46:07.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.199" endtime="20201112 09:46:07.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:07.202" endtime="20201112 09:46:07.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.201" endtime="20201112 09:46:07.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.197" endtime="20201112 09:46:07.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.684" endtime="20201112 09:46:07.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.602" endtime="20201112 09:46:07.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.601" endtime="20201112 09:46:07.224"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:07.226" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.235" endtime="20201112 09:46:09.353"></status>
</kw>
<msg timestamp="20201112 09:46:09.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59602864, 'wakeups': [59612946, 59622947, 59632947, 59642947, 59652947...</msg>
<status status="PASS" starttime="20201112 09:46:07.233" endtime="20201112 09:46:09.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.366" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59602864, 'wakeups': [59612946, 59622947, 59632947, 59642947, 59652947...</msg>
<status status="PASS" starttime="20201112 09:46:09.357" endtime="20201112 09:46:09.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.369" endtime="20201112 09:46:09.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.230" endtime="20201112 09:46:09.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.228" endtime="20201112 09:46:09.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:09.378" level="INFO">${RESULT} = {'start-time': 59602864, 'wakeups': [59612946, 59622947, 59632947, 59642947, 59652947, 59662947, 59672947, 59682947, 59692947, 59702947, 59712947, 59722947, 59732947, 59742947, 59752947, 59762947, 597...</msg>
<status status="PASS" starttime="20201112 09:46:09.375" endtime="20201112 09:46:09.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.383" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:09.382" endtime="20201112 09:46:09.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.385" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:09.384" endtime="20201112 09:46:09.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.379" endtime="20201112 09:46:09.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.389" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:09.388" endtime="20201112 09:46:09.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.391" level="INFO">VALUE: 59602864</msg>
<status status="PASS" starttime="20201112 09:46:09.391" endtime="20201112 09:46:09.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.386" endtime="20201112 09:46:09.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.396" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:09.395" endtime="20201112 09:46:09.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.398" level="INFO">VALUE: [59612946, 59622947, 59632947, 59642947, 59652947, 59662947, 59672947, 59682947, 59692947, 59702947, 59712947, 59722947, 59732947, 59742947, 59752947, 59762947, 59772947, 59782947, 59792947, 59802947, 59812947, 59822947, 59832947, 59842947, 59852947, 59862947, 59872947, 59882947, 59892947, 59902947, 59912947, 59922947, 59932947, 59942947, 59952947, 59962947, 59972947, 59982947, 59992947, 60002947, 60012947, 60022947, 60032947, 60042947, 60052947, 60062947, 60072947, 60082947, 60092947, 60102947, 60112947, 60122947, 60132947, 60142947, 60152947, 60162947, 60172947, 60182947, 60192947, 60202947, 60212947, 60222947, 60232947, 60242947, 60252947, 60262947, 60272947, 60282947, 60292947, 60302947, 60312947, 60322947, 60332947, 60342947, 60352947, 60362947, 60372947, 60382947, 60392947, 60402947, 60412947, 60422947, 60432947, 60442947, 60452947, 60462947, 60472947, 60482947, 60492947, 60502947, 60512947, 60522947, 60532947, 60542947, 60552947, 60562947, 60572947, 60582947, 60592947, 60602947]</msg>
<status status="PASS" starttime="20201112 09:46:09.397" endtime="20201112 09:46:09.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.393" endtime="20201112 09:46:09.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.406" endtime="20201112 09:46:09.697"></status>
</kw>
<msg timestamp="20201112 09:46:09.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032429639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:09.404" endtime="20201112 09:46:09.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032429639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:09.701" endtime="20201112 09:46:09.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.709" endtime="20201112 09:46:09.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.402" endtime="20201112 09:46:09.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.400" endtime="20201112 09:46:09.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:09.736" level="INFO">${RESULT} = {'time': [0.022345847, 0.032429639, 0.04243225, 0.052433375, 0.062434542, 0.072435639, 0.082436806, 0.092437944, 0.102439083, 0.112440222, 0.122441375, 0.132442486, 0.142443667, 0.152444806, 0.1624459...</msg>
<status status="PASS" starttime="20201112 09:46:09.712" endtime="20201112 09:46:09.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.741" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:09.740" endtime="20201112 09:46:09.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.743" level="INFO">VALUE: 0.022345847</msg>
<status status="PASS" starttime="20201112 09:46:09.742" endtime="20201112 09:46:09.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.737" endtime="20201112 09:46:09.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.748" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:09.747" endtime="20201112 09:46:09.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.750" level="INFO">VALUE: [0.032429639, 0.04243225, 0.052433375, 0.062434542, 0.072435639, 0.082436806, 0.092437944, 0.102439083, 0.112440222, 0.122441375, 0.132442486, 0.142443667, 0.152444806, 0.162445944, 0.172447056, 0.182448208, 0.192449333, 0.202450514, 0.212451625, 0.222452778, 0.232453958, 0.242455056, 0.252456194, 0.262457347, 0.272458458, 0.282459625, 0.292460736, 0.302461972, 0.312463056, 0.322464181, 0.332465306, 0.342466486, 0.352467625, 0.36246875, 0.372469875, 0.382471056, 0.392472153, 0.402473306, 0.412474417, 0.422475583, 0.432476694, 0.442477847, 0.452478958, 0.462480125, 0.472481222, 0.482482389, 0.4924835, 0.502484667, 0.512485764, 0.522486931, 0.532488056, 0.542489194, 0.552490306, 0.562491486, 0.572492583, 0.582493736, 0.592494861, 0.602496014, 0.612497111, 0.622498292, 0.632499444, 0.642500542, 0.652501667, 0.662502819, 0.672503944, 0.682505083, 0.692506208, 0.702507361, 0.712508486, 0.722509625, 0.732510736, 0.742511903, 0.752513014, 0.762514181, 0.772515306, 0.782516444, 0.792517556, 0.802518736, 0.812519847, 0.822521, 0.832522167, 0.842523292, 0.852524375, 0.862525528, 0.872526639, 0.882527806, 0.892528917, 0.902530083, 0.912531194, 0.922532347, 0.932533458, 0.942534625, 0.952535764, 0.962536889, 0.972538, 0.982539208, 0.992540333, 1.002541444, 1.012542542, 1.022543708] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:09.749" endtime="20201112 09:46:09.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.744" endtime="20201112 09:46:09.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.753" endtime="20201112 09:46:09.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:09.757" endtime="20201112 09:46:09.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.755" endtime="20201112 09:46:09.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.752" endtime="20201112 09:46:09.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.227" endtime="20201112 09:46:09.778"></status>
</kw>
<msg timestamp="20201112 09:46:09.778" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.786" endtime="20201112 09:46:11.905"></status>
</kw>
<msg timestamp="20201112 09:46:11.906" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62153095, 'wakeups': [62163177, 62173178, 62183178, 62193178, 62203178...</msg>
<status status="PASS" starttime="20201112 09:46:09.784" endtime="20201112 09:46:11.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:11.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62153095, 'wakeups': [62163177, 62173178, 62183178, 62193178, 62203178...</msg>
<status status="PASS" starttime="20201112 09:46:11.908" endtime="20201112 09:46:11.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:11.914" endtime="20201112 09:46:11.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.782" endtime="20201112 09:46:11.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.780" endtime="20201112 09:46:11.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:11.925" level="INFO">${RESULT} = {'start-time': 62153095, 'wakeups': [62163177, 62173178, 62183178, 62193178, 62203178, 62213178, 62223178, 62233178, 62243178, 62253178, 62263178, 62273178, 62283178, 62293178, 62303178, 62313178, 623...</msg>
<status status="PASS" starttime="20201112 09:46:11.921" endtime="20201112 09:46:11.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:11.933" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:11.931" endtime="20201112 09:46:11.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:11.935" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:11.934" endtime="20201112 09:46:11.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:11.926" endtime="20201112 09:46:11.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:11.942" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:11.940" endtime="20201112 09:46:11.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:11.944" level="INFO">VALUE: 62153095</msg>
<status status="PASS" starttime="20201112 09:46:11.943" endtime="20201112 09:46:11.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:11.937" endtime="20201112 09:46:11.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:11.949" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:11.948" endtime="20201112 09:46:11.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:11.951" level="INFO">VALUE: [62163177, 62173178, 62183178, 62193178, 62203178, 62213178, 62223178, 62233178, 62243178, 62253178, 62263178, 62273178, 62283178, 62293178, 62303178, 62313178, 62323178, 62333178, 62343178, 62353178, 62363178, 62373178, 62383178, 62393178, 62403178, 62413178, 62423178, 62433178, 62443178, 62453178, 62463178, 62473178, 62483178, 62493178, 62503178, 62513178, 62523178, 62533178, 62543178, 62553178, 62563178, 62573178, 62583178, 62593178, 62603178, 62613178, 62623178, 62633178, 62643178, 62653178, 62663178, 62673178, 62683178, 62693178, 62703178, 62713178, 62723178, 62733178, 62743178, 62753178, 62763178, 62773178, 62783178, 62793178, 62803178, 62813178, 62823178, 62833178, 62843178, 62853178, 62863178, 62873178, 62883178, 62893178, 62903178, 62913178, 62923178, 62933178, 62943178, 62953178, 62963178, 62973178, 62983178, 62993178, 63003178, 63013178, 63023178, 63033178, 63043178, 63053178, 63063178, 63073178, 63083178, 63093178, 63103178, 63113178, 63123178, 63133178, 63143178, 63153178]</msg>
<status status="PASS" starttime="20201112 09:46:11.950" endtime="20201112 09:46:11.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:11.945" endtime="20201112 09:46:11.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:11.958" endtime="20201112 09:46:12.248"></status>
</kw>
<msg timestamp="20201112 09:46:12.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018423361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028506778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:11.956" endtime="20201112 09:46:12.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018423361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028506778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:12.252" endtime="20201112 09:46:12.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.259" endtime="20201112 09:46:12.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:11.954" endtime="20201112 09:46:12.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:11.952" endtime="20201112 09:46:12.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:12.285" level="INFO">${RESULT} = {'time': [0.018423361, 0.028506778, 0.038509417, 0.048510514, 0.058511681, 0.068512792, 0.078513958, 0.088515069, 0.098516236, 0.108517347, 0.118518514, 0.128519653, 0.138520819, 0.148521917, 0.158523...</msg>
<status status="PASS" starttime="20201112 09:46:12.263" endtime="20201112 09:46:12.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.289" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:12.288" endtime="20201112 09:46:12.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.291" level="INFO">VALUE: 0.018423361</msg>
<status status="PASS" starttime="20201112 09:46:12.291" endtime="20201112 09:46:12.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.286" endtime="20201112 09:46:12.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.298" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:12.296" endtime="20201112 09:46:12.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.300" level="INFO">VALUE: [0.028506778, 0.038509417, 0.048510514, 0.058511681, 0.068512792, 0.078513958, 0.088515069, 0.098516236, 0.108517347, 0.118518514, 0.128519653, 0.138520819, 0.148521917, 0.158523083, 0.168524194, 0.178525361, 0.188526472, 0.198527653, 0.20852875, 0.218529917, 0.228531069, 0.238532208, 0.248533333, 0.2585345, 0.268535611, 0.278536764, 0.288537889, 0.298539056, 0.308540181, 0.318541333, 0.328542444, 0.338543611, 0.348544736, 0.358545903, 0.368547014, 0.378548181, 0.388549319, 0.398550458, 0.408551653, 0.41855275, 0.428553889, 0.438555028, 0.448556153, 0.458557292, 0.468558403, 0.478559569, 0.488560667, 0.498561861, 0.508562931, 0.518564097, 0.528565208, 0.538566361, 0.548567486, 0.558568681, 0.568569764, 0.578570903, 0.588572028, 0.598573181, 0.608574306, 0.618575458, 0.628576569, 0.638577736, 0.648578847, 0.658579986, 0.668581097, 0.678582264, 0.688583375, 0.698584569, 0.708585653, 0.718586819, 0.728587917, 0.738589139, 0.748590194, 0.758591347, 0.768592542, 0.778593625, 0.788594736, 0.798595917, 0.808597014, 0.818598167, 0.828599333, 0.838600444, 0.848601556, 0.858602736, 0.868603847, 0.878605042, 0.888606097, 0.898607278, 0.908608375, 0.918609542, 0.928610639, 0.938611819, 0.948612931, 0.958614097, 0.968615194, 0.978616403, 0.988617472, 0.998618625, 1.00861975, 1.018620917] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:12.299" endtime="20201112 09:46:12.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.293" endtime="20201112 09:46:12.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.303" endtime="20201112 09:46:12.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:12.307" endtime="20201112 09:46:12.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.305" endtime="20201112 09:46:12.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.302" endtime="20201112 09:46:12.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.778" endtime="20201112 09:46:12.327"></status>
</kw>
<msg timestamp="20201112 09:46:12.328" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.336" endtime="20201112 09:46:14.454"></status>
</kw>
<msg timestamp="20201112 09:46:14.456" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64703541, 'wakeups': [64713623, 64723624, 64733624, 64743624, 64753624...</msg>
<status status="PASS" starttime="20201112 09:46:12.334" endtime="20201112 09:46:14.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.462" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64703541, 'wakeups': [64713623, 64723624, 64733624, 64743624, 64753624...</msg>
<status status="PASS" starttime="20201112 09:46:14.458" endtime="20201112 09:46:14.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:14.464" endtime="20201112 09:46:14.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.332" endtime="20201112 09:46:14.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.330" endtime="20201112 09:46:14.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:14.475" level="INFO">${RESULT} = {'start-time': 64703541, 'wakeups': [64713623, 64723624, 64733624, 64743624, 64753624, 64763624, 64773624, 64783624, 64793624, 64803624, 64813624, 64823624, 64833624, 64843624, 64853624, 64863624, 648...</msg>
<status status="PASS" starttime="20201112 09:46:14.471" endtime="20201112 09:46:14.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.483" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:14.481" endtime="20201112 09:46:14.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.487" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:14.486" endtime="20201112 09:46:14.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.477" endtime="20201112 09:46:14.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.492" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:14.491" endtime="20201112 09:46:14.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.494" level="INFO">VALUE: 64703541</msg>
<status status="PASS" starttime="20201112 09:46:14.493" endtime="20201112 09:46:14.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.489" endtime="20201112 09:46:14.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.499" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:14.498" endtime="20201112 09:46:14.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.501" level="INFO">VALUE: [64713623, 64723624, 64733624, 64743624, 64753624, 64763624, 64773624, 64783624, 64793624, 64803624, 64813624, 64823624, 64833624, 64843624, 64853624, 64863624, 64873624, 64883624, 64893624, 64903624, 64913624, 64923624, 64933624, 64943624, 64953624, 64963624, 64973624, 64983624, 64993624, 65003624, 65013624, 65023624, 65033624, 65043624, 65053624, 65063624, 65073624, 65083624, 65093624, 65103624, 65113624, 65123624, 65133624, 65143624, 65153624, 65163624, 65173624, 65183624, 65193624, 65203624, 65213624, 65223624, 65233624, 65243624, 65253624, 65263624, 65273624, 65283624, 65293624, 65303624, 65313624, 65323624, 65333624, 65343624, 65353624, 65363624, 65373624, 65383624, 65393624, 65403624, 65413624, 65423624, 65433624, 65443624, 65453624, 65463624, 65473624, 65483624, 65493624, 65503624, 65513624, 65523624, 65533624, 65543624, 65553624, 65563624, 65573624, 65583624, 65593624, 65603624, 65613624, 65623624, 65633624, 65643624, 65653624, 65663624, 65673624, 65683624, 65693624, 65703624]</msg>
<status status="PASS" starttime="20201112 09:46:14.500" endtime="20201112 09:46:14.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.496" endtime="20201112 09:46:14.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:14.514" endtime="20201112 09:46:14.806"></status>
</kw>
<msg timestamp="20201112 09:46:14.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018896514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028980125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:14.512" endtime="20201112 09:46:14.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018896514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028980125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:14.810" endtime="20201112 09:46:14.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:14.817" endtime="20201112 09:46:14.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.509" endtime="20201112 09:46:14.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.503" endtime="20201112 09:46:14.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:14.843" level="INFO">${RESULT} = {'time': [0.018896514, 0.028980125, 0.03898275, 0.048983847, 0.058985014, 0.068986139, 0.078987306, 0.088988431, 0.098989597, 0.108990708, 0.118991861, 0.128992972, 0.138994222, 0.148995264, 0.1589964...</msg>
<status status="PASS" starttime="20201112 09:46:14.820" endtime="20201112 09:46:14.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.848" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:14.847" endtime="20201112 09:46:14.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.850" level="INFO">VALUE: 0.018896514</msg>
<status status="PASS" starttime="20201112 09:46:14.849" endtime="20201112 09:46:14.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.844" endtime="20201112 09:46:14.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.855" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:14.854" endtime="20201112 09:46:14.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.857" level="INFO">VALUE: [0.028980125, 0.03898275, 0.048983847, 0.058985014, 0.068986139, 0.078987306, 0.088988431, 0.098989597, 0.108990708, 0.118991861, 0.128992972, 0.138994222, 0.148995264, 0.158996431, 0.168997542, 0.178998694, 0.188999819, 0.199001, 0.209002125, 0.219003264, 0.229004431, 0.239005556, 0.249006667, 0.259007833, 0.269009, 0.279010111, 0.289011236, 0.299012403, 0.309013528, 0.319014694, 0.329015806, 0.339016972, 0.349018069, 0.35901925, 0.369020361, 0.379021528, 0.389022639, 0.399023819, 0.409024917, 0.419026097, 0.429027208, 0.439028389, 0.449029514, 0.459030653, 0.469031764, 0.479032931, 0.489034056, 0.499035222, 0.509036361, 0.519037514, 0.529038653, 0.539039792, 0.549040903, 0.559042069, 0.569043181, 0.579044347, 0.5890455, 0.599046653, 0.60904775, 0.619048917, 0.629050042, 0.639051194, 0.649052319, 0.659053486, 0.669054597, 0.679055764, 0.689056889, 0.699058125, 0.709059167, 0.719060361, 0.729061444, 0.739062625, 0.749063736, 0.759064903, 0.769066014, 0.779067181, 0.789068319, 0.799069472, 0.809070583, 0.819071764, 0.829072861, 0.839074014, 0.849075139, 0.859076292, 0.869077389, 0.879078569, 0.889079681, 0.899080833, 0.909081931, 0.919083097, 0.929084208, 0.939085375, 0.949086486, 0.959087639, 0.969088819, 0.979089917, 0.989091014, 0.999092194, 1.009093333, 1.019094444] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:14.856" endtime="20201112 09:46:14.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.851" endtime="20201112 09:46:14.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:14.860" endtime="20201112 09:46:14.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:14.864" endtime="20201112 09:46:14.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.862" endtime="20201112 09:46:14.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.859" endtime="20201112 09:46:14.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.328" endtime="20201112 09:46:14.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.225" endtime="20201112 09:46:14.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.224" endtime="20201112 09:46:14.885"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:14.887" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:14.897" endtime="20201112 09:46:17.015"></status>
</kw>
<msg timestamp="20201112 09:46:17.017" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67263921, 'wakeups': [67274022, 67284021, 67294021, 67304021, 67314021...</msg>
<status status="PASS" starttime="20201112 09:46:14.894" endtime="20201112 09:46:17.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.022" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67263921, 'wakeups': [67274022, 67284021, 67294021, 67304021, 67314021...</msg>
<status status="PASS" starttime="20201112 09:46:17.019" endtime="20201112 09:46:17.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.025" endtime="20201112 09:46:17.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.891" endtime="20201112 09:46:17.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.889" endtime="20201112 09:46:17.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:17.036" level="INFO">${RESULT} = {'start-time': 67263921, 'wakeups': [67274022, 67284021, 67294021, 67304021, 67314021, 67324021, 67334021, 67344021, 67354021, 67364021, 67374021, 67384021, 67394021, 67404021, 67414021, 67424021, 674...</msg>
<status status="PASS" starttime="20201112 09:46:17.032" endtime="20201112 09:46:17.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.043" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:17.042" endtime="20201112 09:46:17.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.045" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:17.044" endtime="20201112 09:46:17.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.037" endtime="20201112 09:46:17.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.050" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:17.049" endtime="20201112 09:46:17.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.052" level="INFO">VALUE: 67263921</msg>
<status status="PASS" starttime="20201112 09:46:17.051" endtime="20201112 09:46:17.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.046" endtime="20201112 09:46:17.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.057" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:17.056" endtime="20201112 09:46:17.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.059" level="INFO">VALUE: [67274022, 67284021, 67294021, 67304021, 67314021, 67324021, 67334021, 67344021, 67354021, 67364021, 67374021, 67384021, 67394021, 67404021, 67414021, 67424021, 67434021, 67444021, 67454021, 67464021, 67474021, 67484021, 67494021, 67504021, 67514021, 67524021, 67534021, 67544021, 67554021, 67564021, 67574021, 67584021, 67594021, 67604021, 67614021, 67624021, 67634021, 67644021, 67654021, 67664021, 67674021, 67684021, 67694021, 67704021, 67714021, 67724021, 67734021, 67744021, 67754021, 67764021, 67774021, 67784021, 67794021, 67804021, 67814021, 67824021, 67834021, 67844021, 67854021, 67864021, 67874021, 67884021, 67894021, 67904021, 67914021, 67924021, 67934021, 67944021, 67954021, 67964021, 67974021, 67984021, 67994021, 68004021, 68014021, 68024021, 68034021, 68044021, 68054021, 68064021, 68074021, 68084021, 68094021, 68104021, 68114021, 68124021, 68134021, 68144021, 68154021, 68164021, 68174021, 68184021, 68194021, 68204021, 68214021, 68224021, 68234021, 68244021, 68254021, 68264021]</msg>
<status status="PASS" starttime="20201112 09:46:17.058" endtime="20201112 09:46:17.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.053" endtime="20201112 09:46:17.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.066" endtime="20201112 09:46:17.358"></status>
</kw>
<msg timestamp="20201112 09:46:17.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032449222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:17.064" endtime="20201112 09:46:17.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032449222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:17.362" endtime="20201112 09:46:17.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.369" endtime="20201112 09:46:17.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.062" endtime="20201112 09:46:17.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.060" endtime="20201112 09:46:17.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:17.396" level="INFO">${RESULT} = {'time': [0.022346542, 0.032449222, 0.042449722, 0.052450833, 0.062451986, 0.072453111, 0.082454264, 0.092455389, 0.102456569, 0.112457667, 0.122458875, 0.132459944, 0.142461111, 0.152462222, 0.162463...</msg>
<status status="PASS" starttime="20201112 09:46:17.373" endtime="20201112 09:46:17.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.400" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:17.399" endtime="20201112 09:46:17.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.402" level="INFO">VALUE: 0.022346542</msg>
<status status="PASS" starttime="20201112 09:46:17.401" endtime="20201112 09:46:17.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.397" endtime="20201112 09:46:17.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.408" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:17.407" endtime="20201112 09:46:17.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.410" level="INFO">VALUE: [0.032449222, 0.042449722, 0.052450833, 0.062451986, 0.072453111, 0.082454264, 0.092455389, 0.102456569, 0.112457667, 0.122458875, 0.132459944, 0.142461111, 0.152462222, 0.162463389, 0.172464528, 0.182465694, 0.192466806, 0.202467972, 0.212469069, 0.222470236, 0.232471361, 0.242472514, 0.252473639, 0.262474806, 0.272475931, 0.282477083, 0.292478208, 0.302479389, 0.3124805, 0.322481653, 0.332482764, 0.342483931, 0.352485056, 0.36248625, 0.372487333, 0.3824885, 0.392489625, 0.402490792, 0.412491917, 0.422493069, 0.432494167, 0.442495347, 0.452496458, 0.462497597, 0.472498708, 0.482499889, 0.492501, 0.502502139, 0.51250325, 0.522504431, 0.532505542, 0.542506694, 0.552507792, 0.562509, 0.572510083, 0.582511236, 0.592512333, 0.6025135, 0.612514625, 0.622515833, 0.632516889, 0.642518056, 0.652519153, 0.662520306, 0.672521417, 0.682522583, 0.692523694, 0.702524861, 0.712525972, 0.722527139, 0.732528278, 0.742529417, 0.752530514, 0.762531667, 0.772532778, 0.782533958, 0.792535069, 0.802536222, 0.812537333, 0.8225385, 0.832539597, 0.842540778, 0.852541875, 0.862543083, 0.872544153, 0.882545306, 0.892546417, 0.902547597, 0.912548736, 0.922549861, 0.932551014, 0.942552125, 0.952553236, 0.962554403, 0.972555514, 0.982556681, 0.992557819, 1.002558944, 1.012560056, 1.022561222] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:17.409" endtime="20201112 09:46:17.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.404" endtime="20201112 09:46:17.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.413" endtime="20201112 09:46:17.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:17.416" endtime="20201112 09:46:17.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.415" endtime="20201112 09:46:17.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.411" endtime="20201112 09:46:17.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.888" endtime="20201112 09:46:17.437"></status>
</kw>
<msg timestamp="20201112 09:46:17.437" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.445" endtime="20201112 09:46:19.563"></status>
</kw>
<msg timestamp="20201112 09:46:19.565" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69812249, 'wakeups': [69822350, 69832349, 69842349, 69852349, 69862349...</msg>
<status status="PASS" starttime="20201112 09:46:17.444" endtime="20201112 09:46:19.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69812249, 'wakeups': [69822350, 69832349, 69842349, 69852349, 69862349...</msg>
<status status="PASS" starttime="20201112 09:46:19.567" endtime="20201112 09:46:19.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:19.573" endtime="20201112 09:46:19.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.441" endtime="20201112 09:46:19.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.439" endtime="20201112 09:46:19.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:19.584" level="INFO">${RESULT} = {'start-time': 69812249, 'wakeups': [69822350, 69832349, 69842349, 69852349, 69862349, 69872349, 69882349, 69892349, 69902349, 69912349, 69922349, 69932349, 69942349, 69952349, 69962349, 69972349, 699...</msg>
<status status="PASS" starttime="20201112 09:46:19.580" endtime="20201112 09:46:19.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.597" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:19.595" endtime="20201112 09:46:19.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.599" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:19.598" endtime="20201112 09:46:19.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.590" endtime="20201112 09:46:19.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.605" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:19.604" endtime="20201112 09:46:19.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.608" level="INFO">VALUE: 69812249</msg>
<status status="PASS" starttime="20201112 09:46:19.607" endtime="20201112 09:46:19.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.601" endtime="20201112 09:46:19.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.613" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:19.612" endtime="20201112 09:46:19.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.615" level="INFO">VALUE: [69822350, 69832349, 69842349, 69852349, 69862349, 69872349, 69882349, 69892349, 69902349, 69912349, 69922349, 69932349, 69942349, 69952349, 69962349, 69972349, 69982349, 69992349, 70002349, 70012349, 70022349, 70032349, 70042349, 70052349, 70062349, 70072349, 70082349, 70092349, 70102349, 70112349, 70122349, 70132349, 70142349, 70152349, 70162349, 70172349, 70182349, 70192349, 70202349, 70212349, 70222349, 70232349, 70242349, 70252349, 70262349, 70272349, 70282349, 70292349, 70302349, 70312349, 70322349, 70332349, 70342349, 70352349, 70362349, 70372349, 70382349, 70392349, 70402349, 70412349, 70422349, 70432349, 70442349, 70452349, 70462349, 70472349, 70482349, 70492349, 70502349, 70512349, 70522349, 70532349, 70542349, 70552349, 70562349, 70572349, 70582349, 70592349, 70602349, 70612349, 70622349, 70632349, 70642349, 70652349, 70662349, 70672349, 70682349, 70692349, 70702349, 70712349, 70722349, 70732349, 70742349, 70752349, 70762349, 70772349, 70782349, 70792349, 70802349, 70812349]</msg>
<status status="PASS" starttime="20201112 09:46:19.614" endtime="20201112 09:46:19.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.610" endtime="20201112 09:46:19.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:19.622" endtime="20201112 09:46:19.913"></status>
</kw>
<msg timestamp="20201112 09:46:19.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018229917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028332056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:19.621" endtime="20201112 09:46:19.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018229917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028332056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:19.917" endtime="20201112 09:46:19.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:19.924" endtime="20201112 09:46:19.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.618" endtime="20201112 09:46:19.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.617" endtime="20201112 09:46:19.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:19.950" level="INFO">${RESULT} = {'time': [0.018229917, 0.028332056, 0.038332542, 0.048333653, 0.058334819, 0.068335972, 0.078337097, 0.08833825, 0.098339403, 0.1083405, 0.118341667, 0.128342792, 0.138343986, 0.148345056, 0.158346222...</msg>
<status status="PASS" starttime="20201112 09:46:19.927" endtime="20201112 09:46:19.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.955" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:19.954" endtime="20201112 09:46:19.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.957" level="INFO">VALUE: 0.018229917</msg>
<status status="PASS" starttime="20201112 09:46:19.956" endtime="20201112 09:46:19.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.951" endtime="20201112 09:46:19.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.962" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:19.961" endtime="20201112 09:46:19.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:19.965" level="INFO">VALUE: [0.028332056, 0.038332542, 0.048333653, 0.058334819, 0.068335972, 0.078337097, 0.08833825, 0.098339403, 0.1083405, 0.118341667, 0.128342792, 0.138343986, 0.148345056, 0.158346222, 0.168347361, 0.178348514, 0.188349625, 0.198350806, 0.208351931, 0.218353069, 0.228354181, 0.238355361, 0.248356472, 0.258357639, 0.268358819, 0.278359917, 0.288361028, 0.29836225, 0.308363319, 0.318364486, 0.328365597, 0.338366764, 0.348367903, 0.358369042, 0.368370167, 0.378371347, 0.388372444, 0.398373625, 0.408374722, 0.418375889, 0.428377028, 0.438378181, 0.448379292, 0.458380458, 0.468381583, 0.478382764, 0.488383861, 0.498385028, 0.508386153, 0.518387306, 0.528388431, 0.538389639, 0.548390722, 0.558391875, 0.568393, 0.578394153, 0.588395319, 0.598396444, 0.608397556, 0.618398736, 0.628399847, 0.638401014, 0.648402125, 0.658403292, 0.668404403, 0.678405569, 0.688406708, 0.698407861, 0.708409028, 0.718410139, 0.728411264, 0.738412403, 0.748413514, 0.758414667, 0.768415792, 0.778416958, 0.788418056, 0.798419208, 0.808420319, 0.818421486, 0.828422611, 0.838423764, 0.848424861, 0.858426028, 0.868427139, 0.878428292, 0.888429403, 0.898430569, 0.908431681, 0.918432847, 0.928433944, 0.938435125, 0.948436236, 0.958437375, 0.968438514, 0.978439722, 0.988440764, 0.998441944, 1.008443042, 1.018444194] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:19.964" endtime="20201112 09:46:19.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.958" endtime="20201112 09:46:19.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:19.969" endtime="20201112 09:46:19.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:19.972" endtime="20201112 09:46:19.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.970" endtime="20201112 09:46:19.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.967" endtime="20201112 09:46:19.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.438" endtime="20201112 09:46:19.993"></status>
</kw>
<msg timestamp="20201112 09:46:19.993" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:20.001" endtime="20201112 09:46:22.129"></status>
</kw>
<msg timestamp="20201112 09:46:22.130" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72368112, 'wakeups': [72378213, 72388212, 72398212, 72408212, 72418212...</msg>
<status status="PASS" starttime="20201112 09:46:19.999" endtime="20201112 09:46:22.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.136" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72368112, 'wakeups': [72378213, 72388212, 72398212, 72408212, 72418212...</msg>
<status status="PASS" starttime="20201112 09:46:22.133" endtime="20201112 09:46:22.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:22.139" endtime="20201112 09:46:22.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.997" endtime="20201112 09:46:22.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.995" endtime="20201112 09:46:22.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:22.151" level="INFO">${RESULT} = {'start-time': 72368112, 'wakeups': [72378213, 72388212, 72398212, 72408212, 72418212, 72428212, 72438212, 72448212, 72458212, 72468212, 72478212, 72488212, 72498212, 72508212, 72518212, 72528212, 725...</msg>
<status status="PASS" starttime="20201112 09:46:22.146" endtime="20201112 09:46:22.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.155" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:22.154" endtime="20201112 09:46:22.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.157" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:22.156" endtime="20201112 09:46:22.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.152" endtime="20201112 09:46:22.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.163" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:22.161" endtime="20201112 09:46:22.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.165" level="INFO">VALUE: 72368112</msg>
<status status="PASS" starttime="20201112 09:46:22.164" endtime="20201112 09:46:22.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.159" endtime="20201112 09:46:22.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.170" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:22.169" endtime="20201112 09:46:22.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.173" level="INFO">VALUE: [72378213, 72388212, 72398212, 72408212, 72418212, 72428212, 72438212, 72448212, 72458212, 72468212, 72478212, 72488212, 72498212, 72508212, 72518212, 72528212, 72538212, 72548212, 72558212, 72568212, 72578212, 72588212, 72598212, 72608212, 72618212, 72628212, 72638212, 72648212, 72658212, 72668212, 72678212, 72688212, 72698212, 72708212, 72718212, 72728212, 72738212, 72748212, 72758212, 72768212, 72778212, 72788212, 72798212, 72808212, 72818212, 72828212, 72838212, 72848212, 72858212, 72868212, 72878212, 72888212, 72898212, 72908212, 72918212, 72928212, 72938212, 72948212, 72958212, 72968212, 72978212, 72988212, 72998212, 73008212, 73018212, 73028212, 73038212, 73048212, 73058212, 73068212, 73078212, 73088212, 73098212, 73108212, 73118212, 73128212, 73138212, 73148212, 73158212, 73168212, 73178212, 73188212, 73198212, 73208212, 73218212, 73228212, 73238212, 73248212, 73258212, 73268212, 73278212, 73288212, 73298212, 73308212, 73318212, 73328212, 73338212, 73348212, 73358212, 73368212]</msg>
<status status="PASS" starttime="20201112 09:46:22.171" endtime="20201112 09:46:22.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.166" endtime="20201112 09:46:22.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:22.180" endtime="20201112 09:46:22.472"></status>
</kw>
<msg timestamp="20201112 09:46:22.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018322125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028424431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:22.179" endtime="20201112 09:46:22.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018322125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028424431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:22.476" endtime="20201112 09:46:22.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:22.483" endtime="20201112 09:46:22.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.176" endtime="20201112 09:46:22.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.174" endtime="20201112 09:46:22.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:22.509" level="INFO">${RESULT} = {'time': [0.018322125, 0.028424431, 0.038424903, 0.048426014, 0.058427208, 0.068428292, 0.078429458, 0.088430569, 0.098431764, 0.108432875, 0.118434056, 0.128435139, 0.138436306, 0.148437417, 0.158438...</msg>
<status status="PASS" starttime="20201112 09:46:22.486" endtime="20201112 09:46:22.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.513" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:22.512" endtime="20201112 09:46:22.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.515" level="INFO">VALUE: 0.018322125</msg>
<status status="PASS" starttime="20201112 09:46:22.514" endtime="20201112 09:46:22.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.510" endtime="20201112 09:46:22.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.521" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:22.520" endtime="20201112 09:46:22.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:22.523" level="INFO">VALUE: [0.028424431, 0.038424903, 0.048426014, 0.058427208, 0.068428292, 0.078429458, 0.088430569, 0.098431764, 0.108432875, 0.118434056, 0.128435139, 0.138436306, 0.148437417, 0.158438597, 0.168439708, 0.178440875, 0.188441986, 0.198443139, 0.208444264, 0.2184455, 0.228446597, 0.238447708, 0.248448819, 0.258449986, 0.268451111, 0.278452264, 0.288453389, 0.298454569, 0.308455667, 0.318456847, 0.328457972, 0.338459111, 0.34846025, 0.358461417, 0.368462514, 0.378463681, 0.388464819, 0.398465972, 0.408467097, 0.418468264, 0.428469361, 0.438470556, 0.448471681, 0.458472861, 0.468473972, 0.478475097, 0.488476222, 0.498477375, 0.5084785, 0.518479667, 0.528480778, 0.538481958, 0.548483056, 0.558484236, 0.568485333, 0.578486514, 0.588487597, 0.59848875, 0.608489861, 0.618491014, 0.628492125, 0.638493306, 0.648494417, 0.658495556, 0.668496736, 0.678497833, 0.688498944, 0.698500097, 0.708501222, 0.718502375, 0.7285035, 0.738504639, 0.748505764, 0.758506917, 0.768508056, 0.778509194, 0.788510306, 0.798511458, 0.808512583, 0.818513736, 0.828514847, 0.838516, 0.848517111, 0.858518278, 0.868519389, 0.878520556, 0.888521653, 0.898522819, 0.908523931, 0.918525111, 0.928526208, 0.938527361, 0.948528486, 0.958529653, 0.96853075, 0.978531917, 0.988533042, 0.998534181, 1.008535319, 1.018536472] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:22.522" endtime="20201112 09:46:22.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.517" endtime="20201112 09:46:22.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:22.526" endtime="20201112 09:46:22.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:22.529" endtime="20201112 09:46:22.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.528" endtime="20201112 09:46:22.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.524" endtime="20201112 09:46:22.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:19.994" endtime="20201112 09:46:22.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.886" endtime="20201112 09:46:22.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.885" endtime="20201112 09:46:22.551"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:22.553" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:22.562" endtime="20201112 09:46:24.681"></status>
</kw>
<msg timestamp="20201112 09:46:24.682" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74929497, 'wakeups': [74939613, 74949612, 74959612, 74969612, 749796...</msg>
<status status="PASS" starttime="20201112 09:46:22.561" endtime="20201112 09:46:24.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.688" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74929497, 'wakeups': [74939613, 74949612, 74959612, 74969612, 749796...</msg>
<status status="PASS" starttime="20201112 09:46:24.684" endtime="20201112 09:46:24.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:24.690" endtime="20201112 09:46:24.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.557" endtime="20201112 09:46:24.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.555" endtime="20201112 09:46:24.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:24.701" level="INFO">${RESULT} = {'start-time': 74929497, 'wakeups': [74939613, 74949612, 74959612, 74969612, 74979612, 74989612, 74999612, 75009612, 75019612, 75029612, 75039612, 75049612, 75059612, 75069612, 75079612, 75089612, 750...</msg>
<status status="PASS" starttime="20201112 09:46:24.697" endtime="20201112 09:46:24.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.708" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:24.707" endtime="20201112 09:46:24.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.710" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:24.709" endtime="20201112 09:46:24.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:24.703" endtime="20201112 09:46:24.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.715" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:24.714" endtime="20201112 09:46:24.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.717" level="INFO">VALUE: 74929497</msg>
<status status="PASS" starttime="20201112 09:46:24.716" endtime="20201112 09:46:24.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:24.712" endtime="20201112 09:46:24.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.723" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:24.722" endtime="20201112 09:46:24.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.725" level="INFO">VALUE: [74939613, 74949612, 74959612, 74969612, 74979612, 74989612, 74999612, 75009612, 75019612, 75029612, 75039612, 75049612, 75059612, 75069612, 75079612, 75089612, 75099612, 75109612, 75119612, 75129612, 75139612, 75149612, 75159612, 75169612, 75179612, 75189612, 75199612, 75209612, 75219612, 75229612, 75239612, 75249612, 75259612, 75269612, 75279612, 75289612, 75299612, 75309612, 75319612, 75329612, 75339612, 75349612, 75359612, 75369612, 75379612, 75389612, 75399612, 75409612, 75419612, 75429612, 75439612, 75449612, 75459612, 75469612, 75479612, 75489612, 75499612, 75509612, 75519612, 75529612, 75539612, 75549612, 75559612, 75569612, 75579612, 75589612, 75599612, 75609612, 75619612, 75629612, 75639612, 75649612, 75659612, 75669612, 75679612, 75689612, 75699612, 75709612, 75719612, 75729612, 75739612, 75749612, 75759612, 75769612, 75779612, 75789612, 75799612, 75809612, 75819612, 75829612, 75839612, 75849612, 75859612, 75869612, 75879612, 75889612, 75899612, 75909612, 75919612, 75929612]</msg>
<status status="PASS" starttime="20201112 09:46:24.724" endtime="20201112 09:46:24.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:24.719" endtime="20201112 09:46:24.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:24.738" endtime="20201112 09:46:25.029"></status>
</kw>
<msg timestamp="20201112 09:46:25.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032619569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:24.732" endtime="20201112 09:46:25.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032619569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:25.033" endtime="20201112 09:46:25.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:25.041" endtime="20201112 09:46:25.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:24.729" endtime="20201112 09:46:25.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:24.727" endtime="20201112 09:46:25.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:25.068" level="INFO">${RESULT} = {'time': [0.022502611, 0.032619569, 0.042619708, 0.052620833, 0.062621986, 0.072623111, 0.082624319, 0.092625375, 0.102626569, 0.112627667, 0.122628847, 0.132629958, 0.142631111, 0.152632292, 0.162633...</msg>
<status status="PASS" starttime="20201112 09:46:25.044" endtime="20201112 09:46:25.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.072" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:25.071" endtime="20201112 09:46:25.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.074" level="INFO">VALUE: 0.022502611</msg>
<status status="PASS" starttime="20201112 09:46:25.074" endtime="20201112 09:46:25.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.069" endtime="20201112 09:46:25.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.080" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:25.079" endtime="20201112 09:46:25.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.082" level="INFO">VALUE: [0.032619569, 0.042619708, 0.052620833, 0.062621986, 0.072623111, 0.082624319, 0.092625375, 0.102626569, 0.112627667, 0.122628847, 0.132629958, 0.142631111, 0.152632292, 0.162633403, 0.1726345, 0.182635667, 0.192636792, 0.202637944, 0.212639069, 0.222640236, 0.232641347, 0.242642528, 0.252643625, 0.262644792, 0.272645917, 0.282647083, 0.292648208, 0.302649431, 0.312650472, 0.322651653, 0.332652764, 0.342653917, 0.352655042, 0.362656208, 0.372657319, 0.382658569, 0.392659681, 0.402660792, 0.412661958, 0.422663056, 0.432664167, 0.442665333, 0.452666472, 0.462667639, 0.472668736, 0.482669903, 0.492671028, 0.502672194, 0.512673306, 0.522674472, 0.532675583, 0.54267675, 0.552677875, 0.562679028, 0.572680153, 0.582681306, 0.592682417, 0.602683583, 0.612684694, 0.622685861, 0.632686958, 0.642688125, 0.652689236, 0.662690403, 0.6726915, 0.682692667, 0.692693764, 0.702694972, 0.712696042, 0.722697208, 0.732698319, 0.742699486, 0.752700597, 0.762701736, 0.772702847, 0.782704014, 0.792705125, 0.802706306, 0.812707389, 0.822708556, 0.832709708, 0.842710819, 0.852711931, 0.862713111, 0.872714236, 0.882715389, 0.892716556, 0.902717653, 0.91271875, 0.922719931, 0.932721042, 0.942722181, 0.952723375, 0.962724472, 0.972725569, 0.982726736, 0.992727861, 1.002729056, 1.012730111, 1.022731292] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:25.081" endtime="20201112 09:46:25.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.076" endtime="20201112 09:46:25.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:25.085" endtime="20201112 09:46:25.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:25.088" endtime="20201112 09:46:25.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.087" endtime="20201112 09:46:25.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.083" endtime="20201112 09:46:25.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.554" endtime="20201112 09:46:25.109"></status>
</kw>
<msg timestamp="20201112 09:46:25.109" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:25.117" endtime="20201112 09:46:27.235"></status>
</kw>
<msg timestamp="20201112 09:46:27.237" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77484494, 'wakeups': [77494610, 77504609, 77514609, 77524609, 775346...</msg>
<status status="PASS" starttime="20201112 09:46:25.116" endtime="20201112 09:46:27.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77484494, 'wakeups': [77494610, 77504609, 77514609, 77524609, 775346...</msg>
<status status="PASS" starttime="20201112 09:46:27.239" endtime="20201112 09:46:27.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:27.246" endtime="20201112 09:46:27.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.113" endtime="20201112 09:46:27.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.111" endtime="20201112 09:46:27.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:27.256" level="INFO">${RESULT} = {'start-time': 77484494, 'wakeups': [77494610, 77504609, 77514609, 77524609, 77534609, 77544609, 77554609, 77564609, 77574609, 77584609, 77594609, 77604609, 77614609, 77624609, 77634609, 77644609, 776...</msg>
<status status="PASS" starttime="20201112 09:46:27.252" endtime="20201112 09:46:27.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.263" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:27.262" endtime="20201112 09:46:27.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.265" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:27.264" endtime="20201112 09:46:27.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.258" endtime="20201112 09:46:27.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.271" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:27.270" endtime="20201112 09:46:27.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.273" level="INFO">VALUE: 77484494</msg>
<status status="PASS" starttime="20201112 09:46:27.273" endtime="20201112 09:46:27.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.267" endtime="20201112 09:46:27.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.278" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:27.277" endtime="20201112 09:46:27.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.281" level="INFO">VALUE: [77494610, 77504609, 77514609, 77524609, 77534609, 77544609, 77554609, 77564609, 77574609, 77584609, 77594609, 77604609, 77614609, 77624609, 77634609, 77644609, 77654609, 77664609, 77674609, 77684609, 77694609, 77704609, 77714609, 77724609, 77734609, 77744609, 77754609, 77764609, 77774609, 77784609, 77794609, 77804609, 77814609, 77824609, 77834609, 77844609, 77854609, 77864609, 77874609, 77884609, 77894609, 77904609, 77914609, 77924609, 77934609, 77944609, 77954609, 77964609, 77974609, 77984609, 77994609, 78004609, 78014609, 78024609, 78034609, 78044609, 78054609, 78064609, 78074609, 78084609, 78094609, 78104609, 78114609, 78124609, 78134609, 78144609, 78154609, 78164609, 78174609, 78184609, 78194609, 78204609, 78214609, 78224609, 78234609, 78244609, 78254609, 78264609, 78274609, 78284609, 78294609, 78304609, 78314609, 78324609, 78334609, 78344609, 78354609, 78364609, 78374609, 78384609, 78394609, 78404609, 78414609, 78424609, 78434609, 78444609, 78454609, 78464609, 78474609, 78484609]</msg>
<status status="PASS" starttime="20201112 09:46:27.279" endtime="20201112 09:46:27.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.275" endtime="20201112 09:46:27.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:27.288" endtime="20201112 09:46:27.577"></status>
</kw>
<msg timestamp="20201112 09:46:27.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018310792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028427583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:27.286" endtime="20201112 09:46:27.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018310792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028427583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:27.581" endtime="20201112 09:46:27.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:27.589" endtime="20201112 09:46:27.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.284" endtime="20201112 09:46:27.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.282" endtime="20201112 09:46:27.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:27.614" level="INFO">${RESULT} = {'time': [0.018310792, 0.028427583, 0.038427694, 0.048428819, 0.058429986, 0.068431083, 0.07843225, 0.088433375, 0.098434542, 0.108435681, 0.118436806, 0.128437944, 0.138439097, 0.148440208, 0.1584413...</msg>
<status status="PASS" starttime="20201112 09:46:27.592" endtime="20201112 09:46:27.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.619" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:27.618" endtime="20201112 09:46:27.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.622" level="INFO">VALUE: 0.018310792</msg>
<status status="PASS" starttime="20201112 09:46:27.621" endtime="20201112 09:46:27.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.616" endtime="20201112 09:46:27.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.628" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:27.626" endtime="20201112 09:46:27.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:27.630" level="INFO">VALUE: [0.028427583, 0.038427694, 0.048428819, 0.058429986, 0.068431083, 0.07843225, 0.088433375, 0.098434542, 0.108435681, 0.118436806, 0.128437944, 0.138439097, 0.148440208, 0.158441375, 0.1684425, 0.178443653, 0.188444778, 0.198445931, 0.208447056, 0.218448208, 0.228449333, 0.238450583, 0.248451625, 0.258452778, 0.268453903, 0.278455056, 0.288456181, 0.298457403, 0.308458458, 0.318459694, 0.32846075, 0.338461917, 0.348463028, 0.358464194, 0.368465319, 0.378466514, 0.388467583, 0.39846875, 0.408469889, 0.418471056, 0.428472167, 0.438473319, 0.448474431, 0.458475597, 0.468476736, 0.478477889, 0.488479028, 0.498480167, 0.508481278, 0.518482444, 0.528483569, 0.538484736, 0.548485847, 0.558487014, 0.568488153, 0.578489292, 0.588490417, 0.598491597, 0.608492708, 0.618493875, 0.628494986, 0.638496153, 0.648497264, 0.658498458, 0.668499556, 0.678500708, 0.688501833, 0.698503, 0.708504125, 0.718505278, 0.728506389, 0.738507569, 0.748508681, 0.758509861, 0.768510958, 0.778512194, 0.788513236, 0.798514417, 0.808515528, 0.818516694, 0.828517819, 0.838518986, 0.848520097, 0.85852125, 0.868522347, 0.878523514, 0.888524625, 0.898525778, 0.908526903, 0.918528069, 0.928529167, 0.938530319, 0.948531444, 0.958532583, 0.968533694, 0.978534861, 0.988535972, 0.998537125, 1.00853825, 1.018539431] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:27.629" endtime="20201112 09:46:27.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.623" endtime="20201112 09:46:27.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:27.633" endtime="20201112 09:46:27.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:27.636" endtime="20201112 09:46:27.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.635" endtime="20201112 09:46:27.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.631" endtime="20201112 09:46:27.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.110" endtime="20201112 09:46:27.657"></status>
</kw>
<msg timestamp="20201112 09:46:27.657" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:27.666" endtime="20201112 09:46:29.784"></status>
</kw>
<msg timestamp="20201112 09:46:29.786" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80032583, 'wakeups': [80042699, 80052698, 80062698, 80072698, 800826...</msg>
<status status="PASS" starttime="20201112 09:46:27.664" endtime="20201112 09:46:29.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.791" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80032583, 'wakeups': [80042699, 80052698, 80062698, 80072698, 800826...</msg>
<status status="PASS" starttime="20201112 09:46:29.788" endtime="20201112 09:46:29.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:29.794" endtime="20201112 09:46:29.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.661" endtime="20201112 09:46:29.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.659" endtime="20201112 09:46:29.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:29.804" level="INFO">${RESULT} = {'start-time': 80032583, 'wakeups': [80042699, 80052698, 80062698, 80072698, 80082698, 80092698, 80102698, 80112698, 80122698, 80132698, 80142698, 80152698, 80162698, 80172698, 80182698, 80192698, 802...</msg>
<status status="PASS" starttime="20201112 09:46:29.801" endtime="20201112 09:46:29.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.813" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:29.811" endtime="20201112 09:46:29.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.817" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:29.815" endtime="20201112 09:46:29.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.806" endtime="20201112 09:46:29.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.827" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:29.826" endtime="20201112 09:46:29.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.829" level="INFO">VALUE: 80032583</msg>
<status status="PASS" starttime="20201112 09:46:29.828" endtime="20201112 09:46:29.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.824" endtime="20201112 09:46:29.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.834" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:29.833" endtime="20201112 09:46:29.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.836" level="INFO">VALUE: [80042699, 80052698, 80062698, 80072698, 80082698, 80092698, 80102698, 80112698, 80122698, 80132698, 80142698, 80152698, 80162698, 80172698, 80182698, 80192698, 80202698, 80212698, 80222698, 80232698, 80242698, 80252698, 80262698, 80272698, 80282698, 80292698, 80302698, 80312698, 80322698, 80332698, 80342698, 80352698, 80362698, 80372698, 80382698, 80392698, 80402698, 80412698, 80422698, 80432698, 80442698, 80452698, 80462698, 80472698, 80482698, 80492698, 80502698, 80512698, 80522698, 80532698, 80542698, 80552698, 80562698, 80572698, 80582698, 80592698, 80602698, 80612698, 80622698, 80632698, 80642698, 80652698, 80662698, 80672698, 80682698, 80692698, 80702698, 80712698, 80722698, 80732698, 80742698, 80752698, 80762698, 80772698, 80782698, 80792698, 80802698, 80812698, 80822698, 80832698, 80842698, 80852698, 80862698, 80872698, 80882698, 80892698, 80902698, 80912698, 80922698, 80932698, 80942698, 80952698, 80962698, 80972698, 80982698, 80992698, 81002698, 81012698, 81022698, 81032698]</msg>
<status status="PASS" starttime="20201112 09:46:29.835" endtime="20201112 09:46:29.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.831" endtime="20201112 09:46:29.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:29.844" endtime="20201112 09:46:30.136"></status>
</kw>
<msg timestamp="20201112 09:46:30.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018501722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028618944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:29.842" endtime="20201112 09:46:30.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018501722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028618944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:30.140" endtime="20201112 09:46:30.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:30.147" endtime="20201112 09:46:30.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.839" endtime="20201112 09:46:30.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.838" endtime="20201112 09:46:30.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:30.173" level="INFO">${RESULT} = {'time': [0.018501722, 0.028618944, 0.038619083, 0.048620222, 0.058621375, 0.0686225, 0.078623667, 0.088624764, 0.098625958, 0.108627042, 0.118628208, 0.128629333, 0.1386305, 0.148631611, 0.158632764,...</msg>
<status status="PASS" starttime="20201112 09:46:30.150" endtime="20201112 09:46:30.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.177" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:30.176" endtime="20201112 09:46:30.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.179" level="INFO">VALUE: 0.018501722</msg>
<status status="PASS" starttime="20201112 09:46:30.178" endtime="20201112 09:46:30.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.174" endtime="20201112 09:46:30.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.184" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:30.183" endtime="20201112 09:46:30.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.187" level="INFO">VALUE: [0.028618944, 0.038619083, 0.048620222, 0.058621375, 0.0686225, 0.078623667, 0.088624764, 0.098625958, 0.108627042, 0.118628208, 0.128629333, 0.1386305, 0.148631611, 0.158632764, 0.168633889, 0.178635056, 0.188636167, 0.198637333, 0.208638444, 0.218639611, 0.228640736, 0.238641889, 0.248643014, 0.258644181, 0.268645292, 0.278646458, 0.288647569, 0.298648792, 0.308649875, 0.318651042, 0.328652139, 0.338653306, 0.348654431, 0.358655583, 0.368656694, 0.378657889, 0.388658958, 0.398660125, 0.408661236, 0.418662403, 0.428663528, 0.438664667, 0.448665792, 0.458666944, 0.468668056, 0.478669222, 0.488670333, 0.4986715, 0.508672597, 0.518673764, 0.528674875, 0.538676042, 0.548677153, 0.558678306, 0.568679431, 0.578680611, 0.588681708, 0.598682875, 0.608683972, 0.618685139, 0.62868625, 0.638687403, 0.648688528, 0.658689681, 0.668690792, 0.678691972, 0.688693069, 0.698694236, 0.708695347, 0.718696528, 0.728697639, 0.738698778, 0.748699889, 0.758701069, 0.768702222, 0.778703333, 0.7887045, 0.798705611, 0.808706722, 0.818707889, 0.828709, 0.838710153, 0.848711264, 0.858712444, 0.868713569, 0.878714708, 0.888715819, 0.898716986, 0.908718125, 0.918719264, 0.928720375, 0.938721528, 0.948722639, 0.958723806, 0.968724917, 0.978726111, 0.988727194, 0.998728375, 1.008729486, 1.018730639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:30.186" endtime="20201112 09:46:30.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.181" endtime="20201112 09:46:30.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:30.190" endtime="20201112 09:46:30.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:30.194" endtime="20201112 09:46:30.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.192" endtime="20201112 09:46:30.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.189" endtime="20201112 09:46:30.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:27.658" endtime="20201112 09:46:30.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.552" endtime="20201112 09:46:30.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:22.551" endtime="20201112 09:46:30.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.688" endtime="20201112 09:46:30.215"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 09:45:10.577" endtime="20201112 09:46:30.216" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:45:06.008" endtime="20201112 09:46:30.219"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 09:42:36.648" endtime="20201112 09:46:30.237"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_arduino-due</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
