<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 10:13:54.672" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.230" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:55.238" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:56.340" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:55.228" endtime="20201112 10:13:56.341"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.343" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:56.342" endtime="20201112 10:13:56.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.227" endtime="20201112 10:13:56.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.346" endtime="20201112 10:13:56.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.345" endtime="20201112 10:13:56.530"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.543" endtime="20201112 10:13:56.562"></status>
</kw>
<msg timestamp="20201112 10:13:56.563" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.542" endtime="20201112 10:13:56.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.565" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.564" endtime="20201112 10:13:56.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.569" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:56.566" endtime="20201112 10:13:56.569"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:56.539" endtime="20201112 10:13:56.570"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:56.536" endtime="20201112 10:13:56.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.535" endtime="20201112 10:13:56.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:56.574" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:56.573" endtime="20201112 10:13:56.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.571" endtime="20201112 10:13:56.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.534" endtime="20201112 10:13:56.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.534" endtime="20201112 10:13:56.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.576" endtime="20201112 10:13:56.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.532" endtime="20201112 10:13:56.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.579" endtime="20201112 10:13:56.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.531" endtime="20201112 10:13:56.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.225" endtime="20201112 10:13:56.581"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.588" endtime="20201112 10:13:56.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.587" endtime="20201112 10:13:56.608"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.622" endtime="20201112 10:13:56.641"></status>
</kw>
<msg timestamp="20201112 10:13:56.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.621" endtime="20201112 10:13:56.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.644" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.642" endtime="20201112 10:13:56.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.647" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:56.645" endtime="20201112 10:13:56.647"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:56.618" endtime="20201112 10:13:56.648"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:56.616" endtime="20201112 10:13:56.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.614" endtime="20201112 10:13:56.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:56.652" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:56.651" endtime="20201112 10:13:56.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.649" endtime="20201112 10:13:56.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.613" endtime="20201112 10:13:56.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.613" endtime="20201112 10:13:56.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.654" endtime="20201112 10:13:56.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.610" endtime="20201112 10:13:56.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.609" endtime="20201112 10:13:56.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.585" endtime="20201112 10:13:56.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.664" endtime="20201112 10:13:56.675"></status>
</kw>
<msg timestamp="20201112 10:13:56.675" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.662" endtime="20201112 10:13:56.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.678" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.676" endtime="20201112 10:13:56.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.679" endtime="20201112 10:13:56.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.660" endtime="20201112 10:13:56.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.658" endtime="20201112 10:13:56.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.686" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 10:13:56.685" endtime="20201112 10:13:56.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.688" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 10:13:56.687" endtime="20201112 10:13:56.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.682" endtime="20201112 10:13:56.689"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:56.582" endtime="20201112 10:13:56.690" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:54.783" endtime="20201112 10:13:56.695"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.751" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:56.759" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:57.864" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:56.749" endtime="20201112 10:13:57.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.868" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:57.866" endtime="20201112 10:13:57.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.748" endtime="20201112 10:13:57.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.871" endtime="20201112 10:13:58.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.870" endtime="20201112 10:13:58.091"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.103" endtime="20201112 10:13:58.122"></status>
</kw>
<msg timestamp="20201112 10:13:58.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.101" endtime="20201112 10:13:58.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.126" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.124" endtime="20201112 10:13:58.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.129" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:58.127" endtime="20201112 10:13:58.129"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:58.099" endtime="20201112 10:13:58.130"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:58.097" endtime="20201112 10:13:58.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.096" endtime="20201112 10:13:58.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:58.135" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:58.134" endtime="20201112 10:13:58.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.132" endtime="20201112 10:13:58.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.095" endtime="20201112 10:13:58.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.094" endtime="20201112 10:13:58.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.137" endtime="20201112 10:13:58.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.093" endtime="20201112 10:13:58.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.140" endtime="20201112 10:13:58.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.091" endtime="20201112 10:13:58.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.746" endtime="20201112 10:13:58.142"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.148" endtime="20201112 10:13:58.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.147" endtime="20201112 10:13:58.168"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.182" endtime="20201112 10:13:58.201"></status>
</kw>
<msg timestamp="20201112 10:13:58.202" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.180" endtime="20201112 10:13:58.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.203" endtime="20201112 10:13:58.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.208" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:58.206" endtime="20201112 10:13:58.208"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:58.177" endtime="20201112 10:13:58.208"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:58.175" endtime="20201112 10:13:58.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.174" endtime="20201112 10:13:58.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:58.213" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:58.212" endtime="20201112 10:13:58.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.210" endtime="20201112 10:13:58.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.173" endtime="20201112 10:13:58.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.172" endtime="20201112 10:13:58.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.215" endtime="20201112 10:13:58.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.171" endtime="20201112 10:13:58.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.169" endtime="20201112 10:13:58.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.146" endtime="20201112 10:13:58.217"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 10:13:58.220" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.228" endtime="20201112 10:13:58.237"></status>
</kw>
<msg timestamp="20201112 10:13:58.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.226" endtime="20201112 10:13:58.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.240" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.238" endtime="20201112 10:13:58.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.241" endtime="20201112 10:13:58.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.224" endtime="20201112 10:13:58.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.222" endtime="20201112 10:13:58.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.250" endtime="20201112 10:13:58.534"></status>
</kw>
<msg timestamp="20201112 10:13:58.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069227306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069229194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.248" endtime="20201112 10:13:58.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069227306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069229194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.537" endtime="20201112 10:13:58.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.543" endtime="20201112 10:13:58.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.245" endtime="20201112 10:13:58.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.244" endtime="20201112 10:13:58.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.549" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:58.548" endtime="20201112 10:13:58.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.553" level="INFO">VALUE: [{'time': 0.069227306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069229194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.887999999991563e-06, 'source_diff': 1.887999999991563e-06}, {'time': 0.069230889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.695000000009883e-06, 'source_diff': 1.695000000009883e-06}, {'time': 0.069232639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.069234222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.069235792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5700000000062886e-06, 'source_diff': 1.5700000000062886e-06}, {'time': 0.069237764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9719999999889826e-06, 'source_diff': 1.9719999999889826e-06}, {'time': 0.069239653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8890000000049145e-06, 'source_diff': 1.8890000000049145e-06}, {'time': 0.069241111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4579999999958515e-06, 'source_diff': 1.4579999999958515e-06}, {'time': 0.069243125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.014000000008509e-06, 'source_diff': 2.014000000008509e-06}, {'time': 0.069244931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.805999999993091e-06, 'source_diff': 1.805999999993091e-06}, {'time': 0.069246778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.069248764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.986000000009369e-06, 'source_diff': 1.986000000009369e-06}, {'time': 0.069250347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.069252, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999903566e-06, 'source_diff': 1.6529999999903566e-06}, {'time': 0.069253986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.986000000009369e-06, 'source_diff': 1.986000000009369e-06}, {'time': 0.069255931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.945000000003194e-06, 'source_diff': 1.945000000003194e-06}, {'time': 0.069257417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999949913e-06, 'source_diff': 1.4859999999949913e-06}, {'time': 0.069259014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.596999999992077e-06, 'source_diff': 1.596999999992077e-06}, {'time': 0.069260986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.069262722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.069264514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.069265986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.069267819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999992757e-06, 'source_diff': 1.832999999992757e-06}, {'time': 0.069269625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000069687e-06, 'source_diff': 1.8060000000069687e-06}, {'time': 0.069271139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999941312e-06, 'source_diff': 1.5139999999941312e-06}, {'time': 0.069272597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4580000000097293e-06, 'source_diff': 1.4580000000097293e-06}, {'time': 0.069274292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999960053e-06, 'source_diff': 1.6949999999960053e-06}, {'time': 0.069276028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.069278056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.069279931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.069281458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.069283417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.958999999995825e-06, 'source_diff': 1.958999999995825e-06}, {'time': 0.069284889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.069286861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.069288764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.06929075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9859999999954914e-06, 'source_diff': 1.9859999999954914e-06}, {'time': 0.069292375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.069294347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.069295903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.069297778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.069299472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6939999999965316e-06, 'source_diff': 1.6939999999965316e-06}, {'time': 0.069301069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000059548e-06, 'source_diff': 1.5970000000059548e-06}, {'time': 0.069302917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.069304903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9859999999954914e-06, 'source_diff': 1.9859999999954914e-06}, {'time': 0.069306847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9440000000037205e-06, 'source_diff': 1.9440000000037205e-06}, {'time': 0.069308653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.805999999993091e-06, 'source_diff': 1.805999999993091e-06}, {'time': 0.069310333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000039006e-06, 'source_diff': 1.6800000000039006e-06}, {'time': 0.069312028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999960053e-06, 'source_diff': 1.6949999999960053e-06}, {'time': 0.069313764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:58.551" endtime="20201112 10:13:58.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.546" endtime="20201112 10:13:58.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:58.568" level="INFO">${debug-compressed} = {'source_diff': [0, 1.887999999991563e-06, 1.695000000009883e-06, 1.7499999999948113e-06, 1.582999999999446e-06, 1.5700000000062886e-06, 1.9719999999889826e-06, 1.8890000000049145e-06, 1.4579999999958...</msg>
<status status="PASS" starttime="20201112 10:13:58.555" endtime="20201112 10:13:58.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.572" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:58.571" endtime="20201112 10:13:58.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.575" level="INFO">VALUE: {'source_diff': [0, 1.887999999991563e-06, 1.695000000009883e-06, 1.7499999999948113e-06, 1.582999999999446e-06, 1.5700000000062886e-06, 1.9719999999889826e-06, 1.8890000000049145e-06, 1.4579999999958515e-06, 2.014000000008509e-06, 1.805999999993091e-06, 1.846999999999266e-06, 1.986000000009369e-06, 1.582999999999446e-06, 1.6529999999903566e-06, 1.986000000009369e-06, 1.945000000003194e-06, 1.4859999999949913e-06, 1.596999999992077e-06, 1.9720000000028604e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.4720000000023603e-06, 1.832999999992757e-06, 1.8060000000069687e-06, 1.5139999999941312e-06, 1.4580000000097293e-06, 1.6949999999960053e-06, 1.7360000000021802e-06, 2.02800000000114e-06, 1.8749999999984057e-06, 1.5270000000011663e-06, 1.958999999995825e-06, 1.4720000000023603e-06, 1.9720000000028604e-06, 1.9029999999975455e-06, 1.9859999999954914e-06, 1.6250000000050946e-06, 1.9720000000028604e-06, 1.5559999999997798e-06, 1.8749999999984057e-06, 1.6939999999965316e-06, 1.5970000000059548e-06, 1.8479999999987395e-06, 1.9859999999954914e-06, 1.9440000000037205e-06, 1.805999999993091e-06, 1.6800000000039006e-06, 1.6949999999960053e-06, 1.7360000000021802e-06], 'eventtime': [0.069227306, 0.069229194, 0.069230889, 0.069232639, 0.069234222, 0.069235792, 0.069237764, 0.069239653, 0.069241111, 0.069243125, 0.069244931, 0.069246778, 0.069248764, 0.069250347, 0.069252, 0.069253986, 0.069255931, 0.069257417, 0.069259014, 0.069260986, 0.069262722, 0.069264514, 0.069265986, 0.069267819, 0.069269625, 0.069271139, 0.069272597, 0.069274292, 0.069276028, 0.069278056, 0.069279931, 0.069281458, 0.069283417, 0.069284889, 0.069286861, 0.069288764, 0.06929075, 0.069292375, 0.069294347, 0.069295903, 0.069297778, 0.069299472, 0.069301069, 0.069302917, 0.069304903, 0.069306847, 0.069308653, 0.069310333, 0.069312028, 0.069313764], 'diff': [0, 1.887999999991563e-06, 1.695000000009883e-06, 1.7499999999948113e-06, 1.582999999999446e-06, 1.5700000000062886e-06, 1.9719999999889826e-06, 1.8890000000049145e-06, 1.4579999999958515e-06, 2.014000000008509e-06, 1.805999999993091e-06, 1.846999999999266e-06, 1.986000000009369e-06, 1.582999999999446e-06, 1.6529999999903566e-06, 1.986000000009369e-06, 1.945000000003194e-06, 1.4859999999949913e-06, 1.596999999992077e-06, 1.9720000000028604e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.4720000000023603e-06, 1.832999999992757e-06, 1.8060000000069687e-06, 1.5139999999941312e-06, 1.4580000000097293e-06, 1.6949999999960053e-06, 1.7360000000021802e-06, 2.02800000000114e-06, 1.8749999999984057e-06, 1.5270000000011663e-06, 1.958999999995825e-06, 1.4720000000023603e-06, 1.9720000000028604e-06, 1.9029999999975455e-06, 1.9859999999954914e-06, 1.6250000000050946e-06, 1.9720000000028604e-06, 1.5559999999997798e-06, 1.8749999999984057e-06, 1.6939999999965316e-06, 1.5970000000059548e-06, 1.8479999999987395e-06, 1.9859999999954914e-06, 1.9440000000037205e-06, 1.805999999993091e-06, 1.6800000000039006e-06, 1.6949999999960053e-06, 1.7360000000021802e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:58.573" endtime="20201112 10:13:58.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.569" endtime="20201112 10:13:58.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.580" level="INFO">${RESULT} = [{'time': 0.069229194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.887999999991563e-06, 'source_diff': 1.887999999991563e-06}, {'time': 0.069232639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:58.577" endtime="20201112 10:13:58.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:58.588" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.887999999991563e-06, 1.7499999999948113e-06, 1.5700000000062886e-06, 1.8890000000049145e-06, 2.014000000008509e-06, 1.846999999999266e-06, 1.582999999999446e-06, 1.986000000009369e-...</msg>
<status status="PASS" starttime="20201112 10:13:58.581" endtime="20201112 10:13:58.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.592" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:58.591" endtime="20201112 10:13:58.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.594" level="INFO">VALUE: [1.887999999991563e-06, 1.7499999999948113e-06, 1.5700000000062886e-06, 1.8890000000049145e-06, 2.014000000008509e-06, 1.846999999999266e-06, 1.582999999999446e-06, 1.986000000009369e-06, 1.4859999999949913e-06, 1.9720000000028604e-06, 1.7920000000004599e-06, 1.832999999992757e-06, 1.5139999999941312e-06, 1.6949999999960053e-06, 2.02800000000114e-06, 1.5270000000011663e-06, 1.4720000000023603e-06, 1.9029999999975455e-06, 1.6250000000050946e-06, 1.5559999999997798e-06, 1.6939999999965316e-06, 1.8479999999987395e-06, 1.9440000000037205e-06, 1.6800000000039006e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201112 10:13:58.593" endtime="20201112 10:13:58.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.589" endtime="20201112 10:13:58.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.597" endtime="20201112 10:13:58.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.601" endtime="20201112 10:13:58.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.599" endtime="20201112 10:13:58.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.596" endtime="20201112 10:13:58.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.221" endtime="20201112 10:13:58.622"></status>
</kw>
<msg timestamp="20201112 10:13:58.622" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.629" endtime="20201112 10:13:58.639"></status>
</kw>
<msg timestamp="20201112 10:13:58.640" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.628" endtime="20201112 10:13:58.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.642" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.641" endtime="20201112 10:13:58.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.643" endtime="20201112 10:13:58.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.625" endtime="20201112 10:13:58.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.624" endtime="20201112 10:13:58.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.652" endtime="20201112 10:13:58.921"></status>
</kw>
<msg timestamp="20201112 10:13:58.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018551639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.651" endtime="20201112 10:13:58.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018551639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.924" endtime="20201112 10:13:58.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.930" endtime="20201112 10:13:58.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.648" endtime="20201112 10:13:58.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.646" endtime="20201112 10:13:58.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.936" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:58.935" endtime="20201112 10:13:58.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.940" level="INFO">VALUE: [{'time': 0.018551639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018555472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018556944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018558861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018560431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018561903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018563597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018565069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018566722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.01856875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018570278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018572069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018573944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018575917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.018577833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018579389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.018581264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018582917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.0185845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018586306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018588181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018589681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018591653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018593097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018595125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018597028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018598486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.0186, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018602014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.0186035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018605125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018607056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018608833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018610278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018612486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.018614, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018615875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018617889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018619903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018621708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018623403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018624889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018626736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018628556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018630444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.887999999998502e-06, 'source_diff': 1.887999999998502e-06}, {'time': 0.018631958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018633944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018635458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018637444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:58.937" endtime="20201112 10:13:58.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.933" endtime="20201112 10:13:58.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:58.955" level="INFO">${debug-compressed} = {'source_diff': [0, 1.8749999999984057e-06, 1.957999999999821e-06, 1.4719999999988909e-06, 1.917000000000585e-06, 1.5699999999993497e-06, 1.4720000000023603e-06, 1.694000000000001e-06, 1.4719999999988...</msg>
<status status="PASS" starttime="20201112 10:13:58.942" endtime="20201112 10:13:58.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.959" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:58.958" endtime="20201112 10:13:58.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.962" level="INFO">VALUE: {'source_diff': [0, 1.8749999999984057e-06, 1.957999999999821e-06, 1.4719999999988909e-06, 1.917000000000585e-06, 1.5699999999993497e-06, 1.4720000000023603e-06, 1.694000000000001e-06, 1.4719999999988909e-06, 1.653000000000765e-06, 2.0279999999976706e-06, 1.52800000000064e-06, 1.7910000000009862e-06, 1.8749999999984057e-06, 1.973000000002334e-06, 1.915999999997642e-06, 1.5560000000032492e-06, 1.8749999999984057e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.8060000000000298e-06, 1.8749999999984057e-06, 1.5000000000015001e-06, 1.971999999999391e-06, 1.443999999999751e-06, 2.02800000000114e-06, 1.903000000001015e-06, 1.457999999999321e-06, 1.5139999999976006e-06, 2.01400000000157e-06, 1.4859999999984608e-06, 1.6250000000016251e-06, 1.931000000000155e-06, 1.7770000000014163e-06, 1.4449999999992247e-06, 2.208000000000071e-06, 1.5139999999976006e-06, 1.8750000000018752e-06, 2.0139999999981006e-06, 2.01400000000157e-06, 1.8050000000005562e-06, 1.6949999999994747e-06, 1.4859999999984608e-06, 1.8470000000027353e-06, 1.8199999999995997e-06, 1.887999999998502e-06, 1.51400000000107e-06, 1.985999999998961e-06, 1.51400000000107e-06, 1.985999999998961e-06], 'eventtime': [0.018551639, 0.018553514, 0.018555472, 0.018556944, 0.018558861, 0.018560431, 0.018561903, 0.018563597, 0.018565069, 0.018566722, 0.01856875, 0.018570278, 0.018572069, 0.018573944, 0.018575917, 0.018577833, 0.018579389, 0.018581264, 0.018582917, 0.0185845, 0.018586306, 0.018588181, 0.018589681, 0.018591653, 0.018593097, 0.018595125, 0.018597028, 0.018598486, 0.0186, 0.018602014, 0.0186035, 0.018605125, 0.018607056, 0.018608833, 0.018610278, 0.018612486, 0.018614, 0.018615875, 0.018617889, 0.018619903, 0.018621708, 0.018623403, 0.018624889, 0.018626736, 0.018628556, 0.018630444, 0.018631958, 0.018633944, 0.018635458, 0.018637444], 'diff': [0, 1.8749999999984057e-06, 1.957999999999821e-06, 1.4719999999988909e-06, 1.917000000000585e-06, 1.5699999999993497e-06, 1.4720000000023603e-06, 1.694000000000001e-06, 1.4719999999988909e-06, 1.653000000000765e-06, 2.0279999999976706e-06, 1.52800000000064e-06, 1.7910000000009862e-06, 1.8749999999984057e-06, 1.973000000002334e-06, 1.915999999997642e-06, 1.5560000000032492e-06, 1.8749999999984057e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.8060000000000298e-06, 1.8749999999984057e-06, 1.5000000000015001e-06, 1.971999999999391e-06, 1.443999999999751e-06, 2.02800000000114e-06, 1.903000000001015e-06, 1.457999999999321e-06, 1.5139999999976006e-06, 2.01400000000157e-06, 1.4859999999984608e-06, 1.6250000000016251e-06, 1.931000000000155e-06, 1.7770000000014163e-06, 1.4449999999992247e-06, 2.208000000000071e-06, 1.5139999999976006e-06, 1.8750000000018752e-06, 2.0139999999981006e-06, 2.01400000000157e-06, 1.8050000000005562e-06, 1.6949999999994747e-06, 1.4859999999984608e-06, 1.8470000000027353e-06, 1.8199999999995997e-06, 1.887999999998502e-06, 1.51400000000107e-06, 1.985999999998961e-06, 1.51400000000107e-06, 1.985999999998961e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:58.960" endtime="20201112 10:13:58.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.956" endtime="20201112 10:13:58.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.966" level="INFO">${RESULT} = [{'time': 0.018553514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018556944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:58.964" endtime="20201112 10:13:58.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:58.976" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.8749999999984057e-06, 1.4719999999988909e-06, 1.5699999999993497e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.52800000000064e-06, 1.8749999999984057e-06, 1.915999999997642e-...</msg>
<status status="PASS" starttime="20201112 10:13:58.967" endtime="20201112 10:13:58.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.980" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:58.979" endtime="20201112 10:13:58.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.982" level="INFO">VALUE: [1.8749999999984057e-06, 1.4719999999988909e-06, 1.5699999999993497e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.52800000000064e-06, 1.8749999999984057e-06, 1.915999999997642e-06, 1.8749999999984057e-06, 1.582999999999446e-06, 1.8749999999984057e-06, 1.971999999999391e-06, 2.02800000000114e-06, 1.457999999999321e-06, 2.01400000000157e-06, 1.6250000000016251e-06, 1.7770000000014163e-06, 2.208000000000071e-06, 1.8750000000018752e-06, 2.01400000000157e-06, 1.6949999999994747e-06, 1.8470000000027353e-06, 1.887999999998502e-06, 1.985999999998961e-06, 1.985999999998961e-06]</msg>
<status status="PASS" starttime="20201112 10:13:58.981" endtime="20201112 10:13:58.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.977" endtime="20201112 10:13:58.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.986" endtime="20201112 10:13:58.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.989" endtime="20201112 10:13:59.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.987" endtime="20201112 10:13:59.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.984" endtime="20201112 10:13:59.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.622" endtime="20201112 10:13:59.010"></status>
</kw>
<msg timestamp="20201112 10:13:59.010" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.017" endtime="20201112 10:13:59.027"></status>
</kw>
<msg timestamp="20201112 10:13:59.028" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.016" endtime="20201112 10:13:59.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.029" endtime="20201112 10:13:59.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.031" endtime="20201112 10:13:59.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.013" endtime="20201112 10:13:59.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.012" endtime="20201112 10:13:59.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.041" endtime="20201112 10:13:59.304"></status>
</kw>
<msg timestamp="20201112 10:13:59.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018202972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018205125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.039" endtime="20201112 10:13:59.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018202972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018205125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.306" endtime="20201112 10:13:59.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.312" endtime="20201112 10:13:59.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.036" endtime="20201112 10:13:59.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.034" endtime="20201112 10:13:59.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.318" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:59.317" endtime="20201112 10:13:59.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.322" level="INFO">VALUE: [{'time': 0.018202972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018205125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1529999999977956e-06, 'source_diff': 2.1529999999977956e-06}, {'time': 0.018206764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.0182085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018210319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018212208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018213833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018215736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018217181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018219486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.018221056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.01822275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018224708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018226444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018228, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018229903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018231472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018233319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018234833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018236694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018238569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018240403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018242139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018244028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018245958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018247972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018249722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018251722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018253375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018255167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018256819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018258819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018260597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018262056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018263542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018265139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018266931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018268944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.012999999998627e-06, 'source_diff': 2.012999999998627e-06}, {'time': 0.018270847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018272556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018274347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018276153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018277875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018279833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018281569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018283139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018284764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.01828625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018288264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018289972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:59.319" endtime="20201112 10:13:59.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.315" endtime="20201112 10:13:59.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:59.337" level="INFO">${debug-compressed} = {'source_diff': [0, 2.1529999999977956e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.6249999999981557e-06, 1.903000000001015e-06, 1.44499999999922...</msg>
<status status="PASS" starttime="20201112 10:13:59.324" endtime="20201112 10:13:59.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.340" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:59.340" endtime="20201112 10:13:59.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.344" level="INFO">VALUE: {'source_diff': [0, 2.1529999999977956e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.6249999999981557e-06, 1.903000000001015e-06, 1.4449999999992247e-06, 2.305000000001056e-06, 1.5699999999993497e-06, 1.694000000000001e-06, 1.957999999999821e-06, 1.7360000000021802e-06, 1.5559999999997798e-06, 1.9029999999975455e-06, 1.568999999999876e-06, 1.8470000000027353e-06, 1.5139999999976006e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.7360000000021802e-06, 1.8889999999979756e-06, 1.930000000000681e-06, 2.01400000000157e-06, 1.7499999999982807e-06, 2.000000000002e-06, 1.6529999999972955e-06, 1.7920000000004599e-06, 1.6520000000012913e-06, 1.9999999999985307e-06, 1.77800000000089e-06, 1.4589999999987946e-06, 1.4860000000019302e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 2.012999999998627e-06, 1.903000000001015e-06, 1.7089999999990446e-06, 1.7910000000009862e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.957999999999821e-06, 1.7360000000021802e-06, 1.5699999999993497e-06, 1.6249999999981557e-06, 1.4860000000019302e-06, 2.0139999999981006e-06, 1.7080000000030404e-06], 'eventtime': [0.018202972, 0.018205125, 0.018206764, 0.0182085, 0.018210319, 0.018212208, 0.018213833, 0.018215736, 0.018217181, 0.018219486, 0.018221056, 0.01822275, 0.018224708, 0.018226444, 0.018228, 0.018229903, 0.018231472, 0.018233319, 0.018234833, 0.018236694, 0.018238569, 0.018240403, 0.018242139, 0.018244028, 0.018245958, 0.018247972, 0.018249722, 0.018251722, 0.018253375, 0.018255167, 0.018256819, 0.018258819, 0.018260597, 0.018262056, 0.018263542, 0.018265139, 0.018266931, 0.018268944, 0.018270847, 0.018272556, 0.018274347, 0.018276153, 0.018277875, 0.018279833, 0.018281569, 0.018283139, 0.018284764, 0.01828625, 0.018288264, 0.018289972], 'diff': [0, 2.1529999999977956e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.6249999999981557e-06, 1.903000000001015e-06, 1.4449999999992247e-06, 2.305000000001056e-06, 1.5699999999993497e-06, 1.694000000000001e-06, 1.957999999999821e-06, 1.7360000000021802e-06, 1.5559999999997798e-06, 1.9029999999975455e-06, 1.568999999999876e-06, 1.8470000000027353e-06, 1.5139999999976006e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.7360000000021802e-06, 1.8889999999979756e-06, 1.930000000000681e-06, 2.01400000000157e-06, 1.7499999999982807e-06, 2.000000000002e-06, 1.6529999999972955e-06, 1.7920000000004599e-06, 1.6520000000012913e-06, 1.9999999999985307e-06, 1.77800000000089e-06, 1.4589999999987946e-06, 1.4860000000019302e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 2.012999999998627e-06, 1.903000000001015e-06, 1.7089999999990446e-06, 1.7910000000009862e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.957999999999821e-06, 1.7360000000021802e-06, 1.5699999999993497e-06, 1.6249999999981557e-06, 1.4860000000019302e-06, 2.0139999999981006e-06, 1.7080000000030404e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:59.342" endtime="20201112 10:13:59.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.338" endtime="20201112 10:13:59.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.348" level="INFO">${RESULT} = [{'time': 0.018205125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1529999999977956e-06, 'source_diff': 2.1529999999977956e-06}, {'time': 0.0182085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:59.345" endtime="20201112 10:13:59.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:59.356" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.1529999999977956e-06, 1.7359999999987108e-06, 1.889000000001445e-06, 1.903000000001015e-06, 2.305000000001056e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.9029999999975455e...</msg>
<status status="PASS" starttime="20201112 10:13:59.349" endtime="20201112 10:13:59.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.360" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:59.359" endtime="20201112 10:13:59.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.362" level="INFO">VALUE: [2.1529999999977956e-06, 1.7359999999987108e-06, 1.889000000001445e-06, 1.903000000001015e-06, 2.305000000001056e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.9029999999975455e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8339999999991696e-06, 1.8889999999979756e-06, 2.01400000000157e-06, 2.000000000002e-06, 1.7920000000004599e-06, 1.9999999999985307e-06, 1.4589999999987946e-06, 1.5969999999990159e-06, 2.012999999998627e-06, 1.7089999999990446e-06, 1.8060000000000298e-06, 1.957999999999821e-06, 1.5699999999993497e-06, 1.4860000000019302e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201112 10:13:59.361" endtime="20201112 10:13:59.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.357" endtime="20201112 10:13:59.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.366" endtime="20201112 10:13:59.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.369" endtime="20201112 10:13:59.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.368" endtime="20201112 10:13:59.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.364" endtime="20201112 10:13:59.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.010" endtime="20201112 10:13:59.390"></status>
</kw>
<msg timestamp="20201112 10:13:59.390" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.398" endtime="20201112 10:13:59.407"></status>
</kw>
<msg timestamp="20201112 10:13:59.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.396" endtime="20201112 10:13:59.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.410" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.409" endtime="20201112 10:13:59.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.411" endtime="20201112 10:13:59.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.393" endtime="20201112 10:13:59.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.392" endtime="20201112 10:13:59.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.420" endtime="20201112 10:13:59.688"></status>
</kw>
<msg timestamp="20201112 10:13:59.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018970833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018972583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.419" endtime="20201112 10:13:59.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018970833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018972583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.691" endtime="20201112 10:13:59.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.697" endtime="20201112 10:13:59.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.416" endtime="20201112 10:13:59.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.414" endtime="20201112 10:13:59.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.703" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:59.702" endtime="20201112 10:13:59.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.706" level="INFO">VALUE: [{'time': 0.018970833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018972583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018974167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018976181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018977792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018979736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018981708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018983444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018985458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018987042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018988806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018990306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018992347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.018994139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018995667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018997514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018999042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019000958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.019002972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019004778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019006333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019008333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019010153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019012153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.019014028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.01901575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.019017264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019018722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019020431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.019022069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.019023694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019025736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.019027514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.019028972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.019030528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019032083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019034028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019036, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019037736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019039264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019041111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019042917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019044833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.019046375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019048097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019050028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019051542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019053458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.019055236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019056708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:59.704" endtime="20201112 10:13:59.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.700" endtime="20201112 10:13:59.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:59.721" level="INFO">${debug-compressed} = {'source_diff': [0, 1.7500000000017502e-06, 1.5839999999989196e-06, 2.01400000000157e-06, 1.6109999999985858e-06, 1.944000000000251e-06, 1.971999999999391e-06, 1.7359999999987108e-06, 2.01400000000157...</msg>
<status status="PASS" starttime="20201112 10:13:59.709" endtime="20201112 10:13:59.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.725" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:59.724" endtime="20201112 10:13:59.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.728" level="INFO">VALUE: {'source_diff': [0, 1.7500000000017502e-06, 1.5839999999989196e-06, 2.01400000000157e-06, 1.6109999999985858e-06, 1.944000000000251e-06, 1.971999999999391e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.5839999999989196e-06, 1.76400000000132e-06, 1.4999999999980307e-06, 2.0410000000012363e-06, 1.7920000000004599e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.52800000000064e-06, 1.915999999997642e-06, 2.01400000000157e-06, 1.8060000000000298e-06, 1.5550000000003061e-06, 1.9999999999985307e-06, 1.8199999999995997e-06, 2.000000000002e-06, 1.8749999999984057e-06, 1.7220000000026103e-06, 1.5139999999976006e-06, 1.457999999999321e-06, 1.709000000002514e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 2.04200000000071e-06, 1.7779999999974205e-06, 1.4580000000027904e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.9449999999997247e-06, 1.971999999999391e-06, 1.7359999999987108e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.9160000000011113e-06, 1.5420000000002099e-06, 1.7219999999991409e-06, 1.931000000000155e-06, 1.51400000000107e-06, 1.915999999997642e-06, 1.77800000000089e-06, 1.4719999999988909e-06], 'eventtime': [0.018970833, 0.018972583, 0.018974167, 0.018976181, 0.018977792, 0.018979736, 0.018981708, 0.018983444, 0.018985458, 0.018987042, 0.018988806, 0.018990306, 0.018992347, 0.018994139, 0.018995667, 0.018997514, 0.018999042, 0.019000958, 0.019002972, 0.019004778, 0.019006333, 0.019008333, 0.019010153, 0.019012153, 0.019014028, 0.01901575, 0.019017264, 0.019018722, 0.019020431, 0.019022069, 0.019023694, 0.019025736, 0.019027514, 0.019028972, 0.019030528, 0.019032083, 0.019034028, 0.019036, 0.019037736, 0.019039264, 0.019041111, 0.019042917, 0.019044833, 0.019046375, 0.019048097, 0.019050028, 0.019051542, 0.019053458, 0.019055236, 0.019056708], 'diff': [0, 1.7500000000017502e-06, 1.5839999999989196e-06, 2.01400000000157e-06, 1.6109999999985858e-06, 1.944000000000251e-06, 1.971999999999391e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.5839999999989196e-06, 1.76400000000132e-06, 1.4999999999980307e-06, 2.0410000000012363e-06, 1.7920000000004599e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.52800000000064e-06, 1.915999999997642e-06, 2.01400000000157e-06, 1.8060000000000298e-06, 1.5550000000003061e-06, 1.9999999999985307e-06, 1.8199999999995997e-06, 2.000000000002e-06, 1.8749999999984057e-06, 1.7220000000026103e-06, 1.5139999999976006e-06, 1.457999999999321e-06, 1.709000000002514e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 2.04200000000071e-06, 1.7779999999974205e-06, 1.4580000000027904e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.9449999999997247e-06, 1.971999999999391e-06, 1.7359999999987108e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.9160000000011113e-06, 1.5420000000002099e-06, 1.7219999999991409e-06, 1.931000000000155e-06, 1.51400000000107e-06, 1.915999999997642e-06, 1.77800000000089e-06, 1.4719999999988909e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:59.726" endtime="20201112 10:13:59.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.722" endtime="20201112 10:13:59.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.733" level="INFO">${RESULT} = [{'time': 0.018972583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018976181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:59.730" endtime="20201112 10:13:59.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:59.741" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.7500000000017502e-06, 2.01400000000157e-06, 1.944000000000251e-06, 1.7359999999987108e-06, 1.5839999999989196e-06, 1.4999999999980307e-06, 1.7920000000004599e-06, 1.846999999999266e...</msg>
<status status="PASS" starttime="20201112 10:13:59.734" endtime="20201112 10:13:59.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.745" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:59.744" endtime="20201112 10:13:59.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.747" level="INFO">VALUE: [1.7500000000017502e-06, 2.01400000000157e-06, 1.944000000000251e-06, 1.7359999999987108e-06, 1.5839999999989196e-06, 1.4999999999980307e-06, 1.7920000000004599e-06, 1.846999999999266e-06, 1.915999999997642e-06, 1.8060000000000298e-06, 1.9999999999985307e-06, 2.000000000002e-06, 1.7220000000026103e-06, 1.457999999999321e-06, 1.637999999998252e-06, 2.04200000000071e-06, 1.4580000000027904e-06, 1.5550000000003061e-06, 1.971999999999391e-06, 1.52800000000064e-06, 1.8060000000000298e-06, 1.5420000000002099e-06, 1.931000000000155e-06, 1.915999999997642e-06, 1.4719999999988909e-06]</msg>
<status status="PASS" starttime="20201112 10:13:59.746" endtime="20201112 10:13:59.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.742" endtime="20201112 10:13:59.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.751" endtime="20201112 10:13:59.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.754" endtime="20201112 10:13:59.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.752" endtime="20201112 10:13:59.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.749" endtime="20201112 10:13:59.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.390" endtime="20201112 10:13:59.775"></status>
</kw>
<msg timestamp="20201112 10:13:59.775" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.783" endtime="20201112 10:13:59.792"></status>
</kw>
<msg timestamp="20201112 10:13:59.793" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.782" endtime="20201112 10:13:59.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.795" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.794" endtime="20201112 10:13:59.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.796" endtime="20201112 10:13:59.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.778" endtime="20201112 10:13:59.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.777" endtime="20201112 10:13:59.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.805" endtime="20201112 10:14:00.069"></status>
</kw>
<msg timestamp="20201112 10:14:00.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019149972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.804" endtime="20201112 10:14:00.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019149972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.072" endtime="20201112 10:14:00.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.078" endtime="20201112 10:14:00.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.801" endtime="20201112 10:14:00.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.799" endtime="20201112 10:14:00.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.084" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:00.083" endtime="20201112 10:14:00.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.088" level="INFO">VALUE: [{'time': 0.019149972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019153236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019155069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.019156778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.019158764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019160583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019162139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.019163597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019165514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019167014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019169, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019170764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019172653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019174319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.019175986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019177597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019179389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019181153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.019183097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019184653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.0191865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019188083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.019189736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.019191375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019192833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.01919475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019196486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019198208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.019200111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.019201722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019203653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019205403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019207014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019208806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.019210764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9580000000032904e-06, 'source_diff': 1.9580000000032904e-06}, {'time': 0.019212792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.019214417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019216222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019217708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019219264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019220819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019222514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019224458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019226111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019228069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019229889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019231403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019233153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019234931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:00.085" endtime="20201112 10:14:00.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.081" endtime="20201112 10:14:00.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:00.103" level="INFO">${debug-compressed} = {'source_diff': [0, 1.5839999999989196e-06, 1.6800000000004311e-06, 1.832999999999696e-06, 1.7089999999990446e-06, 1.985999999998961e-06, 1.819000000000126e-06, 1.5560000000032492e-06, 1.4579999999993...</msg>
<status status="PASS" starttime="20201112 10:14:00.090" endtime="20201112 10:14:00.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.107" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:00.106" endtime="20201112 10:14:00.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.110" level="INFO">VALUE: {'source_diff': [0, 1.5839999999989196e-06, 1.6800000000004311e-06, 1.832999999999696e-06, 1.7089999999990446e-06, 1.985999999998961e-06, 1.819000000000126e-06, 1.5560000000032492e-06, 1.457999999999321e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.889000000001445e-06, 1.6659999999973918e-06, 1.6670000000003349e-06, 1.6110000000020552e-06, 1.7920000000004599e-06, 1.7639999999978506e-06, 1.944000000000251e-06, 1.5559999999997798e-06, 1.846999999999266e-06, 1.5830000000029154e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.457999999999321e-06, 1.917000000000585e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.9029999999975455e-06, 1.6110000000020552e-06, 1.931000000000155e-06, 1.7499999999982807e-06, 1.6110000000020552e-06, 1.7919999999969904e-06, 1.9580000000032904e-06, 2.0279999999976706e-06, 1.6250000000016251e-06, 1.8050000000005562e-06, 1.4859999999984608e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.6949999999994747e-06, 1.944000000000251e-06, 1.653000000000765e-06, 1.957999999999821e-06, 1.8199999999995997e-06, 1.51400000000107e-06, 1.7499999999982807e-06, 1.77800000000089e-06], 'eventtime': [0.019149972, 0.019151556, 0.019153236, 0.019155069, 0.019156778, 0.019158764, 0.019160583, 0.019162139, 0.019163597, 0.019165514, 0.019167014, 0.019169, 0.019170764, 0.019172653, 0.019174319, 0.019175986, 0.019177597, 0.019179389, 0.019181153, 0.019183097, 0.019184653, 0.0191865, 0.019188083, 0.019189736, 0.019191375, 0.019192833, 0.01919475, 0.019196486, 0.019198208, 0.019200111, 0.019201722, 0.019203653, 0.019205403, 0.019207014, 0.019208806, 0.019210764, 0.019212792, 0.019214417, 0.019216222, 0.019217708, 0.019219264, 0.019220819, 0.019222514, 0.019224458, 0.019226111, 0.019228069, 0.019229889, 0.019231403, 0.019233153, 0.019234931], 'diff': [0, 1.5839999999989196e-06, 1.6800000000004311e-06, 1.832999999999696e-06, 1.7089999999990446e-06, 1.985999999998961e-06, 1.819000000000126e-06, 1.5560000000032492e-06, 1.457999999999321e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.889000000001445e-06, 1.6659999999973918e-06, 1.6670000000003349e-06, 1.6110000000020552e-06, 1.7920000000004599e-06, 1.7639999999978506e-06, 1.944000000000251e-06, 1.5559999999997798e-06, 1.846999999999266e-06, 1.5830000000029154e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.457999999999321e-06, 1.917000000000585e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.9029999999975455e-06, 1.6110000000020552e-06, 1.931000000000155e-06, 1.7499999999982807e-06, 1.6110000000020552e-06, 1.7919999999969904e-06, 1.9580000000032904e-06, 2.0279999999976706e-06, 1.6250000000016251e-06, 1.8050000000005562e-06, 1.4859999999984608e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.6949999999994747e-06, 1.944000000000251e-06, 1.653000000000765e-06, 1.957999999999821e-06, 1.8199999999995997e-06, 1.51400000000107e-06, 1.7499999999982807e-06, 1.77800000000089e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 10:14:00.108" endtime="20201112 10:14:00.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.104" endtime="20201112 10:14:00.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.114" level="INFO">${RESULT} = [{'time': 0.019151556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019155069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:00.111" endtime="20201112 10:14:00.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:00.123" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.5839999999989196e-06, 1.832999999999696e-06, 1.985999999998961e-06, 1.5560000000032492e-06, 1.917000000000585e-06, 1.985999999998961e-06, 1.889000000001445e-06, 1.6670000000003349e-...</msg>
<status status="PASS" starttime="20201112 10:14:00.115" endtime="20201112 10:14:00.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.127" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:00.126" endtime="20201112 10:14:00.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.129" level="INFO">VALUE: [1.5839999999989196e-06, 1.832999999999696e-06, 1.985999999998961e-06, 1.5560000000032492e-06, 1.917000000000585e-06, 1.985999999998961e-06, 1.889000000001445e-06, 1.6670000000003349e-06, 1.7920000000004599e-06, 1.944000000000251e-06, 1.846999999999266e-06, 1.6529999999972955e-06, 1.457999999999321e-06, 1.7359999999987108e-06, 1.9029999999975455e-06, 1.931000000000155e-06, 1.6110000000020552e-06, 1.9580000000032904e-06, 1.6250000000016251e-06, 1.4859999999984608e-06, 1.5550000000003061e-06, 1.944000000000251e-06, 1.957999999999821e-06, 1.51400000000107e-06, 1.77800000000089e-06]</msg>
<status status="PASS" starttime="20201112 10:14:00.128" endtime="20201112 10:14:00.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.124" endtime="20201112 10:14:00.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.133" endtime="20201112 10:14:00.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.136" endtime="20201112 10:14:00.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.135" endtime="20201112 10:14:00.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.131" endtime="20201112 10:14:00.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.775" endtime="20201112 10:14:00.157"></status>
</kw>
<msg timestamp="20201112 10:14:00.157" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.166" endtime="20201112 10:14:00.176"></status>
</kw>
<msg timestamp="20201112 10:14:00.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.165" endtime="20201112 10:14:00.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.179" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.177" endtime="20201112 10:14:00.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.180" endtime="20201112 10:14:00.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.162" endtime="20201112 10:14:00.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.159" endtime="20201112 10:14:00.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.189" endtime="20201112 10:14:00.457"></status>
</kw>
<msg timestamp="20201112 10:14:00.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020408944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.187" endtime="20201112 10:14:00.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020408944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.459" endtime="20201112 10:14:00.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.465" endtime="20201112 10:14:00.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.185" endtime="20201112 10:14:00.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.183" endtime="20201112 10:14:00.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.471" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:00.470" endtime="20201112 10:14:00.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.475" level="INFO">VALUE: [{'time': 0.020407417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020408944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5269999999976969e-06, 'source_diff': 1.5269999999976969e-06}, {'time': 0.020410597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.020412375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.020413889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.020415681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.020417222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5409999999972668e-06, 'source_diff': 1.5409999999972668e-06}, {'time': 0.020418694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.020420236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.020421972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.020423806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.020425278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.020427, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.020428875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.020430722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.020432514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.020434194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.020436097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.020438083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.020439681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.020441306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.02044325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.020445236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.020447222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.02044925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.020450944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.020452472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.020454194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.020456083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.020457556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.020459444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8880000000019714e-06, 'source_diff': 1.8880000000019714e-06}, {'time': 0.020461153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.020463028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.020465056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.020466653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.020468208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.020469903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.020471875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.020473681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.020475278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.02047725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.020478722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.020480347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.020482083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.020483556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.020485083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.020486833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.020488639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.020490139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.020491736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:00.472" endtime="20201112 10:14:00.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.468" endtime="20201112 10:14:00.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:00.490" level="INFO">${debug-compressed} = {'source_diff': [0, 1.5269999999976969e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.51400000000107e-06, 1.7920000000004599e-06, 1.5409999999972668e-06, 1.4720000000023603e-06, 1.542000000000209...</msg>
<status status="PASS" starttime="20201112 10:14:00.477" endtime="20201112 10:14:00.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.494" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:00.493" endtime="20201112 10:14:00.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.497" level="INFO">VALUE: {'source_diff': [0, 1.5269999999976969e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.51400000000107e-06, 1.7920000000004599e-06, 1.5409999999972668e-06, 1.4720000000023603e-06, 1.5420000000002099e-06, 1.7359999999987108e-06, 1.8339999999991696e-06, 1.4720000000023603e-06, 1.7219999999991409e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.6800000000004311e-06, 1.903000000001015e-06, 1.985999999998961e-06, 1.598000000001959e-06, 1.6249999999981557e-06, 1.944000000000251e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 2.0279999999976706e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.7219999999991409e-06, 1.889000000001445e-06, 1.4729999999983645e-06, 1.8880000000019714e-06, 1.7089999999990446e-06, 1.8750000000018752e-06, 2.0279999999976706e-06, 1.5970000000024853e-06, 1.5550000000003061e-06, 1.6949999999994747e-06, 1.971999999999391e-06, 1.8060000000000298e-06, 1.5969999999990159e-06, 1.971999999999391e-06, 1.4720000000023603e-06, 1.6249999999981557e-06, 1.7360000000021802e-06, 1.4729999999983645e-06, 1.5270000000011663e-06, 1.7499999999982807e-06, 1.8060000000000298e-06, 1.5000000000015001e-06, 1.5969999999990159e-06], 'eventtime': [0.020407417, 0.020408944, 0.020410597, 0.020412375, 0.020413889, 0.020415681, 0.020417222, 0.020418694, 0.020420236, 0.020421972, 0.020423806, 0.020425278, 0.020427, 0.020428875, 0.020430722, 0.020432514, 0.020434194, 0.020436097, 0.020438083, 0.020439681, 0.020441306, 0.02044325, 0.020445236, 0.020447222, 0.02044925, 0.020450944, 0.020452472, 0.020454194, 0.020456083, 0.020457556, 0.020459444, 0.020461153, 0.020463028, 0.020465056, 0.020466653, 0.020468208, 0.020469903, 0.020471875, 0.020473681, 0.020475278, 0.02047725, 0.020478722, 0.020480347, 0.020482083, 0.020483556, 0.020485083, 0.020486833, 0.020488639, 0.020490139, 0.020491736], 'diff': [0, 1.5269999999976969e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.51400000000107e-06, 1.7920000000004599e-06, 1.5409999999972668e-06, 1.4720000000023603e-06, 1.5420000000002099e-06, 1.7359999999987108e-06, 1.8339999999991696e-06, 1.4720000000023603e-06, 1.7219999999991409e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.6800000000004311e-06, 1.903000000001015e-06, 1.985999999998961e-06, 1.598000000001959e-06, 1.6249999999981557e-06, 1.944000000000251e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 2.0279999999976706e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.7219999999991409e-06, 1.889000000001445e-06, 1.4729999999983645e-06, 1.8880000000019714e-06, 1.7089999999990446e-06, 1.8750000000018752e-06, 2.0279999999976706e-06, 1.5970000000024853e-06, 1.5550000000003061e-06, 1.6949999999994747e-06, 1.971999999999391e-06, 1.8060000000000298e-06, 1.5969999999990159e-06, 1.971999999999391e-06, 1.4720000000023603e-06, 1.6249999999981557e-06, 1.7360000000021802e-06, 1.4729999999983645e-06, 1.5270000000011663e-06, 1.7499999999982807e-06, 1.8060000000000298e-06, 1.5000000000015001e-06, 1.5969999999990159e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:00.495" endtime="20201112 10:14:00.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.491" endtime="20201112 10:14:00.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.501" level="INFO">${RESULT} = [{'time': 0.020408944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5269999999976969e-06, 'source_diff': 1.5269999999976969e-06}, {'time': 0.020412375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:00.499" endtime="20201112 10:14:00.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:00.509" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.5269999999976969e-06, 1.77800000000089e-06, 1.7920000000004599e-06, 1.4720000000023603e-06, 1.7359999999987108e-06, 1.4720000000023603e-06, 1.8749999999984057e-06, 1.792000000000459...</msg>
<status status="PASS" starttime="20201112 10:14:00.502" endtime="20201112 10:14:00.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.513" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:00.512" endtime="20201112 10:14:00.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.516" level="INFO">VALUE: [1.5269999999976969e-06, 1.77800000000089e-06, 1.7920000000004599e-06, 1.4720000000023603e-06, 1.7359999999987108e-06, 1.4720000000023603e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.903000000001015e-06, 1.598000000001959e-06, 1.944000000000251e-06, 1.9860000000024303e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.4729999999983645e-06, 1.7089999999990446e-06, 2.0279999999976706e-06, 1.5550000000003061e-06, 1.971999999999391e-06, 1.5969999999990159e-06, 1.4720000000023603e-06, 1.7360000000021802e-06, 1.5270000000011663e-06, 1.8060000000000298e-06, 1.5969999999990159e-06]</msg>
<status status="PASS" starttime="20201112 10:14:00.514" endtime="20201112 10:14:00.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.510" endtime="20201112 10:14:00.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.519" endtime="20201112 10:14:00.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.523" endtime="20201112 10:14:00.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.521" endtime="20201112 10:14:00.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.517" endtime="20201112 10:14:00.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.158" endtime="20201112 10:14:00.544"></status>
</kw>
<msg timestamp="20201112 10:14:00.544" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.551" endtime="20201112 10:14:00.561"></status>
</kw>
<msg timestamp="20201112 10:14:00.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.550" endtime="20201112 10:14:00.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.563" endtime="20201112 10:14:00.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.565" endtime="20201112 10:14:00.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.547" endtime="20201112 10:14:00.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.546" endtime="20201112 10:14:00.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.574" endtime="20201112 10:14:00.838"></status>
</kw>
<msg timestamp="20201112 10:14:00.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018191181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018193222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.573" endtime="20201112 10:14:00.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018191181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018193222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.841" endtime="20201112 10:14:00.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.846" endtime="20201112 10:14:00.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.570" endtime="20201112 10:14:00.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.569" endtime="20201112 10:14:00.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.852" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:00.851" endtime="20201112 10:14:00.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.856" level="INFO">VALUE: [{'time': 0.018191181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018193222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.040999999997767e-06, 'source_diff': 2.040999999997767e-06}, {'time': 0.018194917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018196556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018198444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8880000000019714e-06, 'source_diff': 1.8880000000019714e-06}, {'time': 0.018199889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018201764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018203528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018205403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018207167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018208792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018210264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018211833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018213514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018215236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018217028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018218514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018220403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018222292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018223972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018225958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018227889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018229694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018231625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018233444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018235236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.018237222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018238958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018240722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.01824225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018243986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.01824575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018247625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018249097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018250542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.018252611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0689999999969066e-06, 'source_diff': 2.0689999999969066e-06}, {'time': 0.018254278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018255944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018257639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.0182595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018261264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018263097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018264833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018266597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018268361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018269861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018271597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018273583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018275361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.01827725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:00.854" endtime="20201112 10:14:00.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.849" endtime="20201112 10:14:00.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:00.871" level="INFO">${debug-compressed} = {'source_diff': [0, 2.040999999997767e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.8880000000019714e-06, 1.4449999999992247e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.8749999999984...</msg>
<status status="PASS" starttime="20201112 10:14:00.858" endtime="20201112 10:14:00.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.875" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:00.874" endtime="20201112 10:14:00.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.878" level="INFO">VALUE: {'source_diff': [0, 2.040999999997767e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.8880000000019714e-06, 1.4449999999992247e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.6250000000016251e-06, 1.4719999999988909e-06, 1.568999999999876e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.7920000000004599e-06, 1.4860000000019302e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.6800000000004311e-06, 1.985999999998961e-06, 1.931000000000155e-06, 1.8050000000005562e-06, 1.931000000000155e-06, 1.819000000000126e-06, 1.7919999999969904e-06, 1.9860000000024303e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.52800000000064e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 1.4719999999988909e-06, 1.4450000000026941e-06, 2.0689999999969066e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.6949999999994747e-06, 1.8610000000023053e-06, 1.7639999999978506e-06, 1.832999999999696e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.4999999999980307e-06, 1.7360000000021802e-06, 1.985999999998961e-06, 1.77800000000089e-06, 1.8889999999979756e-06], 'eventtime': [0.018191181, 0.018193222, 0.018194917, 0.018196556, 0.018198444, 0.018199889, 0.018201764, 0.018203528, 0.018205403, 0.018207167, 0.018208792, 0.018210264, 0.018211833, 0.018213514, 0.018215236, 0.018217028, 0.018218514, 0.018220403, 0.018222292, 0.018223972, 0.018225958, 0.018227889, 0.018229694, 0.018231625, 0.018233444, 0.018235236, 0.018237222, 0.018238958, 0.018240722, 0.01824225, 0.018243986, 0.01824575, 0.018247625, 0.018249097, 0.018250542, 0.018252611, 0.018254278, 0.018255944, 0.018257639, 0.0182595, 0.018261264, 0.018263097, 0.018264833, 0.018266597, 0.018268361, 0.018269861, 0.018271597, 0.018273583, 0.018275361, 0.01827725], 'diff': [0, 2.040999999997767e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.8880000000019714e-06, 1.4449999999992247e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.6250000000016251e-06, 1.4719999999988909e-06, 1.568999999999876e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.7920000000004599e-06, 1.4860000000019302e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.6800000000004311e-06, 1.985999999998961e-06, 1.931000000000155e-06, 1.8050000000005562e-06, 1.931000000000155e-06, 1.819000000000126e-06, 1.7919999999969904e-06, 1.9860000000024303e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.52800000000064e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 1.4719999999988909e-06, 1.4450000000026941e-06, 2.0689999999969066e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.6949999999994747e-06, 1.8610000000023053e-06, 1.7639999999978506e-06, 1.832999999999696e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.4999999999980307e-06, 1.7360000000021802e-06, 1.985999999998961e-06, 1.77800000000089e-06, 1.8889999999979756e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:00.876" endtime="20201112 10:14:00.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.872" endtime="20201112 10:14:00.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.883" level="INFO">${RESULT} = [{'time': 0.018193222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.040999999997767e-06, 'source_diff': 2.040999999997767e-06}, {'time': 0.018196556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:00.880" endtime="20201112 10:14:00.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:00.891" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.040999999997767e-06, 1.6389999999977256e-06, 1.4449999999992247e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.4719999999988909e-06, 1.6809999999999048e-06, 1.7920000000004599e-...</msg>
<status status="PASS" starttime="20201112 10:14:00.884" endtime="20201112 10:14:00.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.895" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:00.894" endtime="20201112 10:14:00.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.897" level="INFO">VALUE: [2.040999999997767e-06, 1.6389999999977256e-06, 1.4449999999992247e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.4719999999988909e-06, 1.6809999999999048e-06, 1.7920000000004599e-06, 1.8889999999979756e-06, 1.6800000000004311e-06, 1.931000000000155e-06, 1.931000000000155e-06, 1.7919999999969904e-06, 1.7359999999987108e-06, 1.52800000000064e-06, 1.76400000000132e-06, 1.4719999999988909e-06, 2.0689999999969066e-06, 1.6660000000008612e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.7639999999978506e-06, 1.4999999999980307e-06, 1.985999999998961e-06, 1.8889999999979756e-06]</msg>
<status status="PASS" starttime="20201112 10:14:00.896" endtime="20201112 10:14:00.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.892" endtime="20201112 10:14:00.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.901" endtime="20201112 10:14:00.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.904" endtime="20201112 10:14:00.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.903" endtime="20201112 10:14:00.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.899" endtime="20201112 10:14:00.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.544" endtime="20201112 10:14:00.925"></status>
</kw>
<msg timestamp="20201112 10:14:00.925" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.932" endtime="20201112 10:14:00.941"></status>
</kw>
<msg timestamp="20201112 10:14:00.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.931" endtime="20201112 10:14:00.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.943" endtime="20201112 10:14:00.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.945" endtime="20201112 10:14:00.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.928" endtime="20201112 10:14:00.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.927" endtime="20201112 10:14:00.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.954" endtime="20201112 10:14:01.224"></status>
</kw>
<msg timestamp="20201112 10:14:01.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018081083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018082681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.953" endtime="20201112 10:14:01.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018081083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018082681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.227" endtime="20201112 10:14:01.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.232" endtime="20201112 10:14:01.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.950" endtime="20201112 10:14:01.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.948" endtime="20201112 10:14:01.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.238" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:01.237" endtime="20201112 10:14:01.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.242" level="INFO">VALUE: [{'time': 0.018081083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018082681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018084417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018086444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.018088111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018089847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.01809125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018093069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018095097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018096944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018098667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.018100542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018102167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018104194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.01810575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018107264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018108778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018110333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018111931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018113542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.01811525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018117236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018118722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018120403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018122361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018124236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018126111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018127764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018129222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018131236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018133222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018135028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018136625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018138181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018139708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018141486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018143458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018144972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018146875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018148875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018150792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018152583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018154472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018156028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018157806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018159778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018161458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.018163292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.018164778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018166778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:01.239" endtime="20201112 10:14:01.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.235" endtime="20201112 10:14:01.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:01.258" level="INFO">${debug-compressed} = {'source_diff': [0, 1.5979999999984895e-06, 1.7359999999987108e-06, 2.0270000000016664e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.403000000000515e-06, 1.819000000000126e-06, 2.028000000001...</msg>
<status status="PASS" starttime="20201112 10:14:01.244" endtime="20201112 10:14:01.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.262" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:01.261" endtime="20201112 10:14:01.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.265" level="INFO">VALUE: {'source_diff': [0, 1.5979999999984895e-06, 1.7359999999987108e-06, 2.0270000000016664e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.403000000000515e-06, 1.819000000000126e-06, 2.02800000000114e-06, 1.846999999999266e-06, 1.7229999999986145e-06, 1.8750000000018752e-06, 1.6249999999981557e-06, 2.0270000000016664e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5550000000003061e-06, 1.598000000001959e-06, 1.6109999999985858e-06, 1.707999999999571e-06, 1.985999999998961e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.957999999999821e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.653000000000765e-06, 1.457999999999321e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 1.8060000000000298e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.7779999999974205e-06, 1.9720000000028604e-06, 1.5139999999976006e-06, 1.903000000001015e-06, 1.9999999999985307e-06, 1.917000000000585e-06, 1.7910000000009862e-06, 1.889000000001445e-06, 1.5559999999997798e-06, 1.7779999999974205e-06, 1.9720000000028604e-06, 1.6799999999969617e-06, 1.834000000002639e-06, 1.4859999999984608e-06, 2.000000000002e-06], 'eventtime': [0.018081083, 0.018082681, 0.018084417, 0.018086444, 0.018088111, 0.018089847, 0.01809125, 0.018093069, 0.018095097, 0.018096944, 0.018098667, 0.018100542, 0.018102167, 0.018104194, 0.01810575, 0.018107264, 0.018108778, 0.018110333, 0.018111931, 0.018113542, 0.01811525, 0.018117236, 0.018118722, 0.018120403, 0.018122361, 0.018124236, 0.018126111, 0.018127764, 0.018129222, 0.018131236, 0.018133222, 0.018135028, 0.018136625, 0.018138181, 0.018139708, 0.018141486, 0.018143458, 0.018144972, 0.018146875, 0.018148875, 0.018150792, 0.018152583, 0.018154472, 0.018156028, 0.018157806, 0.018159778, 0.018161458, 0.018163292, 0.018164778, 0.018166778], 'diff': [0, 1.5979999999984895e-06, 1.7359999999987108e-06, 2.0270000000016664e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.403000000000515e-06, 1.819000000000126e-06, 2.02800000000114e-06, 1.846999999999266e-06, 1.7229999999986145e-06, 1.8750000000018752e-06, 1.6249999999981557e-06, 2.0270000000016664e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5550000000003061e-06, 1.598000000001959e-06, 1.6109999999985858e-06, 1.707999999999571e-06, 1.985999999998961e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.957999999999821e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.653000000000765e-06, 1.457999999999321e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 1.8060000000000298e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.7779999999974205e-06, 1.9720000000028604e-06, 1.5139999999976006e-06, 1.903000000001015e-06, 1.9999999999985307e-06, 1.917000000000585e-06, 1.7910000000009862e-06, 1.889000000001445e-06, 1.5559999999997798e-06, 1.7779999999974205e-06, 1.9720000000028604e-06, 1.6799999999969617e-06, 1.834000000002639e-06, 1.4859999999984608e-06, 2.000000000002e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:01.263" endtime="20201112 10:14:01.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.259" endtime="20201112 10:14:01.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:01.269" level="INFO">${RESULT} = [{'time': 0.018082681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018086444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:01.267" endtime="20201112 10:14:01.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:01.277" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.5979999999984895e-06, 2.0270000000016664e-06, 1.7359999999987108e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 2.0270000000016664e-06, 1.51400000000107e...</msg>
<status status="PASS" starttime="20201112 10:14:01.270" endtime="20201112 10:14:01.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.281" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:01.280" endtime="20201112 10:14:01.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.284" level="INFO">VALUE: [1.5979999999984895e-06, 2.0270000000016664e-06, 1.7359999999987108e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 2.0270000000016664e-06, 1.51400000000107e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.985999999998961e-06, 1.6809999999999048e-06, 1.8749999999984057e-06, 1.653000000000765e-06, 2.0139999999981006e-06, 1.8060000000000298e-06, 1.5559999999997798e-06, 1.7779999999974205e-06, 1.5139999999976006e-06, 1.9999999999985307e-06, 1.7910000000009862e-06, 1.5559999999997798e-06, 1.9720000000028604e-06, 1.834000000002639e-06, 2.000000000002e-06]</msg>
<status status="PASS" starttime="20201112 10:14:01.283" endtime="20201112 10:14:01.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.278" endtime="20201112 10:14:01.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.287" endtime="20201112 10:14:01.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:01.291" endtime="20201112 10:14:01.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.289" endtime="20201112 10:14:01.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.286" endtime="20201112 10:14:01.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.926" endtime="20201112 10:14:01.311"></status>
</kw>
<msg timestamp="20201112 10:14:01.311" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.319" endtime="20201112 10:14:01.328"></status>
</kw>
<msg timestamp="20201112 10:14:01.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.317" endtime="20201112 10:14:01.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.331" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.330" endtime="20201112 10:14:01.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.332" endtime="20201112 10:14:01.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.315" endtime="20201112 10:14:01.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.313" endtime="20201112 10:14:01.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.341" endtime="20201112 10:14:01.610"></status>
</kw>
<msg timestamp="20201112 10:14:01.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018095556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.340" endtime="20201112 10:14:01.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018095556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.612" endtime="20201112 10:14:01.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.618" endtime="20201112 10:14:01.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.337" endtime="20201112 10:14:01.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.335" endtime="20201112 10:14:01.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.625" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:01.624" endtime="20201112 10:14:01.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.629" level="INFO">VALUE: [{'time': 0.018095556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.018099333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3189999999971567e-06, 'source_diff': 2.3189999999971567e-06}, {'time': 0.018100931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018102806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018104583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018106292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018108222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018110222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018112167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018113764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.01811525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018117056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018118542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018120431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018122056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018123944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.887999999998502e-06, 'source_diff': 1.887999999998502e-06}, {'time': 0.018125847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018127306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018129139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018130986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018132514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018134042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018135569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.01813725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018138917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018140514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018141958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018144222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.018145681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018147667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018149597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018151639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.018153569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018155569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018157097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018158597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018160389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018161889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018163389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018164972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018166694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018168653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018170319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018171847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018173583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018175208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018177028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018178778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018180403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:01.626" endtime="20201112 10:14:01.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.622" endtime="20201112 10:14:01.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:01.644" level="INFO">${debug-compressed} = {'source_diff': [0, 1.4580000000027904e-06, 2.3189999999971567e-06, 1.598000000001959e-06, 1.8749999999984057e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.999999999998...</msg>
<status status="PASS" starttime="20201112 10:14:01.631" endtime="20201112 10:14:01.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.647" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:01.646" endtime="20201112 10:14:01.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.650" level="INFO">VALUE: {'source_diff': [0, 1.4580000000027904e-06, 2.3189999999971567e-06, 1.598000000001959e-06, 1.8749999999984057e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.9999999999985307e-06, 1.9449999999997247e-06, 1.5970000000024853e-06, 1.4859999999984608e-06, 1.8060000000000298e-06, 1.4860000000019302e-06, 1.8889999999979756e-06, 1.6250000000016251e-06, 1.887999999998502e-06, 1.903000000001015e-06, 1.4589999999987946e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.443999999999751e-06, 2.26400000000182e-06, 1.4589999999987946e-06, 1.985999999998961e-06, 1.930000000000681e-06, 2.04200000000071e-06, 1.930000000000681e-06, 1.9999999999985307e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.7920000000004599e-06, 1.5000000000015001e-06, 1.4999999999980307e-06, 1.5830000000029154e-06, 1.7219999999991409e-06, 1.9589999999992946e-06, 1.6660000000008612e-06, 1.52800000000064e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.8199999999995997e-06, 1.7499999999982807e-06, 1.6250000000016251e-06], 'eventtime': [0.018095556, 0.018097014, 0.018099333, 0.018100931, 0.018102806, 0.018104583, 0.018106292, 0.018108222, 0.018110222, 0.018112167, 0.018113764, 0.01811525, 0.018117056, 0.018118542, 0.018120431, 0.018122056, 0.018123944, 0.018125847, 0.018127306, 0.018129139, 0.018130986, 0.018132514, 0.018134042, 0.018135569, 0.01813725, 0.018138917, 0.018140514, 0.018141958, 0.018144222, 0.018145681, 0.018147667, 0.018149597, 0.018151639, 0.018153569, 0.018155569, 0.018157097, 0.018158597, 0.018160389, 0.018161889, 0.018163389, 0.018164972, 0.018166694, 0.018168653, 0.018170319, 0.018171847, 0.018173583, 0.018175208, 0.018177028, 0.018178778, 0.018180403], 'diff': [0, 1.4580000000027904e-06, 2.3189999999971567e-06, 1.598000000001959e-06, 1.8749999999984057e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.9999999999985307e-06, 1.9449999999997247e-06, 1.5970000000024853e-06, 1.4859999999984608e-06, 1.8060000000000298e-06, 1.4860000000019302e-06, 1.8889999999979756e-06, 1.6250000000016251e-06, 1.887999999998502e-06, 1.903000000001015e-06, 1.4589999999987946e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.443999999999751e-06, 2.26400000000182e-06, 1.4589999999987946e-06, 1.985999999998961e-06, 1.930000000000681e-06, 2.04200000000071e-06, 1.930000000000681e-06, 1.9999999999985307e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.7920000000004599e-06, 1.5000000000015001e-06, 1.4999999999980307e-06, 1.5830000000029154e-06, 1.7219999999991409e-06, 1.9589999999992946e-06, 1.6660000000008612e-06, 1.52800000000064e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.8199999999995997e-06, 1.7499999999982807e-06, 1.6250000000016251e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:01.648" endtime="20201112 10:14:01.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.645" endtime="20201112 10:14:01.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:01.655" level="INFO">${RESULT} = [{'time': 0.018097014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.018100931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:01.652" endtime="20201112 10:14:01.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:01.663" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.4580000000027904e-06, 1.598000000001959e-06, 1.7770000000014163e-06, 1.930000000000681e-06, 1.9449999999997247e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.625000000001625...</msg>
<status status="PASS" starttime="20201112 10:14:01.656" endtime="20201112 10:14:01.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.667" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:01.666" endtime="20201112 10:14:01.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.669" level="INFO">VALUE: [1.4580000000027904e-06, 1.598000000001959e-06, 1.7770000000014163e-06, 1.930000000000681e-06, 1.9449999999997247e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.6250000000016251e-06, 1.903000000001015e-06, 1.832999999999696e-06, 1.5279999999971705e-06, 1.5270000000011663e-06, 1.6670000000003349e-06, 1.443999999999751e-06, 1.4589999999987946e-06, 1.930000000000681e-06, 1.930000000000681e-06, 1.52800000000064e-06, 1.7920000000004599e-06, 1.4999999999980307e-06, 1.7219999999991409e-06, 1.6660000000008612e-06, 1.7359999999987108e-06, 1.8199999999995997e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201112 10:14:01.668" endtime="20201112 10:14:01.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.664" endtime="20201112 10:14:01.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.673" endtime="20201112 10:14:01.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:01.676" endtime="20201112 10:14:01.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.675" endtime="20201112 10:14:01.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.671" endtime="20201112 10:14:01.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.312" endtime="20201112 10:14:01.697"></status>
</kw>
<msg timestamp="20201112 10:14:01.697" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.704" endtime="20201112 10:14:01.714"></status>
</kw>
<msg timestamp="20201112 10:14:01.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.703" endtime="20201112 10:14:01.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.717" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.716" endtime="20201112 10:14:01.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.718" endtime="20201112 10:14:01.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.700" endtime="20201112 10:14:01.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.699" endtime="20201112 10:14:01.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.728" endtime="20201112 10:14:01.992"></status>
</kw>
<msg timestamp="20201112 10:14:01.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018188778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018190306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.726" endtime="20201112 10:14:01.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018188778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018190306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.995" endtime="20201112 10:14:02.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.001" endtime="20201112 10:14:02.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.723" endtime="20201112 10:14:02.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.721" endtime="20201112 10:14:02.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.007" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:02.006" endtime="20201112 10:14:02.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.011" level="INFO">VALUE: [{'time': 0.018188778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018190306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018193708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018195347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018196861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018198722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018200347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018202111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018203889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018205903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018207417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018209194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018210708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.0182125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018213917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018215833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018217403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018219139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018220819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018222708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018224667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018226167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018228083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018229903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018231833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018233347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018234931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018236486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018237972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018239653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018241653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018243264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018244833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018246694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018248583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018250222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018251861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018253486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.0182555, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018257431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018259278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018260722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018262139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018264292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.153000000001265e-06, 'source_diff': 2.153000000001265e-06}, {'time': 0.018266236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018268194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.01827, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018271569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018273333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:02.008" endtime="20201112 10:14:02.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.004" endtime="20201112 10:14:02.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:02.026" level="INFO">${debug-compressed} = {'source_diff': [0, 1.52800000000064e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.51400000000107e-06, 1.8609999999988358e-06, 1.6249999999981557e-06, 1.76400000000132e...</msg>
<status status="PASS" starttime="20201112 10:14:02.013" endtime="20201112 10:14:02.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.030" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:02.029" endtime="20201112 10:14:02.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.033" level="INFO">VALUE: {'source_diff': [0, 1.52800000000064e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.51400000000107e-06, 1.8609999999988358e-06, 1.6249999999981557e-06, 1.76400000000132e-06, 1.77800000000089e-06, 2.0139999999981006e-06, 1.51400000000107e-06, 1.7770000000014163e-06, 1.5139999999976006e-06, 1.7920000000004599e-06, 1.4170000000000849e-06, 1.9160000000011113e-06, 1.5699999999993497e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.889000000001445e-06, 1.9589999999992946e-06, 1.5000000000015001e-06, 1.915999999997642e-06, 1.8199999999995997e-06, 1.930000000000681e-06, 1.51400000000107e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.9999999999985307e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 2.01400000000157e-06, 1.931000000000155e-06, 1.846999999999266e-06, 1.443999999999751e-06, 1.4170000000000849e-06, 2.153000000001265e-06, 1.944000000000251e-06, 1.957999999999821e-06, 1.8060000000000298e-06, 1.568999999999876e-06, 1.7639999999978506e-06], 'eventtime': [0.018188778, 0.018190306, 0.018191986, 0.018193708, 0.018195347, 0.018196861, 0.018198722, 0.018200347, 0.018202111, 0.018203889, 0.018205903, 0.018207417, 0.018209194, 0.018210708, 0.0182125, 0.018213917, 0.018215833, 0.018217403, 0.018219139, 0.018220819, 0.018222708, 0.018224667, 0.018226167, 0.018228083, 0.018229903, 0.018231833, 0.018233347, 0.018234931, 0.018236486, 0.018237972, 0.018239653, 0.018241653, 0.018243264, 0.018244833, 0.018246694, 0.018248583, 0.018250222, 0.018251861, 0.018253486, 0.0182555, 0.018257431, 0.018259278, 0.018260722, 0.018262139, 0.018264292, 0.018266236, 0.018268194, 0.01827, 0.018271569, 0.018273333], 'diff': [0, 1.52800000000064e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.51400000000107e-06, 1.8609999999988358e-06, 1.6249999999981557e-06, 1.76400000000132e-06, 1.77800000000089e-06, 2.0139999999981006e-06, 1.51400000000107e-06, 1.7770000000014163e-06, 1.5139999999976006e-06, 1.7920000000004599e-06, 1.4170000000000849e-06, 1.9160000000011113e-06, 1.5699999999993497e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.889000000001445e-06, 1.9589999999992946e-06, 1.5000000000015001e-06, 1.915999999997642e-06, 1.8199999999995997e-06, 1.930000000000681e-06, 1.51400000000107e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.9999999999985307e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 2.01400000000157e-06, 1.931000000000155e-06, 1.846999999999266e-06, 1.443999999999751e-06, 1.4170000000000849e-06, 2.153000000001265e-06, 1.944000000000251e-06, 1.957999999999821e-06, 1.8060000000000298e-06, 1.568999999999876e-06, 1.7639999999978506e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:02.031" endtime="20201112 10:14:02.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.027" endtime="20201112 10:14:02.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.037" level="INFO">${RESULT} = [{'time': 0.018190306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018193708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:02.034" endtime="20201112 10:14:02.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:02.045" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.52800000000064e-06, 1.7219999999991409e-06, 1.51400000000107e-06, 1.6249999999981557e-06, 1.77800000000089e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.4170000000000849e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:02.038" endtime="20201112 10:14:02.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.049" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:02.048" endtime="20201112 10:14:02.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.051" level="INFO">VALUE: [1.52800000000064e-06, 1.7219999999991409e-06, 1.51400000000107e-06, 1.6249999999981557e-06, 1.77800000000089e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.4170000000000849e-06, 1.5699999999993497e-06, 1.6800000000004311e-06, 1.9589999999992946e-06, 1.915999999997642e-06, 1.930000000000681e-06, 1.5839999999989196e-06, 1.4860000000019302e-06, 1.9999999999985307e-06, 1.568999999999876e-06, 1.8889999999979756e-06, 1.639000000001195e-06, 2.01400000000157e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 1.944000000000251e-06, 1.8060000000000298e-06, 1.7639999999978506e-06]</msg>
<status status="PASS" starttime="20201112 10:14:02.050" endtime="20201112 10:14:02.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.046" endtime="20201112 10:14:02.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.055" endtime="20201112 10:14:02.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.058" endtime="20201112 10:14:02.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.057" endtime="20201112 10:14:02.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.053" endtime="20201112 10:14:02.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.697" endtime="20201112 10:14:02.079"></status>
</kw>
<msg timestamp="20201112 10:14:02.079" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.087" endtime="20201112 10:14:02.096"></status>
</kw>
<msg timestamp="20201112 10:14:02.096" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.085" endtime="20201112 10:14:02.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.099" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.097" endtime="20201112 10:14:02.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.100" endtime="20201112 10:14:02.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.082" endtime="20201112 10:14:02.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.081" endtime="20201112 10:14:02.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.110" endtime="20201112 10:14:02.374"></status>
</kw>
<msg timestamp="20201112 10:14:02.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018228917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018230861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.108" endtime="20201112 10:14:02.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018228917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018230861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.377" endtime="20201112 10:14:02.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.382" endtime="20201112 10:14:02.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.106" endtime="20201112 10:14:02.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.104" endtime="20201112 10:14:02.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.388" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:02.387" endtime="20201112 10:14:02.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.392" level="INFO">VALUE: [{'time': 0.018228917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018230861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018232681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018234236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018235792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018237472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018239083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018241042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018243028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018244556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018246167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018247944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018249667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.018251306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018252764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.018254292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018255917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018257792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018259722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018261653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018263194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018264819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018266375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018268014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018269819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018271486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018273458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018274958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018277014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.018278958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018280611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018282292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018284208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018285681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}, {'time': 0.018287292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018288972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018290417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018292611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.194000000000501e-06, 'source_diff': 2.194000000000501e-06}, {'time': 0.018294472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018296, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018297889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018299819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018301639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8200000000030692e-06, 'source_diff': 1.8200000000030692e-06}, {'time': 0.018303111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018304931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018306778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018308792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018310486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018312153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018313861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:02.389" endtime="20201112 10:14:02.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.385" endtime="20201112 10:14:02.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:02.408" level="INFO">${debug-compressed} = {'source_diff': [0, 1.944000000000251e-06, 1.8199999999995997e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.6800000000004311e-06, 1.6109999999985858e-06, 1.9589999999992946e-06, 1.98600000000...</msg>
<status status="PASS" starttime="20201112 10:14:02.394" endtime="20201112 10:14:02.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.412" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:02.411" endtime="20201112 10:14:02.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.415" level="INFO">VALUE: {'source_diff': [0, 1.944000000000251e-06, 1.8199999999995997e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.6800000000004311e-06, 1.6109999999985858e-06, 1.9589999999992946e-06, 1.9860000000024303e-06, 1.5279999999971705e-06, 1.6110000000020552e-06, 1.7769999999979469e-06, 1.723000000002084e-06, 1.6389999999977256e-06, 1.4580000000027904e-06, 1.5279999999971705e-06, 1.6250000000016251e-06, 1.8749999999984057e-06, 1.930000000000681e-06, 1.931000000000155e-06, 1.5410000000007362e-06, 1.6250000000016251e-06, 1.5559999999997798e-06, 1.6389999999977256e-06, 1.8050000000005562e-06, 1.6670000000003349e-06, 1.971999999999391e-06, 1.5000000000015001e-06, 2.05600000000028e-06, 1.944000000000251e-06, 1.6529999999972955e-06, 1.6809999999999048e-06, 1.9160000000011113e-06, 1.473000000001834e-06, 1.6109999999985858e-06, 1.6800000000004311e-06, 1.4449999999992247e-06, 2.194000000000501e-06, 1.8609999999988358e-06, 1.52800000000064e-06, 1.889000000001445e-06, 1.9299999999972117e-06, 1.8200000000030692e-06, 1.4719999999988909e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 2.01400000000157e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.707999999999571e-06], 'eventtime': [0.018228917, 0.018230861, 0.018232681, 0.018234236, 0.018235792, 0.018237472, 0.018239083, 0.018241042, 0.018243028, 0.018244556, 0.018246167, 0.018247944, 0.018249667, 0.018251306, 0.018252764, 0.018254292, 0.018255917, 0.018257792, 0.018259722, 0.018261653, 0.018263194, 0.018264819, 0.018266375, 0.018268014, 0.018269819, 0.018271486, 0.018273458, 0.018274958, 0.018277014, 0.018278958, 0.018280611, 0.018282292, 0.018284208, 0.018285681, 0.018287292, 0.018288972, 0.018290417, 0.018292611, 0.018294472, 0.018296, 0.018297889, 0.018299819, 0.018301639, 0.018303111, 0.018304931, 0.018306778, 0.018308792, 0.018310486, 0.018312153, 0.018313861], 'diff': [0, 1.944000000000251e-06, 1.8199999999995997e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.6800000000004311e-06, 1.6109999999985858e-06, 1.9589999999992946e-06, 1.9860000000024303e-06, 1.5279999999971705e-06, 1.6110000000020552e-06, 1.7769999999979469e-06, 1.723000000002084e-06, 1.6389999999977256e-06, 1.4580000000027904e-06, 1.5279999999971705e-06, 1.6250000000016251e-06, 1.8749999999984057e-06, 1.930000000000681e-06, 1.931000000000155e-06, 1.5410000000007362e-06, 1.6250000000016251e-06, 1.5559999999997798e-06, 1.6389999999977256e-06, 1.8050000000005562e-06, 1.6670000000003349e-06, 1.971999999999391e-06, 1.5000000000015001e-06, 2.05600000000028e-06, 1.944000000000251e-06, 1.6529999999972955e-06, 1.6809999999999048e-06, 1.9160000000011113e-06, 1.473000000001834e-06, 1.6109999999985858e-06, 1.6800000000004311e-06, 1.4449999999992247e-06, 2.194000000000501e-06, 1.8609999999988358e-06, 1.52800000000064e-06, 1.889000000001445e-06, 1.9299999999972117e-06, 1.8200000000030692e-06, 1.4719999999988909e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 2.01400000000157e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.707999999999571e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 10:14:02.413" endtime="20201112 10:14:02.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.409" endtime="20201112 10:14:02.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.419" level="INFO">${RESULT} = [{'time': 0.018230861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018234236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:02.417" endtime="20201112 10:14:02.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:02.427" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.944000000000251e-06, 1.5550000000003061e-06, 1.6800000000004311e-06, 1.9589999999992946e-06, 1.5279999999971705e-06, 1.7769999999979469e-06, 1.6389999999977256e-06, 1.52799999999717...</msg>
<status status="PASS" starttime="20201112 10:14:02.420" endtime="20201112 10:14:02.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.431" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:02.430" endtime="20201112 10:14:02.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.433" level="INFO">VALUE: [1.944000000000251e-06, 1.5550000000003061e-06, 1.6800000000004311e-06, 1.9589999999992946e-06, 1.5279999999971705e-06, 1.7769999999979469e-06, 1.6389999999977256e-06, 1.5279999999971705e-06, 1.8749999999984057e-06, 1.931000000000155e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.5000000000015001e-06, 1.944000000000251e-06, 1.6809999999999048e-06, 1.473000000001834e-06, 1.6800000000004311e-06, 2.194000000000501e-06, 1.52800000000064e-06, 1.9299999999972117e-06, 1.4719999999988909e-06, 1.846999999999266e-06, 1.694000000000001e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 10:14:02.432" endtime="20201112 10:14:02.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.428" endtime="20201112 10:14:02.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.437" endtime="20201112 10:14:02.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.440" endtime="20201112 10:14:02.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.439" endtime="20201112 10:14:02.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.435" endtime="20201112 10:14:02.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.080" endtime="20201112 10:14:02.461"></status>
</kw>
<msg timestamp="20201112 10:14:02.461" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.469" endtime="20201112 10:14:02.479"></status>
</kw>
<msg timestamp="20201112 10:14:02.480" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.468" endtime="20201112 10:14:02.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.482" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.481" endtime="20201112 10:14:02.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.483" endtime="20201112 10:14:02.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.465" endtime="20201112 10:14:02.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.463" endtime="20201112 10:14:02.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.492" endtime="20201112 10:14:02.760"></status>
</kw>
<msg timestamp="20201112 10:14:02.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018992569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018994417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.491" endtime="20201112 10:14:02.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018992569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018994417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.763" endtime="20201112 10:14:02.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.769" endtime="20201112 10:14:02.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.488" endtime="20201112 10:14:02.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.486" endtime="20201112 10:14:02.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.775" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:02.774" endtime="20201112 10:14:02.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.779" level="INFO">VALUE: [{'time': 0.018992569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018994417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.01899625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018998139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019000042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019001625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019003681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.019005389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019007056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019008903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019010639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019012403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019014028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019016028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.019018028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019019958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019021597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019023292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019024792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019026319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019029986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019033361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.019034986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019036583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019038375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019040208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.019041806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.0190435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019045236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019046903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019048528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019050028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019051653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.0190535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019055347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019057125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019058764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.01906075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.019062486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019064139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019065875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019067486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019069514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.019071542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.019073167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019075014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.019076472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019078014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:02.776" endtime="20201112 10:14:02.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.772" endtime="20201112 10:14:02.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:02.794" level="INFO">${debug-compressed} = {'source_diff': [0, 1.8479999999987395e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.582999999999446e-06, 2.05600000000028e-06, 1.707999999999571e-06, 1.6670000000003349e...</msg>
<status status="PASS" starttime="20201112 10:14:02.781" endtime="20201112 10:14:02.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.798" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:02.797" endtime="20201112 10:14:02.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.801" level="INFO">VALUE: {'source_diff': [0, 1.8479999999987395e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.582999999999446e-06, 2.05600000000028e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.846999999999266e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.6249999999981557e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.930000000000681e-06, 1.639000000001195e-06, 1.6949999999994747e-06, 1.4999999999980307e-06, 1.5270000000011663e-06, 1.6809999999999048e-06, 1.985999999998961e-06, 1.5420000000002099e-06, 1.832999999999696e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.832999999999696e-06, 1.598000000001959e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.5000000000015001e-06, 1.6250000000016251e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.6389999999977256e-06, 1.9860000000024303e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.7359999999987108e-06, 1.6110000000020552e-06, 2.0279999999976706e-06, 2.02800000000114e-06, 1.6249999999981557e-06, 1.8470000000027353e-06, 1.457999999999321e-06, 1.5420000000002099e-06], 'eventtime': [0.018992569, 0.018994417, 0.01899625, 0.018998139, 0.019000042, 0.019001625, 0.019003681, 0.019005389, 0.019007056, 0.019008903, 0.019010639, 0.019012403, 0.019014028, 0.019016028, 0.019018028, 0.019019958, 0.019021597, 0.019023292, 0.019024792, 0.019026319, 0.019028, 0.019029986, 0.019031528, 0.019033361, 0.019034986, 0.019036583, 0.019038375, 0.019040208, 0.019041806, 0.0190435, 0.019045236, 0.019046903, 0.019048528, 0.019050028, 0.019051653, 0.0190535, 0.019055347, 0.019057125, 0.019058764, 0.01906075, 0.019062486, 0.019064139, 0.019065875, 0.019067486, 0.019069514, 0.019071542, 0.019073167, 0.019075014, 0.019076472, 0.019078014], 'diff': [0, 1.8479999999987395e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.582999999999446e-06, 2.05600000000028e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.846999999999266e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.6249999999981557e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.930000000000681e-06, 1.639000000001195e-06, 1.6949999999994747e-06, 1.4999999999980307e-06, 1.5270000000011663e-06, 1.6809999999999048e-06, 1.985999999998961e-06, 1.5420000000002099e-06, 1.832999999999696e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.832999999999696e-06, 1.598000000001959e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.5000000000015001e-06, 1.6250000000016251e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.6389999999977256e-06, 1.9860000000024303e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.7359999999987108e-06, 1.6110000000020552e-06, 2.0279999999976706e-06, 2.02800000000114e-06, 1.6249999999981557e-06, 1.8470000000027353e-06, 1.457999999999321e-06, 1.5420000000002099e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:02.799" endtime="20201112 10:14:02.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.795" endtime="20201112 10:14:02.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.805" level="INFO">${RESULT} = [{'time': 0.018994417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018998139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:02.802" endtime="20201112 10:14:02.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:02.813" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.8479999999987395e-06, 1.889000000001445e-06, 1.582999999999446e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.76400000000132e-06, 2.000000000002e-06, 1.930000000000681e-06, 1....</msg>
<status status="PASS" starttime="20201112 10:14:02.806" endtime="20201112 10:14:02.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.817" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:02.816" endtime="20201112 10:14:02.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.819" level="INFO">VALUE: [1.8479999999987395e-06, 1.889000000001445e-06, 1.582999999999446e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.76400000000132e-06, 2.000000000002e-06, 1.930000000000681e-06, 1.6949999999994747e-06, 1.5270000000011663e-06, 1.985999999998961e-06, 1.832999999999696e-06, 1.5969999999990159e-06, 1.832999999999696e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.5000000000015001e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.9860000000024303e-06, 1.653000000000765e-06, 1.6110000000020552e-06, 2.02800000000114e-06, 1.8470000000027353e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201112 10:14:02.818" endtime="20201112 10:14:02.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.814" endtime="20201112 10:14:02.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.823" endtime="20201112 10:14:02.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.826" endtime="20201112 10:14:02.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.825" endtime="20201112 10:14:02.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.821" endtime="20201112 10:14:02.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.462" endtime="20201112 10:14:02.847"></status>
</kw>
<msg timestamp="20201112 10:14:02.848" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.855" endtime="20201112 10:14:02.865"></status>
</kw>
<msg timestamp="20201112 10:14:02.865" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.854" endtime="20201112 10:14:02.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.868" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.866" endtime="20201112 10:14:02.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.869" endtime="20201112 10:14:02.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.851" endtime="20201112 10:14:02.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.849" endtime="20201112 10:14:02.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.878" endtime="20201112 10:14:03.146"></status>
</kw>
<msg timestamp="20201112 10:14:03.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018810667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018812194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.876" endtime="20201112 10:14:03.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018810667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018812194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.149" endtime="20201112 10:14:03.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.154" endtime="20201112 10:14:03.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.873" endtime="20201112 10:14:03.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.872" endtime="20201112 10:14:03.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.161" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:03.160" endtime="20201112 10:14:03.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.164" level="INFO">VALUE: [{'time': 0.018810667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018812194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018813944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018815486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018817236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018819222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018820889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018822389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018823917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018825653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018827389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018829403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018831167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018832681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018834514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018836403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018838139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018840125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018841972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018843778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018845389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018847125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018848778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018850556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018852278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018853736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018855569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018857069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018858611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018860333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018861889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018863694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018865403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018867, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018869042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.018870903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018872625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018874611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018876375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018878264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018880264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018881917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018883889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018885417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018887278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018889181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018890708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5269999999976969e-06, 'source_diff': 1.5269999999976969e-06}, {'time': 0.018892569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018894542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.018896222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:03.162" endtime="20201112 10:14:03.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.158" endtime="20201112 10:14:03.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:03.180" level="INFO">${debug-compressed} = {'source_diff': [0, 1.5270000000011663e-06, 1.7499999999982807e-06, 1.5420000000002099e-06, 1.7500000000017502e-06, 1.985999999998961e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.52800000000...</msg>
<status status="PASS" starttime="20201112 10:14:03.167" endtime="20201112 10:14:03.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.183" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:03.182" endtime="20201112 10:14:03.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.186" level="INFO">VALUE: {'source_diff': [0, 1.5270000000011663e-06, 1.7499999999982807e-06, 1.5420000000002099e-06, 1.7500000000017502e-06, 1.985999999998961e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.7639999999978506e-06, 1.51400000000107e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.985999999998961e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.457999999999321e-06, 1.832999999999696e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.7219999999991409e-06, 1.5559999999997798e-06, 1.8050000000005562e-06, 1.7089999999990446e-06, 1.5969999999990159e-06, 2.04200000000071e-06, 1.8610000000023053e-06, 1.7219999999991409e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.8889999999979756e-06, 2.000000000002e-06, 1.653000000000765e-06, 1.971999999999391e-06, 1.52800000000064e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.5269999999976969e-06, 1.8610000000023053e-06, 1.9729999999988646e-06, 1.6800000000004311e-06], 'eventtime': [0.018810667, 0.018812194, 0.018813944, 0.018815486, 0.018817236, 0.018819222, 0.018820889, 0.018822389, 0.018823917, 0.018825653, 0.018827389, 0.018829403, 0.018831167, 0.018832681, 0.018834514, 0.018836403, 0.018838139, 0.018840125, 0.018841972, 0.018843778, 0.018845389, 0.018847125, 0.018848778, 0.018850556, 0.018852278, 0.018853736, 0.018855569, 0.018857069, 0.018858611, 0.018860333, 0.018861889, 0.018863694, 0.018865403, 0.018867, 0.018869042, 0.018870903, 0.018872625, 0.018874611, 0.018876375, 0.018878264, 0.018880264, 0.018881917, 0.018883889, 0.018885417, 0.018887278, 0.018889181, 0.018890708, 0.018892569, 0.018894542, 0.018896222], 'diff': [0, 1.5270000000011663e-06, 1.7499999999982807e-06, 1.5420000000002099e-06, 1.7500000000017502e-06, 1.985999999998961e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.7639999999978506e-06, 1.51400000000107e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.985999999998961e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.457999999999321e-06, 1.832999999999696e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.7219999999991409e-06, 1.5559999999997798e-06, 1.8050000000005562e-06, 1.7089999999990446e-06, 1.5969999999990159e-06, 2.04200000000071e-06, 1.8610000000023053e-06, 1.7219999999991409e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.8889999999979756e-06, 2.000000000002e-06, 1.653000000000765e-06, 1.971999999999391e-06, 1.52800000000064e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.5269999999976969e-06, 1.8610000000023053e-06, 1.9729999999988646e-06, 1.6800000000004311e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:03.184" endtime="20201112 10:14:03.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.180" endtime="20201112 10:14:03.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.191" level="INFO">${RESULT} = [{'time': 0.018812194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018815486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:03.188" endtime="20201112 10:14:03.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:03.199" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.5270000000011663e-06, 1.5420000000002099e-06, 1.985999999998961e-06, 1.4999999999980307e-06, 1.7360000000021802e-06, 2.01400000000157e-06, 1.51400000000107e-06, 1.889000000001445e-0...</msg>
<status status="PASS" starttime="20201112 10:14:03.192" endtime="20201112 10:14:03.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.204" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:03.203" endtime="20201112 10:14:03.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.206" level="INFO">VALUE: [1.5270000000011663e-06, 1.5420000000002099e-06, 1.985999999998961e-06, 1.4999999999980307e-06, 1.7360000000021802e-06, 2.01400000000157e-06, 1.51400000000107e-06, 1.889000000001445e-06, 1.985999999998961e-06, 1.8060000000000298e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.457999999999321e-06, 1.5000000000015001e-06, 1.7219999999991409e-06, 1.8050000000005562e-06, 1.5969999999990159e-06, 1.8610000000023053e-06, 1.985999999998961e-06, 1.8889999999979756e-06, 1.653000000000765e-06, 1.52800000000064e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.6800000000004311e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.205" endtime="20201112 10:14:03.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.200" endtime="20201112 10:14:03.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.210" endtime="20201112 10:14:03.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.214" endtime="20201112 10:14:03.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.212" endtime="20201112 10:14:03.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.208" endtime="20201112 10:14:03.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.848" endtime="20201112 10:14:03.235"></status>
</kw>
<msg timestamp="20201112 10:14:03.235" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.242" endtime="20201112 10:14:03.252"></status>
</kw>
<msg timestamp="20201112 10:14:03.253" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.241" endtime="20201112 10:14:03.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.255" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.254" endtime="20201112 10:14:03.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.256" endtime="20201112 10:14:03.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.238" endtime="20201112 10:14:03.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.237" endtime="20201112 10:14:03.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.265" endtime="20201112 10:14:03.527"></status>
</kw>
<msg timestamp="20201112 10:14:03.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018204931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018206833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.263" endtime="20201112 10:14:03.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018204931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018206833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.530" endtime="20201112 10:14:03.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.535" endtime="20201112 10:14:03.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.261" endtime="20201112 10:14:03.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.259" endtime="20201112 10:14:03.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.542" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:03.541" endtime="20201112 10:14:03.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.545" level="INFO">VALUE: [{'time': 0.018204931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018206833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.018208514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018210319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018211903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018213917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.01821575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018217639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018219181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018220778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018222681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018224292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018225764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018227764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018229333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018231361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018233403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0419999999972405e-06, 'source_diff': 2.0419999999972405e-06}, {'time': 0.01823525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018236958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018238986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018240944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018242611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018244153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.01824575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018247208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018249167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018250625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018252472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.01825425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018256083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018258042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018259792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018261417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018263222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018265194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018266847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018268708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018270514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018272431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018274125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018275931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018277861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018279889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018281569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.01828325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018285264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018287194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018288792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.0182905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018292458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:03.543" endtime="20201112 10:14:03.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.538" endtime="20201112 10:14:03.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:03.561" level="INFO">${debug-compressed} = {'source_diff': [0, 1.901999999998072e-06, 1.6809999999999048e-06, 1.8050000000005562e-06, 1.584000000002389e-06, 2.0139999999981006e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.54200000000020...</msg>
<status status="PASS" starttime="20201112 10:14:03.547" endtime="20201112 10:14:03.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.565" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:03.564" endtime="20201112 10:14:03.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.568" level="INFO">VALUE: {'source_diff': [0, 1.901999999998072e-06, 1.6809999999999048e-06, 1.8050000000005562e-06, 1.584000000002389e-06, 2.0139999999981006e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.903000000001015e-06, 1.6109999999985858e-06, 1.4719999999988909e-06, 2.000000000002e-06, 1.568999999999876e-06, 2.02800000000114e-06, 2.0419999999972405e-06, 1.8470000000027353e-06, 1.707999999999571e-06, 2.0279999999976706e-06, 1.957999999999821e-06, 1.6670000000003349e-06, 1.5420000000002099e-06, 1.5970000000024853e-06, 1.457999999999321e-06, 1.9589999999992946e-06, 1.457999999999321e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.832999999999696e-06, 1.9589999999992946e-06, 1.7500000000017502e-06, 1.6249999999981557e-06, 1.8050000000005562e-06, 1.971999999999391e-06, 1.653000000000765e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.9169999999971155e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.930000000000681e-06, 2.02800000000114e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 2.0139999999981006e-06, 1.930000000000681e-06, 1.598000000001959e-06, 1.707999999999571e-06, 1.957999999999821e-06], 'eventtime': [0.018204931, 0.018206833, 0.018208514, 0.018210319, 0.018211903, 0.018213917, 0.01821575, 0.018217639, 0.018219181, 0.018220778, 0.018222681, 0.018224292, 0.018225764, 0.018227764, 0.018229333, 0.018231361, 0.018233403, 0.01823525, 0.018236958, 0.018238986, 0.018240944, 0.018242611, 0.018244153, 0.01824575, 0.018247208, 0.018249167, 0.018250625, 0.018252472, 0.01825425, 0.018256083, 0.018258042, 0.018259792, 0.018261417, 0.018263222, 0.018265194, 0.018266847, 0.018268708, 0.018270514, 0.018272431, 0.018274125, 0.018275931, 0.018277861, 0.018279889, 0.018281569, 0.01828325, 0.018285264, 0.018287194, 0.018288792, 0.0182905, 0.018292458], 'diff': [0, 1.901999999998072e-06, 1.6809999999999048e-06, 1.8050000000005562e-06, 1.584000000002389e-06, 2.0139999999981006e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.903000000001015e-06, 1.6109999999985858e-06, 1.4719999999988909e-06, 2.000000000002e-06, 1.568999999999876e-06, 2.02800000000114e-06, 2.0419999999972405e-06, 1.8470000000027353e-06, 1.707999999999571e-06, 2.0279999999976706e-06, 1.957999999999821e-06, 1.6670000000003349e-06, 1.5420000000002099e-06, 1.5970000000024853e-06, 1.457999999999321e-06, 1.9589999999992946e-06, 1.457999999999321e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.832999999999696e-06, 1.9589999999992946e-06, 1.7500000000017502e-06, 1.6249999999981557e-06, 1.8050000000005562e-06, 1.971999999999391e-06, 1.653000000000765e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.9169999999971155e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.930000000000681e-06, 2.02800000000114e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 2.0139999999981006e-06, 1.930000000000681e-06, 1.598000000001959e-06, 1.707999999999571e-06, 1.957999999999821e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 10:14:03.566" endtime="20201112 10:14:03.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.562" endtime="20201112 10:14:03.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.573" level="INFO">${RESULT} = [{'time': 0.018206833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.018210319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.570" endtime="20201112 10:14:03.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:03.581" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.901999999998072e-06, 1.8050000000005562e-06, 2.0139999999981006e-06, 1.889000000001445e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 2.000000000002e-06, 2.02800000000114e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:03.574" endtime="20201112 10:14:03.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.585" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:03.584" endtime="20201112 10:14:03.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.587" level="INFO">VALUE: [1.901999999998072e-06, 1.8050000000005562e-06, 2.0139999999981006e-06, 1.889000000001445e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 2.000000000002e-06, 2.02800000000114e-06, 1.8470000000027353e-06, 2.0279999999976706e-06, 1.6670000000003349e-06, 1.5970000000024853e-06, 1.9589999999992946e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 1.694000000000001e-06, 1.930000000000681e-06, 1.6800000000004311e-06, 2.0139999999981006e-06, 1.598000000001959e-06, 1.957999999999821e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.586" endtime="20201112 10:14:03.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.582" endtime="20201112 10:14:03.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.591" endtime="20201112 10:14:03.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.594" endtime="20201112 10:14:03.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.593" endtime="20201112 10:14:03.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.589" endtime="20201112 10:14:03.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.236" endtime="20201112 10:14:03.615"></status>
</kw>
<msg timestamp="20201112 10:14:03.615" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.622" endtime="20201112 10:14:03.632"></status>
</kw>
<msg timestamp="20201112 10:14:03.633" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.621" endtime="20201112 10:14:03.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.634" endtime="20201112 10:14:03.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.636" endtime="20201112 10:14:03.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.618" endtime="20201112 10:14:03.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.617" endtime="20201112 10:14:03.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.645" endtime="20201112 10:14:03.914"></status>
</kw>
<msg timestamp="20201112 10:14:03.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018105264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.644" endtime="20201112 10:14:03.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018105264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.917" endtime="20201112 10:14:03.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.922" endtime="20201112 10:14:03.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.641" endtime="20201112 10:14:03.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.639" endtime="20201112 10:14:03.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.930" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:03.929" endtime="20201112 10:14:03.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.933" level="INFO">VALUE: [{'time': 0.018105264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018108681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018110347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.018111861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018113431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018115056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018116819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.762999999998377e-06, 'source_diff': 1.762999999998377e-06}, {'time': 0.018118875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.018120403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018122417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018124222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018126014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018127764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018129569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018131319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018133028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018134986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018136861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018138653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018140639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018142319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018143833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018145861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018147375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018149319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018151056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.018152569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.018154083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018156014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018157667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018159514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018161486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018163472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018165444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018166903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018168542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018170361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018172028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018173792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018175722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018177694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018179708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018181306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018182875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018184667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018186486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018187972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018189708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018191597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:03.931" endtime="20201112 10:14:03.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.927" endtime="20201112 10:14:03.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:03.948" level="INFO">${debug-compressed} = {'source_diff': [0, 1.6110000000020552e-06, 1.8060000000000298e-06, 1.6659999999973918e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.6250000000016251e-06, 1.762999999998377e-06, 2.0560000000002...</msg>
<status status="PASS" starttime="20201112 10:14:03.936" endtime="20201112 10:14:03.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.952" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:03.951" endtime="20201112 10:14:03.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.955" level="INFO">VALUE: {'source_diff': [0, 1.6110000000020552e-06, 1.8060000000000298e-06, 1.6659999999973918e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.6250000000016251e-06, 1.762999999998377e-06, 2.05600000000028e-06, 1.52800000000064e-06, 2.0139999999981006e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.7499999999982807e-06, 1.7089999999990446e-06, 1.957999999999821e-06, 1.8750000000018752e-06, 1.7920000000004599e-06, 1.985999999998961e-06, 1.6800000000004311e-06, 1.51400000000107e-06, 2.0279999999976706e-06, 1.51400000000107e-06, 1.944000000000251e-06, 1.7369999999981844e-06, 1.5130000000015964e-06, 1.51400000000107e-06, 1.931000000000155e-06, 1.6529999999972955e-06, 1.8470000000027353e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.971999999999391e-06, 1.459000000002264e-06, 1.6389999999977256e-06, 1.819000000000126e-06, 1.6670000000003349e-06, 1.76400000000132e-06, 1.9299999999972117e-06, 1.9720000000028604e-06, 2.0139999999981006e-06, 1.598000000001959e-06, 1.568999999999876e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.4859999999984608e-06, 1.7359999999987108e-06, 1.889000000001445e-06], 'eventtime': [0.018105264, 0.018106875, 0.018108681, 0.018110347, 0.018111861, 0.018113431, 0.018115056, 0.018116819, 0.018118875, 0.018120403, 0.018122417, 0.018124222, 0.018126014, 0.018127764, 0.018129569, 0.018131319, 0.018133028, 0.018134986, 0.018136861, 0.018138653, 0.018140639, 0.018142319, 0.018143833, 0.018145861, 0.018147375, 0.018149319, 0.018151056, 0.018152569, 0.018154083, 0.018156014, 0.018157667, 0.018159514, 0.018161486, 0.018163472, 0.018165444, 0.018166903, 0.018168542, 0.018170361, 0.018172028, 0.018173792, 0.018175722, 0.018177694, 0.018179708, 0.018181306, 0.018182875, 0.018184667, 0.018186486, 0.018187972, 0.018189708, 0.018191597], 'diff': [0, 1.6110000000020552e-06, 1.8060000000000298e-06, 1.6659999999973918e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.6250000000016251e-06, 1.762999999998377e-06, 2.05600000000028e-06, 1.52800000000064e-06, 2.0139999999981006e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.7499999999982807e-06, 1.7089999999990446e-06, 1.957999999999821e-06, 1.8750000000018752e-06, 1.7920000000004599e-06, 1.985999999998961e-06, 1.6800000000004311e-06, 1.51400000000107e-06, 2.0279999999976706e-06, 1.51400000000107e-06, 1.944000000000251e-06, 1.7369999999981844e-06, 1.5130000000015964e-06, 1.51400000000107e-06, 1.931000000000155e-06, 1.6529999999972955e-06, 1.8470000000027353e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.971999999999391e-06, 1.459000000002264e-06, 1.6389999999977256e-06, 1.819000000000126e-06, 1.6670000000003349e-06, 1.76400000000132e-06, 1.9299999999972117e-06, 1.9720000000028604e-06, 2.0139999999981006e-06, 1.598000000001959e-06, 1.568999999999876e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.4859999999984608e-06, 1.7359999999987108e-06, 1.889000000001445e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:03.953" endtime="20201112 10:14:03.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.949" endtime="20201112 10:14:03.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.960" level="INFO">${RESULT} = [{'time': 0.018106875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018110347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:03.957" endtime="20201112 10:14:03.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:03.968" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.6110000000020552e-06, 1.6659999999973918e-06, 1.5699999999993497e-06, 1.762999999998377e-06, 1.52800000000064e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.7499999999982807...</msg>
<status status="PASS" starttime="20201112 10:14:03.961" endtime="20201112 10:14:03.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.972" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:03.971" endtime="20201112 10:14:03.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.974" level="INFO">VALUE: [1.6110000000020552e-06, 1.6659999999973918e-06, 1.5699999999993497e-06, 1.762999999998377e-06, 1.52800000000064e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.957999999999821e-06, 1.7920000000004599e-06, 1.6800000000004311e-06, 2.0279999999976706e-06, 1.944000000000251e-06, 1.5130000000015964e-06, 1.931000000000155e-06, 1.8470000000027353e-06, 1.985999999998961e-06, 1.459000000002264e-06, 1.819000000000126e-06, 1.76400000000132e-06, 1.9720000000028604e-06, 1.598000000001959e-06, 1.7920000000004599e-06, 1.4859999999984608e-06, 1.889000000001445e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.973" endtime="20201112 10:14:03.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.968" endtime="20201112 10:14:03.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.978" endtime="20201112 10:14:03.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.981" endtime="20201112 10:14:04.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.980" endtime="20201112 10:14:04.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.976" endtime="20201112 10:14:04.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.616" endtime="20201112 10:14:04.002"></status>
</kw>
<msg timestamp="20201112 10:14:04.002" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.010" endtime="20201112 10:14:04.019"></status>
</kw>
<msg timestamp="20201112 10:14:04.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.008" endtime="20201112 10:14:04.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.022" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.021" endtime="20201112 10:14:04.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.023" endtime="20201112 10:14:04.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.006" endtime="20201112 10:14:04.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.004" endtime="20201112 10:14:04.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.033" endtime="20201112 10:14:04.298"></status>
</kw>
<msg timestamp="20201112 10:14:04.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018324, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183255, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201112 10:14:04.032" endtime="20201112 10:14:04.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018324, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183255, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201112 10:14:04.301" endtime="20201112 10:14:04.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.306" endtime="20201112 10:14:04.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.028" endtime="20201112 10:14:04.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.026" endtime="20201112 10:14:04.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.312" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:04.311" endtime="20201112 10:14:04.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.316" level="INFO">VALUE: [{'time': 0.018324, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018327292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.018329181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018331083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018332819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018334625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018336389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018338208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018340194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018341792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018343556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018345083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018346681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018348417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018349972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018351444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018353, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018354625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018356292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018357958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018359667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018361292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018363292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.01836475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018366806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.018368806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018370625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018372514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018374222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018375833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018377347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018379333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018380944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018382778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018384542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018386292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018387972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018389833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018391681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018393389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018394986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018396764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.01839825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018400264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018402125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018404042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018405736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018407375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018409236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:04.314" endtime="20201112 10:14:04.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.309" endtime="20201112 10:14:04.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:04.331" level="INFO">${debug-compressed} = {'source_diff': [0, 1.5000000000015001e-06, 1.7919999999969904e-06, 1.889000000001445e-06, 1.9020000000015413e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.8190000000001...</msg>
<status status="PASS" starttime="20201112 10:14:04.318" endtime="20201112 10:14:04.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.335" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:04.334" endtime="20201112 10:14:04.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.338" level="INFO">VALUE: {'source_diff': [0, 1.5000000000015001e-06, 1.7919999999969904e-06, 1.889000000001445e-06, 1.9020000000015413e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.985999999998961e-06, 1.5979999999984895e-06, 1.76400000000132e-06, 1.5270000000011663e-06, 1.5979999999984895e-06, 1.7359999999987108e-06, 1.5550000000003061e-06, 1.4720000000023603e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.7089999999990446e-06, 1.6250000000016251e-06, 1.9999999999985307e-06, 1.457999999999321e-06, 2.05600000000028e-06, 2.000000000002e-06, 1.819000000000126e-06, 1.8889999999979756e-06, 1.707999999999571e-06, 1.6110000000020552e-06, 1.5139999999976006e-06, 1.9860000000024303e-06, 1.6109999999985858e-06, 1.8339999999991696e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.6800000000004311e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.707999999999571e-06, 1.5969999999990159e-06, 1.77800000000089e-06, 1.4860000000019302e-06, 2.0139999999981006e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.8609999999988358e-06], 'eventtime': [0.018324, 0.0183255, 0.018327292, 0.018329181, 0.018331083, 0.018332819, 0.018334625, 0.018336389, 0.018338208, 0.018340194, 0.018341792, 0.018343556, 0.018345083, 0.018346681, 0.018348417, 0.018349972, 0.018351444, 0.018353, 0.018354625, 0.018356292, 0.018357958, 0.018359667, 0.018361292, 0.018363292, 0.01836475, 0.018366806, 0.018368806, 0.018370625, 0.018372514, 0.018374222, 0.018375833, 0.018377347, 0.018379333, 0.018380944, 0.018382778, 0.018384542, 0.018386292, 0.018387972, 0.018389833, 0.018391681, 0.018393389, 0.018394986, 0.018396764, 0.01839825, 0.018400264, 0.018402125, 0.018404042, 0.018405736, 0.018407375, 0.018409236], 'diff': [0, 1.5000000000015001e-06, 1.7919999999969904e-06, 1.889000000001445e-06, 1.9020000000015413e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.985999999998961e-06, 1.5979999999984895e-06, 1.76400000000132e-06, 1.5270000000011663e-06, 1.5979999999984895e-06, 1.7359999999987108e-06, 1.5550000000003061e-06, 1.4720000000023603e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.7089999999990446e-06, 1.6250000000016251e-06, 1.9999999999985307e-06, 1.457999999999321e-06, 2.05600000000028e-06, 2.000000000002e-06, 1.819000000000126e-06, 1.8889999999979756e-06, 1.707999999999571e-06, 1.6110000000020552e-06, 1.5139999999976006e-06, 1.9860000000024303e-06, 1.6109999999985858e-06, 1.8339999999991696e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.6800000000004311e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.707999999999571e-06, 1.5969999999990159e-06, 1.77800000000089e-06, 1.4860000000019302e-06, 2.0139999999981006e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.8609999999988358e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:04.336" endtime="20201112 10:14:04.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.332" endtime="20201112 10:14:04.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.342" level="INFO">${RESULT} = [{'time': 0.0183255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018329181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:04.340" endtime="20201112 10:14:04.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:04.350" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.5000000000015001e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.5979999999984895e-06, 1.5550000000003061e-0...</msg>
<status status="PASS" starttime="20201112 10:14:04.343" endtime="20201112 10:14:04.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.355" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:04.354" endtime="20201112 10:14:04.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.357" level="INFO">VALUE: [1.5000000000015001e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.5979999999984895e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.6670000000003349e-06, 1.7089999999990446e-06, 1.9999999999985307e-06, 2.05600000000028e-06, 1.819000000000126e-06, 1.707999999999571e-06, 1.5139999999976006e-06, 1.6109999999985858e-06, 1.76400000000132e-06, 1.6800000000004311e-06, 1.8479999999987395e-06, 1.5969999999990159e-06, 1.4860000000019302e-06, 1.8609999999988358e-06, 1.694000000000001e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.356" endtime="20201112 10:14:04.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.351" endtime="20201112 10:14:04.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.360" endtime="20201112 10:14:04.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.363" endtime="20201112 10:14:04.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.362" endtime="20201112 10:14:04.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.359" endtime="20201112 10:14:04.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.003" endtime="20201112 10:14:04.384"></status>
</kw>
<msg timestamp="20201112 10:14:04.384" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.392" endtime="20201112 10:14:04.401"></status>
</kw>
<msg timestamp="20201112 10:14:04.402" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.390" endtime="20201112 10:14:04.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.403" endtime="20201112 10:14:04.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.406" endtime="20201112 10:14:04.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.388" endtime="20201112 10:14:04.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.386" endtime="20201112 10:14:04.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.415" endtime="20201112 10:14:04.680"></status>
</kw>
<msg timestamp="20201112 10:14:04.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018371111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018372833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.414" endtime="20201112 10:14:04.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018371111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018372833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.682" endtime="20201112 10:14:04.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.688" endtime="20201112 10:14:04.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.411" endtime="20201112 10:14:04.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.409" endtime="20201112 10:14:04.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.694" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:04.693" endtime="20201112 10:14:04.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.698" level="INFO">VALUE: [{'time': 0.018371111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018372833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018374847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018376597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018378306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018380194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.887999999998502e-06, 'source_diff': 1.887999999998502e-06}, {'time': 0.01838175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018383597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.01838525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.01838675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018388444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018390375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018392194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018393889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018395556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.01839725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018399222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018400931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018402944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0130000000020964e-06, 'source_diff': 2.0130000000020964e-06}, {'time': 0.01840475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018406597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018408528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018410056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018411708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.018413667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.959000000002764e-06, 'source_diff': 1.959000000002764e-06}, {'time': 0.018415278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.01841675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018418569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018420403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018422139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018423944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018425583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018427486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018429069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018430556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.018432389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018434292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018436111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018437889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018439583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018441125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018442597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018444514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018446292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018447889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018449528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018451056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018453111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.055000000000806e-06, 'source_diff': 2.055000000000806e-06}, {'time': 0.018454972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018456472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:04.695" endtime="20201112 10:14:04.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.691" endtime="20201112 10:14:04.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:04.714" level="INFO">${debug-compressed} = {'source_diff': [0, 1.7220000000026103e-06, 2.0139999999981006e-06, 1.7500000000017502e-06, 1.7089999999990446e-06, 1.887999999998502e-06, 1.5559999999997798e-06, 1.8470000000027353e-06, 1.65299999999...</msg>
<status status="PASS" starttime="20201112 10:14:04.700" endtime="20201112 10:14:04.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.717" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:04.716" endtime="20201112 10:14:04.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.720" level="INFO">VALUE: {'source_diff': [0, 1.7220000000026103e-06, 2.0139999999981006e-06, 1.7500000000017502e-06, 1.7089999999990446e-06, 1.887999999998502e-06, 1.5559999999997798e-06, 1.8470000000027353e-06, 1.6529999999972955e-06, 1.5000000000015001e-06, 1.694000000000001e-06, 1.931000000000155e-06, 1.819000000000126e-06, 1.6949999999994747e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.971999999999391e-06, 1.7089999999990446e-06, 2.0130000000020964e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.931000000000155e-06, 1.52800000000064e-06, 1.6519999999978219e-06, 1.959000000002764e-06, 1.6109999999985858e-06, 1.4719999999988909e-06, 1.819000000000126e-06, 1.8339999999991696e-06, 1.7360000000021802e-06, 1.8050000000005562e-06, 1.6389999999977256e-06, 1.903000000001015e-06, 1.582999999999446e-06, 1.4870000000014039e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.7779999999974205e-06, 1.694000000000001e-06, 1.5420000000002099e-06, 1.4720000000023603e-06, 1.9169999999971155e-06, 1.77800000000089e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.52800000000064e-06, 2.055000000000806e-06, 1.8609999999988358e-06, 1.5000000000015001e-06], 'eventtime': [0.018371111, 0.018372833, 0.018374847, 0.018376597, 0.018378306, 0.018380194, 0.01838175, 0.018383597, 0.01838525, 0.01838675, 0.018388444, 0.018390375, 0.018392194, 0.018393889, 0.018395556, 0.01839725, 0.018399222, 0.018400931, 0.018402944, 0.01840475, 0.018406597, 0.018408528, 0.018410056, 0.018411708, 0.018413667, 0.018415278, 0.01841675, 0.018418569, 0.018420403, 0.018422139, 0.018423944, 0.018425583, 0.018427486, 0.018429069, 0.018430556, 0.018432389, 0.018434292, 0.018436111, 0.018437889, 0.018439583, 0.018441125, 0.018442597, 0.018444514, 0.018446292, 0.018447889, 0.018449528, 0.018451056, 0.018453111, 0.018454972, 0.018456472], 'diff': [0, 1.7220000000026103e-06, 2.0139999999981006e-06, 1.7500000000017502e-06, 1.7089999999990446e-06, 1.887999999998502e-06, 1.5559999999997798e-06, 1.8470000000027353e-06, 1.6529999999972955e-06, 1.5000000000015001e-06, 1.694000000000001e-06, 1.931000000000155e-06, 1.819000000000126e-06, 1.6949999999994747e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.971999999999391e-06, 1.7089999999990446e-06, 2.0130000000020964e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.931000000000155e-06, 1.52800000000064e-06, 1.6519999999978219e-06, 1.959000000002764e-06, 1.6109999999985858e-06, 1.4719999999988909e-06, 1.819000000000126e-06, 1.8339999999991696e-06, 1.7360000000021802e-06, 1.8050000000005562e-06, 1.6389999999977256e-06, 1.903000000001015e-06, 1.582999999999446e-06, 1.4870000000014039e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.7779999999974205e-06, 1.694000000000001e-06, 1.5420000000002099e-06, 1.4720000000023603e-06, 1.9169999999971155e-06, 1.77800000000089e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.52800000000064e-06, 2.055000000000806e-06, 1.8609999999988358e-06, 1.5000000000015001e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:04.718" endtime="20201112 10:14:04.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.715" endtime="20201112 10:14:04.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.725" level="INFO">${RESULT} = [{'time': 0.018372833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018376597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:04.722" endtime="20201112 10:14:04.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:04.733" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.7220000000026103e-06, 1.7500000000017502e-06, 1.887999999998502e-06, 1.8470000000027353e-06, 1.5000000000015001e-06, 1.931000000000155e-06, 1.6949999999994747e-06, 1.694000000000001...</msg>
<status status="PASS" starttime="20201112 10:14:04.726" endtime="20201112 10:14:04.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.737" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:04.736" endtime="20201112 10:14:04.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.739" level="INFO">VALUE: [1.7220000000026103e-06, 1.7500000000017502e-06, 1.887999999998502e-06, 1.8470000000027353e-06, 1.5000000000015001e-06, 1.931000000000155e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.8060000000000298e-06, 1.931000000000155e-06, 1.6519999999978219e-06, 1.6109999999985858e-06, 1.819000000000126e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.694000000000001e-06, 1.4720000000023603e-06, 1.77800000000089e-06, 1.639000000001195e-06, 2.055000000000806e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.738" endtime="20201112 10:14:04.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.734" endtime="20201112 10:14:04.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.743" endtime="20201112 10:14:04.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.746" endtime="20201112 10:14:04.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.745" endtime="20201112 10:14:04.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.741" endtime="20201112 10:14:04.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.385" endtime="20201112 10:14:04.767"></status>
</kw>
<msg timestamp="20201112 10:14:04.767" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.775" endtime="20201112 10:14:04.785"></status>
</kw>
<msg timestamp="20201112 10:14:04.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.774" endtime="20201112 10:14:04.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.788" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.787" endtime="20201112 10:14:04.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.789" endtime="20201112 10:14:04.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.770" endtime="20201112 10:14:04.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.769" endtime="20201112 10:14:04.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.798" endtime="20201112 10:14:05.061"></status>
</kw>
<msg timestamp="20201112 10:14:05.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019110194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019111847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.797" endtime="20201112 10:14:05.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019110194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019111847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.064" endtime="20201112 10:14:05.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.069" endtime="20201112 10:14:05.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.794" endtime="20201112 10:14:05.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.792" endtime="20201112 10:14:05.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.076" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:05.075" endtime="20201112 10:14:05.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.079" level="INFO">VALUE: [{'time': 0.019110194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019111847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019113625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.019115556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019117264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.01911925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.019121, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.01912275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019124292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019126, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019127875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019129389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019131125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019132889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019134472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019136278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019137778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019139486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019141417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019143319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.019145181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862000000001779e-06, 'source_diff': 1.862000000001779e-06}, {'time': 0.019146917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019148875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019150667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019152194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019153833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019155417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.019157292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019158958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.0191605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019161972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019163833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019165583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019167514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019169403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019171139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019172639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019174292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019176333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.019177931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.019179431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019180847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019182833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019184708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019186514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019187931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4169999999966154e-06, 'source_diff': 1.4169999999966154e-06}, {'time': 0.019189403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.019191333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019192861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.019194764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:05.077" endtime="20201112 10:14:05.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.072" endtime="20201112 10:14:05.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:05.094" level="INFO">${debug-compressed} = {'source_diff': [0, 1.653000000000765e-06, 1.7779999999974205e-06, 1.931000000000155e-06, 1.707999999999571e-06, 1.9860000000024303e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.5420000000002...</msg>
<status status="PASS" starttime="20201112 10:14:05.081" endtime="20201112 10:14:05.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.098" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:05.097" endtime="20201112 10:14:05.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.101" level="INFO">VALUE: {'source_diff': [0, 1.653000000000765e-06, 1.7779999999974205e-06, 1.931000000000155e-06, 1.707999999999571e-06, 1.9860000000024303e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.5420000000002099e-06, 1.707999999999571e-06, 1.8749999999984057e-06, 1.51400000000107e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.582999999999446e-06, 1.8060000000000298e-06, 1.5000000000015001e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.901999999998072e-06, 1.862000000001779e-06, 1.7359999999987108e-06, 1.957999999999821e-06, 1.7920000000004599e-06, 1.5270000000011663e-06, 1.6389999999977256e-06, 1.584000000002389e-06, 1.8749999999984057e-06, 1.6660000000008612e-06, 1.5420000000002099e-06, 1.4719999999988909e-06, 1.8610000000023053e-06, 1.7499999999982807e-06, 1.931000000000155e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.4999999999980307e-06, 1.653000000000765e-06, 2.0410000000012363e-06, 1.5979999999984895e-06, 1.5000000000015001e-06, 1.4160000000006112e-06, 1.985999999998961e-06, 1.8750000000018752e-06, 1.8060000000000298e-06, 1.4169999999966154e-06, 1.4720000000023603e-06, 1.930000000000681e-06, 1.5279999999971705e-06, 1.903000000001015e-06], 'eventtime': [0.019110194, 0.019111847, 0.019113625, 0.019115556, 0.019117264, 0.01911925, 0.019121, 0.01912275, 0.019124292, 0.019126, 0.019127875, 0.019129389, 0.019131125, 0.019132889, 0.019134472, 0.019136278, 0.019137778, 0.019139486, 0.019141417, 0.019143319, 0.019145181, 0.019146917, 0.019148875, 0.019150667, 0.019152194, 0.019153833, 0.019155417, 0.019157292, 0.019158958, 0.0191605, 0.019161972, 0.019163833, 0.019165583, 0.019167514, 0.019169403, 0.019171139, 0.019172639, 0.019174292, 0.019176333, 0.019177931, 0.019179431, 0.019180847, 0.019182833, 0.019184708, 0.019186514, 0.019187931, 0.019189403, 0.019191333, 0.019192861, 0.019194764], 'diff': [0, 1.653000000000765e-06, 1.7779999999974205e-06, 1.931000000000155e-06, 1.707999999999571e-06, 1.9860000000024303e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.5420000000002099e-06, 1.707999999999571e-06, 1.8749999999984057e-06, 1.51400000000107e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.582999999999446e-06, 1.8060000000000298e-06, 1.5000000000015001e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.901999999998072e-06, 1.862000000001779e-06, 1.7359999999987108e-06, 1.957999999999821e-06, 1.7920000000004599e-06, 1.5270000000011663e-06, 1.6389999999977256e-06, 1.584000000002389e-06, 1.8749999999984057e-06, 1.6660000000008612e-06, 1.5420000000002099e-06, 1.4719999999988909e-06, 1.8610000000023053e-06, 1.7499999999982807e-06, 1.931000000000155e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.4999999999980307e-06, 1.653000000000765e-06, 2.0410000000012363e-06, 1.5979999999984895e-06, 1.5000000000015001e-06, 1.4160000000006112e-06, 1.985999999998961e-06, 1.8750000000018752e-06, 1.8060000000000298e-06, 1.4169999999966154e-06, 1.4720000000023603e-06, 1.930000000000681e-06, 1.5279999999971705e-06, 1.903000000001015e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:05.099" endtime="20201112 10:14:05.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.095" endtime="20201112 10:14:05.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.105" level="INFO">${RESULT} = [{'time': 0.019111847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019115556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:05.103" endtime="20201112 10:14:05.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:05.113" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.653000000000765e-06, 1.931000000000155e-06, 1.9860000000024303e-06, 1.7500000000017502e-06, 1.707999999999571e-06, 1.51400000000107e-06, 1.76400000000132e-06, 1.8060000000000298e-06...</msg>
<status status="PASS" starttime="20201112 10:14:05.106" endtime="20201112 10:14:05.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.118" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:05.117" endtime="20201112 10:14:05.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.120" level="INFO">VALUE: [1.653000000000765e-06, 1.931000000000155e-06, 1.9860000000024303e-06, 1.7500000000017502e-06, 1.707999999999571e-06, 1.51400000000107e-06, 1.76400000000132e-06, 1.8060000000000298e-06, 1.707999999999571e-06, 1.901999999998072e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.6389999999977256e-06, 1.8749999999984057e-06, 1.5420000000002099e-06, 1.8610000000023053e-06, 1.931000000000155e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.5979999999984895e-06, 1.4160000000006112e-06, 1.8750000000018752e-06, 1.4169999999966154e-06, 1.930000000000681e-06, 1.903000000001015e-06]</msg>
<status status="PASS" starttime="20201112 10:14:05.119" endtime="20201112 10:14:05.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.114" endtime="20201112 10:14:05.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.123" endtime="20201112 10:14:05.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.127" endtime="20201112 10:14:05.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.125" endtime="20201112 10:14:05.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.122" endtime="20201112 10:14:05.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.767" endtime="20201112 10:14:05.148"></status>
</kw>
<msg timestamp="20201112 10:14:05.148" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.156" endtime="20201112 10:14:05.165"></status>
</kw>
<msg timestamp="20201112 10:14:05.166" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.154" endtime="20201112 10:14:05.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.168" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.167" endtime="20201112 10:14:05.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.169" endtime="20201112 10:14:05.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.152" endtime="20201112 10:14:05.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.150" endtime="20201112 10:14:05.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.178" endtime="20201112 10:14:05.441"></status>
</kw>
<msg timestamp="20201112 10:14:05.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018194111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018196111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.177" endtime="20201112 10:14:05.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018194111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018196111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.444" endtime="20201112 10:14:05.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.450" endtime="20201112 10:14:05.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.174" endtime="20201112 10:14:05.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.172" endtime="20201112 10:14:05.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.456" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:05.455" endtime="20201112 10:14:05.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.459" level="INFO">VALUE: [{'time': 0.018194111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018196111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018198014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.0182, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018201764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018203514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018205528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018207292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018208875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018210361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018212083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018213833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018215375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018217194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018219125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018220625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018222458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018224139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018226111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018228139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018230167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018232194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.018234139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018235847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018237556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018239486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018241403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.01824325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018245194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018246944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018248611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018250222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018252069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018253806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7370000000016539e-06, 'source_diff': 1.7370000000016539e-06}, {'time': 0.018255597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.018257014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018258764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.01826025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018261806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018263806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018265444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.018266903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018268847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018270639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018272111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018273569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018275819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.018277764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018279514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018281153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:05.457" endtime="20201112 10:14:05.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.453" endtime="20201112 10:14:05.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:05.475" level="INFO">${debug-compressed} = {'source_diff': [0, 2.000000000002e-06, 1.9029999999975455e-06, 1.9860000000024303e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.582999999999446e...</msg>
<status status="PASS" starttime="20201112 10:14:05.462" endtime="20201112 10:14:05.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.478" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:05.477" endtime="20201112 10:14:05.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.481" level="INFO">VALUE: {'source_diff': [0, 2.000000000002e-06, 1.9029999999975455e-06, 1.9860000000024303e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.582999999999446e-06, 1.4860000000019302e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.5420000000002099e-06, 1.819000000000126e-06, 1.931000000000155e-06, 1.5000000000015001e-06, 1.832999999999696e-06, 1.6809999999999048e-06, 1.971999999999391e-06, 2.02800000000114e-06, 2.0279999999976706e-06, 2.0270000000016664e-06, 1.9449999999997247e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.944000000000251e-06, 1.7500000000017502e-06, 1.6670000000003349e-06, 1.6109999999985858e-06, 1.846999999999266e-06, 1.7370000000016539e-06, 1.7909999999975168e-06, 1.4170000000000849e-06, 1.7500000000017502e-06, 1.4859999999984608e-06, 1.5559999999997798e-06, 2.000000000002e-06, 1.637999999998252e-06, 1.459000000002264e-06, 1.944000000000251e-06, 1.7920000000004599e-06, 1.4719999999988909e-06, 1.457999999999321e-06, 2.2499999999987808e-06, 1.9449999999997247e-06, 1.7500000000017502e-06, 1.639000000001195e-06], 'eventtime': [0.018194111, 0.018196111, 0.018198014, 0.0182, 0.018201764, 0.018203514, 0.018205528, 0.018207292, 0.018208875, 0.018210361, 0.018212083, 0.018213833, 0.018215375, 0.018217194, 0.018219125, 0.018220625, 0.018222458, 0.018224139, 0.018226111, 0.018228139, 0.018230167, 0.018232194, 0.018234139, 0.018235847, 0.018237556, 0.018239486, 0.018241403, 0.01824325, 0.018245194, 0.018246944, 0.018248611, 0.018250222, 0.018252069, 0.018253806, 0.018255597, 0.018257014, 0.018258764, 0.01826025, 0.018261806, 0.018263806, 0.018265444, 0.018266903, 0.018268847, 0.018270639, 0.018272111, 0.018273569, 0.018275819, 0.018277764, 0.018279514, 0.018281153], 'diff': [0, 2.000000000002e-06, 1.9029999999975455e-06, 1.9860000000024303e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 2.0139999999981006e-06, 1.76400000000132e-06, 1.582999999999446e-06, 1.4860000000019302e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.5420000000002099e-06, 1.819000000000126e-06, 1.931000000000155e-06, 1.5000000000015001e-06, 1.832999999999696e-06, 1.6809999999999048e-06, 1.971999999999391e-06, 2.02800000000114e-06, 2.0279999999976706e-06, 2.0270000000016664e-06, 1.9449999999997247e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.944000000000251e-06, 1.7500000000017502e-06, 1.6670000000003349e-06, 1.6109999999985858e-06, 1.846999999999266e-06, 1.7370000000016539e-06, 1.7909999999975168e-06, 1.4170000000000849e-06, 1.7500000000017502e-06, 1.4859999999984608e-06, 1.5559999999997798e-06, 2.000000000002e-06, 1.637999999998252e-06, 1.459000000002264e-06, 1.944000000000251e-06, 1.7920000000004599e-06, 1.4719999999988909e-06, 1.457999999999321e-06, 2.2499999999987808e-06, 1.9449999999997247e-06, 1.7500000000017502e-06, 1.639000000001195e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:05.479" endtime="20201112 10:14:05.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.476" endtime="20201112 10:14:05.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.486" level="INFO">${RESULT} = [{'time': 0.018196111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.0182, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.986000...</msg>
<status status="PASS" starttime="20201112 10:14:05.483" endtime="20201112 10:14:05.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:05.494" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.000000000002e-06, 1.9860000000024303e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.4860000000019302e-06, 1.7499999999982807e-06, 1.819000000000126e-06, 1.5000000000015001e-06...</msg>
<status status="PASS" starttime="20201112 10:14:05.487" endtime="20201112 10:14:05.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.498" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:05.497" endtime="20201112 10:14:05.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.501" level="INFO">VALUE: [2.000000000002e-06, 1.9860000000024303e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.4860000000019302e-06, 1.7499999999982807e-06, 1.819000000000126e-06, 1.5000000000015001e-06, 1.6809999999999048e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 1.707999999999571e-06, 1.930000000000681e-06, 1.846999999999266e-06, 1.7500000000017502e-06, 1.6109999999985858e-06, 1.7370000000016539e-06, 1.4170000000000849e-06, 1.4859999999984608e-06, 2.000000000002e-06, 1.459000000002264e-06, 1.7920000000004599e-06, 1.457999999999321e-06, 1.9449999999997247e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 10:14:05.499" endtime="20201112 10:14:05.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.495" endtime="20201112 10:14:05.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.504" endtime="20201112 10:14:05.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.507" endtime="20201112 10:14:05.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.506" endtime="20201112 10:14:05.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.502" endtime="20201112 10:14:05.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.149" endtime="20201112 10:14:05.528"></status>
</kw>
<msg timestamp="20201112 10:14:05.528" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.536" endtime="20201112 10:14:05.545"></status>
</kw>
<msg timestamp="20201112 10:14:05.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.534" endtime="20201112 10:14:05.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.547" endtime="20201112 10:14:05.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.549" endtime="20201112 10:14:05.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.532" endtime="20201112 10:14:05.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.530" endtime="20201112 10:14:05.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.558" endtime="20201112 10:14:05.822"></status>
</kw>
<msg timestamp="20201112 10:14:05.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018337514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018339333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.556" endtime="20201112 10:14:05.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018337514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018339333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.825" endtime="20201112 10:14:05.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.830" endtime="20201112 10:14:05.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.554" endtime="20201112 10:14:05.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.552" endtime="20201112 10:14:05.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.836" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:05.835" endtime="20201112 10:14:05.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.840" level="INFO">VALUE: [{'time': 0.018337514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018339333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018341306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.018343167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018344944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.0183465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.0183485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018350514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018352069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018353569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018355097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018357069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018358681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.018360611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018362306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018363889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018365444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018366903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018368583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018370306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.018371944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.018373972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018375417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.018377542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.018378986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018380958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018382458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018384347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018385903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018387375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018389361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018390861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018392583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018394458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018395917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018397403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018399347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018400819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018402625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018404597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018406208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018407986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018409694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018411347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018412986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018414708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018416375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018418278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018419944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018421556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6119999999980594e-06, 'source_diff': 1.6119999999980594e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:05.837" endtime="20201112 10:14:05.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.833" endtime="20201112 10:14:05.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:05.856" level="INFO">${debug-compressed} = {'source_diff': [0, 1.819000000000126e-06, 1.973000000002334e-06, 1.8609999999988358e-06, 1.7769999999979469e-06, 1.5560000000032492e-06, 1.9999999999985307e-06, 2.0139999999981006e-06, 1.555000000000...</msg>
<status status="PASS" starttime="20201112 10:14:05.842" endtime="20201112 10:14:05.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.860" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:05.859" endtime="20201112 10:14:05.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.863" level="INFO">VALUE: {'source_diff': [0, 1.819000000000126e-06, 1.973000000002334e-06, 1.8609999999988358e-06, 1.7769999999979469e-06, 1.5560000000032492e-06, 1.9999999999985307e-06, 2.0139999999981006e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.971999999999391e-06, 1.6120000000015289e-06, 1.9299999999972117e-06, 1.6949999999994747e-06, 1.5830000000029154e-06, 1.5550000000003061e-06, 1.4589999999987946e-06, 1.6800000000004311e-06, 1.7229999999986145e-06, 1.6380000000017214e-06, 2.0279999999976706e-06, 1.4450000000026941e-06, 2.1249999999986557e-06, 1.443999999999751e-06, 1.971999999999391e-06, 1.5000000000015001e-06, 1.8889999999979756e-06, 1.5559999999997798e-06, 1.4720000000023603e-06, 1.985999999998961e-06, 1.5000000000015001e-06, 1.7219999999991409e-06, 1.8749999999984057e-06, 1.459000000002264e-06, 1.4859999999984608e-06, 1.944000000000251e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.9720000000028604e-06, 1.6109999999985858e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.903000000001015e-06, 1.6660000000008612e-06, 1.6119999999980594e-06], 'eventtime': [0.018337514, 0.018339333, 0.018341306, 0.018343167, 0.018344944, 0.0183465, 0.0183485, 0.018350514, 0.018352069, 0.018353569, 0.018355097, 0.018357069, 0.018358681, 0.018360611, 0.018362306, 0.018363889, 0.018365444, 0.018366903, 0.018368583, 0.018370306, 0.018371944, 0.018373972, 0.018375417, 0.018377542, 0.018378986, 0.018380958, 0.018382458, 0.018384347, 0.018385903, 0.018387375, 0.018389361, 0.018390861, 0.018392583, 0.018394458, 0.018395917, 0.018397403, 0.018399347, 0.018400819, 0.018402625, 0.018404597, 0.018406208, 0.018407986, 0.018409694, 0.018411347, 0.018412986, 0.018414708, 0.018416375, 0.018418278, 0.018419944, 0.018421556], 'diff': [0, 1.819000000000126e-06, 1.973000000002334e-06, 1.8609999999988358e-06, 1.7769999999979469e-06, 1.5560000000032492e-06, 1.9999999999985307e-06, 2.0139999999981006e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.971999999999391e-06, 1.6120000000015289e-06, 1.9299999999972117e-06, 1.6949999999994747e-06, 1.5830000000029154e-06, 1.5550000000003061e-06, 1.4589999999987946e-06, 1.6800000000004311e-06, 1.7229999999986145e-06, 1.6380000000017214e-06, 2.0279999999976706e-06, 1.4450000000026941e-06, 2.1249999999986557e-06, 1.443999999999751e-06, 1.971999999999391e-06, 1.5000000000015001e-06, 1.8889999999979756e-06, 1.5559999999997798e-06, 1.4720000000023603e-06, 1.985999999998961e-06, 1.5000000000015001e-06, 1.7219999999991409e-06, 1.8749999999984057e-06, 1.459000000002264e-06, 1.4859999999984608e-06, 1.944000000000251e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.9720000000028604e-06, 1.6109999999985858e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.903000000001015e-06, 1.6660000000008612e-06, 1.6119999999980594e-06], 'source}</msg>
<status status="PASS" starttime="20201112 10:14:05.861" endtime="20201112 10:14:05.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.857" endtime="20201112 10:14:05.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.868" level="INFO">${RESULT} = [{'time': 0.018339333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018343167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:05.865" endtime="20201112 10:14:05.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:05.875" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.819000000000126e-06, 1.8609999999988358e-06, 1.5560000000032492e-06, 2.0139999999981006e-06, 1.5000000000015001e-06, 1.971999999999391e-06, 1.9299999999972117e-06, 1.583000000002915...</msg>
<status status="PASS" starttime="20201112 10:14:05.868" endtime="20201112 10:14:05.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.880" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:05.879" endtime="20201112 10:14:05.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.882" level="INFO">VALUE: [1.819000000000126e-06, 1.8609999999988358e-06, 1.5560000000032492e-06, 2.0139999999981006e-06, 1.5000000000015001e-06, 1.971999999999391e-06, 1.9299999999972117e-06, 1.5830000000029154e-06, 1.4589999999987946e-06, 1.7229999999986145e-06, 2.0279999999976706e-06, 2.1249999999986557e-06, 1.971999999999391e-06, 1.8889999999979756e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.8749999999984057e-06, 1.4859999999984608e-06, 1.4719999999988909e-06, 1.9720000000028604e-06, 1.77800000000089e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.903000000001015e-06, 1.6119999999980594e-06]</msg>
<status status="PASS" starttime="20201112 10:14:05.881" endtime="20201112 10:14:05.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.876" endtime="20201112 10:14:05.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.885" endtime="20201112 10:14:05.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.889" endtime="20201112 10:14:05.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.887" endtime="20201112 10:14:05.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.884" endtime="20201112 10:14:05.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.529" endtime="20201112 10:14:05.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.219" endtime="20201112 10:14:05.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.914" endtime="20201112 10:14:05.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.912" endtime="20201112 10:14:05.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.911" endtime="20201112 10:14:05.934"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:58.143" endtime="20201112 10:14:05.935" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.942" endtime="20201112 10:14:05.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.941" endtime="20201112 10:14:05.962"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.976" endtime="20201112 10:14:05.997"></status>
</kw>
<msg timestamp="20201112 10:14:05.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.973" endtime="20201112 10:14:05.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.000" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.998" endtime="20201112 10:14:06.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.003" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:06.001" endtime="20201112 10:14:06.003"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:05.971" endtime="20201112 10:14:06.004"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:05.969" endtime="20201112 10:14:06.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.967" endtime="20201112 10:14:06.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:06.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:06.008" endtime="20201112 10:14:06.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.005" endtime="20201112 10:14:06.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.967" endtime="20201112 10:14:06.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.966" endtime="20201112 10:14:06.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.010" endtime="20201112 10:14:06.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.965" endtime="20201112 10:14:06.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.963" endtime="20201112 10:14:06.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.939" endtime="20201112 10:14:06.013"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 10:14:06.015" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.023" endtime="20201112 10:14:06.034"></status>
</kw>
<msg timestamp="20201112 10:14:06.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.021" endtime="20201112 10:14:06.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.036" endtime="20201112 10:14:06.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.038" endtime="20201112 10:14:06.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.018" endtime="20201112 10:14:06.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.017" endtime="20201112 10:14:06.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.047" endtime="20201112 10:14:06.336"></status>
</kw>
<msg timestamp="20201112 10:14:06.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07161725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071618597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:06.046" endtime="20201112 10:14:06.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07161725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071618597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:06.340" endtime="20201112 10:14:06.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.349" endtime="20201112 10:14:06.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.043" endtime="20201112 10:14:06.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.041" endtime="20201112 10:14:06.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.355" level="INFO">${RESULT} = [{'time': 0.071618597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000126436e-06, 'source_diff': 1.3470000000126436e-06}, {'time': 0.071620972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:06.352" endtime="20201112 10:14:06.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:06.369" level="INFO">${OVERHEAD} = {'source_diff': [1.3470000000126436e-06, 1.082999999998946e-06, 1.0830000000128237e-06, 1.0689999999924371e-06, 1.1249999999907168e-06, 1.1250000000045945e-06, 1.0980000000049284e-06, 1.09700000000545...</msg>
<status status="PASS" starttime="20201112 10:14:06.356" endtime="20201112 10:14:06.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.373" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:06.372" endtime="20201112 10:14:06.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.376" level="INFO">VALUE: [1.3470000000126436e-06, 1.082999999998946e-06, 1.0830000000128237e-06, 1.0689999999924371e-06, 1.1249999999907168e-06, 1.1250000000045945e-06, 1.0980000000049284e-06, 1.0970000000054547e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.1530000000037344e-06, 1.0980000000049284e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.0689999999924371e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0980000000049284e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.096999999991577e-06, 1.096999999991577e-06, 1.0970000000054547e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0689999999924371e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.096999999991577e-06, 1.1389999999972256e-06, 1.1249999999907168e-06, 1.0980000000049284e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0409999999932973e-06, 1.0700000000057885e-06, 1.0830000000128237e-06, 1.1389999999972256e-06, 1.0970000000054547e-06, 1.0830000000128237e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0689999999924371e-06, 1.0970000000054547e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.082999999998946e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 10:14:06.375" endtime="20201112 10:14:06.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.370" endtime="20201112 10:14:06.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.379" endtime="20201112 10:14:06.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.382" endtime="20201112 10:14:06.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.381" endtime="20201112 10:14:06.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.377" endtime="20201112 10:14:06.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.015" endtime="20201112 10:14:06.403"></status>
</kw>
<msg timestamp="20201112 10:14:06.404" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.411" endtime="20201112 10:14:06.423"></status>
</kw>
<msg timestamp="20201112 10:14:06.423" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.410" endtime="20201112 10:14:06.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.424" endtime="20201112 10:14:06.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.427" endtime="20201112 10:14:06.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.407" endtime="20201112 10:14:06.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.406" endtime="20201112 10:14:06.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.436" endtime="20201112 10:14:06.725"></status>
</kw>
<msg timestamp="20201112 10:14:06.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019667778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.434" endtime="20201112 10:14:06.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019667778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.730" endtime="20201112 10:14:06.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.738" endtime="20201112 10:14:06.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.431" endtime="20201112 10:14:06.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.430" endtime="20201112 10:14:06.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.744" level="INFO">${RESULT} = [{'time': 0.019669125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019671903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:06.741" endtime="20201112 10:14:06.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:06.759" level="INFO">${OVERHEAD} = {'source_diff': [1.3469999999987659e-06, 1.084000000001889e-06, 1.1109999999980857e-06, 1.02800000000014e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0970000000019853e-...</msg>
<status status="PASS" starttime="20201112 10:14:06.745" endtime="20201112 10:14:06.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.763" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:06.762" endtime="20201112 10:14:06.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.765" level="INFO">VALUE: [1.3469999999987659e-06, 1.084000000001889e-06, 1.1109999999980857e-06, 1.02800000000014e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0839999999984196e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.0410000000002362e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0979999999979895e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0690000000028455e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0979999999979895e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0970000000019853e-06]</msg>
<status status="PASS" starttime="20201112 10:14:06.764" endtime="20201112 10:14:06.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.759" endtime="20201112 10:14:06.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.768" endtime="20201112 10:14:06.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.772" endtime="20201112 10:14:06.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.771" endtime="20201112 10:14:06.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.767" endtime="20201112 10:14:06.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.404" endtime="20201112 10:14:06.793"></status>
</kw>
<msg timestamp="20201112 10:14:06.793" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.801" endtime="20201112 10:14:06.812"></status>
</kw>
<msg timestamp="20201112 10:14:06.813" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.799" endtime="20201112 10:14:06.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.815" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.814" endtime="20201112 10:14:06.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.816" endtime="20201112 10:14:06.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.797" endtime="20201112 10:14:06.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.795" endtime="20201112 10:14:06.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.825" endtime="20201112 10:14:07.111"></status>
</kw>
<msg timestamp="20201112 10:14:07.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019423375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019424722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.824" endtime="20201112 10:14:07.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019423375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019424722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.115" endtime="20201112 10:14:07.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.123" endtime="20201112 10:14:07.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.821" endtime="20201112 10:14:07.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.819" endtime="20201112 10:14:07.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.129" level="INFO">${RESULT} = [{'time': 0.019424722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019427611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:07.126" endtime="20201112 10:14:07.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:07.145" level="INFO">${OVERHEAD} = {'source_diff': [1.3469999999987659e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.0979999999979895e-06, 1.098000000001459e-06, 1.084000000001889...</msg>
<status status="PASS" starttime="20201112 10:14:07.130" endtime="20201112 10:14:07.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.149" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:07.148" endtime="20201112 10:14:07.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.151" level="INFO">VALUE: [1.3469999999987659e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.0979999999979895e-06, 1.098000000001459e-06, 1.084000000001889e-06, 1.0979999999979895e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0979999999979895e-06, 1.0970000000019853e-06, 1.084000000001889e-06, 1.0839999999984196e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 10:14:07.150" endtime="20201112 10:14:07.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.146" endtime="20201112 10:14:07.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.155" endtime="20201112 10:14:07.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.158" endtime="20201112 10:14:07.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.157" endtime="20201112 10:14:07.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.153" endtime="20201112 10:14:07.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.794" endtime="20201112 10:14:07.179"></status>
</kw>
<msg timestamp="20201112 10:14:07.179" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.187" endtime="20201112 10:14:07.199"></status>
</kw>
<msg timestamp="20201112 10:14:07.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.185" endtime="20201112 10:14:07.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.201" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.200" endtime="20201112 10:14:07.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.202" endtime="20201112 10:14:07.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.183" endtime="20201112 10:14:07.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.181" endtime="20201112 10:14:07.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.211" endtime="20201112 10:14:07.496"></status>
</kw>
<msg timestamp="20201112 10:14:07.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.210" endtime="20201112 10:14:07.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.500" endtime="20201112 10:14:07.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.508" endtime="20201112 10:14:07.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.207" endtime="20201112 10:14:07.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.206" endtime="20201112 10:14:07.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.515" level="INFO">${RESULT} = [{'time': 0.019935542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.348000000001709e-06, 'source_diff': 1.348000000001709e-06}, {'time': 0.019937944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:07.511" endtime="20201112 10:14:07.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:07.529" level="INFO">${OVERHEAD} = {'source_diff': [1.348000000001709e-06, 1.137999999997752e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.0830000000024154e...</msg>
<status status="PASS" starttime="20201112 10:14:07.516" endtime="20201112 10:14:07.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.533" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:07.532" endtime="20201112 10:14:07.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.535" level="INFO">VALUE: [1.348000000001709e-06, 1.137999999997752e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.0830000000024154e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.1109999999980857e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.0970000000019853e-06]</msg>
<status status="PASS" starttime="20201112 10:14:07.534" endtime="20201112 10:14:07.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.530" endtime="20201112 10:14:07.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.539" endtime="20201112 10:14:07.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.542" endtime="20201112 10:14:07.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.541" endtime="20201112 10:14:07.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.537" endtime="20201112 10:14:07.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.180" endtime="20201112 10:14:07.563"></status>
</kw>
<msg timestamp="20201112 10:14:07.563" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.571" endtime="20201112 10:14:07.581"></status>
</kw>
<msg timestamp="20201112 10:14:07.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.569" endtime="20201112 10:14:07.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.584" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.583" endtime="20201112 10:14:07.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.585" endtime="20201112 10:14:07.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.567" endtime="20201112 10:14:07.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.565" endtime="20201112 10:14:07.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.594" endtime="20201112 10:14:07.884"></status>
</kw>
<msg timestamp="20201112 10:14:07.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.593" endtime="20201112 10:14:07.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.888" endtime="20201112 10:14:07.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.896" endtime="20201112 10:14:07.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.590" endtime="20201112 10:14:07.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.589" endtime="20201112 10:14:07.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.903" level="INFO">${RESULT} = [{'time': 0.019551653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019554222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:07.899" endtime="20201112 10:14:07.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:07.917" level="INFO">${OVERHEAD} = {'source_diff': [1.3469999999987659e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.0839999999984196e-0...</msg>
<status status="PASS" starttime="20201112 10:14:07.904" endtime="20201112 10:14:07.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.921" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:07.920" endtime="20201112 10:14:07.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.923" level="INFO">VALUE: [1.3469999999987659e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.153000000000265e-06, 1.1109999999980857e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0979999999979895e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.098000000001459e-06]</msg>
<status status="PASS" starttime="20201112 10:14:07.922" endtime="20201112 10:14:07.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.918" endtime="20201112 10:14:07.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.927" endtime="20201112 10:14:07.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.930" endtime="20201112 10:14:07.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.929" endtime="20201112 10:14:07.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.925" endtime="20201112 10:14:07.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.564" endtime="20201112 10:14:07.951"></status>
</kw>
<msg timestamp="20201112 10:14:07.951" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.959" endtime="20201112 10:14:07.969"></status>
</kw>
<msg timestamp="20201112 10:14:07.970" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.957" endtime="20201112 10:14:07.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.972" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.971" endtime="20201112 10:14:07.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.973" endtime="20201112 10:14:07.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.955" endtime="20201112 10:14:07.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.953" endtime="20201112 10:14:07.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.982" endtime="20201112 10:14:08.262"></status>
</kw>
<msg timestamp="20201112 10:14:08.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019203556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019204917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.981" endtime="20201112 10:14:08.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019203556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019204917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.266" endtime="20201112 10:14:08.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.275" endtime="20201112 10:14:08.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.978" endtime="20201112 10:14:08.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.976" endtime="20201112 10:14:08.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.282" level="INFO">${RESULT} = [{'time': 0.019204917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019207708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:08.278" endtime="20201112 10:14:08.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:08.296" level="INFO">${OVERHEAD} = {'source_diff': [1.3609999999983358e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0839999999984196e...</msg>
<status status="PASS" starttime="20201112 10:14:08.283" endtime="20201112 10:14:08.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.300" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:08.299" endtime="20201112 10:14:08.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.303" level="INFO">VALUE: [1.3609999999983358e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.153000000000265e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 10:14:08.301" endtime="20201112 10:14:08.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.297" endtime="20201112 10:14:08.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.306" endtime="20201112 10:14:08.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.310" endtime="20201112 10:14:08.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.308" endtime="20201112 10:14:08.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.305" endtime="20201112 10:14:08.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.952" endtime="20201112 10:14:08.330"></status>
</kw>
<msg timestamp="20201112 10:14:08.331" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.338" endtime="20201112 10:14:08.349"></status>
</kw>
<msg timestamp="20201112 10:14:08.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.337" endtime="20201112 10:14:08.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.352" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.351" endtime="20201112 10:14:08.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.353" endtime="20201112 10:14:08.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.334" endtime="20201112 10:14:08.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.332" endtime="20201112 10:14:08.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.362" endtime="20201112 10:14:08.643"></status>
</kw>
<msg timestamp="20201112 10:14:08.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019242819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019244167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.361" endtime="20201112 10:14:08.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019242819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019244167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.647" endtime="20201112 10:14:08.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.656" endtime="20201112 10:14:08.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.358" endtime="20201112 10:14:08.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.356" endtime="20201112 10:14:08.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.662" level="INFO">${RESULT} = [{'time': 0.019244167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3479999999982395e-06, 'source_diff': 1.3479999999982395e-06}, {'time': 0.019246514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:08.659" endtime="20201112 10:14:08.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:08.677" level="INFO">${OVERHEAD} = {'source_diff': [1.3479999999982395e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.068999999999376...</msg>
<status status="PASS" starttime="20201112 10:14:08.663" endtime="20201112 10:14:08.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.681" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:08.680" endtime="20201112 10:14:08.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.684" level="INFO">VALUE: [1.3479999999982395e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0979999999979895e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0839999999984196e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0839999999984196e-06]</msg>
<status status="PASS" starttime="20201112 10:14:08.682" endtime="20201112 10:14:08.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.678" endtime="20201112 10:14:08.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.687" endtime="20201112 10:14:08.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.691" endtime="20201112 10:14:08.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.689" endtime="20201112 10:14:08.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.686" endtime="20201112 10:14:08.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.331" endtime="20201112 10:14:08.711"></status>
</kw>
<msg timestamp="20201112 10:14:08.711" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.719" endtime="20201112 10:14:08.730"></status>
</kw>
<msg timestamp="20201112 10:14:08.731" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.718" endtime="20201112 10:14:08.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.732" endtime="20201112 10:14:08.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.734" endtime="20201112 10:14:08.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.715" endtime="20201112 10:14:08.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.713" endtime="20201112 10:14:08.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.743" endtime="20201112 10:14:09.024"></status>
</kw>
<msg timestamp="20201112 10:14:09.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.742" endtime="20201112 10:14:09.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.028" endtime="20201112 10:14:09.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.036" endtime="20201112 10:14:09.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.739" endtime="20201112 10:14:09.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.737" endtime="20201112 10:14:09.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.043" level="INFO">${RESULT} = [{'time': 0.019347958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.332999999999196e-06, 'source_diff': 1.332999999999196e-06}, {'time': 0.019350361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:09.040" endtime="20201112 10:14:09.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:09.057" level="INFO">${OVERHEAD} = {'source_diff': [1.332999999999196e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-0...</msg>
<status status="PASS" starttime="20201112 10:14:09.044" endtime="20201112 10:14:09.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:09.060" endtime="20201112 10:14:09.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.064" level="INFO">VALUE: [1.332999999999196e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0690000000028455e-06, 1.0970000000019853e-06, 1.098000000001459e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.0970000000019853e-06, 1.084000000001889e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.1109999999980857e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.084000000001889e-06, 1.0839999999984196e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201112 10:14:09.063" endtime="20201112 10:14:09.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.058" endtime="20201112 10:14:09.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.080" endtime="20201112 10:14:09.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.084" endtime="20201112 10:14:09.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.082" endtime="20201112 10:14:09.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.079" endtime="20201112 10:14:09.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.712" endtime="20201112 10:14:09.104"></status>
</kw>
<msg timestamp="20201112 10:14:09.105" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.112" endtime="20201112 10:14:09.123"></status>
</kw>
<msg timestamp="20201112 10:14:09.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.111" endtime="20201112 10:14:09.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.126" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.125" endtime="20201112 10:14:09.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.127" endtime="20201112 10:14:09.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.108" endtime="20201112 10:14:09.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.106" endtime="20201112 10:14:09.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.136" endtime="20201112 10:14:09.417"></status>
</kw>
<msg timestamp="20201112 10:14:09.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019246056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019247417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.135" endtime="20201112 10:14:09.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019246056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019247417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.421" endtime="20201112 10:14:09.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.430" endtime="20201112 10:14:09.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.132" endtime="20201112 10:14:09.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.130" endtime="20201112 10:14:09.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.436" level="INFO">${RESULT} = [{'time': 0.019247417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019249903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:09.433" endtime="20201112 10:14:09.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:09.451" level="INFO">${OVERHEAD} = {'source_diff': [1.3609999999983358e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.082999999998946...</msg>
<status status="PASS" starttime="20201112 10:14:09.437" endtime="20201112 10:14:09.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.455" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:09.454" endtime="20201112 10:14:09.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.458" level="INFO">VALUE: [1.3609999999983358e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.1249999999976557e-06, 1.0839999999984196e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.0979999999979895e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.098000000001459e-06, 1.1109999999980857e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201112 10:14:09.456" endtime="20201112 10:14:09.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.452" endtime="20201112 10:14:09.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.461" endtime="20201112 10:14:09.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.465" endtime="20201112 10:14:09.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.463" endtime="20201112 10:14:09.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.460" endtime="20201112 10:14:09.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.105" endtime="20201112 10:14:09.486"></status>
</kw>
<msg timestamp="20201112 10:14:09.486" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.493" endtime="20201112 10:14:09.506"></status>
</kw>
<msg timestamp="20201112 10:14:09.506" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.492" endtime="20201112 10:14:09.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.508" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.507" endtime="20201112 10:14:09.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.510" endtime="20201112 10:14:09.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.489" endtime="20201112 10:14:09.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.488" endtime="20201112 10:14:09.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.519" endtime="20201112 10:14:09.808"></status>
</kw>
<msg timestamp="20201112 10:14:09.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01964, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:14:09.517" endtime="20201112 10:14:09.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01964, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:14:09.812" endtime="20201112 10:14:09.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.820" endtime="20201112 10:14:09.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.515" endtime="20201112 10:14:09.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.513" endtime="20201112 10:14:09.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.827" level="INFO">${RESULT} = [{'time': 0.01964, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.318999999999626e-06, 'source_diff': 1.318999999999626e-06}, {'time': 0.019642444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201112 10:14:09.823" endtime="20201112 10:14:09.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:09.841" level="INFO">${OVERHEAD} = {'source_diff': [1.318999999999626e-06, 1.1109999999980857e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.1109999999980857e-06, 1.070000000002319e-06, 1.0970000000019853e...</msg>
<status status="PASS" starttime="20201112 10:14:09.828" endtime="20201112 10:14:09.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.845" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:09.844" endtime="20201112 10:14:09.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.847" level="INFO">VALUE: [1.318999999999626e-06, 1.1109999999980857e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.1109999999980857e-06, 1.070000000002319e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.098000000001459e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.02800000000014e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.0690000000028455e-06, 1.02800000000014e-06, 1.1109999999980857e-06, 1.098000000001459e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.070000000002319e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201112 10:14:09.846" endtime="20201112 10:14:09.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.842" endtime="20201112 10:14:09.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.851" endtime="20201112 10:14:09.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.854" endtime="20201112 10:14:09.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.853" endtime="20201112 10:14:09.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.849" endtime="20201112 10:14:09.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.486" endtime="20201112 10:14:09.875"></status>
</kw>
<msg timestamp="20201112 10:14:09.875" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.883" endtime="20201112 10:14:09.894"></status>
</kw>
<msg timestamp="20201112 10:14:09.895" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.881" endtime="20201112 10:14:09.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.897" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.896" endtime="20201112 10:14:09.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.898" endtime="20201112 10:14:09.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.879" endtime="20201112 10:14:09.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.877" endtime="20201112 10:14:09.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.907" endtime="20201112 10:14:10.188"></status>
</kw>
<msg timestamp="20201112 10:14:10.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019266125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019267472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.905" endtime="20201112 10:14:10.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019266125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019267472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.192" endtime="20201112 10:14:10.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.200" endtime="20201112 10:14:10.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.903" endtime="20201112 10:14:10.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.901" endtime="20201112 10:14:10.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.207" level="INFO">${RESULT} = [{'time': 0.019267472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.019270014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:10.204" endtime="20201112 10:14:10.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:10.222" level="INFO">${OVERHEAD} = {'source_diff': [1.3470000000022353e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.0839999999984196e-06, 1.08399999999841...</msg>
<status status="PASS" starttime="20201112 10:14:10.208" endtime="20201112 10:14:10.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.226" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:10.225" endtime="20201112 10:14:10.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.228" level="INFO">VALUE: [1.3470000000022353e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0839999999984196e-06, 1.153000000000265e-06, 1.0410000000002362e-06, 1.098000000001459e-06, 1.0979999999979895e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0979999999979895e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0690000000028455e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.098000000001459e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.098000000001459e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 10:14:10.227" endtime="20201112 10:14:10.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.223" endtime="20201112 10:14:10.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.232" endtime="20201112 10:14:10.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.235" endtime="20201112 10:14:10.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.234" endtime="20201112 10:14:10.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.230" endtime="20201112 10:14:10.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.876" endtime="20201112 10:14:10.256"></status>
</kw>
<msg timestamp="20201112 10:14:10.256" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.264" endtime="20201112 10:14:10.275"></status>
</kw>
<msg timestamp="20201112 10:14:10.275" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.262" endtime="20201112 10:14:10.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.278" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.277" endtime="20201112 10:14:10.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.279" endtime="20201112 10:14:10.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.260" endtime="20201112 10:14:10.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.258" endtime="20201112 10:14:10.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.288" endtime="20201112 10:14:10.568"></status>
</kw>
<msg timestamp="20201112 10:14:10.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019279333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:10.286" endtime="20201112 10:14:10.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019279333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:10.572" endtime="20201112 10:14:10.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.581" endtime="20201112 10:14:10.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.284" endtime="20201112 10:14:10.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.282" endtime="20201112 10:14:10.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.587" level="INFO">${RESULT} = [{'time': 0.019279333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.332999999999196e-06, 'source_diff': 1.332999999999196e-06}, {'time': 0.019282083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:10.584" endtime="20201112 10:14:10.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:10.601" level="INFO">${OVERHEAD} = {'source_diff': [1.332999999999196e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.1110000000015552e...</msg>
<status status="PASS" starttime="20201112 10:14:10.588" endtime="20201112 10:14:10.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.606" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:10.605" endtime="20201112 10:14:10.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.608" level="INFO">VALUE: [1.332999999999196e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.0970000000019853e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.098000000001459e-06, 1.0839999999984196e-06, 1.0409999999967667e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.1810000000028742e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.1519999999973218e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.070000000002319e-06, 1.098000000001459e-06, 1.0979999999979895e-06, 1.098000000001459e-06]</msg>
<status status="PASS" starttime="20201112 10:14:10.607" endtime="20201112 10:14:10.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.602" endtime="20201112 10:14:10.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.612" endtime="20201112 10:14:10.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.615" endtime="20201112 10:14:10.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.614" endtime="20201112 10:14:10.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.610" endtime="20201112 10:14:10.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.257" endtime="20201112 10:14:10.636"></status>
</kw>
<msg timestamp="20201112 10:14:10.636" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.644" endtime="20201112 10:14:10.655"></status>
</kw>
<msg timestamp="20201112 10:14:10.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.642" endtime="20201112 10:14:10.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.656" endtime="20201112 10:14:10.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.659" endtime="20201112 10:14:10.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.639" endtime="20201112 10:14:10.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.638" endtime="20201112 10:14:10.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.668" endtime="20201112 10:14:10.949"></status>
</kw>
<msg timestamp="20201112 10:14:10.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019363389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.666" endtime="20201112 10:14:10.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019363389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.953" endtime="20201112 10:14:10.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.961" endtime="20201112 10:14:10.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.664" endtime="20201112 10:14:10.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.662" endtime="20201112 10:14:10.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.968" level="INFO">${RESULT} = [{'time': 0.019363389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3330000000026654e-06, 'source_diff': 1.3330000000026654e-06}, {'time': 0.019365819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:10.964" endtime="20201112 10:14:10.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:10.982" level="INFO">${OVERHEAD} = {'source_diff': [1.3330000000026654e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.09699999999851...</msg>
<status status="PASS" starttime="20201112 10:14:10.969" endtime="20201112 10:14:10.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.986" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:10.985" endtime="20201112 10:14:10.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.988" level="INFO">VALUE: [1.3330000000026654e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.0410000000002362e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.0979999999979895e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201112 10:14:10.987" endtime="20201112 10:14:10.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.983" endtime="20201112 10:14:10.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.992" endtime="20201112 10:14:10.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.995" endtime="20201112 10:14:11.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.994" endtime="20201112 10:14:11.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.990" endtime="20201112 10:14:11.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.637" endtime="20201112 10:14:11.016"></status>
</kw>
<msg timestamp="20201112 10:14:11.016" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.024" endtime="20201112 10:14:11.035"></status>
</kw>
<msg timestamp="20201112 10:14:11.036" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.022" endtime="20201112 10:14:11.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.038" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.037" endtime="20201112 10:14:11.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.039" endtime="20201112 10:14:11.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.020" endtime="20201112 10:14:11.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.018" endtime="20201112 10:14:11.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.048" endtime="20201112 10:14:11.333"></status>
</kw>
<msg timestamp="20201112 10:14:11.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019414167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.047" endtime="20201112 10:14:11.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019414167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.338" endtime="20201112 10:14:11.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.346" endtime="20201112 10:14:11.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.044" endtime="20201112 10:14:11.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.042" endtime="20201112 10:14:11.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.353" level="INFO">${RESULT} = [{'time': 0.019415528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019417875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:11.349" endtime="20201112 10:14:11.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:11.367" level="INFO">${OVERHEAD} = {'source_diff': [1.3610000000018052e-06, 1.1110000000015552e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158...</msg>
<status status="PASS" starttime="20201112 10:14:11.354" endtime="20201112 10:14:11.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.371" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:11.370" endtime="20201112 10:14:11.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.373" level="INFO">VALUE: [1.3610000000018052e-06, 1.1110000000015552e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.0419999999997098e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.1529999999967955e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0830000000024154e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0979999999979895e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.0690000000028455e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.0839999999984196e-06]</msg>
<status status="PASS" starttime="20201112 10:14:11.372" endtime="20201112 10:14:11.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.368" endtime="20201112 10:14:11.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.377" endtime="20201112 10:14:11.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.381" endtime="20201112 10:14:11.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.379" endtime="20201112 10:14:11.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.375" endtime="20201112 10:14:11.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.017" endtime="20201112 10:14:11.401"></status>
</kw>
<msg timestamp="20201112 10:14:11.401" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.409" endtime="20201112 10:14:11.420"></status>
</kw>
<msg timestamp="20201112 10:14:11.421" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.407" endtime="20201112 10:14:11.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.423" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.422" endtime="20201112 10:14:11.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.424" endtime="20201112 10:14:11.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.405" endtime="20201112 10:14:11.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.403" endtime="20201112 10:14:11.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.433" endtime="20201112 10:14:11.712"></status>
</kw>
<msg timestamp="20201112 10:14:11.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019310458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019311792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.431" endtime="20201112 10:14:11.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019310458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019311792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.717" endtime="20201112 10:14:11.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.725" endtime="20201112 10:14:11.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.429" endtime="20201112 10:14:11.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.427" endtime="20201112 10:14:11.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.731" level="INFO">${RESULT} = [{'time': 0.019311792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.334000000002139e-06, 'source_diff': 1.334000000002139e-06}, {'time': 0.019314556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:11.728" endtime="20201112 10:14:11.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:11.746" level="INFO">${OVERHEAD} = {'source_diff': [1.334000000002139e-06, 1.0839999999984196e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.137999999997752e-06, 1.1109999999980857...</msg>
<status status="PASS" starttime="20201112 10:14:11.732" endtime="20201112 10:14:11.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.750" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:11.749" endtime="20201112 10:14:11.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.753" level="INFO">VALUE: [1.334000000002139e-06, 1.0839999999984196e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.137999999997752e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.1120000000010288e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0410000000002362e-06, 1.1249999999976557e-06, 1.084000000001889e-06, 1.070000000002319e-06, 1.0979999999979895e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 10:14:11.751" endtime="20201112 10:14:11.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.747" endtime="20201112 10:14:11.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.756" endtime="20201112 10:14:11.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.760" endtime="20201112 10:14:11.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.758" endtime="20201112 10:14:11.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.755" endtime="20201112 10:14:11.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.402" endtime="20201112 10:14:11.780"></status>
</kw>
<msg timestamp="20201112 10:14:11.780" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.788" endtime="20201112 10:14:11.799"></status>
</kw>
<msg timestamp="20201112 10:14:11.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.787" endtime="20201112 10:14:11.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.801" endtime="20201112 10:14:11.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.803" endtime="20201112 10:14:11.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.784" endtime="20201112 10:14:11.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.782" endtime="20201112 10:14:11.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.812" endtime="20201112 10:14:12.093"></status>
</kw>
<msg timestamp="20201112 10:14:12.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019343806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.811" endtime="20201112 10:14:12.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019343806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.097" endtime="20201112 10:14:12.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.105" endtime="20201112 10:14:12.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.808" endtime="20201112 10:14:12.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.806" endtime="20201112 10:14:12.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.112" level="INFO">${RESULT} = [{'time': 0.019343806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.334000000002139e-06, 'source_diff': 1.334000000002139e-06}, {'time': 0.019346403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:12.108" endtime="20201112 10:14:12.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:12.126" level="INFO">${OVERHEAD} = {'source_diff': [1.334000000002139e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.1109999999980857e-06, 1.082999999998946e-...</msg>
<status status="PASS" starttime="20201112 10:14:12.112" endtime="20201112 10:14:12.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.130" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:12.129" endtime="20201112 10:14:12.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.132" level="INFO">VALUE: [1.334000000002139e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.0690000000028455e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.0690000000028455e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.02800000000014e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.1389999999972256e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.098000000001459e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201112 10:14:12.131" endtime="20201112 10:14:12.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.127" endtime="20201112 10:14:12.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.136" endtime="20201112 10:14:12.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.139" endtime="20201112 10:14:12.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.138" endtime="20201112 10:14:12.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.134" endtime="20201112 10:14:12.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.781" endtime="20201112 10:14:12.160"></status>
</kw>
<msg timestamp="20201112 10:14:12.160" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.168" endtime="20201112 10:14:12.178"></status>
</kw>
<msg timestamp="20201112 10:14:12.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.166" endtime="20201112 10:14:12.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.180" endtime="20201112 10:14:12.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.182" endtime="20201112 10:14:12.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.163" endtime="20201112 10:14:12.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.162" endtime="20201112 10:14:12.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.191" endtime="20201112 10:14:12.471"></status>
</kw>
<msg timestamp="20201112 10:14:12.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019289639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.189" endtime="20201112 10:14:12.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019289639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.475" endtime="20201112 10:14:12.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.483" endtime="20201112 10:14:12.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.187" endtime="20201112 10:14:12.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.185" endtime="20201112 10:14:12.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.490" level="INFO">${RESULT} = [{'time': 0.019290972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.332999999999196e-06, 'source_diff': 1.332999999999196e-06}, {'time': 0.019293417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:12.486" endtime="20201112 10:14:12.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:12.504" level="INFO">${OVERHEAD} = {'source_diff': [1.332999999999196e-06, 1.1110000000015552e-06, 1.0410000000002362e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.068999999999376...</msg>
<status status="PASS" starttime="20201112 10:14:12.491" endtime="20201112 10:14:12.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.508" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:12.507" endtime="20201112 10:14:12.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.510" level="INFO">VALUE: [1.332999999999196e-06, 1.1110000000015552e-06, 1.0410000000002362e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0979999999979895e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.01400000000057e-06, 1.1120000000010288e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.1249999999976557e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 10:14:12.509" endtime="20201112 10:14:12.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.505" endtime="20201112 10:14:12.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.514" endtime="20201112 10:14:12.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.517" endtime="20201112 10:14:12.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.516" endtime="20201112 10:14:12.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.512" endtime="20201112 10:14:12.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.161" endtime="20201112 10:14:12.538"></status>
</kw>
<msg timestamp="20201112 10:14:12.538" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.546" endtime="20201112 10:14:12.557"></status>
</kw>
<msg timestamp="20201112 10:14:12.558" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.544" endtime="20201112 10:14:12.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.560" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.559" endtime="20201112 10:14:12.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.561" endtime="20201112 10:14:12.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.542" endtime="20201112 10:14:12.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.540" endtime="20201112 10:14:12.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.570" endtime="20201112 10:14:12.852"></status>
</kw>
<msg timestamp="20201112 10:14:12.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019362653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.568" endtime="20201112 10:14:12.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019362653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.856" endtime="20201112 10:14:12.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.864" endtime="20201112 10:14:12.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.566" endtime="20201112 10:14:12.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.564" endtime="20201112 10:14:12.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.872" level="INFO">${RESULT} = [{'time': 0.019362653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.334000000002139e-06, 'source_diff': 1.334000000002139e-06}, {'time': 0.019365222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:12.868" endtime="20201112 10:14:12.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:12.885" level="INFO">${OVERHEAD} = {'source_diff': [1.334000000002139e-06, 1.0830000000024154e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0979999999979895e-06, 1.082999999998946e-06, 1.0699999999988496...</msg>
<status status="PASS" starttime="20201112 10:14:12.873" endtime="20201112 10:14:12.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.889" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:12.888" endtime="20201112 10:14:12.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.892" level="INFO">VALUE: [1.334000000002139e-06, 1.0830000000024154e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0979999999979895e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.139000000000695e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.0970000000019853e-06, 1.0979999999979895e-06]</msg>
<status status="PASS" starttime="20201112 10:14:12.890" endtime="20201112 10:14:12.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.886" endtime="20201112 10:14:12.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.895" endtime="20201112 10:14:12.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.899" endtime="20201112 10:14:12.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.897" endtime="20201112 10:14:12.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.893" endtime="20201112 10:14:12.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.539" endtime="20201112 10:14:12.919"></status>
</kw>
<msg timestamp="20201112 10:14:12.919" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.927" endtime="20201112 10:14:12.938"></status>
</kw>
<msg timestamp="20201112 10:14:12.939" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.925" endtime="20201112 10:14:12.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.941" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.940" endtime="20201112 10:14:12.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.942" endtime="20201112 10:14:12.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.923" endtime="20201112 10:14:12.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.921" endtime="20201112 10:14:12.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.951" endtime="20201112 10:14:13.239"></status>
</kw>
<msg timestamp="20201112 10:14:13.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.950" endtime="20201112 10:14:13.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.243" endtime="20201112 10:14:13.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.251" endtime="20201112 10:14:13.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.947" endtime="20201112 10:14:13.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.945" endtime="20201112 10:14:13.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.258" level="INFO">${RESULT} = [{'time': 0.019443556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.334000000002139e-06, 'source_diff': 1.334000000002139e-06}, {'time': 0.019446167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:13.255" endtime="20201112 10:14:13.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:13.272" level="INFO">${OVERHEAD} = {'source_diff': [1.334000000002139e-06, 1.098000000001459e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.082999999998946e-06...</msg>
<status status="PASS" starttime="20201112 10:14:13.259" endtime="20201112 10:14:13.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.277" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:13.275" endtime="20201112 10:14:13.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.279" level="INFO">VALUE: [1.334000000002139e-06, 1.098000000001459e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.098000000001459e-06, 1.084000000001889e-06, 1.0979999999979895e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.070000000002319e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.1520000000007913e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201112 10:14:13.278" endtime="20201112 10:14:13.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.273" endtime="20201112 10:14:13.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.282" endtime="20201112 10:14:13.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.286" endtime="20201112 10:14:13.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.284" endtime="20201112 10:14:13.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.281" endtime="20201112 10:14:13.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.920" endtime="20201112 10:14:13.306"></status>
</kw>
<msg timestamp="20201112 10:14:13.307" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.314" endtime="20201112 10:14:13.325"></status>
</kw>
<msg timestamp="20201112 10:14:13.325" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.313" endtime="20201112 10:14:13.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.328" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.326" endtime="20201112 10:14:13.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.329" endtime="20201112 10:14:13.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.310" endtime="20201112 10:14:13.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.308" endtime="20201112 10:14:13.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.338" endtime="20201112 10:14:13.619"></status>
</kw>
<msg timestamp="20201112 10:14:13.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019234319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019235653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.336" endtime="20201112 10:14:13.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019234319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019235653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.624" endtime="20201112 10:14:13.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.632" endtime="20201112 10:14:13.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.334" endtime="20201112 10:14:13.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.332" endtime="20201112 10:14:13.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.638" level="INFO">${RESULT} = [{'time': 0.019235653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3339999999986696e-06, 'source_diff': 1.3339999999986696e-06}, {'time': 0.019238333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:13.635" endtime="20201112 10:14:13.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:13.652" level="INFO">${OVERHEAD} = {'source_diff': [1.3339999999986696e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.1110000000015552...</msg>
<status status="PASS" starttime="20201112 10:14:13.639" endtime="20201112 10:14:13.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.656" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:13.655" endtime="20201112 10:14:13.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.658" level="INFO">VALUE: [1.3339999999986696e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.153000000000265e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.098000000001459e-06, 1.1520000000007913e-06, 1.0839999999984196e-06, 1.098000000001459e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.098000000001459e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.0419999999997098e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0979999999979895e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 10:14:13.657" endtime="20201112 10:14:13.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.653" endtime="20201112 10:14:13.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.662" endtime="20201112 10:14:13.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.665" endtime="20201112 10:14:13.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.664" endtime="20201112 10:14:13.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.660" endtime="20201112 10:14:13.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.307" endtime="20201112 10:14:13.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.014" endtime="20201112 10:14:13.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.691" endtime="20201112 10:14:13.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.689" endtime="20201112 10:14:13.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.687" endtime="20201112 10:14:13.711"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:05.937" endtime="20201112 10:14:13.711" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.719" endtime="20201112 10:14:13.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.718" endtime="20201112 10:14:13.739"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.752" endtime="20201112 10:14:13.771"></status>
</kw>
<msg timestamp="20201112 10:14:13.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.750" endtime="20201112 10:14:13.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.772" endtime="20201112 10:14:13.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.777" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:13.775" endtime="20201112 10:14:13.777"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:13.748" endtime="20201112 10:14:13.778"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:13.745" endtime="20201112 10:14:13.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.744" endtime="20201112 10:14:13.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:13.782" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:13.781" endtime="20201112 10:14:13.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.779" endtime="20201112 10:14:13.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.743" endtime="20201112 10:14:13.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.743" endtime="20201112 10:14:13.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.784" endtime="20201112 10:14:13.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.741" endtime="20201112 10:14:13.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.740" endtime="20201112 10:14:13.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.716" endtime="20201112 10:14:13.787"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.796" endtime="20201112 10:14:13.814"></status>
</kw>
<msg timestamp="20201112 10:14:13.815" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.794" endtime="20201112 10:14:13.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.817" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.816" endtime="20201112 10:14:13.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.818" endtime="20201112 10:14:13.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.791" endtime="20201112 10:14:13.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.789" endtime="20201112 10:14:13.821"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.823" endtime="20201112 10:14:13.824"></status>
</kw>
<msg timestamp="20201112 10:14:13.825" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:14:13.822" endtime="20201112 10:14:13.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.829" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:13.828" endtime="20201112 10:14:13.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.831" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:13.830" endtime="20201112 10:14:13.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.826" endtime="20201112 10:14:13.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.836" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:13.835" endtime="20201112 10:14:13.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.838" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:13.837" endtime="20201112 10:14:13.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.832" endtime="20201112 10:14:13.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.845" endtime="20201112 10:14:14.128"></status>
</kw>
<msg timestamp="20201112 10:14:14.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069401972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069405333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.843" endtime="20201112 10:14:14.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069401972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069405333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.133" endtime="20201112 10:14:14.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.141" endtime="20201112 10:14:14.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.841" endtime="20201112 10:14:14.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.839" endtime="20201112 10:14:14.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.148" level="INFO">${RESULT} = [{'time': 0.069405333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.360999999993397e-06, 'source_diff': 3.360999999993397e-06}, {'time': 0.069409569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:14.144" endtime="20201112 10:14:14.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:14.161" level="INFO">${OVERHEAD} = {'source_diff': [3.360999999993397e-06, 2.388000000005941e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.249999999995311...</msg>
<status status="PASS" starttime="20201112 10:14:14.148" endtime="20201112 10:14:14.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.165" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 10:14:14.164" endtime="20201112 10:14:14.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.176" level="INFO">VALUE: [3.360999999993397e-06, 2.388000000005941e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.29200000000096e-06, 2.26400000000182e-06, 2.1939999999970317e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.250000000009189e-06, 2.2360000000026803e-06, 2.250000000009189e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2359999999888025e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2639999999879423e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.278000000008329e-06, 2.250000000009189e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.250000000009189e-06]</msg>
<status status="PASS" starttime="20201112 10:14:14.175" endtime="20201112 10:14:14.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.162" endtime="20201112 10:14:14.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.179" endtime="20201112 10:14:14.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.183" endtime="20201112 10:14:14.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.181" endtime="20201112 10:14:14.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.178" endtime="20201112 10:14:14.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.787" endtime="20201112 10:14:14.203"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:13.713" endtime="20201112 10:14:14.204" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.212" endtime="20201112 10:14:14.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.210" endtime="20201112 10:14:14.232"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.245" endtime="20201112 10:14:14.264"></status>
</kw>
<msg timestamp="20201112 10:14:14.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.244" endtime="20201112 10:14:14.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.266" endtime="20201112 10:14:14.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.270" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:14.268" endtime="20201112 10:14:14.270"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:14.240" endtime="20201112 10:14:14.271"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:14.238" endtime="20201112 10:14:14.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.237" endtime="20201112 10:14:14.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:14.276" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:14.275" endtime="20201112 10:14:14.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.273" endtime="20201112 10:14:14.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.236" endtime="20201112 10:14:14.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.235" endtime="20201112 10:14:14.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.277" endtime="20201112 10:14:14.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.234" endtime="20201112 10:14:14.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.232" endtime="20201112 10:14:14.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.209" endtime="20201112 10:14:14.280"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.289" endtime="20201112 10:14:14.327"></status>
</kw>
<msg timestamp="20201112 10:14:14.327" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.288" endtime="20201112 10:14:14.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.330" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.328" endtime="20201112 10:14:14.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.331" endtime="20201112 10:14:14.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.285" endtime="20201112 10:14:14.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.283" endtime="20201112 10:14:14.333"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.336" endtime="20201112 10:14:14.337"></status>
</kw>
<msg timestamp="20201112 10:14:14.338" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:14:14.334" endtime="20201112 10:14:14.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.342" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:14.341" endtime="20201112 10:14:14.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.344" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:14.343" endtime="20201112 10:14:14.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.338" endtime="20201112 10:14:14.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.348" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:14.347" endtime="20201112 10:14:14.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.350" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:14.349" endtime="20201112 10:14:14.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.345" endtime="20201112 10:14:14.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.359" endtime="20201112 10:14:14.645"></status>
</kw>
<msg timestamp="20201112 10:14:14.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070366042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070379458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.356" endtime="20201112 10:14:14.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070366042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070379458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.649" endtime="20201112 10:14:14.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.657" endtime="20201112 10:14:14.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.354" endtime="20201112 10:14:14.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.352" endtime="20201112 10:14:14.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.663" level="INFO">${RESULT} = [{'time': 0.070379458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3416000000002204e-05, 'source_diff': 1.3416000000002204e-05}, {'time': 0.070759514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:14.660" endtime="20201112 10:14:14.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:14.679" level="INFO">${OVERHEAD} = {'source_diff': [1.3416000000002204e-05, 1.3277999999991574e-05, 1.3263999999998943e-05, 1.3250000000006312e-05, 1.3249999999992434e-05, 1.3263999999998943e-05, 1.3209000000000137e-05, 1.3278000000005...</msg>
<status status="PASS" starttime="20201112 10:14:14.664" endtime="20201112 10:14:14.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.684" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 10:14:14.683" endtime="20201112 10:14:14.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.686" level="INFO">VALUE: [1.3416000000002204e-05, 1.3277999999991574e-05, 1.3263999999998943e-05, 1.3250000000006312e-05, 1.3249999999992434e-05, 1.3263999999998943e-05, 1.3209000000000137e-05, 1.3278000000005452e-05, 1.3263999999998943e-05, 1.3306000000004592e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.326299999999947e-05, 1.3263999999998943e-05, 1.3249999999992434e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3277999999991574e-05, 1.3263999999998943e-05, 1.3249999999992434e-05, 1.3291999999998083e-05, 1.3263999999998943e-05, 1.3249999999992434e-05, 1.3278000000005452e-05, 1.3277999999991574e-05, 1.3263999999998943e-05, 1.3250000000006312e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3250000000006312e-05, 1.3250000000006312e-05, 1.3277999999991574e-05, 1.3208000000000664e-05, 1.329099999999861e-05, 1.3277000000005978e-05, 1.3221999999993295e-05, 1.3249999999992434e-05, 1.3250000000006312e-05, 1.3208000000000664e-05, 1.3292000000011961e-05, 1.3305999999990714e-05, 1.3249999999992434e-05, 1.3250000000006312e-05, 1.3235999999999803e-05, 1.3291999999998083e-05, 1.3263999999998943e-05]</msg>
<status status="PASS" starttime="20201112 10:14:14.685" endtime="20201112 10:14:14.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.680" endtime="20201112 10:14:14.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.689" endtime="20201112 10:14:14.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.693" endtime="20201112 10:14:14.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.691" endtime="20201112 10:14:14.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.688" endtime="20201112 10:14:14.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.281" endtime="20201112 10:14:14.713"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:14.206" endtime="20201112 10:14:14.714" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.721" endtime="20201112 10:14:14.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.720" endtime="20201112 10:14:14.741"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.755" endtime="20201112 10:14:14.774"></status>
</kw>
<msg timestamp="20201112 10:14:14.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.753" endtime="20201112 10:14:14.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.776" endtime="20201112 10:14:14.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.780" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:14.778" endtime="20201112 10:14:14.781"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:14.750" endtime="20201112 10:14:14.781"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:14.748" endtime="20201112 10:14:14.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.747" endtime="20201112 10:14:14.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:14.786" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:14.785" endtime="20201112 10:14:14.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.783" endtime="20201112 10:14:14.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.746" endtime="20201112 10:14:14.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.745" endtime="20201112 10:14:14.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.788" endtime="20201112 10:14:14.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.744" endtime="20201112 10:14:14.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.742" endtime="20201112 10:14:14.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.718" endtime="20201112 10:14:14.790"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.799" endtime="20201112 10:14:14.885"></status>
</kw>
<msg timestamp="20201112 10:14:14.886" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.798" endtime="20201112 10:14:14.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.888" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.887" endtime="20201112 10:14:14.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.889" endtime="20201112 10:14:14.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.795" endtime="20201112 10:14:14.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.793" endtime="20201112 10:14:14.892"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.894" endtime="20201112 10:14:14.896"></status>
</kw>
<msg timestamp="20201112 10:14:14.896" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:14:14.893" endtime="20201112 10:14:14.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.900" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:14.899" endtime="20201112 10:14:14.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.902" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:14.901" endtime="20201112 10:14:14.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.897" endtime="20201112 10:14:14.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.907" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:14.906" endtime="20201112 10:14:14.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.909" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:14.908" endtime="20201112 10:14:14.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.904" endtime="20201112 10:14:14.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.916" endtime="20201112 10:14:15.209"></status>
</kw>
<msg timestamp="20201112 10:14:15.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070749014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070774208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.914" endtime="20201112 10:14:15.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070749014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070774208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.213" endtime="20201112 10:14:15.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.221" endtime="20201112 10:14:15.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.912" endtime="20201112 10:14:15.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.910" endtime="20201112 10:14:15.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.228" level="INFO">${RESULT} = [{'time': 0.070774208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5194000000006156e-05, 'source_diff': 2.5194000000006156e-05}, {'time': 0.072140722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:15.224" endtime="20201112 10:14:15.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:15.241" level="INFO">${OVERHEAD} = {'source_diff': [2.5194000000006156e-05, 2.505500000000993e-05, 2.5054999999996053e-05, 2.506900000000256e-05, 2.498700000000409e-05, 2.5041999999989017e-05, 2.5054999999996053e-05, 2.4999999999997247...</msg>
<status status="PASS" starttime="20201112 10:14:15.229" endtime="20201112 10:14:15.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.246" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:15.245" endtime="20201112 10:14:15.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.248" level="INFO">VALUE: [2.5194000000006156e-05, 2.505500000000993e-05, 2.5054999999996053e-05, 2.506900000000256e-05, 2.498700000000409e-05, 2.5041999999989017e-05, 2.5054999999996053e-05, 2.4999999999997247e-05, 2.504100000000342e-05, 2.506900000000256e-05, 2.5056000000009404e-05, 2.5041999999989017e-05, 2.5027999999996386e-05, 2.506900000000256e-05, 2.5014000000003755e-05, 2.5042000000002895e-05, 2.5054999999996053e-05, 2.506900000000256e-05, 2.5042000000002895e-05, 2.5027999999996386e-05, 2.5082999999995192e-05, 2.505500000000993e-05, 2.5042000000002895e-05, 2.5028000000010264e-05, 2.5055999999995526e-05, 2.5041999999989017e-05, 2.5042000000002895e-05, 2.505500000000993e-05, 2.5056000000009404e-05, 2.506900000000256e-05, 2.5055999999995526e-05, 2.5054999999996053e-05, 2.5056000000009404e-05, 2.5070000000002035e-05, 2.502700000001079e-05, 2.5042000000002895e-05, 2.5056000000009404e-05, 2.5055999999995526e-05, 2.506900000000256e-05, 2.5084000000008544e-05, 2.5056000000023282e-05, 2.5042000000002895e-05, 2.5054999999996053e-05, 2.508399999998079e-05, 2.5042000000002895e-05, 2.5082999999981315e-05, 2.5054999999996053e-05, 2.5054999999996053e-05, 2.5054999999996053e-05, 2.5055999999995526e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.247" endtime="20201112 10:14:15.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.242" endtime="20201112 10:14:15.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.251" endtime="20201112 10:14:15.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.255" endtime="20201112 10:14:15.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.253" endtime="20201112 10:14:15.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.250" endtime="20201112 10:14:15.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.791" endtime="20201112 10:14:15.276"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:14.716" endtime="20201112 10:14:15.276" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.284" endtime="20201112 10:14:15.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.283" endtime="20201112 10:14:15.304"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.317" endtime="20201112 10:14:15.337"></status>
</kw>
<msg timestamp="20201112 10:14:15.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.316" endtime="20201112 10:14:15.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.340" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.339" endtime="20201112 10:14:15.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.343" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:15.341" endtime="20201112 10:14:15.344"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:15.313" endtime="20201112 10:14:15.344"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:15.311" endtime="20201112 10:14:15.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.309" endtime="20201112 10:14:15.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:15.349" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:15.348" endtime="20201112 10:14:15.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.346" endtime="20201112 10:14:15.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.309" endtime="20201112 10:14:15.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.308" endtime="20201112 10:14:15.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.351" endtime="20201112 10:14:15.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.307" endtime="20201112 10:14:15.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.305" endtime="20201112 10:14:15.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.281" endtime="20201112 10:14:15.354"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.363" endtime="20201112 10:14:15.381"></status>
</kw>
<msg timestamp="20201112 10:14:15.381" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.361" endtime="20201112 10:14:15.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.384" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.382" endtime="20201112 10:14:15.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.385" endtime="20201112 10:14:15.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.359" endtime="20201112 10:14:15.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.357" endtime="20201112 10:14:15.388"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.390" endtime="20201112 10:14:15.392"></status>
</kw>
<msg timestamp="20201112 10:14:15.392" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:14:15.389" endtime="20201112 10:14:15.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.397" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:15.396" endtime="20201112 10:14:15.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.399" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:15.398" endtime="20201112 10:14:15.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.393" endtime="20201112 10:14:15.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.404" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:15.403" endtime="20201112 10:14:15.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.406" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:15.405" endtime="20201112 10:14:15.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.401" endtime="20201112 10:14:15.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.414" endtime="20201112 10:14:15.699"></status>
</kw>
<msg timestamp="20201112 10:14:15.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070872889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070873597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.412" endtime="20201112 10:14:15.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070872889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070873597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.703" endtime="20201112 10:14:15.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.712" endtime="20201112 10:14:15.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.410" endtime="20201112 10:14:15.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.408" endtime="20201112 10:14:15.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.718" level="INFO">${RESULT} = [{'time': 0.070873597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.080000000020403e-07, 'source_diff': 7.080000000020403e-07}, {'time': 0.070877889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:15.715" endtime="20201112 10:14:15.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:15.731" level="INFO">${OVERHEAD} = {'source_diff': [7.080000000020403e-07, 6.389999999967255e-07, 6.389999999967255e-07, 6.389999999967255e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.389999999967255e-07,...</msg>
<status status="PASS" starttime="20201112 10:14:15.719" endtime="20201112 10:14:15.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.736" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 10:14:15.735" endtime="20201112 10:14:15.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.738" level="INFO">VALUE: [7.080000000020403e-07, 6.389999999967255e-07, 6.389999999967255e-07, 6.389999999967255e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.389999999967255e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.249999999902167e-07, 6.389999999967255e-07, 6.250000000040945e-07, 6.390000000106033e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.389999999967255e-07, 6.390000000106033e-07, 6.110000000114635e-07, 6.249999999902167e-07, 6.520000000037607e-07, 6.109999999975857e-07, 6.389999999967255e-07, 6.249999999902167e-07, 6.389999999967255e-07, 6.390000000106033e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.389999999967255e-07, 6.249999999902167e-07, 6.250000000040945e-07, 6.390000000106033e-07, 6.250000000040945e-07, 6.389999999967255e-07, 6.389999999967255e-07, 6.250000000040945e-07, 6.110000000114635e-07, 6.389999999967255e-07, 6.250000000040945e-07, 6.249999999902167e-07, 6.249999999902167e-07, 6.110000000114635e-07, 5.829999999984459e-07, 6.249999999902167e-07, 6.249999999902167e-07, 6.250000000040945e-07]</msg>
<status status="PASS" starttime="20201112 10:14:15.737" endtime="20201112 10:14:15.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.732" endtime="20201112 10:14:15.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.742" endtime="20201112 10:14:15.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.745" endtime="20201112 10:14:15.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.743" endtime="20201112 10:14:15.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.740" endtime="20201112 10:14:15.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.355" endtime="20201112 10:14:15.766"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:15.278" endtime="20201112 10:14:15.766" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.775" endtime="20201112 10:14:15.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.773" endtime="20201112 10:14:15.795"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.809" endtime="20201112 10:14:15.827"></status>
</kw>
<msg timestamp="20201112 10:14:15.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.806" endtime="20201112 10:14:15.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.828" endtime="20201112 10:14:15.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.833" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:15.831" endtime="20201112 10:14:15.833"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:15.803" endtime="20201112 10:14:15.834"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:15.801" endtime="20201112 10:14:15.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.800" endtime="20201112 10:14:15.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:15.839" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:15.838" endtime="20201112 10:14:15.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.836" endtime="20201112 10:14:15.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.799" endtime="20201112 10:14:15.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.798" endtime="20201112 10:14:15.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.840" endtime="20201112 10:14:15.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.797" endtime="20201112 10:14:15.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.796" endtime="20201112 10:14:15.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.772" endtime="20201112 10:14:15.843"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.852" endtime="20201112 10:14:15.891"></status>
</kw>
<msg timestamp="20201112 10:14:15.891" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.851" endtime="20201112 10:14:15.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.894" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.892" endtime="20201112 10:14:15.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.895" endtime="20201112 10:14:15.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.848" endtime="20201112 10:14:15.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.846" endtime="20201112 10:14:15.897"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.899" endtime="20201112 10:14:15.901"></status>
</kw>
<msg timestamp="20201112 10:14:15.901" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:14:15.898" endtime="20201112 10:14:15.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.905" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:15.904" endtime="20201112 10:14:15.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.907" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:15.907" endtime="20201112 10:14:15.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.902" endtime="20201112 10:14:15.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.912" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:15.911" endtime="20201112 10:14:15.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.914" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:15.913" endtime="20201112 10:14:15.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.909" endtime="20201112 10:14:15.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.922" endtime="20201112 10:14:16.208"></status>
</kw>
<msg timestamp="20201112 10:14:16.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070421639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070423264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.920" endtime="20201112 10:14:16.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070421639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070423264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.212" endtime="20201112 10:14:16.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.220" endtime="20201112 10:14:16.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.917" endtime="20201112 10:14:16.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.915" endtime="20201112 10:14:16.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.227" level="INFO">${RESULT} = [{'time': 0.070423264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.070805764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:16.223" endtime="20201112 10:14:16.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:16.242" level="INFO">${OVERHEAD} = {'source_diff': [1.6250000000050946e-06, 1.5279999999867622e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.540999999993797...</msg>
<status status="PASS" starttime="20201112 10:14:16.227" endtime="20201112 10:14:16.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.247" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 10:14:16.246" endtime="20201112 10:14:16.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.249" level="INFO">VALUE: [1.6250000000050946e-06, 1.5279999999867622e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5560000000136576e-06, 1.52800000000064e-06, 1.5689999999929372e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.4720000000023603e-06, 1.5839999999989196e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.5409999999937973e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5410000000076751e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5410000000076751e-06, 1.5549999999864283e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5970000000059548e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.5550000000003061e-06, 1.5420000000071488e-06]</msg>
<status status="PASS" starttime="20201112 10:14:16.248" endtime="20201112 10:14:16.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.243" endtime="20201112 10:14:16.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.252" endtime="20201112 10:14:16.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.256" endtime="20201112 10:14:16.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.254" endtime="20201112 10:14:16.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.251" endtime="20201112 10:14:16.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.844" endtime="20201112 10:14:16.276"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:15.769" endtime="20201112 10:14:16.277" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.286" endtime="20201112 10:14:16.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.284" endtime="20201112 10:14:16.306"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.319" endtime="20201112 10:14:16.340"></status>
</kw>
<msg timestamp="20201112 10:14:16.340" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.317" endtime="20201112 10:14:16.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.343" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.342" endtime="20201112 10:14:16.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.346" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:16.344" endtime="20201112 10:14:16.347"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:16.314" endtime="20201112 10:14:16.347"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:16.312" endtime="20201112 10:14:16.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.311" endtime="20201112 10:14:16.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:16.352" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:16.351" endtime="20201112 10:14:16.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.349" endtime="20201112 10:14:16.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.310" endtime="20201112 10:14:16.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.309" endtime="20201112 10:14:16.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.353" endtime="20201112 10:14:16.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.308" endtime="20201112 10:14:16.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.306" endtime="20201112 10:14:16.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.283" endtime="20201112 10:14:16.356"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.365" endtime="20201112 10:14:16.452"></status>
</kw>
<msg timestamp="20201112 10:14:16.453" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.364" endtime="20201112 10:14:16.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.455" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.454" endtime="20201112 10:14:16.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.456" endtime="20201112 10:14:16.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.361" endtime="20201112 10:14:16.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.359" endtime="20201112 10:14:16.459"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.461" endtime="20201112 10:14:16.462"></status>
</kw>
<msg timestamp="20201112 10:14:16.463" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:14:16.460" endtime="20201112 10:14:16.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.467" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:16.466" endtime="20201112 10:14:16.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.469" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:16.468" endtime="20201112 10:14:16.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.464" endtime="20201112 10:14:16.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.474" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:16.473" endtime="20201112 10:14:16.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.476" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:16.475" endtime="20201112 10:14:16.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.470" endtime="20201112 10:14:16.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.483" endtime="20201112 10:14:16.775"></status>
</kw>
<msg timestamp="20201112 10:14:16.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073281819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073284361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.481" endtime="20201112 10:14:16.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073281819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073284361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.779" endtime="20201112 10:14:16.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.787" endtime="20201112 10:14:16.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.479" endtime="20201112 10:14:16.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.477" endtime="20201112 10:14:16.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.794" level="INFO">${RESULT} = [{'time': 0.073284361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.542000000008149e-06, 'source_diff': 2.542000000008149e-06}, {'time': 0.074655111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:16.790" endtime="20201112 10:14:16.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:16.807" level="INFO">${OVERHEAD} = {'source_diff': [2.542000000008149e-06, 2.4719999999894826e-06, 2.4719999999894826e-06, 2.4450000000036942e-06, 2.4720000000033604e-06, 2.4589999999963252e-06, 2.4720000000033604e-06, 2.47200000000336...</msg>
<status status="PASS" starttime="20201112 10:14:16.795" endtime="20201112 10:14:16.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.812" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:16.811" endtime="20201112 10:14:16.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.814" level="INFO">VALUE: [2.542000000008149e-06, 2.4719999999894826e-06, 2.4719999999894826e-06, 2.4450000000036942e-06, 2.4720000000033604e-06, 2.4589999999963252e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.4859999999959914e-06, 2.4859999999959914e-06, 2.4859999999959914e-06, 2.4999999999886224e-06, 2.52800000000164e-06, 2.473000000002834e-06, 2.4859999999959914e-06, 2.473000000002834e-06, 2.4719999999894826e-06, 2.4450000000036942e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.52800000000164e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.4859999999959914e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.487000000009343e-06, 2.4440000000042206e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.4859999999959914e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.473000000002834e-06, 2.5270000000021664e-06, 2.4720000000033604e-06, 2.4170000000045544e-06, 2.514000000009009e-06, 2.4859999999959914e-06, 2.473000000002834e-06, 2.4449999999898164e-06, 2.4859999999959914e-06, 2.459000000010203e-06, 2.471999999975605e-06, 2.4720000000033604e-06, 2.4299999999977118e-06, 2.4720000000033604e-06, 2.457999999982974e-06]</msg>
<status status="PASS" starttime="20201112 10:14:16.813" endtime="20201112 10:14:16.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.808" endtime="20201112 10:14:16.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.817" endtime="20201112 10:14:16.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.820" endtime="20201112 10:14:16.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.819" endtime="20201112 10:14:16.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.815" endtime="20201112 10:14:16.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.357" endtime="20201112 10:14:16.841"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:16.280" endtime="20201112 10:14:16.842" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:56.702" endtime="20201112 10:14:16.850"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.917" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:16.925" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:18.090" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:16.915" endtime="20201112 10:14:18.091"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.094" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:18.092" endtime="20201112 10:14:18.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.914" endtime="20201112 10:14:18.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.097" endtime="20201112 10:14:18.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.095" endtime="20201112 10:14:18.283"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.310" endtime="20201112 10:14:18.334"></status>
</kw>
<msg timestamp="20201112 10:14:18.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.306" endtime="20201112 10:14:18.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.338" endtime="20201112 10:14:18.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.347" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:18.343" endtime="20201112 10:14:18.348"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:18.301" endtime="20201112 10:14:18.349"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:18.297" endtime="20201112 10:14:18.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.294" endtime="20201112 10:14:18.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:18.360" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:18.357" endtime="20201112 10:14:18.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.352" endtime="20201112 10:14:18.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.292" endtime="20201112 10:14:18.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.291" endtime="20201112 10:14:18.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.364" endtime="20201112 10:14:18.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.289" endtime="20201112 10:14:18.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.368" endtime="20201112 10:14:18.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.286" endtime="20201112 10:14:18.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.912" endtime="20201112 10:14:18.370"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.377" endtime="20201112 10:14:18.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.375" endtime="20201112 10:14:18.397"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.409" endtime="20201112 10:14:18.428"></status>
</kw>
<msg timestamp="20201112 10:14:18.429" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.408" endtime="20201112 10:14:18.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.430" endtime="20201112 10:14:18.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.435" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:18.433" endtime="20201112 10:14:18.436"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:18.405" endtime="20201112 10:14:18.436"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:18.403" endtime="20201112 10:14:18.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.402" endtime="20201112 10:14:18.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:18.441" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:18.440" endtime="20201112 10:14:18.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.438" endtime="20201112 10:14:18.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.401" endtime="20201112 10:14:18.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.400" endtime="20201112 10:14:18.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.443" endtime="20201112 10:14:18.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.399" endtime="20201112 10:14:18.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.397" endtime="20201112 10:14:18.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.374" endtime="20201112 10:14:18.446"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.458" endtime="20201112 10:14:18.471"></status>
</kw>
<msg timestamp="20201112 10:14:18.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.456" endtime="20201112 10:14:18.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.473" endtime="20201112 10:14:18.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.476" endtime="20201112 10:14:18.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.452" endtime="20201112 10:14:18.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.450" endtime="20201112 10:14:18.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.484" endtime="20201112 10:14:18.777"></status>
</kw>
<msg timestamp="20201112 10:14:18.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073556847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073558986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.483" endtime="20201112 10:14:18.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073556847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073558986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.781" endtime="20201112 10:14:18.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.789" endtime="20201112 10:14:18.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.480" endtime="20201112 10:14:18.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.479" endtime="20201112 10:14:18.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.796" level="INFO">${RESULT} = [{'time': 0.073558986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1390000000121034e-06, 'source_diff': 2.1390000000121034e-06}, {'time': 0.073562944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:18.792" endtime="20201112 10:14:18.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.809" level="INFO">${ACCURACY} = {'source_diff': [2.1390000000121034e-06, 2.082999999999946e-06, 1.6949999999960053e-06, 2.610999999999586e-06, 2.4580000000107294e-06, 2.068999999993437e-06, 1.7080000000030404e-06, 2.069999999992911e...</msg>
<status status="PASS" starttime="20201112 10:14:18.797" endtime="20201112 10:14:18.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.814" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.813" endtime="20201112 10:14:18.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.817" level="INFO">VALUE: [2.1390000000121034e-06, 2.082999999999946e-06, 1.6949999999960053e-06, 2.610999999999586e-06, 2.4580000000107294e-06, 2.068999999993437e-06, 1.7080000000030404e-06, 2.069999999992911e-06, 2.0700000000067886e-06, 2.069000000007315e-06, 2.596999999993077e-06, 2.431000000011063e-06, 1.6389999999977256e-06, 2.624999999992217e-06, 2.082999999999946e-06, 2.4029999999980456e-06, 2.4449999999898164e-06, 2.4309999999971854e-06, 1.695000000009883e-06, 2.069000000007315e-06, 2.0700000000067886e-06, 2.069999999992911e-06, 2.610999999999586e-06, 2.069000000007315e-06, 2.4299999999977118e-06, 2.415999999991203e-06, 1.7080000000030404e-06, 2.082999999999946e-06, 2.02800000000114e-06, 1.6530000000042344e-06, 1.651999999990883e-06, 2.624999999992217e-06, 2.082999999999946e-06, 2.4170000000045544e-06, 2.055000000000806e-06, 2.4299999999977118e-06, 2.431000000011063e-06, 1.6939999999965316e-06, 1.6670000000107432e-06, 2.069000000007315e-06, 1.6390000000116034e-06, 1.6529999999903566e-06, 1.6530000000042344e-06, 2.082999999999946e-06, 1.5839999999989196e-06, 1.5979999999915506e-06, 1.5839999999989196e-06, 1.6119999999980594e-06, 2.069999999992911e-06, 1.596999999992077e-06]</msg>
<status status="PASS" starttime="20201112 10:14:18.816" endtime="20201112 10:14:18.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.810" endtime="20201112 10:14:18.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.820" endtime="20201112 10:14:18.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.823" endtime="20201112 10:14:18.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.822" endtime="20201112 10:14:18.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.818" endtime="20201112 10:14:18.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.448" endtime="20201112 10:14:18.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.448" endtime="20201112 10:14:18.844"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.853" endtime="20201112 10:14:18.868"></status>
</kw>
<msg timestamp="20201112 10:14:18.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.851" endtime="20201112 10:14:18.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.869" endtime="20201112 10:14:18.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.872" endtime="20201112 10:14:18.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.849" endtime="20201112 10:14:18.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.847" endtime="20201112 10:14:18.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.880" endtime="20201112 10:14:19.170"></status>
</kw>
<msg timestamp="20201112 10:14:19.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.879" endtime="20201112 10:14:19.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.174" endtime="20201112 10:14:19.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.182" endtime="20201112 10:14:19.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.876" endtime="20201112 10:14:19.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.875" endtime="20201112 10:14:19.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.189" level="INFO">${RESULT} = [{'time': 0.022363569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.262999999999877e-06, 'source_diff': 3.262999999999877e-06}, {'time': 0.022368361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:19.185" endtime="20201112 10:14:19.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.210" level="INFO">${ACCURACY} = {'source_diff': [3.262999999999877e-06, 2.749999999999281e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.124999999999656e-06, 3.500000000000031e-06, 2.4450000000002248e-06...</msg>
<status status="PASS" starttime="20201112 10:14:19.196" endtime="20201112 10:14:19.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.214" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.213" endtime="20201112 10:14:19.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.217" level="INFO">VALUE: [3.262999999999877e-06, 2.749999999999281e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.124999999999656e-06, 3.500000000000031e-06, 2.4450000000002248e-06, 2.4299999999977118e-06, 2.7919999999979905e-06, 3.165999999998892e-06, 3.4869999999999346e-06, 3.139000000002695e-06, 2.7779999999984206e-06, 3.486000000000461e-06, 2.417000000001085e-06, 2.7770000000024164e-06, 3.4859999999969915e-06, 3.124999999999656e-06, 2.7779999999984206e-06, 3.472000000000891e-06, 2.80600000000103e-06, 3.181000000001405e-06, 2.4169999999976155e-06, 2.77800000000189e-06, 3.500000000000031e-06, 3.1669999999983656e-06, 3.4590000000007948e-06, 2.76400000000232e-06, 2.431000000000655e-06, 3.139000000002695e-06, 3.500000000000031e-06, 3.1389999999992257e-06, 2.431000000000655e-06, 2.7779999999984206e-06, 2.417000000001085e-06, 3.486000000000461e-06, 3.1389999999992257e-06, 2.79200000000146e-06, 3.5139999999996008e-06, 3.4730000000003647e-06, 3.124999999999656e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.1389999999992257e-06, 3.5279999999991707e-06, 2.7910000000019863e-06, 3.124999999999656e-06, 3.500000000000031e-06, 2.4309999999971854e-06]</msg>
<status status="PASS" starttime="20201112 10:14:19.215" endtime="20201112 10:14:19.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.211" endtime="20201112 10:14:19.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.220" endtime="20201112 10:14:19.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.223" endtime="20201112 10:14:19.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.222" endtime="20201112 10:14:19.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.218" endtime="20201112 10:14:19.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.845" endtime="20201112 10:14:19.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.844" endtime="20201112 10:14:19.244"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.252" endtime="20201112 10:14:19.266"></status>
</kw>
<msg timestamp="20201112 10:14:19.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.251" endtime="20201112 10:14:19.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.268" endtime="20201112 10:14:19.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.270" endtime="20201112 10:14:19.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.248" endtime="20201112 10:14:19.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.246" endtime="20201112 10:14:19.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.280" endtime="20201112 10:14:19.569"></status>
</kw>
<msg timestamp="20201112 10:14:19.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021487125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.279" endtime="20201112 10:14:19.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021487125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.574" endtime="20201112 10:14:19.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.582" endtime="20201112 10:14:19.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.276" endtime="20201112 10:14:19.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.274" endtime="20201112 10:14:19.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.589" level="INFO">${RESULT} = [{'time': 0.021487125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.021492903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:19.586" endtime="20201112 10:14:19.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.603" level="INFO">${ACCURACY} = {'source_diff': [4.680999999999436e-06, 3.861000000000836e-06, 3.8749999999969365e-06, 3.4590000000007948e-06, 4.264000000000351e-06, 3.5139999999996008e-06, 3.4859999999969915e-06, 4.555999999999311e...</msg>
<status status="PASS" starttime="20201112 10:14:19.590" endtime="20201112 10:14:19.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.607" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.606" endtime="20201112 10:14:19.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.610" level="INFO">VALUE: [4.680999999999436e-06, 3.861000000000836e-06, 3.8749999999969365e-06, 3.4590000000007948e-06, 4.264000000000351e-06, 3.5139999999996008e-06, 3.4859999999969915e-06, 4.555999999999311e-06, 3.5139999999996008e-06, 4.5699999999988805e-06, 3.4719999999974216e-06, 3.847000000001266e-06, 3.861000000000836e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 4.5839999999984504e-06, 4.222000000001641e-06, 4.555999999999311e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.208000000002071e-06, 4.568999999999407e-06, 3.500000000000031e-06, 3.847000000001266e-06, 4.193999999999032e-06, 3.846999999997797e-06, 3.861000000000836e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.165999999999892e-06, 3.526999999999697e-06, 3.4439999999982818e-06, 3.875000000000406e-06, 4.208000000002071e-06, 3.500000000000031e-06, 3.500000000000031e-06, 4.1949999999985055e-06, 3.486000000000461e-06, 4.555999999999311e-06, 4.541000000000267e-06, 4.208000000002071e-06, 4.568999999999407e-06, 3.5279999999991707e-06, 3.902999999999546e-06, 4.4999999999975615e-06, 4.208000000002071e-06, 4.209000000001545e-06, 4.208000000002071e-06, 3.875000000000406e-06, 3.486000000000461e-06]</msg>
<status status="PASS" starttime="20201112 10:14:19.608" endtime="20201112 10:14:19.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.603" endtime="20201112 10:14:19.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.613" endtime="20201112 10:14:19.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.616" endtime="20201112 10:14:19.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.615" endtime="20201112 10:14:19.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.611" endtime="20201112 10:14:19.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.245" endtime="20201112 10:14:19.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.244" endtime="20201112 10:14:19.637"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.646" endtime="20201112 10:14:19.659"></status>
</kw>
<msg timestamp="20201112 10:14:19.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.644" endtime="20201112 10:14:19.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.661" endtime="20201112 10:14:19.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.663" endtime="20201112 10:14:19.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.641" endtime="20201112 10:14:19.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.639" endtime="20201112 10:14:19.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.673" endtime="20201112 10:14:19.959"></status>
</kw>
<msg timestamp="20201112 10:14:19.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.671" endtime="20201112 10:14:19.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.963" endtime="20201112 10:14:19.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.972" endtime="20201112 10:14:19.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.669" endtime="20201112 10:14:19.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.667" endtime="20201112 10:14:19.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.978" level="INFO">${RESULT} = [{'time': 0.021601222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.021607847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:19.975" endtime="20201112 10:14:19.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.992" level="INFO">${ACCURACY} = {'source_diff': [5.778000000001421e-06, 4.568999999999407e-06, 4.555000000003306e-06, 4.555999999999311e-06, 4.568999999999407e-06, 4.597000000002016e-06, 4.554999999999837e-06, 4.568999999999407e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:19.979" endtime="20201112 10:14:19.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.996" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.995" endtime="20201112 10:14:19.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.999" level="INFO">VALUE: [5.778000000001421e-06, 4.568999999999407e-06, 4.555000000003306e-06, 4.555999999999311e-06, 4.568999999999407e-06, 4.597000000002016e-06, 4.554999999999837e-06, 4.568999999999407e-06, 5.291000000001017e-06, 4.554999999999837e-06, 4.889000000000976e-06, 4.8889999999975065e-06, 4.5699999999988805e-06, 5.290999999997548e-06, 5.278000000000921e-06, 5.278000000000921e-06, 4.596999999998547e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.277000000001447e-06, 4.568999999999407e-06, 4.568999999999407e-06, 5.2499999999983116e-06, 4.582999999998977e-06, 4.597000000002016e-06, 5.278000000000921e-06, 5.278000000000921e-06, 4.57000000000235e-06, 4.582999999998977e-06, 5.2639999999978815e-06, 4.554999999999837e-06, 4.5699999999988805e-06, 5.278000000000921e-06, 5.278000000000921e-06, 4.57000000000235e-06, 4.568999999999407e-06, 5.292000000000491e-06, 4.514000000000601e-06, 5.250000000001781e-06, 4.5699999999988805e-06, 5.306000000000061e-06, 4.568999999999407e-06, 5.292000000000491e-06, 4.917000000000116e-06, 5.332999999999727e-06, 5.276999999997978e-06, 5.305000000000587e-06, 5.221999999999172e-06, 4.5699999999988805e-06, 4.5839999999984504e-06]</msg>
<status status="PASS" starttime="20201112 10:14:19.997" endtime="20201112 10:14:19.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.993" endtime="20201112 10:14:20.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.002" endtime="20201112 10:14:20.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.005" endtime="20201112 10:14:20.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.004" endtime="20201112 10:14:20.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.000" endtime="20201112 10:14:20.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.638" endtime="20201112 10:14:20.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.637" endtime="20201112 10:14:20.026"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.034" endtime="20201112 10:14:20.049"></status>
</kw>
<msg timestamp="20201112 10:14:20.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.033" endtime="20201112 10:14:20.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.051" endtime="20201112 10:14:20.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.053" endtime="20201112 10:14:20.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.030" endtime="20201112 10:14:20.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.028" endtime="20201112 10:14:20.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.064" endtime="20201112 10:14:20.347"></status>
</kw>
<msg timestamp="20201112 10:14:20.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.062" endtime="20201112 10:14:20.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.351" endtime="20201112 10:14:20.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.359" endtime="20201112 10:14:20.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.059" endtime="20201112 10:14:20.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.057" endtime="20201112 10:14:20.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.366" level="INFO">${RESULT} = [{'time': 0.021968778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.021976847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:20.363" endtime="20201112 10:14:20.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.379" level="INFO">${ACCURACY} = {'source_diff': [6.485999999999992e-06, 5.985999999999492e-06, 6.3479999999997705e-06, 6.347000000000297e-06, 6.347000000000297e-06, 6.347000000000297e-06, 6.347000000000297e-06, 5.639000000001726e-06...</msg>
<status status="PASS" starttime="20201112 10:14:20.367" endtime="20201112 10:14:20.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.384" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.383" endtime="20201112 10:14:20.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.386" level="INFO">VALUE: [6.485999999999992e-06, 5.985999999999492e-06, 6.3479999999997705e-06, 6.347000000000297e-06, 6.347000000000297e-06, 6.347000000000297e-06, 6.347000000000297e-06, 5.639000000001726e-06, 5.971999999999922e-06, 5.666000000001392e-06, 6.360999999999867e-06, 5.708000000000102e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 6.3479999999997705e-06, 5.695000000000006e-06, 6.347000000000297e-06, 5.986999999998965e-06, 5.637999999998783e-06, 5.624999999998687e-06, 5.986000000002961e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.639000000001726e-06, 6.36199999999934e-06, 5.639000000001726e-06, 6.347000000000297e-06, 6.389000000002476e-06, 5.6389999999982565e-06, 5.985999999999492e-06, 5.625000000002156e-06, 6.346999999996827e-06, 6.347000000000297e-06, 5.986999999998965e-06, 5.639000000001726e-06, 5.624999999998687e-06, 6.319999999997161e-06, 6.3479999999997705e-06, 6.3479999999997705e-06, 5.624999999998687e-06, 6.0139999999986316e-06, 6.347000000000297e-06, 6.347000000000297e-06, 6.374999999999437e-06, 5.985999999999492e-06, 5.639000000001726e-06, 6.347000000000297e-06, 5.582999999999977e-06, 5.637999999998783e-06, 6.347000000000297e-06]</msg>
<status status="PASS" starttime="20201112 10:14:20.385" endtime="20201112 10:14:20.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.380" endtime="20201112 10:14:20.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.389" endtime="20201112 10:14:20.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.393" endtime="20201112 10:14:20.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.391" endtime="20201112 10:14:20.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.388" endtime="20201112 10:14:20.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.027" endtime="20201112 10:14:20.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.026" endtime="20201112 10:14:20.414"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.422" endtime="20201112 10:14:20.436"></status>
</kw>
<msg timestamp="20201112 10:14:20.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.421" endtime="20201112 10:14:20.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.438" endtime="20201112 10:14:20.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.440" endtime="20201112 10:14:20.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.418" endtime="20201112 10:14:20.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.416" endtime="20201112 10:14:20.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.450" endtime="20201112 10:14:20.736"></status>
</kw>
<msg timestamp="20201112 10:14:20.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021570764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.449" endtime="20201112 10:14:20.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021570764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.740" endtime="20201112 10:14:20.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.748" endtime="20201112 10:14:20.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.446" endtime="20201112 10:14:20.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.445" endtime="20201112 10:14:20.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.755" level="INFO">${RESULT} = [{'time': 0.021577958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.021586778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:20.752" endtime="20201112 10:14:20.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.769" level="INFO">${ACCURACY} = {'source_diff': [7.194000000002032e-06, 6.722000000000672e-06, 6.708000000001102e-06, 7.040999999999298e-06, 6.694000000001532e-06, 7.429999999999243e-06, 6.334000000000201e-06, 6.7230000000001455e-06...</msg>
<status status="PASS" starttime="20201112 10:14:20.756" endtime="20201112 10:14:20.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.774" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.773" endtime="20201112 10:14:20.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.776" level="INFO">VALUE: [7.194000000002032e-06, 6.722000000000672e-06, 6.708000000001102e-06, 7.040999999999298e-06, 6.694000000001532e-06, 7.429999999999243e-06, 6.334000000000201e-06, 6.7230000000001455e-06, 7.415999999999673e-06, 7.069000000001907e-06, 7.443999999998813e-06, 7.347000000001297e-06, 6.693999999998063e-06, 7.056000000001811e-06, 6.360999999999867e-06, 6.708000000001102e-06, 7.389000000000007e-06, 6.694999999997536e-06, 6.694999999997536e-06, 7.070000000001381e-06, 7.4169999999991465e-06, 7.055999999998341e-06, 6.7079999999976325e-06, 7.4169999999991465e-06, 7.429999999999243e-06, 7.083000000001477e-06, 6.360999999999867e-06, 6.776999999999478e-06, 7.069999999997911e-06, 6.762999999999908e-06, 6.306000000001061e-06, 7.389000000000007e-06, 6.693999999998063e-06, 7.415999999999673e-06, 7.4169999999991465e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 7.4169999999991465e-06, 7.429999999999243e-06, 6.722000000000672e-06, 6.693999999998063e-06, 7.415999999999673e-06, 6.722000000000672e-06, 6.9719999999974525e-06, 7.444000000002282e-06, 7.069000000001907e-06, 6.7079999999976325e-06, 6.638999999999257e-06, 6.431000000001186e-06, 6.694000000001532e-06]</msg>
<status status="PASS" starttime="20201112 10:14:20.775" endtime="20201112 10:14:20.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.770" endtime="20201112 10:14:20.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.779" endtime="20201112 10:14:20.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.783" endtime="20201112 10:14:20.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.781" endtime="20201112 10:14:20.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.778" endtime="20201112 10:14:20.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.415" endtime="20201112 10:14:20.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.414" endtime="20201112 10:14:20.803"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.812" endtime="20201112 10:14:20.826"></status>
</kw>
<msg timestamp="20201112 10:14:20.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.811" endtime="20201112 10:14:20.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.828" endtime="20201112 10:14:20.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.830" endtime="20201112 10:14:20.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.808" endtime="20201112 10:14:20.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.806" endtime="20201112 10:14:20.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.840" endtime="20201112 10:14:21.130"></status>
</kw>
<msg timestamp="20201112 10:14:21.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.838" endtime="20201112 10:14:21.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.134" endtime="20201112 10:14:21.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.142" endtime="20201112 10:14:21.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.836" endtime="20201112 10:14:21.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.834" endtime="20201112 10:14:21.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.148" level="INFO">${RESULT} = [{'time': 0.022248833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.022258931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:21.145" endtime="20201112 10:14:21.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.162" level="INFO">${ACCURACY} = {'source_diff': [8.610999999998648e-06, 8.486999999997996e-06, 8.139000000000757e-06, 8.500000000001562e-06, 8.125000000001187e-06, 8.499999999998092e-06, 7.417000000002616e-06, 8.485999999998523e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:21.149" endtime="20201112 10:14:21.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.166" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.165" endtime="20201112 10:14:21.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.169" level="INFO">VALUE: [8.610999999998648e-06, 8.486999999997996e-06, 8.139000000000757e-06, 8.500000000001562e-06, 8.125000000001187e-06, 8.499999999998092e-06, 7.417000000002616e-06, 8.485999999998523e-06, 7.721999999998203e-06, 8.195000000002506e-06, 8.499999999998092e-06, 7.4719999999979525e-06, 7.415999999999673e-06, 8.473000000001896e-06, 7.429999999999243e-06, 7.764000000000382e-06, 7.473000000000896e-06, 7.750000000000812e-06, 7.443999999998813e-06, 7.417000000002616e-06, 7.764000000000382e-06, 7.415999999999673e-06, 8.486000000001992e-06, 7.4169999999991465e-06, 7.417000000002616e-06, 7.777000000000478e-06, 8.054999999999868e-06, 7.486000000000992e-06, 7.791999999999522e-06, 7.402999999999577e-06, 7.415999999999673e-06, 7.402000000000103e-06, 7.791000000000048e-06, 7.777999999999952e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.485999999998523e-06, 7.388000000000533e-06, 7.347000000001297e-06, 7.429999999999243e-06, 7.777999999999952e-06, 8.485999999998523e-06, 8.430999999999716e-06, 7.764000000000382e-06, 8.125000000001187e-06, 7.4169999999991465e-06, 7.777999999999952e-06, 7.792000000002991e-06, 8.499999999998092e-06, 8.125000000001187e-06]</msg>
<status status="PASS" starttime="20201112 10:14:21.167" endtime="20201112 10:14:21.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.163" endtime="20201112 10:14:21.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.172" endtime="20201112 10:14:21.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.175" endtime="20201112 10:14:21.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.174" endtime="20201112 10:14:21.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.170" endtime="20201112 10:14:21.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.804" endtime="20201112 10:14:21.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.804" endtime="20201112 10:14:21.196"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.205" endtime="20201112 10:14:21.219"></status>
</kw>
<msg timestamp="20201112 10:14:21.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.203" endtime="20201112 10:14:21.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.221" endtime="20201112 10:14:21.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.223" endtime="20201112 10:14:21.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.201" endtime="20201112 10:14:21.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.199" endtime="20201112 10:14:21.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.233" endtime="20201112 10:14:21.519"></status>
</kw>
<msg timestamp="20201112 10:14:21.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:21.231" endtime="20201112 10:14:21.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:21.523" endtime="20201112 10:14:21.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.531" endtime="20201112 10:14:21.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.229" endtime="20201112 10:14:21.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.227" endtime="20201112 10:14:21.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.538" level="INFO">${RESULT} = [{'time': 0.022036167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.022047292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:21.535" endtime="20201112 10:14:21.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.551" level="INFO">${ACCURACY} = {'source_diff': [9.666999999997927e-06, 9.208999999999606e-06, 9.195000000000036e-06, 9.208999999999606e-06, 8.486999999997996e-06, 8.486000000001992e-06, 9.222000000003172e-06, 8.471999999998953e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:21.539" endtime="20201112 10:14:21.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.556" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.555" endtime="20201112 10:14:21.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.558" level="INFO">VALUE: [9.666999999997927e-06, 9.208999999999606e-06, 9.195000000000036e-06, 9.208999999999606e-06, 8.486999999997996e-06, 8.486000000001992e-06, 9.222000000003172e-06, 8.471999999998953e-06, 8.847999999998801e-06, 9.166999999997427e-06, 9.194000000000563e-06, 9.209000000003076e-06, 8.917000000000647e-06, 9.194000000000563e-06, 8.84800000000227e-06, 8.485999999998523e-06, 9.541999999997802e-06, 9.236000000002742e-06, 8.847000000002797e-06, 8.487000000001466e-06, 8.472000000002422e-06, 9.597000000000078e-06, 9.208999999999606e-06, 9.194000000000563e-06, 8.861000000002367e-06, 9.194000000000563e-06, 9.513999999998662e-06, 9.139000000001757e-06, 8.486000000001992e-06, 8.486000000001992e-06, 9.555000000001368e-06, 9.221999999999703e-06, 9.541000000001798e-06, 9.152999999997857e-06, 9.194000000000563e-06, 8.833999999999231e-06, 9.208999999999606e-06, 8.540999999997329e-06, 9.208000000000133e-06, 9.222999999999176e-06, 8.819000000000188e-06, 9.195000000000036e-06, 9.193999999997093e-06, 8.846999999999328e-06, 9.208000000000133e-06, 9.194000000000563e-06, 9.597999999999551e-06, 8.473000000001896e-06, 8.471999999998953e-06, 9.264000000001882e-06]</msg>
<status status="PASS" starttime="20201112 10:14:21.557" endtime="20201112 10:14:21.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.552" endtime="20201112 10:14:21.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.561" endtime="20201112 10:14:21.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.565" endtime="20201112 10:14:21.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.564" endtime="20201112 10:14:21.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.560" endtime="20201112 10:14:21.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.197" endtime="20201112 10:14:21.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.196" endtime="20201112 10:14:21.586"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.595" endtime="20201112 10:14:21.609"></status>
</kw>
<msg timestamp="20201112 10:14:21.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.593" endtime="20201112 10:14:21.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.610" endtime="20201112 10:14:21.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.613" endtime="20201112 10:14:21.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.591" endtime="20201112 10:14:21.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.589" endtime="20201112 10:14:21.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.623" endtime="20201112 10:14:21.905"></status>
</kw>
<msg timestamp="20201112 10:14:21.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.621" endtime="20201112 10:14:21.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.910" endtime="20201112 10:14:21.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.918" endtime="20201112 10:14:21.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.619" endtime="20201112 10:14:21.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.617" endtime="20201112 10:14:21.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.924" level="INFO">${RESULT} = [{'time': 0.021677181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.021689403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:21.921" endtime="20201112 10:14:21.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.938" level="INFO">${ACCURACY} = {'source_diff': [1.0027999999998732e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 9.554999999997899e-06, 9.931000000001217e-06, 9.915999999998704e-06, 9.527999999998232e-06, 9.540999999998329e-...</msg>
<status status="PASS" starttime="20201112 10:14:21.925" endtime="20201112 10:14:21.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.942" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.941" endtime="20201112 10:14:21.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.945" level="INFO">VALUE: [1.0027999999998732e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 9.554999999997899e-06, 9.931000000001217e-06, 9.915999999998704e-06, 9.527999999998232e-06, 9.540999999998329e-06, 1.0278000000002452e-05, 9.554999999997899e-06, 1.0264000000002882e-05, 9.542000000001272e-06, 9.556000000000842e-06, 9.929999999998274e-06, 1.0262999999999939e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 9.555999999997372e-06, 1.0249999999999843e-05, 9.512999999999189e-06, 9.527999999998232e-06, 1.0596999999997608e-05, 1.0263999999999412e-05, 9.555000000001368e-06, 9.889000000002507e-06, 1.0249999999999843e-05, 1.0264000000002882e-05, 9.555999999997372e-06, 9.916999999998177e-06, 9.931000000001217e-06, 1.0612000000000121e-05, 9.513999999998662e-06, 1.0277999999998982e-05, 9.903000000002077e-06, 9.597000000000078e-06, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0277999999998982e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0291999999998552e-05, 9.901999999999134e-06, 9.540999999998329e-06, 1.0277999999998982e-05, 1.0264000000002882e-05, 1.0277999999998982e-05, 1.0277999999998982e-05, 1.0305000000002118e-05, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201112 10:14:21.943" endtime="20201112 10:14:21.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.939" endtime="20201112 10:14:21.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.948" endtime="20201112 10:14:21.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.952" endtime="20201112 10:14:21.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.950" endtime="20201112 10:14:21.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.947" endtime="20201112 10:14:21.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.587" endtime="20201112 10:14:21.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.587" endtime="20201112 10:14:21.972"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.981" endtime="20201112 10:14:21.995"></status>
</kw>
<msg timestamp="20201112 10:14:21.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.980" endtime="20201112 10:14:21.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.997" endtime="20201112 10:14:21.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.999" endtime="20201112 10:14:22.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.977" endtime="20201112 10:14:22.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.975" endtime="20201112 10:14:22.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.009" endtime="20201112 10:14:22.292"></status>
</kw>
<msg timestamp="20201112 10:14:22.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.007" endtime="20201112 10:14:22.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.296" endtime="20201112 10:14:22.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.305" endtime="20201112 10:14:22.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.005" endtime="20201112 10:14:22.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.003" endtime="20201112 10:14:22.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.311" level="INFO">${RESULT} = [{'time': 0.021851208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1472000000001953e-05, 'source_diff': 1.1472000000001953e-05}, {'time': 0.021864042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.308" endtime="20201112 10:14:22.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.326" level="INFO">${ACCURACY} = {'source_diff': [1.1472000000001953e-05, 1.0959000000001357e-05, 1.1319999999998692e-05, 1.1347000000001828e-05, 1.0999999999997123e-05, 1.1291999999999552e-05, 1.1361000000001398e-05, 1.0625000000000...</msg>
<status status="PASS" starttime="20201112 10:14:22.312" endtime="20201112 10:14:22.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.330" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.329" endtime="20201112 10:14:22.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.333" level="INFO">VALUE: [1.1472000000001953e-05, 1.0959000000001357e-05, 1.1319999999998692e-05, 1.1347000000001828e-05, 1.0999999999997123e-05, 1.1291999999999552e-05, 1.1361000000001398e-05, 1.0625000000000218e-05, 1.0695000000001537e-05, 1.1347000000001828e-05, 1.1319000000002688e-05, 1.0652999999999357e-05, 1.1347000000001828e-05, 1.0973000000000926e-05, 1.0986000000001023e-05, 1.1332999999998788e-05, 1.0986000000001023e-05, 1.1347000000001828e-05, 1.1346999999998358e-05, 1.0611000000000648e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.1333000000002258e-05, 1.0972000000001453e-05, 1.0637999999996844e-05, 1.0624999999996748e-05, 1.0638999999999788e-05, 1.0973000000000926e-05, 1.0944999999998317e-05, 1.1362000000000871e-05, 1.0986000000001023e-05, 1.0611000000000648e-05, 1.1333999999998262e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.1000000000000593e-05, 1.0611000000000648e-05, 1.0665999999999454e-05, 1.1347000000001828e-05, 1.1333999999998262e-05, 1.1361000000001398e-05, 1.1292000000003022e-05, 1.0583000000001508e-05, 1.1320000000002162e-05, 1.0610999999997178e-05, 1.0625000000000218e-05, 1.1333999999998262e-05, 1.0638999999999788e-05, 1.1348000000001301e-05, 1.1320000000002162e-05]</msg>
<status status="PASS" starttime="20201112 10:14:22.331" endtime="20201112 10:14:22.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.327" endtime="20201112 10:14:22.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.336" endtime="20201112 10:14:22.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.340" endtime="20201112 10:14:22.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.338" endtime="20201112 10:14:22.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.335" endtime="20201112 10:14:22.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.973" endtime="20201112 10:14:22.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.973" endtime="20201112 10:14:22.360"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.369" endtime="20201112 10:14:22.383"></status>
</kw>
<msg timestamp="20201112 10:14:22.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.367" endtime="20201112 10:14:22.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.385" endtime="20201112 10:14:22.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.387" endtime="20201112 10:14:22.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.365" endtime="20201112 10:14:22.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.363" endtime="20201112 10:14:22.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.397" endtime="20201112 10:14:22.681"></status>
</kw>
<msg timestamp="20201112 10:14:22.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.396" endtime="20201112 10:14:22.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.685" endtime="20201112 10:14:22.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.693" endtime="20201112 10:14:22.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.393" endtime="20201112 10:14:22.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.391" endtime="20201112 10:14:22.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.700" level="INFO">${RESULT} = [{'time': 0.021697722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2888999999998568e-05, 'source_diff': 1.2888999999998568e-05}, {'time': 0.021711528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.697" endtime="20201112 10:14:22.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.714" level="INFO">${ACCURACY} = {'source_diff': [1.2888999999998568e-05, 1.1694999999999067e-05, 1.1694999999999067e-05, 1.1693999999999594e-05, 1.2042000000000302e-05, 1.2416000000001204e-05, 1.1709000000002107e-05, 1.2055000000000...</msg>
<status status="PASS" starttime="20201112 10:14:22.701" endtime="20201112 10:14:22.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.718" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.717" endtime="20201112 10:14:22.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.721" level="INFO">VALUE: [1.2888999999998568e-05, 1.1694999999999067e-05, 1.1694999999999067e-05, 1.1693999999999594e-05, 1.2042000000000302e-05, 1.2416000000001204e-05, 1.1709000000002107e-05, 1.2055000000000399e-05, 1.2042000000000302e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.2401999999998164e-05, 1.2485999999999053e-05, 1.1721999999998733e-05, 1.2417000000000677e-05, 1.2403000000001108e-05, 1.2389000000001538e-05, 1.2457999999999914e-05, 1.2068999999999969e-05, 1.2402999999997638e-05, 1.2013999999997693e-05, 1.1680999999999497e-05, 1.2401999999998164e-05, 1.2028000000000733e-05, 1.2403000000001108e-05, 1.2388999999998068e-05, 1.2458999999999387e-05, 1.2415999999997734e-05, 1.1707999999999164e-05, 1.202699999999779e-05, 1.2401999999998164e-05, 1.1694000000003063e-05, 1.2403000000001108e-05, 1.1332999999998788e-05, 1.1694999999999067e-05, 1.2402999999997638e-05, 1.2402999999997638e-05, 1.1666000000000454e-05, 1.1708999999998637e-05, 1.2042000000000302e-05, 1.2069999999999442e-05, 1.2417000000000677e-05, 1.1722999999998207e-05, 1.2069999999999442e-05, 1.2431000000000247e-05, 1.1680000000000024e-05, 1.1721999999998733e-05, 1.2417000000000677e-05, 1.2055999999999872e-05, 1.1680999999999497e-05]</msg>
<status status="PASS" starttime="20201112 10:14:22.719" endtime="20201112 10:14:22.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.715" endtime="20201112 10:14:22.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.724" endtime="20201112 10:14:22.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.728" endtime="20201112 10:14:22.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.726" endtime="20201112 10:14:22.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.723" endtime="20201112 10:14:22.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.361" endtime="20201112 10:14:22.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.361" endtime="20201112 10:14:22.749"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.757" endtime="20201112 10:14:22.772"></status>
</kw>
<msg timestamp="20201112 10:14:22.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.756" endtime="20201112 10:14:22.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.774" endtime="20201112 10:14:22.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.776" endtime="20201112 10:14:22.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.753" endtime="20201112 10:14:22.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.751" endtime="20201112 10:14:22.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.786" endtime="20201112 10:14:23.070"></status>
</kw>
<msg timestamp="20201112 10:14:23.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:22.785" endtime="20201112 10:14:23.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:23.075" endtime="20201112 10:14:23.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.083" endtime="20201112 10:14:23.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.782" endtime="20201112 10:14:23.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.780" endtime="20201112 10:14:23.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.089" level="INFO">${RESULT} = [{'time': 0.021784, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3278000000001983e-05, 'source_diff': 1.3278000000001983e-05}, {'time': 0.02179875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:23.086" endtime="20201112 10:14:23.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.103" level="INFO">${ACCURACY} = {'source_diff': [1.3278000000001983e-05, 1.2763999999998443e-05, 1.2778000000001483e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3124999999999248e-05, 1.2763999999998...</msg>
<status status="PASS" starttime="20201112 10:14:23.090" endtime="20201112 10:14:23.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.107" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.106" endtime="20201112 10:14:23.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.110" level="INFO">VALUE: [1.3278000000001983e-05, 1.2763999999998443e-05, 1.2778000000001483e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3124999999999248e-05, 1.2763999999998443e-05, 1.2764000000001913e-05, 1.3139000000002288e-05, 1.2721999999999734e-05, 1.2444999999999817e-05, 1.3499999999999623e-05, 1.3097000000000109e-05, 1.3472000000000484e-05, 1.2388999999998068e-05, 1.3555000000001899e-05, 1.2403000000001108e-05, 1.2763999999998443e-05, 1.2778000000001483e-05, 1.3124999999999248e-05, 1.2403000000001108e-05, 1.3472000000000484e-05, 1.3430000000001774e-05, 1.3124999999999248e-05, 1.2777999999998013e-05, 1.3124999999999248e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.2389000000001538e-05, 1.2778000000001483e-05, 1.2778000000001483e-05, 1.3125000000002718e-05, 1.2417000000000677e-05, 1.2750000000002343e-05, 1.3097999999999582e-05, 1.2417000000000677e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3471999999997014e-05, 1.3110999999999678e-05, 1.2415999999997734e-05, 1.276299999999897e-05, 1.3486000000000054e-05, 1.3472999999999957e-05, 1.3499999999999623e-05, 1.3111999999999152e-05, 1.2763999999998443e-05, 1.3124999999999248e-05, 1.2403000000001108e-05]</msg>
<status status="PASS" starttime="20201112 10:14:23.108" endtime="20201112 10:14:23.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.104" endtime="20201112 10:14:23.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.113" endtime="20201112 10:14:23.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.117" endtime="20201112 10:14:23.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.115" endtime="20201112 10:14:23.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.112" endtime="20201112 10:14:23.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.749" endtime="20201112 10:14:23.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.749" endtime="20201112 10:14:23.138"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.146" endtime="20201112 10:14:23.161"></status>
</kw>
<msg timestamp="20201112 10:14:23.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.145" endtime="20201112 10:14:23.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.162" endtime="20201112 10:14:23.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.165" endtime="20201112 10:14:23.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.142" endtime="20201112 10:14:23.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.140" endtime="20201112 10:14:23.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.175" endtime="20201112 10:14:23.460"></status>
</kw>
<msg timestamp="20201112 10:14:23.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:23.173" endtime="20201112 10:14:23.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:23.465" endtime="20201112 10:14:23.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.473" endtime="20201112 10:14:23.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.171" endtime="20201112 10:14:23.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.169" endtime="20201112 10:14:23.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.480" level="INFO">${RESULT} = [{'time': 0.022021819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4319000000002219e-05, 'source_diff': 1.4319000000002219e-05}, {'time': 0.022037736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.476" endtime="20201112 10:14:23.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.493" level="INFO">${ACCURACY} = {'source_diff': [1.4319000000002219e-05, 1.4179999999999054e-05, 1.4180999999998528e-05, 1.4179999999999054e-05, 1.4541999999999333e-05, 1.4194999999998098e-05, 1.3819000000001719e-05, 1.4541999999999...</msg>
<status status="PASS" starttime="20201112 10:14:23.480" endtime="20201112 10:14:23.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.497" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.496" endtime="20201112 10:14:23.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.500" level="INFO">VALUE: [1.4319000000002219e-05, 1.4179999999999054e-05, 1.4180999999998528e-05, 1.4179999999999054e-05, 1.4541999999999333e-05, 1.4194999999998098e-05, 1.3819000000001719e-05, 1.4541999999999333e-05, 1.4181000000001998e-05, 1.383299999999782e-05, 1.4222000000001234e-05, 1.3874999999999998e-05, 1.4556000000002373e-05, 1.4194999999998098e-05, 1.4193999999998624e-05, 1.3888999999999568e-05, 1.4472000000001484e-05, 1.3471999999997014e-05, 1.4500000000000624e-05, 1.4194000000002094e-05, 1.3820000000001192e-05, 1.4222000000001234e-05, 1.4193999999998624e-05, 1.4555999999998903e-05, 1.3472000000000484e-05, 1.3527000000002759e-05, 1.383299999999782e-05, 1.4556000000002373e-05, 1.3472999999999957e-05, 1.4223000000000707e-05, 1.4555999999998903e-05, 1.4569999999998473e-05, 1.4179999999999054e-05, 1.4194999999998098e-05, 1.3527999999998763e-05, 1.455499999999943e-05, 1.4180999999998528e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3833000000001289e-05, 1.458299999999857e-05, 1.4179999999999054e-05, 1.4208000000001664e-05, 1.454099999999986e-05, 1.4194000000002094e-05, 1.3861000000000429e-05, 1.4180999999998528e-05, 1.3499999999999623e-05, 1.3417000000001678e-05, 1.3848000000000332e-05]</msg>
<status status="PASS" starttime="20201112 10:14:23.499" endtime="20201112 10:14:23.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.494" endtime="20201112 10:14:23.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.503" endtime="20201112 10:14:23.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.507" endtime="20201112 10:14:23.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.505" endtime="20201112 10:14:23.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.502" endtime="20201112 10:14:23.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.138" endtime="20201112 10:14:23.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.138" endtime="20201112 10:14:23.528"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.536" endtime="20201112 10:14:23.551"></status>
</kw>
<msg timestamp="20201112 10:14:23.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.535" endtime="20201112 10:14:23.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.552" endtime="20201112 10:14:23.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.555" endtime="20201112 10:14:23.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.532" endtime="20201112 10:14:23.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.530" endtime="20201112 10:14:23.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.565" endtime="20201112 10:14:23.850"></status>
</kw>
<msg timestamp="20201112 10:14:23.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.563" endtime="20201112 10:14:23.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.854" endtime="20201112 10:14:23.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.862" endtime="20201112 10:14:23.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.561" endtime="20201112 10:14:23.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.559" endtime="20201112 10:14:23.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.869" level="INFO">${RESULT} = [{'time': 0.021784847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.537499999999803e-05, 'source_diff': 1.537499999999803e-05}, {'time': 0.021801764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:23.865" endtime="20201112 10:14:23.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.883" level="INFO">${ACCURACY} = {'source_diff': [1.537499999999803e-05, 1.5264000000000943e-05, 1.5235999999998334e-05, 1.4527999999999763e-05, 1.5277999999997044e-05, 1.4541999999999333e-05, 1.5249999999997904e-05, 1.52640000000009...</msg>
<status status="PASS" starttime="20201112 10:14:23.870" endtime="20201112 10:14:23.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.888" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.887" endtime="20201112 10:14:23.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.890" level="INFO">VALUE: [1.537499999999803e-05, 1.5264000000000943e-05, 1.5235999999998334e-05, 1.4527999999999763e-05, 1.5277999999997044e-05, 1.4541999999999333e-05, 1.5249999999997904e-05, 1.5264000000000943e-05, 1.4903000000000138e-05, 1.5264000000000943e-05, 1.5237000000001277e-05, 1.4888999999997099e-05, 1.5292000000000083e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.5207999999999194e-05, 1.455499999999943e-05, 1.5264000000000943e-05, 1.4903000000000138e-05, 1.4556000000002373e-05, 1.527700000000104e-05, 1.454099999999986e-05, 1.454099999999986e-05, 1.4903000000000138e-05, 1.5264000000000943e-05, 1.562499999999828e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.5611999999998183e-05, 1.5278000000000513e-05, 1.561100000000218e-05, 1.5584000000002513e-05, 1.5250000000001374e-05, 1.4569999999998473e-05, 1.4903000000000138e-05, 1.5263999999997474e-05, 1.5249999999997904e-05, 1.5250000000001374e-05, 1.4889000000000568e-05, 1.5250000000001374e-05, 1.4541999999999333e-05, 1.5292000000000083e-05, 1.529100000000061e-05, 1.5278000000000513e-05, 1.4541999999999333e-05, 1.5223000000001707e-05, 1.5305999999999653e-05, 1.5277999999997044e-05, 1.4887999999997625e-05]</msg>
<status status="PASS" starttime="20201112 10:14:23.889" endtime="20201112 10:14:23.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.884" endtime="20201112 10:14:23.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.894" endtime="20201112 10:14:23.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.897" endtime="20201112 10:14:23.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.895" endtime="20201112 10:14:23.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.892" endtime="20201112 10:14:23.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.529" endtime="20201112 10:14:23.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.528" endtime="20201112 10:14:23.918"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.926" endtime="20201112 10:14:23.940"></status>
</kw>
<msg timestamp="20201112 10:14:23.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.925" endtime="20201112 10:14:23.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.942" endtime="20201112 10:14:23.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.944" endtime="20201112 10:14:23.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.922" endtime="20201112 10:14:23.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.920" endtime="20201112 10:14:23.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.954" endtime="20201112 10:14:24.239"></status>
</kw>
<msg timestamp="20201112 10:14:24.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.953" endtime="20201112 10:14:24.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.243" endtime="20201112 10:14:24.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.251" endtime="20201112 10:14:24.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.950" endtime="20201112 10:14:24.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.948" endtime="20201112 10:14:24.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.258" level="INFO">${RESULT} = [{'time': 0.021738944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.609699999999964e-05, 'source_diff': 1.609699999999964e-05}, {'time': 0.021756903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:24.255" endtime="20201112 10:14:24.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.272" level="INFO">${ACCURACY} = {'source_diff': [1.609699999999964e-05, 1.634699999999989e-05, 1.566700000000046e-05, 1.633299999999685e-05, 1.6291999999997614e-05, 1.5612000000001652e-05, 1.562500000000175e-05, 1.633300000000032e-0...</msg>
<status status="PASS" starttime="20201112 10:14:24.259" endtime="20201112 10:14:24.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.276" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.275" endtime="20201112 10:14:24.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.279" level="INFO">VALUE: [1.609699999999964e-05, 1.634699999999989e-05, 1.566700000000046e-05, 1.633299999999685e-05, 1.6291999999997614e-05, 1.5612000000001652e-05, 1.562500000000175e-05, 1.633300000000032e-05, 1.6333999999999793e-05, 1.561099999999871e-05, 1.627699999999857e-05, 1.6320000000000223e-05, 1.631899999999728e-05, 1.633300000000032e-05, 1.5958999999999418e-05, 1.6347999999999363e-05, 1.561099999999871e-05, 1.6014000000001694e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.562500000000175e-05, 1.627699999999857e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.5569999999999473e-05, 1.6320000000000223e-05, 1.559700000000261e-05, 1.561099999999871e-05, 1.6333999999999793e-05, 1.6320000000000223e-05, 1.559699999999914e-05, 1.5583999999999043e-05, 1.5957999999999944e-05, 1.562500000000175e-05, 1.63889999999986e-05, 1.561100000000218e-05, 1.5985999999999084e-05, 1.5971999999999514e-05, 1.633300000000032e-05, 1.561099999999871e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.5986000000002554e-05, 1.634699999999989e-05, 1.559699999999914e-05, 1.559699999999914e-05, 1.561100000000218e-05, 1.562499999999828e-05, 1.5583999999999043e-05, 1.5707999999999694e-05]</msg>
<status status="PASS" starttime="20201112 10:14:24.277" endtime="20201112 10:14:24.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.272" endtime="20201112 10:14:24.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.287" endtime="20201112 10:14:24.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.290" endtime="20201112 10:14:24.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.289" endtime="20201112 10:14:24.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.285" endtime="20201112 10:14:24.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.919" endtime="20201112 10:14:24.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.918" endtime="20201112 10:14:24.311"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.320" endtime="20201112 10:14:24.334"></status>
</kw>
<msg timestamp="20201112 10:14:24.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.318" endtime="20201112 10:14:24.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.336" endtime="20201112 10:14:24.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.338" endtime="20201112 10:14:24.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.316" endtime="20201112 10:14:24.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.314" endtime="20201112 10:14:24.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.348" endtime="20201112 10:14:24.633"></status>
</kw>
<msg timestamp="20201112 10:14:24.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021715514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.346" endtime="20201112 10:14:24.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021715514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.638" endtime="20201112 10:14:24.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.646" endtime="20201112 10:14:24.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.344" endtime="20201112 10:14:24.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.342" endtime="20201112 10:14:24.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.652" level="INFO">${RESULT} = [{'time': 0.021715514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7472000000001014e-05, 'source_diff': 1.7472000000001014e-05}, {'time': 0.021734181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:24.649" endtime="20201112 10:14:24.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.666" level="INFO">${ACCURACY} = {'source_diff': [1.7472000000001014e-05, 1.6750000000002874e-05, 1.6320000000000223e-05, 1.740300000000264e-05, 1.7388000000000126e-05, 1.740300000000264e-05, 1.7042000000001833e-05, 1.670800000000069...</msg>
<status status="PASS" starttime="20201112 10:14:24.653" endtime="20201112 10:14:24.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.670" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.669" endtime="20201112 10:14:24.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.673" level="INFO">VALUE: [1.7472000000001014e-05, 1.6750000000002874e-05, 1.6320000000000223e-05, 1.740300000000264e-05, 1.7388000000000126e-05, 1.740300000000264e-05, 1.7042000000001833e-05, 1.6708000000000695e-05, 1.709700000000064e-05, 1.6749999999999404e-05, 1.6694000000001125e-05, 1.668100000000103e-05, 1.6986000000000084e-05, 1.7041999999998364e-05, 1.6665999999998515e-05, 1.636099999999946e-05, 1.6680000000001555e-05, 1.7041999999998364e-05, 1.741699999999874e-05, 1.7041999999998364e-05, 1.7401999999999695e-05, 1.669499999999713e-05, 1.6680000000001555e-05, 1.6986000000000084e-05, 1.7444000000001875e-05, 1.7042000000001833e-05, 1.6680000000001555e-05, 1.6333999999999793e-05, 1.7401999999999695e-05, 1.6694000000001125e-05, 1.740300000000264e-05, 1.740299999999917e-05, 1.665299999999842e-05, 1.7028000000002264e-05, 1.741699999999874e-05, 1.740299999999917e-05, 1.741700000000221e-05, 1.6750000000002874e-05, 1.6319999999996754e-05, 1.662499999999928e-05, 1.665299999999842e-05, 1.7028000000002264e-05, 1.7388000000000126e-05, 1.668100000000103e-05, 1.705500000000193e-05, 1.6679999999998085e-05, 1.6708000000000695e-05, 1.7347999999996894e-05, 1.6709000000000168e-05, 1.6695000000000598e-05]</msg>
<status status="PASS" starttime="20201112 10:14:24.672" endtime="20201112 10:14:24.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.667" endtime="20201112 10:14:24.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.677" endtime="20201112 10:14:24.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.680" endtime="20201112 10:14:24.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.678" endtime="20201112 10:14:24.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.675" endtime="20201112 10:14:24.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.312" endtime="20201112 10:14:24.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.312" endtime="20201112 10:14:24.701"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.709" endtime="20201112 10:14:24.724"></status>
</kw>
<msg timestamp="20201112 10:14:24.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.708" endtime="20201112 10:14:24.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.726" endtime="20201112 10:14:24.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.728" endtime="20201112 10:14:24.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.705" endtime="20201112 10:14:24.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.703" endtime="20201112 10:14:24.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.738" endtime="20201112 10:14:25.024"></status>
</kw>
<msg timestamp="20201112 10:14:25.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.737" endtime="20201112 10:14:25.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.028" endtime="20201112 10:14:25.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.036" endtime="20201112 10:14:25.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.734" endtime="20201112 10:14:25.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.732" endtime="20201112 10:14:25.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.043" level="INFO">${RESULT} = [{'time': 0.021738222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8236000000001334e-05, 'source_diff': 1.8236000000001334e-05}, {'time': 0.021757208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.039" endtime="20201112 10:14:25.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.056" level="INFO">${ACCURACY} = {'source_diff': [1.8236000000001334e-05, 1.731900000000175e-05, 1.7763999999999974e-05, 1.8084000000001543e-05, 1.7777999999999544e-05, 1.8444000000002875e-05, 1.8472000000002015e-05, 1.81660000000000...</msg>
<status status="PASS" starttime="20201112 10:14:25.044" endtime="20201112 10:14:25.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.060" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.059" endtime="20201112 10:14:25.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.063" level="INFO">VALUE: [1.8236000000001334e-05, 1.731900000000175e-05, 1.7763999999999974e-05, 1.8084000000001543e-05, 1.7777999999999544e-05, 1.8444000000002875e-05, 1.8472000000002015e-05, 1.8166000000000015e-05, 1.7777999999999544e-05, 1.809699999999817e-05, 1.845900000000192e-05, 1.811100000000121e-05, 1.7736000000000834e-05, 1.740299999999917e-05, 1.8458000000002445e-05, 1.8472000000002015e-05, 1.851300000000125e-05, 1.809700000000164e-05, 1.8486000000001584e-05, 1.811100000000121e-05, 1.73889999999996e-05, 1.7749999999996935e-05, 1.780499999999921e-05, 1.809699999999817e-05, 1.7750000000000404e-05, 1.840300000000017e-05, 1.812499999999731e-05, 1.841699999999974e-05, 1.812500000000078e-05, 1.7750000000000404e-05, 1.811100000000121e-05, 1.841699999999974e-05, 1.809700000000164e-05, 1.7750000000000404e-05, 1.809700000000164e-05, 1.8486000000001584e-05, 1.8471999999998545e-05, 1.7736000000000834e-05, 1.813900000000035e-05, 1.7750000000000404e-05, 1.7736000000000834e-05, 1.737500000000003e-05, 1.73889999999996e-05, 1.7750000000000404e-05, 1.777700000000007e-05, 1.812500000000078e-05, 1.7805999999998684e-05, 1.7847999999997394e-05, 1.8471999999998545e-05, 1.80829999999986e-05]</msg>
<status status="PASS" starttime="20201112 10:14:25.061" endtime="20201112 10:14:25.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.057" endtime="20201112 10:14:25.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.066" endtime="20201112 10:14:25.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.070" endtime="20201112 10:14:25.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.068" endtime="20201112 10:14:25.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.065" endtime="20201112 10:14:25.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.702" endtime="20201112 10:14:25.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.701" endtime="20201112 10:14:25.090"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.099" endtime="20201112 10:14:25.113"></status>
</kw>
<msg timestamp="20201112 10:14:25.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.097" endtime="20201112 10:14:25.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.115" endtime="20201112 10:14:25.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.117" endtime="20201112 10:14:25.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.095" endtime="20201112 10:14:25.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.093" endtime="20201112 10:14:25.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.127" endtime="20201112 10:14:25.413"></status>
</kw>
<msg timestamp="20201112 10:14:25.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.126" endtime="20201112 10:14:25.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.417" endtime="20201112 10:14:25.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.426" endtime="20201112 10:14:25.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.123" endtime="20201112 10:14:25.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.121" endtime="20201112 10:14:25.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.432" level="INFO">${RESULT} = [{'time': 0.021785167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9292000000000614e-05, 'source_diff': 1.9292000000000614e-05}, {'time': 0.021805986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.429" endtime="20201112 10:14:25.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.447" level="INFO">${ACCURACY} = {'source_diff': [1.9292000000000614e-05, 1.9180000000000585e-05, 1.8471999999998545e-05, 1.918100000000006e-05, 1.852700000000082e-05, 1.883299999999935e-05, 1.8457999999998975e-05, 1.883299999999935e...</msg>
<status status="PASS" starttime="20201112 10:14:25.433" endtime="20201112 10:14:25.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.451" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.450" endtime="20201112 10:14:25.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.454" level="INFO">VALUE: [1.9292000000000614e-05, 1.9180000000000585e-05, 1.8471999999998545e-05, 1.918100000000006e-05, 1.852700000000082e-05, 1.883299999999935e-05, 1.8457999999998975e-05, 1.883299999999935e-05, 1.9207999999999725e-05, 1.8458000000002445e-05, 1.883299999999935e-05, 1.9180000000000585e-05, 1.954099999999792e-05, 1.919499999999963e-05, 1.845899999999845e-05, 1.955499999999749e-05, 1.919499999999963e-05, 1.9556000000000434e-05, 1.9542000000000864e-05, 1.9236000000002335e-05, 1.8443999999999405e-05, 1.9179999999997116e-05, 1.8819999999999254e-05, 1.887499999999806e-05, 1.887499999999806e-05, 1.8848000000001863e-05, 1.918100000000006e-05, 1.920900000000267e-05, 1.955500000000096e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.881899999999978e-05, 1.8819999999999254e-05, 1.919499999999963e-05, 1.918100000000006e-05, 1.883299999999935e-05, 1.919499999999963e-05, 1.9513999999998255e-05, 1.918100000000006e-05, 1.848699999999759e-05, 1.9194000000000155e-05, 1.9542000000000864e-05, 1.8485999999998115e-05, 1.8457999999998975e-05, 1.916699999999702e-05, 1.884699999999892e-05, 1.918100000000006e-05, 1.8473000000001488e-05, 1.8819999999999254e-05, 1.915299999999745e-05]</msg>
<status status="PASS" starttime="20201112 10:14:25.452" endtime="20201112 10:14:25.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.448" endtime="20201112 10:14:25.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.457" endtime="20201112 10:14:25.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.460" endtime="20201112 10:14:25.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.459" endtime="20201112 10:14:25.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.455" endtime="20201112 10:14:25.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.091" endtime="20201112 10:14:25.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.091" endtime="20201112 10:14:25.481"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.490" endtime="20201112 10:14:25.505"></status>
</kw>
<msg timestamp="20201112 10:14:25.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.488" endtime="20201112 10:14:25.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.506" endtime="20201112 10:14:25.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.509" endtime="20201112 10:14:25.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.486" endtime="20201112 10:14:25.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.484" endtime="20201112 10:14:25.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.519" endtime="20201112 10:14:25.804"></status>
</kw>
<msg timestamp="20201112 10:14:25.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.517" endtime="20201112 10:14:25.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.808" endtime="20201112 10:14:25.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.816" endtime="20201112 10:14:25.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.515" endtime="20201112 10:14:25.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.513" endtime="20201112 10:14:25.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.822" level="INFO">${RESULT} = [{'time': 0.021964583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.021986333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:25.819" endtime="20201112 10:14:25.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.836" level="INFO">${ACCURACY} = {'source_diff': [2.036099999999999e-05, 1.987499999999906e-05, 1.98890000000021e-05, 2.0277999999998575e-05, 1.9528000000001294e-05, 1.9514000000001724e-05, 2.0263999999999005e-05, 2.0235999999999865e...</msg>
<status status="PASS" starttime="20201112 10:14:25.823" endtime="20201112 10:14:25.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.840" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.839" endtime="20201112 10:14:25.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.843" level="INFO">VALUE: [2.036099999999999e-05, 1.987499999999906e-05, 1.98890000000021e-05, 2.0277999999998575e-05, 1.9528000000001294e-05, 1.9514000000001724e-05, 2.0263999999999005e-05, 2.0235999999999865e-05, 1.954100000000139e-05, 1.988899999999863e-05, 1.9556000000000434e-05, 1.9542000000000864e-05, 1.9542000000000864e-05, 1.9528000000001294e-05, 1.954099999999792e-05, 2.0306000000001184e-05, 2.0263999999999005e-05, 2.062499999999981e-05, 2.0249999999999435e-05, 2.030499999999824e-05, 2.0249999999999435e-05, 1.9556000000000434e-05, 1.9541999999997395e-05, 1.98890000000021e-05, 1.9541999999997395e-05, 1.9542000000000864e-05, 1.955500000000096e-05, 1.9958000000000475e-05, 2.0249999999999435e-05, 2.061100000000024e-05, 2.0249999999999435e-05, 2.0263999999999005e-05, 1.988899999999863e-05, 2.0249999999999435e-05, 1.95830000000001e-05, 1.9556000000000434e-05, 2.0208000000000725e-05, 1.954099999999792e-05, 2.018100000000106e-05, 1.954099999999792e-05, 1.9542000000000864e-05, 1.954099999999792e-05, 2.061100000000024e-05, 1.9556000000000434e-05, 1.9514000000001724e-05, 2.0278000000002044e-05, 2.068099999999809e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 2.0249999999999435e-05]</msg>
<status status="PASS" starttime="20201112 10:14:25.841" endtime="20201112 10:14:25.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.837" endtime="20201112 10:14:25.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.846" endtime="20201112 10:14:25.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.850" endtime="20201112 10:14:25.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.848" endtime="20201112 10:14:25.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.845" endtime="20201112 10:14:25.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.482" endtime="20201112 10:14:25.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.482" endtime="20201112 10:14:25.871"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.879" endtime="20201112 10:14:25.893"></status>
</kw>
<msg timestamp="20201112 10:14:25.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.878" endtime="20201112 10:14:25.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.895" endtime="20201112 10:14:25.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.897" endtime="20201112 10:14:25.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.875" endtime="20201112 10:14:25.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.873" endtime="20201112 10:14:25.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.907" endtime="20201112 10:14:26.192"></status>
</kw>
<msg timestamp="20201112 10:14:26.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.906" endtime="20201112 10:14:26.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.196" endtime="20201112 10:14:26.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.204" endtime="20201112 10:14:26.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.903" endtime="20201112 10:14:26.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.901" endtime="20201112 10:14:26.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.211" level="INFO">${RESULT} = [{'time': 0.021897153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1083999999997605e-05, 'source_diff': 2.1083999999997605e-05}, {'time': 0.021920125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:26.207" endtime="20201112 10:14:26.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.224" level="INFO">${ACCURACY} = {'source_diff': [2.1083999999997605e-05, 2.133299999999838e-05, 2.0958000000001475e-05, 2.059700000000067e-05, 2.061100000000024e-05, 2.134699999999795e-05, 2.133300000000185e-05, 2.0542000000001864e-...</msg>
<status status="PASS" starttime="20201112 10:14:26.212" endtime="20201112 10:14:26.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.229" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.228" endtime="20201112 10:14:26.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.231" level="INFO">VALUE: [2.1083999999997605e-05, 2.133299999999838e-05, 2.0958000000001475e-05, 2.059700000000067e-05, 2.061100000000024e-05, 2.134699999999795e-05, 2.133300000000185e-05, 2.0542000000001864e-05, 2.130500000000271e-05, 2.0611999999999714e-05, 2.136100000000099e-05, 2.0598000000000144e-05, 2.05969999999972e-05, 2.1306000000002184e-05, 2.055500000000196e-05, 2.062499999999981e-05, 2.1277999999999575e-05, 2.0680000000002086e-05, 2.131899999999881e-05, 2.059700000000067e-05, 2.062499999999981e-05, 2.1306000000002184e-05, 2.0556000000001434e-05, 2.062499999999981e-05, 2.1250000000000435e-05, 2.131899999999881e-05, 2.059700000000067e-05, 2.1320000000001754e-05, 2.098700000000009e-05, 2.0598000000000144e-05, 2.091699999999877e-05, 2.133299999999838e-05, 2.0584000000000574e-05, 2.133300000000185e-05, 2.130499999999924e-05, 2.1334000000001324e-05, 2.061100000000024e-05, 2.1264000000000005e-05, 2.0569999999997535e-05, 2.1319999999998285e-05, 2.062499999999981e-05, 2.136100000000099e-05, 2.0584000000000574e-05, 2.131900000000228e-05, 2.061100000000024e-05, 2.0584000000000574e-05, 2.059700000000067e-05, 2.131900000000228e-05, 2.133300000000185e-05, 2.1319999999998285e-05]</msg>
<status status="PASS" starttime="20201112 10:14:26.230" endtime="20201112 10:14:26.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.225" endtime="20201112 10:14:26.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.235" endtime="20201112 10:14:26.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.238" endtime="20201112 10:14:26.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.237" endtime="20201112 10:14:26.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.233" endtime="20201112 10:14:26.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.872" endtime="20201112 10:14:26.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.871" endtime="20201112 10:14:26.259"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.267" endtime="20201112 10:14:26.282"></status>
</kw>
<msg timestamp="20201112 10:14:26.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.266" endtime="20201112 10:14:26.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.284" endtime="20201112 10:14:26.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.286" endtime="20201112 10:14:26.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.263" endtime="20201112 10:14:26.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.261" endtime="20201112 10:14:26.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.296" endtime="20201112 10:14:26.583"></status>
</kw>
<msg timestamp="20201112 10:14:26.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.295" endtime="20201112 10:14:26.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.587" endtime="20201112 10:14:26.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.595" endtime="20201112 10:14:26.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.292" endtime="20201112 10:14:26.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.290" endtime="20201112 10:14:26.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.602" level="INFO">${RESULT} = [{'time': 0.021619208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.180499999999974e-05, 'source_diff': 2.180499999999974e-05}, {'time': 0.021643333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:26.598" endtime="20201112 10:14:26.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.615" level="INFO">${ACCURACY} = {'source_diff': [2.180499999999974e-05, 2.204100000000042e-05, 2.24030000000007e-05, 2.237499999999809e-05, 2.2416000000000796e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.1693999999999186e-05...</msg>
<status status="PASS" starttime="20201112 10:14:26.602" endtime="20201112 10:14:26.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.619" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.618" endtime="20201112 10:14:26.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.622" level="INFO">VALUE: [2.180499999999974e-05, 2.204100000000042e-05, 2.24030000000007e-05, 2.237499999999809e-05, 2.2416000000000796e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.1693999999999186e-05, 2.237500000000156e-05, 2.204100000000042e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.237500000000156e-05, 2.238900000000113e-05, 2.1986000000001615e-05, 2.1679999999999616e-05, 2.1679999999999616e-05, 2.238900000000113e-05, 2.1652000000000476e-05, 2.2027999999996856e-05, 2.237500000000156e-05, 2.20969999999987e-05, 2.168099999999909e-05, 2.166699999999952e-05, 2.238900000000113e-05, 2.166699999999952e-05, 2.238899999999766e-05, 2.169499999999866e-05, 2.206899999999956e-05, 2.237500000000156e-05, 2.2028000000000325e-05, 2.231899999999981e-05, 2.166699999999952e-05, 2.166699999999952e-05, 2.2402000000001226e-05, 2.2028000000000325e-05, 2.169499999999866e-05, 2.2056000000002934e-05, 2.168100000000256e-05, 2.237499999999809e-05, 2.166699999999952e-05, 2.24030000000007e-05, 2.24030000000007e-05, 2.237499999999809e-05, 2.163900000000038e-05, 2.24030000000007e-05, 2.238900000000113e-05, 2.202700000000085e-05, 2.238899999999766e-05]</msg>
<status status="PASS" starttime="20201112 10:14:26.620" endtime="20201112 10:14:26.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.616" endtime="20201112 10:14:26.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.625" endtime="20201112 10:14:26.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.629" endtime="20201112 10:14:26.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.627" endtime="20201112 10:14:26.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.624" endtime="20201112 10:14:26.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.260" endtime="20201112 10:14:26.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.259" endtime="20201112 10:14:26.650"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.658" endtime="20201112 10:14:26.673"></status>
</kw>
<msg timestamp="20201112 10:14:26.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.657" endtime="20201112 10:14:26.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.675" endtime="20201112 10:14:26.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.677" endtime="20201112 10:14:26.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.654" endtime="20201112 10:14:26.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.652" endtime="20201112 10:14:26.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.687" endtime="20201112 10:14:26.972"></status>
</kw>
<msg timestamp="20201112 10:14:26.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:26.686" endtime="20201112 10:14:26.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:26.977" endtime="20201112 10:14:26.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.985" endtime="20201112 10:14:26.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.683" endtime="20201112 10:14:26.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.682" endtime="20201112 10:14:26.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.991" level="INFO">${RESULT} = [{'time': 0.021716, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.287499999999859e-05, 'source_diff': 2.287499999999859e-05}, {'time': 0.021741153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:26.988" endtime="20201112 10:14:26.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.006" level="INFO">${ACCURACY} = {'source_diff': [2.287499999999859e-05, 2.30969999999997e-05, 2.2764000000001505e-05, 2.238900000000113e-05, 2.2707999999999756e-05, 2.3472000000000076e-05, 2.3457999999997037e-05, 2.2764000000001505e...</msg>
<status status="PASS" starttime="20201112 10:14:26.992" endtime="20201112 10:14:27.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.010" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.009" endtime="20201112 10:14:27.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.013" level="INFO">VALUE: [2.287499999999859e-05, 2.30969999999997e-05, 2.2764000000001505e-05, 2.238900000000113e-05, 2.2707999999999756e-05, 2.3472000000000076e-05, 2.3457999999997037e-05, 2.2764000000001505e-05, 2.237499999999809e-05, 2.2749999999998466e-05, 2.2764000000001505e-05, 2.2388000000001657e-05, 2.2736000000002365e-05, 2.306900000000056e-05, 2.3457999999997037e-05, 2.30969999999997e-05, 2.305500000000099e-05, 2.237499999999809e-05, 2.2387999999998187e-05, 2.2707999999999756e-05, 2.237499999999809e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.2778000000001075e-05, 2.3097999999999175e-05, 2.347300000000302e-05, 2.2388000000001657e-05, 2.236100000000199e-05, 2.2750000000001935e-05, 2.30969999999997e-05, 2.2402000000001226e-05, 2.2764000000001505e-05, 2.2750000000001935e-05, 2.3070000000000035e-05, 2.3485999999999646e-05, 2.2749999999998466e-05, 2.318100000000059e-05, 2.238900000000113e-05, 2.237500000000156e-05, 2.3458000000000506e-05, 2.308300000000013e-05, 2.2735999999998896e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.3083999999999605e-05, 2.2750000000001935e-05, 2.30969999999997e-05, 2.2750000000001935e-05, 2.344500000000041e-05, 2.309700000000317e-05]</msg>
<status status="PASS" starttime="20201112 10:14:27.011" endtime="20201112 10:14:27.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.007" endtime="20201112 10:14:27.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.016" endtime="20201112 10:14:27.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.020" endtime="20201112 10:14:27.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.018" endtime="20201112 10:14:27.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.015" endtime="20201112 10:14:27.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.651" endtime="20201112 10:14:27.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.650" endtime="20201112 10:14:27.041"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.049" endtime="20201112 10:14:27.065"></status>
</kw>
<msg timestamp="20201112 10:14:27.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.048" endtime="20201112 10:14:27.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.067" endtime="20201112 10:14:27.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.069" endtime="20201112 10:14:27.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.045" endtime="20201112 10:14:27.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.043" endtime="20201112 10:14:27.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.079" endtime="20201112 10:14:27.365"></status>
</kw>
<msg timestamp="20201112 10:14:27.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022124875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.078" endtime="20201112 10:14:27.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022124875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.369" endtime="20201112 10:14:27.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.377" endtime="20201112 10:14:27.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.075" endtime="20201112 10:14:27.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.073" endtime="20201112 10:14:27.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.384" level="INFO">${RESULT} = [{'time': 0.022124875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4305999999998246e-05, 'source_diff': 2.4305999999998246e-05}, {'time': 0.022150625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:27.380" endtime="20201112 10:14:27.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.397" level="INFO">${ACCURACY} = {'source_diff': [2.4305999999998246e-05, 2.3792000000001645e-05, 2.3458000000000506e-05, 2.3847999999999925e-05, 2.412499999999984e-05, 2.419500000000116e-05, 2.3834000000000355e-05, 2.454199999999892...</msg>
<status status="PASS" starttime="20201112 10:14:27.385" endtime="20201112 10:14:27.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.402" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.401" endtime="20201112 10:14:27.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.404" level="INFO">VALUE: [2.4305999999998246e-05, 2.3792000000001645e-05, 2.3458000000000506e-05, 2.3847999999999925e-05, 2.412499999999984e-05, 2.419500000000116e-05, 2.3834000000000355e-05, 2.4541999999998926e-05, 2.416700000000202e-05, 2.462500000000034e-05, 2.3458000000000506e-05, 2.418100000000159e-05, 2.4180000000002116e-05, 2.379100000000217e-05, 2.3458000000000506e-05, 2.3806000000001215e-05, 2.4527999999999356e-05, 2.383300000000088e-05, 2.416699999999855e-05, 2.4584000000001105e-05, 2.423699999999987e-05, 2.3806000000001215e-05, 2.416699999999855e-05, 2.3804999999998272e-05, 2.416700000000202e-05, 2.344499999999694e-05, 2.3832999999997412e-05, 2.4554999999999022e-05, 2.4179999999998647e-05, 2.3472000000000076e-05, 2.4528000000002825e-05, 2.416700000000202e-05, 2.408300000000113e-05, 2.4193999999998217e-05, 2.4527999999999356e-05, 2.415299999999898e-05, 2.4193999999998217e-05, 2.347300000000302e-05, 2.4193999999998217e-05, 2.3820000000000785e-05, 2.4222000000000826e-05, 2.419500000000116e-05, 2.4527999999999356e-05, 2.413899999999941e-05, 2.4527999999999356e-05, 2.345899999999998e-05, 2.3792000000001645e-05, 2.415299999999898e-05, 2.418100000000159e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201112 10:14:27.403" endtime="20201112 10:14:27.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.398" endtime="20201112 10:14:27.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.408" endtime="20201112 10:14:27.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.411" endtime="20201112 10:14:27.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.409" endtime="20201112 10:14:27.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.406" endtime="20201112 10:14:27.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.041" endtime="20201112 10:14:27.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.041" endtime="20201112 10:14:27.432"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.440" endtime="20201112 10:14:27.456"></status>
</kw>
<msg timestamp="20201112 10:14:27.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.439" endtime="20201112 10:14:27.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.457" endtime="20201112 10:14:27.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.459" endtime="20201112 10:14:27.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.436" endtime="20201112 10:14:27.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.434" endtime="20201112 10:14:27.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.469" endtime="20201112 10:14:27.754"></status>
</kw>
<msg timestamp="20201112 10:14:27.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021725333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.468" endtime="20201112 10:14:27.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021725333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.758" endtime="20201112 10:14:27.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.767" endtime="20201112 10:14:27.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.465" endtime="20201112 10:14:27.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.464" endtime="20201112 10:14:27.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.773" level="INFO">${RESULT} = [{'time': 0.021725333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4986000000001146e-05, 'source_diff': 2.4986000000001146e-05}, {'time': 0.021752403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:27.770" endtime="20201112 10:14:27.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.787" level="INFO">${ACCURACY} = {'source_diff': [2.4986000000001146e-05, 2.5236000000001396e-05, 2.52369999999974e-05, 2.4527999999999356e-05, 2.4500000000000216e-05, 2.488900000000016e-05, 2.5222000000001826e-05, 2.4513000000000312...</msg>
<status status="PASS" starttime="20201112 10:14:27.774" endtime="20201112 10:14:27.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.791" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.790" endtime="20201112 10:14:27.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.794" level="INFO">VALUE: [2.4986000000001146e-05, 2.5236000000001396e-05, 2.52369999999974e-05, 2.4527999999999356e-05, 2.4500000000000216e-05, 2.488900000000016e-05, 2.5222000000001826e-05, 2.4513000000000312e-05, 2.490299999999973e-05, 2.5264000000000536e-05, 2.4500000000000216e-05, 2.487500000000059e-05, 2.4526999999999882e-05, 2.5222000000001826e-05, 2.5250000000000966e-05, 2.5264000000000536e-05, 2.4888000000000687e-05, 2.519499999999869e-05, 2.5222000000001826e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.5596999999998732e-05, 2.5221999999998357e-05, 2.5250000000000966e-05, 2.4527999999999356e-05, 2.4541999999998926e-05, 2.488900000000016e-05, 2.561100000000177e-05, 2.5235999999997927e-05, 2.5582999999999162e-05, 2.5235999999997927e-05, 2.4528000000002825e-05, 2.5264000000000536e-05, 2.523700000000087e-05, 2.484700000000145e-05, 2.5236000000001396e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.5236000000001396e-05, 2.4527999999999356e-05, 2.5598000000001675e-05, 2.4832999999998412e-05, 2.4527999999999356e-05, 2.4540999999999452e-05, 2.5611999999997775e-05, 2.5236000000001396e-05, 2.5236000000001396e-05, 2.4584000000001105e-05, 2.49169999999993e-05]</msg>
<status status="PASS" starttime="20201112 10:14:27.792" endtime="20201112 10:14:27.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.788" endtime="20201112 10:14:27.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.797" endtime="20201112 10:14:27.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.801" endtime="20201112 10:14:27.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.799" endtime="20201112 10:14:27.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.796" endtime="20201112 10:14:27.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.433" endtime="20201112 10:14:27.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.432" endtime="20201112 10:14:27.821"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.830" endtime="20201112 10:14:27.846"></status>
</kw>
<msg timestamp="20201112 10:14:27.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.829" endtime="20201112 10:14:27.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.847" endtime="20201112 10:14:27.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.849" endtime="20201112 10:14:27.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.826" endtime="20201112 10:14:27.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.824" endtime="20201112 10:14:27.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.859" endtime="20201112 10:14:28.144"></status>
</kw>
<msg timestamp="20201112 10:14:28.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.858" endtime="20201112 10:14:28.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.148" endtime="20201112 10:14:28.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.156" endtime="20201112 10:14:28.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.855" endtime="20201112 10:14:28.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.854" endtime="20201112 10:14:28.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.163" level="INFO">${RESULT} = [{'time': 0.021886375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6806000000000746e-05, 'source_diff': 2.6806000000000746e-05}, {'time': 0.021914375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:28.159" endtime="20201112 10:14:28.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.176" level="INFO">${ACCURACY} = {'source_diff': [2.6806000000000746e-05, 2.5971999999999107e-05, 2.586100000000202e-05, 2.6305000000000772e-05, 2.6027999999997387e-05, 2.5610999999998302e-05, 2.562500000000134e-05, 2.630600000000024...</msg>
<status status="PASS" starttime="20201112 10:14:28.164" endtime="20201112 10:14:28.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.181" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.180" endtime="20201112 10:14:28.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.183" level="INFO">VALUE: [2.6806000000000746e-05, 2.5971999999999107e-05, 2.586100000000202e-05, 2.6305000000000772e-05, 2.6027999999997387e-05, 2.5610999999998302e-05, 2.562500000000134e-05, 2.6306000000000246e-05, 2.5582999999999162e-05, 2.6319999999999816e-05, 2.563900000000091e-05, 2.561100000000177e-05, 2.6332999999999912e-05, 2.6306000000000246e-05, 2.6292000000000676e-05, 2.6290999999997733e-05, 2.5582999999999162e-05, 2.5596999999998732e-05, 2.6306000000000246e-05, 2.561100000000177e-05, 2.6332999999999912e-05, 2.6332999999999912e-05, 2.6346999999999482e-05, 2.6305000000000772e-05, 2.5582999999999162e-05, 2.5596999999998732e-05, 2.594499999999944e-05, 2.6332999999999912e-05, 2.558300000000263e-05, 2.5610999999998302e-05, 2.5582999999999162e-05, 2.6319000000000342e-05, 2.6305000000000772e-05, 2.5583999999998636e-05, 2.6305000000000772e-05, 2.5541000000000452e-05, 2.6306000000000246e-05, 2.6292000000000676e-05, 2.55970000000022e-05, 2.6276999999998163e-05, 2.634700000000295e-05, 2.5582999999999162e-05, 2.6305000000000772e-05, 2.5610999999998302e-05, 2.5598000000001675e-05, 2.561100000000177e-05, 2.561100000000177e-05, 2.6319000000000342e-05, 2.6305000000000772e-05, 2.6292000000000676e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.182" endtime="20201112 10:14:28.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.177" endtime="20201112 10:14:28.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.187" endtime="20201112 10:14:28.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.190" endtime="20201112 10:14:28.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.189" endtime="20201112 10:14:28.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.185" endtime="20201112 10:14:28.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.822" endtime="20201112 10:14:28.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.822" endtime="20201112 10:14:28.211"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.219" endtime="20201112 10:14:28.234"></status>
</kw>
<msg timestamp="20201112 10:14:28.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.218" endtime="20201112 10:14:28.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.235" endtime="20201112 10:14:28.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.238" endtime="20201112 10:14:28.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.215" endtime="20201112 10:14:28.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.213" endtime="20201112 10:14:28.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.248" endtime="20201112 10:14:28.532"></status>
</kw>
<msg timestamp="20201112 10:14:28.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.246" endtime="20201112 10:14:28.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.536" endtime="20201112 10:14:28.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.544" endtime="20201112 10:14:28.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.243" endtime="20201112 10:14:28.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.242" endtime="20201112 10:14:28.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.551" level="INFO">${RESULT} = [{'time': 0.021756708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7110999999999802e-05, 'source_diff': 2.7110999999999802e-05}, {'time': 0.02178575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:28.547" endtime="20201112 10:14:28.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.565" level="INFO">${ACCURACY} = {'source_diff': [2.7110999999999802e-05, 2.7027999999998387e-05, 2.738900000000266e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.737500000000309e-05, 2.7374999999999622e-05, 2.737499999999962...</msg>
<status status="PASS" starttime="20201112 10:14:28.552" endtime="20201112 10:14:28.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.570" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.569" endtime="20201112 10:14:28.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.572" level="INFO">VALUE: [2.7110999999999802e-05, 2.7027999999998387e-05, 2.738900000000266e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.737500000000309e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.668100000000062e-05, 2.665300000000148e-05, 2.7388999999999192e-05, 2.6721999999999857e-05, 2.7402000000002757e-05, 2.738900000000266e-05, 2.666700000000105e-05, 2.666700000000105e-05, 2.666700000000105e-05, 2.6583999999999636e-05, 2.7444000000001467e-05, 2.7388999999999192e-05, 2.7332999999997443e-05, 2.7387999999999718e-05, 2.7042000000001426e-05, 2.669500000000019e-05, 2.7320000000000816e-05, 2.666699999999758e-05, 2.669500000000019e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.668100000000062e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.6665999999998108e-05, 2.665299999999801e-05, 2.7027999999998387e-05, 2.6680000000001147e-05, 2.7041999999997957e-05, 2.74170000000018e-05, 2.7374999999999622e-05, 2.7388999999999192e-05, 2.7361000000000052e-05, 2.7361000000000052e-05, 2.7374999999999622e-05, 2.6624999999998872e-05, 2.666699999999758e-05, 2.7374999999999622e-05, 2.666700000000105e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7374999999999622e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.571" endtime="20201112 10:14:28.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.566" endtime="20201112 10:14:28.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.575" endtime="20201112 10:14:28.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.579" endtime="20201112 10:14:28.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.577" endtime="20201112 10:14:28.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.574" endtime="20201112 10:14:28.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.212" endtime="20201112 10:14:28.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.211" endtime="20201112 10:14:28.600"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.609" endtime="20201112 10:14:28.624"></status>
</kw>
<msg timestamp="20201112 10:14:28.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.607" endtime="20201112 10:14:28.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.626" endtime="20201112 10:14:28.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.628" endtime="20201112 10:14:28.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.605" endtime="20201112 10:14:28.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.603" endtime="20201112 10:14:28.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.638" endtime="20201112 10:14:28.923"></status>
</kw>
<msg timestamp="20201112 10:14:28.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.637" endtime="20201112 10:14:28.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.927" endtime="20201112 10:14:28.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.935" endtime="20201112 10:14:28.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.634" endtime="20201112 10:14:28.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.632" endtime="20201112 10:14:28.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.942" level="INFO">${RESULT} = [{'time': 0.022589111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8221999999997888e-05, 'source_diff': 2.8221999999997888e-05}, {'time': 0.022619292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:28.939" endtime="20201112 10:14:28.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.956" level="INFO">${ACCURACY} = {'source_diff': [2.8221999999997888e-05, 2.8402999999999762e-05, 2.845900000000151e-05, 2.7722000000000857e-05, 2.8138999999999942e-05, 2.8458000000002037e-05, 2.8457999999998568e-05, 2.84580000000020...</msg>
<status status="PASS" starttime="20201112 10:14:28.943" endtime="20201112 10:14:28.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.960" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.959" endtime="20201112 10:14:28.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.963" level="INFO">VALUE: [2.8221999999997888e-05, 2.8402999999999762e-05, 2.845900000000151e-05, 2.7722000000000857e-05, 2.8138999999999942e-05, 2.8458000000002037e-05, 2.8457999999998568e-05, 2.8458000000002037e-05, 2.8054999999999053e-05, 2.7722000000000857e-05, 2.845900000000151e-05, 2.844499999999847e-05, 2.8458000000002037e-05, 2.847300000000108e-05, 2.8098000000000706e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.8070000000001566e-05, 2.7736000000000427e-05, 2.7763999999999567e-05, 2.8096999999997763e-05, 2.7305000000001772e-05, 2.7722000000000857e-05, 2.7736000000000427e-05, 2.843100000000237e-05, 2.8111999999996806e-05, 2.738900000000266e-05, 2.8444000000002467e-05, 2.7388999999999192e-05, 2.8458000000002037e-05, 2.8471999999998138e-05, 2.844500000000194e-05, 2.7763999999999567e-05, 2.8458000000002037e-05, 2.7347000000000482e-05, 2.7763999999999567e-05, 2.7721999999997388e-05, 2.8125000000000372e-05, 2.8429999999999428e-05, 2.8375000000000622e-05, 2.7361000000000052e-05, 2.8457999999998568e-05, 2.8083999999997666e-05, 2.7749999999999997e-05, 2.8472000000001607e-05, 2.8097000000001232e-05, 2.7736000000000427e-05, 2.7749999999999997e-05, 2.7722000000000857e-05, 2.8444000000002467e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.961" endtime="20201112 10:14:28.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.957" endtime="20201112 10:14:28.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.967" endtime="20201112 10:14:28.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.970" endtime="20201112 10:14:28.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.968" endtime="20201112 10:14:28.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.965" endtime="20201112 10:14:28.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.601" endtime="20201112 10:14:28.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.600" endtime="20201112 10:14:28.991"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.999" endtime="20201112 10:14:29.016"></status>
</kw>
<msg timestamp="20201112 10:14:29.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.998" endtime="20201112 10:14:29.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.017" endtime="20201112 10:14:29.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.020" endtime="20201112 10:14:29.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.995" endtime="20201112 10:14:29.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.993" endtime="20201112 10:14:29.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.032" endtime="20201112 10:14:29.318"></status>
</kw>
<msg timestamp="20201112 10:14:29.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.030" endtime="20201112 10:14:29.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.322" endtime="20201112 10:14:29.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.331" endtime="20201112 10:14:29.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.027" endtime="20201112 10:14:29.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.025" endtime="20201112 10:14:29.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.337" level="INFO">${RESULT} = [{'time': 0.021970236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8916999999999832e-05, 'source_diff': 2.8916999999999832e-05}, {'time': 0.022001167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:29.334" endtime="20201112 10:14:29.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.351" level="INFO">${ACCURACY} = {'source_diff': [2.8916999999999832e-05, 2.8805999999999277e-05, 2.8804999999999803e-05, 2.918099999999965e-05, 2.8861000000001552e-05, 2.8806000000002746e-05, 2.9153000000000512e-05, 2.91530000000005...</msg>
<status status="PASS" starttime="20201112 10:14:29.338" endtime="20201112 10:14:29.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.355" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.354" endtime="20201112 10:14:29.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.358" level="INFO">VALUE: [2.8916999999999832e-05, 2.8805999999999277e-05, 2.8804999999999803e-05, 2.918099999999965e-05, 2.8861000000001552e-05, 2.8806000000002746e-05, 2.9153000000000512e-05, 2.9153000000000512e-05, 2.9514000000001317e-05, 2.84309999999989e-05, 2.9167000000000082e-05, 2.916599999999714e-05, 2.84309999999989e-05, 2.8819999999998847e-05, 2.8778000000000137e-05, 2.9167000000000082e-05, 2.9499999999998278e-05, 2.9153000000000512e-05, 2.8458000000002037e-05, 2.8791999999999707e-05, 2.847300000000108e-05, 2.9486000000002177e-05, 2.8429999999999428e-05, 2.9485999999998708e-05, 2.9528000000000887e-05, 2.9138999999997472e-05, 2.8804999999999803e-05, 2.8832999999998943e-05, 2.918099999999965e-05, 2.9528000000000887e-05, 2.8457999999998568e-05, 2.844499999999847e-05, 2.8429999999999428e-05, 2.8818999999999373e-05, 2.8778000000000137e-05, 2.8471999999998138e-05, 2.8805999999999277e-05, 2.9167000000000082e-05, 2.8763000000001093e-05, 2.8444000000002467e-05, 2.8444000000002467e-05, 2.8805999999999277e-05, 2.9472000000002607e-05, 2.9500000000001747e-05, 2.9527999999997417e-05, 2.8362000000000526e-05, 2.9582999999999693e-05, 2.9513999999997848e-05, 2.841699999999933e-05, 2.9096999999998763e-05]</msg>
<status status="PASS" starttime="20201112 10:14:29.357" endtime="20201112 10:14:29.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.352" endtime="20201112 10:14:29.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.381" endtime="20201112 10:14:29.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.385" endtime="20201112 10:14:29.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.383" endtime="20201112 10:14:29.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.380" endtime="20201112 10:14:29.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.991" endtime="20201112 10:14:29.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.991" endtime="20201112 10:14:29.406"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.414" endtime="20201112 10:14:29.430"></status>
</kw>
<msg timestamp="20201112 10:14:29.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.413" endtime="20201112 10:14:29.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.432" endtime="20201112 10:14:29.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.434" endtime="20201112 10:14:29.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.410" endtime="20201112 10:14:29.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.408" endtime="20201112 10:14:29.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.444" endtime="20201112 10:14:29.731"></status>
</kw>
<msg timestamp="20201112 10:14:29.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.443" endtime="20201112 10:14:29.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.735" endtime="20201112 10:14:29.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.743" endtime="20201112 10:14:29.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.440" endtime="20201112 10:14:29.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.439" endtime="20201112 10:14:29.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.750" level="INFO">${RESULT} = [{'time': 0.022176458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0013999999998348e-05, 'source_diff': 3.0013999999998348e-05}, {'time': 0.022208389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:29.746" endtime="20201112 10:14:29.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.763" level="INFO">${ACCURACY} = {'source_diff': [3.0013999999998348e-05, 3.0235999999999458e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.0235999999999458e-05, 2.9874999999998653e-05, 3.0249999999999028e-05, 2.951399999999784...</msg>
<status status="PASS" starttime="20201112 10:14:29.751" endtime="20201112 10:14:29.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.768" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.767" endtime="20201112 10:14:29.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.770" level="INFO">VALUE: [3.0013999999998348e-05, 3.0235999999999458e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.0235999999999458e-05, 2.9874999999998653e-05, 3.0249999999999028e-05, 2.9513999999997848e-05, 3.0584000000000167e-05, 3.0235999999999458e-05, 2.9513999999997848e-05, 3.0221999999999888e-05, 2.9958000000000068e-05, 3.061099999999983e-05, 3.0235999999999458e-05, 2.9500000000001747e-05, 3.0180000000001178e-05, 2.9457999999999568e-05, 3.0221999999999888e-05, 2.9514000000001317e-05, 3.0235999999999458e-05, 2.9889000000001692e-05, 3.059700000000026e-05, 3.0236000000002927e-05, 2.9526999999997944e-05, 2.9512999999998374e-05, 2.9500000000001747e-05, 2.9541999999996987e-05, 3.0235999999999458e-05, 2.9874999999998653e-05, 2.9569000000000123e-05, 3.0221999999999888e-05, 2.9889000000001692e-05, 2.9542000000000457e-05, 2.9596999999999263e-05, 2.9846999999999513e-05, 3.0221999999999888e-05, 3.022299999999936e-05, 2.9874999999998653e-05, 2.9527000000001413e-05, 2.9527999999997417e-05, 3.0235999999999458e-05, 3.0236000000002927e-05, 3.0236000000002927e-05, 3.05700000000006e-05, 2.9513999999997848e-05, 2.9874999999998653e-05, 2.9527999999997417e-05, 3.0221999999999888e-05, 3.0235999999999458e-05]</msg>
<status status="PASS" starttime="20201112 10:14:29.769" endtime="20201112 10:14:29.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.764" endtime="20201112 10:14:29.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.774" endtime="20201112 10:14:29.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.777" endtime="20201112 10:14:29.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.775" endtime="20201112 10:14:29.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.772" endtime="20201112 10:14:29.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.407" endtime="20201112 10:14:29.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.406" endtime="20201112 10:14:29.798"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.806" endtime="20201112 10:14:29.822"></status>
</kw>
<msg timestamp="20201112 10:14:29.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.805" endtime="20201112 10:14:29.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.824" endtime="20201112 10:14:29.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.826" endtime="20201112 10:14:29.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.802" endtime="20201112 10:14:29.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.800" endtime="20201112 10:14:29.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.836" endtime="20201112 10:14:30.122"></status>
</kw>
<msg timestamp="20201112 10:14:30.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.835" endtime="20201112 10:14:30.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.126" endtime="20201112 10:14:30.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.134" endtime="20201112 10:14:30.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.832" endtime="20201112 10:14:30.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.830" endtime="20201112 10:14:30.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.141" level="INFO">${RESULT} = [{'time': 0.021770306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.434800000000002e-05, 'source_diff': 3.434800000000002e-05}, {'time': 0.021808944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:30.138" endtime="20201112 10:14:30.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.155" level="INFO">${ACCURACY} = {'source_diff': [3.434800000000002e-05, 3.391600000000189e-05, 3.3847000000000044e-05, 3.368000000000121e-05, 3.369400000000078e-05, 3.391599999999842e-05, 3.3069000000000154e-05, 3.397200000000017e-0...</msg>
<status status="PASS" starttime="20201112 10:14:30.142" endtime="20201112 10:14:30.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.160" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.159" endtime="20201112 10:14:30.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.162" level="INFO">VALUE: [3.434800000000002e-05, 3.391600000000189e-05, 3.3847000000000044e-05, 3.368000000000121e-05, 3.369400000000078e-05, 3.391599999999842e-05, 3.3069000000000154e-05, 3.397200000000017e-05, 3.370800000000035e-05, 3.363900000000197e-05, 3.301400000000135e-05, 3.3040999999997545e-05, 3.386100000000308e-05, 3.397200000000017e-05, 3.37640000000021e-05, 3.393100000000093e-05, 3.368000000000121e-05, 3.316700000000061e-05, 3.34580000000001e-05, 3.4026999999998975e-05, 3.315300000000104e-05, 3.3082999999999724e-05, 3.370800000000035e-05, 3.370800000000035e-05, 3.382000000000038e-05, 3.373600000000296e-05, 3.368000000000121e-05, 3.369500000000025e-05, 3.370800000000035e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.3874999999999184e-05, 3.316600000000114e-05, 3.316600000000114e-05, 3.404200000000149e-05, 3.384799999999952e-05, 3.373599999999949e-05, 3.315300000000104e-05, 3.379200000000124e-05, 3.384799999999952e-05, 3.39450000000005e-05, 3.30700000000031e-05, 3.3833000000000474e-05, 3.363900000000197e-05, 3.391700000000136e-05, 3.397299999999964e-05, 3.377800000000167e-05, 3.369400000000078e-05, 3.3638999999998503e-05, 3.398599999999974e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.161" endtime="20201112 10:14:30.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.156" endtime="20201112 10:14:30.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.166" endtime="20201112 10:14:30.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.169" endtime="20201112 10:14:30.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.168" endtime="20201112 10:14:30.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.164" endtime="20201112 10:14:30.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.799" endtime="20201112 10:14:30.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.798" endtime="20201112 10:14:30.190"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.198" endtime="20201112 10:14:30.214"></status>
</kw>
<msg timestamp="20201112 10:14:30.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.197" endtime="20201112 10:14:30.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.215" endtime="20201112 10:14:30.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.218" endtime="20201112 10:14:30.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.194" endtime="20201112 10:14:30.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.192" endtime="20201112 10:14:30.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.228" endtime="20201112 10:14:30.513"></status>
</kw>
<msg timestamp="20201112 10:14:30.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.226" endtime="20201112 10:14:30.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.517" endtime="20201112 10:14:30.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.525" endtime="20201112 10:14:30.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.223" endtime="20201112 10:14:30.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.222" endtime="20201112 10:14:30.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.532" level="INFO">${RESULT} = [{'time': 0.022113792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.468100000000168e-05, 'source_diff': 3.468100000000168e-05}, {'time': 0.022153431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:30.528" endtime="20201112 10:14:30.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.545" level="INFO">${ACCURACY} = {'source_diff': [3.468100000000168e-05, 3.480600000000181e-05, 3.502799999999945e-05, 3.504199999999902e-05, 3.4110999999999864e-05, 3.479199999999877e-05, 3.473699999999996e-05, 3.4875000000000184e-0...</msg>
<status status="PASS" starttime="20201112 10:14:30.533" endtime="20201112 10:14:30.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.550" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.549" endtime="20201112 10:14:30.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.552" level="INFO">VALUE: [3.468100000000168e-05, 3.480600000000181e-05, 3.502799999999945e-05, 3.504199999999902e-05, 3.4110999999999864e-05, 3.479199999999877e-05, 3.473699999999996e-05, 3.4875000000000184e-05, 3.466699999999864e-05, 3.4638999999999504e-05, 3.470900000000082e-05, 3.4846999999997574e-05, 3.470799999999788e-05, 3.498600000000074e-05, 3.466699999999864e-05, 3.491600000000289e-05, 3.4124999999999434e-05, 3.4846999999997574e-05, 3.41250000000029e-05, 3.4069000000001154e-05, 3.466700000000211e-05, 3.4124999999999434e-05, 3.4832999999998004e-05, 3.501399999999988e-05, 3.479199999999877e-05, 3.419400000000128e-05, 3.469400000000178e-05, 3.473599999999702e-05, 3.415300000000204e-05, 3.418100000000118e-05, 3.466700000000211e-05, 3.4875000000000184e-05, 3.470800000000135e-05, 3.4847000000001044e-05, 3.404200000000149e-05, 3.497200000000117e-05, 3.4110999999999864e-05, 3.4902999999999323e-05, 3.4097000000000294e-05, 3.4860999999997144e-05, 3.472300000000039e-05, 3.405600000000106e-05, 3.49450000000015e-05, 3.416700000000161e-05, 3.476399999999963e-05, 3.493100000000193e-05, 3.486200000000009e-05, 3.473600000000049e-05, 3.413900000000247e-05, 3.498700000000021e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.551" endtime="20201112 10:14:30.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.546" endtime="20201112 10:14:30.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.556" endtime="20201112 10:14:30.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.559" endtime="20201112 10:14:30.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.557" endtime="20201112 10:14:30.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.554" endtime="20201112 10:14:30.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.191" endtime="20201112 10:14:30.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.190" endtime="20201112 10:14:30.580"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.588" endtime="20201112 10:14:30.604"></status>
</kw>
<msg timestamp="20201112 10:14:30.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.587" endtime="20201112 10:14:30.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.606" endtime="20201112 10:14:30.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.608" endtime="20201112 10:14:30.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.584" endtime="20201112 10:14:30.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.582" endtime="20201112 10:14:30.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.618" endtime="20201112 10:14:30.903"></status>
</kw>
<msg timestamp="20201112 10:14:30.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.616" endtime="20201112 10:14:30.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.908" endtime="20201112 10:14:30.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.916" endtime="20201112 10:14:30.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.614" endtime="20201112 10:14:30.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.612" endtime="20201112 10:14:30.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.922" level="INFO">${RESULT} = [{'time': 0.021779694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5776999999997255e-05, 'source_diff': 3.5776999999997255e-05}, {'time': 0.021820292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:30.919" endtime="20201112 10:14:30.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.936" level="INFO">${ACCURACY} = {'source_diff': [3.5776999999997255e-05, 3.566700000000311e-05, 3.508399999999773e-05, 3.5653000000000074e-05, 3.5832999999999005e-05, 3.570800000000235e-05, 3.574999999999759e-05, 3.559800000000127e-...</msg>
<status status="PASS" starttime="20201112 10:14:30.923" endtime="20201112 10:14:30.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.940" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.939" endtime="20201112 10:14:30.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.942" level="INFO">VALUE: [3.5776999999997255e-05, 3.566700000000311e-05, 3.508399999999773e-05, 3.5653000000000074e-05, 3.5832999999999005e-05, 3.570800000000235e-05, 3.574999999999759e-05, 3.559800000000127e-05, 3.5791000000000295e-05, 3.575000000000106e-05, 3.5874999999997714e-05, 3.566600000000017e-05, 3.5874999999997714e-05, 3.5875000000001184e-05, 3.591600000000042e-05, 3.519399999999881e-05, 3.5290999999999795e-05, 3.601400000000088e-05, 3.59580000000026e-05, 3.5666999999999643e-05, 3.5125000000000434e-05, 3.579199999999977e-05, 3.5833000000002474e-05, 3.515300000000304e-05, 3.5861000000001614e-05, 3.5582999999998755e-05, 3.592999999999999e-05, 3.591700000000336e-05, 3.5625000000000934e-05, 3.518100000000218e-05, 3.5610999999997894e-05, 3.569400000000278e-05, 3.570799999999888e-05, 3.576400000000063e-05, 3.572199999999845e-05, 3.601400000000088e-05, 3.594499999999903e-05, 3.5875000000001184e-05, 3.574999999999759e-05, 3.5611000000001364e-05, 3.518099999999871e-05, 3.579199999999977e-05, 3.5639000000000504e-05, 3.580599999999934e-05, 3.576400000000063e-05, 3.5139000000000004e-05, 3.572300000000139e-05, 3.5889000000000754e-05, 3.561200000000084e-05, 3.51520000000001e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.941" endtime="20201112 10:14:30.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.937" endtime="20201112 10:14:30.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.946" endtime="20201112 10:14:30.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.949" endtime="20201112 10:14:30.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.948" endtime="20201112 10:14:30.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.944" endtime="20201112 10:14:30.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.581" endtime="20201112 10:14:30.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.580" endtime="20201112 10:14:30.970"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.979" endtime="20201112 10:14:30.994"></status>
</kw>
<msg timestamp="20201112 10:14:30.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.977" endtime="20201112 10:14:30.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.996" endtime="20201112 10:14:30.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.998" endtime="20201112 10:14:31.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.975" endtime="20201112 10:14:31.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.973" endtime="20201112 10:14:31.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.008" endtime="20201112 10:14:31.293"></status>
</kw>
<msg timestamp="20201112 10:14:31.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.007" endtime="20201112 10:14:31.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.297" endtime="20201112 10:14:31.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.305" endtime="20201112 10:14:31.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.004" endtime="20201112 10:14:31.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.002" endtime="20201112 10:14:31.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.311" level="INFO">${RESULT} = [{'time': 0.021740583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.740200000000235e-05, 'source_diff': 3.740200000000235e-05}, {'time': 0.021782222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:31.308" endtime="20201112 10:14:31.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.325" level="INFO">${ACCURACY} = {'source_diff': [3.740200000000235e-05, 3.6903000000001324e-05, 3.701399999999841e-05, 3.6833000000000005e-05, 3.6638999999998034e-05, 3.6139000000001004e-05, 3.6096999999998824e-05, 3.693000000000099...</msg>
<status status="PASS" starttime="20201112 10:14:31.312" endtime="20201112 10:14:31.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.329" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.328" endtime="20201112 10:14:31.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.332" level="INFO">VALUE: [3.740200000000235e-05, 3.6903000000001324e-05, 3.701399999999841e-05, 3.6833000000000005e-05, 3.6638999999998034e-05, 3.6139000000001004e-05, 3.6096999999998824e-05, 3.693000000000099e-05, 3.6833000000000005e-05, 3.6111000000001864e-05, 3.6875000000002184e-05, 3.604200000000002e-05, 3.701399999999841e-05, 3.6068999999999685e-05, 3.699999999999884e-05, 3.6917000000000894e-05, 3.6666999999997174e-05, 3.681999999999991e-05, 3.6153000000000574e-05, 3.704199999999755e-05, 3.6861000000002614e-05, 3.694500000000003e-05, 3.6860999999999144e-05, 3.607000000000263e-05, 3.608399999999873e-05, 3.700000000000231e-05, 3.7054999999997645e-05, 3.675000000000206e-05, 3.60979999999983e-05, 3.6888999999998284e-05, 3.692999999999752e-05, 3.702800000000145e-05, 3.6110999999998394e-05, 3.698599999999927e-05, 3.61520000000011e-05, 3.691600000000142e-05, 3.616600000000067e-05, 3.694400000000056e-05, 3.6805000000000865e-05, 3.6610999999998894e-05, 3.615199999999763e-05, 3.66520000000016e-05, 3.676399999999816e-05, 3.6652999999997604e-05, 3.694400000000056e-05, 3.6889000000001754e-05, 3.618000000000024e-05, 3.673599999999902e-05, 3.6068999999999685e-05, 3.6096999999998824e-05]</msg>
<status status="PASS" starttime="20201112 10:14:31.330" endtime="20201112 10:14:31.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.326" endtime="20201112 10:14:31.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.335" endtime="20201112 10:14:31.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.339" endtime="20201112 10:14:31.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.337" endtime="20201112 10:14:31.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.334" endtime="20201112 10:14:31.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.971" endtime="20201112 10:14:31.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.971" endtime="20201112 10:14:31.359"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.368" endtime="20201112 10:14:31.384"></status>
</kw>
<msg timestamp="20201112 10:14:31.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.367" endtime="20201112 10:14:31.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.386" endtime="20201112 10:14:31.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.388" endtime="20201112 10:14:31.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.364" endtime="20201112 10:14:31.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.362" endtime="20201112 10:14:31.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.398" endtime="20201112 10:14:31.683"></status>
</kw>
<msg timestamp="20201112 10:14:31.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.397" endtime="20201112 10:14:31.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.687" endtime="20201112 10:14:31.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.695" endtime="20201112 10:14:31.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.394" endtime="20201112 10:14:31.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.392" endtime="20201112 10:14:31.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.702" level="INFO">${RESULT} = [{'time': 0.022015875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8111000000000395e-05, 'source_diff': 3.8111000000000395e-05}, {'time': 0.022058486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:31.698" endtime="20201112 10:14:31.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.716" level="INFO">${ACCURACY} = {'source_diff': [3.8111000000000395e-05, 3.767999999999827e-05, 3.7096999999999825e-05, 3.7082999999996785e-05, 3.7124999999998964e-05, 3.770800000000088e-05, 3.8055000000002115e-05, 3.783299999999753...</msg>
<status status="PASS" starttime="20201112 10:14:31.703" endtime="20201112 10:14:31.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.721" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.720" endtime="20201112 10:14:31.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.723" level="INFO">VALUE: [3.8111000000000395e-05, 3.767999999999827e-05, 3.7096999999999825e-05, 3.7082999999996785e-05, 3.7124999999998964e-05, 3.770800000000088e-05, 3.8055000000002115e-05, 3.7832999999997535e-05, 3.718000000000124e-05, 3.7069000000000685e-05, 3.7888999999999284e-05, 3.701400000000188e-05, 3.77780000000022e-05, 3.779200000000177e-05, 3.7861000000000145e-05, 3.801399999999941e-05, 3.77780000000022e-05, 3.7096999999999825e-05, 3.7917000000001894e-05, 3.77780000000022e-05, 3.7083000000000255e-05, 3.794400000000156e-05, 3.773600000000002e-05, 3.775000000000306e-05, 3.7916999999998424e-05, 3.77919999999983e-05, 3.7125000000002434e-05, 3.7138999999998534e-05, 3.802799999999898e-05, 3.7917000000001894e-05, 3.705600000000059e-05, 3.7181000000000713e-05, 3.799999999999984e-05, 3.772299999999992e-05, 3.71659999999982e-05, 3.7804999999998395e-05, 3.795800000000113e-05, 3.770800000000088e-05, 3.7624999999999464e-05, 3.797300000000017e-05, 3.788799999999981e-05, 3.7624999999999464e-05, 3.79720000000007e-05, 3.7776999999999256e-05, 3.791599999999895e-05, 3.7804999999998395e-05, 3.7833000000001005e-05, 3.76659999999987e-05, 3.777799999999873e-05, 3.7930999999997994e-05]</msg>
<status status="PASS" starttime="20201112 10:14:31.722" endtime="20201112 10:14:31.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.717" endtime="20201112 10:14:31.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.727" endtime="20201112 10:14:31.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.730" endtime="20201112 10:14:31.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.728" endtime="20201112 10:14:31.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.725" endtime="20201112 10:14:31.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.360" endtime="20201112 10:14:31.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.360" endtime="20201112 10:14:31.751"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.759" endtime="20201112 10:14:31.776"></status>
</kw>
<msg timestamp="20201112 10:14:31.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.758" endtime="20201112 10:14:31.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.777" endtime="20201112 10:14:31.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.780" endtime="20201112 10:14:31.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.755" endtime="20201112 10:14:31.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.753" endtime="20201112 10:14:31.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.790" endtime="20201112 10:14:32.075"></status>
</kw>
<msg timestamp="20201112 10:14:32.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.788" endtime="20201112 10:14:32.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.079" endtime="20201112 10:14:32.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.087" endtime="20201112 10:14:32.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.785" endtime="20201112 10:14:32.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.784" endtime="20201112 10:14:32.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.094" level="INFO">${RESULT} = [{'time': 0.021807333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9347000000002075e-05, 'source_diff': 3.9347000000002075e-05}, {'time': 0.021850972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:32.090" endtime="20201112 10:14:32.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.107" level="INFO">${ACCURACY} = {'source_diff': [3.9347000000002075e-05, 3.8790999999999826e-05, 3.8069000000001685e-05, 3.876400000000016e-05, 3.8138999999999534e-05, 3.8096999999997355e-05, 3.901400000000041e-05, 3.873600000000102...</msg>
<status status="PASS" starttime="20201112 10:14:32.095" endtime="20201112 10:14:32.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.112" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.111" endtime="20201112 10:14:32.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.114" level="INFO">VALUE: [3.9347000000002075e-05, 3.8790999999999826e-05, 3.8069000000001685e-05, 3.876400000000016e-05, 3.8138999999999534e-05, 3.8096999999997355e-05, 3.901400000000041e-05, 3.873600000000102e-05, 3.8804999999999396e-05, 3.89859999999978e-05, 3.869400000000231e-05, 3.895799999999866e-05, 3.902799999999998e-05, 3.8625000000000465e-05, 3.872200000000145e-05, 3.901400000000041e-05, 3.8666999999999174e-05, 3.8597000000001325e-05, 3.87919999999993e-05, 3.8889000000000284e-05, 3.8666999999999174e-05, 3.8832999999998535e-05, 3.8916999999999424e-05, 3.875000000000059e-05, 3.8083000000001255e-05, 3.8860999999997675e-05, 3.8804999999999396e-05, 3.8610999999997425e-05, 3.8694999999998314e-05, 3.875000000000059e-05, 3.8902999999999854e-05, 3.8152999999999104e-05, 3.8902999999999854e-05, 3.900000000000084e-05, 3.891599999999995e-05, 3.8763000000000686e-05, 3.816600000000267e-05, 3.9041000000000076e-05, 3.8917000000002894e-05, 3.8847000000001575e-05, 3.865200000000013e-05, 3.870800000000188e-05, 3.8097000000000825e-05, 3.8097000000000825e-05, 3.86659999999997e-05, 3.867999999999927e-05, 3.904199999999955e-05, 3.819399999999834e-05, 3.877799999999973e-05, 3.8652999999999604e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.113" endtime="20201112 10:14:32.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.108" endtime="20201112 10:14:32.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.118" endtime="20201112 10:14:32.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.121" endtime="20201112 10:14:32.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.120" endtime="20201112 10:14:32.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.116" endtime="20201112 10:14:32.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.752" endtime="20201112 10:14:32.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.751" endtime="20201112 10:14:32.142"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.150" endtime="20201112 10:14:32.166"></status>
</kw>
<msg timestamp="20201112 10:14:32.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.149" endtime="20201112 10:14:32.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.168" endtime="20201112 10:14:32.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.170" endtime="20201112 10:14:32.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.146" endtime="20201112 10:14:32.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.144" endtime="20201112 10:14:32.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.180" endtime="20201112 10:14:32.464"></status>
</kw>
<msg timestamp="20201112 10:14:32.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.179" endtime="20201112 10:14:32.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.469" endtime="20201112 10:14:32.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.477" endtime="20201112 10:14:32.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.176" endtime="20201112 10:14:32.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.174" endtime="20201112 10:14:32.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.483" level="INFO">${RESULT} = [{'time': 0.021758208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9527000000001006e-05, 'source_diff': 3.9527000000001006e-05}, {'time': 0.021802847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:32.480" endtime="20201112 10:14:32.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.497" level="INFO">${ACCURACY} = {'source_diff': [3.9527000000001006e-05, 3.9611000000001895e-05, 3.999999999999837e-05, 3.91660000000002e-05, 3.995799999999966e-05, 3.9111000000001395e-05, 3.97920000000003e-05, 3.9611000000001895e-0...</msg>
<status status="PASS" starttime="20201112 10:14:32.484" endtime="20201112 10:14:32.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.501" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.500" endtime="20201112 10:14:32.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.504" level="INFO">VALUE: [3.9527000000001006e-05, 3.9611000000001895e-05, 3.999999999999837e-05, 3.91660000000002e-05, 3.995799999999966e-05, 3.9111000000001395e-05, 3.97920000000003e-05, 3.9611000000001895e-05, 3.9832999999999535e-05, 3.9846999999999105e-05, 3.9903000000000854e-05, 3.969399999999984e-05, 3.9680999999999744e-05, 3.9639000000001035e-05, 3.9166999999999674e-05, 3.9180999999999244e-05, 3.9944999999999564e-05, 3.9917000000000424e-05, 3.9166999999999674e-05, 3.90980000000013e-05, 3.9944999999999564e-05, 3.9111000000001395e-05, 3.97920000000003e-05, 3.9903000000000854e-05, 3.9930999999999994e-05, 3.9639000000001035e-05, 4.000000000000184e-05, 3.980599999999987e-05, 3.9638999999997565e-05, 3.9681000000003214e-05, 3.9874999999998245e-05, 3.920800000000238e-05, 3.9361000000001645e-05, 3.9596999999998855e-05, 3.9804999999996926e-05, 3.9861000000002145e-05, 3.9874999999998245e-05, 3.9596999999998855e-05, 3.9597000000002325e-05, 3.973599999999855e-05, 3.972200000000245e-05, 3.9832999999999535e-05, 3.9874999999998245e-05, 3.976400000000116e-05, 3.9653000000000604e-05, 3.9111000000001395e-05, 3.9153000000000104e-05, 3.992999999999705e-05, 3.9694999999999314e-05, 3.980599999999987e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.503" endtime="20201112 10:14:32.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.498" endtime="20201112 10:14:32.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.507" endtime="20201112 10:14:32.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.511" endtime="20201112 10:14:32.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.509" endtime="20201112 10:14:32.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.506" endtime="20201112 10:14:32.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.143" endtime="20201112 10:14:32.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.142" endtime="20201112 10:14:32.532"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.540" endtime="20201112 10:14:32.557"></status>
</kw>
<msg timestamp="20201112 10:14:32.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.539" endtime="20201112 10:14:32.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.559" endtime="20201112 10:14:32.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.561" endtime="20201112 10:14:32.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.536" endtime="20201112 10:14:32.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.534" endtime="20201112 10:14:32.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.571" endtime="20201112 10:14:32.857"></status>
</kw>
<msg timestamp="20201112 10:14:32.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.569" endtime="20201112 10:14:32.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.861" endtime="20201112 10:14:32.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.869" endtime="20201112 10:14:32.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.567" endtime="20201112 10:14:32.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.565" endtime="20201112 10:14:32.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.876" level="INFO">${RESULT} = [{'time': 0.021857222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.102799999999851e-05, 'source_diff': 4.102799999999851e-05}, {'time': 0.021902903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:32.873" endtime="20201112 10:14:32.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.889" level="INFO">${ACCURACY} = {'source_diff': [4.102799999999851e-05, 4.07920000000013e-05, 4.095800000000066e-05, 4.0847000000000105e-05, 4.0652999999998135e-05, 4.0610999999999425e-05, 4.0653000000001605e-05, 4.100000000000284e-...</msg>
<status status="PASS" starttime="20201112 10:14:32.877" endtime="20201112 10:14:32.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.894" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.893" endtime="20201112 10:14:32.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.896" level="INFO">VALUE: [4.102799999999851e-05, 4.07920000000013e-05, 4.095800000000066e-05, 4.0847000000000105e-05, 4.0652999999998135e-05, 4.0610999999999425e-05, 4.0653000000001605e-05, 4.100000000000284e-05, 4.0110999999998925e-05, 4.0082999999999785e-05, 4.099999999999937e-05, 4.095799999999719e-05, 4.0944999999997095e-05, 4.0181000000000244e-05, 4.080600000000087e-05, 4.083400000000001e-05, 4.0152999999997635e-05, 4.0097000000002825e-05, 4.0972999999999704e-05, 4.0667000000001174e-05, 4.006999999999969e-05, 4.0874999999999245e-05, 4.004199999999708e-05, 4.061200000000237e-05, 4.0945000000000564e-05, 4.0875000000002715e-05, 4.006999999999969e-05, 4.083400000000001e-05, 4.0069000000000216e-05, 4.090199999999891e-05, 4.070800000000041e-05, 4.1012999999999467e-05, 4.0804999999997926e-05, 4.0096999999999355e-05, 4.070800000000041e-05, 4.068000000000127e-05, 4.070800000000041e-05, 4.0083000000003255e-05, 4.01660000000012e-05, 4.0959000000000134e-05, 4.0167000000000674e-05, 4.099999999999937e-05, 4.076399999999869e-05, 4.0695000000000314e-05, 4.0582999999996816e-05, 4.074999999999912e-05, 4.099999999999937e-05, 4.080600000000087e-05, 4.0625000000002465e-05, 4.006999999999969e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.895" endtime="20201112 10:14:32.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.890" endtime="20201112 10:14:32.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.900" endtime="20201112 10:14:32.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.903" endtime="20201112 10:14:32.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.902" endtime="20201112 10:14:32.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.898" endtime="20201112 10:14:32.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.532" endtime="20201112 10:14:32.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.532" endtime="20201112 10:14:32.924"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.933" endtime="20201112 10:14:32.949"></status>
</kw>
<msg timestamp="20201112 10:14:32.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.931" endtime="20201112 10:14:32.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.950" endtime="20201112 10:14:32.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.953" endtime="20201112 10:14:32.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.929" endtime="20201112 10:14:32.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.927" endtime="20201112 10:14:32.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.963" endtime="20201112 10:14:33.247"></status>
</kw>
<msg timestamp="20201112 10:14:33.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.961" endtime="20201112 10:14:33.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.251" endtime="20201112 10:14:33.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.259" endtime="20201112 10:14:33.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.959" endtime="20201112 10:14:33.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.957" endtime="20201112 10:14:33.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.266" level="INFO">${RESULT} = [{'time': 0.021987972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.252800000000001e-05, 'source_diff': 4.252800000000001e-05}, {'time': 0.022034681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:33.262" endtime="20201112 10:14:33.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.280" level="INFO">${ACCURACY} = {'source_diff': [4.252800000000001e-05, 4.159800000000033e-05, 4.1638999999999565e-05, 4.1916999999998955e-05, 4.1888999999999815e-05, 4.170799999999794e-05, 4.1068999999997746e-05, 4.1583000000001286...</msg>
<status status="PASS" starttime="20201112 10:14:33.267" endtime="20201112 10:14:33.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.285" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.284" endtime="20201112 10:14:33.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.287" level="INFO">VALUE: [4.252800000000001e-05, 4.159800000000033e-05, 4.1638999999999565e-05, 4.1916999999998955e-05, 4.1888999999999815e-05, 4.170799999999794e-05, 4.1068999999997746e-05, 4.1583000000001286e-05, 4.107000000000069e-05, 4.173600000000055e-05, 4.19860000000008e-05, 4.173600000000055e-05, 4.1944999999998095e-05, 4.1861000000000675e-05, 4.183400000000101e-05, 4.1097000000000355e-05, 4.200000000000037e-05, 4.179199999999883e-05, 4.1166999999998205e-05, 4.1723000000000454e-05, 4.16799999999988e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.197200000000123e-05, 4.175000000000012e-05, 4.183399999999754e-05, 4.1638999999999565e-05, 4.116599999999873e-05, 4.1847000000001106e-05, 4.1055000000001646e-05, 4.1833000000001536e-05, 4.1055000000001646e-05, 4.1903000000002855e-05, 4.172200000000098e-05, 4.1818999999998496e-05, 4.202799999999951e-05, 4.1124999999999495e-05, 4.202800000000298e-05, 4.1153000000002105e-05, 4.197200000000123e-05, 4.1167000000001674e-05, 4.207000000000169e-05, 4.175000000000012e-05, 4.1847000000001106e-05, 4.1195000000000814e-05, 4.1638999999999565e-05, 4.1069000000001216e-05, 4.1666999999998705e-05, 4.1167000000001674e-05, 4.181999999999797e-05]</msg>
<status status="PASS" starttime="20201112 10:14:33.286" endtime="20201112 10:14:33.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.281" endtime="20201112 10:14:33.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.291" endtime="20201112 10:14:33.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.294" endtime="20201112 10:14:33.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.293" endtime="20201112 10:14:33.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.289" endtime="20201112 10:14:33.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.925" endtime="20201112 10:14:33.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.924" endtime="20201112 10:14:33.315"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.324" endtime="20201112 10:14:33.339"></status>
</kw>
<msg timestamp="20201112 10:14:33.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.322" endtime="20201112 10:14:33.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.341" endtime="20201112 10:14:33.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.343" endtime="20201112 10:14:33.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.320" endtime="20201112 10:14:33.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.317" endtime="20201112 10:14:33.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.353" endtime="20201112 10:14:33.638"></status>
</kw>
<msg timestamp="20201112 10:14:33.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.352" endtime="20201112 10:14:33.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.642" endtime="20201112 10:14:33.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.650" endtime="20201112 10:14:33.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.349" endtime="20201112 10:14:33.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.347" endtime="20201112 10:14:33.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.657" level="INFO">${RESULT} = [{'time': 0.021710611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.252800000000001e-05, 'source_diff': 4.252800000000001e-05}, {'time': 0.021758236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:33.653" endtime="20201112 10:14:33.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.671" level="INFO">${ACCURACY} = {'source_diff': [4.252800000000001e-05, 4.2554999999999676e-05, 4.282000000000244e-05, 4.205599999999865e-05, 4.294399999999962e-05, 4.2846999999998636e-05, 4.2861000000001676e-05, 4.281999999999897e-...</msg>
<status status="PASS" starttime="20201112 10:14:33.658" endtime="20201112 10:14:33.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.676" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.674" endtime="20201112 10:14:33.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.678" level="INFO">VALUE: [4.252800000000001e-05, 4.2554999999999676e-05, 4.282000000000244e-05, 4.205599999999865e-05, 4.294399999999962e-05, 4.2846999999998636e-05, 4.2861000000001676e-05, 4.281999999999897e-05, 4.2666999999999705e-05, 4.272199999999851e-05, 4.2166999999999205e-05, 4.2860999999998206e-05, 4.2958999999998665e-05, 4.2666999999999705e-05, 4.277800000000026e-05, 4.2666999999999705e-05, 4.300000000000137e-05, 4.2916999999999955e-05, 4.21120000000004e-05, 4.268000000000327e-05, 4.2832999999999066e-05, 4.302799999999704e-05, 4.219399999999887e-05, 4.275000000000112e-05, 4.2874999999997776e-05, 4.268000000000327e-05, 4.2818999999999496e-05, 4.2625000000000995e-05, 4.2096999999997886e-05, 4.2040999999999606e-05, 4.26799999999998e-05, 4.2624999999997526e-05, 4.302800000000051e-05, 4.21799999999993e-05, 4.2125000000000495e-05, 4.272200000000198e-05, 4.204199999999908e-05, 4.2125000000000495e-05, 4.2832999999999066e-05, 4.2832999999999066e-05, 4.2111000000000925e-05, 4.2181000000002244e-05, 4.2653000000000135e-05, 4.216599999999973e-05, 4.302800000000051e-05, 4.2666999999999705e-05, 4.281999999999897e-05, 4.208400000000126e-05, 4.2916999999999955e-05, 4.2180999999998775e-05]</msg>
<status status="PASS" starttime="20201112 10:14:33.677" endtime="20201112 10:14:33.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.672" endtime="20201112 10:14:33.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.682" endtime="20201112 10:14:33.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.685" endtime="20201112 10:14:33.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.684" endtime="20201112 10:14:33.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.680" endtime="20201112 10:14:33.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.316" endtime="20201112 10:14:33.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.315" endtime="20201112 10:14:33.706"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.715" endtime="20201112 10:14:33.731"></status>
</kw>
<msg timestamp="20201112 10:14:33.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.713" endtime="20201112 10:14:33.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.732" endtime="20201112 10:14:33.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.735" endtime="20201112 10:14:33.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.711" endtime="20201112 10:14:33.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.709" endtime="20201112 10:14:33.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.745" endtime="20201112 10:14:34.029"></status>
</kw>
<msg timestamp="20201112 10:14:34.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02174, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783694, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:14:33.743" endtime="20201112 10:14:34.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02174, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783694, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:14:34.033" endtime="20201112 10:14:34.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.041" endtime="20201112 10:14:34.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.741" endtime="20201112 10:14:34.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.739" endtime="20201112 10:14:34.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.048" level="INFO">${RESULT} = [{'time': 0.021783694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.369400000000037e-05, 'source_diff': 4.369400000000037e-05}, {'time': 0.021832319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:34.044" endtime="20201112 10:14:34.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.061" level="INFO">${ACCURACY} = {'source_diff': [4.369400000000037e-05, 4.370799999999994e-05, 4.405600000000065e-05, 4.3082999999999316e-05, 4.3819000000000496e-05, 4.3153000000000635e-05, 4.397199999999976e-05, 4.4083000000000316e...</msg>
<status status="PASS" starttime="20201112 10:14:34.049" endtime="20201112 10:14:34.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.066" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.065" endtime="20201112 10:14:34.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.068" level="INFO">VALUE: [4.369400000000037e-05, 4.370799999999994e-05, 4.405600000000065e-05, 4.3082999999999316e-05, 4.3819000000000496e-05, 4.3153000000000635e-05, 4.397199999999976e-05, 4.4083000000000316e-05, 4.317999999999683e-05, 4.3291000000000857e-05, 4.3639000000001565e-05, 4.372199999999951e-05, 4.3819000000000496e-05, 4.373599999999908e-05, 4.319399999999987e-05, 4.3833000000000066e-05, 4.373599999999908e-05, 4.3652999999997666e-05, 4.3917000000000955e-05, 4.3846999999999636e-05, 4.3082999999999316e-05, 4.381999999999997e-05, 4.3153000000000635e-05, 4.3708999999999415e-05, 4.3167000000000205e-05, 4.402800000000151e-05, 4.3124999999998026e-05, 4.3917000000000955e-05, 4.3138999999997596e-05, 4.3972999999999235e-05, 4.402800000000151e-05, 4.305599999999965e-05, 4.3888999999998346e-05, 4.3097000000002356e-05, 4.31120000000014e-05, 4.3846999999999636e-05, 4.3833000000000066e-05, 4.365200000000166e-05, 4.377700000000179e-05, 4.376300000000222e-05, 4.3833000000000066e-05, 4.391599999999801e-05, 4.369400000000037e-05, 4.397199999999976e-05, 4.370799999999994e-05, 4.3152999999997166e-05, 4.369400000000037e-05, 4.3875000000002246e-05, 4.3082999999999316e-05, 4.319399999999987e-05]</msg>
<status status="PASS" starttime="20201112 10:14:34.067" endtime="20201112 10:14:34.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.062" endtime="20201112 10:14:34.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.072" endtime="20201112 10:14:34.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.075" endtime="20201112 10:14:34.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.073" endtime="20201112 10:14:34.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.070" endtime="20201112 10:14:34.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.707" endtime="20201112 10:14:34.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.707" endtime="20201112 10:14:34.096"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.104" endtime="20201112 10:14:34.121"></status>
</kw>
<msg timestamp="20201112 10:14:34.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.103" endtime="20201112 10:14:34.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.122" endtime="20201112 10:14:34.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.125" endtime="20201112 10:14:34.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.100" endtime="20201112 10:14:34.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.098" endtime="20201112 10:14:34.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.134" endtime="20201112 10:14:34.419"></status>
</kw>
<msg timestamp="20201112 10:14:34.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:34.133" endtime="20201112 10:14:34.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:34.423" endtime="20201112 10:14:34.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.431" endtime="20201112 10:14:34.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.130" endtime="20201112 10:14:34.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.129" endtime="20201112 10:14:34.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.438" level="INFO">${RESULT} = [{'time': 0.0217535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5138999999999596e-05, 'source_diff': 4.5138999999999596e-05}, {'time': 0.021803097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:34.435" endtime="20201112 10:14:34.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.451" level="INFO">${ACCURACY} = {'source_diff': [4.5138999999999596e-05, 4.491599999999901e-05, 4.502799999999904e-05, 4.483399999999707e-05, 4.4667000000001705e-05, 4.4736999999999555e-05, 4.4930999999998056e-05, 4.494399999999815e...</msg>
<status status="PASS" starttime="20201112 10:14:34.439" endtime="20201112 10:14:34.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.456" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.455" endtime="20201112 10:14:34.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.458" level="INFO">VALUE: [4.5138999999999596e-05, 4.491599999999901e-05, 4.502799999999904e-05, 4.483399999999707e-05, 4.4667000000001705e-05, 4.4736999999999555e-05, 4.4930999999998056e-05, 4.494399999999815e-05, 4.4861000000000206e-05, 4.405600000000065e-05, 4.4861000000000206e-05, 4.480599999999793e-05, 4.4888999999999346e-05, 4.4110999999999456e-05, 4.4111000000002926e-05, 4.49999999999999e-05, 4.4861000000000206e-05, 4.407000000000022e-05, 4.505600000000165e-05, 4.4624999999999526e-05, 4.501399999999947e-05, 4.4166999999997736e-05, 4.4153000000001635e-05, 4.4903000000002385e-05, 4.4652999999998666e-05, 4.4694999999997376e-05, 4.494399999999815e-05, 4.4083000000000316e-05, 4.49999999999999e-05, 4.480499999999846e-05, 4.474999999999965e-05, 4.469400000000137e-05, 4.4069000000000746e-05, 4.46939999999979e-05, 4.477799999999879e-05, 4.4139000000002065e-05, 4.4902999999998916e-05, 4.4847000000000636e-05, 4.424999999999915e-05, 4.4167000000001205e-05, 4.4847000000000636e-05, 4.4874999999999776e-05, 4.4930999999998056e-05, 4.4888999999999346e-05, 4.474999999999965e-05, 4.4180999999997306e-05, 4.4833000000001066e-05, 4.459799999999986e-05, 4.4667000000001705e-05, 4.472200000000051e-05]</msg>
<status status="PASS" starttime="20201112 10:14:34.457" endtime="20201112 10:14:34.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.452" endtime="20201112 10:14:34.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.470" endtime="20201112 10:14:34.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.473" endtime="20201112 10:14:34.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.471" endtime="20201112 10:14:34.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.468" endtime="20201112 10:14:34.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.097" endtime="20201112 10:14:34.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.096" endtime="20201112 10:14:34.494"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.502" endtime="20201112 10:14:34.518"></status>
</kw>
<msg timestamp="20201112 10:14:34.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.501" endtime="20201112 10:14:34.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.520" endtime="20201112 10:14:34.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.522" endtime="20201112 10:14:34.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.498" endtime="20201112 10:14:34.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.496" endtime="20201112 10:14:34.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.532" endtime="20201112 10:14:34.818"></status>
</kw>
<msg timestamp="20201112 10:14:34.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.531" endtime="20201112 10:14:34.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.822" endtime="20201112 10:14:34.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.831" endtime="20201112 10:14:34.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.528" endtime="20201112 10:14:34.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.527" endtime="20201112 10:14:34.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.837" level="INFO">${RESULT} = [{'time': 0.021864611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.627800000000029e-05, 'source_diff': 4.627800000000029e-05}, {'time': 0.021915292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:34.834" endtime="20201112 10:14:34.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.852" level="INFO">${ACCURACY} = {'source_diff': [4.627800000000029e-05, 4.606999999999875e-05, 4.599999999999743e-05, 4.5889000000000346e-05, 4.577800000000326e-05, 4.573599999999761e-05, 4.5902999999999916e-05, 4.5723000000000985e-...</msg>
<status status="PASS" starttime="20201112 10:14:34.838" endtime="20201112 10:14:34.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.856" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.855" endtime="20201112 10:14:34.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.859" level="INFO">VALUE: [4.627800000000029e-05, 4.606999999999875e-05, 4.599999999999743e-05, 4.5889000000000346e-05, 4.577800000000326e-05, 4.573599999999761e-05, 4.5902999999999916e-05, 4.5723000000000985e-05, 4.5138999999999596e-05, 4.5125000000000026e-05, 4.5111000000000456e-05, 4.5666999999999236e-05, 4.5694999999998376e-05, 4.575000000000065e-05, 4.5152999999999166e-05, 4.508400000000079e-05, 4.584799999999764e-05, 4.5652999999999666e-05, 4.502799999999904e-05, 4.573599999999761e-05, 4.597199999999829e-05, 4.5987000000000805e-05, 4.5930999999999056e-05, 4.5930999999999056e-05, 4.5097000000000886e-05, 4.56939999999989e-05, 4.602700000000057e-05, 4.569400000000237e-05, 4.594399999999915e-05, 4.572200000000151e-05, 4.58329999999986e-05, 4.523600000000058e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.579099999999989e-05, 4.509699999999742e-05, 4.5847000000001636e-05, 4.561099999999749e-05, 4.575000000000065e-05, 4.573600000000108e-05, 4.577799999999979e-05, 4.5709000000001415e-05, 4.5138999999999596e-05, 4.579099999999989e-05, 4.579199999999936e-05, 4.5959000000001665e-05, 4.60000000000009e-05, 4.5709000000001415e-05, 4.5181000000001775e-05, 4.5708999999997946e-05]</msg>
<status status="PASS" starttime="20201112 10:14:34.857" endtime="20201112 10:14:34.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.853" endtime="20201112 10:14:34.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.862" endtime="20201112 10:14:34.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.866" endtime="20201112 10:14:34.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.864" endtime="20201112 10:14:34.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.861" endtime="20201112 10:14:34.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.495" endtime="20201112 10:14:34.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.494" endtime="20201112 10:14:34.886"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.895" endtime="20201112 10:14:34.911"></status>
</kw>
<msg timestamp="20201112 10:14:34.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.893" endtime="20201112 10:14:34.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.912" endtime="20201112 10:14:34.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.915" endtime="20201112 10:14:34.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.891" endtime="20201112 10:14:34.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.889" endtime="20201112 10:14:34.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.925" endtime="20201112 10:14:35.211"></status>
</kw>
<msg timestamp="20201112 10:14:35.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.923" endtime="20201112 10:14:35.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.215" endtime="20201112 10:14:35.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.223" endtime="20201112 10:14:35.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.920" endtime="20201112 10:14:35.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.919" endtime="20201112 10:14:35.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.230" level="INFO">${RESULT} = [{'time': 0.022031847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666600000000076e-05, 'source_diff': 4.666600000000076e-05}, {'time': 0.022083486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.226" endtime="20201112 10:14:35.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.243" level="INFO">${ACCURACY} = {'source_diff': [4.666600000000076e-05, 4.686099999999874e-05, 4.679199999999689e-05, 4.6153000000000166e-05, 4.66529999999972e-05, 4.6125000000001026e-05, 4.673599999999861e-05, 4.6139000000000596e-0...</msg>
<status status="PASS" starttime="20201112 10:14:35.231" endtime="20201112 10:14:35.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.248" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.247" endtime="20201112 10:14:35.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.250" level="INFO">VALUE: [4.666600000000076e-05, 4.686099999999874e-05, 4.679199999999689e-05, 4.6153000000000166e-05, 4.66529999999972e-05, 4.6125000000001026e-05, 4.673599999999861e-05, 4.6139000000000596e-05, 4.698599999999886e-05, 4.701400000000147e-05, 4.6903000000000916e-05, 4.686099999999874e-05, 4.6166999999999736e-05, 4.6903000000000916e-05, 4.666699999999677e-05, 4.673600000000208e-05, 4.684699999999917e-05, 4.688899999999788e-05, 4.6625000000001526e-05, 4.609699999999842e-05, 4.684799999999864e-05, 4.674999999999818e-05, 4.6737000000001555e-05, 4.6708999999998946e-05, 4.683399999999907e-05, 4.675000000000165e-05, 4.609800000000136e-05, 4.697199999999929e-05, 4.675000000000165e-05, 4.6889000000001346e-05, 4.679100000000089e-05, 4.6847000000002637e-05, 4.680500000000046e-05, 4.684699999999917e-05, 4.668000000000033e-05, 4.693000000000058e-05, 4.661099999999849e-05, 4.673600000000208e-05, 4.6917000000000486e-05, 4.702799999999757e-05, 4.6861000000002206e-05, 4.6139000000000596e-05, 4.6180999999999306e-05, 4.697199999999929e-05, 4.673599999999861e-05, 4.6180999999999306e-05, 4.612499999999756e-05, 4.7013999999998e-05, 4.6139000000000596e-05, 4.6208999999998446e-05]</msg>
<status status="PASS" starttime="20201112 10:14:35.249" endtime="20201112 10:14:35.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.244" endtime="20201112 10:14:35.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.254" endtime="20201112 10:14:35.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.257" endtime="20201112 10:14:35.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.255" endtime="20201112 10:14:35.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.252" endtime="20201112 10:14:35.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.887" endtime="20201112 10:14:35.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.887" endtime="20201112 10:14:35.278"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.286" endtime="20201112 10:14:35.303"></status>
</kw>
<msg timestamp="20201112 10:14:35.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.285" endtime="20201112 10:14:35.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.304" endtime="20201112 10:14:35.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.307" endtime="20201112 10:14:35.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.282" endtime="20201112 10:14:35.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.280" endtime="20201112 10:14:35.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.317" endtime="20201112 10:14:35.602"></status>
</kw>
<msg timestamp="20201112 10:14:35.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021701264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:35.315" endtime="20201112 10:14:35.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021701264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:35.606" endtime="20201112 10:14:35.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.615" endtime="20201112 10:14:35.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.313" endtime="20201112 10:14:35.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.311" endtime="20201112 10:14:35.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.621" level="INFO">${RESULT} = [{'time': 0.021701264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.826400000000272e-05, 'source_diff': 4.826400000000272e-05}, {'time': 0.021753889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.618" endtime="20201112 10:14:35.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.635" level="INFO">${ACCURACY} = {'source_diff': [4.826400000000272e-05, 4.776399999999875e-05, 4.709699999999942e-05, 4.8013999999999e-05, 4.763899999999863e-05, 4.71529999999977e-05, 4.798599999999986e-05, 4.709800000000236e-05, 4....</msg>
<status status="PASS" starttime="20201112 10:14:35.622" endtime="20201112 10:14:35.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.639" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.638" endtime="20201112 10:14:35.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.642" level="INFO">VALUE: [4.826400000000272e-05, 4.776399999999875e-05, 4.709699999999942e-05, 4.8013999999999e-05, 4.763899999999863e-05, 4.71529999999977e-05, 4.798599999999986e-05, 4.709800000000236e-05, 4.787499999999931e-05, 4.7931000000001056e-05, 4.776399999999875e-05, 4.773599999999961e-05, 4.78330000000006e-05, 4.762499999999906e-05, 4.713899999999813e-05, 4.781900000000103e-05, 4.769399999999743e-05, 4.7111000000002456e-05, 4.786099999999974e-05, 4.779100000000189e-05, 4.775000000000265e-05, 4.706900000000028e-05, 4.71529999999977e-05, 4.794400000000115e-05, 4.780499999999799e-05, 4.779199999999789e-05, 4.80000000000029e-05, 4.7667000000001236e-05, 4.713899999999813e-05, 4.7959000000000196e-05, 4.71529999999977e-05, 4.781999999999703e-05, 4.784700000000017e-05, 4.706999999999975e-05, 4.7708999999999946e-05, 4.7708999999999946e-05, 4.7889000000002346e-05, 4.705600000000018e-05, 4.8013999999999e-05, 4.716600000000126e-05, 4.7667000000001236e-05, 4.7653000000001666e-05, 4.7153000000001166e-05, 4.7945000000000626e-05, 4.759699999999992e-05, 4.790299999999845e-05, 4.797200000000029e-05, 4.7945000000000626e-05, 4.716599999999779e-05, 4.741599999999804e-05]</msg>
<status status="PASS" starttime="20201112 10:14:35.640" endtime="20201112 10:14:35.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.636" endtime="20201112 10:14:35.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.645" endtime="20201112 10:14:35.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.649" endtime="20201112 10:14:35.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.647" endtime="20201112 10:14:35.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.643" endtime="20201112 10:14:35.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.279" endtime="20201112 10:14:35.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.278" endtime="20201112 10:14:35.669"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.678" endtime="20201112 10:14:35.694"></status>
</kw>
<msg timestamp="20201112 10:14:35.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.676" endtime="20201112 10:14:35.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.696" endtime="20201112 10:14:35.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.699" endtime="20201112 10:14:35.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.674" endtime="20201112 10:14:35.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.672" endtime="20201112 10:14:35.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.710" endtime="20201112 10:14:35.994"></status>
</kw>
<msg timestamp="20201112 10:14:35.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.708" endtime="20201112 10:14:35.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.998" endtime="20201112 10:14:36.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.006" endtime="20201112 10:14:36.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.705" endtime="20201112 10:14:36.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.703" endtime="20201112 10:14:36.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.013" level="INFO">${RESULT} = [{'time': 0.021781069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.925000000000068e-05, 'source_diff': 4.925000000000068e-05}, {'time': 0.021834708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.009" endtime="20201112 10:14:36.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.026" level="INFO">${ACCURACY} = {'source_diff': [4.925000000000068e-05, 4.880500000000246e-05, 4.816600000000226e-05, 4.805500000000171e-05, 4.904200000000261e-05, 4.887500000000031e-05, 4.8931000000002056e-05, 4.8667000000002236e-0...</msg>
<status status="PASS" starttime="20201112 10:14:36.014" endtime="20201112 10:14:36.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.031" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.030" endtime="20201112 10:14:36.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.033" level="INFO">VALUE: [4.925000000000068e-05, 4.880500000000246e-05, 4.816600000000226e-05, 4.805500000000171e-05, 4.904200000000261e-05, 4.887500000000031e-05, 4.8931000000002056e-05, 4.8667000000002236e-05, 4.881900000000203e-05, 4.8707999999998e-05, 4.879199999999889e-05, 4.9014e-05, 4.8181000000001306e-05, 4.870800000000147e-05, 4.895800000000172e-05, 4.883299999999813e-05, 4.900000000000043e-05, 4.88200000000015e-05, 4.873600000000061e-05, 4.898600000000086e-05, 4.804199999999814e-05, 4.811099999999999e-05, 4.883400000000107e-05, 4.812499999999956e-05, 4.804200000000161e-05, 4.881900000000203e-05, 4.812499999999956e-05, 4.812499999999956e-05, 4.893000000000258e-05, 4.867999999999886e-05, 4.876399999999975e-05, 4.815199999999922e-05, 4.872200000000104e-05, 4.868000000000233e-05, 4.888899999999988e-05, 4.890299999999945e-05, 4.819399999999793e-05, 4.806899999999781e-05, 4.86529999999992e-05, 4.876399999999975e-05, 4.862500000000006e-05, 4.881899999999856e-05, 4.879199999999889e-05, 4.807000000000075e-05, 4.808300000000085e-05, 4.863899999999963e-05, 4.8195000000000876e-05, 4.807000000000075e-05, 4.904199999999914e-05, 4.809700000000042e-05]</msg>
<status status="PASS" starttime="20201112 10:14:36.032" endtime="20201112 10:14:36.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.027" endtime="20201112 10:14:36.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.037" endtime="20201112 10:14:36.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.040" endtime="20201112 10:14:36.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.038" endtime="20201112 10:14:36.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.035" endtime="20201112 10:14:36.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.670" endtime="20201112 10:14:36.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.670" endtime="20201112 10:14:36.061"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.069" endtime="20201112 10:14:36.086"></status>
</kw>
<msg timestamp="20201112 10:14:36.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.068" endtime="20201112 10:14:36.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.087" endtime="20201112 10:14:36.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.090" endtime="20201112 10:14:36.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.065" endtime="20201112 10:14:36.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.063" endtime="20201112 10:14:36.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.100" endtime="20201112 10:14:36.384"></status>
</kw>
<msg timestamp="20201112 10:14:36.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.098" endtime="20201112 10:14:36.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.388" endtime="20201112 10:14:36.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.396" endtime="20201112 10:14:36.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.096" endtime="20201112 10:14:36.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.094" endtime="20201112 10:14:36.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.402" level="INFO">${RESULT} = [{'time': 0.021677833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.975000000000118e-05, 'source_diff': 4.975000000000118e-05}, {'time': 0.021732458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.399" endtime="20201112 10:14:36.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.417" level="INFO">${ACCURACY} = {'source_diff': [4.975000000000118e-05, 4.969399999999943e-05, 4.973600000000161e-05, 4.993099999999959e-05, 4.96940000000029e-05, 4.975000000000118e-05, 4.975000000000118e-05, 4.917999999999936e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:36.403" endtime="20201112 10:14:36.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.421" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.420" endtime="20201112 10:14:36.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.424" level="INFO">VALUE: [4.975000000000118e-05, 4.969399999999943e-05, 4.973600000000161e-05, 4.993099999999959e-05, 4.96940000000029e-05, 4.975000000000118e-05, 4.975000000000118e-05, 4.917999999999936e-05, 4.962500000000106e-05, 5.002800000000057e-05, 4.906999999999828e-05, 4.9695000000002376e-05, 4.994399999999968e-05, 4.972199999999857e-05, 4.990300000000045e-05, 4.999999999999796e-05, 4.991700000000002e-05, 4.970899999999848e-05, 5.004200000000014e-05, 4.980599999999946e-05, 4.988900000000088e-05, 4.913900000000013e-05, 4.904199999999914e-05, 4.907000000000175e-05, 4.977800000000032e-05, 4.962500000000106e-05, 4.912500000000056e-05, 4.986100000000174e-05, 4.993000000000011e-05, 4.9707999999999e-05, 4.983299999999913e-05, 4.916599999999979e-05, 4.977700000000085e-05, 4.987500000000131e-05, 4.990300000000045e-05, 4.969499999999891e-05, 4.906900000000228e-05, 4.988900000000088e-05, 4.968099999999934e-05, 4.917999999999936e-05, 4.963900000000063e-05, 4.976400000000075e-05, 4.911100000000099e-05, 4.993099999999959e-05, 4.980599999999946e-05, 4.9945000000002626e-05, 4.980599999999946e-05, 4.998599999999839e-05, 4.906999999999828e-05, 4.970899999999848e-05]</msg>
<status status="PASS" starttime="20201112 10:14:36.423" endtime="20201112 10:14:36.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.418" endtime="20201112 10:14:36.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.428" endtime="20201112 10:14:36.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.431" endtime="20201112 10:14:36.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.429" endtime="20201112 10:14:36.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.426" endtime="20201112 10:14:36.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.062" endtime="20201112 10:14:36.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.061" endtime="20201112 10:14:36.452"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.460" endtime="20201112 10:14:36.476"></status>
</kw>
<msg timestamp="20201112 10:14:36.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.459" endtime="20201112 10:14:36.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.477" endtime="20201112 10:14:36.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.480" endtime="20201112 10:14:36.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.456" endtime="20201112 10:14:36.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.454" endtime="20201112 10:14:36.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.490" endtime="20201112 10:14:36.775"></status>
</kw>
<msg timestamp="20201112 10:14:36.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.488" endtime="20201112 10:14:36.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.779" endtime="20201112 10:14:36.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.787" endtime="20201112 10:14:36.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.486" endtime="20201112 10:14:36.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.484" endtime="20201112 10:14:36.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.794" level="INFO">${RESULT} = [{'time': 0.021805056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.086199999999874e-05, 'source_diff': 5.086199999999874e-05}, {'time': 0.021860681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.791" endtime="20201112 10:14:36.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.807" level="INFO">${ACCURACY} = {'source_diff': [5.086199999999874e-05, 5.055600000000021e-05, 5.0915999999998074e-05, 5.098599999999939e-05, 5.011100000000199e-05, 5.012499999999809e-05, 5.0679999999997394e-05, 5.012500000000156e-0...</msg>
<status status="PASS" starttime="20201112 10:14:36.795" endtime="20201112 10:14:36.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.812" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.811" endtime="20201112 10:14:36.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.814" level="INFO">VALUE: [5.086199999999874e-05, 5.055600000000021e-05, 5.0915999999998074e-05, 5.098599999999939e-05, 5.011100000000199e-05, 5.012499999999809e-05, 5.0679999999997394e-05, 5.012500000000156e-05, 5.081900000000056e-05, 5.079099999999795e-05, 5.012500000000156e-05, 5.0708e-05, 5.011099999999852e-05, 5.0736999999998617e-05, 5.086199999999874e-05, 5.005500000000024e-05, 5.076399999999828e-05, 5.100000000000243e-05, 5.106900000000081e-05, 5.079200000000089e-05, 5.066700000000077e-05, 5.080600000000046e-05, 5.079100000000142e-05, 5.102800000000157e-05, 5.016700000000027e-05, 5.063899999999816e-05, 5.011100000000199e-05, 5.09729999999993e-05, 5.09729999999993e-05, 5.094500000000016e-05, 5.087500000000231e-05, 5.066700000000077e-05, 5.082000000000003e-05, 5.005599999999971e-05, 5.097200000000329e-05, 5.093000000000111e-05, 5.079100000000142e-05, 5.009699999999895e-05, 5.01530000000007e-05, 5.069400000000043e-05, 5.074999999999871e-05, 5.073599999999914e-05, 5.073599999999914e-05, 5.090300000000145e-05, 5.08469999999997e-05, 5.087499999999884e-05, 5.097199999999982e-05, 5.019499999999941e-05, 5.013900000000113e-05, 5.087499999999884e-05]</msg>
<status status="PASS" starttime="20201112 10:14:36.813" endtime="20201112 10:14:36.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.808" endtime="20201112 10:14:36.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.818" endtime="20201112 10:14:36.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.821" endtime="20201112 10:14:36.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.820" endtime="20201112 10:14:36.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.816" endtime="20201112 10:14:36.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.453" endtime="20201112 10:14:36.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.452" endtime="20201112 10:14:36.842"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.851" endtime="20201112 10:14:36.867"></status>
</kw>
<msg timestamp="20201112 10:14:36.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.849" endtime="20201112 10:14:36.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.868" endtime="20201112 10:14:36.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.871" endtime="20201112 10:14:36.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.847" endtime="20201112 10:14:36.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.844" endtime="20201112 10:14:36.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.881" endtime="20201112 10:14:37.166"></status>
</kw>
<msg timestamp="20201112 10:14:37.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.879" endtime="20201112 10:14:37.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.170" endtime="20201112 10:14:37.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.179" endtime="20201112 10:14:37.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.877" endtime="20201112 10:14:37.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.875" endtime="20201112 10:14:37.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.185" level="INFO">${RESULT} = [{'time': 0.021727569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.234699999999773e-05, 'source_diff': 5.234699999999773e-05}, {'time': 0.021784194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.182" endtime="20201112 10:14:37.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.199" level="INFO">${ACCURACY} = {'source_diff': [5.234699999999773e-05, 5.183300000000113e-05, 5.161100000000002e-05, 5.1943999999998214e-05, 5.183300000000113e-05, 5.163900000000263e-05, 5.118000000000136e-05, 5.113899999999866e-05...</msg>
<status status="PASS" starttime="20201112 10:14:37.186" endtime="20201112 10:14:37.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.203" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.202" endtime="20201112 10:14:37.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.206" level="INFO">VALUE: [5.234699999999773e-05, 5.183300000000113e-05, 5.161100000000002e-05, 5.1943999999998214e-05, 5.183300000000113e-05, 5.163900000000263e-05, 5.118000000000136e-05, 5.113899999999866e-05, 5.1708000000001e-05, 5.16530000000022e-05, 5.202800000000257e-05, 5.169400000000143e-05, 5.180600000000146e-05, 5.112500000000256e-05, 5.108300000000038e-05, 5.176399999999928e-05, 5.195800000000125e-05, 5.2014000000003e-05, 5.109699999999995e-05, 5.195800000000125e-05, 5.161100000000002e-05, 5.180600000000146e-05, 5.18340000000006e-05, 5.193099999999812e-05, 5.181999999999756e-05, 5.162499999999959e-05, 5.20279999999991e-05, 5.118000000000136e-05, 5.198699999999987e-05, 5.118000000000136e-05, 5.201399999999953e-05, 5.111099999999952e-05, 5.187499999999984e-05, 5.161100000000002e-05, 5.108300000000038e-05, 5.111099999999952e-05, 5.113899999999866e-05, 5.180499999999852e-05, 5.188899999999941e-05, 5.1708000000001e-05, 5.113899999999866e-05, 5.205499999999877e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.163899999999916e-05, 5.107000000000028e-05, 5.163899999999916e-05, 5.173600000000014e-05, 5.173600000000014e-05, 5.169500000000091e-05]</msg>
<status status="PASS" starttime="20201112 10:14:37.204" endtime="20201112 10:14:37.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.199" endtime="20201112 10:14:37.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.209" endtime="20201112 10:14:37.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.212" endtime="20201112 10:14:37.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.211" endtime="20201112 10:14:37.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.207" endtime="20201112 10:14:37.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.843" endtime="20201112 10:14:37.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.842" endtime="20201112 10:14:37.233"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.242" endtime="20201112 10:14:37.259"></status>
</kw>
<msg timestamp="20201112 10:14:37.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.240" endtime="20201112 10:14:37.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.260" endtime="20201112 10:14:37.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.262" endtime="20201112 10:14:37.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.238" endtime="20201112 10:14:37.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.236" endtime="20201112 10:14:37.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.272" endtime="20201112 10:14:37.557"></status>
</kw>
<msg timestamp="20201112 10:14:37.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.271" endtime="20201112 10:14:37.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.561" endtime="20201112 10:14:37.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.569" endtime="20201112 10:14:37.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.268" endtime="20201112 10:14:37.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.267" endtime="20201112 10:14:37.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.576" level="INFO">${RESULT} = [{'time': 0.021739667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.336100000000177e-05, 'source_diff': 5.336100000000177e-05}, {'time': 0.021797236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.572" endtime="20201112 10:14:37.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.589" level="INFO">${ACCURACY} = {'source_diff': [5.336100000000177e-05, 5.256900000000231e-05, 5.281899999999909e-05, 5.2193999999998464e-05, 5.262500000000059e-05, 5.212500000000009e-05, 5.209700000000095e-05, 5.281999999999856e-05...</msg>
<status status="PASS" starttime="20201112 10:14:37.577" endtime="20201112 10:14:37.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.594" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.593" endtime="20201112 10:14:37.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.596" level="INFO">VALUE: [5.336100000000177e-05, 5.256900000000231e-05, 5.281899999999909e-05, 5.2193999999998464e-05, 5.262500000000059e-05, 5.212500000000009e-05, 5.209700000000095e-05, 5.281999999999856e-05, 5.279199999999942e-05, 5.211100000000052e-05, 5.218100000000184e-05, 5.300000000000096e-05, 5.284800000000117e-05, 5.211100000000052e-05, 5.212500000000009e-05, 5.272299999999758e-05, 5.281899999999909e-05, 5.208300000000138e-05, 5.270899999999801e-05, 5.2888000000000934e-05, 5.2735999999997674e-05, 5.2679999999999394e-05, 5.2985999999997924e-05, 5.283299999999866e-05, 5.211100000000052e-05, 5.287500000000084e-05, 5.293099999999912e-05, 5.288900000000041e-05, 5.2957999999998784e-05, 5.263900000000016e-05, 5.2929999999999644e-05, 5.213899999999966e-05, 5.204200000000214e-05, 5.208299999999791e-05, 5.26669999999993e-05, 5.219499999999794e-05, 5.269500000000191e-05, 5.26669999999993e-05, 5.277799999999985e-05, 5.216700000000227e-05, 5.205600000000171e-05, 5.279199999999942e-05, 5.209800000000042e-05, 5.211100000000052e-05, 5.294500000000216e-05, 5.301400000000053e-05, 5.272300000000105e-05, 5.279199999999942e-05, 5.21669999999988e-05, 5.2916000000000074e-05]</msg>
<status status="PASS" starttime="20201112 10:14:37.595" endtime="20201112 10:14:37.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.590" endtime="20201112 10:14:37.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.600" endtime="20201112 10:14:37.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.603" endtime="20201112 10:14:37.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.601" endtime="20201112 10:14:37.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.598" endtime="20201112 10:14:37.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.234" endtime="20201112 10:14:37.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.234" endtime="20201112 10:14:37.624"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.632" endtime="20201112 10:14:37.648"></status>
</kw>
<msg timestamp="20201112 10:14:37.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.631" endtime="20201112 10:14:37.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.650" endtime="20201112 10:14:37.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.652" endtime="20201112 10:14:37.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.628" endtime="20201112 10:14:37.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.626" endtime="20201112 10:14:37.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.662" endtime="20201112 10:14:37.947"></status>
</kw>
<msg timestamp="20201112 10:14:37.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.661" endtime="20201112 10:14:37.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.951" endtime="20201112 10:14:37.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.960" endtime="20201112 10:14:37.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.658" endtime="20201112 10:14:37.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.656" endtime="20201112 10:14:37.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.966" level="INFO">${RESULT} = [{'time': 0.021829403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.427800000000135e-05, 'source_diff': 5.427800000000135e-05}, {'time': 0.021887097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.963" endtime="20201112 10:14:37.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.981" level="INFO">${ACCURACY} = {'source_diff': [5.427800000000135e-05, 5.311100000000152e-05, 5.345900000000223e-05, 5.358399999999888e-05, 5.381999999999956e-05, 5.305599999999924e-05, 5.386199999999827e-05, 5.3179999999999894e-05...</msg>
<status status="PASS" starttime="20201112 10:14:37.967" endtime="20201112 10:14:37.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.985" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.984" endtime="20201112 10:14:37.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.988" level="INFO">VALUE: [5.427800000000135e-05, 5.311100000000152e-05, 5.345900000000223e-05, 5.358399999999888e-05, 5.381999999999956e-05, 5.305599999999924e-05, 5.386199999999827e-05, 5.3179999999999894e-05, 5.308299999999891e-05, 5.388900000000141e-05, 5.3971999999999354e-05, 5.38609999999988e-05, 5.359699999999898e-05, 5.388900000000141e-05, 5.362499999999812e-05, 5.3915999999997605e-05, 5.363900000000116e-05, 5.3707999999999534e-05, 5.387499999999837e-05, 5.313900000000066e-05, 5.376400000000128e-05, 5.312499999999762e-05, 5.380599999999999e-05, 5.306999999999881e-05, 5.391699999999708e-05, 5.304199999999967e-05, 5.3721999999999104e-05, 5.380599999999999e-05, 5.404200000000067e-05, 5.373699999999815e-05, 5.379199999999695e-05, 5.305599999999924e-05, 5.391700000000055e-05, 5.363900000000116e-05, 5.377800000000085e-05, 5.390299999999751e-05, 5.397200000000282e-05, 5.3693999999999964e-05, 5.3944000000000214e-05, 5.308300000000238e-05, 5.3985999999998924e-05, 5.313900000000066e-05, 5.313900000000066e-05, 5.372200000000257e-05, 5.38609999999988e-05, 5.391700000000055e-05, 5.372200000000257e-05, 5.3930000000000644e-05, 5.3721999999999104e-05, 5.390300000000098e-05]</msg>
<status status="PASS" starttime="20201112 10:14:37.986" endtime="20201112 10:14:37.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.981" endtime="20201112 10:14:37.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.991" endtime="20201112 10:14:37.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.994" endtime="20201112 10:14:38.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.993" endtime="20201112 10:14:38.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.989" endtime="20201112 10:14:38.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.625" endtime="20201112 10:14:38.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.624" endtime="20201112 10:14:38.015"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.024" endtime="20201112 10:14:38.041"></status>
</kw>
<msg timestamp="20201112 10:14:38.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.022" endtime="20201112 10:14:38.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.043" endtime="20201112 10:14:38.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.045" endtime="20201112 10:14:38.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.020" endtime="20201112 10:14:38.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.018" endtime="20201112 10:14:38.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.055" endtime="20201112 10:14:38.341"></status>
</kw>
<msg timestamp="20201112 10:14:38.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.054" endtime="20201112 10:14:38.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.345" endtime="20201112 10:14:38.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.353" endtime="20201112 10:14:38.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.051" endtime="20201112 10:14:38.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.049" endtime="20201112 10:14:38.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.360" level="INFO">${RESULT} = [{'time': 0.022030194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4958000000000784e-05, 'source_diff': 5.4958000000000784e-05}, {'time': 0.022089819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:38.356" endtime="20201112 10:14:38.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.373" level="INFO">${ACCURACY} = {'source_diff': [5.4958000000000784e-05, 5.459699999999998e-05, 5.4944000000001214e-05, 5.507000000000081e-05, 5.502699999999916e-05, 5.4179999999997425e-05, 5.490299999999851e-05, 5.4971999999996884e...</msg>
<status status="PASS" starttime="20201112 10:14:38.361" endtime="20201112 10:14:38.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.378" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.377" endtime="20201112 10:14:38.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.380" level="INFO">VALUE: [5.4958000000000784e-05, 5.459699999999998e-05, 5.4944000000001214e-05, 5.507000000000081e-05, 5.502699999999916e-05, 5.4179999999997425e-05, 5.490299999999851e-05, 5.4971999999996884e-05, 5.41670000000008e-05, 5.484700000000023e-05, 5.4985999999999924e-05, 5.4944000000001214e-05, 5.490299999999851e-05, 5.50410000000022e-05, 5.408299999999991e-05, 5.418100000000037e-05, 5.475000000000271e-05, 5.4972000000000354e-05, 5.419499999999994e-05, 5.4791999999997953e-05, 5.491700000000155e-05, 5.466699999999783e-05, 5.408399999999938e-05, 5.498700000000287e-05, 5.46809999999974e-05, 5.50549999999983e-05, 5.481899999999762e-05, 5.498700000000287e-05, 5.4916000000002074e-05, 5.473600000000314e-05, 5.502699999999916e-05, 5.413900000000166e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.4777999999998384e-05, 5.404099999999773e-05, 5.48609999999998e-05, 5.461099999999955e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.490299999999851e-05, 5.473600000000314e-05, 5.468100000000087e-05, 5.4916000000002074e-05, 5.48609999999998e-05, 5.488900000000241e-05, 5.408399999999938e-05]</msg>
<status status="PASS" starttime="20201112 10:14:38.379" endtime="20201112 10:14:38.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.374" endtime="20201112 10:14:38.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.384" endtime="20201112 10:14:38.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.387" endtime="20201112 10:14:38.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.386" endtime="20201112 10:14:38.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.382" endtime="20201112 10:14:38.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.016" endtime="20201112 10:14:38.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.016" endtime="20201112 10:14:38.408"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.417" endtime="20201112 10:14:38.433"></status>
</kw>
<msg timestamp="20201112 10:14:38.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.415" endtime="20201112 10:14:38.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.435" endtime="20201112 10:14:38.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.437" endtime="20201112 10:14:38.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.412" endtime="20201112 10:14:38.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.410" endtime="20201112 10:14:38.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.447" endtime="20201112 10:14:38.732"></status>
</kw>
<msg timestamp="20201112 10:14:38.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.446" endtime="20201112 10:14:38.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.736" endtime="20201112 10:14:38.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.745" endtime="20201112 10:14:38.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.443" endtime="20201112 10:14:38.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.441" endtime="20201112 10:14:38.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.752" level="INFO">${RESULT} = [{'time': 0.021825306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6014000000000064e-05, 'source_diff': 5.6014000000000064e-05}, {'time': 0.021885944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:38.748" endtime="20201112 10:14:38.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.766" level="INFO">${ACCURACY} = {'source_diff': [5.6014000000000064e-05, 5.554099999999923e-05, 5.584700000000123e-05, 5.506899999999787e-05, 5.5165999999998855e-05, 5.563899999999969e-05, 5.5750000000000244e-05, 5.590299999999951e-...</msg>
<status status="PASS" starttime="20201112 10:14:38.753" endtime="20201112 10:14:38.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.770" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.769" endtime="20201112 10:14:38.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.772" level="INFO">VALUE: [5.6014000000000064e-05, 5.554099999999923e-05, 5.584700000000123e-05, 5.506899999999787e-05, 5.5165999999998855e-05, 5.563899999999969e-05, 5.5750000000000244e-05, 5.590299999999951e-05, 5.5943999999998745e-05, 5.579099999999948e-05, 5.58610000000008e-05, 5.563899999999969e-05, 5.5693999999998495e-05, 5.580499999999905e-05, 5.562500000000012e-05, 5.56670000000023e-05, 5.5791999999998954e-05, 5.581899999999862e-05, 5.5763999999999814e-05, 5.588899999999994e-05, 5.5791999999998954e-05, 5.593099999999865e-05, 5.58480000000007e-05, 5.569500000000144e-05, 5.593100000000212e-05, 5.6000000000000494e-05, 5.508300000000091e-05, 5.5736000000000674e-05, 5.593100000000212e-05, 5.5180000000001894e-05, 5.577699999999991e-05, 5.5193999999997995e-05, 5.579099999999948e-05, 5.588899999999994e-05, 5.604099999999973e-05, 5.584699999999776e-05, 5.5750000000000244e-05, 5.580500000000252e-05, 5.5971999999997885e-05, 5.512499999999962e-05, 5.512500000000309e-05, 5.501400000000253e-05, 5.509700000000048e-05, 5.5985999999997454e-05, 5.566699999999883e-05, 5.587500000000037e-05, 5.5958000000001784e-05, 5.513899999999919e-05, 5.519500000000094e-05, 5.591699999999908e-05]</msg>
<status status="PASS" starttime="20201112 10:14:38.771" endtime="20201112 10:14:38.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.767" endtime="20201112 10:14:38.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.776" endtime="20201112 10:14:38.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.780" endtime="20201112 10:14:38.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.778" endtime="20201112 10:14:38.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.775" endtime="20201112 10:14:38.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.409" endtime="20201112 10:14:38.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.408" endtime="20201112 10:14:38.800"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.809" endtime="20201112 10:14:38.825"></status>
</kw>
<msg timestamp="20201112 10:14:38.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.808" endtime="20201112 10:14:38.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.827" endtime="20201112 10:14:38.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.829" endtime="20201112 10:14:38.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.805" endtime="20201112 10:14:38.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.803" endtime="20201112 10:14:38.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.839" endtime="20201112 10:14:39.125"></status>
</kw>
<msg timestamp="20201112 10:14:39.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.838" endtime="20201112 10:14:39.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.129" endtime="20201112 10:14:39.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.137" endtime="20201112 10:14:39.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.835" endtime="20201112 10:14:39.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.834" endtime="20201112 10:14:39.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.144" level="INFO">${RESULT} = [{'time': 0.021773111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6694000000002964e-05, 'source_diff': 5.6694000000002964e-05}, {'time': 0.021834722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:39.141" endtime="20201112 10:14:39.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.157" level="INFO">${ACCURACY} = {'source_diff': [5.6694000000002964e-05, 5.65549999999998e-05, 5.691700000000008e-05, 5.612500000000062e-05, 5.668100000000287e-05, 5.6957999999999315e-05, 5.688899999999747e-05, 5.6750000000001244e-0...</msg>
<status status="PASS" starttime="20201112 10:14:39.145" endtime="20201112 10:14:39.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.162" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.161" endtime="20201112 10:14:39.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.164" level="INFO">VALUE: [5.6694000000002964e-05, 5.65549999999998e-05, 5.691700000000008e-05, 5.612500000000062e-05, 5.668100000000287e-05, 5.6957999999999315e-05, 5.688899999999747e-05, 5.6750000000001244e-05, 5.665299999999679e-05, 5.665300000000026e-05, 5.5999999999997024e-05, 5.680500000000005e-05, 5.684699999999876e-05, 5.613900000000019e-05, 5.7000000000001494e-05, 5.672299999999811e-05, 5.6958000000002784e-05, 5.61809999999989e-05, 5.673700000000115e-05, 5.6193999999998995e-05, 5.676300000000134e-05, 5.611100000000105e-05, 5.6971999999998885e-05, 5.686099999999833e-05, 5.6778000000000384e-05, 5.612500000000062e-05, 5.60549999999993e-05, 5.6679999999999925e-05, 5.6930000000000175e-05, 5.7014000000001064e-05, 5.690300000000051e-05, 5.691700000000008e-05, 5.618100000000237e-05, 5.608299999999844e-05, 5.665300000000026e-05, 5.661100000000155e-05, 5.6055999999998773e-05, 5.618100000000237e-05, 5.606999999999834e-05, 5.680500000000005e-05, 5.690300000000051e-05, 5.7000000000001494e-05, 5.686099999999833e-05, 5.68610000000018e-05, 5.702700000000116e-05, 5.6944000000003214e-05, 5.663900000000069e-05, 5.6721999999998635e-05, 5.693099999999965e-05, 5.684699999999876e-05]</msg>
<status status="PASS" starttime="20201112 10:14:39.163" endtime="20201112 10:14:39.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.158" endtime="20201112 10:14:39.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.168" endtime="20201112 10:14:39.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.171" endtime="20201112 10:14:39.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.170" endtime="20201112 10:14:39.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.166" endtime="20201112 10:14:39.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.801" endtime="20201112 10:14:39.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.801" endtime="20201112 10:14:39.192"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.201" endtime="20201112 10:14:39.217"></status>
</kw>
<msg timestamp="20201112 10:14:39.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.199" endtime="20201112 10:14:39.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.219" endtime="20201112 10:14:39.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.221" endtime="20201112 10:14:39.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.197" endtime="20201112 10:14:39.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.195" endtime="20201112 10:14:39.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.231" endtime="20201112 10:14:39.516"></status>
</kw>
<msg timestamp="20201112 10:14:39.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.230" endtime="20201112 10:14:39.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.521" endtime="20201112 10:14:39.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.529" endtime="20201112 10:14:39.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.227" endtime="20201112 10:14:39.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.226" endtime="20201112 10:14:39.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.535" level="INFO">${RESULT} = [{'time': 0.021791792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8028000000001634e-05, 'source_diff': 5.8028000000001634e-05}, {'time': 0.021854431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:39.532" endtime="20201112 10:14:39.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.550" level="INFO">${ACCURACY} = {'source_diff': [5.8028000000001634e-05, 5.747299999999886e-05, 5.78619999999988e-05, 5.706899999999987e-05, 5.708299999999944e-05, 5.706899999999987e-05, 5.763899999999822e-05, 5.712500000000162e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:39.536" endtime="20201112 10:14:39.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.554" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.553" endtime="20201112 10:14:39.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.557" level="INFO">VALUE: [5.8028000000001634e-05, 5.747299999999886e-05, 5.78619999999988e-05, 5.706899999999987e-05, 5.708299999999944e-05, 5.706899999999987e-05, 5.763899999999822e-05, 5.712500000000162e-05, 5.779099999999801e-05, 5.781900000000062e-05, 5.790300000000151e-05, 5.7207999999999565e-05, 5.7735999999999205e-05, 5.711100000000205e-05, 5.7180000000000425e-05, 5.784699999999976e-05, 5.7735999999999205e-05, 5.720899999999904e-05, 5.76810000000004e-05, 5.7792000000000954e-05, 5.7806000000000524e-05, 5.783300000000019e-05, 5.8000000000002494e-05, 5.7055999999999774e-05, 5.7820000000000094e-05, 5.7805999999997054e-05, 5.770899999999954e-05, 5.787500000000237e-05, 5.788900000000194e-05, 5.7069999999999343e-05, 5.7708000000000065e-05, 5.7166000000000855e-05, 5.704100000000073e-05, 5.7193999999999995e-05, 5.8027999999998164e-05, 5.708299999999944e-05, 5.7693999999997025e-05, 5.7999999999999025e-05, 5.791700000000108e-05, 5.7763999999998344e-05, 5.713900000000119e-05, 5.7750000000002244e-05, 5.7999999999999025e-05, 5.71809999999999e-05, 5.797299999999936e-05, 5.71809999999999e-05, 5.708400000000238e-05, 5.7763999999998344e-05, 5.7736000000002674e-05, 5.770899999999954e-05]</msg>
<status status="PASS" starttime="20201112 10:14:39.555" endtime="20201112 10:14:39.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.551" endtime="20201112 10:14:39.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.564" endtime="20201112 10:14:39.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.568" endtime="20201112 10:14:39.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.566" endtime="20201112 10:14:39.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.563" endtime="20201112 10:14:39.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.193" endtime="20201112 10:14:39.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.192" endtime="20201112 10:14:39.589"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.597" endtime="20201112 10:14:39.614"></status>
</kw>
<msg timestamp="20201112 10:14:39.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.596" endtime="20201112 10:14:39.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.615" endtime="20201112 10:14:39.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.617" endtime="20201112 10:14:39.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.593" endtime="20201112 10:14:39.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.591" endtime="20201112 10:14:39.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.627" endtime="20201112 10:14:39.913"></status>
</kw>
<msg timestamp="20201112 10:14:39.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.626" endtime="20201112 10:14:39.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.917" endtime="20201112 10:14:39.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.925" endtime="20201112 10:14:39.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.623" endtime="20201112 10:14:39.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.622" endtime="20201112 10:14:39.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.932" level="INFO">${RESULT} = [{'time': 0.022088222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.929099999999951e-05, 'source_diff': 5.929099999999951e-05}, {'time': 0.022151847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:39.928" endtime="20201112 10:14:39.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.945" level="INFO">${ACCURACY} = {'source_diff': [5.929099999999951e-05, 5.8679999999998456e-05, 5.8749999999999775e-05, 5.8041999999997734e-05, 5.863899999999922e-05, 5.86949999999975e-05, 5.893099999999818e-05, 5.886100000000033e-0...</msg>
<status status="PASS" starttime="20201112 10:14:39.933" endtime="20201112 10:14:39.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.950" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.949" endtime="20201112 10:14:39.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.952" level="INFO">VALUE: [5.929099999999951e-05, 5.8679999999998456e-05, 5.8749999999999775e-05, 5.8041999999997734e-05, 5.863899999999922e-05, 5.86949999999975e-05, 5.893099999999818e-05, 5.886100000000033e-05, 5.808300000000044e-05, 5.9027999999999164e-05, 5.9013999999999595e-05, 5.8722000000000635e-05, 5.8749999999999775e-05, 5.88749999999999e-05, 5.9056000000001774e-05, 5.8056000000000774e-05, 5.902699999999969e-05, 5.9013999999999595e-05, 5.811200000000252e-05, 5.8915999999999136e-05, 5.8137999999999246e-05, 5.8887999999999996e-05, 5.863899999999922e-05, 5.865299999999879e-05, 5.811099999999958e-05, 5.8986000000000455e-05, 5.8179999999997956e-05, 5.863899999999922e-05, 5.808300000000044e-05, 5.859700000000051e-05, 5.884700000000076e-05, 5.8027999999998164e-05, 5.8708000000001065e-05, 5.9000000000000025e-05, 5.8820000000001094e-05, 5.866700000000183e-05, 5.8708000000001065e-05, 5.9013999999999595e-05, 5.859700000000051e-05, 5.811100000000305e-05, 5.868099999999793e-05, 5.891699999999861e-05, 5.883299999999772e-05, 5.813899999999872e-05, 5.8777999999998914e-05, 5.8820000000001094e-05, 5.88749999999999e-05, 5.8165999999998386e-05, 5.8972000000000885e-05, 5.877699999999944e-05]</msg>
<status status="PASS" starttime="20201112 10:14:39.951" endtime="20201112 10:14:39.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.946" endtime="20201112 10:14:39.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.956" endtime="20201112 10:14:39.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.959" endtime="20201112 10:14:39.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.958" endtime="20201112 10:14:39.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.954" endtime="20201112 10:14:39.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.590" endtime="20201112 10:14:39.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.589" endtime="20201112 10:14:39.980"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.989" endtime="20201112 10:14:40.005"></status>
</kw>
<msg timestamp="20201112 10:14:40.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.987" endtime="20201112 10:14:40.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.007" endtime="20201112 10:14:40.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.009" endtime="20201112 10:14:40.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.984" endtime="20201112 10:14:40.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.982" endtime="20201112 10:14:40.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.019" endtime="20201112 10:14:40.302"></status>
</kw>
<msg timestamp="20201112 10:14:40.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.018" endtime="20201112 10:14:40.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.307" endtime="20201112 10:14:40.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.315" endtime="20201112 10:14:40.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.015" endtime="20201112 10:14:40.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.013" endtime="20201112 10:14:40.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.321" level="INFO">${RESULT} = [{'time': 0.021788111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.030500000000008e-05, 'source_diff': 6.030500000000008e-05}, {'time': 0.02185275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:40.318" endtime="20201112 10:14:40.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.335" level="INFO">${ACCURACY} = {'source_diff': [6.030500000000008e-05, 5.9736000000001205e-05, 5.968099999999893e-05, 5.916700000000233e-05, 5.9708000000002065e-05, 5.915299999999929e-05, 5.9957999999998846e-05, 5.916699999999886e-...</msg>
<status status="PASS" starttime="20201112 10:14:40.322" endtime="20201112 10:14:40.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.339" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.338" endtime="20201112 10:14:40.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.342" level="INFO">VALUE: [6.030500000000008e-05, 5.9736000000001205e-05, 5.968099999999893e-05, 5.916700000000233e-05, 5.9708000000002065e-05, 5.915299999999929e-05, 5.9957999999998846e-05, 5.916699999999886e-05, 5.9041999999998734e-05, 5.913899999999972e-05, 5.918099999999843e-05, 5.915299999999929e-05, 5.9819999999998624e-05, 5.998700000000093e-05, 5.915299999999929e-05, 5.9916000000000136e-05, 5.9736000000001205e-05, 5.9679999999999456e-05, 5.98750000000009e-05, 5.9944000000002745e-05, 5.913899999999972e-05, 5.905499999999883e-05, 5.963900000000022e-05, 5.983300000000219e-05, 5.911100000000058e-05, 5.9971999999998415e-05, 6.0000000000001025e-05, 6.0014000000000595e-05, 5.920900000000104e-05, 5.981900000000262e-05, 5.911100000000058e-05, 5.9847999999997764e-05, 5.986100000000133e-05, 5.9028000000002634e-05, 5.9819999999998624e-05, 5.918099999999843e-05, 5.9584000000001414e-05, 5.983299999999872e-05, 5.911100000000058e-05, 5.962500000000065e-05, 5.9929999999999706e-05, 5.9862000000000803e-05, 5.9971999999998415e-05, 5.9179999999998956e-05, 5.908299999999797e-05, 5.9679999999999456e-05, 5.962499999999718e-05, 5.9736000000001205e-05, 6.004100000000026e-05, 5.962500000000065e-05]</msg>
<status status="PASS" starttime="20201112 10:14:40.340" endtime="20201112 10:14:40.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.336" endtime="20201112 10:14:40.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.345" endtime="20201112 10:14:40.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.349" endtime="20201112 10:14:40.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.347" endtime="20201112 10:14:40.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.344" endtime="20201112 10:14:40.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.981" endtime="20201112 10:14:40.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.980" endtime="20201112 10:14:40.369"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.378" endtime="20201112 10:14:40.395"></status>
</kw>
<msg timestamp="20201112 10:14:40.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.377" endtime="20201112 10:14:40.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.397" endtime="20201112 10:14:40.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.399" endtime="20201112 10:14:40.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.374" endtime="20201112 10:14:40.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.372" endtime="20201112 10:14:40.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.409" endtime="20201112 10:14:40.693"></status>
</kw>
<msg timestamp="20201112 10:14:40.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.408" endtime="20201112 10:14:40.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.698" endtime="20201112 10:14:40.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.706" endtime="20201112 10:14:40.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.405" endtime="20201112 10:14:40.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.403" endtime="20201112 10:14:40.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.712" level="INFO">${RESULT} = [{'time': 0.021918611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.118000000000096e-05, 'source_diff': 6.118000000000096e-05}, {'time': 0.02198425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:40.709" endtime="20201112 10:14:40.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.726" level="INFO">${ACCURACY} = {'source_diff': [6.118000000000096e-05, 6.086099999999886e-05, 6.081900000000015e-05, 6.090300000000104e-05, 6.0665999999997416e-05, 6.0778000000000915e-05, 6.062499999999818e-05, 6.081900000000015e-0...</msg>
<status status="PASS" starttime="20201112 10:14:40.713" endtime="20201112 10:14:40.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.730" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.729" endtime="20201112 10:14:40.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.733" level="INFO">VALUE: [6.118000000000096e-05, 6.086099999999886e-05, 6.081900000000015e-05, 6.090300000000104e-05, 6.0665999999997416e-05, 6.0778000000000915e-05, 6.062499999999818e-05, 6.081900000000015e-05, 6.0999999999998555e-05, 6.059699999999904e-05, 6.0834000000002664e-05, 6.06949999999995e-05, 6.065300000000079e-05, 6.0207999999999096e-05, 6.030500000000008e-05, 6.083299999999972e-05, 6.090300000000104e-05, 6.0902000000001566e-05, 6.0721999999999166e-05, 6.013899999999725e-05, 6.059699999999904e-05, 6.084699999999929e-05, 6.0680000000000456e-05, 6.061099999999861e-05, 6.068099999999993e-05, 6.1028000000001165e-05, 6.0764000000001345e-05, 6.106999999999987e-05, 6.0194999999999e-05, 6.066700000000036e-05, 6.083299999999972e-05, 6.091700000000061e-05, 6.086099999999886e-05, 6.059699999999904e-05, 6.0971999999999416e-05, 6.091700000000061e-05, 6.087499999999843e-05, 6.0014000000000595e-05, 6.087499999999843e-05, 6.08750000000019e-05, 6.0750000000001775e-05, 6.104200000000073e-05, 6.086099999999886e-05, 6.0721999999999166e-05, 6.0707999999999596e-05, 6.0971999999999416e-05, 6.077699999999797e-05, 6.0680000000000456e-05, 6.084699999999929e-05, 6.013900000000072e-05]</msg>
<status status="PASS" starttime="20201112 10:14:40.731" endtime="20201112 10:14:40.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.727" endtime="20201112 10:14:40.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.736" endtime="20201112 10:14:40.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.740" endtime="20201112 10:14:40.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.738" endtime="20201112 10:14:40.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.735" endtime="20201112 10:14:40.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.370" endtime="20201112 10:14:40.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.370" endtime="20201112 10:14:40.760"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.769" endtime="20201112 10:14:40.786"></status>
</kw>
<msg timestamp="20201112 10:14:40.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.768" endtime="20201112 10:14:40.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.787" endtime="20201112 10:14:40.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.790" endtime="20201112 10:14:40.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.765" endtime="20201112 10:14:40.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.763" endtime="20201112 10:14:40.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.800" endtime="20201112 10:14:41.086"></status>
</kw>
<msg timestamp="20201112 10:14:41.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.798" endtime="20201112 10:14:41.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.090" endtime="20201112 10:14:41.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.098" endtime="20201112 10:14:41.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.796" endtime="20201112 10:14:41.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.794" endtime="20201112 10:14:41.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.105" level="INFO">${RESULT} = [{'time': 0.022144306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236199999999983e-05, 'source_diff': 6.236199999999983e-05}, {'time': 0.022210958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.102" endtime="20201112 10:14:41.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.120" level="INFO">${ACCURACY} = {'source_diff': [6.236199999999983e-05, 6.197200000000042e-05, 6.184700000000029e-05, 6.10690000000004e-05, 6.115300000000129e-05, 6.198599999999999e-05, 6.205599999999784e-05, 6.195800000000085e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:41.106" endtime="20201112 10:14:41.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.124" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.123" endtime="20201112 10:14:41.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.127" level="INFO">VALUE: [6.236199999999983e-05, 6.197200000000042e-05, 6.184700000000029e-05, 6.10690000000004e-05, 6.115300000000129e-05, 6.198599999999999e-05, 6.205599999999784e-05, 6.195800000000085e-05, 6.116600000000139e-05, 6.116699999999739e-05, 6.180499999999811e-05, 6.111100000000258e-05, 6.184700000000029e-05, 6.182000000000062e-05, 6.184700000000029e-05, 6.168100000000093e-05, 6.190300000000204e-05, 6.106999999999987e-05, 6.190299999999857e-05, 6.184700000000029e-05, 6.180600000000105e-05, 6.177799999999845e-05, 6.112499999999868e-05, 6.10560000000003e-05, 6.172299999999964e-05, 6.112499999999868e-05, 6.111199999999858e-05, 6.163799999999928e-05, 6.199999999999956e-05, 6.209700000000054e-05, 6.112500000000215e-05, 6.184700000000029e-05, 6.119400000000053e-05, 6.20279999999987e-05, 6.112499999999868e-05, 6.113900000000172e-05, 6.169400000000103e-05, 6.113900000000172e-05, 6.17080000000006e-05, 6.204199999999827e-05, 6.172200000000017e-05, 6.168100000000093e-05, 6.112500000000215e-05, 6.163899999999875e-05, 6.176399999999888e-05, 6.115300000000129e-05, 6.179200000000148e-05, 6.190300000000204e-05, 6.184799999999976e-05, 6.170900000000007e-05]</msg>
<status status="PASS" starttime="20201112 10:14:41.125" endtime="20201112 10:14:41.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.120" endtime="20201112 10:14:41.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.130" endtime="20201112 10:14:41.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.133" endtime="20201112 10:14:41.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.132" endtime="20201112 10:14:41.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.128" endtime="20201112 10:14:41.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.761" endtime="20201112 10:14:41.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.761" endtime="20201112 10:14:41.154"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.163" endtime="20201112 10:14:41.179"></status>
</kw>
<msg timestamp="20201112 10:14:41.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.161" endtime="20201112 10:14:41.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.181" endtime="20201112 10:14:41.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.183" endtime="20201112 10:14:41.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.159" endtime="20201112 10:14:41.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.157" endtime="20201112 10:14:41.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.193" endtime="20201112 10:14:41.479"></status>
</kw>
<msg timestamp="20201112 10:14:41.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.192" endtime="20201112 10:14:41.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.483" endtime="20201112 10:14:41.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.491" endtime="20201112 10:14:41.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.189" endtime="20201112 10:14:41.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.187" endtime="20201112 10:14:41.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.498" level="INFO">${RESULT} = [{'time': 0.021677306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291699999999914e-05, 'source_diff': 6.291699999999914e-05}, {'time': 0.021744931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.494" endtime="20201112 10:14:41.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.511" level="INFO">${ACCURACY} = {'source_diff': [6.291699999999914e-05, 6.294499999999828e-05, 6.211100000000011e-05, 6.27500000000003e-05, 6.208300000000097e-05, 6.219399999999806e-05, 6.277799999999945e-05, 6.277699999999997e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:41.499" endtime="20201112 10:14:41.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.516" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.515" endtime="20201112 10:14:41.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.518" level="INFO">VALUE: [6.291699999999914e-05, 6.294499999999828e-05, 6.211100000000011e-05, 6.27500000000003e-05, 6.208300000000097e-05, 6.219399999999806e-05, 6.277799999999945e-05, 6.277699999999997e-05, 6.298599999999752e-05, 6.279099999999954e-05, 6.283300000000172e-05, 6.20690000000014e-05, 6.290299999999957e-05, 6.206899999999793e-05, 6.304199999999927e-05, 6.215299999999882e-05, 6.287500000000043e-05, 6.22499999999998e-05, 6.208300000000097e-05, 6.277799999999945e-05, 6.281999999999816e-05, 6.276399999999988e-05, 6.291699999999914e-05, 6.261100000000061e-05, 6.207000000000087e-05, 6.279199999999902e-05, 6.262500000000018e-05, 6.261200000000008e-05, 6.213899999999925e-05, 6.304099999999979e-05, 6.291599999999967e-05, 6.279099999999954e-05, 6.268099999999846e-05, 6.266599999999942e-05, 6.263899999999975e-05, 6.27080000000016e-05, 6.276400000000334e-05, 6.27500000000003e-05, 6.281899999999868e-05, 6.295800000000185e-05, 6.304199999999927e-05, 6.283299999999825e-05, 6.280600000000205e-05, 6.304200000000273e-05, 6.297199999999795e-05, 6.20829999999975e-05, 6.263899999999975e-05, 6.305599999999884e-05, 6.293100000000218e-05, 6.211100000000011e-05]</msg>
<status status="PASS" starttime="20201112 10:14:41.517" endtime="20201112 10:14:41.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.512" endtime="20201112 10:14:41.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.522" endtime="20201112 10:14:41.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.525" endtime="20201112 10:14:41.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.524" endtime="20201112 10:14:41.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.520" endtime="20201112 10:14:41.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.155" endtime="20201112 10:14:41.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.155" endtime="20201112 10:14:41.546"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.555" endtime="20201112 10:14:41.571"></status>
</kw>
<msg timestamp="20201112 10:14:41.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.553" endtime="20201112 10:14:41.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.573" endtime="20201112 10:14:41.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.575" endtime="20201112 10:14:41.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.550" endtime="20201112 10:14:41.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.548" endtime="20201112 10:14:41.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.585" endtime="20201112 10:14:41.871"></status>
</kw>
<msg timestamp="20201112 10:14:41.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.584" endtime="20201112 10:14:41.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.875" endtime="20201112 10:14:41.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.883" endtime="20201112 10:14:41.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.581" endtime="20201112 10:14:41.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.579" endtime="20201112 10:14:41.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.890" level="INFO">${RESULT} = [{'time': 0.021764181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.387500000000143e-05, 'source_diff': 6.387500000000143e-05}, {'time': 0.021832778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.886" endtime="20201112 10:14:41.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.903" level="INFO">${ACCURACY} = {'source_diff': [6.387500000000143e-05, 6.387500000000143e-05, 6.368099999999946e-05, 6.3889000000001e-05, 6.316699999999939e-05, 6.40280000000007e-05, 6.38479999999983e-05, 6.40280000000007e-05, 6.30...</msg>
<status status="PASS" starttime="20201112 10:14:41.891" endtime="20201112 10:14:41.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.908" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.907" endtime="20201112 10:14:41.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.910" level="INFO">VALUE: [6.387500000000143e-05, 6.387500000000143e-05, 6.368099999999946e-05, 6.3889000000001e-05, 6.316699999999939e-05, 6.40280000000007e-05, 6.38479999999983e-05, 6.40280000000007e-05, 6.305500000000283e-05, 6.313800000000078e-05, 6.392999999999677e-05, 6.404100000000079e-05, 6.404099999999732e-05, 6.379100000000054e-05, 6.384699999999882e-05, 6.40280000000007e-05, 6.366699999999989e-05, 6.381899999999968e-05, 6.377800000000045e-05, 6.405599999999984e-05, 6.380599999999959e-05, 6.316699999999939e-05, 6.377800000000045e-05, 6.40280000000007e-05, 6.359699999999857e-05, 6.376400000000088e-05, 6.369499999999903e-05, 6.365300000000032e-05, 6.381999999999916e-05, 6.397299999999842e-05, 6.380599999999959e-05, 6.397199999999895e-05, 6.320799999999863e-05, 6.402699999999775e-05, 6.391600000000067e-05, 6.373599999999827e-05, 6.315200000000035e-05, 6.34439999999993e-05, 6.386100000000186e-05, 6.397199999999895e-05, 6.380500000000011e-05, 6.397199999999895e-05, 6.391700000000014e-05, 6.397199999999895e-05, 6.366699999999989e-05, 6.386100000000186e-05, 6.376400000000088e-05, 6.386100000000186e-05, 6.379200000000002e-05, 6.368099999999946e-05]</msg>
<status status="PASS" starttime="20201112 10:14:41.909" endtime="20201112 10:14:41.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.904" endtime="20201112 10:14:41.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.914" endtime="20201112 10:14:41.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.917" endtime="20201112 10:14:41.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.915" endtime="20201112 10:14:41.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.912" endtime="20201112 10:14:41.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.547" endtime="20201112 10:14:41.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.546" endtime="20201112 10:14:41.938"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.946" endtime="20201112 10:14:41.964"></status>
</kw>
<msg timestamp="20201112 10:14:41.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.945" endtime="20201112 10:14:41.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.965" endtime="20201112 10:14:41.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.968" endtime="20201112 10:14:41.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.942" endtime="20201112 10:14:41.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.940" endtime="20201112 10:14:41.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.978" endtime="20201112 10:14:42.263"></status>
</kw>
<msg timestamp="20201112 10:14:42.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.976" endtime="20201112 10:14:42.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.267" endtime="20201112 10:14:42.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.275" endtime="20201112 10:14:42.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.973" endtime="20201112 10:14:42.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.972" endtime="20201112 10:14:42.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.282" level="INFO">${RESULT} = [{'time': 0.022101819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.47630000000024e-05, 'source_diff': 6.47630000000024e-05}, {'time': 0.022171444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:42.278" endtime="20201112 10:14:42.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.295" level="INFO">${ACCURACY} = {'source_diff': [6.47630000000024e-05, 6.469399999999709e-05, 6.415200000000135e-05, 6.476299999999893e-05, 6.416599999999745e-05, 6.505500000000136e-05, 6.461100000000261e-05, 6.488899999999853e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:42.283" endtime="20201112 10:14:42.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.300" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.299" endtime="20201112 10:14:42.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.302" level="INFO">VALUE: [6.47630000000024e-05, 6.469399999999709e-05, 6.415200000000135e-05, 6.476299999999893e-05, 6.416599999999745e-05, 6.505500000000136e-05, 6.461100000000261e-05, 6.488899999999853e-05, 6.423600000000224e-05, 6.472200000000317e-05, 6.487500000000243e-05, 6.461099999999914e-05, 6.474999999999884e-05, 6.474999999999884e-05, 6.50419999999978e-05, 6.468100000000046e-05, 6.408399999999898e-05, 6.474999999999884e-05, 6.468100000000046e-05, 6.411100000000211e-05, 6.47500000000023e-05, 6.479200000000102e-05, 6.416700000000039e-05, 6.469400000000056e-05, 6.45699999999999e-05, 6.47089999999996e-05, 6.494500000000028e-05, 6.493000000000124e-05, 6.459699999999957e-05, 6.501399999999866e-05, 6.505500000000136e-05, 6.495800000000038e-05, 6.47500000000023e-05, 6.461099999999914e-05, 6.416599999999745e-05, 6.47500000000023e-05, 6.504200000000127e-05, 6.483300000000025e-05, 6.487499999999896e-05, 6.466700000000089e-05, 6.459699999999957e-05, 6.505500000000136e-05, 6.409699999999907e-05, 6.419499999999953e-05, 6.4889000000002e-05, 6.479200000000102e-05, 6.50280000000017e-05, 6.495899999999985e-05, 6.487499999999896e-05, 6.407000000000287e-05]</msg>
<status status="PASS" starttime="20201112 10:14:42.301" endtime="20201112 10:14:42.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.296" endtime="20201112 10:14:42.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.306" endtime="20201112 10:14:42.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.309" endtime="20201112 10:14:42.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.308" endtime="20201112 10:14:42.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.304" endtime="20201112 10:14:42.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.939" endtime="20201112 10:14:42.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.938" endtime="20201112 10:14:42.330"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.338" endtime="20201112 10:14:42.356"></status>
</kw>
<msg timestamp="20201112 10:14:42.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.337" endtime="20201112 10:14:42.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.358" endtime="20201112 10:14:42.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.360" endtime="20201112 10:14:42.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.334" endtime="20201112 10:14:42.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.332" endtime="20201112 10:14:42.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.370" endtime="20201112 10:14:42.654"></status>
</kw>
<msg timestamp="20201112 10:14:42.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.369" endtime="20201112 10:14:42.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.659" endtime="20201112 10:14:42.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.667" endtime="20201112 10:14:42.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.366" endtime="20201112 10:14:42.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.364" endtime="20201112 10:14:42.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.673" level="INFO">${RESULT} = [{'time': 0.021784778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.648600000000102e-05, 'source_diff': 6.648600000000102e-05}, {'time': 0.021855486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.670" endtime="20201112 10:14:42.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.688" level="INFO">${ACCURACY} = {'source_diff': [6.648600000000102e-05, 6.569400000000156e-05, 6.579199999999855e-05, 6.574999999999984e-05, 6.512499999999921e-05, 6.59029999999991e-05, 6.566599999999895e-05, 6.590199999999963e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:42.674" endtime="20201112 10:14:42.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.692" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.691" endtime="20201112 10:14:42.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.694" level="INFO">VALUE: [6.648600000000102e-05, 6.569400000000156e-05, 6.579199999999855e-05, 6.574999999999984e-05, 6.512499999999921e-05, 6.59029999999991e-05, 6.566599999999895e-05, 6.590199999999963e-05, 6.593000000000224e-05, 6.506900000000093e-05, 6.505500000000136e-05, 6.605499999999889e-05, 6.569400000000156e-05, 6.565300000000232e-05, 6.562499999999971e-05, 6.601399999999966e-05, 6.600000000000009e-05, 6.561100000000014e-05, 6.566700000000189e-05, 6.515299999999835e-05, 6.573600000000027e-05, 6.565300000000232e-05, 6.588899999999953e-05, 6.601400000000313e-05, 6.511099999999964e-05, 6.587499999999996e-05, 6.50830000000005e-05, 6.590300000000257e-05, 6.565299999999885e-05, 6.513800000000278e-05, 6.563899999999928e-05, 6.519400000000106e-05, 6.573600000000027e-05, 6.580499999999864e-05, 6.597200000000095e-05, 6.587499999999996e-05, 6.565300000000232e-05, 6.598600000000052e-05, 6.583300000000125e-05, 6.600000000000009e-05, 6.577799999999898e-05, 6.570800000000113e-05, 6.563899999999928e-05, 6.591699999999867e-05, 6.509700000000007e-05, 6.569500000000103e-05, 6.593100000000171e-05, 6.587499999999996e-05, 6.505600000000084e-05, 6.582000000000116e-05]</msg>
<status status="PASS" starttime="20201112 10:14:42.693" endtime="20201112 10:14:42.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.688" endtime="20201112 10:14:42.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.698" endtime="20201112 10:14:42.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.701" endtime="20201112 10:14:42.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.700" endtime="20201112 10:14:42.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.696" endtime="20201112 10:14:42.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.331" endtime="20201112 10:14:42.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.330" endtime="20201112 10:14:42.722"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.731" endtime="20201112 10:14:42.748"></status>
</kw>
<msg timestamp="20201112 10:14:42.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.729" endtime="20201112 10:14:42.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.749" endtime="20201112 10:14:42.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.752" endtime="20201112 10:14:42.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.727" endtime="20201112 10:14:42.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.725" endtime="20201112 10:14:42.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.762" endtime="20201112 10:14:43.047"></status>
</kw>
<msg timestamp="20201112 10:14:43.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.760" endtime="20201112 10:14:43.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.051" endtime="20201112 10:14:43.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.059" endtime="20201112 10:14:43.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.758" endtime="20201112 10:14:43.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.756" endtime="20201112 10:14:43.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.066" level="INFO">${RESULT} = [{'time': 0.022006153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.663900000000028e-05, 'source_diff': 6.663900000000028e-05}, {'time': 0.022077792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.063" endtime="20201112 10:14:43.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.079" level="INFO">${ACCURACY} = {'source_diff': [6.663900000000028e-05, 6.701399999999719e-05, 6.68480000000013e-05, 6.693099999999924e-05, 6.698700000000099e-05, 6.676300000000093e-05, 6.681999999999869e-05, 6.683299999999878e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:43.067" endtime="20201112 10:14:43.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.084" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.083" endtime="20201112 10:14:43.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.087" level="INFO">VALUE: [6.663900000000028e-05, 6.701399999999719e-05, 6.68480000000013e-05, 6.693099999999924e-05, 6.698700000000099e-05, 6.676300000000093e-05, 6.681999999999869e-05, 6.683299999999878e-05, 6.680499999999964e-05, 6.605499999999889e-05, 6.611100000000064e-05, 6.686100000000139e-05, 6.605499999999889e-05, 6.698599999999805e-05, 6.665299999999985e-05, 6.617999999999902e-05, 6.613899999999978e-05, 6.695800000000238e-05, 6.695799999999891e-05, 6.666699999999942e-05, 6.60700000000014e-05, 6.68480000000013e-05, 6.663900000000028e-05, 6.677799999999998e-05, 6.702800000000023e-05, 6.611100000000064e-05, 6.616699999999892e-05, 6.706900000000293e-05, 6.706899999999946e-05, 6.694500000000228e-05, 6.666599999999995e-05, 6.680499999999964e-05, 6.606900000000193e-05, 6.65969999999981e-05, 6.612500000000021e-05, 6.683300000000225e-05, 6.663900000000028e-05, 6.70419999999998e-05, 6.692999999999977e-05, 6.681899999999921e-05, 6.661099999999767e-05, 6.60969999999976e-05, 6.683299999999878e-05, 6.702799999999676e-05, 6.618100000000196e-05, 6.616699999999892e-05, 6.697200000000195e-05, 6.619500000000153e-05, 6.688900000000053e-05, 6.616599999999945e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.085" endtime="20201112 10:14:43.087"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.080" endtime="20201112 10:14:43.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.090" endtime="20201112 10:14:43.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.093" endtime="20201112 10:14:43.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.092" endtime="20201112 10:14:43.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.088" endtime="20201112 10:14:43.114"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.723" endtime="20201112 10:14:43.114"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.722" endtime="20201112 10:14:43.114"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.123" endtime="20201112 10:14:43.140"></status>
</kw>
<msg timestamp="20201112 10:14:43.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.121" endtime="20201112 10:14:43.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.141" endtime="20201112 10:14:43.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.144" endtime="20201112 10:14:43.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.119" endtime="20201112 10:14:43.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.117" endtime="20201112 10:14:43.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.154" endtime="20201112 10:14:43.439"></status>
</kw>
<msg timestamp="20201112 10:14:43.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.152" endtime="20201112 10:14:43.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.443" endtime="20201112 10:14:43.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.451" endtime="20201112 10:14:43.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.150" endtime="20201112 10:14:43.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.148" endtime="20201112 10:14:43.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.458" level="INFO">${RESULT} = [{'time': 0.021697292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.788900000000153e-05, 'source_diff': 6.788900000000153e-05}, {'time': 0.021769903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.454" endtime="20201112 10:14:43.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.471" level="INFO">${ACCURACY} = {'source_diff': [6.788900000000153e-05, 6.77359999999988e-05, 6.769499999999956e-05, 6.706999999999894e-05, 6.783399999999926e-05, 6.77229999999987e-05, 6.766700000000042e-05, 6.713900000000078e-05, 6...</msg>
<status status="PASS" starttime="20201112 10:14:43.459" endtime="20201112 10:14:43.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.476" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.475" endtime="20201112 10:14:43.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.478" level="INFO">VALUE: [6.788900000000153e-05, 6.77359999999988e-05, 6.769499999999956e-05, 6.706999999999894e-05, 6.783399999999926e-05, 6.77229999999987e-05, 6.766700000000042e-05, 6.713900000000078e-05, 6.712500000000121e-05, 6.795799999999991e-05, 6.766599999999748e-05, 6.770799999999966e-05, 6.797199999999948e-05, 6.799999999999862e-05, 6.706899999999946e-05, 6.713899999999731e-05, 6.736100000000189e-05, 6.77640000000014e-05, 6.766700000000042e-05, 6.708299999999903e-05, 6.802799999999776e-05, 6.774999999999837e-05, 6.708299999999903e-05, 6.768099999999999e-05, 6.791700000000067e-05, 6.786099999999892e-05, 6.791700000000067e-05, 6.779200000000055e-05, 6.801400000000166e-05, 6.780600000000012e-05, 6.716699999999992e-05, 6.761099999999867e-05, 6.715199999999741e-05, 6.769400000000009e-05, 6.768000000000052e-05, 6.77909999999976e-05, 6.713900000000078e-05, 6.705499999999989e-05, 6.798600000000252e-05, 6.791700000000067e-05, 6.786099999999892e-05, 6.765300000000085e-05, 6.787500000000196e-05, 6.788899999999806e-05, 6.790299999999763e-05, 6.775000000000184e-05, 6.70969999999986e-05, 6.718099999999949e-05, 6.768099999999999e-05, 6.706999999999894e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.477" endtime="20201112 10:14:43.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.472" endtime="20201112 10:14:43.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.482" endtime="20201112 10:14:43.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.485" endtime="20201112 10:14:43.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.484" endtime="20201112 10:14:43.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.480" endtime="20201112 10:14:43.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.115" endtime="20201112 10:14:43.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.115" endtime="20201112 10:14:43.506"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.515" endtime="20201112 10:14:43.532"></status>
</kw>
<msg timestamp="20201112 10:14:43.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.513" endtime="20201112 10:14:43.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.533" endtime="20201112 10:14:43.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.536" endtime="20201112 10:14:43.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.510" endtime="20201112 10:14:43.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.508" endtime="20201112 10:14:43.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.546" endtime="20201112 10:14:43.831"></status>
</kw>
<msg timestamp="20201112 10:14:43.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.544" endtime="20201112 10:14:43.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.835" endtime="20201112 10:14:43.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.843" endtime="20201112 10:14:43.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.542" endtime="20201112 10:14:43.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.540" endtime="20201112 10:14:43.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.850" level="INFO">${RESULT} = [{'time': 0.021904931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.870900000000013e-05, 'source_diff': 6.870900000000013e-05}, {'time': 0.021978583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.847" endtime="20201112 10:14:43.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.863" level="INFO">${ACCURACY} = {'source_diff': [6.870900000000013e-05, 6.899999999999962e-05, 6.890299999999863e-05, 6.861099999999967e-05, 6.813899999999831e-05, 6.895799999999744e-05, 6.806900000000046e-05, 6.867999999999805e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:43.851" endtime="20201112 10:14:43.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.868" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.867" endtime="20201112 10:14:43.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.870" level="INFO">VALUE: [6.870900000000013e-05, 6.899999999999962e-05, 6.890299999999863e-05, 6.861099999999967e-05, 6.813899999999831e-05, 6.895799999999744e-05, 6.806900000000046e-05, 6.867999999999805e-05, 6.808300000000003e-05, 6.90420000000018e-05, 6.865300000000185e-05, 6.811099999999917e-05, 6.90420000000018e-05, 6.893099999999777e-05, 6.901399999999919e-05, 6.815299999999788e-05, 6.879199999999808e-05, 6.811100000000264e-05, 6.901399999999919e-05, 6.813899999999831e-05, 6.888899999999906e-05, 6.883400000000026e-05, 6.870800000000066e-05, 6.877799999999851e-05, 6.898600000000005e-05, 6.898699999999952e-05, 6.819399999999712e-05, 6.883300000000078e-05, 6.856900000000096e-05, 6.87359999999998e-05, 6.862499999999924e-05, 6.87909999999986e-05, 6.870800000000066e-05, 6.808300000000003e-05, 6.873600000000327e-05, 6.894500000000081e-05, 6.87359999999998e-05, 6.875000000000284e-05, 6.879200000000155e-05, 6.869500000000056e-05, 6.872200000000023e-05, 6.813900000000178e-05, 6.851400000000216e-05, 6.886099999999992e-05, 6.887499999999949e-05, 6.818100000000049e-05, 6.816700000000092e-05, 6.863899999999881e-05, 6.877799999999851e-05, 6.818100000000049e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.869" endtime="20201112 10:14:43.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.864" endtime="20201112 10:14:43.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.874" endtime="20201112 10:14:43.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.877" endtime="20201112 10:14:43.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.876" endtime="20201112 10:14:43.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.872" endtime="20201112 10:14:43.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.507" endtime="20201112 10:14:43.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.506" endtime="20201112 10:14:43.898"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.907" endtime="20201112 10:14:43.924"></status>
</kw>
<msg timestamp="20201112 10:14:43.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.905" endtime="20201112 10:14:43.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.926" endtime="20201112 10:14:43.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.928" endtime="20201112 10:14:43.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.903" endtime="20201112 10:14:43.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.901" endtime="20201112 10:14:43.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.938" endtime="20201112 10:14:44.224"></status>
</kw>
<msg timestamp="20201112 10:14:44.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.937" endtime="20201112 10:14:44.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.228" endtime="20201112 10:14:44.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.236" endtime="20201112 10:14:44.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.934" endtime="20201112 10:14:44.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.932" endtime="20201112 10:14:44.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.242" level="INFO">${RESULT} = [{'time': 0.022249431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.97230000000007e-05, 'source_diff': 6.97230000000007e-05}, {'time': 0.022324056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:44.239" endtime="20201112 10:14:44.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.257" level="INFO">${ACCURACY} = {'source_diff': [6.97230000000007e-05, 6.972299999999723e-05, 6.970799999999819e-05, 6.911100000000017e-05, 6.990200000000016e-05, 6.987500000000049e-05, 6.91109999999967e-05, 7.000000000000062e-05, 6...</msg>
<status status="PASS" starttime="20201112 10:14:44.243" endtime="20201112 10:14:44.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.261" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.260" endtime="20201112 10:14:44.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.264" level="INFO">VALUE: [6.97230000000007e-05, 6.972299999999723e-05, 6.970799999999819e-05, 6.911100000000017e-05, 6.990200000000016e-05, 6.987500000000049e-05, 6.91109999999967e-05, 7.000000000000062e-05, 6.917999999999855e-05, 7.002799999999976e-05, 6.984700000000135e-05, 6.913899999999931e-05, 6.981899999999874e-05, 6.994499999999834e-05, 6.986100000000092e-05, 6.995900000000138e-05, 6.959699999999763e-05, 6.965299999999938e-05, 6.970900000000113e-05, 6.913900000000278e-05, 6.99169999999992e-05, 7.000000000000062e-05, 6.98620000000004e-05, 6.983300000000178e-05, 6.961200000000015e-05, 6.987500000000049e-05, 6.995799999999844e-05, 7.000000000000062e-05, 6.917999999999855e-05, 6.965199999999991e-05, 6.912499999999974e-05, 6.906900000000146e-05, 6.904099999999885e-05, 6.995800000000191e-05, 6.997200000000148e-05, 6.915300000000235e-05, 6.998599999999758e-05, 6.962500000000024e-05, 6.912499999999974e-05, 6.994500000000181e-05, 6.97360000000008e-05, 7.000000000000062e-05, 6.988900000000006e-05, 6.965300000000285e-05, 6.99169999999992e-05, 6.972199999999776e-05, 6.97360000000008e-05, 6.973700000000027e-05, 6.967999999999905e-05, 6.90970000000006e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.263" endtime="20201112 10:14:44.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.258" endtime="20201112 10:14:44.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.267" endtime="20201112 10:14:44.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.271" endtime="20201112 10:14:44.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.269" endtime="20201112 10:14:44.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.266" endtime="20201112 10:14:44.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.899" endtime="20201112 10:14:44.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.898" endtime="20201112 10:14:44.292"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.300" endtime="20201112 10:14:44.317"></status>
</kw>
<msg timestamp="20201112 10:14:44.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.299" endtime="20201112 10:14:44.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.319" endtime="20201112 10:14:44.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.321" endtime="20201112 10:14:44.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.296" endtime="20201112 10:14:44.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.294" endtime="20201112 10:14:44.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.331" endtime="20201112 10:14:44.617"></status>
</kw>
<msg timestamp="20201112 10:14:44.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.330" endtime="20201112 10:14:44.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.621" endtime="20201112 10:14:44.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.629" endtime="20201112 10:14:44.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.327" endtime="20201112 10:14:44.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.325" endtime="20201112 10:14:44.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.635" level="INFO">${RESULT} = [{'time': 0.021784667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.109800000000208e-05, 'source_diff': 7.109800000000208e-05}, {'time': 0.021860347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:44.632" endtime="20201112 10:14:44.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.649" level="INFO">${ACCURACY} = {'source_diff': [7.109800000000208e-05, 7.051399999999722e-05, 7.061200000000115e-05, 7.059800000000158e-05, 7.011100000000117e-05, 7.101300000000171e-05, 7.090300000000063e-05, 7.068000000000005e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:44.636" endtime="20201112 10:14:44.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.653" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.652" endtime="20201112 10:14:44.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.656" level="INFO">VALUE: [7.109800000000208e-05, 7.051399999999722e-05, 7.061200000000115e-05, 7.059800000000158e-05, 7.011100000000117e-05, 7.101300000000171e-05, 7.090300000000063e-05, 7.068000000000005e-05, 7.080500000000017e-05, 7.069399999999962e-05, 7.005499999999942e-05, 7.097200000000248e-05, 7.066699999999995e-05, 7.093099999999977e-05, 7.008300000000203e-05, 7.081999999999922e-05, 7.069399999999962e-05, 7.061100000000167e-05, 7.097199999999901e-05, 7.077800000000051e-05, 7.098599999999858e-05, 7.068099999999952e-05, 7.015299999999988e-05, 7.075000000000137e-05, 7.070899999999866e-05, 7.005600000000237e-05, 7.099999999999815e-05, 7.088799999999812e-05, 7.006899999999899e-05, 7.073599999999833e-05, 7.102700000000128e-05, 7.094399999999987e-05, 7.065300000000038e-05, 7.073700000000127e-05, 7.080599999999965e-05, 7.006899999999899e-05, 7.065300000000038e-05, 7.015299999999988e-05, 7.090300000000063e-05, 7.090299999999716e-05, 7.09170000000002e-05, 7.06109999999982e-05, 7.083399999999879e-05, 7.077800000000051e-05, 7.086100000000192e-05, 7.094499999999934e-05, 7.002799999999976e-05, 7.101399999999772e-05, 7.101400000000119e-05, 7.072199999999876e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.654" endtime="20201112 10:14:44.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.650" endtime="20201112 10:14:44.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.663" endtime="20201112 10:14:44.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.666" endtime="20201112 10:14:44.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.665" endtime="20201112 10:14:44.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.661" endtime="20201112 10:14:44.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.292" endtime="20201112 10:14:44.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.292" endtime="20201112 10:14:44.687"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.696" endtime="20201112 10:14:44.713"></status>
</kw>
<msg timestamp="20201112 10:14:44.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.694" endtime="20201112 10:14:44.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.715" endtime="20201112 10:14:44.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.717" endtime="20201112 10:14:44.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.691" endtime="20201112 10:14:44.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.689" endtime="20201112 10:14:44.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.727" endtime="20201112 10:14:45.014"></status>
</kw>
<msg timestamp="20201112 10:14:45.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.725" endtime="20201112 10:14:45.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.018" endtime="20201112 10:14:45.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.026" endtime="20201112 10:14:45.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.723" endtime="20201112 10:14:45.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.721" endtime="20201112 10:14:45.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.032" level="INFO">${RESULT} = [{'time': 0.021740597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.236099999999995e-05, 'source_diff': 7.236099999999995e-05}, {'time': 0.02181725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:45.029" endtime="20201112 10:14:45.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.046" level="INFO">${ACCURACY} = {'source_diff': [7.236099999999995e-05, 7.17499999999989e-05, 7.199999999999915e-05, 7.181900000000074e-05, 7.177799999999804e-05, 7.111100000000217e-05, 7.169500000000009e-05, 7.202799999999829e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:45.033" endtime="20201112 10:14:45.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.050" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.049" endtime="20201112 10:14:45.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.053" level="INFO">VALUE: [7.236099999999995e-05, 7.17499999999989e-05, 7.199999999999915e-05, 7.181900000000074e-05, 7.177799999999804e-05, 7.111100000000217e-05, 7.169500000000009e-05, 7.202799999999829e-05, 7.177799999999804e-05, 7.19300000000013e-05, 7.169500000000009e-05, 7.187499999999902e-05, 7.119499999999959e-05, 7.177799999999804e-05, 7.180599999999718e-05, 7.184700000000335e-05, 7.112500000000174e-05, 7.170800000000019e-05, 7.109699999999913e-05, 7.187500000000249e-05, 7.200000000000262e-05, 7.113900000000131e-05, 7.181900000000074e-05, 7.112500000000174e-05, 7.165300000000138e-05, 7.197200000000001e-05, 7.166700000000095e-05, 7.191699999999773e-05, 7.173599999999933e-05, 7.165299999999791e-05, 7.175000000000237e-05, 7.183399999999979e-05, 7.122200000000273e-05, 7.182000000000022e-05, 7.177700000000203e-05, 7.205500000000142e-05, 7.162500000000224e-05, 7.10979999999986e-05, 7.190199999999869e-05, 7.17499999999989e-05, 7.111100000000217e-05, 7.162499999999877e-05, 7.190199999999869e-05, 7.113899999999784e-05, 7.184699999999988e-05, 7.11109999999987e-05, 7.168000000000105e-05, 7.197200000000001e-05, 7.177800000000151e-05, 7.198599999999958e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.051" endtime="20201112 10:14:45.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.047" endtime="20201112 10:14:45.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.056" endtime="20201112 10:14:45.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.060" endtime="20201112 10:14:45.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.058" endtime="20201112 10:14:45.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.055" endtime="20201112 10:14:45.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.688" endtime="20201112 10:14:45.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.687" endtime="20201112 10:14:45.080"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.089" endtime="20201112 10:14:45.106"></status>
</kw>
<msg timestamp="20201112 10:14:45.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.088" endtime="20201112 10:14:45.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.108" endtime="20201112 10:14:45.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.110" endtime="20201112 10:14:45.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.085" endtime="20201112 10:14:45.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.083" endtime="20201112 10:14:45.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.120" endtime="20201112 10:14:45.405"></status>
</kw>
<msg timestamp="20201112 10:14:45.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.119" endtime="20201112 10:14:45.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.409" endtime="20201112 10:14:45.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.418" endtime="20201112 10:14:45.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.116" endtime="20201112 10:14:45.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.114" endtime="20201112 10:14:45.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.424" level="INFO">${RESULT} = [{'time': 0.021717931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.344499999999837e-05, 'source_diff': 7.344499999999837e-05}, {'time': 0.021795556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:45.421" endtime="20201112 10:14:45.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.438" level="INFO">${ACCURACY} = {'source_diff': [7.344499999999837e-05, 7.300000000000015e-05, 7.282000000000122e-05, 7.21109999999997e-05, 7.279099999999913e-05, 7.302699999999981e-05, 7.302799999999929e-05, 7.219399999999765e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:45.425" endtime="20201112 10:14:45.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.442" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.441" endtime="20201112 10:14:45.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.444" level="INFO">VALUE: [7.344499999999837e-05, 7.300000000000015e-05, 7.282000000000122e-05, 7.21109999999997e-05, 7.279099999999913e-05, 7.302699999999981e-05, 7.302799999999929e-05, 7.219399999999765e-05, 7.248600000000008e-05, 7.265299999999891e-05, 7.281900000000174e-05, 7.287500000000002e-05, 7.262499999999977e-05, 7.302800000000276e-05, 7.291699999999873e-05, 7.291699999999873e-05, 7.305599999999843e-05, 7.298600000000058e-05, 7.277799999999904e-05, 7.27499999999999e-05, 7.27499999999999e-05, 7.262499999999977e-05, 7.282000000000122e-05, 7.288800000000012e-05, 7.207000000000047e-05, 7.281900000000174e-05, 7.304099999999938e-05, 7.272200000000076e-05, 7.301399999999972e-05, 7.283299999999784e-05, 7.28049999999987e-05, 7.290299999999916e-05, 7.290299999999916e-05, 7.290300000000263e-05, 7.284700000000088e-05, 7.215300000000188e-05, 7.290199999999969e-05, 7.280599999999818e-05, 7.286100000000045e-05, 7.280599999999818e-05, 7.265299999999891e-05, 7.277799999999904e-05, 7.27499999999999e-05, 7.284800000000036e-05, 7.213900000000231e-05, 7.208400000000004e-05, 7.279200000000208e-05, 7.297200000000101e-05, 7.291599999999926e-05, 7.270800000000119e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.443" endtime="20201112 10:14:45.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.438" endtime="20201112 10:14:45.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.448" endtime="20201112 10:14:45.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.451" endtime="20201112 10:14:45.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.450" endtime="20201112 10:14:45.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.446" endtime="20201112 10:14:45.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.081" endtime="20201112 10:14:45.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.081" endtime="20201112 10:14:45.472"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.481" endtime="20201112 10:14:45.498"></status>
</kw>
<msg timestamp="20201112 10:14:45.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.479" endtime="20201112 10:14:45.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.499" endtime="20201112 10:14:45.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.501" endtime="20201112 10:14:45.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.477" endtime="20201112 10:14:45.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.475" endtime="20201112 10:14:45.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.511" endtime="20201112 10:14:45.797"></status>
</kw>
<msg timestamp="20201112 10:14:45.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.510" endtime="20201112 10:14:45.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.801" endtime="20201112 10:14:45.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.809" endtime="20201112 10:14:45.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.507" endtime="20201112 10:14:45.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.506" endtime="20201112 10:14:45.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.816" level="INFO">${RESULT} = [{'time': 0.021735681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.436200000000143e-05, 'source_diff': 7.436200000000143e-05}, {'time': 0.021814278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:45.812" endtime="20201112 10:14:45.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.830" level="INFO">${ACCURACY} = {'source_diff': [7.436200000000143e-05, 7.358399999999807e-05, 7.402800000000029e-05, 7.304200000000233e-05, 7.318100000000202e-05, 7.380599999999918e-05, 7.401400000000072e-05, 7.401400000000072e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:45.817" endtime="20201112 10:14:45.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.835" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.834" endtime="20201112 10:14:45.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.837" level="INFO">VALUE: [7.436200000000143e-05, 7.358399999999807e-05, 7.402800000000029e-05, 7.304200000000233e-05, 7.318100000000202e-05, 7.380599999999918e-05, 7.401400000000072e-05, 7.401400000000072e-05, 7.365200000000044e-05, 7.391600000000026e-05, 7.377700000000056e-05, 7.3069000000002e-05, 7.400000000000115e-05, 7.395800000000244e-05, 7.373599999999786e-05, 7.31110000000007e-05, 7.366699999999948e-05, 7.394500000000234e-05, 7.376400000000047e-05, 7.399999999999768e-05, 7.368099999999905e-05, 7.313899999999984e-05, 7.391699999999973e-05, 7.404199999999986e-05, 7.365299999999991e-05, 7.372299999999776e-05, 7.315199999999994e-05, 7.370799999999872e-05, 7.367999999999958e-05, 7.383300000000231e-05, 7.312500000000027e-05, 7.373600000000133e-05, 7.3069000000002e-05, 7.381899999999927e-05, 7.39439999999994e-05, 7.39439999999994e-05, 7.309699999999766e-05, 7.392999999999983e-05, 7.362500000000077e-05, 7.379199999999961e-05, 7.383400000000179e-05, 7.381999999999875e-05, 7.309700000000113e-05, 7.31110000000007e-05, 7.372199999999829e-05, 7.315299999999941e-05, 7.381999999999875e-05, 7.384799999999789e-05, 7.380599999999918e-05, 7.362500000000077e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.836" endtime="20201112 10:14:45.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.831" endtime="20201112 10:14:45.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.841" endtime="20201112 10:14:45.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.844" endtime="20201112 10:14:45.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.842" endtime="20201112 10:14:45.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.839" endtime="20201112 10:14:45.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.473" endtime="20201112 10:14:45.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.473" endtime="20201112 10:14:45.865"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.873" endtime="20201112 10:14:45.891"></status>
</kw>
<msg timestamp="20201112 10:14:45.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.872" endtime="20201112 10:14:45.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.892" endtime="20201112 10:14:45.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.895" endtime="20201112 10:14:45.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.869" endtime="20201112 10:14:45.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.867" endtime="20201112 10:14:45.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.905" endtime="20201112 10:14:46.189"></status>
</kw>
<msg timestamp="20201112 10:14:46.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.903" endtime="20201112 10:14:46.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.193" endtime="20201112 10:14:46.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.202" endtime="20201112 10:14:46.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.901" endtime="20201112 10:14:46.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.899" endtime="20201112 10:14:46.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.208" level="INFO">${RESULT} = [{'time': 0.021834861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.501400000000172e-05, 'source_diff': 7.501400000000172e-05}, {'time': 0.021914514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.205" endtime="20201112 10:14:46.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.222" level="INFO">${ACCURACY} = {'source_diff': [7.501400000000172e-05, 7.480600000000018e-05, 7.494499999999987e-05, 7.415300000000041e-05, 7.470899999999919e-05, 7.501399999999825e-05, 7.484799999999889e-05, 7.487500000000202e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:46.209" endtime="20201112 10:14:46.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.226" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.225" endtime="20201112 10:14:46.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.229" level="INFO">VALUE: [7.501400000000172e-05, 7.480600000000018e-05, 7.494499999999987e-05, 7.415300000000041e-05, 7.470899999999919e-05, 7.501399999999825e-05, 7.484799999999889e-05, 7.487500000000202e-05, 7.504199999999739e-05, 7.488899999999812e-05, 7.49310000000003e-05, 7.416699999999998e-05, 7.466700000000048e-05, 7.49440000000004e-05, 7.487499999999855e-05, 7.415300000000041e-05, 7.495799999999997e-05, 7.48050000000007e-05, 7.502799999999782e-05, 7.504200000000086e-05, 7.472199999999929e-05, 7.468000000000058e-05, 7.406899999999952e-05, 7.483299999999984e-05, 7.413900000000084e-05, 7.416699999999998e-05, 7.488900000000159e-05, 7.405599999999943e-05, 7.407000000000247e-05, 7.419499999999912e-05, 7.504200000000086e-05, 7.500000000000215e-05, 7.487499999999855e-05, 7.4763999999998e-05, 7.493000000000083e-05, 7.406899999999952e-05, 7.490199999999822e-05, 7.484699999999941e-05, 7.498600000000258e-05, 7.463899999999787e-05, 7.487499999999855e-05, 7.463900000000134e-05, 7.49440000000004e-05, 7.468000000000058e-05, 7.480600000000018e-05, 7.419499999999912e-05, 7.480599999999671e-05, 7.480600000000018e-05, 7.494499999999987e-05, 7.491699999999726e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.227" endtime="20201112 10:14:46.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.222" endtime="20201112 10:14:46.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.232" endtime="20201112 10:14:46.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.236" endtime="20201112 10:14:46.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.234" endtime="20201112 10:14:46.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.230" endtime="20201112 10:14:46.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.866" endtime="20201112 10:14:46.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.865" endtime="20201112 10:14:46.256"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.265" endtime="20201112 10:14:46.283"></status>
</kw>
<msg timestamp="20201112 10:14:46.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.263" endtime="20201112 10:14:46.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.284" endtime="20201112 10:14:46.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.287" endtime="20201112 10:14:46.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.261" endtime="20201112 10:14:46.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.259" endtime="20201112 10:14:46.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.297" endtime="20201112 10:14:46.582"></status>
</kw>
<msg timestamp="20201112 10:14:46.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.295" endtime="20201112 10:14:46.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.586" endtime="20201112 10:14:46.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.594" endtime="20201112 10:14:46.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.293" endtime="20201112 10:14:46.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.291" endtime="20201112 10:14:46.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.601" level="INFO">${RESULT} = [{'time': 0.022074083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.599999999999968e-05, 'source_diff': 7.599999999999968e-05}, {'time': 0.022154722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.597" endtime="20201112 10:14:46.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.614" level="INFO">${ACCURACY} = {'source_diff': [7.599999999999968e-05, 7.58050000000017e-05, 7.562500000000277e-05, 7.513900000000184e-05, 7.572200000000029e-05, 7.597200000000054e-05, 7.568100000000105e-05, 7.59310000000013e-05, 7...</msg>
<status status="PASS" starttime="20201112 10:14:46.602" endtime="20201112 10:14:46.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.619" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.618" endtime="20201112 10:14:46.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.621" level="INFO">VALUE: [7.599999999999968e-05, 7.58050000000017e-05, 7.562500000000277e-05, 7.513900000000184e-05, 7.572200000000029e-05, 7.597200000000054e-05, 7.568100000000105e-05, 7.59310000000013e-05, 7.555600000000093e-05, 7.591700000000173e-05, 7.56249999999993e-05, 7.595900000000044e-05, 7.520899999999969e-05, 7.582000000000075e-05, 7.565199999999897e-05, 7.505600000000043e-05, 7.518000000000108e-05, 7.509699999999966e-05, 7.583300000000084e-05, 7.518000000000108e-05, 7.595800000000097e-05, 7.513899999999837e-05, 7.56249999999993e-05, 7.570800000000072e-05, 7.561099999999973e-05, 7.588899999999912e-05, 7.59579999999975e-05, 7.502799999999782e-05, 7.597199999999707e-05, 7.602799999999882e-05, 7.507e-05, 7.591700000000173e-05, 7.591700000000173e-05, 7.601399999999925e-05, 7.507e-05, 7.563899999999887e-05, 7.584700000000041e-05, 7.572299999999976e-05, 7.568000000000158e-05, 7.50830000000001e-05, 7.57769999999991e-05, 7.570800000000072e-05, 7.561099999999973e-05, 7.595800000000097e-05, 7.56249999999993e-05, 7.595800000000097e-05, 7.561099999999973e-05, 7.577799999999857e-05, 7.574999999999943e-05, 7.587499999999955e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.620" endtime="20201112 10:14:46.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.615" endtime="20201112 10:14:46.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.625" endtime="20201112 10:14:46.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.628" endtime="20201112 10:14:46.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.626" endtime="20201112 10:14:46.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.623" endtime="20201112 10:14:46.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.257" endtime="20201112 10:14:46.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.257" endtime="20201112 10:14:46.649"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.657" endtime="20201112 10:14:46.675"></status>
</kw>
<msg timestamp="20201112 10:14:46.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.656" endtime="20201112 10:14:46.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.677" endtime="20201112 10:14:46.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.679" endtime="20201112 10:14:46.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.653" endtime="20201112 10:14:46.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.651" endtime="20201112 10:14:46.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.689" endtime="20201112 10:14:46.975"></status>
</kw>
<msg timestamp="20201112 10:14:46.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.688" endtime="20201112 10:14:46.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.979" endtime="20201112 10:14:46.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.987" endtime="20201112 10:14:46.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.685" endtime="20201112 10:14:46.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.683" endtime="20201112 10:14:46.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.993" level="INFO">${RESULT} = [{'time': 0.021863431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.730599999999921e-05, 'source_diff': 7.730599999999921e-05}, {'time': 0.021945069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.990" endtime="20201112 10:14:46.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.007" level="INFO">${ACCURACY} = {'source_diff': [7.730599999999921e-05, 7.654099999999942e-05, 7.618000000000208e-05, 7.69579999999985e-05, 7.673600000000086e-05, 7.6764e-05, 7.701400000000025e-05, 7.66250000000003e-05, 7.6124999999...</msg>
<status status="PASS" starttime="20201112 10:14:46.994" endtime="20201112 10:14:47.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.011" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.010" endtime="20201112 10:14:47.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.014" level="INFO">VALUE: [7.730599999999921e-05, 7.654099999999942e-05, 7.618000000000208e-05, 7.69579999999985e-05, 7.673600000000086e-05, 7.6764e-05, 7.701400000000025e-05, 7.66250000000003e-05, 7.61249999999998e-05, 7.667999999999911e-05, 7.6764e-05, 7.677799999999957e-05, 7.686100000000098e-05, 7.663899999999987e-05, 7.6764e-05, 7.681999999999828e-05, 7.69310000000023e-05, 7.6764e-05, 7.672200000000129e-05, 7.683300000000184e-05, 7.670900000000119e-05, 7.601300000000324e-05, 7.670899999999772e-05, 7.697200000000154e-05, 7.668000000000258e-05, 7.602699999999935e-05, 7.701400000000025e-05, 7.667999999999911e-05, 7.688900000000012e-05, 7.609700000000066e-05, 7.670799999999825e-05, 7.613899999999937e-05, 7.688900000000012e-05, 7.704199999999939e-05, 7.60830000000011e-05, 7.69579999999985e-05, 7.666699999999901e-05, 7.675000000000043e-05, 7.683400000000132e-05, 7.661100000000073e-05, 7.700000000000068e-05, 7.684800000000089e-05, 7.697200000000154e-05, 7.673600000000086e-05, 7.67770000000001e-05, 7.611100000000023e-05, 7.612500000000327e-05, 7.661099999999726e-05, 7.667999999999911e-05, 7.61249999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.012" endtime="20201112 10:14:47.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.008" endtime="20201112 10:14:47.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.017" endtime="20201112 10:14:47.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.021" endtime="20201112 10:14:47.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.019" endtime="20201112 10:14:47.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.016" endtime="20201112 10:14:47.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.650" endtime="20201112 10:14:47.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.649" endtime="20201112 10:14:47.042"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.050" endtime="20201112 10:14:47.068"></status>
</kw>
<msg timestamp="20201112 10:14:47.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.049" endtime="20201112 10:14:47.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.070" endtime="20201112 10:14:47.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.072" endtime="20201112 10:14:47.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.046" endtime="20201112 10:14:47.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.044" endtime="20201112 10:14:47.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.082" endtime="20201112 10:14:47.368"></status>
</kw>
<msg timestamp="20201112 10:14:47.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:47.080" endtime="20201112 10:14:47.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:47.372" endtime="20201112 10:14:47.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.380" endtime="20201112 10:14:47.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.078" endtime="20201112 10:14:47.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.076" endtime="20201112 10:14:47.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.387" level="INFO">${RESULT} = [{'time': 0.0218565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.802800000000082e-05, 'source_diff': 7.802800000000082e-05}, {'time': 0.021939139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:47.384" endtime="20201112 10:14:47.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.401" level="INFO">${ACCURACY} = {'source_diff': [7.802800000000082e-05, 7.802800000000082e-05, 7.709800000000114e-05, 7.795899999999897e-05, 7.795900000000244e-05, 7.790200000000122e-05, 7.772300000000176e-05, 7.719499999999865e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:47.388" endtime="20201112 10:14:47.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.406" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.405" endtime="20201112 10:14:47.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.408" level="INFO">VALUE: [7.802800000000082e-05, 7.802800000000082e-05, 7.709800000000114e-05, 7.795899999999897e-05, 7.795900000000244e-05, 7.790200000000122e-05, 7.772300000000176e-05, 7.719499999999865e-05, 7.794399999999993e-05, 7.779100000000067e-05, 7.78189999999998e-05, 7.793000000000036e-05, 7.804200000000039e-05, 7.777699999999763e-05, 7.79579999999995e-05, 7.802799999999735e-05, 7.777800000000057e-05, 7.801399999999778e-05, 7.786100000000198e-05, 7.781999999999928e-05, 7.711100000000123e-05, 7.777800000000057e-05, 7.772199999999882e-05, 7.786099999999851e-05, 7.708400000000157e-05, 7.802800000000082e-05, 7.768100000000305e-05, 7.717999999999961e-05, 7.783400000000232e-05, 7.779200000000014e-05, 7.777699999999763e-05, 7.704099999999992e-05, 7.713900000000037e-05, 7.717999999999961e-05, 7.768000000000011e-05, 7.780500000000024e-05, 7.798600000000211e-05, 7.802800000000082e-05, 7.7764000000001e-05, 7.804200000000039e-05, 7.786099999999851e-05, 7.773600000000186e-05, 7.786099999999851e-05, 7.777800000000057e-05, 7.719499999999865e-05, 7.769500000000262e-05, 7.781999999999928e-05, 7.772300000000176e-05, 7.791700000000026e-05, 7.799999999999821e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.407" endtime="20201112 10:14:47.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.402" endtime="20201112 10:14:47.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.412" endtime="20201112 10:14:47.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.415" endtime="20201112 10:14:47.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.414" endtime="20201112 10:14:47.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.410" endtime="20201112 10:14:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.042" endtime="20201112 10:14:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.042" endtime="20201112 10:14:47.436"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.445" endtime="20201112 10:14:47.462"></status>
</kw>
<msg timestamp="20201112 10:14:47.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.443" endtime="20201112 10:14:47.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.464" endtime="20201112 10:14:47.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.466" endtime="20201112 10:14:47.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.441" endtime="20201112 10:14:47.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.439" endtime="20201112 10:14:47.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.476" endtime="20201112 10:14:47.760"></status>
</kw>
<msg timestamp="20201112 10:14:47.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.475" endtime="20201112 10:14:47.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.765" endtime="20201112 10:14:47.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.773" endtime="20201112 10:14:47.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.472" endtime="20201112 10:14:47.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.470" endtime="20201112 10:14:47.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.779" level="INFO">${RESULT} = [{'time': 0.021700653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.90840000000001e-05, 'source_diff': 7.90840000000001e-05}, {'time': 0.02178425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:47.776" endtime="20201112 10:14:47.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.793" level="INFO">${ACCURACY} = {'source_diff': [7.90840000000001e-05, 7.859700000000316e-05, 7.811100000000223e-05, 7.883300000000037e-05, 7.893100000000083e-05, 7.816699999999704e-05, 7.897200000000007e-05, 7.89030000000017e-05, 7...</msg>
<status status="PASS" starttime="20201112 10:14:47.780" endtime="20201112 10:14:47.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.797" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.796" endtime="20201112 10:14:47.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.800" level="INFO">VALUE: [7.90840000000001e-05, 7.859700000000316e-05, 7.811100000000223e-05, 7.883300000000037e-05, 7.893100000000083e-05, 7.816699999999704e-05, 7.897200000000007e-05, 7.89030000000017e-05, 7.868100000000058e-05, 7.902799999999835e-05, 7.819400000000018e-05, 7.893000000000136e-05, 7.897299999999954e-05, 7.874999999999896e-05, 7.816700000000051e-05, 7.81380000000019e-05, 7.872199999999982e-05, 7.893000000000136e-05, 7.8151999999998e-05, 7.876399999999853e-05, 7.877800000000157e-05, 7.89719999999966e-05, 7.86250000000023e-05, 7.888899999999865e-05, 7.808299999999962e-05, 7.81250000000018e-05, 7.865300000000144e-05, 7.863900000000187e-05, 7.812499999999833e-05, 7.876399999999853e-05, 7.8764000000002e-05, 7.813900000000137e-05, 7.812499999999833e-05, 7.899999999999921e-05, 7.893000000000136e-05, 7.869500000000015e-05, 7.891600000000179e-05, 7.88190000000008e-05, 7.876399999999853e-05, 7.818100000000008e-05, 7.872199999999982e-05, 7.905599999999749e-05, 7.865300000000144e-05, 7.819400000000018e-05, 7.874999999999896e-05, 7.805599999999996e-05, 7.870800000000025e-05, 7.904200000000139e-05, 7.86389999999984e-05, 7.87779999999981e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.798" endtime="20201112 10:14:47.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.794" endtime="20201112 10:14:47.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.803" endtime="20201112 10:14:47.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.807" endtime="20201112 10:14:47.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.805" endtime="20201112 10:14:47.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.802" endtime="20201112 10:14:47.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.437" endtime="20201112 10:14:47.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.437" endtime="20201112 10:14:47.827"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.836" endtime="20201112 10:14:47.855"></status>
</kw>
<msg timestamp="20201112 10:14:47.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.835" endtime="20201112 10:14:47.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.856" endtime="20201112 10:14:47.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.859" endtime="20201112 10:14:47.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.832" endtime="20201112 10:14:47.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.830" endtime="20201112 10:14:47.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.869" endtime="20201112 10:14:48.154"></status>
</kw>
<msg timestamp="20201112 10:14:48.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.867" endtime="20201112 10:14:48.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.158" endtime="20201112 10:14:48.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.166" endtime="20201112 10:14:48.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.864" endtime="20201112 10:14:48.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.863" endtime="20201112 10:14:48.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.173" level="INFO">${RESULT} = [{'time': 0.021985042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.970900000000072e-05, 'source_diff': 7.970900000000072e-05}, {'time': 0.022069653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:48.169" endtime="20201112 10:14:48.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.186" level="INFO">${ACCURACY} = {'source_diff': [7.970900000000072e-05, 7.986100000000051e-05, 7.993100000000183e-05, 7.994499999999793e-05, 7.997300000000054e-05, 7.907000000000053e-05, 7.966599999999907e-05, 7.987500000000008e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:48.174" endtime="20201112 10:14:48.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.191" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.190" endtime="20201112 10:14:48.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.193" level="INFO">VALUE: [7.970900000000072e-05, 7.986100000000051e-05, 7.993100000000183e-05, 7.994499999999793e-05, 7.997300000000054e-05, 7.907000000000053e-05, 7.966599999999907e-05, 7.987500000000008e-05, 7.90970000000002e-05, 7.965299999999897e-05, 8.004099999999945e-05, 8.001399999999978e-05, 7.998600000000064e-05, 7.990299999999922e-05, 7.99580000000015e-05, 7.994400000000193e-05, 7.90970000000002e-05, 7.99450000000014e-05, 7.988899999999965e-05, 7.993099999999836e-05, 7.961100000000026e-05, 7.95970000000007e-05, 7.961199999999974e-05, 8.004199999999892e-05, 7.986199999999999e-05, 7.997299999999707e-05, 8.002800000000282e-05, 7.96519999999995e-05, 7.922199999999685e-05, 7.973600000000039e-05, 7.987500000000008e-05, 7.96389999999994e-05, 7.912499999999933e-05, 7.905500000000149e-05, 7.969400000000168e-05, 7.979200000000214e-05, 7.915300000000194e-05, 7.961100000000026e-05, 7.98329999999979e-05, 7.994499999999793e-05, 7.983399999999738e-05, 7.905599999999749e-05, 7.994499999999793e-05, 7.974999999999996e-05, 7.90970000000002e-05, 8.004099999999945e-05, 7.913799999999943e-05, 7.974999999999996e-05, 7.991600000000279e-05, 7.972199999999735e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.192" endtime="20201112 10:14:48.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.187" endtime="20201112 10:14:48.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.197" endtime="20201112 10:14:48.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.200" endtime="20201112 10:14:48.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.199" endtime="20201112 10:14:48.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.195" endtime="20201112 10:14:48.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.828" endtime="20201112 10:14:48.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.828" endtime="20201112 10:14:48.221"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.229" endtime="20201112 10:14:48.247"></status>
</kw>
<msg timestamp="20201112 10:14:48.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.228" endtime="20201112 10:14:48.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.249" endtime="20201112 10:14:48.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.251" endtime="20201112 10:14:48.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.225" endtime="20201112 10:14:48.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.223" endtime="20201112 10:14:48.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.261" endtime="20201112 10:14:48.545"></status>
</kw>
<msg timestamp="20201112 10:14:48.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.259" endtime="20201112 10:14:48.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.549" endtime="20201112 10:14:48.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.557" endtime="20201112 10:14:48.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.257" endtime="20201112 10:14:48.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.255" endtime="20201112 10:14:48.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.564" level="INFO">${RESULT} = [{'time': 0.021802764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.136099999999855e-05, 'source_diff': 8.136099999999855e-05}, {'time': 0.021888444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:48.561" endtime="20201112 10:14:48.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.577" level="INFO">${ACCURACY} = {'source_diff': [8.136099999999855e-05, 8.102700000000088e-05, 8.065299999999997e-05, 8.06390000000004e-05, 8.012500000000033e-05, 8.018100000000208e-05, 8.101400000000078e-05, 8.08190000000028e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:14:48.565" endtime="20201112 10:14:48.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.582" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.581" endtime="20201112 10:14:48.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.584" level="INFO">VALUE: [8.136099999999855e-05, 8.102700000000088e-05, 8.065299999999997e-05, 8.06390000000004e-05, 8.012500000000033e-05, 8.018100000000208e-05, 8.101400000000078e-05, 8.08190000000028e-05, 8.069399999999921e-05, 8.070799999999878e-05, 8.005499999999902e-05, 8.076400000000053e-05, 8.080499999999977e-05, 8.062500000000083e-05, 8.008300000000163e-05, 8.069400000000268e-05, 8.086099999999805e-05, 8.088900000000065e-05, 8.090300000000022e-05, 8.018099999999861e-05, 8.030600000000221e-05, 8.066699999999954e-05, 8.011200000000024e-05, 8.100000000000121e-05, 8.062500000000083e-05, 8.070900000000172e-05, 8.070799999999878e-05, 8.087500000000108e-05, 8.087500000000108e-05, 8.076400000000053e-05, 8.076400000000053e-05, 8.012500000000033e-05, 8.016699999999904e-05, 8.079199999999967e-05, 8.012500000000033e-05, 8.094399999999946e-05, 8.016699999999904e-05, 8.062499999999737e-05, 8.072200000000182e-05, 8.07780000000001e-05, 8.020900000000122e-05, 8.01389999999999e-05, 8.080599999999924e-05, 8.066699999999954e-05, 8.073600000000139e-05, 8.099999999999774e-05, 8.079199999999967e-05, 8.069399999999921e-05, 8.01109999999973e-05, 8.088900000000065e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.583" endtime="20201112 10:14:48.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.578" endtime="20201112 10:14:48.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.588" endtime="20201112 10:14:48.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.591" endtime="20201112 10:14:48.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.590" endtime="20201112 10:14:48.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.586" endtime="20201112 10:14:48.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.222" endtime="20201112 10:14:48.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.221" endtime="20201112 10:14:48.612"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.621" endtime="20201112 10:14:48.638"></status>
</kw>
<msg timestamp="20201112 10:14:48.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.619" endtime="20201112 10:14:48.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.640" endtime="20201112 10:14:48.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.642" endtime="20201112 10:14:48.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.617" endtime="20201112 10:14:48.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.615" endtime="20201112 10:14:48.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.652" endtime="20201112 10:14:48.937"></status>
</kw>
<msg timestamp="20201112 10:14:48.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.651" endtime="20201112 10:14:48.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.941" endtime="20201112 10:14:48.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.949" endtime="20201112 10:14:48.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.648" endtime="20201112 10:14:48.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.646" endtime="20201112 10:14:48.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.955" level="INFO">${RESULT} = [{'time': 0.021814806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.244500000000043e-05, 'source_diff': 8.244500000000043e-05}, {'time': 0.021901431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:48.952" endtime="20201112 10:14:48.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.970" level="INFO">${ACCURACY} = {'source_diff': [8.244500000000043e-05, 8.199999999999874e-05, 8.17780000000011e-05, 8.184800000000242e-05, 8.195800000000003e-05, 8.112499999999787e-05, 8.202800000000135e-05, 8.187499999999862e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:48.956" endtime="20201112 10:14:48.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.975" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.974" endtime="20201112 10:14:48.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.977" level="INFO">VALUE: [8.244500000000043e-05, 8.199999999999874e-05, 8.17780000000011e-05, 8.184800000000242e-05, 8.195800000000003e-05, 8.112499999999787e-05, 8.202800000000135e-05, 8.187499999999862e-05, 8.17910000000012e-05, 8.18049999999973e-05, 8.179200000000067e-05, 8.172199999999935e-05, 8.184699999999948e-05, 8.116700000000004e-05, 8.108299999999916e-05, 8.186100000000252e-05, 8.201399999999831e-05, 8.172199999999935e-05, 8.174999999999849e-05, 8.161100000000227e-05, 8.113899999999744e-05, 8.202800000000135e-05, 8.162500000000183e-05, 8.194400000000046e-05, 8.118000000000014e-05, 8.144399999999996e-05, 8.104100000000045e-05, 8.184699999999948e-05, 8.194400000000046e-05, 8.168000000000064e-05, 8.190299999999776e-05, 8.194400000000046e-05, 8.17780000000011e-05, 8.16390000000014e-05, 8.194399999999699e-05, 8.187500000000208e-05, 8.170799999999978e-05, 8.120900000000222e-05, 8.125000000000146e-05, 8.158399999999913e-05, 8.116700000000004e-05, 8.11109999999983e-05, 8.198699999999864e-05, 8.102700000000088e-05, 8.112499999999787e-05, 8.202700000000188e-05, 8.158299999999966e-05, 8.201399999999831e-05, 8.173599999999892e-05, 8.180500000000077e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.976" endtime="20201112 10:14:48.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.971" endtime="20201112 10:14:48.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.981" endtime="20201112 10:14:48.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.984" endtime="20201112 10:14:49.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.982" endtime="20201112 10:14:49.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.979" endtime="20201112 10:14:49.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.613" endtime="20201112 10:14:49.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.612" endtime="20201112 10:14:49.005"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.014" endtime="20201112 10:14:49.031"></status>
</kw>
<msg timestamp="20201112 10:14:49.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.012" endtime="20201112 10:14:49.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.033" endtime="20201112 10:14:49.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.035" endtime="20201112 10:14:49.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.010" endtime="20201112 10:14:49.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.007" endtime="20201112 10:14:49.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.045" endtime="20201112 10:14:49.331"></status>
</kw>
<msg timestamp="20201112 10:14:49.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.043" endtime="20201112 10:14:49.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.335" endtime="20201112 10:14:49.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.343" endtime="20201112 10:14:49.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.041" endtime="20201112 10:14:49.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.039" endtime="20201112 10:14:49.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.350" level="INFO">${RESULT} = [{'time': 0.021920819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.270800000000078e-05, 'source_diff': 8.270800000000078e-05}, {'time': 0.022008458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:49.347" endtime="20201112 10:14:49.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.363" level="INFO">${ACCURACY} = {'source_diff': [8.270800000000078e-05, 8.24720000000001e-05, 8.299999999999974e-05, 8.206900000000059e-05, 8.29170000000018e-05, 8.22780000000016e-05, 8.249999999999924e-05, 8.276399999999906e-05, 8....</msg>
<status status="PASS" starttime="20201112 10:14:49.351" endtime="20201112 10:14:49.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.368" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.367" endtime="20201112 10:14:49.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.370" level="INFO">VALUE: [8.270800000000078e-05, 8.24720000000001e-05, 8.299999999999974e-05, 8.206900000000059e-05, 8.29170000000018e-05, 8.22780000000016e-05, 8.249999999999924e-05, 8.276399999999906e-05, 8.26109999999998e-05, 8.216700000000104e-05, 8.274999999999949e-05, 8.276399999999906e-05, 8.207000000000006e-05, 8.305599999999802e-05, 8.205600000000049e-05, 8.215300000000147e-05, 8.304199999999845e-05, 8.312499999999987e-05, 8.220800000000028e-05, 8.206899999999712e-05, 8.281899999999787e-05, 8.263899999999894e-05, 8.213899999999844e-05, 8.206900000000059e-05, 8.284700000000048e-05, 8.299999999999974e-05, 8.273599999999992e-05, 8.265300000000197e-05, 8.290300000000222e-05, 8.298600000000017e-05, 8.286099999999658e-05, 8.28330000000009e-05, 8.21390000000019e-05, 8.269500000000068e-05, 8.276399999999906e-05, 8.280600000000124e-05, 8.2152999999998e-05, 8.215199999999853e-05, 8.276399999999906e-05, 8.274999999999949e-05, 8.267999999999817e-05, 8.217999999999767e-05, 8.274999999999949e-05, 8.212500000000234e-05, 8.291699999999833e-05, 8.202800000000135e-05, 8.304200000000192e-05, 8.259700000000023e-05, 8.299999999999974e-05, 8.218100000000061e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.369" endtime="20201112 10:14:49.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.364" endtime="20201112 10:14:49.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.374" endtime="20201112 10:14:49.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.377" endtime="20201112 10:14:49.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.376" endtime="20201112 10:14:49.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.372" endtime="20201112 10:14:49.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.006" endtime="20201112 10:14:49.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.005" endtime="20201112 10:14:49.398"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.407" endtime="20201112 10:14:49.425"></status>
</kw>
<msg timestamp="20201112 10:14:49.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.405" endtime="20201112 10:14:49.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.426" endtime="20201112 10:14:49.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.429" endtime="20201112 10:14:49.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.403" endtime="20201112 10:14:49.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.401" endtime="20201112 10:14:49.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.439" endtime="20201112 10:14:49.724"></status>
</kw>
<msg timestamp="20201112 10:14:49.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.437" endtime="20201112 10:14:49.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.729" endtime="20201112 10:14:49.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.737" endtime="20201112 10:14:49.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.435" endtime="20201112 10:14:49.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.433" endtime="20201112 10:14:49.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.743" level="INFO">${RESULT} = [{'time': 0.022073222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.455500000000005e-05, 'source_diff': 8.455500000000005e-05}, {'time': 0.022161833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:49.740" endtime="20201112 10:14:49.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.757" level="INFO">${ACCURACY} = {'source_diff': [8.455500000000005e-05, 8.350000000000024e-05, 8.36529999999995e-05, 8.366699999999908e-05, 8.373600000000092e-05, 8.319400000000171e-05, 8.395799999999856e-05, 8.3152999999999e-05, 8....</msg>
<status status="PASS" starttime="20201112 10:14:49.744" endtime="20201112 10:14:49.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.762" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.761" endtime="20201112 10:14:49.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.764" level="INFO">VALUE: [8.455500000000005e-05, 8.350000000000024e-05, 8.36529999999995e-05, 8.366699999999908e-05, 8.373600000000092e-05, 8.319400000000171e-05, 8.395799999999856e-05, 8.3152999999999e-05, 8.313899999999944e-05, 8.319500000000118e-05, 8.358400000000113e-05, 8.39859999999977e-05, 8.398600000000117e-05, 8.309699999999726e-05, 8.319499999999772e-05, 8.37919999999992e-05, 8.376400000000006e-05, 8.313799999999996e-05, 8.398600000000117e-05, 8.41249999999974e-05, 8.388899999999672e-05, 8.390299999999976e-05, 8.31110000000003e-05, 8.405599999999902e-05, 8.372199999999788e-05, 8.38049999999993e-05, 8.38330000000019e-05, 8.381899999999887e-05, 8.306999999999759e-05, 8.388900000000019e-05, 8.405599999999902e-05, 8.366700000000254e-05, 8.30980000000002e-05, 8.394399999999899e-05, 8.37370000000004e-05, 8.379200000000267e-05, 8.359699999999776e-05, 8.306899999999812e-05, 8.381899999999887e-05, 8.373600000000092e-05, 8.359699999999776e-05, 8.36529999999995e-05, 8.312499999999987e-05, 8.377799999999963e-05, 8.370799999999831e-05, 8.312499999999987e-05, 8.319400000000171e-05, 8.309699999999726e-05, 8.362500000000037e-05, 8.382000000000181e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.763" endtime="20201112 10:14:49.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.758" endtime="20201112 10:14:49.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.772" endtime="20201112 10:14:49.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.776" endtime="20201112 10:14:49.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.774" endtime="20201112 10:14:49.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.771" endtime="20201112 10:14:49.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.399" endtime="20201112 10:14:49.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.399" endtime="20201112 10:14:49.797"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.805" endtime="20201112 10:14:49.824"></status>
</kw>
<msg timestamp="20201112 10:14:49.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.804" endtime="20201112 10:14:49.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.826" endtime="20201112 10:14:49.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.828" endtime="20201112 10:14:49.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.801" endtime="20201112 10:14:49.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.799" endtime="20201112 10:14:49.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.838" endtime="20201112 10:14:50.126"></status>
</kw>
<msg timestamp="20201112 10:14:50.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.836" endtime="20201112 10:14:50.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.130" endtime="20201112 10:14:50.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.138" endtime="20201112 10:14:50.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.834" endtime="20201112 10:14:50.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.832" endtime="20201112 10:14:50.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.144" level="INFO">${RESULT} = [{'time': 0.022256944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.501300000000184e-05, 'source_diff': 8.501300000000184e-05}, {'time': 0.022346597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.141" endtime="20201112 10:14:50.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.158" level="INFO">${ACCURACY} = {'source_diff': [8.501300000000184e-05, 8.46660000000006e-05, 8.501400000000131e-05, 8.479100000000073e-05, 8.459699999999876e-05, 8.501400000000131e-05, 8.468000000000017e-05, 8.476400000000106e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:50.145" endtime="20201112 10:14:50.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.162" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.161" endtime="20201112 10:14:50.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.165" level="INFO">VALUE: [8.501300000000184e-05, 8.46660000000006e-05, 8.501400000000131e-05, 8.479100000000073e-05, 8.459699999999876e-05, 8.501400000000131e-05, 8.468000000000017e-05, 8.476400000000106e-05, 8.481999999999934e-05, 8.461099999999833e-05, 8.470900000000225e-05, 8.479099999999726e-05, 8.46669999999966e-05, 8.491700000000033e-05, 8.491699999999686e-05, 8.483299999999944e-05, 8.461200000000127e-05, 8.486099999999858e-05, 8.46110000000018e-05, 8.465199999999756e-05, 8.4846999999999e-05, 8.463900000000094e-05, 8.501400000000131e-05, 8.48050000000003e-05, 8.468099999999965e-05, 8.466700000000008e-05, 8.477800000000063e-05, 8.504200000000045e-05, 8.466700000000008e-05, 8.483299999999944e-05, 8.504200000000045e-05, 8.40980000000012e-05, 8.476400000000106e-05, 8.461099999999833e-05, 8.4153e-05, 8.46249999999979e-05, 8.479100000000073e-05, 8.48050000000003e-05, 8.419399999999924e-05, 8.442999999999992e-05, 8.486099999999858e-05, 8.469399999999974e-05, 8.469399999999974e-05, 8.486100000000205e-05, 8.470799999999931e-05, 8.46249999999979e-05, 8.495799999999956e-05, 8.49309999999999e-05, 8.494500000000293e-05, 8.480599999999977e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.163" endtime="20201112 10:14:50.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.159" endtime="20201112 10:14:50.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.168" endtime="20201112 10:14:50.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.172" endtime="20201112 10:14:50.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.170" endtime="20201112 10:14:50.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.167" endtime="20201112 10:14:50.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.798" endtime="20201112 10:14:50.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.797" endtime="20201112 10:14:50.193"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.201" endtime="20201112 10:14:50.219"></status>
</kw>
<msg timestamp="20201112 10:14:50.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.200" endtime="20201112 10:14:50.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.220" endtime="20201112 10:14:50.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.222" endtime="20201112 10:14:50.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.197" endtime="20201112 10:14:50.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.195" endtime="20201112 10:14:50.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.232" endtime="20201112 10:14:50.518"></status>
</kw>
<msg timestamp="20201112 10:14:50.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.231" endtime="20201112 10:14:50.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.522" endtime="20201112 10:14:50.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.530" endtime="20201112 10:14:50.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.228" endtime="20201112 10:14:50.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.227" endtime="20201112 10:14:50.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.537" level="INFO">${RESULT} = [{'time': 0.021825139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.627799999999866e-05, 'source_diff': 8.627799999999866e-05}, {'time': 0.021915778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.533" endtime="20201112 10:14:50.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.551" level="INFO">${ACCURACY} = {'source_diff': [8.627799999999866e-05, 8.573599999999945e-05, 8.586099999999958e-05, 8.584799999999948e-05, 8.59310000000009e-05, 8.56669999999976e-05, 8.569500000000022e-05, 8.572199999999988e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:14:50.538" endtime="20201112 10:14:50.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.556" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.555" endtime="20201112 10:14:50.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.558" level="INFO">VALUE: [8.627799999999866e-05, 8.573599999999945e-05, 8.586099999999958e-05, 8.584799999999948e-05, 8.59310000000009e-05, 8.56669999999976e-05, 8.569500000000022e-05, 8.572199999999988e-05, 8.562500000000237e-05, 8.518000000000067e-05, 8.590299999999829e-05, 8.597200000000013e-05, 8.509700000000273e-05, 8.602800000000188e-05, 8.604200000000145e-05, 8.57920000000012e-05, 8.577799999999816e-05, 8.586099999999958e-05, 8.573599999999945e-05, 8.583300000000044e-05, 8.569500000000022e-05, 8.509699999999926e-05, 8.583399999999991e-05, 8.606899999999765e-05, 8.565299999999804e-05, 8.602800000000188e-05, 8.56249999999989e-05, 8.595799999999709e-05, 8.590200000000228e-05, 8.51660000000011e-05, 8.577699999999869e-05, 8.5847e-05, 8.51110000000023e-05, 8.601399999999884e-05, 8.563900000000194e-05, 8.586099999999958e-05, 8.591700000000133e-05, 8.569500000000022e-05, 8.5153000000001e-05, 8.588900000000219e-05, 8.572199999999988e-05, 8.57920000000012e-05, 8.568100000000065e-05, 8.576299999999912e-05, 8.580600000000077e-05, 8.513800000000196e-05, 8.576400000000206e-05, 8.570800000000031e-05, 8.597300000000307e-05, 8.513899999999797e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.557" endtime="20201112 10:14:50.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.552" endtime="20201112 10:14:50.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.561" endtime="20201112 10:14:50.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.565" endtime="20201112 10:14:50.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.563" endtime="20201112 10:14:50.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.560" endtime="20201112 10:14:50.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.194" endtime="20201112 10:14:50.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.193" endtime="20201112 10:14:50.586"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.594" endtime="20201112 10:14:50.612"></status>
</kw>
<msg timestamp="20201112 10:14:50.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.593" endtime="20201112 10:14:50.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.613" endtime="20201112 10:14:50.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.616" endtime="20201112 10:14:50.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.590" endtime="20201112 10:14:50.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.588" endtime="20201112 10:14:50.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.626" endtime="20201112 10:14:50.912"></status>
</kw>
<msg timestamp="20201112 10:14:50.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.624" endtime="20201112 10:14:50.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.916" endtime="20201112 10:14:50.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.925" endtime="20201112 10:14:50.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.622" endtime="20201112 10:14:50.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.620" endtime="20201112 10:14:50.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.932" level="INFO">${RESULT} = [{'time': 0.021809042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736100000000108e-05, 'source_diff': 8.736100000000108e-05}, {'time': 0.021900667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.928" endtime="20201112 10:14:50.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.946" level="INFO">${ACCURACY} = {'source_diff': [8.736100000000108e-05, 8.695899999999757e-05, 8.606999999999712e-05, 8.697299999999714e-05, 8.663899999999947e-05, 8.672200000000088e-05, 8.609700000000026e-05, 8.697200000000113e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:50.933" endtime="20201112 10:14:50.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.950" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.949" endtime="20201112 10:14:50.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.953" level="INFO">VALUE: [8.736100000000108e-05, 8.695899999999757e-05, 8.606999999999712e-05, 8.697299999999714e-05, 8.663899999999947e-05, 8.672200000000088e-05, 8.609700000000026e-05, 8.697200000000113e-05, 8.705500000000255e-05, 8.681900000000187e-05, 8.672199999999741e-05, 8.663899999999947e-05, 8.61669999999981e-05, 8.672199999999741e-05, 8.683300000000144e-05, 8.666700000000208e-05, 8.676399999999959e-05, 8.697199999999766e-05, 8.668099999999818e-05, 8.701399999999984e-05, 8.613899999999897e-05, 8.651399999999934e-05, 8.668100000000165e-05, 8.69860000000007e-05, 8.665199999999956e-05, 8.68189999999984e-05, 8.69860000000007e-05, 8.68050000000023e-05, 8.67920000000022e-05, 8.698599999999723e-05, 8.608300000000069e-05, 8.619500000000072e-05, 8.704200000000245e-05, 8.612500000000287e-05, 8.682000000000134e-05, 8.69860000000007e-05, 8.670900000000079e-05, 8.613899999999897e-05, 8.659800000000023e-05, 8.616599999999863e-05, 8.676300000000012e-05, 8.677799999999916e-05, 8.695800000000156e-05, 8.695799999999809e-05, 8.683299999999797e-05, 8.692999999999895e-05, 8.663899999999947e-05, 8.615299999999854e-05, 8.68050000000023e-05, 8.687500000000015e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.951" endtime="20201112 10:14:50.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.947" endtime="20201112 10:14:50.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.956" endtime="20201112 10:14:50.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.960" endtime="20201112 10:14:50.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.958" endtime="20201112 10:14:50.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.955" endtime="20201112 10:14:50.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.587" endtime="20201112 10:14:50.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.586" endtime="20201112 10:14:50.980"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.989" endtime="20201112 10:14:51.007"></status>
</kw>
<msg timestamp="20201112 10:14:51.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.988" endtime="20201112 10:14:51.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.008" endtime="20201112 10:14:51.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.011" endtime="20201112 10:14:51.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.985" endtime="20201112 10:14:51.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.983" endtime="20201112 10:14:51.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.021" endtime="20201112 10:14:51.306"></status>
</kw>
<msg timestamp="20201112 10:14:51.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.019" endtime="20201112 10:14:51.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.310" endtime="20201112 10:14:51.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.318" endtime="20201112 10:14:51.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.017" endtime="20201112 10:14:51.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.015" endtime="20201112 10:14:51.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.325" level="INFO">${RESULT} = [{'time': 0.021902917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.787500000000115e-05, 'source_diff': 8.787500000000115e-05}, {'time': 0.021995597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:51.322" endtime="20201112 10:14:51.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.338" level="INFO">${ACCURACY} = {'source_diff': [8.787500000000115e-05, 8.76799999999997e-05, 8.79310000000029e-05, 8.775000000000102e-05, 8.769399999999927e-05, 8.795799999999909e-05, 8.76250000000009e-05, 8.719400000000224e-05, 8....</msg>
<status status="PASS" starttime="20201112 10:14:51.326" endtime="20201112 10:14:51.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.343" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.342" endtime="20201112 10:14:51.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.345" level="INFO">VALUE: [8.787500000000115e-05, 8.76799999999997e-05, 8.79310000000029e-05, 8.775000000000102e-05, 8.769399999999927e-05, 8.795799999999909e-05, 8.76250000000009e-05, 8.719400000000224e-05, 8.794399999999952e-05, 8.78189999999994e-05, 8.804199999999998e-05, 8.777800000000016e-05, 8.716700000000258e-05, 8.76250000000009e-05, 8.776400000000059e-05, 8.808300000000269e-05, 8.787500000000115e-05, 8.790300000000029e-05, 8.769500000000222e-05, 8.791699999999986e-05, 8.773600000000145e-05, 8.704100000000298e-05, 8.790200000000081e-05, 8.770800000000231e-05, 8.709699999999779e-05, 8.76250000000009e-05, 8.797200000000213e-05, 8.765300000000004e-05, 8.769400000000274e-05, 8.777800000000016e-05, 8.780600000000277e-05, 8.777800000000016e-05, 8.791699999999986e-05, 8.7638999999997e-05, 8.709700000000126e-05, 8.79860000000017e-05, 8.7153000000003e-05, 8.719399999999877e-05, 8.709800000000073e-05, 8.783300000000244e-05, 8.794399999999952e-05, 8.779100000000026e-05, 8.772199999999841e-05, 8.704099999999951e-05, 8.766600000000013e-05, 8.76669999999996e-05, 8.713899999999997e-05, 8.795799999999909e-05, 8.765300000000004e-05, 8.783300000000244e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.344" endtime="20201112 10:14:51.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.339" endtime="20201112 10:14:51.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.349" endtime="20201112 10:14:51.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.352" endtime="20201112 10:14:51.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.351" endtime="20201112 10:14:51.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.347" endtime="20201112 10:14:51.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.981" endtime="20201112 10:14:51.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.981" endtime="20201112 10:14:51.373"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.382" endtime="20201112 10:14:51.399"></status>
</kw>
<msg timestamp="20201112 10:14:51.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.380" endtime="20201112 10:14:51.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.401" endtime="20201112 10:14:51.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.403" endtime="20201112 10:14:51.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.378" endtime="20201112 10:14:51.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.375" endtime="20201112 10:14:51.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.413" endtime="20201112 10:14:51.698"></status>
</kw>
<msg timestamp="20201112 10:14:51.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02177025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:51.412" endtime="20201112 10:14:51.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02177025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:51.702" endtime="20201112 10:14:51.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.710" endtime="20201112 10:14:51.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.409" endtime="20201112 10:14:51.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.408" endtime="20201112 10:14:51.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.717" level="INFO">${RESULT} = [{'time': 0.021859625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.937499999999918e-05, 'source_diff': 8.937499999999918e-05}, {'time': 0.021953264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:51.713" endtime="20201112 10:14:51.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.730" level="INFO">${ACCURACY} = {'source_diff': [8.937499999999918e-05, 8.86670000000006e-05, 8.895800000000009e-05, 8.898700000000218e-05, 8.811099999999836e-05, 8.893100000000043e-05, 8.888899999999825e-05, 8.875000000000202e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:51.717" endtime="20201112 10:14:51.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.735" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.733" endtime="20201112 10:14:51.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.737" level="INFO">VALUE: [8.937499999999918e-05, 8.86670000000006e-05, 8.895800000000009e-05, 8.898700000000218e-05, 8.811099999999836e-05, 8.893100000000043e-05, 8.888899999999825e-05, 8.875000000000202e-05, 8.806999999999912e-05, 8.872200000000288e-05, 8.894400000000052e-05, 8.904100000000151e-05, 8.89999999999988e-05, 8.822299999999839e-05, 8.805500000000008e-05, 8.815300000000054e-05, 8.863900000000147e-05, 8.879199999999726e-05, 8.856900000000015e-05, 8.863900000000147e-05, 8.897199999999966e-05, 8.881999999999987e-05, 8.901400000000184e-05, 8.805599999999955e-05, 8.869499999999975e-05, 8.808299999999922e-05, 8.806999999999912e-05, 8.866600000000113e-05, 8.863800000000199e-05, 8.877799999999769e-05, 8.86800000000007e-05, 8.880500000000083e-05, 8.868100000000018e-05, 8.897199999999966e-05, 8.808300000000269e-05, 8.81670000000001e-05, 8.902800000000141e-05, 8.865300000000104e-05, 8.811099999999836e-05, 8.893099999999696e-05, 8.901400000000184e-05, 8.819499999999925e-05, 8.808400000000216e-05, 8.897299999999914e-05, 8.895899999999957e-05, 8.90129999999989e-05, 8.901300000000237e-05, 8.816600000000063e-05, 8.86670000000006e-05, 8.888900000000172e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.736" endtime="20201112 10:14:51.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.731" endtime="20201112 10:14:51.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.741" endtime="20201112 10:14:51.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.744" endtime="20201112 10:14:51.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.742" endtime="20201112 10:14:51.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.739" endtime="20201112 10:14:51.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.374" endtime="20201112 10:14:51.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.373" endtime="20201112 10:14:51.765"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.773" endtime="20201112 10:14:51.792"></status>
</kw>
<msg timestamp="20201112 10:14:51.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.772" endtime="20201112 10:14:51.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.793" endtime="20201112 10:14:51.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.796" endtime="20201112 10:14:51.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.769" endtime="20201112 10:14:51.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.767" endtime="20201112 10:14:51.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.806" endtime="20201112 10:14:52.095"></status>
</kw>
<msg timestamp="20201112 10:14:52.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.804" endtime="20201112 10:14:52.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.099" endtime="20201112 10:14:52.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.107" endtime="20201112 10:14:52.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.802" endtime="20201112 10:14:52.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.800" endtime="20201112 10:14:52.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.114" level="INFO">${RESULT} = [{'time': 0.021877222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.995800000000109e-05, 'source_diff': 8.995800000000109e-05}, {'time': 0.021971847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.110" endtime="20201112 10:14:52.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.128" level="INFO">${ACCURACY} = {'source_diff': [8.995800000000109e-05, 8.986100000000011e-05, 8.96939999999978e-05, 8.99999999999998e-05, 8.916699999999764e-05, 8.904200000000098e-05, 8.983300000000097e-05, 8.970800000000084e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:14:52.115" endtime="20201112 10:14:52.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.133" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.132" endtime="20201112 10:14:52.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.135" level="INFO">VALUE: [8.995800000000109e-05, 8.986100000000011e-05, 8.96939999999978e-05, 8.99999999999998e-05, 8.916699999999764e-05, 8.904200000000098e-05, 8.983300000000097e-05, 8.970800000000084e-05, 8.9945000000001e-05, 8.96250000000029e-05, 8.995800000000109e-05, 8.973599999999998e-05, 8.98329999999975e-05, 8.974999999999955e-05, 9.004100000000251e-05, 8.96519999999991e-05, 8.970800000000084e-05, 9.001399999999937e-05, 8.987499999999968e-05, 8.992999999999848e-05, 8.970800000000084e-05, 8.987499999999968e-05, 8.991599999999891e-05, 8.965300000000204e-05, 8.968100000000118e-05, 8.905600000000055e-05, 8.909699999999979e-05, 8.98199999999974e-05, 8.99869999999997e-05, 8.988799999999977e-05, 8.91670000000011e-05, 8.988899999999925e-05, 8.973699999999946e-05, 8.993000000000195e-05, 8.91800000000012e-05, 8.994400000000152e-05, 8.973599999999998e-05, 8.972199999999694e-05, 8.920800000000034e-05, 8.958400000000019e-05, 8.990300000000229e-05, 8.98190000000014e-05, 9.002800000000241e-05, 8.990300000000229e-05, 8.973599999999998e-05, 8.966699999999814e-05, 8.968099999999771e-05, 8.958400000000019e-05, 8.994499999999753e-05, 8.907000000000012e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.134" endtime="20201112 10:14:52.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.129" endtime="20201112 10:14:52.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.139" endtime="20201112 10:14:52.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.142" endtime="20201112 10:14:52.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.141" endtime="20201112 10:14:52.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.137" endtime="20201112 10:14:52.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.766" endtime="20201112 10:14:52.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.765" endtime="20201112 10:14:52.163"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.171" endtime="20201112 10:14:52.191"></status>
</kw>
<msg timestamp="20201112 10:14:52.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.170" endtime="20201112 10:14:52.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.192" endtime="20201112 10:14:52.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.195" endtime="20201112 10:14:52.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.167" endtime="20201112 10:14:52.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.165" endtime="20201112 10:14:52.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.205" endtime="20201112 10:14:52.490"></status>
</kw>
<msg timestamp="20201112 10:14:52.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:52.203" endtime="20201112 10:14:52.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:52.494" endtime="20201112 10:14:52.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.502" endtime="20201112 10:14:52.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.201" endtime="20201112 10:14:52.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.199" endtime="20201112 10:14:52.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.509" level="INFO">${RESULT} = [{'time': 0.021995306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.130599999999933e-05, 'source_diff': 9.130599999999933e-05}, {'time': 0.022089958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.505" endtime="20201112 10:14:52.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.522" level="INFO">${ACCURACY} = {'source_diff': [9.130599999999933e-05, 9.005499999999861e-05, 9.008300000000122e-05, 9.104100000000004e-05, 9.095799999999862e-05, 9.01389999999995e-05, 9.079099999999979e-05, 9.105500000000308e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:52.510" endtime="20201112 10:14:52.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.527" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.525" endtime="20201112 10:14:52.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.529" level="INFO">VALUE: [9.130599999999933e-05, 9.005499999999861e-05, 9.008300000000122e-05, 9.104100000000004e-05, 9.095799999999862e-05, 9.01389999999995e-05, 9.079099999999979e-05, 9.105500000000308e-05, 9.019500000000125e-05, 9.088900000000025e-05, 9.084700000000154e-05, 9.0639e-05, 9.072199999999794e-05, 9.008399999999722e-05, 9.077799999999969e-05, 9.090299999999982e-05, 9.073700000000046e-05, 9.020799999999787e-05, 9.075000000000055e-05, 9.009700000000079e-05, 9.075000000000055e-05, 9.061100000000086e-05, 9.104100000000004e-05, 9.10139999999969e-05, 9.087500000000068e-05, 9.005499999999861e-05, 9.10000000000008e-05, 9.08060000000023e-05, 9.087500000000068e-05, 9.0639e-05, 9.101400000000037e-05, 9.086100000000111e-05, 9.087500000000068e-05, 9.073600000000098e-05, 9.068099999999871e-05, 9.088900000000025e-05, 9.091699999999939e-05, 9.075000000000055e-05, 9.086100000000111e-05, 9.070800000000184e-05, 9.073600000000098e-05, 9.061100000000086e-05, 9.072199999999794e-05, 9.017999999999873e-05, 9.08329999999985e-05, 9.080599999999883e-05, 9.008300000000122e-05, 9.098599999999776e-05, 9.006999999999765e-05, 9.019499999999778e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.528" endtime="20201112 10:14:52.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.523" endtime="20201112 10:14:52.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.532" endtime="20201112 10:14:52.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.536" endtime="20201112 10:14:52.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.534" endtime="20201112 10:14:52.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.531" endtime="20201112 10:14:52.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.164" endtime="20201112 10:14:52.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.163" endtime="20201112 10:14:52.557"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.565" endtime="20201112 10:14:52.584"></status>
</kw>
<msg timestamp="20201112 10:14:52.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.564" endtime="20201112 10:14:52.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.585" endtime="20201112 10:14:52.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.588" endtime="20201112 10:14:52.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.561" endtime="20201112 10:14:52.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.559" endtime="20201112 10:14:52.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.598" endtime="20201112 10:14:52.885"></status>
</kw>
<msg timestamp="20201112 10:14:52.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022160125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.596" endtime="20201112 10:14:52.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022160125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.889" endtime="20201112 10:14:52.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.897" endtime="20201112 10:14:52.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.594" endtime="20201112 10:14:52.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.592" endtime="20201112 10:14:52.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.903" level="INFO">${RESULT} = [{'time': 0.022160125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.220799999999987e-05, 'source_diff': 9.220799999999987e-05}, {'time': 0.022256764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.900" endtime="20201112 10:14:52.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.917" level="INFO">${ACCURACY} = {'source_diff': [9.220799999999987e-05, 9.191699999999692e-05, 9.122299999999792e-05, 9.1639000000001e-05, 9.109799999999779e-05, 9.112500000000093e-05, 9.120800000000234e-05, 9.172299999999842e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:14:52.904" endtime="20201112 10:14:52.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.921" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.920" endtime="20201112 10:14:52.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.924" level="INFO">VALUE: [9.220799999999987e-05, 9.191699999999692e-05, 9.122299999999792e-05, 9.1639000000001e-05, 9.109799999999779e-05, 9.112500000000093e-05, 9.120800000000234e-05, 9.172299999999842e-05, 9.187500000000168e-05, 9.188900000000125e-05, 9.191600000000091e-05, 9.120799999999887e-05, 9.162500000000143e-05, 9.11939999999993e-05, 9.162499999999796e-05, 9.190300000000082e-05, 9.120799999999887e-05, 9.15000000000013e-05, 9.1639000000001e-05, 9.120900000000182e-05, 9.202800000000094e-05, 9.181899999999993e-05, 9.109699999999832e-05, 9.122200000000191e-05, 9.140300000000032e-05, 9.168000000000023e-05, 9.104199999999951e-05, 9.108300000000222e-05, 9.190200000000134e-05, 9.166700000000014e-05, 9.18329999999995e-05, 9.162499999999796e-05, 9.173600000000198e-05, 9.201400000000137e-05, 9.19719999999992e-05, 9.118099999999921e-05, 9.16939999999998e-05, 9.179200000000026e-05, 9.19719999999992e-05, 9.204200000000051e-05, 9.111099999999789e-05, 9.106999999999865e-05, 9.186200000000158e-05, 9.187500000000168e-05, 9.20000000000018e-05, 9.179099999999732e-05, 9.19719999999992e-05, 9.172199999999894e-05, 9.187500000000168e-05, 9.177800000000069e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.923" endtime="20201112 10:14:52.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.918" endtime="20201112 10:14:52.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.927" endtime="20201112 10:14:52.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.931" endtime="20201112 10:14:52.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.929" endtime="20201112 10:14:52.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.926" endtime="20201112 10:14:52.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.558" endtime="20201112 10:14:52.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.557" endtime="20201112 10:14:52.952"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.961" endtime="20201112 10:14:52.979"></status>
</kw>
<msg timestamp="20201112 10:14:52.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.959" endtime="20201112 10:14:52.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.981" endtime="20201112 10:14:52.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.983" endtime="20201112 10:14:52.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.956" endtime="20201112 10:14:52.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.954" endtime="20201112 10:14:52.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.993" endtime="20201112 10:14:53.279"></status>
</kw>
<msg timestamp="20201112 10:14:53.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.992" endtime="20201112 10:14:53.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.283" endtime="20201112 10:14:53.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.291" endtime="20201112 10:14:53.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.989" endtime="20201112 10:14:53.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.987" endtime="20201112 10:14:53.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.297" level="INFO">${RESULT} = [{'time': 0.022665667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.311099999999989e-05, 'source_diff': 9.311099999999989e-05}, {'time': 0.022763292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:53.294" endtime="20201112 10:14:53.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.311" level="INFO">${ACCURACY} = {'source_diff': [9.311099999999989e-05, 9.29590000000001e-05, 9.269500000000028e-05, 9.279200000000126e-05, 9.294399999999758e-05, 9.26659999999982e-05, 9.304099999999857e-05, 9.272199999999994e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:14:53.298" endtime="20201112 10:14:53.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.315" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.314" endtime="20201112 10:14:53.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.318" level="INFO">VALUE: [9.311099999999989e-05, 9.29590000000001e-05, 9.269500000000028e-05, 9.279200000000126e-05, 9.294399999999758e-05, 9.26659999999982e-05, 9.304099999999857e-05, 9.272199999999994e-05, 9.279099999999832e-05, 9.276400000000212e-05, 9.30000000000028e-05, 9.274999999999908e-05, 9.294400000000105e-05, 9.284700000000007e-05, 9.294500000000053e-05, 9.268100000000071e-05, 9.283299999999703e-05, 9.204200000000051e-05, 9.218100000000021e-05, 9.265199999999862e-05, 9.293100000000096e-05, 9.21659999999977e-05, 9.263799999999905e-05, 9.302700000000247e-05, 9.21940000000003e-05, 9.263899999999853e-05, 9.295800000000062e-05, 9.273599999999951e-05, 9.291699999999792e-05, 9.30000000000028e-05, 9.215300000000107e-05, 9.280600000000083e-05, 9.286099999999964e-05, 9.274999999999908e-05, 9.270899999999985e-05, 9.211100000000236e-05, 9.272299999999942e-05, 9.279200000000126e-05, 9.268100000000071e-05, 9.270800000000037e-05, 9.212499999999846e-05, 9.205500000000061e-05, 9.21529999999976e-05, 9.26940000000008e-05, 9.299999999999933e-05, 9.29720000000002e-05, 9.26940000000008e-05, 9.21940000000003e-05, 9.269500000000028e-05, 9.208299999999975e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.316" endtime="20201112 10:14:53.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.312" endtime="20201112 10:14:53.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.321" endtime="20201112 10:14:53.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.325" endtime="20201112 10:14:53.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.323" endtime="20201112 10:14:53.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.320" endtime="20201112 10:14:53.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.952" endtime="20201112 10:14:53.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.952" endtime="20201112 10:14:53.346"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.354" endtime="20201112 10:14:53.374"></status>
</kw>
<msg timestamp="20201112 10:14:53.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.353" endtime="20201112 10:14:53.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.375" endtime="20201112 10:14:53.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.378" endtime="20201112 10:14:53.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.350" endtime="20201112 10:14:53.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.348" endtime="20201112 10:14:53.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.388" endtime="20201112 10:14:53.673"></status>
</kw>
<msg timestamp="20201112 10:14:53.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.386" endtime="20201112 10:14:53.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.677" endtime="20201112 10:14:53.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.685" endtime="20201112 10:14:53.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.384" endtime="20201112 10:14:53.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.382" endtime="20201112 10:14:53.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.692" level="INFO">${RESULT} = [{'time': 0.021863917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.430599999999886e-05, 'source_diff': 9.430599999999886e-05}, {'time': 0.0219625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:53.689" endtime="20201112 10:14:53.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.706" level="INFO">${ACCURACY} = {'source_diff': [9.430599999999886e-05, 9.35139999999994e-05, 9.318100000000121e-05, 9.380500000000236e-05, 9.376399999999965e-05, 9.400000000000033e-05, 9.361100000000039e-05, 9.40139999999999e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:14:53.693" endtime="20201112 10:14:53.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.711" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.710" endtime="20201112 10:14:53.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.713" level="INFO">VALUE: [9.430599999999886e-05, 9.35139999999994e-05, 9.318100000000121e-05, 9.380500000000236e-05, 9.376399999999965e-05, 9.400000000000033e-05, 9.361100000000039e-05, 9.40139999999999e-05, 9.377799999999922e-05, 9.365199999999962e-05, 9.306900000000118e-05, 9.372200000000094e-05, 9.404199999999904e-05, 9.31390000000025e-05, 9.361100000000039e-05, 9.394399999999858e-05, 9.387500000000021e-05, 9.394499999999806e-05, 9.362499999999996e-05, 9.380600000000183e-05, 9.31390000000025e-05, 9.305600000000108e-05, 9.393100000000196e-05, 9.369499999999781e-05, 9.373699999999999e-05, 9.373600000000051e-05, 9.359800000000029e-05, 9.386100000000064e-05, 9.386100000000064e-05, 9.355499999999864e-05, 9.379099999999932e-05, 9.317999999999826e-05, 9.39720000000012e-05, 9.395800000000162e-05, 9.380499999999889e-05, 9.315300000000207e-05, 9.370900000000085e-05, 9.36529999999991e-05, 9.404199999999904e-05, 9.368099999999824e-05, 9.316699999999817e-05, 9.391699999999892e-05, 9.365199999999962e-05, 9.390199999999987e-05, 9.395799999999815e-05, 9.377699999999975e-05, 9.392999999999901e-05, 9.394500000000153e-05, 9.387500000000021e-05, 9.402799999999947e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.712" endtime="20201112 10:14:53.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.707" endtime="20201112 10:14:53.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.717" endtime="20201112 10:14:53.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.720" endtime="20201112 10:14:53.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.719" endtime="20201112 10:14:53.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.715" endtime="20201112 10:14:53.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.347" endtime="20201112 10:14:53.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.346" endtime="20201112 10:14:53.741"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.750" endtime="20201112 10:14:53.768"></status>
</kw>
<msg timestamp="20201112 10:14:53.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.748" endtime="20201112 10:14:53.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.770" endtime="20201112 10:14:53.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.772" endtime="20201112 10:14:53.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.746" endtime="20201112 10:14:53.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.743" endtime="20201112 10:14:53.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.782" endtime="20201112 10:14:54.069"></status>
</kw>
<msg timestamp="20201112 10:14:54.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021725111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.781" endtime="20201112 10:14:54.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021725111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.073" endtime="20201112 10:14:54.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.081" endtime="20201112 10:14:54.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.778" endtime="20201112 10:14:54.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.776" endtime="20201112 10:14:54.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.088" level="INFO">${RESULT} = [{'time': 0.021819972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.486100000000164e-05, 'source_diff': 9.486100000000164e-05}, {'time': 0.021919639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.084" endtime="20201112 10:14:54.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.101" level="INFO">${ACCURACY} = {'source_diff': [9.486100000000164e-05, 9.493099999999949e-05, 9.508399999999875e-05, 9.404200000000251e-05, 9.408400000000122e-05, 9.408299999999828e-05, 9.475000000000108e-05, 9.413800000000055e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:54.089" endtime="20201112 10:14:54.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.106" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.105" endtime="20201112 10:14:54.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.108" level="INFO">VALUE: [9.486100000000164e-05, 9.493099999999949e-05, 9.508399999999875e-05, 9.404200000000251e-05, 9.408400000000122e-05, 9.408299999999828e-05, 9.475000000000108e-05, 9.413800000000055e-05, 9.495899999999863e-05, 9.413900000000003e-05, 9.476400000000065e-05, 9.469499999999881e-05, 9.46940000000028e-05, 9.487500000000121e-05, 9.408299999999828e-05, 9.465199999999716e-05, 9.472199999999847e-05, 9.481899999999946e-05, 9.48469999999986e-05, 9.470800000000237e-05, 9.501399999999743e-05, 9.497199999999872e-05, 9.418099999999874e-05, 9.441699999999942e-05, 9.46660000000002e-05, 9.504100000000057e-05, 9.407000000000165e-05, 9.466699999999967e-05, 9.505500000000014e-05, 9.415300000000307e-05, 9.477700000000075e-05, 9.474999999999761e-05, 9.46530000000001e-05, 9.412500000000046e-05, 9.41529999999996e-05, 9.504199999999657e-05, 9.480499999999989e-05, 9.494499999999906e-05, 9.486099999999817e-05, 9.494500000000253e-05, 9.479199999999979e-05, 9.476399999999718e-05, 9.461100000000139e-05, 9.495899999999863e-05, 9.487500000000121e-05, 9.486099999999817e-05, 9.487500000000121e-05, 9.41659999999997e-05, 9.412500000000046e-05, 9.490300000000035e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.107" endtime="20201112 10:14:54.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.102" endtime="20201112 10:14:54.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.112" endtime="20201112 10:14:54.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.115" endtime="20201112 10:14:54.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.114" endtime="20201112 10:14:54.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.110" endtime="20201112 10:14:54.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.742" endtime="20201112 10:14:54.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.741" endtime="20201112 10:14:54.136"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.145" endtime="20201112 10:14:54.163"></status>
</kw>
<msg timestamp="20201112 10:14:54.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.143" endtime="20201112 10:14:54.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.165" endtime="20201112 10:14:54.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.167" endtime="20201112 10:14:54.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.140" endtime="20201112 10:14:54.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.138" endtime="20201112 10:14:54.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.177" endtime="20201112 10:14:54.462"></status>
</kw>
<msg timestamp="20201112 10:14:54.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.176" endtime="20201112 10:14:54.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.466" endtime="20201112 10:14:54.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.474" endtime="20201112 10:14:54.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.173" endtime="20201112 10:14:54.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.171" endtime="20201112 10:14:54.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.481" level="INFO">${RESULT} = [{'time': 0.021860667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.573599999999904e-05, 'source_diff': 9.573599999999904e-05}, {'time': 0.021961306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.478" endtime="20201112 10:14:54.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.494" level="INFO">${ACCURACY} = {'source_diff': [9.573599999999904e-05, 9.607000000000018e-05, 9.581999999999993e-05, 9.587499999999874e-05, 9.60140000000019e-05, 9.580500000000089e-05, 9.57079999999999e-05, 9.505499999999667e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:14:54.482" endtime="20201112 10:14:54.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.499" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.498" endtime="20201112 10:14:54.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.501" level="INFO">VALUE: [9.573599999999904e-05, 9.607000000000018e-05, 9.581999999999993e-05, 9.587499999999874e-05, 9.60140000000019e-05, 9.580500000000089e-05, 9.57079999999999e-05, 9.505499999999667e-05, 9.573600000000251e-05, 9.60140000000019e-05, 9.508299999999928e-05, 9.511099999999842e-05, 9.58469999999996e-05, 9.586100000000264e-05, 9.505599999999961e-05, 9.579199999999732e-05, 9.593100000000049e-05, 9.59859999999993e-05, 9.590300000000135e-05, 9.511200000000136e-05, 9.56660000000012e-05, 9.513899999999756e-05, 9.57079999999999e-05, 9.579100000000132e-05, 9.588899999999831e-05, 9.565200000000162e-05, 9.512500000000146e-05, 9.595800000000015e-05, 9.563899999999806e-05, 9.595899999999963e-05, 9.573600000000251e-05, 9.520899999999888e-05, 9.573599999999904e-05, 9.518099999999974e-05, 9.569499999999981e-05, 9.594500000000006e-05, 9.587500000000221e-05, 9.598700000000224e-05, 9.51530000000006e-05, 9.57079999999999e-05, 9.583300000000003e-05, 9.577700000000175e-05, 9.591599999999798e-05, 9.60409999999981e-05, 9.59720000000032e-05, 9.587500000000221e-05, 9.594400000000058e-05, 9.520899999999888e-05, 9.506999999999918e-05, 9.581999999999993e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.500" endtime="20201112 10:14:54.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.495" endtime="20201112 10:14:54.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.505" endtime="20201112 10:14:54.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.508" endtime="20201112 10:14:54.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.507" endtime="20201112 10:14:54.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.503" endtime="20201112 10:14:54.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.137" endtime="20201112 10:14:54.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.136" endtime="20201112 10:14:54.529"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.538" endtime="20201112 10:14:54.556"></status>
</kw>
<msg timestamp="20201112 10:14:54.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.536" endtime="20201112 10:14:54.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.558" endtime="20201112 10:14:54.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.560" endtime="20201112 10:14:54.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.533" endtime="20201112 10:14:54.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.531" endtime="20201112 10:14:54.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.570" endtime="20201112 10:14:54.856"></status>
</kw>
<msg timestamp="20201112 10:14:54.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.568" endtime="20201112 10:14:54.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.860" endtime="20201112 10:14:54.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.868" endtime="20201112 10:14:54.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.566" endtime="20201112 10:14:54.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.564" endtime="20201112 10:14:54.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.875" level="INFO">${RESULT} = [{'time': 0.021914556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.732000000000143e-05, 'source_diff': 9.732000000000143e-05}, {'time': 0.022016194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.871" endtime="20201112 10:14:54.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.888" level="INFO">${ACCURACY} = {'source_diff': [9.732000000000143e-05, 9.655499999999817e-05, 9.687499999999974e-05, 9.686100000000017e-05, 9.679099999999885e-05, 9.61799999999978e-05, 9.694399999999812e-05, 9.674999999999961e-05, ...</msg>
<status status="PASS" starttime="20201112 10:14:54.876" endtime="20201112 10:14:54.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.893" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.892" endtime="20201112 10:14:54.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.895" level="INFO">VALUE: [9.732000000000143e-05, 9.655499999999817e-05, 9.687499999999974e-05, 9.686100000000017e-05, 9.679099999999885e-05, 9.61799999999978e-05, 9.694399999999812e-05, 9.674999999999961e-05, 9.688899999999931e-05, 9.697200000000072e-05, 9.672200000000047e-05, 9.616700000000117e-05, 9.66669999999982e-05, 9.618000000000126e-05, 9.711100000000042e-05, 9.704199999999857e-05, 9.674999999999961e-05, 9.708299999999781e-05, 9.691599999999898e-05, 9.695800000000115e-05, 9.609699999999985e-05, 9.680499999999842e-05, 9.687499999999974e-05, 9.66799999999983e-05, 9.697200000000072e-05, 9.681900000000146e-05, 9.676399999999918e-05, 9.701399999999943e-05, 9.669500000000081e-05, 9.663899999999906e-05, 9.618100000000074e-05, 9.627799999999825e-05, 9.694500000000106e-05, 9.663899999999906e-05, 9.611099999999942e-05, 9.61530000000016e-05, 9.609699999999985e-05, 9.663899999999906e-05, 9.613900000000203e-05, 9.676400000000265e-05, 9.702800000000247e-05, 9.66530000000021e-05, 9.666700000000167e-05, 9.699999999999986e-05, 9.690300000000235e-05, 9.612500000000246e-05, 9.605600000000061e-05, 9.701399999999943e-05, 9.609799999999932e-05, 9.672299999999995e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.894" endtime="20201112 10:14:54.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.889" endtime="20201112 10:14:54.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.902" endtime="20201112 10:14:54.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.906" endtime="20201112 10:14:54.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.904" endtime="20201112 10:14:54.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.901" endtime="20201112 10:14:54.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.530" endtime="20201112 10:14:54.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.529" endtime="20201112 10:14:54.927"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.935" endtime="20201112 10:14:54.954"></status>
</kw>
<msg timestamp="20201112 10:14:54.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.934" endtime="20201112 10:14:54.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.956" endtime="20201112 10:14:54.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.958" endtime="20201112 10:14:54.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.931" endtime="20201112 10:14:54.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.929" endtime="20201112 10:14:54.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.968" endtime="20201112 10:14:55.255"></status>
</kw>
<msg timestamp="20201112 10:14:55.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022101153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022198875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.967" endtime="20201112 10:14:55.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022101153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022198875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.259" endtime="20201112 10:14:55.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.267" endtime="20201112 10:14:55.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.964" endtime="20201112 10:14:55.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.962" endtime="20201112 10:14:55.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.274" level="INFO">${RESULT} = [{'time': 0.022198875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.772200000000147e-05, 'source_diff': 9.772200000000147e-05}, {'time': 0.0223015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:55.271" endtime="20201112 10:14:55.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.288" level="INFO">${ACCURACY} = {'source_diff': [9.772200000000147e-05, 9.754199999999907e-05, 9.709699999999738e-05, 9.708399999999728e-05, 9.708399999999728e-05, 9.788900000000031e-05, 9.715299999999913e-05, 9.793100000000249e-05,...</msg>
<status status="PASS" starttime="20201112 10:14:55.275" endtime="20201112 10:14:55.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.293" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.292" endtime="20201112 10:14:55.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.295" level="INFO">VALUE: [9.772200000000147e-05, 9.754199999999907e-05, 9.709699999999738e-05, 9.708399999999728e-05, 9.708399999999728e-05, 9.788900000000031e-05, 9.715299999999913e-05, 9.793100000000249e-05, 9.784800000000107e-05, 9.71669999999987e-05, 9.713899999999956e-05, 9.805499999999967e-05, 9.708300000000128e-05, 9.713900000000303e-05, 9.708300000000128e-05, 9.782000000000193e-05, 9.786100000000117e-05, 9.794499999999859e-05, 9.8028e-05, 9.711100000000042e-05, 9.769500000000181e-05, 9.772200000000147e-05, 9.781899999999899e-05, 9.787500000000074e-05, 9.71530000000026e-05, 9.712499999999999e-05, 9.791699999999945e-05, 9.78059999999989e-05, 9.770799999999843e-05, 9.713800000000009e-05, 9.801400000000043e-05, 9.70409999999991e-05, 9.783299999999856e-05, 9.797200000000172e-05, 9.76799999999993e-05, 9.791700000000292e-05, 9.784699999999813e-05, 9.719400000000183e-05, 9.78059999999989e-05, 9.770900000000138e-05, 9.716700000000217e-05, 9.709800000000032e-05, 9.776400000000018e-05, 9.715299999999913e-05, 9.761200000000039e-05, 9.765200000000016e-05, 9.77080000000019e-05, 9.708300000000128e-05, 9.713899999999956e-05, 9.77080000000019e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.294" endtime="20201112 10:14:55.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.289" endtime="20201112 10:14:55.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.299" endtime="20201112 10:14:55.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.302" endtime="20201112 10:14:55.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.301" endtime="20201112 10:14:55.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.297" endtime="20201112 10:14:55.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.928" endtime="20201112 10:14:55.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.927" endtime="20201112 10:14:55.323"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.332" endtime="20201112 10:14:55.351"></status>
</kw>
<msg timestamp="20201112 10:14:55.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.330" endtime="20201112 10:14:55.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.352" endtime="20201112 10:14:55.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.355" endtime="20201112 10:14:55.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.328" endtime="20201112 10:14:55.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.326" endtime="20201112 10:14:55.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.365" endtime="20201112 10:14:55.650"></status>
</kw>
<msg timestamp="20201112 10:14:55.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:55.363" endtime="20201112 10:14:55.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:55.654" endtime="20201112 10:14:55.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.662" endtime="20201112 10:14:55.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.361" endtime="20201112 10:14:55.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.359" endtime="20201112 10:14:55.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.669" level="INFO">${RESULT} = [{'time': 0.021894986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.94860000000028e-05, 'source_diff': 9.94860000000028e-05}, {'time': 0.021998611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:55.666" endtime="20201112 10:14:55.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.682" level="INFO">${ACCURACY} = {'source_diff': [9.94860000000028e-05, 9.85280000000005e-05, 9.881899999999999e-05, 9.891699999999698e-05, 9.887500000000174e-05, 9.904200000000057e-05, 9.858400000000225e-05, 9.808399999999828e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:14:55.670" endtime="20201112 10:14:55.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.687" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.686" endtime="20201112 10:14:55.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.689" level="INFO">VALUE: [9.94860000000028e-05, 9.85280000000005e-05, 9.881899999999999e-05, 9.891699999999698e-05, 9.887500000000174e-05, 9.904200000000057e-05, 9.858400000000225e-05, 9.808399999999828e-05, 9.887500000000174e-05, 9.897299999999873e-05, 9.890199999999794e-05, 9.89020000000014e-05, 9.866600000000073e-05, 9.813900000000056e-05, 9.81669999999997e-05, 9.81799999999998e-05, 9.869399999999987e-05, 9.898599999999882e-05, 9.811099999999795e-05, 9.887500000000174e-05, 9.904200000000057e-05, 9.890299999999741e-05, 9.806999999999871e-05, 9.888900000000131e-05, 9.901400000000143e-05, 9.877799999999728e-05, 9.872200000000247e-05, 9.893000000000055e-05, 9.880500000000042e-05, 9.809699999999838e-05, 9.86800000000003e-05, 9.86800000000003e-05, 9.818099999999927e-05, 9.863900000000106e-05, 9.873599999999857e-05, 9.869399999999987e-05, 9.865300000000063e-05, 9.904200000000057e-05, 9.888900000000131e-05, 9.863900000000106e-05, 9.90419999999971e-05, 9.862500000000149e-05, 9.901400000000143e-05, 9.81669999999997e-05, 9.88609999999987e-05, 9.898599999999882e-05, 9.819399999999937e-05, 9.880499999999695e-05, 9.862500000000149e-05, 9.894400000000012e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.688" endtime="20201112 10:14:55.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.683" endtime="20201112 10:14:55.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.693" endtime="20201112 10:14:55.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.696" endtime="20201112 10:14:55.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.695" endtime="20201112 10:14:55.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.691" endtime="20201112 10:14:55.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.324" endtime="20201112 10:14:55.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.323" endtime="20201112 10:14:55.717"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.726" endtime="20201112 10:14:55.745"></status>
</kw>
<msg timestamp="20201112 10:14:55.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.724" endtime="20201112 10:14:55.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.746" endtime="20201112 10:14:55.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.749" endtime="20201112 10:14:55.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.722" endtime="20201112 10:14:55.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.720" endtime="20201112 10:14:55.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.758" endtime="20201112 10:14:56.044"></status>
</kw>
<msg timestamp="20201112 10:14:56.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02178425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:55.757" endtime="20201112 10:14:56.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02178425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:56.048" endtime="20201112 10:14:56.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.056" endtime="20201112 10:14:56.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.754" endtime="20201112 10:14:56.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.753" endtime="20201112 10:14:56.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.063" level="INFO">${RESULT} = [{'time': 0.021884736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010048599999999686, 'source_diff': 0.00010048599999999686}, {'time': 0.021989347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:56.059" endtime="20201112 10:14:56.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.076" level="INFO">${ACCURACY} = {'source_diff': [0.00010048599999999686, 9.987499999999927e-05, 9.905500000000067e-05, 9.969500000000034e-05, 9.994500000000059e-05, 9.9722e-05, 9.916600000000123e-05, 9.912500000000199e-05, 9.9985999...</msg>
<status status="PASS" starttime="20201112 10:14:56.064" endtime="20201112 10:14:56.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.081" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.080" endtime="20201112 10:14:56.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.083" level="INFO">VALUE: [0.00010048599999999686, 9.987499999999927e-05, 9.905500000000067e-05, 9.969500000000034e-05, 9.994500000000059e-05, 9.9722e-05, 9.916600000000123e-05, 9.912500000000199e-05, 9.998599999999983e-05, 9.976399999999871e-05, 9.983400000000003e-05, 9.908399999999928e-05, 9.915300000000113e-05, 9.961099999999945e-05, 9.99999999999994e-05, 9.977700000000228e-05, 9.912499999999852e-05, 9.990299999999841e-05, 9.980599999999742e-05, 9.984700000000013e-05, 9.981900000000099e-05, 9.91670000000007e-05, 9.983400000000003e-05, 9.918100000000027e-05, 9.979199999999785e-05, 9.993100000000102e-05, 9.911099999999895e-05, 9.987499999999927e-05, 9.918100000000027e-05, 9.912500000000199e-05, 9.973599999999957e-05, 9.915199999999819e-05, 9.976399999999871e-05, 9.916600000000123e-05, 9.976400000000218e-05, 9.915300000000113e-05, 9.981900000000099e-05, 9.995800000000069e-05, 9.990299999999841e-05, 9.982000000000046e-05, 9.911099999999895e-05, 9.980499999999795e-05, 9.96670000000012e-05, 0.00010001399999999896, 9.98609999999997e-05, 9.965199999999869e-05, 9.99159999999985e-05, 9.912500000000199e-05, 9.998599999999983e-05, 9.980500000000142e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.082" endtime="20201112 10:14:56.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.077" endtime="20201112 10:14:56.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.087" endtime="20201112 10:14:56.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.090" endtime="20201112 10:14:56.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.088" endtime="20201112 10:14:56.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.085" endtime="20201112 10:14:56.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.718" endtime="20201112 10:14:56.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.718" endtime="20201112 10:14:56.111"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.119" endtime="20201112 10:14:56.139"></status>
</kw>
<msg timestamp="20201112 10:14:56.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.118" endtime="20201112 10:14:56.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.140" endtime="20201112 10:14:56.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.143" endtime="20201112 10:14:56.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.115" endtime="20201112 10:14:56.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.113" endtime="20201112 10:14:56.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.152" endtime="20201112 10:14:56.438"></status>
</kw>
<msg timestamp="20201112 10:14:56.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.151" endtime="20201112 10:14:56.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.442" endtime="20201112 10:14:56.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.450" endtime="20201112 10:14:56.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.148" endtime="20201112 10:14:56.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.147" endtime="20201112 10:14:56.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.456" level="INFO">${RESULT} = [{'time': 0.021822389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010147200000000176, 'source_diff': 0.00010147200000000176}, {'time': 0.021927028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:56.453" endtime="20201112 10:14:56.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.469" level="INFO">${ACCURACY} = {'source_diff': [0.00010147200000000176, 0.00010005600000000114, 0.00010083400000000103, 0.00010018100000000127, 0.00010090299999999941, 0.00010083400000000103, 0.00010087500000000027, 0.0001009299999...</msg>
<status status="PASS" starttime="20201112 10:14:56.457" endtime="20201112 10:14:56.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.474" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.473" endtime="20201112 10:14:56.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.476" level="INFO">VALUE: [0.00010147200000000176, 0.00010005600000000114, 0.00010083400000000103, 0.00010018100000000127, 0.00010090299999999941, 0.00010083400000000103, 0.00010087500000000027, 0.00010092999999999908, 0.00010098600000000083, 0.00010095799999999822, 0.00010081899999999852, 0.00010102799999999953, 0.00010087500000000027, 0.00010066699999999873, 0.00010069400000000187, 0.00010084700000000113, 0.00010073700000000005, 0.00010091700000000245, 0.00010101399999999996, 0.00010066699999999873, 0.00010065299999999916, 0.00010008400000000028, 0.00010090299999999941, 0.00010091600000000298, 0.00010077699999999981, 0.00010066599999999926, 0.0001006939999999984, 0.0001010419999999991, 0.00010084700000000113, 0.0001008749999999968, 0.00010095799999999822, 0.00010012499999999952, 0.00010062500000000002, 0.00010007000000000071, 0.00010080599999999842, 0.00010016699999999823, 0.0001010000000000004, 0.00010013900000000256, 0.00010075000000000014, 0.00010083300000000156, 0.00010097199999999779, 0.00010081899999999852, 0.00010017999999999833, 0.0001010000000000004, 0.00010012499999999952, 0.00010083300000000156, 0.00010007000000000071, 0.0001010419999999991, 0.00010080599999999842, 0.00010069499999999787]</msg>
<status status="PASS" starttime="20201112 10:14:56.475" endtime="20201112 10:14:56.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.470" endtime="20201112 10:14:56.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.480" endtime="20201112 10:14:56.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.483" endtime="20201112 10:14:56.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.482" endtime="20201112 10:14:56.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.478" endtime="20201112 10:14:56.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.112" endtime="20201112 10:14:56.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.111" endtime="20201112 10:14:56.504"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.513" endtime="20201112 10:14:56.532"></status>
</kw>
<msg timestamp="20201112 10:14:56.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.511" endtime="20201112 10:14:56.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.534" endtime="20201112 10:14:56.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.537" endtime="20201112 10:14:56.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.509" endtime="20201112 10:14:56.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.507" endtime="20201112 10:14:56.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.546" endtime="20201112 10:14:56.833"></status>
</kw>
<msg timestamp="20201112 10:14:56.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.545" endtime="20201112 10:14:56.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.837" endtime="20201112 10:14:56.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.845" endtime="20201112 10:14:56.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.542" endtime="20201112 10:14:56.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.541" endtime="20201112 10:14:56.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.851" level="INFO">${RESULT} = [{'time': 0.022072181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010191699999999998, 'source_diff': 0.00010191699999999998}, {'time': 0.022178833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:56.848" endtime="20201112 10:14:56.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.865" level="INFO">${ACCURACY} = {'source_diff': [0.00010191699999999998, 0.00010188899999999737, 0.0001019160000000005, 0.00010180499999999995, 0.00010167999999999983, 0.00010194499999999912, 0.00010201400000000097, 0.00010204199999...</msg>
<status status="PASS" starttime="20201112 10:14:56.852" endtime="20201112 10:14:56.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.870" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.869" endtime="20201112 10:14:56.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.872" level="INFO">VALUE: [0.00010191699999999998, 0.00010188899999999737, 0.0001019160000000005, 0.00010180499999999995, 0.00010167999999999983, 0.00010194499999999912, 0.00010201400000000097, 0.00010204199999999664, 0.00010173600000000158, 0.00010180599999999942, 0.0001016809999999993, 0.00010176400000000071, 0.0001017359999999981, 0.00010175000000000115, 0.00010169499999999887, 0.00010105600000000214, 0.00010180499999999995, 0.00010183299999999909, 0.00010202799999999707, 0.00010190200000000094, 0.00010198599999999836, 0.00010198600000000183, 0.0001020420000000001, 0.00010167999999999983, 0.0001016939999999994, 0.00010195899999999869, 0.0001017359999999981, 0.00010161100000000145, 0.00010191699999999998, 0.00010197299999999826, 0.00010194499999999912, 0.00010184700000000213, 0.00010190300000000041, 0.000101722000000002, 0.00010165199999999722, 0.00010111100000000095, 0.0001018610000000017, 0.0001018749999999978, 0.0001020000000000014, 0.00010113900000000009, 0.00010105599999999867, 0.00010165300000000016, 0.00010179199999999985, 0.00010169500000000234, 0.0001011670000000027, 0.0001016809999999993, 0.00010168100000000277, 0.0001010419999999991, 0.00010158400000000178, 0.0001016939999999994]</msg>
<status status="PASS" starttime="20201112 10:14:56.871" endtime="20201112 10:14:56.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.866" endtime="20201112 10:14:56.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.876" endtime="20201112 10:14:56.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.879" endtime="20201112 10:14:56.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.878" endtime="20201112 10:14:56.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.874" endtime="20201112 10:14:56.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.505" endtime="20201112 10:14:56.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.504" endtime="20201112 10:14:56.900"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.908" endtime="20201112 10:14:56.927"></status>
</kw>
<msg timestamp="20201112 10:14:56.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.907" endtime="20201112 10:14:56.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.928" endtime="20201112 10:14:56.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.931" endtime="20201112 10:14:56.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.904" endtime="20201112 10:14:56.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.902" endtime="20201112 10:14:56.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.941" endtime="20201112 10:14:57.227"></status>
</kw>
<msg timestamp="20201112 10:14:57.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.939" endtime="20201112 10:14:57.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.231" endtime="20201112 10:14:57.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.239" endtime="20201112 10:14:57.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.936" endtime="20201112 10:14:57.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.935" endtime="20201112 10:14:57.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.246" level="INFO">${RESULT} = [{'time': 0.021722903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010336099999999973, 'source_diff': 0.00010336099999999973}, {'time': 0.021830542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:57.242" endtime="20201112 10:14:57.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.259" level="INFO">${ACCURACY} = {'source_diff': [0.00010336099999999973, 0.00010259800000000235, 0.00010299999999999893, 0.00010288899999999837, 0.00010302799999999807, 0.00010295800000000022, 0.00010261099999999898, 0.0001028609999...</msg>
<status status="PASS" starttime="20201112 10:14:57.247" endtime="20201112 10:14:57.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.263" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.262" endtime="20201112 10:14:57.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.266" level="INFO">VALUE: [0.00010336099999999973, 0.00010259800000000235, 0.00010299999999999893, 0.00010288899999999837, 0.00010302799999999807, 0.00010295800000000022, 0.00010261099999999898, 0.00010286099999999923, 0.00010279100000000138, 0.00010283300000000009, 0.00010265299999999769, 0.000102722000000003, 0.00010302800000000154, 0.00010290299999999794, 0.00010280600000000042, 0.00010282, 0.0001026810000000003, 0.0001030420000000011, 0.00010272299999999901, 0.00010291699999999751, 0.00010216600000000076, 0.00010276399999999825, 0.00010290199999999847, 0.00010206899999999977, 0.00010290199999999847, 0.00010266599999999779, 0.00010263900000000159, 0.00010273600000000258, 0.00010209699999999891, 0.00010294399999999718, 0.00010212500000000152, 0.00010293100000000055, 0.00010212500000000152, 0.00010286099999999923, 0.00010208400000000228, 0.0001030000000000024, 0.00010209699999999891, 0.00010216600000000076, 0.00010206899999999977, 0.00010208300000000281, 0.00010280500000000095, 0.00010280500000000095, 0.00010297199999999979, 0.0001030139999999985, 0.00010273600000000258, 0.00010274999999999868, 0.00010209700000000238, 0.00010301400000000197, 0.00010206999999999924, 0.00010290299999999794]</msg>
<status status="PASS" starttime="20201112 10:14:57.264" endtime="20201112 10:14:57.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.260" endtime="20201112 10:14:57.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.269" endtime="20201112 10:14:57.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.273" endtime="20201112 10:14:57.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.271" endtime="20201112 10:14:57.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.268" endtime="20201112 10:14:57.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.901" endtime="20201112 10:14:57.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.900" endtime="20201112 10:14:57.293"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.302" endtime="20201112 10:14:57.320"></status>
</kw>
<msg timestamp="20201112 10:14:57.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.300" endtime="20201112 10:14:57.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.322" endtime="20201112 10:14:57.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.324" endtime="20201112 10:14:57.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.298" endtime="20201112 10:14:57.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.296" endtime="20201112 10:14:57.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.334" endtime="20201112 10:14:57.619"></status>
</kw>
<msg timestamp="20201112 10:14:57.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.333" endtime="20201112 10:14:57.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.623" endtime="20201112 10:14:57.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.631" endtime="20201112 10:14:57.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.330" endtime="20201112 10:14:57.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.328" endtime="20201112 10:14:57.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.638" level="INFO">${RESULT} = [{'time': 0.021789167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010413900000000309, 'source_diff': 0.00010413900000000309}, {'time': 0.021897819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:57.634" endtime="20201112 10:14:57.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.651" level="INFO">${ACCURACY} = {'source_diff': [0.00010413900000000309, 0.00010363799999999965, 0.00010399999999999993, 0.00010316599999999829, 0.00010316600000000176, 0.00010306900000000077, 0.00010397200000000079, 0.0001037499999...</msg>
<status status="PASS" starttime="20201112 10:14:57.638" endtime="20201112 10:14:57.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.655" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.654" endtime="20201112 10:14:57.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.658" level="INFO">VALUE: [0.00010413900000000309, 0.00010363799999999965, 0.00010399999999999993, 0.00010316599999999829, 0.00010316600000000176, 0.00010306900000000077, 0.00010397200000000079, 0.00010374999999999968, 0.00010381900000000152, 0.00010379200000000185, 0.0001038749999999998, 0.00010402799999999907, 0.00010397199999999732, 0.00010372200000000054, 0.00010388899999999937, 0.00010365299999999869, 0.0001038619999999997, 0.0001030559999999972, 0.00010399999999999993, 0.00010399999999999993, 0.00010374999999999968, 0.00010404099999999916, 0.00010384700000000066, 0.00010376399999999925, 0.00010394499999999765, 0.00010381900000000152, 0.00010380600000000142, 0.00010394500000000112, 0.0001036810000000013, 0.00010380599999999796, 0.00010390300000000241, 0.00010311200000000242, 0.00010312499999999905, 0.00010374999999999968, 0.00010368000000000183, 0.00010384699999999719, 0.00010401400000000297, 0.00010380500000000195, 0.00010309699999999991, 0.00010390300000000241, 0.00010397200000000079, 0.00010365300000000216, 0.00010395799999999775, 0.00010312500000000252, 0.00010372300000000001, 0.00010399999999999993, 0.00010365300000000216, 0.00010368099999999783, 0.00010319500000000037, 0.00010383400000000056]</msg>
<status status="PASS" starttime="20201112 10:14:57.656" endtime="20201112 10:14:57.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.652" endtime="20201112 10:14:57.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.661" endtime="20201112 10:14:57.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.665" endtime="20201112 10:14:57.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.663" endtime="20201112 10:14:57.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.660" endtime="20201112 10:14:57.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.294" endtime="20201112 10:14:57.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.294" endtime="20201112 10:14:57.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.447" endtime="20201112 10:14:57.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.690" endtime="20201112 10:14:57.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.688" endtime="20201112 10:14:57.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.687" endtime="20201112 10:14:57.710"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:18.371" endtime="20201112 10:14:57.711" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.718" endtime="20201112 10:14:57.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.717" endtime="20201112 10:14:57.738"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.752" endtime="20201112 10:14:57.771"></status>
</kw>
<msg timestamp="20201112 10:14:57.772" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.750" endtime="20201112 10:14:57.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.773" endtime="20201112 10:14:57.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.777" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:57.775" endtime="20201112 10:14:57.778"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:57.748" endtime="20201112 10:14:57.778"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:57.746" endtime="20201112 10:14:57.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.744" endtime="20201112 10:14:57.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:57.783" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:57.782" endtime="20201112 10:14:57.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.780" endtime="20201112 10:14:57.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.743" endtime="20201112 10:14:57.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.742" endtime="20201112 10:14:57.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.784" endtime="20201112 10:14:57.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.741" endtime="20201112 10:14:57.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.739" endtime="20201112 10:14:57.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.716" endtime="20201112 10:14:57.787"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.798" endtime="20201112 10:14:57.811"></status>
</kw>
<msg timestamp="20201112 10:14:57.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.796" endtime="20201112 10:14:57.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.813" endtime="20201112 10:14:57.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.815" endtime="20201112 10:14:57.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.793" endtime="20201112 10:14:57.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.791" endtime="20201112 10:14:57.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.825" endtime="20201112 10:14:58.115"></status>
</kw>
<msg timestamp="20201112 10:14:58.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071632389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071637153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.823" endtime="20201112 10:14:58.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071632389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071637153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.119" endtime="20201112 10:14:58.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.127" endtime="20201112 10:14:58.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.820" endtime="20201112 10:14:58.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.818" endtime="20201112 10:14:58.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.134" level="INFO">${RESULT} = [{'time': 0.071637153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7639999999904425e-06, 'source_diff': 4.7639999999904425e-06}, {'time': 0.071642806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:58.131" endtime="20201112 10:14:58.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.147" level="INFO">${ACCURACY} = {'source_diff': [4.7639999999904425e-06, 3.79200000000246e-06, 3.360999999993397e-06, 3.7779999999959513e-06, 3.3200000000011e-06, 3.7779999999959513e-06, 3.3049999999951174e-06, 3.778000000009829e-06...</msg>
<status status="PASS" starttime="20201112 10:14:58.135" endtime="20201112 10:14:58.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.152" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.151" endtime="20201112 10:14:58.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.154" level="INFO">VALUE: [4.7639999999904425e-06, 3.79200000000246e-06, 3.360999999993397e-06, 3.7779999999959513e-06, 3.3200000000011e-06, 3.7779999999959513e-06, 3.3049999999951174e-06, 3.778000000009829e-06, 3.7910000000029864e-06, 3.7639999999894425e-06, 3.7770000000103554e-06, 3.8620000000072485e-06, 3.3200000000011e-06, 3.79200000000246e-06, 3.806000000008969e-06, 4.346999999987888e-06, 3.4309999999981855e-06, 3.79200000000246e-06, 3.7910000000029864e-06, 3.29200000000196e-06, 3.7769999999964776e-06, 3.319000000001626e-06, 3.305999999994591e-06, 3.7500000000106892e-06, 3.7769999999964776e-06, 3.319000000001626e-06, 3.333999999993731e-06, 3.305000000008995e-06, 3.7770000000103554e-06, 3.79200000000246e-06, 3.7640000000033202e-06, 3.319000000001626e-06, 3.7640000000033202e-06, 3.861000000007775e-06, 3.7769999999964776e-06, 4.360999999994397e-06, 4.166999999999366e-06, 3.7640000000033202e-06, 3.4300000000125896e-06, 3.7640000000033202e-06, 3.778000000009829e-06, 4.375000000000906e-06, 4.166999999999366e-06, 3.4029999999990457e-06, 3.8200000000016e-06, 3.305999999994591e-06, 3.7770000000103554e-06, 3.305000000008995e-06, 3.7359999999903026e-06, 3.305000000008995e-06]</msg>
<status status="PASS" starttime="20201112 10:14:58.153" endtime="20201112 10:14:58.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.148" endtime="20201112 10:14:58.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.157" endtime="20201112 10:14:58.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.161" endtime="20201112 10:14:58.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.159" endtime="20201112 10:14:58.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.156" endtime="20201112 10:14:58.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.789" endtime="20201112 10:14:58.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.788" endtime="20201112 10:14:58.182"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.190" endtime="20201112 10:14:58.205"></status>
</kw>
<msg timestamp="20201112 10:14:58.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.189" endtime="20201112 10:14:58.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.207" endtime="20201112 10:14:58.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.209" endtime="20201112 10:14:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.186" endtime="20201112 10:14:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.184" endtime="20201112 10:14:58.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.218" endtime="20201112 10:14:58.502"></status>
</kw>
<msg timestamp="20201112 10:14:58.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.217" endtime="20201112 10:14:58.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.506" endtime="20201112 10:14:58.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.514" endtime="20201112 10:14:58.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.214" endtime="20201112 10:14:58.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.212" endtime="20201112 10:14:58.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.521" level="INFO">${RESULT} = [{'time': 0.022682083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.022688458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:58.517" endtime="20201112 10:14:58.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.534" level="INFO">${ACCURACY} = {'source_diff': [5.471999999999422e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.8749999999979365e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.195000000001975e-06...</msg>
<status status="PASS" starttime="20201112 10:14:58.522" endtime="20201112 10:14:58.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.538" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.537" endtime="20201112 10:14:58.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.541" level="INFO">VALUE: [5.471999999999422e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.8749999999979365e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.195000000001975e-06, 4.5699999999988805e-06, 4.152000000000322e-06, 4.513999999997131e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.86200000000131e-06, 4.514000000000601e-06, 4.512999999997658e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.846999999998797e-06, 4.165999999999892e-06, 4.875000000001406e-06, 4.500000000001031e-06, 4.514000000000601e-06, 4.5699999999988805e-06, 4.818999999999657e-06, 4.889000000000976e-06, 4.152999999999796e-06, 4.514000000000601e-06, 4.513000000001127e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.166999999999366e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.8749999999979365e-06, 4.875000000001406e-06, 4.875000000001406e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.5699999999988805e-06, 4.513000000001127e-06, 4.513999999997131e-06, 4.514000000000601e-06, 4.500000000001031e-06, 4.514000000000601e-06, 4.860999999998367e-06, 4.528000000000171e-06, 4.887999999998033e-06, 5.221999999999172e-06, 4.875000000001406e-06]</msg>
<status status="PASS" starttime="20201112 10:14:58.540" endtime="20201112 10:14:58.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.535" endtime="20201112 10:14:58.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.544" endtime="20201112 10:14:58.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.548" endtime="20201112 10:14:58.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.546" endtime="20201112 10:14:58.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.543" endtime="20201112 10:14:58.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.183" endtime="20201112 10:14:58.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.182" endtime="20201112 10:14:58.569"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.577" endtime="20201112 10:14:58.591"></status>
</kw>
<msg timestamp="20201112 10:14:58.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.576" endtime="20201112 10:14:58.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.593" endtime="20201112 10:14:58.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.595" endtime="20201112 10:14:58.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.573" endtime="20201112 10:14:58.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.571" endtime="20201112 10:14:58.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.604" endtime="20201112 10:14:58.892"></status>
</kw>
<msg timestamp="20201112 10:14:58.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.602" endtime="20201112 10:14:58.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.897" endtime="20201112 10:14:58.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.905" endtime="20201112 10:14:58.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.600" endtime="20201112 10:14:58.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.598" endtime="20201112 10:14:58.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.911" level="INFO">${RESULT} = [{'time': 0.022154347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.555000000001837e-06, 'source_diff': 6.555000000001837e-06}, {'time': 0.022161611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:58.908" endtime="20201112 10:14:58.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.925" level="INFO">${ACCURACY} = {'source_diff': [6.555000000001837e-06, 5.582999999999977e-06, 5.930000000001212e-06, 5.569999999999881e-06, 5.9439999999973125e-06, 5.542000000000741e-06, 5.944000000000782e-06, 5.569999999999881e-06...</msg>
<status status="PASS" starttime="20201112 10:14:58.912" endtime="20201112 10:14:58.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.929" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.928" endtime="20201112 10:14:58.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.932" level="INFO">VALUE: [6.555000000001837e-06, 5.582999999999977e-06, 5.930000000001212e-06, 5.569999999999881e-06, 5.9439999999973125e-06, 5.542000000000741e-06, 5.944000000000782e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.931000000000686e-06, 5.624999999998687e-06, 5.556000000000311e-06, 5.582999999999977e-06, 5.221999999999172e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.582999999999977e-06, 6.320000000000631e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.222000000002641e-06, 5.222000000002641e-06, 5.5839999999994505e-06, 5.5839999999994505e-06, 5.930999999997216e-06, 5.569000000000407e-06, 5.194000000000032e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.958000000000352e-06, 5.596999999999547e-06, 5.931000000000686e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.931000000000686e-06, 5.582999999999977e-06, 5.625000000002156e-06, 5.5979999999990204e-06, 5.597000000003016e-06, 5.597000000003016e-06, 5.514000000001601e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.527999999997701e-06, 5.180000000000462e-06, 5.582999999999977e-06]</msg>
<status status="PASS" starttime="20201112 10:14:58.930" endtime="20201112 10:14:58.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.925" endtime="20201112 10:14:58.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.935" endtime="20201112 10:14:58.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.938" endtime="20201112 10:14:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.937" endtime="20201112 10:14:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.933" endtime="20201112 10:14:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.569" endtime="20201112 10:14:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.569" endtime="20201112 10:14:58.959"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.968" endtime="20201112 10:14:58.983"></status>
</kw>
<msg timestamp="20201112 10:14:58.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.966" endtime="20201112 10:14:58.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.984" endtime="20201112 10:14:58.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.987" endtime="20201112 10:14:58.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.964" endtime="20201112 10:14:58.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.962" endtime="20201112 10:14:58.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.996" endtime="20201112 10:14:59.284"></status>
</kw>
<msg timestamp="20201112 10:14:59.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.994" endtime="20201112 10:14:59.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.288" endtime="20201112 10:14:59.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.296" endtime="20201112 10:14:59.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.991" endtime="20201112 10:14:59.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.990" endtime="20201112 10:14:59.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.303" level="INFO">${RESULT} = [{'time': 0.022092361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569000000002407e-06, 'source_diff': 7.569000000002407e-06}, {'time': 0.022101125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:59.299" endtime="20201112 10:14:59.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.316" level="INFO">${ACCURACY} = {'source_diff': [7.569000000002407e-06, 7.013999999999632e-06, 6.6669999999983964e-06, 6.639000000002726e-06, 6.638999999999257e-06, 6.291999999998021e-06, 7.013000000000158e-06, 6.290999999998548e-06...</msg>
<status status="PASS" starttime="20201112 10:14:59.304" endtime="20201112 10:14:59.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.320" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.319" endtime="20201112 10:14:59.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.323" level="INFO">VALUE: [7.569000000002407e-06, 7.013999999999632e-06, 6.6669999999983964e-06, 6.639000000002726e-06, 6.638999999999257e-06, 6.291999999998021e-06, 7.013000000000158e-06, 6.290999999998548e-06, 6.653000000002296e-06, 6.305999999997591e-06, 6.9579999999978825e-06, 6.306000000001061e-06, 6.305999999997591e-06, 7.028000000002671e-06, 7.014000000003101e-06, 6.653000000002296e-06, 6.6529999999988265e-06, 6.61200000000306e-06, 6.291999999998021e-06, 6.653000000002296e-06, 6.694000000001532e-06, 6.6529999999988265e-06, 6.306000000001061e-06, 6.653000000002296e-06, 6.667000000001866e-06, 6.651999999999353e-06, 6.653000000002296e-06, 6.291000000002017e-06, 6.2779999999984515e-06, 6.638999999999257e-06, 6.334000000000201e-06, 6.638999999999257e-06, 6.318999999997688e-06, 6.6529999999988265e-06, 6.651999999999353e-06, 6.292000000001491e-06, 7.000000000000062e-06, 7.070000000001381e-06, 6.651999999999353e-06, 6.292000000001491e-06, 6.292000000001491e-06, 6.6529999999988265e-06, 6.694999999997536e-06, 6.597000000000547e-06, 6.709000000000576e-06, 6.694999999997536e-06, 6.2779999999984515e-06, 6.360999999999867e-06, 6.651999999999353e-06, 6.318999999997688e-06]</msg>
<status status="PASS" starttime="20201112 10:14:59.321" endtime="20201112 10:14:59.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.317" endtime="20201112 10:14:59.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.326" endtime="20201112 10:14:59.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.330" endtime="20201112 10:14:59.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.328" endtime="20201112 10:14:59.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.325" endtime="20201112 10:14:59.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.960" endtime="20201112 10:14:59.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.960" endtime="20201112 10:14:59.351"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.359" endtime="20201112 10:14:59.373"></status>
</kw>
<msg timestamp="20201112 10:14:59.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.358" endtime="20201112 10:14:59.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.375" endtime="20201112 10:14:59.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.377" endtime="20201112 10:14:59.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.355" endtime="20201112 10:14:59.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.353" endtime="20201112 10:14:59.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.386" endtime="20201112 10:14:59.674"></status>
</kw>
<msg timestamp="20201112 10:14:59.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.385" endtime="20201112 10:14:59.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.679" endtime="20201112 10:14:59.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.687" endtime="20201112 10:14:59.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.382" endtime="20201112 10:14:59.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.380" endtime="20201112 10:14:59.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.693" level="INFO">${RESULT} = [{'time': 0.022133833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.022143514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:59.690" endtime="20201112 10:14:59.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.706" level="INFO">${ACCURACY} = {'source_diff': [8.318999999999688e-06, 8.139000000000757e-06, 7.361000000000867e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.721999999998203e-06, 7.389000000000007e-06, 7.736000000001242e-06,...</msg>
<status status="PASS" starttime="20201112 10:14:59.694" endtime="20201112 10:14:59.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.711" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.710" endtime="20201112 10:14:59.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.713" level="INFO">VALUE: [8.318999999999688e-06, 8.139000000000757e-06, 7.361000000000867e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.721999999998203e-06, 7.389000000000007e-06, 7.736000000001242e-06, 7.361000000000867e-06, 7.375000000000437e-06, 7.735999999997772e-06, 7.707999999998633e-06, 7.722000000001672e-06, 7.361000000000867e-06, 7.319000000002157e-06, 7.361000000000867e-06, 8.055999999999341e-06, 7.375000000000437e-06, 7.735999999997772e-06, 7.721999999998203e-06, 7.777999999999952e-06, 7.375000000000437e-06, 7.721999999998203e-06, 7.722000000001672e-06, 7.389000000000007e-06, 7.723000000001146e-06, 7.347000000001297e-06, 7.375000000000437e-06, 7.721999999998203e-06, 7.347000000001297e-06, 7.708999999998106e-06, 8.083000000002477e-06, 7.723000000001146e-06, 7.443999999998813e-06, 7.375000000000437e-06, 7.735999999997772e-06, 7.722999999997676e-06, 7.764000000000382e-06, 7.389000000000007e-06, 7.736000000001242e-06, 7.375000000000437e-06, 7.361000000000867e-06, 7.721999999998203e-06, 8.08400000000195e-06, 8.083999999998481e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.722000000001672e-06, 7.361000000000867e-06, 7.375000000000437e-06]</msg>
<status status="PASS" starttime="20201112 10:14:59.712" endtime="20201112 10:14:59.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.707" endtime="20201112 10:14:59.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.717" endtime="20201112 10:14:59.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.720" endtime="20201112 10:14:59.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.719" endtime="20201112 10:14:59.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.715" endtime="20201112 10:14:59.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.351" endtime="20201112 10:14:59.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.351" endtime="20201112 10:14:59.741"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.750" endtime="20201112 10:14:59.764"></status>
</kw>
<msg timestamp="20201112 10:14:59.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.748" endtime="20201112 10:14:59.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.766" endtime="20201112 10:14:59.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.768" endtime="20201112 10:14:59.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.745" endtime="20201112 10:14:59.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.743" endtime="20201112 10:14:59.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.777" endtime="20201112 10:15:00.066"></status>
</kw>
<msg timestamp="20201112 10:15:00.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.776" endtime="20201112 10:15:00.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.071" endtime="20201112 10:15:00.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.079" endtime="20201112 10:15:00.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.773" endtime="20201112 10:15:00.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.771" endtime="20201112 10:15:00.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.086" level="INFO">${RESULT} = [{'time': 0.022095264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.022105639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:00.082" endtime="20201112 10:15:00.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.144" level="INFO">${ACCURACY} = {'source_diff': [9.471999999999953e-06, 8.792000000000522e-06, 8.430000000000243e-06, 8.430000000000243e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.472000000002422e-06, 8.790999999997579e-06,...</msg>
<status status="PASS" starttime="20201112 10:15:00.087" endtime="20201112 10:15:00.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.148" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.147" endtime="20201112 10:15:00.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.151" level="INFO">VALUE: [9.471999999999953e-06, 8.792000000000522e-06, 8.430000000000243e-06, 8.430000000000243e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.472000000002422e-06, 8.790999999997579e-06, 8.430999999999716e-06, 8.805000000000618e-06, 9.153000000001327e-06, 8.430999999999716e-06, 8.443999999999813e-06, 9.124999999998717e-06, 8.430000000000243e-06, 8.430000000000243e-06, 8.777999999997482e-06, 8.459000000002326e-06, 8.776999999998009e-06, 8.472999999998426e-06, 9.167000000000897e-06, 8.778000000000952e-06, 8.847999999998801e-06, 8.443999999999813e-06, 8.403000000000577e-06, 8.388999999997537e-06, 9.153000000001327e-06, 8.806000000000092e-06, 9.138999999998287e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.486000000001992e-06, 8.443999999999813e-06, 8.417000000000147e-06, 8.430000000000243e-06, 8.485999999998523e-06, 8.458999999998856e-06, 8.806000000000092e-06, 8.500000000001562e-06, 9.153000000001327e-06, 8.430000000000243e-06, 8.430999999999716e-06, 8.430000000000243e-06, 8.790999999997579e-06, 8.402999999997107e-06, 8.778000000000952e-06, 8.430000000000243e-06, 8.430000000000243e-06, 8.443999999999813e-06, 8.471999999998953e-06]</msg>
<status status="PASS" starttime="20201112 10:15:00.149" endtime="20201112 10:15:00.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.145" endtime="20201112 10:15:00.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.154" endtime="20201112 10:15:00.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.158" endtime="20201112 10:15:00.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.156" endtime="20201112 10:15:00.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.153" endtime="20201112 10:15:00.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.742" endtime="20201112 10:15:00.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.741" endtime="20201112 10:15:00.179"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.188" endtime="20201112 10:15:00.202"></status>
</kw>
<msg timestamp="20201112 10:15:00.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.186" endtime="20201112 10:15:00.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.203" endtime="20201112 10:15:00.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.206" endtime="20201112 10:15:00.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.183" endtime="20201112 10:15:00.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.181" endtime="20201112 10:15:00.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.215" endtime="20201112 10:15:00.498"></status>
</kw>
<msg timestamp="20201112 10:15:00.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.213" endtime="20201112 10:15:00.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.502" endtime="20201112 10:15:00.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.511" endtime="20201112 10:15:00.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.211" endtime="20201112 10:15:00.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.209" endtime="20201112 10:15:00.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.517" level="INFO">${RESULT} = [{'time': 0.022559583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.022571236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:00.514" endtime="20201112 10:15:00.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.531" level="INFO">${ACCURACY} = {'source_diff': [1.0513999999999663e-05, 1.0236000000000273e-05, 9.471999999999953e-06, 9.860999999999898e-06, 9.514000000002132e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.137999999998814e-0...</msg>
<status status="PASS" starttime="20201112 10:15:00.518" endtime="20201112 10:15:00.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.535" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.534" endtime="20201112 10:15:00.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.538" level="INFO">VALUE: [1.0513999999999663e-05, 1.0236000000000273e-05, 9.471999999999953e-06, 9.860999999999898e-06, 9.514000000002132e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.137999999998814e-06, 9.888999999999037e-06, 9.485999999999523e-06, 9.860999999999898e-06, 9.513999999998662e-06, 9.847000000000328e-06, 9.167000000000897e-06, 9.499999999999093e-06, 9.860999999999898e-06, 9.887999999999564e-06, 9.86200000000284e-06, 9.514000000002132e-06, 9.847000000000328e-06, 9.500000000002562e-06, 9.860999999999898e-06, 1.0208000000001133e-05, 9.153000000001327e-06, 9.860999999999898e-06, 9.499999999999093e-06, 9.86200000000284e-06, 9.500000000002562e-06, 1.0223000000000176e-05, 9.152999999997857e-06, 9.513999999998662e-06, 9.847000000000328e-06, 9.499999999999093e-06, 9.860999999999898e-06, 9.499999999999093e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.138999999998287e-06, 9.874999999999468e-06, 9.514000000002132e-06, 9.485999999999523e-06, 9.583000000000508e-06, 9.208000000000133e-06, 9.485999999999523e-06, 9.874999999999468e-06, 1.0209000000000606e-05, 9.513999999998662e-06, 9.528000000001702e-06, 9.860999999999898e-06, 9.499999999999093e-06]</msg>
<status status="PASS" starttime="20201112 10:15:00.536" endtime="20201112 10:15:00.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.532" endtime="20201112 10:15:00.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.541" endtime="20201112 10:15:00.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.545" endtime="20201112 10:15:00.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.543" endtime="20201112 10:15:00.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.540" endtime="20201112 10:15:00.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.179" endtime="20201112 10:15:00.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.179" endtime="20201112 10:15:00.566"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.575" endtime="20201112 10:15:00.588"></status>
</kw>
<msg timestamp="20201112 10:15:00.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.573" endtime="20201112 10:15:00.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.590" endtime="20201112 10:15:00.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.592" endtime="20201112 10:15:00.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.570" endtime="20201112 10:15:00.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.568" endtime="20201112 10:15:00.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.601" endtime="20201112 10:15:00.884"></status>
</kw>
<msg timestamp="20201112 10:15:00.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.600" endtime="20201112 10:15:00.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.889" endtime="20201112 10:15:00.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.897" endtime="20201112 10:15:00.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.597" endtime="20201112 10:15:00.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.596" endtime="20201112 10:15:00.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.903" level="INFO">${RESULT} = [{'time': 0.022589278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.022601583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:00.900" endtime="20201112 10:15:00.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.917" level="INFO">${ACCURACY} = {'source_diff': [1.1903000000000608e-05, 1.0611000000000648e-05, 1.0541999999998802e-05, 1.0638999999999788e-05, 1.0249999999999843e-05, 1.0568999999998469e-05, 1.0860999999997428e-05, 1.0569000000001...</msg>
<status status="PASS" starttime="20201112 10:15:00.904" endtime="20201112 10:15:00.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.921" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.920" endtime="20201112 10:15:00.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.924" level="INFO">VALUE: [1.1903000000000608e-05, 1.0611000000000648e-05, 1.0541999999998802e-05, 1.0638999999999788e-05, 1.0249999999999843e-05, 1.0568999999998469e-05, 1.0860999999997428e-05, 1.0569000000001938e-05, 1.0570000000001412e-05, 1.0222000000000703e-05, 1.0639000000003257e-05, 1.0582999999998038e-05, 1.0930999999998747e-05, 1.0209000000000606e-05, 1.0568999999998469e-05, 1.0166999999998427e-05, 1.0916999999999177e-05, 1.0583000000001508e-05, 1.1235999999997803e-05, 1.0236000000000273e-05, 1.0569999999997942e-05, 1.1291000000000079e-05, 1.0554999999998899e-05, 1.0569999999997942e-05, 1.0930999999998747e-05, 1.0902999999999607e-05, 1.0555999999998372e-05, 1.0889000000000038e-05, 1.0222000000000703e-05, 1.0570000000001412e-05, 1.0915999999999704e-05, 1.0945000000001787e-05, 1.0583000000001508e-05, 1.0583000000001508e-05, 1.0221999999997233e-05, 1.0889000000000038e-05, 1.0944999999998317e-05, 1.0583000000001508e-05, 1.0208000000001133e-05, 1.0929999999999274e-05, 1.0208000000001133e-05, 1.0569000000001938e-05, 1.0652999999999357e-05, 1.0583000000001508e-05, 1.0568999999998469e-05, 1.0596999999997608e-05, 1.0916999999999177e-05, 1.0583999999997512e-05, 1.0222000000000703e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.922" endtime="20201112 10:15:00.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.918" endtime="20201112 10:15:00.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.927" endtime="20201112 10:15:00.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.931" endtime="20201112 10:15:00.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.929" endtime="20201112 10:15:00.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.926" endtime="20201112 10:15:00.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.566" endtime="20201112 10:15:00.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.566" endtime="20201112 10:15:00.952"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.960" endtime="20201112 10:15:00.975"></status>
</kw>
<msg timestamp="20201112 10:15:00.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.959" endtime="20201112 10:15:00.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.977" endtime="20201112 10:15:00.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.979" endtime="20201112 10:15:00.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.956" endtime="20201112 10:15:00.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.954" endtime="20201112 10:15:00.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.988" endtime="20201112 10:15:01.272"></status>
</kw>
<msg timestamp="20201112 10:15:01.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.987" endtime="20201112 10:15:01.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.276" endtime="20201112 10:15:01.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.285" endtime="20201112 10:15:01.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.984" endtime="20201112 10:15:01.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.982" endtime="20201112 10:15:01.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.291" level="INFO">${RESULT} = [{'time': 0.022598069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2610999999999178e-05, 'source_diff': 1.2610999999999178e-05}, {'time': 0.022611542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:01.288" endtime="20201112 10:15:01.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.305" level="INFO">${ACCURACY} = {'source_diff': [1.2610999999999178e-05, 1.1638999999997318e-05, 1.1612000000001121e-05, 1.1652000000000884e-05, 1.1653000000000358e-05, 1.1638999999997318e-05, 1.2027999999997263e-05, 1.1653000000000...</msg>
<status status="PASS" starttime="20201112 10:15:01.292" endtime="20201112 10:15:01.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.309" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.308" endtime="20201112 10:15:01.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.312" level="INFO">VALUE: [1.2610999999999178e-05, 1.1638999999997318e-05, 1.1612000000001121e-05, 1.1652000000000884e-05, 1.1653000000000358e-05, 1.1638999999997318e-05, 1.2027999999997263e-05, 1.1653000000000358e-05, 1.1277999999999982e-05, 1.2014000000001163e-05, 1.1291999999999552e-05, 1.1639000000000788e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1625000000001218e-05, 1.1638000000001314e-05, 1.1639000000000788e-05, 1.1999999999998123e-05, 1.2361000000002398e-05, 1.1304999999999649e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1292000000003022e-05, 1.1653000000000358e-05, 1.1277999999999982e-05, 1.1639000000000788e-05, 1.1291999999999552e-05, 1.1291999999999552e-05, 1.1985999999998553e-05, 1.1291999999999552e-05, 1.1999999999998123e-05, 1.1291999999999552e-05, 1.1291000000000079e-05, 1.1999999999998123e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1277999999999982e-05, 1.1639000000000788e-05, 1.1638999999997318e-05, 1.1236000000001273e-05, 1.1638000000001314e-05, 1.1291000000000079e-05, 1.1987000000001496e-05, 1.1291999999999552e-05, 1.1639000000000788e-05, 1.1666000000000454e-05, 1.1639000000000788e-05, 1.1652999999996888e-05, 1.1652999999996888e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.310" endtime="20201112 10:15:01.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.306" endtime="20201112 10:15:01.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.315" endtime="20201112 10:15:01.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.319" endtime="20201112 10:15:01.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.317" endtime="20201112 10:15:01.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.314" endtime="20201112 10:15:01.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.952" endtime="20201112 10:15:01.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.952" endtime="20201112 10:15:01.339"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.348" endtime="20201112 10:15:01.362"></status>
</kw>
<msg timestamp="20201112 10:15:01.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.346" endtime="20201112 10:15:01.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.364" endtime="20201112 10:15:01.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.366" endtime="20201112 10:15:01.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.344" endtime="20201112 10:15:01.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.342" endtime="20201112 10:15:01.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.375" endtime="20201112 10:15:01.661"></status>
</kw>
<msg timestamp="20201112 10:15:01.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.374" endtime="20201112 10:15:01.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.665" endtime="20201112 10:15:01.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.674" endtime="20201112 10:15:01.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.371" endtime="20201112 10:15:01.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.369" endtime="20201112 10:15:01.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.680" level="INFO">${RESULT} = [{'time': 0.021969611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.021984167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:01.677" endtime="20201112 10:15:01.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.695" level="INFO">${ACCURACY} = {'source_diff': [1.4013999999999693e-05, 1.2708999999999637e-05, 1.2332999999999789e-05, 1.2431000000000247e-05, 1.2708000000000164e-05, 1.2375000000001968e-05, 1.2360999999998928e-05, 1.2291000000001...</msg>
<status status="PASS" starttime="20201112 10:15:01.681" endtime="20201112 10:15:01.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.699" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.698" endtime="20201112 10:15:01.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.702" level="INFO">VALUE: [1.4013999999999693e-05, 1.2708999999999637e-05, 1.2332999999999789e-05, 1.2431000000000247e-05, 1.2708000000000164e-05, 1.2375000000001968e-05, 1.2360999999998928e-05, 1.2291000000001079e-05, 1.3069000000000969e-05, 1.2347000000002828e-05, 1.2360999999998928e-05, 1.2708000000000164e-05, 1.2306000000000122e-05, 1.2347000000002828e-05, 1.2722999999999207e-05, 1.2708000000000164e-05, 1.2763999999998443e-05, 1.2666999999997458e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2694000000000594e-05, 1.2763999999998443e-05, 1.2666999999997458e-05, 1.2792000000001053e-05, 1.2708000000000164e-05, 1.2375000000001968e-05, 1.3069000000000969e-05, 1.2708000000000164e-05, 1.2346999999999358e-05, 1.2360999999998928e-05, 1.2360999999998928e-05, 1.2708000000000164e-05, 1.2375000000001968e-05, 1.2736999999998777e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2360999999998928e-05, 1.2778000000001483e-05, 1.2694000000000594e-05, 1.2346999999999358e-05, 1.2708999999999637e-05, 1.2624999999998748e-05, 1.2362000000001871e-05, 1.2695000000000067e-05, 1.2708000000000164e-05, 1.2375000000001968e-05, 1.2708000000000164e-05, 1.2735999999999303e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.700" endtime="20201112 10:15:01.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.696" endtime="20201112 10:15:01.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.705" endtime="20201112 10:15:01.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.709" endtime="20201112 10:15:01.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.707" endtime="20201112 10:15:01.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.704" endtime="20201112 10:15:01.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.340" endtime="20201112 10:15:01.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.340" endtime="20201112 10:15:01.729"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.738" endtime="20201112 10:15:01.753"></status>
</kw>
<msg timestamp="20201112 10:15:01.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.736" endtime="20201112 10:15:01.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.755" endtime="20201112 10:15:01.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.757" endtime="20201112 10:15:01.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.734" endtime="20201112 10:15:01.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.732" endtime="20201112 10:15:01.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.767" endtime="20201112 10:15:02.056"></status>
</kw>
<msg timestamp="20201112 10:15:02.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.766" endtime="20201112 10:15:02.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.060" endtime="20201112 10:15:02.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.069" endtime="20201112 10:15:02.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.763" endtime="20201112 10:15:02.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.761" endtime="20201112 10:15:02.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.075" level="INFO">${RESULT} = [{'time': 0.022014264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5069999999998973e-05, 'source_diff': 1.5069999999998973e-05}, {'time': 0.022029764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:02.072" endtime="20201112 10:15:02.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.089" level="INFO">${ACCURACY} = {'source_diff': [1.5069999999998973e-05, 1.3791999999998583e-05, 1.3402999999998638e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3403000000002108e-05, 1.3417000000001678e-05, 1.3415999999998...</msg>
<status status="PASS" starttime="20201112 10:15:02.076" endtime="20201112 10:15:02.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.093" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.092" endtime="20201112 10:15:02.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.096" level="INFO">VALUE: [1.5069999999998973e-05, 1.3791999999998583e-05, 1.3402999999998638e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3403000000002108e-05, 1.3417000000001678e-05, 1.3415999999998734e-05, 1.3417000000001678e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3431000000001247e-05, 1.3777999999999013e-05, 1.3430000000001774e-05, 1.3777999999999013e-05, 1.3416999999998208e-05, 1.3847000000000859e-05, 1.3415999999998734e-05, 1.3778000000002483e-05, 1.3806000000001623e-05, 1.3445000000000817e-05, 1.3431000000001247e-05, 1.3389000000002538e-05, 1.3429999999998304e-05, 1.3777999999999013e-05, 1.3778000000002483e-05, 1.3848000000000332e-05, 1.3416000000002204e-05, 1.3778000000002483e-05, 1.3763999999999443e-05, 1.3430999999997778e-05, 1.3791999999998583e-05, 1.3429999999998304e-05, 1.4138999999999818e-05, 1.3430999999997778e-05, 1.3360999999999928e-05, 1.3763999999999443e-05, 1.3417000000001678e-05, 1.3417000000001678e-05, 1.3402000000002634e-05, 1.3791999999998583e-05, 1.3374999999999498e-05, 1.3430000000001774e-05, 1.377699999999954e-05, 1.3736000000000304e-05, 1.4125000000000248e-05, 1.3749999999999873e-05, 1.3055999999997403e-05, 1.3444999999997348e-05, 1.4152999999999388e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.094" endtime="20201112 10:15:02.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.089" endtime="20201112 10:15:02.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.100" endtime="20201112 10:15:02.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.103" endtime="20201112 10:15:02.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.102" endtime="20201112 10:15:02.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.098" endtime="20201112 10:15:02.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.730" endtime="20201112 10:15:02.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.730" endtime="20201112 10:15:02.125"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.133" endtime="20201112 10:15:02.148"></status>
</kw>
<msg timestamp="20201112 10:15:02.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.132" endtime="20201112 10:15:02.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.150" endtime="20201112 10:15:02.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.152" endtime="20201112 10:15:02.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.129" endtime="20201112 10:15:02.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.127" endtime="20201112 10:15:02.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.162" endtime="20201112 10:15:02.449"></status>
</kw>
<msg timestamp="20201112 10:15:02.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.160" endtime="20201112 10:15:02.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.453" endtime="20201112 10:15:02.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.461" endtime="20201112 10:15:02.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.158" endtime="20201112 10:15:02.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.156" endtime="20201112 10:15:02.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.468" level="INFO">${RESULT} = [{'time': 0.021993931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5125000000001249e-05, 'source_diff': 1.5125000000001249e-05}, {'time': 0.02200975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:15:02.464" endtime="20201112 10:15:02.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.481" level="INFO">${ACCURACY} = {'source_diff': [1.5125000000001249e-05, 1.4528000000003233e-05, 1.4472000000001484e-05, 1.4514000000000193e-05, 1.4208000000001664e-05, 1.4902000000000665e-05, 1.484699999999839e-05, 1.44869999999970...</msg>
<status status="PASS" starttime="20201112 10:15:02.468" endtime="20201112 10:15:02.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.486" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.484" endtime="20201112 10:15:02.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.488" level="INFO">VALUE: [1.5125000000001249e-05, 1.4528000000003233e-05, 1.4472000000001484e-05, 1.4514000000000193e-05, 1.4208000000001664e-05, 1.4902000000000665e-05, 1.484699999999839e-05, 1.4486999999997058e-05, 1.484699999999839e-05, 1.4138999999999818e-05, 1.4903000000000138e-05, 1.5208999999998668e-05, 1.4152999999999388e-05, 1.486099999999796e-05, 1.4875000000000999e-05, 1.4500000000000624e-05, 1.4889000000000568e-05, 1.4541999999999333e-05, 1.4930999999999278e-05, 1.4500000000000624e-05, 1.4847000000001859e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.4833000000002289e-05, 1.4112000000000152e-05, 1.483299999999882e-05, 1.483299999999882e-05, 1.4903000000000138e-05, 1.4861000000001429e-05, 1.4514000000000193e-05, 1.4485999999997584e-05, 1.4847999999997863e-05, 1.4514000000000193e-05, 1.484699999999839e-05, 1.5208999999998668e-05, 1.4485999999997584e-05, 1.5195000000002568e-05, 1.4138999999999818e-05, 1.4847000000001859e-05, 1.4500000000000624e-05, 1.4499999999997154e-05, 1.484699999999839e-05, 1.4486000000001054e-05, 1.4514000000000193e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.4500000000000624e-05, 1.4875000000000999e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.487" endtime="20201112 10:15:02.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.482" endtime="20201112 10:15:02.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.491" endtime="20201112 10:15:02.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.495" endtime="20201112 10:15:02.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.493" endtime="20201112 10:15:02.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.490" endtime="20201112 10:15:02.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.125" endtime="20201112 10:15:02.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.125" endtime="20201112 10:15:02.516"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.524" endtime="20201112 10:15:02.540"></status>
</kw>
<msg timestamp="20201112 10:15:02.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.523" endtime="20201112 10:15:02.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.541" endtime="20201112 10:15:02.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.544" endtime="20201112 10:15:02.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.520" endtime="20201112 10:15:02.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.518" endtime="20201112 10:15:02.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.553" endtime="20201112 10:15:02.839"></status>
</kw>
<msg timestamp="20201112 10:15:02.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.552" endtime="20201112 10:15:02.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.843" endtime="20201112 10:15:02.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.851" endtime="20201112 10:15:02.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.549" endtime="20201112 10:15:02.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.548" endtime="20201112 10:15:02.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.858" level="INFO">${RESULT} = [{'time': 0.021884944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.654099999999839e-05, 'source_diff': 1.654099999999839e-05}, {'time': 0.021901625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:02.854" endtime="20201112 10:15:02.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.871" level="INFO">${ACCURACY} = {'source_diff': [1.654099999999839e-05, 1.5222000000002234e-05, 1.5985999999999084e-05, 1.5569999999999473e-05, 1.591699999999724e-05, 1.5221999999998764e-05, 1.5569999999999473e-05, 1.557000000000294...</msg>
<status status="PASS" starttime="20201112 10:15:02.859" endtime="20201112 10:15:02.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.876" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.875" endtime="20201112 10:15:02.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.878" level="INFO">VALUE: [1.654099999999839e-05, 1.5222000000002234e-05, 1.5985999999999084e-05, 1.5569999999999473e-05, 1.591699999999724e-05, 1.5221999999998764e-05, 1.5569999999999473e-05, 1.5570000000002943e-05, 1.5207999999999194e-05, 1.5931000000000278e-05, 1.5569e-05, 1.561099999999871e-05, 1.562499999999828e-05, 1.5569e-05, 1.5528000000000763e-05, 1.5514000000001194e-05, 1.590300000000114e-05, 1.591700000000071e-05, 1.5542000000000333e-05, 1.5207999999999194e-05, 1.5569e-05, 1.587499999999853e-05, 1.586100000000243e-05, 1.5194999999999098e-05, 1.591700000000071e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.5570000000002943e-05, 1.5500000000001624e-05, 1.5138000000001345e-05, 1.591700000000071e-05, 1.5569e-05, 1.5570000000002943e-05, 1.5569e-05, 1.5207999999999194e-05, 1.5901999999998195e-05, 1.5555999999999903e-05, 1.5208000000002664e-05, 1.5931000000000278e-05, 1.5193999999999624e-05, 1.5569999999999473e-05, 1.5486000000002054e-05, 1.5569999999999473e-05, 1.5555999999999903e-05, 1.5569e-05, 1.561100000000218e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.5207999999999194e-05, 1.554099999999739e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.877" endtime="20201112 10:15:02.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.872" endtime="20201112 10:15:02.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.881" endtime="20201112 10:15:02.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.885" endtime="20201112 10:15:02.904"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.883" endtime="20201112 10:15:02.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.880" endtime="20201112 10:15:02.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.517" endtime="20201112 10:15:02.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.516" endtime="20201112 10:15:02.906"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.914" endtime="20201112 10:15:02.929"></status>
</kw>
<msg timestamp="20201112 10:15:02.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.913" endtime="20201112 10:15:02.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.931" endtime="20201112 10:15:02.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.933" endtime="20201112 10:15:02.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.910" endtime="20201112 10:15:02.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.908" endtime="20201112 10:15:02.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.943" endtime="20201112 10:15:03.229"></status>
</kw>
<msg timestamp="20201112 10:15:03.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.942" endtime="20201112 10:15:03.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.233" endtime="20201112 10:15:03.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.241" endtime="20201112 10:15:03.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.939" endtime="20201112 10:15:03.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.937" endtime="20201112 10:15:03.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.248" level="INFO">${RESULT} = [{'time': 0.021929694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7222000000000764e-05, 'source_diff': 1.7222000000000764e-05}, {'time': 0.021948083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:03.245" endtime="20201112 10:15:03.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.262" level="INFO">${ACCURACY} = {'source_diff': [1.7222000000000764e-05, 1.6665999999998515e-05, 1.7013999999999224e-05, 1.665299999999842e-05, 1.6637999999999376e-05, 1.6262999999999e-05, 1.7056000000001403e-05, 1.668100000000103e-...</msg>
<status status="PASS" starttime="20201112 10:15:03.249" endtime="20201112 10:15:03.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.267" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.266" endtime="20201112 10:15:03.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.269" level="INFO">VALUE: [1.7222000000000764e-05, 1.6665999999998515e-05, 1.7013999999999224e-05, 1.665299999999842e-05, 1.6637999999999376e-05, 1.6262999999999e-05, 1.7056000000001403e-05, 1.668100000000103e-05, 1.662499999999928e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.663900000000232e-05, 1.6708000000000695e-05, 1.6277999999998044e-05, 1.663900000000232e-05, 1.627699999999857e-05, 1.668100000000103e-05, 1.665299999999842e-05, 1.6264000000001944e-05, 1.6278000000001513e-05, 1.7000000000003124e-05, 1.659700000000014e-05, 1.6986000000000084e-05, 1.627700000000204e-05, 1.663899999999885e-05, 1.6262999999999e-05, 1.663899999999885e-05, 1.6278000000001513e-05, 1.6637999999999376e-05, 1.6264000000001944e-05, 1.663899999999885e-05, 1.6263999999998474e-05, 1.662499999999928e-05, 1.7013999999999224e-05, 1.6208999999999668e-05, 1.6264000000001944e-05, 1.662500000000275e-05, 1.6292000000001083e-05, 1.663899999999885e-05, 1.662500000000275e-05, 1.6986000000000084e-05, 1.627699999999857e-05, 1.662499999999928e-05, 1.6221999999999764e-05, 1.663899999999885e-05, 1.633300000000032e-05, 1.6986000000000084e-05, 1.6277999999998044e-05, 1.662499999999928e-05, 1.6611999999999183e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.268" endtime="20201112 10:15:03.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.263" endtime="20201112 10:15:03.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.273" endtime="20201112 10:15:03.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.276" endtime="20201112 10:15:03.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.275" endtime="20201112 10:15:03.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.271" endtime="20201112 10:15:03.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.907" endtime="20201112 10:15:03.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.906" endtime="20201112 10:15:03.297"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.306" endtime="20201112 10:15:03.320"></status>
</kw>
<msg timestamp="20201112 10:15:03.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.304" endtime="20201112 10:15:03.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.322" endtime="20201112 10:15:03.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.324" endtime="20201112 10:15:03.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.302" endtime="20201112 10:15:03.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.300" endtime="20201112 10:15:03.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.334" endtime="20201112 10:15:03.619"></status>
</kw>
<msg timestamp="20201112 10:15:03.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.333" endtime="20201112 10:15:03.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.623" endtime="20201112 10:15:03.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.631" endtime="20201112 10:15:03.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.330" endtime="20201112 10:15:03.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.328" endtime="20201112 10:15:03.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.638" level="INFO">${RESULT} = [{'time': 0.021880542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.865300000000042e-05, 'source_diff': 1.865300000000042e-05}, {'time': 0.021900028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.635" endtime="20201112 10:15:03.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.651" level="INFO">${ACCURACY} = {'source_diff': [1.865300000000042e-05, 1.8069999999998504e-05, 1.7721999999997795e-05, 1.734700000000089e-05, 1.734700000000089e-05, 1.729099999999914e-05, 1.76950000000016e-05, 1.7693999999998655e-0...</msg>
<status status="PASS" starttime="20201112 10:15:03.639" endtime="20201112 10:15:03.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.656" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.655" endtime="20201112 10:15:03.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.658" level="INFO">VALUE: [1.865300000000042e-05, 1.8069999999998504e-05, 1.7721999999997795e-05, 1.734700000000089e-05, 1.734700000000089e-05, 1.729099999999914e-05, 1.76950000000016e-05, 1.7693999999998655e-05, 1.733299999999785e-05, 1.80690000000025e-05, 1.734699999999742e-05, 1.736100000000046e-05, 1.734700000000089e-05, 1.7693999999998655e-05, 1.734700000000089e-05, 1.7722000000001265e-05, 1.733300000000132e-05, 1.768100000000203e-05, 1.733300000000132e-05, 1.730499999999871e-05, 1.734699999999742e-05, 1.8056000000002403e-05, 1.7305999999998184e-05, 1.7693999999998655e-05, 1.7721999999997795e-05, 1.7707999999998225e-05, 1.7707999999998225e-05, 1.8056000000002403e-05, 1.7736000000000834e-05, 1.77089999999977e-05, 1.7693999999998655e-05, 1.768099999999856e-05, 1.7708000000001695e-05, 1.7693999999998655e-05, 1.766699999999899e-05, 1.7348000000000363e-05, 1.734700000000089e-05, 1.741699999999874e-05, 1.7708000000001695e-05, 1.769499999999813e-05, 1.734700000000089e-05, 1.811100000000121e-05, 1.7709000000001168e-05, 1.7721999999997795e-05, 1.736100000000046e-05, 1.7679999999999085e-05, 1.737500000000003e-05, 1.7722000000001265e-05, 1.740300000000264e-05, 1.734699999999742e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.657" endtime="20201112 10:15:03.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.652" endtime="20201112 10:15:03.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.662" endtime="20201112 10:15:03.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.665" endtime="20201112 10:15:03.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.664" endtime="20201112 10:15:03.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.660" endtime="20201112 10:15:03.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.298" endtime="20201112 10:15:03.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.298" endtime="20201112 10:15:03.686"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.695" endtime="20201112 10:15:03.710"></status>
</kw>
<msg timestamp="20201112 10:15:03.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.693" endtime="20201112 10:15:03.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.712" endtime="20201112 10:15:03.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.714" endtime="20201112 10:15:03.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.691" endtime="20201112 10:15:03.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.688" endtime="20201112 10:15:03.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.724" endtime="20201112 10:15:04.009"></status>
</kw>
<msg timestamp="20201112 10:15:04.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.722" endtime="20201112 10:15:04.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.013" endtime="20201112 10:15:04.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.021" endtime="20201112 10:15:04.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.720" endtime="20201112 10:15:04.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.718" endtime="20201112 10:15:04.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.028" level="INFO">${RESULT} = [{'time': 0.021988528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.937499999999856e-05, 'source_diff': 1.937499999999856e-05}, {'time': 0.022008972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.024" endtime="20201112 10:15:04.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.041" level="INFO">${ACCURACY} = {'source_diff': [1.937499999999856e-05, 1.911100000000221e-05, 1.833299999999885e-05, 1.844500000000235e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.8736000000001835e-0...</msg>
<status status="PASS" starttime="20201112 10:15:04.029" endtime="20201112 10:15:04.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.046" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.045" endtime="20201112 10:15:04.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.048" level="INFO">VALUE: [1.937499999999856e-05, 1.911100000000221e-05, 1.833299999999885e-05, 1.844500000000235e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.8736000000001835e-05, 1.881899999999978e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8471999999998545e-05, 1.8055999999998934e-05, 1.8777999999997075e-05, 1.8778000000000544e-05, 1.8777999999997075e-05, 1.8778000000000544e-05, 1.8778000000000544e-05, 1.8429999999999835e-05, 1.8486000000001584e-05, 1.9152000000001446e-05, 1.844500000000235e-05, 1.8764000000000974e-05, 1.879099999999717e-05, 1.8792000000000114e-05, 1.841699999999974e-05, 1.87769999999976e-05, 1.87769999999976e-05, 1.8473000000001488e-05, 1.8778000000000544e-05, 1.8693999999999655e-05, 1.87769999999976e-05, 1.841699999999974e-05, 1.880500000000021e-05, 1.843100000000278e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.8792000000000114e-05, 1.8443999999999405e-05, 1.8792000000000114e-05, 1.8749999999997935e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.8763999999997505e-05, 1.876299999999803e-05, 1.8792000000000114e-05, 1.8778000000000544e-05, 1.8416000000000265e-05, 1.8763999999997505e-05, 1.8778000000000544e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.047" endtime="20201112 10:15:04.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.042" endtime="20201112 10:15:04.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.051" endtime="20201112 10:15:04.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.055" endtime="20201112 10:15:04.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.053" endtime="20201112 10:15:04.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.050" endtime="20201112 10:15:04.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.687" endtime="20201112 10:15:04.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.686" endtime="20201112 10:15:04.076"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.084" endtime="20201112 10:15:04.099"></status>
</kw>
<msg timestamp="20201112 10:15:04.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.083" endtime="20201112 10:15:04.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.101" endtime="20201112 10:15:04.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.103" endtime="20201112 10:15:04.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.080" endtime="20201112 10:15:04.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.078" endtime="20201112 10:15:04.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.113" endtime="20201112 10:15:04.398"></status>
</kw>
<msg timestamp="20201112 10:15:04.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.112" endtime="20201112 10:15:04.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.402" endtime="20201112 10:15:04.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.410" endtime="20201112 10:15:04.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.109" endtime="20201112 10:15:04.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.107" endtime="20201112 10:15:04.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.417" level="INFO">${RESULT} = [{'time': 0.021958111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.009700000000017e-05, 'source_diff': 2.009700000000017e-05}, {'time': 0.021979, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:15:04.414" endtime="20201112 10:15:04.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.430" level="INFO">${ACCURACY} = {'source_diff': [2.009700000000017e-05, 1.9499999999998685e-05, 1.9430000000000835e-05, 1.981900000000078e-05, 1.9514000000001724e-05, 1.9487000000002058e-05, 1.984699999999992e-05, 1.9471999999999545...</msg>
<status status="PASS" starttime="20201112 10:15:04.418" endtime="20201112 10:15:04.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.435" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.434" endtime="20201112 10:15:04.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.437" level="INFO">VALUE: [2.009700000000017e-05, 1.9499999999998685e-05, 1.9430000000000835e-05, 1.981900000000078e-05, 1.9514000000001724e-05, 1.9487000000002058e-05, 1.984699999999992e-05, 1.9471999999999545e-05, 1.9527999999997825e-05, 1.9471999999999545e-05, 1.983300000000035e-05, 1.984699999999992e-05, 1.944499999999988e-05, 1.983299999999688e-05, 1.955499999999749e-05, 1.9485999999999115e-05, 1.9847999999999394e-05, 1.9499999999998685e-05, 1.9528000000001294e-05, 1.912499999999831e-05, 1.981900000000078e-05, 2.02090000000002e-05, 1.9485999999999115e-05, 1.9500000000002154e-05, 1.9069999999999504e-05, 1.9485999999999115e-05, 1.983300000000035e-05, 1.986099999999949e-05, 1.9792000000001114e-05, 1.9137999999998406e-05, 1.948699999999859e-05, 1.9486000000002585e-05, 1.9514000000001724e-05, 1.9485999999999115e-05, 1.984699999999992e-05, 1.9499999999998685e-05, 1.9471999999999545e-05, 1.9820000000000254e-05, 1.98890000000021e-05, 1.9500000000002154e-05, 1.986100000000296e-05, 1.9542000000000864e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.947299999999902e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9472000000003015e-05, 1.988899999999863e-05, 1.940300000000117e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.436" endtime="20201112 10:15:04.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.431" endtime="20201112 10:15:04.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.441" endtime="20201112 10:15:04.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.444" endtime="20201112 10:15:04.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.443" endtime="20201112 10:15:04.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.439" endtime="20201112 10:15:04.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.077" endtime="20201112 10:15:04.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.076" endtime="20201112 10:15:04.465"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.474" endtime="20201112 10:15:04.489"></status>
</kw>
<msg timestamp="20201112 10:15:04.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.472" endtime="20201112 10:15:04.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.491" endtime="20201112 10:15:04.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.493" endtime="20201112 10:15:04.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.470" endtime="20201112 10:15:04.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.468" endtime="20201112 10:15:04.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.503" endtime="20201112 10:15:04.788"></status>
</kw>
<msg timestamp="20201112 10:15:04.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.502" endtime="20201112 10:15:04.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.792" endtime="20201112 10:15:04.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.800" endtime="20201112 10:15:04.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.499" endtime="20201112 10:15:04.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.497" endtime="20201112 10:15:04.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.807" level="INFO">${RESULT} = [{'time': 0.021959792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1527999999999825e-05, 'source_diff': 2.1527999999999825e-05}, {'time': 0.021982569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:04.803" endtime="20201112 10:15:04.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.821" level="INFO">${ACCURACY} = {'source_diff': [2.1527999999999825e-05, 2.1222000000001295e-05, 2.055500000000196e-05, 2.0208000000000725e-05, 2.0929999999998866e-05, 2.054100000000239e-05, 2.0972000000001045e-05, 2.131999999999828...</msg>
<status status="PASS" starttime="20201112 10:15:04.808" endtime="20201112 10:15:04.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.825" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.824" endtime="20201112 10:15:04.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.828" level="INFO">VALUE: [2.1527999999999825e-05, 2.1222000000001295e-05, 2.055500000000196e-05, 2.0208000000000725e-05, 2.0929999999998866e-05, 2.054100000000239e-05, 2.0972000000001045e-05, 2.1319999999998285e-05, 2.091699999999877e-05, 2.1277999999999575e-05, 2.0542000000001864e-05, 2.09029999999992e-05, 2.013899999999888e-05, 2.059700000000067e-05, 2.093100000000181e-05, 2.091699999999877e-05, 2.056900000000153e-05, 2.056900000000153e-05, 2.0208000000000725e-05, 2.0542000000001864e-05, 2.0944000000001906e-05, 2.0263999999999005e-05, 2.09029999999992e-05, 2.019500000000063e-05, 2.0542000000001864e-05, 2.0472000000000545e-05, 2.09029999999992e-05, 2.055500000000196e-05, 2.019500000000063e-05, 2.091699999999877e-05, 2.0915999999999296e-05, 2.056899999999806e-05, 2.0500000000003155e-05, 2.09029999999992e-05, 2.0901999999999726e-05, 2.1207999999998256e-05, 2.0179999999998116e-05, 2.0555999999997965e-05, 2.055500000000196e-05, 2.055499999999849e-05, 2.091700000000224e-05, 2.0527999999998825e-05, 2.054099999999892e-05, 2.054100000000239e-05, 2.019500000000063e-05, 2.05830000000011e-05, 2.055500000000196e-05, 2.055499999999849e-05, 2.0513999999999255e-05, 2.0222000000000295e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.827" endtime="20201112 10:15:04.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.822" endtime="20201112 10:15:04.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.831" endtime="20201112 10:15:04.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.835" endtime="20201112 10:15:04.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.833" endtime="20201112 10:15:04.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.830" endtime="20201112 10:15:04.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.466" endtime="20201112 10:15:04.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.465" endtime="20201112 10:15:04.856"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.864" endtime="20201112 10:15:04.879"></status>
</kw>
<msg timestamp="20201112 10:15:04.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.863" endtime="20201112 10:15:04.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.881" endtime="20201112 10:15:04.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.883" endtime="20201112 10:15:04.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.860" endtime="20201112 10:15:04.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.858" endtime="20201112 10:15:04.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.893" endtime="20201112 10:15:05.178"></status>
</kw>
<msg timestamp="20201112 10:15:05.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021919806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.892" endtime="20201112 10:15:05.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021919806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.182" endtime="20201112 10:15:05.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.190" endtime="20201112 10:15:05.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.889" endtime="20201112 10:15:05.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.888" endtime="20201112 10:15:05.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.197" level="INFO">${RESULT} = [{'time': 0.021919806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.22229999999983e-05, 'source_diff': 2.22229999999983e-05}, {'time': 0.021943347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:05.193" endtime="20201112 10:15:05.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.210" level="INFO">${ACCURACY} = {'source_diff': [2.22229999999983e-05, 2.1985999999998146e-05, 2.1972000000002045e-05, 2.158299999999863e-05, 2.1985999999998146e-05, 2.233299999999938e-05, 2.162500000000081e-05, 2.1264000000000005e-...</msg>
<status status="PASS" starttime="20201112 10:15:05.198" endtime="20201112 10:15:05.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.215" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.214" endtime="20201112 10:15:05.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.217" level="INFO">VALUE: [2.22229999999983e-05, 2.1985999999998146e-05, 2.1972000000002045e-05, 2.158299999999863e-05, 2.1985999999998146e-05, 2.233299999999938e-05, 2.162500000000081e-05, 2.1264000000000005e-05, 2.1986000000001615e-05, 2.12770000000001e-05, 2.195899999999848e-05, 2.1277999999999575e-05, 2.1264000000000005e-05, 2.161100000000124e-05, 2.161100000000124e-05, 2.2305999999999715e-05, 2.163900000000038e-05, 2.162499999999734e-05, 2.162500000000081e-05, 2.165299999999995e-05, 2.1264000000000005e-05, 2.162499999999734e-05, 2.162499999999734e-05, 2.1277999999999575e-05, 2.2000000000001185e-05, 2.1986000000001615e-05, 2.162499999999734e-05, 2.1986000000001615e-05, 2.1319999999998285e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.1277999999999575e-05, 2.161100000000124e-05, 2.162500000000081e-05, 2.1249999999996966e-05, 2.162499999999734e-05, 2.1612000000000714e-05, 2.161099999999777e-05, 2.162500000000081e-05, 2.161099999999777e-05, 2.1250000000000435e-05, 2.1249999999996966e-05, 2.1985999999998146e-05, 2.2348000000001894e-05, 2.1235999999997396e-05, 2.162500000000081e-05, 2.130499999999924e-05, 2.1250000000000435e-05, 2.162500000000081e-05, 2.126300000000053e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.216" endtime="20201112 10:15:05.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.211" endtime="20201112 10:15:05.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.221" endtime="20201112 10:15:05.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.225" endtime="20201112 10:15:05.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.223" endtime="20201112 10:15:05.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.219" endtime="20201112 10:15:05.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.857" endtime="20201112 10:15:05.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.856" endtime="20201112 10:15:05.246"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.254" endtime="20201112 10:15:05.269"></status>
</kw>
<msg timestamp="20201112 10:15:05.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.252" endtime="20201112 10:15:05.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.271" endtime="20201112 10:15:05.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.273" endtime="20201112 10:15:05.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.250" endtime="20201112 10:15:05.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.248" endtime="20201112 10:15:05.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.283" endtime="20201112 10:15:05.568"></status>
</kw>
<msg timestamp="20201112 10:15:05.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.282" endtime="20201112 10:15:05.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.572" endtime="20201112 10:15:05.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.580" endtime="20201112 10:15:05.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.279" endtime="20201112 10:15:05.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.277" endtime="20201112 10:15:05.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.587" level="INFO">${RESULT} = [{'time': 0.022018931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3291999999997676e-05, 'source_diff': 2.3291999999997676e-05}, {'time': 0.022043458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:05.584" endtime="20201112 10:15:05.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.600" level="INFO">${ACCURACY} = {'source_diff': [2.3291999999997676e-05, 2.2693999999996717e-05, 2.3054999999997522e-05, 2.3054999999997522e-05, 2.236099999999852e-05, 2.233300000000285e-05, 2.2736000000002365e-05, 2.269499999999966...</msg>
<status status="PASS" starttime="20201112 10:15:05.588" endtime="20201112 10:15:05.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.605" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.604" endtime="20201112 10:15:05.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.607" level="INFO">VALUE: [2.3291999999997676e-05, 2.2693999999996717e-05, 2.3054999999997522e-05, 2.3054999999997522e-05, 2.236099999999852e-05, 2.233300000000285e-05, 2.2736000000002365e-05, 2.269499999999966e-05, 2.2348000000001894e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.231899999999981e-05, 2.2694000000000186e-05, 2.269499999999966e-05, 2.265300000000095e-05, 2.234699999999895e-05, 2.3056000000000465e-05, 2.231899999999981e-05, 2.270899999999923e-05, 2.237499999999809e-05, 2.2707999999999756e-05, 2.236099999999852e-05, 2.2348000000001894e-05, 2.268100000000009e-05, 2.2694000000000186e-05, 2.233299999999938e-05, 2.306900000000056e-05, 2.270899999999923e-05, 2.269499999999966e-05, 2.2333999999998855e-05, 2.233300000000285e-05, 2.2680000000000616e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2264000000001005e-05, 2.2305999999999715e-05, 2.238899999999766e-05, 2.265300000000095e-05, 2.3056000000000465e-05, 2.2319999999999285e-05, 2.2707999999999756e-05, 2.3042000000000895e-05, 2.261099999999877e-05, 2.2319999999999285e-05, 2.2999999999998716e-05, 2.2333999999998855e-05, 2.268100000000009e-05, 2.2707999999999756e-05, 2.2735999999998896e-05, 2.236100000000199e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.606" endtime="20201112 10:15:05.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.601" endtime="20201112 10:15:05.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.611" endtime="20201112 10:15:05.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.614" endtime="20201112 10:15:05.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.613" endtime="20201112 10:15:05.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.609" endtime="20201112 10:15:05.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.246" endtime="20201112 10:15:05.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.246" endtime="20201112 10:15:05.635"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.644" endtime="20201112 10:15:05.659"></status>
</kw>
<msg timestamp="20201112 10:15:05.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.642" endtime="20201112 10:15:05.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.661" endtime="20201112 10:15:05.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.663" endtime="20201112 10:15:05.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.640" endtime="20201112 10:15:05.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.638" endtime="20201112 10:15:05.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.673" endtime="20201112 10:15:05.959"></status>
</kw>
<msg timestamp="20201112 10:15:05.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022253944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.671" endtime="20201112 10:15:05.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022253944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.963" endtime="20201112 10:15:05.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.972" endtime="20201112 10:15:05.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.669" endtime="20201112 10:15:05.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.667" endtime="20201112 10:15:05.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.978" level="INFO">${RESULT} = [{'time': 0.022278333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.438899999999966e-05, 'source_diff': 2.438899999999966e-05}, {'time': 0.022303778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.975" endtime="20201112 10:15:05.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.992" level="INFO">${ACCURACY} = {'source_diff': [2.438899999999966e-05, 2.3777999999998606e-05, 2.34030000000017e-05, 2.3749999999999466e-05, 2.412500000000331e-05, 2.3763999999999036e-05, 2.373699999999937e-05, 2.338900000000213e-0...</msg>
<status status="PASS" starttime="20201112 10:15:05.979" endtime="20201112 10:15:05.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.996" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.995" endtime="20201112 10:15:05.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.999" level="INFO">VALUE: [2.438899999999966e-05, 2.3777999999998606e-05, 2.34030000000017e-05, 2.3749999999999466e-05, 2.412500000000331e-05, 2.3763999999999036e-05, 2.373699999999937e-05, 2.338900000000213e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.3792000000001645e-05, 2.338899999999866e-05, 2.3415999999998327e-05, 2.3763999999999036e-05, 2.34030000000017e-05, 2.338899999999866e-05, 2.3818999999997842e-05, 2.3776999999999132e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.3763999999999036e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.3763999999999036e-05, 2.3333999999999855e-05, 2.384700000000045e-05, 2.341700000000127e-05, 2.337500000000256e-05, 2.3042000000000895e-05, 2.3763999999999036e-05, 2.3749999999999466e-05, 2.34030000000017e-05, 2.344500000000041e-05, 2.3735999999999896e-05, 2.297299999999905e-05, 2.412499999999984e-05, 2.338899999999866e-05, 2.338900000000213e-05, 2.3818999999997842e-05, 2.3776999999999132e-05, 2.34030000000017e-05, 2.3764000000002505e-05, 2.3763999999999036e-05, 2.3068999999997092e-05, 2.3778000000002075e-05, 2.337499999999909e-05, 2.345899999999998e-05, 2.3763999999999036e-05, 2.34030000000017e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.997" endtime="20201112 10:15:06.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.993" endtime="20201112 10:15:06.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.002" endtime="20201112 10:15:06.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.006" endtime="20201112 10:15:06.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.004" endtime="20201112 10:15:06.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.001" endtime="20201112 10:15:06.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.636" endtime="20201112 10:15:06.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.636" endtime="20201112 10:15:06.027"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.035" endtime="20201112 10:15:06.050"></status>
</kw>
<msg timestamp="20201112 10:15:06.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.034" endtime="20201112 10:15:06.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.052" endtime="20201112 10:15:06.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.054" endtime="20201112 10:15:06.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.031" endtime="20201112 10:15:06.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.029" endtime="20201112 10:15:06.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.064" endtime="20201112 10:15:06.351"></status>
</kw>
<msg timestamp="20201112 10:15:06.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.063" endtime="20201112 10:15:06.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.355" endtime="20201112 10:15:06.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.363" endtime="20201112 10:15:06.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.060" endtime="20201112 10:15:06.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.058" endtime="20201112 10:15:06.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.370" level="INFO">${RESULT} = [{'time': 0.022168111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.615300000000098e-05, 'source_diff': 2.615300000000098e-05}, {'time': 0.022194667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:06.366" endtime="20201112 10:15:06.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.384" level="INFO">${ACCURACY} = {'source_diff': [2.615300000000098e-05, 2.4820000000001785e-05, 2.4137999999999937e-05, 2.487500000000059e-05, 2.4485999999997177e-05, 2.484700000000145e-05, 2.4096999999997232e-05, 2.445900000000098e...</msg>
<status status="PASS" starttime="20201112 10:15:06.371" endtime="20201112 10:15:06.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.389" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.388" endtime="20201112 10:15:06.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.391" level="INFO">VALUE: [2.615300000000098e-05, 2.4820000000001785e-05, 2.4137999999999937e-05, 2.487500000000059e-05, 2.4485999999997177e-05, 2.484700000000145e-05, 2.4096999999997232e-05, 2.445900000000098e-05, 2.4847999999997455e-05, 2.4471999999997607e-05, 2.4527999999999356e-05, 2.486100000000102e-05, 2.5207999999998787e-05, 2.445899999999751e-05, 2.486100000000102e-05, 2.412499999999984e-05, 2.4818999999998842e-05, 2.4472000000001076e-05, 2.4500000000000216e-05, 2.4472000000001076e-05, 2.4457999999998037e-05, 2.4834000000001355e-05, 2.4486000000000646e-05, 2.4430000000002366e-05, 2.4819999999998316e-05, 2.4500000000000216e-05, 2.4457999999998037e-05, 2.4791999999999176e-05, 2.483300000000188e-05, 2.4847999999997455e-05, 2.4486000000000646e-05, 2.488900000000016e-05, 2.448700000000012e-05, 2.4834000000001355e-05, 2.4486000000000646e-05, 2.447300000000055e-05, 2.4486000000000646e-05, 2.4471999999997607e-05, 2.4471999999997607e-05, 2.445900000000098e-05, 2.4471999999997607e-05, 2.4832999999998412e-05, 2.4486000000000646e-05, 2.483300000000188e-05, 2.4513999999999786e-05, 2.4555999999998496e-05, 2.4471999999997607e-05, 2.483300000000188e-05, 2.516699999999955e-05, 2.4458000000001506e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.390" endtime="20201112 10:15:06.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.385" endtime="20201112 10:15:06.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.395" endtime="20201112 10:15:06.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.398" endtime="20201112 10:15:06.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.397" endtime="20201112 10:15:06.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.393" endtime="20201112 10:15:06.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.027" endtime="20201112 10:15:06.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.027" endtime="20201112 10:15:06.419"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.428" endtime="20201112 10:15:06.443"></status>
</kw>
<msg timestamp="20201112 10:15:06.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.426" endtime="20201112 10:15:06.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.444" endtime="20201112 10:15:06.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.447" endtime="20201112 10:15:06.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.423" endtime="20201112 10:15:06.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.421" endtime="20201112 10:15:06.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.457" endtime="20201112 10:15:06.740"></status>
</kw>
<msg timestamp="20201112 10:15:06.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.455" endtime="20201112 10:15:06.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.744" endtime="20201112 10:15:06.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.753" endtime="20201112 10:15:06.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.453" endtime="20201112 10:15:06.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.451" endtime="20201112 10:15:06.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.759" level="INFO">${RESULT} = [{'time': 0.021864639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6500000000002216e-05, 'source_diff': 2.6500000000002216e-05}, {'time': 0.021892361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:06.756" endtime="20201112 10:15:06.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.773" level="INFO">${ACCURACY} = {'source_diff': [2.6500000000002216e-05, 2.590300000000073e-05, 2.5555000000000022e-05, 2.5555000000000022e-05, 2.588900000000116e-05, 2.6263999999998067e-05, 2.5500000000001216e-05, 2.590300000000073...</msg>
<status status="PASS" starttime="20201112 10:15:06.760" endtime="20201112 10:15:06.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.777" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.776" endtime="20201112 10:15:06.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.780" level="INFO">VALUE: [2.6500000000002216e-05, 2.590300000000073e-05, 2.5555000000000022e-05, 2.5555000000000022e-05, 2.588900000000116e-05, 2.6263999999998067e-05, 2.5500000000001216e-05, 2.590300000000073e-05, 2.5207999999998787e-05, 2.5555000000000022e-05, 2.5971999999999107e-05, 2.5569999999999066e-05, 2.588899999999769e-05, 2.5541999999999926e-05, 2.5471999999998607e-05, 2.5541999999999926e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.5541999999999926e-05, 2.5499999999997747e-05, 2.6292000000000676e-05, 2.5555999999999496e-05, 2.5527000000000882e-05, 2.5194000000002686e-05, 2.59170000000003e-05, 2.5193999999999217e-05, 2.5541999999999926e-05, 2.588899999999769e-05, 2.5582999999999162e-05, 2.5540999999996983e-05, 2.5555000000000022e-05, 2.5570000000002535e-05, 2.5860999999998552e-05, 2.5152000000000507e-05, 2.590300000000073e-05, 2.5541999999999926e-05, 2.5541000000000452e-05, 2.5555999999999496e-05, 2.5555000000000022e-05, 2.588900000000116e-05, 2.5556000000002965e-05, 2.5179999999999647e-05, 2.5526999999997413e-05, 2.520899999999826e-05, 2.5513999999997317e-05, 2.512499999999737e-05, 2.5957999999999537e-05, 2.518099999999912e-05, 2.5541999999999926e-05, 2.5500000000001216e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.778" endtime="20201112 10:15:06.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.774" endtime="20201112 10:15:06.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.783" endtime="20201112 10:15:06.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.787" endtime="20201112 10:15:06.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.785" endtime="20201112 10:15:06.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.782" endtime="20201112 10:15:06.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.420" endtime="20201112 10:15:06.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.419" endtime="20201112 10:15:06.807"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.816" endtime="20201112 10:15:06.831"></status>
</kw>
<msg timestamp="20201112 10:15:06.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.814" endtime="20201112 10:15:06.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.833" endtime="20201112 10:15:06.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.835" endtime="20201112 10:15:06.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.812" endtime="20201112 10:15:06.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.810" endtime="20201112 10:15:06.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.845" endtime="20201112 10:15:07.132"></status>
</kw>
<msg timestamp="20201112 10:15:07.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.843" endtime="20201112 10:15:07.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.136" endtime="20201112 10:15:07.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.144" endtime="20201112 10:15:07.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.841" endtime="20201112 10:15:07.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.839" endtime="20201112 10:15:07.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.151" level="INFO">${RESULT} = [{'time': 0.022249583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7929999999998928e-05, 'source_diff': 2.7929999999998928e-05}, {'time': 0.022278069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:07.148" endtime="20201112 10:15:07.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.165" level="INFO">${ACCURACY} = {'source_diff': [2.7929999999998928e-05, 2.661100000000277e-05, 2.6610999999999302e-05, 2.6597999999999206e-05, 2.62230000000023e-05, 2.6277999999997637e-05, 2.661100000000277e-05, 2.6250000000001966e...</msg>
<status status="PASS" starttime="20201112 10:15:07.152" endtime="20201112 10:15:07.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.169" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.168" endtime="20201112 10:15:07.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.172" level="INFO">VALUE: [2.7929999999998928e-05, 2.661100000000277e-05, 2.6610999999999302e-05, 2.6597999999999206e-05, 2.62230000000023e-05, 2.6277999999997637e-05, 2.661100000000277e-05, 2.6250000000001966e-05, 2.6985999999999677e-05, 2.6583999999999636e-05, 2.668100000000062e-05, 2.6610999999999302e-05, 2.6610999999999302e-05, 2.6596999999999732e-05, 2.7361000000000052e-05, 2.6277999999997637e-05, 2.6596999999999732e-05, 2.6624999999998872e-05, 2.6610999999999302e-05, 2.6249999999998497e-05, 2.6624999999998872e-05, 2.6665999999998108e-05, 2.6624999999998872e-05, 2.663900000000191e-05, 2.6610999999999302e-05, 2.6610999999999302e-05, 2.6638000000002438e-05, 2.6624999999998872e-05, 2.6249999999998497e-05, 2.662500000000234e-05, 2.6610999999999302e-05, 2.6306000000000246e-05, 2.666699999999758e-05, 2.6610999999999302e-05, 2.6569000000000592e-05, 2.6264000000001536e-05, 2.662500000000234e-05, 2.6596999999999732e-05, 2.6624999999998872e-05, 2.6250000000001966e-05, 2.662500000000234e-05, 2.6250000000001966e-05, 2.7026999999998913e-05, 2.6596999999999732e-05, 2.6262999999998593e-05, 2.6972000000000107e-05, 2.6278000000001106e-05, 2.6610999999999302e-05, 2.6624999999998872e-05, 2.6624999999998872e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.170" endtime="20201112 10:15:07.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.166" endtime="20201112 10:15:07.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.176" endtime="20201112 10:15:07.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.179" endtime="20201112 10:15:07.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.178" endtime="20201112 10:15:07.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.174" endtime="20201112 10:15:07.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.808" endtime="20201112 10:15:07.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.808" endtime="20201112 10:15:07.201"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.209" endtime="20201112 10:15:07.224"></status>
</kw>
<msg timestamp="20201112 10:15:07.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.208" endtime="20201112 10:15:07.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.226" endtime="20201112 10:15:07.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.228" endtime="20201112 10:15:07.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.205" endtime="20201112 10:15:07.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.203" endtime="20201112 10:15:07.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.238" endtime="20201112 10:15:07.524"></status>
</kw>
<msg timestamp="20201112 10:15:07.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.237" endtime="20201112 10:15:07.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.529" endtime="20201112 10:15:07.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.537" endtime="20201112 10:15:07.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.234" endtime="20201112 10:15:07.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.232" endtime="20201112 10:15:07.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.543" level="INFO">${RESULT} = [{'time': 0.022172639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8277999999999637e-05, 'source_diff': 2.8277999999999637e-05}, {'time': 0.022202194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:07.540" endtime="20201112 10:15:07.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.557" level="INFO">${ACCURACY} = {'source_diff': [2.8277999999999637e-05, 2.8041000000002952e-05, 2.7347999999999956e-05, 2.7749999999999997e-05, 2.7319000000001342e-05, 2.7263999999999067e-05, 2.7693999999998248e-05, 2.7319000000001...</msg>
<status status="PASS" starttime="20201112 10:15:07.544" endtime="20201112 10:15:07.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.561" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.560" endtime="20201112 10:15:07.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.564" level="INFO">VALUE: [2.8277999999999637e-05, 2.8041000000002952e-05, 2.7347999999999956e-05, 2.7749999999999997e-05, 2.7319000000001342e-05, 2.7263999999999067e-05, 2.7693999999998248e-05, 2.7319000000001342e-05, 2.7347000000000482e-05, 2.7319000000001342e-05, 2.7680000000002147e-05, 2.7679999999998678e-05, 2.7652999999999012e-05, 2.7347000000000482e-05, 2.7318999999997873e-05, 2.7333000000000912e-05, 2.7694000000001717e-05, 2.7694000000001717e-05, 2.769499999999772e-05, 2.7694000000001717e-05, 2.7276999999999163e-05, 2.7680000000002147e-05, 2.7679999999998678e-05, 2.8055999999998527e-05, 2.7347000000000482e-05, 2.768099999999815e-05, 2.7597000000000732e-05, 2.7722000000000857e-05, 2.766700000000205e-05, 2.7693999999998248e-05, 2.8055999999998527e-05, 2.8027999999999387e-05, 2.7598000000000206e-05, 2.768099999999815e-05, 2.7694000000001717e-05, 2.7306000000001246e-05, 2.7637999999999968e-05, 2.7319000000001342e-05, 2.7306000000001246e-05, 2.768099999999815e-05, 2.8083000000001662e-05, 2.769499999999772e-05, 2.7333000000000912e-05, 2.7332999999997443e-05, 2.769499999999772e-05, 2.7318999999997873e-05, 2.7680000000002147e-05, 2.8096999999997763e-05, 2.7651999999999538e-05, 2.7361000000000052e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.562" endtime="20201112 10:15:07.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.558" endtime="20201112 10:15:07.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.567" endtime="20201112 10:15:07.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.571" endtime="20201112 10:15:07.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.569" endtime="20201112 10:15:07.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.566" endtime="20201112 10:15:07.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.201" endtime="20201112 10:15:07.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.201" endtime="20201112 10:15:07.592"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.600" endtime="20201112 10:15:07.615"></status>
</kw>
<msg timestamp="20201112 10:15:07.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.599" endtime="20201112 10:15:07.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.617" endtime="20201112 10:15:07.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.619" endtime="20201112 10:15:07.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.596" endtime="20201112 10:15:07.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.594" endtime="20201112 10:15:07.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.629" endtime="20201112 10:15:07.915"></status>
</kw>
<msg timestamp="20201112 10:15:07.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.628" endtime="20201112 10:15:07.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.919" endtime="20201112 10:15:07.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.927" endtime="20201112 10:15:07.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.625" endtime="20201112 10:15:07.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.623" endtime="20201112 10:15:07.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.934" level="INFO">${RESULT} = [{'time': 0.022025097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9375000000001622e-05, 'source_diff': 2.9375000000001622e-05}, {'time': 0.022055708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:07.931" endtime="20201112 10:15:07.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.948" level="INFO">${ACCURACY} = {'source_diff': [2.9375000000001622e-05, 2.8736000000001427e-05, 2.8389000000000192e-05, 2.8415999999999858e-05, 2.8402000000000288e-05, 2.8764000000000567e-05, 2.8402000000000288e-05, 2.8402999999999...</msg>
<status status="PASS" starttime="20201112 10:15:07.935" endtime="20201112 10:15:07.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.953" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.952" endtime="20201112 10:15:07.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.955" level="INFO">VALUE: [2.9375000000001622e-05, 2.8736000000001427e-05, 2.8389000000000192e-05, 2.8415999999999858e-05, 2.8402000000000288e-05, 2.8764000000000567e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8750000000000997e-05, 2.8389000000000192e-05, 2.8763000000001093e-05, 2.8389000000000192e-05, 2.8693999999999248e-05, 2.8707999999998818e-05, 2.844499999999847e-05, 2.8374999999997152e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8429999999999428e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.8402000000000288e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.8402999999999762e-05, 2.8750000000000997e-05, 2.8055000000002522e-05, 2.8749999999997528e-05, 2.8389000000000192e-05, 2.8749999999997528e-05, 2.8763999999997097e-05, 2.8763999999997097e-05, 2.8764000000000567e-05, 2.8402999999999762e-05, 2.8749999999997528e-05, 2.8764000000000567e-05, 2.84309999999989e-05, 2.8763999999997097e-05, 2.8429999999999428e-05, 2.8375000000000622e-05, 2.8429999999999428e-05, 2.8082999999998193e-05, 2.8763999999997097e-05, 2.841699999999933e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.8388000000000718e-05, 2.870900000000176e-05, 2.8749999999997528e-05, 2.8763999999997097e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.954" endtime="20201112 10:15:07.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.949" endtime="20201112 10:15:07.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.959" endtime="20201112 10:15:07.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.962" endtime="20201112 10:15:07.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.961" endtime="20201112 10:15:07.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.957" endtime="20201112 10:15:07.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.592" endtime="20201112 10:15:07.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.592" endtime="20201112 10:15:07.983"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.992" endtime="20201112 10:15:08.007"></status>
</kw>
<msg timestamp="20201112 10:15:08.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.990" endtime="20201112 10:15:08.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.009" endtime="20201112 10:15:08.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.011" endtime="20201112 10:15:08.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.988" endtime="20201112 10:15:08.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.986" endtime="20201112 10:15:08.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.021" endtime="20201112 10:15:08.306"></status>
</kw>
<msg timestamp="20201112 10:15:08.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.019" endtime="20201112 10:15:08.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.311" endtime="20201112 10:15:08.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.319" endtime="20201112 10:15:08.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.017" endtime="20201112 10:15:08.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.015" endtime="20201112 10:15:08.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.325" level="INFO">${RESULT} = [{'time': 0.021953569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1138e-05, 'source_diff': 3.1138e-05}, {'time': 0.021985014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9846999999999513e...</msg>
<status status="PASS" starttime="20201112 10:15:08.322" endtime="20201112 10:15:08.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.339" level="INFO">${ACCURACY} = {'source_diff': [3.1138e-05, 2.9846999999999513e-05, 2.9832999999999943e-05, 2.9471999999999138e-05, 2.9471999999999138e-05, 2.916599999999714e-05, 2.947300000000208e-05, 2.9471999999999138e-05, 3.016...</msg>
<status status="PASS" starttime="20201112 10:15:08.326" endtime="20201112 10:15:08.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.343" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.342" endtime="20201112 10:15:08.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.346" level="INFO">VALUE: [3.1138e-05, 2.9846999999999513e-05, 2.9832999999999943e-05, 2.9471999999999138e-05, 2.9471999999999138e-05, 2.916599999999714e-05, 2.947300000000208e-05, 2.9471999999999138e-05, 3.0167000000001082e-05, 2.9833999999999417e-05, 2.9096999999998763e-05, 2.9832999999999943e-05, 2.9471999999999138e-05, 2.9486000000002177e-05, 2.9833999999999417e-05, 2.9485999999998708e-05, 2.9457999999999568e-05, 2.9486000000002177e-05, 3.0208000000000318e-05, 2.9056000000002996e-05, 2.9486000000002177e-05, 2.9457999999999568e-05, 2.9833999999999417e-05, 3.0235999999999458e-05, 2.9819000000000373e-05, 2.9430000000000428e-05, 2.9763999999998098e-05, 2.9818999999996904e-05, 2.9792000000000707e-05, 3.0167000000001082e-05, 2.9846999999999513e-05, 2.9847000000002982e-05, 2.9388000000001718e-05, 2.9833999999999417e-05, 2.9471999999999138e-05, 2.9485999999998708e-05, 2.9499999999998278e-05, 2.947299999999861e-05, 2.9832999999999943e-05, 2.9832999999999943e-05, 2.9833999999999417e-05, 2.9792000000000707e-05, 2.9471999999999138e-05, 2.9792000000000707e-05, 2.9862000000002026e-05, 2.9875000000002122e-05, 2.9471999999999138e-05, 2.9471999999999138e-05, 2.9112000000001276e-05, 2.9471999999999138e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.344" endtime="20201112 10:15:08.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.340" endtime="20201112 10:15:08.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.349" endtime="20201112 10:15:08.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.353" endtime="20201112 10:15:08.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.351" endtime="20201112 10:15:08.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.348" endtime="20201112 10:15:08.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.984" endtime="20201112 10:15:08.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.983" endtime="20201112 10:15:08.373"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.382" endtime="20201112 10:15:08.398"></status>
</kw>
<msg timestamp="20201112 10:15:08.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.381" endtime="20201112 10:15:08.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.400" endtime="20201112 10:15:08.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.402" endtime="20201112 10:15:08.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.378" endtime="20201112 10:15:08.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.376" endtime="20201112 10:15:08.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.412" endtime="20201112 10:15:08.697"></status>
</kw>
<msg timestamp="20201112 10:15:08.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.411" endtime="20201112 10:15:08.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.702" endtime="20201112 10:15:08.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.710" endtime="20201112 10:15:08.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.408" endtime="20201112 10:15:08.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.406" endtime="20201112 10:15:08.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.717" level="INFO">${RESULT} = [{'time': 0.022316986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.184700000000151e-05, 'source_diff': 3.184700000000151e-05}, {'time': 0.022349472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:08.713" endtime="20201112 10:15:08.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.730" level="INFO">${ACCURACY} = {'source_diff': [3.184700000000151e-05, 3.090299999999879e-05, 3.084700000000051e-05, 3.0847999999999987e-05, 3.090300000000226e-05, 3.017999999999771e-05, 3.090300000000226e-05, 3.052799999999842e-05...</msg>
<status status="PASS" starttime="20201112 10:15:08.718" endtime="20201112 10:15:08.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.735" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.733" endtime="20201112 10:15:08.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.737" level="INFO">VALUE: [3.184700000000151e-05, 3.090299999999879e-05, 3.084700000000051e-05, 3.0847999999999987e-05, 3.090300000000226e-05, 3.017999999999771e-05, 3.090300000000226e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.059700000000026e-05, 3.054200000000146e-05, 3.088899999999922e-05, 3.12639999999996e-05, 3.019500000000022e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.090200000000279e-05, 3.05700000000006e-05, 3.0584000000000167e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0512999999999374e-05, 3.019399999999728e-05, 3.090299999999879e-05, 3.0500000000002747e-05, 3.054200000000146e-05, 3.091700000000183e-05, 3.054200000000146e-05, 3.0152000000002038e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.055599999999756e-05, 3.0194000000000748e-05, 3.087499999999965e-05, 3.0540999999998514e-05, 3.091700000000183e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.0180000000001178e-05, 3.088900000000269e-05, 3.088899999999922e-05, 3.084700000000051e-05, 3.052800000000189e-05, 3.088899999999922e-05, 3.1290999999999264e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.055600000000103e-05, 3.0514000000002317e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.736" endtime="20201112 10:15:08.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.731" endtime="20201112 10:15:08.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.741" endtime="20201112 10:15:08.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.744" endtime="20201112 10:15:08.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.742" endtime="20201112 10:15:08.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.739" endtime="20201112 10:15:08.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.374" endtime="20201112 10:15:08.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.374" endtime="20201112 10:15:08.765"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.773" endtime="20201112 10:15:08.789"></status>
</kw>
<msg timestamp="20201112 10:15:08.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.772" endtime="20201112 10:15:08.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.790" endtime="20201112 10:15:08.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.793" endtime="20201112 10:15:08.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.769" endtime="20201112 10:15:08.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.767" endtime="20201112 10:15:08.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.803" endtime="20201112 10:15:09.090"></status>
</kw>
<msg timestamp="20201112 10:15:09.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.801" endtime="20201112 10:15:09.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.094" endtime="20201112 10:15:09.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.102" endtime="20201112 10:15:09.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.799" endtime="20201112 10:15:09.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.797" endtime="20201112 10:15:09.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.109" level="INFO">${RESULT} = [{'time': 0.022007972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.220800000000232e-05, 'source_diff': 3.220800000000232e-05}, {'time': 0.022041681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:09.105" endtime="20201112 10:15:09.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.122" level="INFO">${ACCURACY} = {'source_diff': [3.220800000000232e-05, 3.233400000000192e-05, 3.1610999999997363e-05, 3.16250000000004e-05, 3.1610999999997363e-05, 3.195800000000207e-05, 3.1596999999997794e-05, 3.161100000000083e-0...</msg>
<status status="PASS" starttime="20201112 10:15:09.110" endtime="20201112 10:15:09.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.127" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.126" endtime="20201112 10:15:09.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.129" level="INFO">VALUE: [3.220800000000232e-05, 3.233400000000192e-05, 3.1610999999997363e-05, 3.16250000000004e-05, 3.1610999999997363e-05, 3.195800000000207e-05, 3.1596999999997794e-05, 3.161100000000083e-05, 3.123600000000046e-05, 3.198600000000121e-05, 3.125000000000003e-05, 3.194399999999903e-05, 3.125000000000003e-05, 3.161100000000083e-05, 3.162499999999693e-05, 3.127799999999917e-05, 3.125000000000003e-05, 3.198700000000068e-05, 3.125000000000003e-05, 3.16250000000004e-05, 3.118000000000218e-05, 3.195800000000207e-05, 3.125000000000003e-05, 3.19579999999986e-05, 3.125000000000003e-05, 3.155599999999856e-05, 3.1596999999997794e-05, 3.193099999999893e-05, 3.125000000000003e-05, 3.197199999999817e-05, 3.16250000000004e-05, 3.125000000000003e-05, 3.16250000000004e-05, 3.197199999999817e-05, 3.1612000000000307e-05, 3.16250000000004e-05, 3.161100000000083e-05, 3.195800000000207e-05, 3.1612000000000307e-05, 3.195899999999807e-05, 3.125000000000003e-05, 3.159700000000126e-05, 3.123600000000046e-05, 3.198599999999774e-05, 3.1596999999997794e-05, 3.123600000000046e-05, 3.197300000000111e-05, 3.159700000000126e-05, 3.1598000000000737e-05, 3.195899999999807e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.128" endtime="20201112 10:15:09.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.123" endtime="20201112 10:15:09.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.133" endtime="20201112 10:15:09.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.136" endtime="20201112 10:15:09.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.135" endtime="20201112 10:15:09.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.131" endtime="20201112 10:15:09.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.766" endtime="20201112 10:15:09.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.765" endtime="20201112 10:15:09.157"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.167" endtime="20201112 10:15:09.183"></status>
</kw>
<msg timestamp="20201112 10:15:09.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.165" endtime="20201112 10:15:09.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.185" endtime="20201112 10:15:09.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.187" endtime="20201112 10:15:09.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.162" endtime="20201112 10:15:09.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.160" endtime="20201112 10:15:09.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.197" endtime="20201112 10:15:09.482"></status>
</kw>
<msg timestamp="20201112 10:15:09.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023545583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02358675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:09.195" endtime="20201112 10:15:09.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023545583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02358675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:09.487" endtime="20201112 10:15:09.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.495" endtime="20201112 10:15:09.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.193" endtime="20201112 10:15:09.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.191" endtime="20201112 10:15:09.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.501" level="INFO">${RESULT} = [{'time': 0.02358675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1167000000001674e-05, 'source_diff': 4.1167000000001674e-05}, {'time': 0.023630778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:15:09.498" endtime="20201112 10:15:09.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.516" level="INFO">${ACCURACY} = {'source_diff': [4.1167000000001674e-05, 4.180600000000187e-05, 4.1403000000002355e-05, 4.1694999999997845e-05, 4.1860999999997206e-05, 4.1486999999999774e-05, 4.155600000000162e-05, 4.172300000000045...</msg>
<status status="PASS" starttime="20201112 10:15:09.502" endtime="20201112 10:15:09.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.520" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.519" endtime="20201112 10:15:09.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.523" level="INFO">VALUE: [4.1167000000001674e-05, 4.180600000000187e-05, 4.1403000000002355e-05, 4.1694999999997845e-05, 4.1860999999997206e-05, 4.1486999999999774e-05, 4.155600000000162e-05, 4.1723000000000454e-05, 4.1582999999997816e-05, 4.1402999999998885e-05, 4.1375000000003215e-05, 4.152799999999901e-05, 4.14860000000003e-05, 4.168000000000227e-05, 4.1652999999999135e-05, 4.1431000000001494e-05, 4.159799999999686e-05, 4.166599999999923e-05, 4.154199999999858e-05, 4.143000000000202e-05, 4.1624999999999995e-05, 4.1388999999999315e-05, 4.1596999999997386e-05, 4.149999999999987e-05, 4.1512999999999967e-05, 4.1555000000002146e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.1846999999997636e-05, 4.1597000000000856e-05, 4.166599999999923e-05, 4.1875000000000245e-05, 4.1916999999998955e-05, 4.147200000000073e-05, 4.1653000000002605e-05, 4.1861000000000675e-05, 4.151399999999944e-05, 4.1361000000000175e-05, 4.155600000000162e-05, 4.1832999999998066e-05, 4.176399999999969e-05, 4.1374999999999745e-05, 4.176399999999969e-05, 4.1611000000000425e-05, 4.175000000000012e-05, 4.14860000000003e-05, 4.1861000000000675e-05, 4.177799999999926e-05, 4.1430999999998025e-05, 4.154199999999858e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.522" endtime="20201112 10:15:09.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.517" endtime="20201112 10:15:09.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.526" endtime="20201112 10:15:09.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.530" endtime="20201112 10:15:09.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.528" endtime="20201112 10:15:09.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.525" endtime="20201112 10:15:09.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.158" endtime="20201112 10:15:09.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.158" endtime="20201112 10:15:09.551"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.559" endtime="20201112 10:15:09.576"></status>
</kw>
<msg timestamp="20201112 10:15:09.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.558" endtime="20201112 10:15:09.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.577" endtime="20201112 10:15:09.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.580" endtime="20201112 10:15:09.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.555" endtime="20201112 10:15:09.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.553" endtime="20201112 10:15:09.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.590" endtime="20201112 10:15:09.875"></status>
</kw>
<msg timestamp="20201112 10:15:09.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.588" endtime="20201112 10:15:09.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.879" endtime="20201112 10:15:09.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.887" endtime="20201112 10:15:09.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.586" endtime="20201112 10:15:09.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.584" endtime="20201112 10:15:09.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.894" level="INFO">${RESULT} = [{'time': 0.022024125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.251399999999697e-05, 'source_diff': 4.251399999999697e-05}, {'time': 0.022069153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:09.890" endtime="20201112 10:15:09.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.907" level="INFO">${ACCURACY} = {'source_diff': [4.251399999999697e-05, 4.2625000000000995e-05, 4.275000000000112e-05, 4.275000000000112e-05, 4.247200000000173e-05, 4.284799999999811e-05, 4.276400000000069e-05, 4.2875000000001245e-0...</msg>
<status status="PASS" starttime="20201112 10:15:09.895" endtime="20201112 10:15:09.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.912" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.911" endtime="20201112 10:15:09.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.914" level="INFO">VALUE: [4.251399999999697e-05, 4.2625000000000995e-05, 4.275000000000112e-05, 4.275000000000112e-05, 4.247200000000173e-05, 4.284799999999811e-05, 4.276400000000069e-05, 4.2875000000001245e-05, 4.2709000000001884e-05, 4.2889000000000815e-05, 4.275000000000112e-05, 4.248599999999783e-05, 4.252800000000001e-05, 4.242999999999955e-05, 4.252800000000001e-05, 4.2624999999997526e-05, 4.2332999999998566e-05, 4.291599999999701e-05, 4.2304999999999426e-05, 4.2791000000000357e-05, 4.252699999999707e-05, 4.2582999999998816e-05, 4.2361000000001175e-05, 4.2639000000000565e-05, 4.2597000000001856e-05, 4.2832999999999066e-05, 4.2624999999997526e-05, 4.28059999999994e-05, 4.2597000000001856e-05, 4.2223000000000954e-05, 4.2804999999999926e-05, 4.254199999999958e-05, 4.2568999999999246e-05, 4.273600000000155e-05, 4.2625000000000995e-05, 4.245800000000216e-05, 4.2430999999999025e-05, 4.2680999999999275e-05, 4.245800000000216e-05, 4.2680999999999275e-05, 4.2361000000001175e-05, 4.281999999999897e-05, 4.2402999999999885e-05, 4.276399999999722e-05, 4.275000000000112e-05, 4.284799999999811e-05, 4.2624999999997526e-05, 4.251400000000044e-05, 4.2459000000001634e-05, 4.2847000000002106e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.913" endtime="20201112 10:15:09.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.908" endtime="20201112 10:15:09.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.918" endtime="20201112 10:15:09.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.921" endtime="20201112 10:15:09.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.920" endtime="20201112 10:15:09.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.916" endtime="20201112 10:15:09.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.551" endtime="20201112 10:15:09.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.551" endtime="20201112 10:15:09.942"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.951" endtime="20201112 10:15:09.967"></status>
</kw>
<msg timestamp="20201112 10:15:09.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.949" endtime="20201112 10:15:09.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.969" endtime="20201112 10:15:09.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.971" endtime="20201112 10:15:09.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.947" endtime="20201112 10:15:09.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.944" endtime="20201112 10:15:09.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.982" endtime="20201112 10:15:10.274"></status>
</kw>
<msg timestamp="20201112 10:15:10.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:09.980" endtime="20201112 10:15:10.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:10.278" endtime="20201112 10:15:10.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.286" endtime="20201112 10:15:10.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.977" endtime="20201112 10:15:10.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.976" endtime="20201112 10:15:10.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.293" level="INFO">${RESULT} = [{'time': 0.022135528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402800000000151e-05, 'source_diff': 4.402800000000151e-05}, {'time': 0.022181569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:10.290" endtime="20201112 10:15:10.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.306" level="INFO">${ACCURACY} = {'source_diff': [4.402800000000151e-05, 4.3805000000000927e-05, 4.34999999999984e-05, 4.36800000000008e-05, 4.334800000000208e-05, 4.355499999999721e-05, 4.3610999999998956e-05, 4.340200000000141e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:10.294" endtime="20201112 10:15:10.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.311" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.310" endtime="20201112 10:15:10.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.313" level="INFO">VALUE: [4.402800000000151e-05, 4.3805000000000927e-05, 4.34999999999984e-05, 4.36800000000008e-05, 4.334800000000208e-05, 4.355499999999721e-05, 4.3610999999998956e-05, 4.340200000000141e-05, 4.345799999999969e-05, 4.369400000000037e-05, 4.347199999999926e-05, 4.345799999999969e-05, 4.3582999999999816e-05, 4.3611000000002426e-05, 4.3819000000000496e-05, 4.3888999999998346e-05, 4.351400000000144e-05, 4.375000000000212e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.372199999999951e-05, 4.3596999999999386e-05, 4.374999999999865e-05, 4.3596999999999386e-05, 4.36800000000008e-05, 4.3860999999999206e-05, 4.327800000000076e-05, 4.3723000000002454e-05, 4.3417000000000455e-05, 4.3389000000001315e-05, 4.3861000000002676e-05, 4.351400000000144e-05, 4.373599999999908e-05, 4.345800000000316e-05, 4.381999999999997e-05, 4.3708999999999415e-05, 4.3874999999998776e-05, 4.3403000000000885e-05, 4.351400000000144e-05, 4.3917000000000955e-05, 4.3722999999998985e-05, 4.3860999999999206e-05, 4.356999999999972e-05, 4.366600000000123e-05, 4.3681000000000275e-05, 4.3610999999998956e-05, 4.341600000000098e-05, 4.376400000000169e-05, 4.3638999999998096e-05, 4.3902999999997916e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.312" endtime="20201112 10:15:10.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.307" endtime="20201112 10:15:10.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.324" endtime="20201112 10:15:10.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.327" endtime="20201112 10:15:10.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.326" endtime="20201112 10:15:10.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.322" endtime="20201112 10:15:10.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.943" endtime="20201112 10:15:10.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.942" endtime="20201112 10:15:10.348"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.357" endtime="20201112 10:15:10.373"></status>
</kw>
<msg timestamp="20201112 10:15:10.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.355" endtime="20201112 10:15:10.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.375" endtime="20201112 10:15:10.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.377" endtime="20201112 10:15:10.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.352" endtime="20201112 10:15:10.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.350" endtime="20201112 10:15:10.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.387" endtime="20201112 10:15:10.673"></status>
</kw>
<msg timestamp="20201112 10:15:10.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:10.386" endtime="20201112 10:15:10.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:10.677" endtime="20201112 10:15:10.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.686" endtime="20201112 10:15:10.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.383" endtime="20201112 10:15:10.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.381" endtime="20201112 10:15:10.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.692" level="INFO">${RESULT} = [{'time': 0.0221575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.022204514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:10.689" endtime="20201112 10:15:10.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.706" level="INFO">${ACCURACY} = {'source_diff': [4.4610999999999956e-05, 4.4389000000002315e-05, 4.4833000000001066e-05, 4.473600000000008e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.4653000000002135e-05, 4.43889999999988...</msg>
<status status="PASS" starttime="20201112 10:15:10.693" endtime="20201112 10:15:10.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.710" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.709" endtime="20201112 10:15:10.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.713" level="INFO">VALUE: [4.4610999999999956e-05, 4.4389000000002315e-05, 4.4833000000001066e-05, 4.473600000000008e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.4653000000002135e-05, 4.4388999999998846e-05, 4.4360999999999706e-05, 4.444400000000112e-05, 4.4610999999999956e-05, 4.473600000000008e-05, 4.4624999999999526e-05, 4.4666999999998236e-05, 4.451400000000244e-05, 4.4583000000000816e-05, 4.4375000000002746e-05, 4.4624999999999526e-05, 4.458400000000029e-05, 4.472200000000051e-05, 4.477700000000279e-05, 4.476399999999922e-05, 4.4652999999998666e-05, 4.4360999999999706e-05, 4.4874999999999776e-05, 4.4888999999999346e-05, 4.4360999999999706e-05, 4.429100000000186e-05, 4.447200000000026e-05, 4.472200000000051e-05, 4.455499999999821e-05, 4.451399999999897e-05, 4.467999999999833e-05, 4.4902999999998916e-05, 4.4638999999999096e-05, 4.4639000000002566e-05, 4.4597000000000386e-05, 4.4681000000001275e-05, 4.4333000000000566e-05, 4.4667000000001705e-05, 4.469400000000137e-05, 4.4610999999999956e-05, 4.4652999999998666e-05, 4.48060000000014e-05, 4.482000000000097e-05, 4.454100000000211e-05, 4.483400000000054e-05, 4.4473000000003204e-05, 4.4681000000001275e-05, 4.479199999999836e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.711" endtime="20201112 10:15:10.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.707" endtime="20201112 10:15:10.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.716" endtime="20201112 10:15:10.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.720" endtime="20201112 10:15:10.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.718" endtime="20201112 10:15:10.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.715" endtime="20201112 10:15:10.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.349" endtime="20201112 10:15:10.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.348" endtime="20201112 10:15:10.740"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.749" endtime="20201112 10:15:10.765"></status>
</kw>
<msg timestamp="20201112 10:15:10.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.747" endtime="20201112 10:15:10.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.766" endtime="20201112 10:15:10.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.768" endtime="20201112 10:15:10.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.745" endtime="20201112 10:15:10.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.743" endtime="20201112 10:15:10.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.779" endtime="20201112 10:15:11.065"></status>
</kw>
<msg timestamp="20201112 10:15:11.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:10.777" endtime="20201112 10:15:11.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:11.069" endtime="20201112 10:15:11.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.077" endtime="20201112 10:15:11.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.774" endtime="20201112 10:15:11.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.773" endtime="20201112 10:15:11.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.083" level="INFO">${RESULT} = [{'time': 0.02216625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5639000000000096e-05, 'source_diff': 4.5639000000000096e-05}, {'time': 0.022214333, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:15:11.080" endtime="20201112 10:15:11.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.098" level="INFO">${ACCURACY} = {'source_diff': [4.5639000000000096e-05, 4.541599999999951e-05, 4.575000000000065e-05, 4.552799999999954e-05, 4.574999999999718e-05, 4.590200000000044e-05, 4.58060000000024e-05, 4.5680999999998806e-05...</msg>
<status status="PASS" starttime="20201112 10:15:11.084" endtime="20201112 10:15:11.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.102" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.101" endtime="20201112 10:15:11.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.105" level="INFO">VALUE: [4.5639000000000096e-05, 4.541599999999951e-05, 4.575000000000065e-05, 4.552799999999954e-05, 4.574999999999718e-05, 4.590200000000044e-05, 4.58060000000024e-05, 4.5680999999998806e-05, 4.577799999999979e-05, 4.565200000000019e-05, 4.548599999999736e-05, 4.580499999999946e-05, 4.5680999999998806e-05, 4.56939999999989e-05, 4.55130000000005e-05, 4.570799999999847e-05, 4.579099999999989e-05, 4.570799999999847e-05, 4.551399999999997e-05, 4.541599999999951e-05, 4.547199999999779e-05, 4.575000000000065e-05, 4.5847000000001636e-05, 4.584699999999817e-05, 4.5597000000001386e-05, 4.548600000000083e-05, 4.5889000000000346e-05, 4.548600000000083e-05, 4.5611000000000956e-05, 4.554199999999911e-05, 4.5459000000001165e-05, 4.545800000000169e-05, 4.547200000000126e-05, 4.559799999999739e-05, 4.572200000000151e-05, 4.55000000000004e-05, 4.573599999999761e-05, 4.592999999999958e-05, 4.5583000000001817e-05, 4.534800000000061e-05, 4.55000000000004e-05, 4.5889000000000346e-05, 4.5709000000001415e-05, 4.55000000000004e-05, 4.5459000000001165e-05, 4.548600000000083e-05, 4.579199999999936e-05, 4.592999999999958e-05, 4.55000000000004e-05, 4.548600000000083e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.103" endtime="20201112 10:15:11.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.099" endtime="20201112 10:15:11.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.108" endtime="20201112 10:15:11.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.112" endtime="20201112 10:15:11.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.110" endtime="20201112 10:15:11.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.107" endtime="20201112 10:15:11.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.741" endtime="20201112 10:15:11.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.741" endtime="20201112 10:15:11.133"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.141" endtime="20201112 10:15:11.157"></status>
</kw>
<msg timestamp="20201112 10:15:11.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.140" endtime="20201112 10:15:11.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.158" endtime="20201112 10:15:11.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.161" endtime="20201112 10:15:11.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.137" endtime="20201112 10:15:11.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.135" endtime="20201112 10:15:11.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.171" endtime="20201112 10:15:11.457"></status>
</kw>
<msg timestamp="20201112 10:15:11.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02200875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:11.169" endtime="20201112 10:15:11.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02200875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:11.461" endtime="20201112 10:15:11.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.469" endtime="20201112 10:15:11.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.167" endtime="20201112 10:15:11.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.165" endtime="20201112 10:15:11.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.476" level="INFO">${RESULT} = [{'time': 0.02200875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.694400000000015e-05, 'source_diff': 4.694400000000015e-05}, {'time': 0.022057819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:11.472" endtime="20201112 10:15:11.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.489" level="INFO">${ACCURACY} = {'source_diff': [4.694400000000015e-05, 4.674999999999818e-05, 4.6667000000000236e-05, 4.6653000000000666e-05, 4.643000000000008e-05, 4.6389000000000846e-05, 4.65000000000014e-05, 4.6722999999998516e-...</msg>
<status status="PASS" starttime="20201112 10:15:11.477" endtime="20201112 10:15:11.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.494" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.493" endtime="20201112 10:15:11.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.496" level="INFO">VALUE: [4.694400000000015e-05, 4.674999999999818e-05, 4.6667000000000236e-05, 4.6653000000000666e-05, 4.643000000000008e-05, 4.6389000000000846e-05, 4.65000000000014e-05, 4.6722999999998516e-05, 4.6639000000001096e-05, 4.672199999999904e-05, 4.6375000000001276e-05, 4.651400000000097e-05, 4.632000000000247e-05, 4.688800000000187e-05, 4.677800000000079e-05, 4.641600000000051e-05, 4.6722999999998516e-05, 4.665199999999772e-05, 4.65269999999976e-05, 4.668000000000033e-05, 4.684699999999917e-05, 4.680500000000046e-05, 4.65000000000014e-05, 4.6611000000001956e-05, 4.672200000000251e-05, 4.654200000000011e-05, 4.668000000000033e-05, 4.683400000000254e-05, 4.679100000000089e-05, 4.6917000000000486e-05, 4.6139000000000596e-05, 4.677799999999732e-05, 4.684699999999917e-05, 4.659699999999892e-05, 4.6361000000001706e-05, 4.673599999999861e-05, 4.676400000000122e-05, 4.6389000000000846e-05, 4.662499999999806e-05, 4.6445000000002595e-05, 4.63329999999991e-05, 4.6708999999998946e-05, 4.652800000000054e-05, 4.679200000000036e-05, 4.662499999999806e-05, 4.698599999999886e-05, 4.676400000000122e-05, 4.645800000000269e-05, 4.6472999999998266e-05, 4.655499999999674e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.495" endtime="20201112 10:15:11.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.490" endtime="20201112 10:15:11.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.500" endtime="20201112 10:15:11.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.503" endtime="20201112 10:15:11.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.502" endtime="20201112 10:15:11.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.498" endtime="20201112 10:15:11.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.133" endtime="20201112 10:15:11.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.133" endtime="20201112 10:15:11.524"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.532" endtime="20201112 10:15:11.549"></status>
</kw>
<msg timestamp="20201112 10:15:11.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.531" endtime="20201112 10:15:11.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.550" endtime="20201112 10:15:11.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.553" endtime="20201112 10:15:11.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.528" endtime="20201112 10:15:11.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.526" endtime="20201112 10:15:11.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.563" endtime="20201112 10:15:11.848"></status>
</kw>
<msg timestamp="20201112 10:15:11.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.561" endtime="20201112 10:15:11.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.852" endtime="20201112 10:15:11.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.861" endtime="20201112 10:15:11.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.559" endtime="20201112 10:15:11.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.557" endtime="20201112 10:15:11.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.867" level="INFO">${RESULT} = [{'time': 0.022120264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.795800000000072e-05, 'source_diff': 4.795800000000072e-05}, {'time': 0.022170306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:11.864" endtime="20201112 10:15:11.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.881" level="INFO">${ACCURACY} = {'source_diff': [4.795800000000072e-05, 4.759799999999939e-05, 4.763899999999863e-05, 4.7722999999999516e-05, 4.738899999999838e-05, 4.75139999999985e-05, 4.730599999999696e-05, 4.770800000000047e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:11.868" endtime="20201112 10:15:11.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.885" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.884" endtime="20201112 10:15:11.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.888" level="INFO">VALUE: [4.795800000000072e-05, 4.759799999999939e-05, 4.763899999999863e-05, 4.7722999999999516e-05, 4.738899999999838e-05, 4.75139999999985e-05, 4.730599999999696e-05, 4.770800000000047e-05, 4.7722999999999516e-05, 4.759699999999992e-05, 4.7389000000001846e-05, 4.788800000000287e-05, 4.730600000000043e-05, 4.759699999999992e-05, 4.772200000000004e-05, 4.762499999999906e-05, 4.743000000000108e-05, 4.767999999999786e-05, 4.755500000000121e-05, 4.7361000000002706e-05, 4.774999999999918e-05, 4.78330000000006e-05, 4.776400000000222e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.783299999999713e-05, 4.770800000000047e-05, 4.747200000000326e-05, 4.784700000000017e-05, 4.757000000000025e-05, 4.7403000000001416e-05, 4.75139999999985e-05, 4.737499999999881e-05, 4.780599999999746e-05, 4.779200000000136e-05, 4.759699999999992e-05, 4.736099999999924e-05, 4.755600000000068e-05, 4.761099999999949e-05, 4.748599999999936e-05, 4.76529999999982e-05, 4.741699999999752e-05, 4.7389000000001846e-05, 4.762499999999906e-05, 4.748599999999936e-05, 4.738800000000237e-05, 4.727799999999782e-05, 4.756900000000078e-05, 4.781899999999756e-05, 4.776399999999875e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.886" endtime="20201112 10:15:11.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.882" endtime="20201112 10:15:11.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.891" endtime="20201112 10:15:11.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.895" endtime="20201112 10:15:11.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.893" endtime="20201112 10:15:11.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.890" endtime="20201112 10:15:11.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.525" endtime="20201112 10:15:11.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.524" endtime="20201112 10:15:11.916"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.924" endtime="20201112 10:15:11.940"></status>
</kw>
<msg timestamp="20201112 10:15:11.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.923" endtime="20201112 10:15:11.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.942" endtime="20201112 10:15:11.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.944" endtime="20201112 10:15:11.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.920" endtime="20201112 10:15:11.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.918" endtime="20201112 10:15:11.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.954" endtime="20201112 10:15:12.240"></status>
</kw>
<msg timestamp="20201112 10:15:12.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.953" endtime="20201112 10:15:12.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.244" endtime="20201112 10:15:12.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.253" endtime="20201112 10:15:12.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.950" endtime="20201112 10:15:12.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.948" endtime="20201112 10:15:12.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.260" level="INFO">${RESULT} = [{'time': 0.022266931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833400000000057e-05, 'source_diff': 4.833400000000057e-05}, {'time': 0.022317972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.256" endtime="20201112 10:15:12.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.274" level="INFO">${ACCURACY} = {'source_diff': [4.833400000000057e-05, 4.880499999999899e-05, 4.862500000000006e-05, 4.887500000000031e-05, 4.837499999999981e-05, 4.887500000000031e-05, 4.870800000000147e-05, 4.838899999999938e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:12.261" endtime="20201112 10:15:12.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.278" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.277" endtime="20201112 10:15:12.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.281" level="INFO">VALUE: [4.833400000000057e-05, 4.880499999999899e-05, 4.862500000000006e-05, 4.887500000000031e-05, 4.837499999999981e-05, 4.887500000000031e-05, 4.870800000000147e-05, 4.838899999999938e-05, 4.841699999999852e-05, 4.883299999999813e-05, 4.861100000000049e-05, 4.8681000000001806e-05, 4.861100000000049e-05, 4.838899999999938e-05, 4.813899999999913e-05, 4.840299999999895e-05, 4.863899999999963e-05, 4.877799999999932e-05, 4.869499999999791e-05, 4.849999999999993e-05, 4.852799999999907e-05, 4.861100000000049e-05, 4.869499999999791e-05, 4.849999999999993e-05, 4.834700000000067e-05, 4.863899999999963e-05, 4.873600000000061e-05, 4.851300000000003e-05, 4.849999999999993e-05, 4.845799999999775e-05, 4.888899999999988e-05, 4.892999999999911e-05, 4.875000000000018e-05, 4.844399999999818e-05, 4.887499999999684e-05, 4.872200000000104e-05, 4.840199999999947e-05, 4.875000000000018e-05, 4.849999999999993e-05, 4.836100000000024e-05, 4.859699999999745e-05, 4.8667000000002236e-05, 4.836100000000024e-05, 4.863899999999963e-05, 4.848600000000036e-05, 4.887500000000031e-05, 4.836100000000024e-05, 4.8181000000001306e-05, 4.88469999999977e-05, 4.891699999999902e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.279" endtime="20201112 10:15:12.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.275" endtime="20201112 10:15:12.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.284" endtime="20201112 10:15:12.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.288" endtime="20201112 10:15:12.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.286" endtime="20201112 10:15:12.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.283" endtime="20201112 10:15:12.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.916" endtime="20201112 10:15:12.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.916" endtime="20201112 10:15:12.309"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.317" endtime="20201112 10:15:12.334"></status>
</kw>
<msg timestamp="20201112 10:15:12.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.316" endtime="20201112 10:15:12.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.335" endtime="20201112 10:15:12.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.338" endtime="20201112 10:15:12.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.313" endtime="20201112 10:15:12.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.311" endtime="20201112 10:15:12.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.348" endtime="20201112 10:15:12.633"></status>
</kw>
<msg timestamp="20201112 10:15:12.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.346" endtime="20201112 10:15:12.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.637" endtime="20201112 10:15:12.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.645" endtime="20201112 10:15:12.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.344" endtime="20201112 10:15:12.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.342" endtime="20201112 10:15:12.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.652" level="INFO">${RESULT} = [{'time': 0.022411472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9153000000003166e-05, 'source_diff': 4.9153000000003166e-05}, {'time': 0.0224635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.648" endtime="20201112 10:15:12.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.666" level="INFO">${ACCURACY} = {'source_diff': [4.9153000000003166e-05, 4.961100000000149e-05, 4.984700000000217e-05, 4.937500000000081e-05, 4.990300000000045e-05, 4.955599999999921e-05, 4.955499999999974e-05, 4.952800000000007e-05...</msg>
<status status="PASS" starttime="20201112 10:15:12.653" endtime="20201112 10:15:12.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.671" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.670" endtime="20201112 10:15:12.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.673" level="INFO">VALUE: [4.9153000000003166e-05, 4.961100000000149e-05, 4.984700000000217e-05, 4.937500000000081e-05, 4.990300000000045e-05, 4.955599999999921e-05, 4.955499999999974e-05, 4.952800000000007e-05, 4.937500000000081e-05, 4.9458999999998227e-05, 4.955599999999921e-05, 4.955599999999921e-05, 4.958399999999835e-05, 4.943099999999909e-05, 4.967999999999986e-05, 4.943099999999909e-05, 4.950000000000093e-05, 4.973599999999814e-05, 4.9472999999997797e-05, 4.938900000000038e-05, 4.962499999999759e-05, 4.947200000000179e-05, 4.944399999999918e-05, 4.956900000000278e-05, 4.955600000000268e-05, 4.977800000000032e-05, 4.913800000000065e-05, 4.945799999999875e-05, 4.940200000000047e-05, 4.944399999999918e-05, 4.956899999999931e-05, 4.993000000000011e-05, 4.930499999999949e-05, 4.976400000000075e-05, 4.963900000000063e-05, 4.98200000000025e-05, 4.96530000000002e-05, 4.9195000000001876e-05, 4.973600000000161e-05, 4.963900000000063e-05, 4.968099999999934e-05, 4.980599999999946e-05, 4.972199999999857e-05, 4.9473000000001266e-05, 4.98469999999987e-05, 4.952800000000007e-05, 4.937500000000081e-05, 4.987499999999784e-05, 4.977800000000032e-05, 4.966699999999977e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.672" endtime="20201112 10:15:12.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.667" endtime="20201112 10:15:12.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.677" endtime="20201112 10:15:12.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.680" endtime="20201112 10:15:12.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.679" endtime="20201112 10:15:12.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.675" endtime="20201112 10:15:12.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.309" endtime="20201112 10:15:12.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.309" endtime="20201112 10:15:12.701"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.709" endtime="20201112 10:15:12.726"></status>
</kw>
<msg timestamp="20201112 10:15:12.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.708" endtime="20201112 10:15:12.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.727" endtime="20201112 10:15:12.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.730" endtime="20201112 10:15:12.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.705" endtime="20201112 10:15:12.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.703" endtime="20201112 10:15:12.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.740" endtime="20201112 10:15:13.025"></status>
</kw>
<msg timestamp="20201112 10:15:13.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.738" endtime="20201112 10:15:13.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.029" endtime="20201112 10:15:13.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.037" endtime="20201112 10:15:13.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.736" endtime="20201112 10:15:13.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.734" endtime="20201112 10:15:13.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.044" level="INFO">${RESULT} = [{'time': 0.022040389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.031999999999953e-05, 'source_diff': 5.031999999999953e-05}, {'time': 0.022093417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:13.040" endtime="20201112 10:15:13.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.057" level="INFO">${ACCURACY} = {'source_diff': [5.031999999999953e-05, 5.068100000000034e-05, 5.066600000000129e-05, 5.051399999999803e-05, 5.068100000000034e-05, 5.037500000000181e-05, 5.086200000000221e-05, 5.080499999999752e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:13.045" endtime="20201112 10:15:13.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.062" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.061" endtime="20201112 10:15:13.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.064" level="INFO">VALUE: [5.031999999999953e-05, 5.068100000000034e-05, 5.066600000000129e-05, 5.051399999999803e-05, 5.068100000000034e-05, 5.037500000000181e-05, 5.086200000000221e-05, 5.080499999999752e-05, 5.082000000000003e-05, 5.08469999999997e-05, 5.054199999999717e-05, 5.063899999999816e-05, 5.045799999999975e-05, 5.043000000000061e-05, 5.036099999999877e-05, 5.045800000000322e-05, 5.077800000000132e-05, 5.083300000000013e-05, 5.031900000000006e-05, 5.065299999999773e-05, 5.043000000000061e-05, 5.082000000000003e-05, 5.048599999999889e-05, 5.044400000000018e-05, 5.047199999999932e-05, 5.054200000000064e-05, 5.056900000000031e-05, 5.062499999999859e-05, 5.062499999999859e-05, 5.050000000000193e-05, 5.076399999999828e-05, 5.077800000000132e-05, 5.038900000000138e-05, 5.037499999999834e-05, 5.0709000000002946e-05, 5.093099999999712e-05, 5.074999999999871e-05, 5.076400000000175e-05, 5.06530000000012e-05, 5.086099999999927e-05, 5.083300000000013e-05, 5.045799999999975e-05, 5.0459000000002696e-05, 5.074999999999871e-05, 5.041600000000104e-05, 5.080500000000099e-05, 5.0429999999997144e-05, 5.0943999999997214e-05, 5.066600000000129e-05, 5.050000000000193e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.063" endtime="20201112 10:15:13.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.058" endtime="20201112 10:15:13.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.068" endtime="20201112 10:15:13.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.071" endtime="20201112 10:15:13.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.069" endtime="20201112 10:15:13.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.066" endtime="20201112 10:15:13.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.702" endtime="20201112 10:15:13.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.701" endtime="20201112 10:15:13.092"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.100" endtime="20201112 10:15:13.117"></status>
</kw>
<msg timestamp="20201112 10:15:13.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.099" endtime="20201112 10:15:13.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.119" endtime="20201112 10:15:13.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.121" endtime="20201112 10:15:13.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.096" endtime="20201112 10:15:13.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.094" endtime="20201112 10:15:13.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.131" endtime="20201112 10:15:13.425"></status>
</kw>
<msg timestamp="20201112 10:15:13.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.129" endtime="20201112 10:15:13.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.430" endtime="20201112 10:15:13.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.438" endtime="20201112 10:15:13.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.127" endtime="20201112 10:15:13.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.125" endtime="20201112 10:15:13.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.444" level="INFO">${RESULT} = [{'time': 0.022258014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.188899999999941e-05, 'source_diff': 5.188899999999941e-05}, {'time': 0.022312028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:13.441" endtime="20201112 10:15:13.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.458" level="INFO">${ACCURACY} = {'source_diff': [5.188899999999941e-05, 5.145900000000023e-05, 5.130600000000096e-05, 5.163900000000263e-05, 5.190299999999898e-05, 5.161100000000002e-05, 5.162499999999959e-05, 5.169499999999744e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:13.445" endtime="20201112 10:15:13.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.462" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.461" endtime="20201112 10:15:13.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.465" level="INFO">VALUE: [5.188899999999941e-05, 5.145900000000023e-05, 5.130600000000096e-05, 5.163900000000263e-05, 5.190299999999898e-05, 5.161100000000002e-05, 5.162499999999959e-05, 5.169499999999744e-05, 5.141700000000152e-05, 5.173699999999962e-05, 5.18340000000006e-05, 5.156899999999784e-05, 5.144500000000066e-05, 5.156900000000131e-05, 5.158300000000088e-05, 5.148599999999989e-05, 5.131999999999706e-05, 5.187499999999984e-05, 5.149999999999946e-05, 5.172200000000057e-05, 5.151399999999903e-05, 5.1708000000001e-05, 5.176399999999928e-05, 5.154200000000164e-05, 5.1665999999998824e-05, 5.147200000000032e-05, 5.13470000000002e-05, 5.16530000000022e-05, 5.145800000000075e-05, 5.140300000000195e-05, 5.163899999999916e-05, 5.18340000000006e-05, 5.132000000000053e-05, 5.180600000000146e-05, 5.1708000000001e-05, 5.16530000000022e-05, 5.15140000000025e-05, 5.177799999999885e-05, 5.174999999999971e-05, 5.191699999999855e-05, 5.187499999999984e-05, 5.15140000000025e-05, 5.152800000000207e-05, 5.149999999999946e-05, 5.177799999999885e-05, 5.156900000000131e-05, 5.159799999999992e-05, 5.177799999999885e-05, 5.141699999999805e-05, 5.174999999999971e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.463" endtime="20201112 10:15:13.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.459" endtime="20201112 10:15:13.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.468" endtime="20201112 10:15:13.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.472" endtime="20201112 10:15:13.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.470" endtime="20201112 10:15:13.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.467" endtime="20201112 10:15:13.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.093" endtime="20201112 10:15:13.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.092" endtime="20201112 10:15:13.492"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.501" endtime="20201112 10:15:13.518"></status>
</kw>
<msg timestamp="20201112 10:15:13.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.499" endtime="20201112 10:15:13.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.519" endtime="20201112 10:15:13.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.522" endtime="20201112 10:15:13.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.497" endtime="20201112 10:15:13.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.495" endtime="20201112 10:15:13.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.532" endtime="20201112 10:15:13.817"></status>
</kw>
<msg timestamp="20201112 10:15:13.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.530" endtime="20201112 10:15:13.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.822" endtime="20201112 10:15:13.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.830" endtime="20201112 10:15:13.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.528" endtime="20201112 10:15:13.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.526" endtime="20201112 10:15:13.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.836" level="INFO">${RESULT} = [{'time': 0.021996472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.30280000000001e-05, 'source_diff': 5.30280000000001e-05}, {'time': 0.0220515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201112 10:15:13.833" endtime="20201112 10:15:13.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.850" level="INFO">${ACCURACY} = {'source_diff': [5.30280000000001e-05, 5.268100000000234e-05, 5.287499999999737e-05, 5.272200000000157e-05, 5.276400000000028e-05, 5.251400000000003e-05, 5.2471999999997854e-05, 5.288900000000041e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:13.837" endtime="20201112 10:15:13.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.854" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.853" endtime="20201112 10:15:13.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.857" level="INFO">VALUE: [5.30280000000001e-05, 5.268100000000234e-05, 5.287499999999737e-05, 5.272200000000157e-05, 5.276400000000028e-05, 5.251400000000003e-05, 5.2471999999997854e-05, 5.288900000000041e-05, 5.257000000000178e-05, 5.276400000000028e-05, 5.250000000000046e-05, 5.269499999999844e-05, 5.270900000000148e-05, 5.269500000000191e-05, 5.2679999999999394e-05, 5.237500000000034e-05, 5.287500000000084e-05, 5.247299999999733e-05, 5.28609999999978e-05, 5.252700000000013e-05, 5.272300000000105e-05, 5.2429999999999144e-05, 5.284800000000117e-05, 5.2457999999998284e-05, 5.280500000000299e-05, 5.2430000000002613e-05, 5.2415999999999574e-05, 5.283299999999866e-05, 5.2457999999998284e-05, 5.28470000000017e-05, 5.234699999999773e-05, 5.23470000000012e-05, 5.273600000000114e-05, 5.236100000000077e-05, 5.275000000000071e-05, 5.2485999999997424e-05, 5.288900000000041e-05, 5.276400000000028e-05, 5.279199999999942e-05, 5.279199999999942e-05, 5.237500000000034e-05, 5.288900000000041e-05, 5.265299999999973e-05, 5.279199999999942e-05, 5.26669999999993e-05, 5.28609999999978e-05, 5.269499999999844e-05, 5.2402000000000004e-05, 5.232000000000153e-05, 5.281899999999909e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.855" endtime="20201112 10:15:13.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.851" endtime="20201112 10:15:13.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.860" endtime="20201112 10:15:13.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.864" endtime="20201112 10:15:13.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.862" endtime="20201112 10:15:13.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.859" endtime="20201112 10:15:13.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.493" endtime="20201112 10:15:13.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.493" endtime="20201112 10:15:13.885"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.893" endtime="20201112 10:15:13.910"></status>
</kw>
<msg timestamp="20201112 10:15:13.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.892" endtime="20201112 10:15:13.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.911" endtime="20201112 10:15:13.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.914" endtime="20201112 10:15:13.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.889" endtime="20201112 10:15:13.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.887" endtime="20201112 10:15:13.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.924" endtime="20201112 10:15:14.209"></status>
</kw>
<msg timestamp="20201112 10:15:14.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.922" endtime="20201112 10:15:14.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.213" endtime="20201112 10:15:14.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.221" endtime="20201112 10:15:14.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.919" endtime="20201112 10:15:14.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.918" endtime="20201112 10:15:14.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.228" level="INFO">${RESULT} = [{'time': 0.021908042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.393100000000012e-05, 'source_diff': 5.393100000000012e-05}, {'time': 0.021964069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.224" endtime="20201112 10:15:14.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.242" level="INFO">${ACCURACY} = {'source_diff': [5.393100000000012e-05, 5.387499999999837e-05, 5.372299999999858e-05, 5.361200000000149e-05, 5.348600000000189e-05, 5.352700000000113e-05, 5.3166000000000324e-05, 5.3471999999998854e-0...</msg>
<status status="PASS" starttime="20201112 10:15:14.229" endtime="20201112 10:15:14.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.247" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.246" endtime="20201112 10:15:14.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.249" level="INFO">VALUE: [5.393100000000012e-05, 5.387499999999837e-05, 5.372299999999858e-05, 5.361200000000149e-05, 5.348600000000189e-05, 5.352700000000113e-05, 5.3166000000000324e-05, 5.3471999999998854e-05, 5.383300000000313e-05, 5.337500000000134e-05, 5.361099999999855e-05, 5.3527999999997133e-05, 5.3652000000001254e-05, 5.3707999999999534e-05, 5.3402000000001004e-05, 5.355500000000027e-05, 5.387499999999837e-05, 5.362500000000159e-05, 5.387499999999837e-05, 5.390300000000098e-05, 5.341700000000005e-05, 5.344499999999919e-05, 5.338900000000091e-05, 5.36670000000003e-05, 5.381900000000009e-05, 5.343099999999962e-05, 5.356899999999984e-05, 5.393100000000012e-05, 5.3721999999999104e-05, 5.368099999999987e-05, 5.356899999999984e-05, 5.3485999999998424e-05, 5.356999999999931e-05, 5.350000000000146e-05, 5.33470000000022e-05, 5.3443999999999714e-05, 5.33340000000021e-05, 5.3429999999996675e-05, 5.33479999999982e-05, 5.359699999999898e-05, 5.337500000000134e-05, 5.384699999999923e-05, 5.336100000000177e-05, 5.363900000000116e-05, 5.373600000000214e-05, 5.387500000000184e-05, 5.3430000000000144e-05, 5.3430000000000144e-05, 5.33609999999983e-05, 5.384699999999923e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.248" endtime="20201112 10:15:14.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.243" endtime="20201112 10:15:14.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.253" endtime="20201112 10:15:14.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.256" endtime="20201112 10:15:14.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.254" endtime="20201112 10:15:14.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.251" endtime="20201112 10:15:14.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.885" endtime="20201112 10:15:14.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.885" endtime="20201112 10:15:14.277"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.286" endtime="20201112 10:15:14.304"></status>
</kw>
<msg timestamp="20201112 10:15:14.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.284" endtime="20201112 10:15:14.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.305" endtime="20201112 10:15:14.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.308" endtime="20201112 10:15:14.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.282" endtime="20201112 10:15:14.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.279" endtime="20201112 10:15:14.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.318" endtime="20201112 10:15:14.602"></status>
</kw>
<msg timestamp="20201112 10:15:14.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023156972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.316" endtime="20201112 10:15:14.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023156972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.606" endtime="20201112 10:15:14.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.614" endtime="20201112 10:15:14.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.314" endtime="20201112 10:15:14.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.312" endtime="20201112 10:15:14.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.621" level="INFO">${RESULT} = [{'time': 0.023156972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.412500000000209e-05, 'source_diff': 5.412500000000209e-05}, {'time': 0.023214056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.617" endtime="20201112 10:15:14.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.634" level="INFO">${ACCURACY} = {'source_diff': [5.412500000000209e-05, 5.468100000000087e-05, 5.480500000000152e-05, 5.441700000000105e-05, 5.463899999999869e-05, 5.483300000000066e-05, 5.4263999999998314e-05, 5.4708000000000534e-0...</msg>
<status status="PASS" starttime="20201112 10:15:14.622" endtime="20201112 10:15:14.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.639" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.638" endtime="20201112 10:15:14.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.641" level="INFO">VALUE: [5.412500000000209e-05, 5.468100000000087e-05, 5.480500000000152e-05, 5.441700000000105e-05, 5.463899999999869e-05, 5.483300000000066e-05, 5.4263999999998314e-05, 5.4708000000000534e-05, 5.4458000000000284e-05, 5.469500000000044e-05, 5.454200000000117e-05, 5.488899999999894e-05, 5.458399999999988e-05, 5.444500000000019e-05, 5.455600000000074e-05, 5.487499999999937e-05, 5.461099999999955e-05, 5.484700000000023e-05, 5.4749999999999244e-05, 5.477699999999891e-05, 5.470900000000001e-05, 5.4499999999998994e-05, 5.4708000000000534e-05, 5.4416000000001574e-05, 5.479099999999848e-05, 5.451400000000203e-05, 5.4763999999998814e-05, 5.484700000000023e-05, 5.437499999999887e-05, 5.4541999999997703e-05, 5.4722000000000104e-05, 5.466699999999783e-05, 5.437500000000234e-05, 5.468100000000087e-05, 5.46670000000013e-05, 5.437499999999887e-05, 5.4527999999998134e-05, 5.457000000000031e-05, 5.490300000000198e-05, 5.470900000000001e-05, 5.455600000000074e-05, 5.43609999999993e-05, 5.432000000000006e-05, 5.413900000000166e-05, 5.466699999999783e-05, 5.4513999999998564e-05, 5.480600000000099e-05, 5.470900000000001e-05, 5.4651999999998785e-05, 5.4708000000000534e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.640" endtime="20201112 10:15:14.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.635" endtime="20201112 10:15:14.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.645" endtime="20201112 10:15:14.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.648" endtime="20201112 10:15:14.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.647" endtime="20201112 10:15:14.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.643" endtime="20201112 10:15:14.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.278" endtime="20201112 10:15:14.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.277" endtime="20201112 10:15:14.669"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.677" endtime="20201112 10:15:14.694"></status>
</kw>
<msg timestamp="20201112 10:15:14.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.676" endtime="20201112 10:15:14.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.696" endtime="20201112 10:15:14.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.698" endtime="20201112 10:15:14.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.673" endtime="20201112 10:15:14.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.671" endtime="20201112 10:15:14.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.708" endtime="20201112 10:15:14.993"></status>
</kw>
<msg timestamp="20201112 10:15:14.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.707" endtime="20201112 10:15:14.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.998" endtime="20201112 10:15:15.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.006" endtime="20201112 10:15:15.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.704" endtime="20201112 10:15:15.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.702" endtime="20201112 10:15:15.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.012" level="INFO">${RESULT} = [{'time': 0.021911917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.590299999999951e-05, 'source_diff': 5.590299999999951e-05}, {'time': 0.021969931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:15.009" endtime="20201112 10:15:15.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.026" level="INFO">${ACCURACY} = {'source_diff': [5.590299999999951e-05, 5.569500000000144e-05, 5.5777999999999384e-05, 5.5541999999998704e-05, 5.573700000000015e-05, 5.5915999999999605e-05, 5.563899999999969e-05, 5.5750000000000244e...</msg>
<status status="PASS" starttime="20201112 10:15:15.013" endtime="20201112 10:15:15.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.031" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.030" endtime="20201112 10:15:15.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.033" level="INFO">VALUE: [5.590299999999951e-05, 5.569500000000144e-05, 5.5777999999999384e-05, 5.5541999999998704e-05, 5.573700000000015e-05, 5.5915999999999605e-05, 5.563899999999969e-05, 5.5750000000000244e-05, 5.530500000000202e-05, 5.588899999999994e-05, 5.576300000000034e-05, 5.5708000000001534e-05, 5.538899999999944e-05, 5.565299999999926e-05, 5.58749999999969e-05, 5.58610000000008e-05, 5.55549999999988e-05, 5.538900000000291e-05, 5.580600000000199e-05, 5.56809999999984e-05, 5.5763999999999814e-05, 5.58610000000008e-05, 5.559700000000098e-05, 5.5471999999997385e-05, 5.565299999999926e-05, 5.540299999999901e-05, 5.5305999999998023e-05, 5.547300000000033e-05, 5.58610000000008e-05, 5.5929999999999175e-05, 5.5305999999998023e-05, 5.5499999999999994e-05, 5.5736000000000674e-05, 5.538900000000291e-05, 5.530600000000149e-05, 5.581899999999862e-05, 5.558300000000141e-05, 5.5708000000001534e-05, 5.5722000000001104e-05, 5.540300000000248e-05, 5.5721999999997635e-05, 5.559700000000098e-05, 5.5499999999999994e-05, 5.565300000000273e-05, 5.537499999999987e-05, 5.561100000000055e-05, 5.5472000000000854e-05, 5.558300000000141e-05, 5.538899999999944e-05, 5.582000000000156e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.032" endtime="20201112 10:15:15.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.027" endtime="20201112 10:15:15.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.037" endtime="20201112 10:15:15.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.041" endtime="20201112 10:15:15.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.039" endtime="20201112 10:15:15.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.036" endtime="20201112 10:15:15.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.670" endtime="20201112 10:15:15.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.669" endtime="20201112 10:15:15.061"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.070" endtime="20201112 10:15:15.087"></status>
</kw>
<msg timestamp="20201112 10:15:15.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.069" endtime="20201112 10:15:15.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.088" endtime="20201112 10:15:15.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.091" endtime="20201112 10:15:15.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.066" endtime="20201112 10:15:15.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.064" endtime="20201112 10:15:15.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.101" endtime="20201112 10:15:15.386"></status>
</kw>
<msg timestamp="20201112 10:15:15.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.099" endtime="20201112 10:15:15.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.390" endtime="20201112 10:15:15.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.398" endtime="20201112 10:15:15.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.097" endtime="20201112 10:15:15.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.095" endtime="20201112 10:15:15.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.405" level="INFO">${RESULT} = [{'time': 0.022133292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6319999999998593e-05, 'source_diff': 5.6319999999998593e-05}, {'time': 0.022192319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:15.402" endtime="20201112 10:15:15.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.418" level="INFO">${ACCURACY} = {'source_diff': [5.6319999999998593e-05, 5.680500000000005e-05, 5.6819999999999093e-05, 5.651299999999762e-05, 5.6319999999998593e-05, 5.6443999999999245e-05, 5.640300000000001e-05, 5.6514000000000564...</msg>
<status status="PASS" starttime="20201112 10:15:15.406" endtime="20201112 10:15:15.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.423" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.422" endtime="20201112 10:15:15.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.425" level="INFO">VALUE: [5.6319999999998593e-05, 5.680500000000005e-05, 5.6819999999999093e-05, 5.651299999999762e-05, 5.6319999999998593e-05, 5.6443999999999245e-05, 5.640300000000001e-05, 5.6514000000000564e-05, 5.638899999999697e-05, 5.638900000000044e-05, 5.638899999999697e-05, 5.640300000000001e-05, 5.634699999999826e-05, 5.688900000000094e-05, 5.63610000000013e-05, 5.6750000000001244e-05, 5.640300000000001e-05, 5.669499999999897e-05, 5.6791999999999954e-05, 5.663900000000069e-05, 5.666699999999983e-05, 5.6541999999999704e-05, 5.6555999999999274e-05, 5.6569999999998843e-05, 5.6736000000001674e-05, 5.6764000000000814e-05, 5.6805999999999524e-05, 5.6750000000001244e-05, 5.66809999999994e-05, 5.6749999999997774e-05, 5.636200000000077e-05, 5.662499999999765e-05, 5.6514000000000564e-05, 5.6457999999998815e-05, 5.65549999999998e-05, 5.636099999999783e-05, 5.6666000000000355e-05, 5.6429999999999675e-05, 5.6887999999997996e-05, 5.6528000000000134e-05, 5.68749999999979e-05, 5.6707999999999065e-05, 5.680500000000005e-05, 5.659699999999851e-05, 5.684699999999876e-05, 5.665300000000026e-05, 5.6443999999999245e-05, 5.687500000000137e-05, 5.6679999999999925e-05, 5.6472000000001854e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.424" endtime="20201112 10:15:15.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.419" endtime="20201112 10:15:15.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.433" endtime="20201112 10:15:15.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.437" endtime="20201112 10:15:15.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.435" endtime="20201112 10:15:15.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.432" endtime="20201112 10:15:15.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.062" endtime="20201112 10:15:15.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.062" endtime="20201112 10:15:15.458"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.466" endtime="20201112 10:15:15.483"></status>
</kw>
<msg timestamp="20201112 10:15:15.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.465" endtime="20201112 10:15:15.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.485" endtime="20201112 10:15:15.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.487" endtime="20201112 10:15:15.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.462" endtime="20201112 10:15:15.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.460" endtime="20201112 10:15:15.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.497" endtime="20201112 10:15:15.782"></status>
</kw>
<msg timestamp="20201112 10:15:15.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.496" endtime="20201112 10:15:15.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.786" endtime="20201112 10:15:15.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.794" endtime="20201112 10:15:15.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.493" endtime="20201112 10:15:15.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.491" endtime="20201112 10:15:15.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.800" level="INFO">${RESULT} = [{'time': 0.022048819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7638000000002215e-05, 'source_diff': 5.7638000000002215e-05}, {'time': 0.022108847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:15.797" endtime="20201112 10:15:15.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.815" level="INFO">${ACCURACY} = {'source_diff': [5.7638000000002215e-05, 5.7778000000001384e-05, 5.76810000000004e-05, 5.791699999999761e-05, 5.761100000000255e-05, 5.73610000000023e-05, 5.75550000000008e-05, 5.7542000000000704e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:15.801" endtime="20201112 10:15:15.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.819" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.818" endtime="20201112 10:15:15.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.822" level="INFO">VALUE: [5.7638000000002215e-05, 5.7778000000001384e-05, 5.76810000000004e-05, 5.791699999999761e-05, 5.761100000000255e-05, 5.73610000000023e-05, 5.75550000000008e-05, 5.7542000000000704e-05, 5.734700000000273e-05, 5.788899999999847e-05, 5.765300000000126e-05, 5.784699999999976e-05, 5.7764000000001814e-05, 5.783300000000019e-05, 5.766700000000083e-05, 5.7721999999999635e-05, 5.756900000000037e-05, 5.786099999999933e-05, 5.733299999999969e-05, 5.78749999999989e-05, 5.736099999999883e-05, 5.770899999999954e-05, 5.73749999999984e-05, 5.762499999999865e-05, 5.759699999999951e-05, 5.7805999999997054e-05, 5.763900000000169e-05, 5.780500000000105e-05, 5.780499999999758e-05, 5.783300000000019e-05, 5.738900000000144e-05, 5.762500000000212e-05, 5.783300000000019e-05, 5.7499999999998525e-05, 5.763900000000169e-05, 5.76810000000004e-05, 5.78749999999989e-05, 5.781900000000062e-05, 5.779100000000148e-05, 5.738900000000144e-05, 5.73749999999984e-05, 5.770899999999954e-05, 5.762500000000212e-05, 5.7749999999998775e-05, 5.783300000000019e-05, 5.743100000000015e-05, 5.7736000000002674e-05, 5.7528000000001134e-05, 5.7569999999999844e-05, 5.738899999999797e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.820" endtime="20201112 10:15:15.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.816" endtime="20201112 10:15:15.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.825" endtime="20201112 10:15:15.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.829" endtime="20201112 10:15:15.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.827" endtime="20201112 10:15:15.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.824" endtime="20201112 10:15:15.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.459" endtime="20201112 10:15:15.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.458" endtime="20201112 10:15:15.850"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.858" endtime="20201112 10:15:15.875"></status>
</kw>
<msg timestamp="20201112 10:15:15.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.857" endtime="20201112 10:15:15.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.877" endtime="20201112 10:15:15.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.879" endtime="20201112 10:15:15.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.854" endtime="20201112 10:15:15.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.852" endtime="20201112 10:15:15.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.889" endtime="20201112 10:15:16.174"></status>
</kw>
<msg timestamp="20201112 10:15:16.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.887" endtime="20201112 10:15:16.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.178" endtime="20201112 10:15:16.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.187" endtime="20201112 10:15:16.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.885" endtime="20201112 10:15:16.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.883" endtime="20201112 10:15:16.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.193" level="INFO">${RESULT} = [{'time': 0.021953319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8651999999999316e-05, 'source_diff': 5.8651999999999316e-05}, {'time': 0.022014347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:16.190" endtime="20201112 10:15:16.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.207" level="INFO">${ACCURACY} = {'source_diff': [5.8651999999999316e-05, 5.8665999999998886e-05, 5.859700000000051e-05, 5.880500000000205e-05, 5.8708000000001065e-05, 5.8736000000000205e-05, 5.855499999999833e-05, 5.891700000000208e...</msg>
<status status="PASS" starttime="20201112 10:15:16.194" endtime="20201112 10:15:16.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.211" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.210" endtime="20201112 10:15:16.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.213" level="INFO">VALUE: [5.8651999999999316e-05, 5.8665999999998886e-05, 5.859700000000051e-05, 5.880500000000205e-05, 5.8708000000001065e-05, 5.8736000000000205e-05, 5.855499999999833e-05, 5.891700000000208e-05, 5.861100000000008e-05, 5.8570000000000844e-05, 5.831900000000112e-05, 5.862500000000312e-05, 5.865299999999879e-05, 5.886099999999686e-05, 5.8694000000001495e-05, 5.862499999999965e-05, 5.8485999999999955e-05, 5.888899999999947e-05, 5.863900000000269e-05, 5.844500000000072e-05, 5.8583999999996944e-05, 5.8485999999999955e-05, 5.88749999999999e-05, 5.88749999999999e-05, 5.884700000000076e-05, 5.851299999999962e-05, 5.838899999999897e-05, 5.858300000000094e-05, 5.856900000000137e-05, 5.8500000000002994e-05, 5.852699999999919e-05, 5.881900000000162e-05, 5.8763999999999345e-05, 5.866699999999836e-05, 5.8666000000002355e-05, 5.843099999999768e-05, 5.8750000000003244e-05, 5.8499999999999525e-05, 5.862499999999965e-05, 5.8541999999998234e-05, 5.840299999999854e-05, 5.8527999999998664e-05, 5.838899999999897e-05, 5.866700000000183e-05, 5.861100000000008e-05, 5.840300000000201e-05, 5.840299999999854e-05, 5.8848000000000233e-05, 5.8777999999998914e-05, 5.8584000000000414e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.212" endtime="20201112 10:15:16.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.207" endtime="20201112 10:15:16.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.217" endtime="20201112 10:15:16.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.220" endtime="20201112 10:15:16.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.219" endtime="20201112 10:15:16.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.215" endtime="20201112 10:15:16.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.851" endtime="20201112 10:15:16.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.850" endtime="20201112 10:15:16.241"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.250" endtime="20201112 10:15:16.267"></status>
</kw>
<msg timestamp="20201112 10:15:16.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.248" endtime="20201112 10:15:16.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.269" endtime="20201112 10:15:16.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.271" endtime="20201112 10:15:16.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.246" endtime="20201112 10:15:16.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.244" endtime="20201112 10:15:16.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.281" endtime="20201112 10:15:16.566"></status>
</kw>
<msg timestamp="20201112 10:15:16.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.279" endtime="20201112 10:15:16.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.570" endtime="20201112 10:15:16.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.578" endtime="20201112 10:15:16.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.277" endtime="20201112 10:15:16.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.275" endtime="20201112 10:15:16.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.585" level="INFO">${RESULT} = [{'time': 0.021911222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9708000000002065e-05, 'source_diff': 5.9708000000002065e-05}, {'time': 0.021973236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:16.581" endtime="20201112 10:15:16.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.598" level="INFO">${ACCURACY} = {'source_diff': [5.9708000000002065e-05, 5.95689999999989e-05, 5.9791999999999484e-05, 5.945900000000129e-05, 5.9764000000000345e-05, 5.9722000000001635e-05, 5.9528000000003134e-05, 5.941699999999911e...</msg>
<status status="PASS" starttime="20201112 10:15:16.586" endtime="20201112 10:15:16.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.603" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.602" endtime="20201112 10:15:16.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.605" level="INFO">VALUE: [5.9708000000002065e-05, 5.95689999999989e-05, 5.9791999999999484e-05, 5.945900000000129e-05, 5.9764000000000345e-05, 5.9722000000001635e-05, 5.9528000000003134e-05, 5.941699999999911e-05, 5.9486000000000955e-05, 5.9805999999999054e-05, 5.9457999999998346e-05, 5.9764000000000345e-05, 5.9584000000001414e-05, 5.9486000000000955e-05, 5.938899999999997e-05, 5.9833999999998194e-05, 5.940299999999954e-05, 5.9570000000001844e-05, 5.977700000000044e-05, 5.952700000000019e-05, 5.972300000000111e-05, 5.934699999999779e-05, 5.9443999999998776e-05, 5.9916000000000136e-05, 5.958299999999847e-05, 5.9458000000001815e-05, 5.956900000000237e-05, 5.958299999999847e-05, 5.9402000000000066e-05, 5.9777999999999915e-05, 5.931900000000212e-05, 5.9805999999999054e-05, 5.961100000000108e-05, 5.988900000000047e-05, 5.940299999999954e-05, 5.9764000000000345e-05, 5.940300000000301e-05, 5.990300000000004e-05, 5.983300000000219e-05, 5.940299999999954e-05, 5.965299999999979e-05, 5.938899999999997e-05, 5.945900000000129e-05, 5.988900000000047e-05, 5.9805999999999054e-05, 5.973700000000068e-05, 5.936100000000083e-05, 5.9637999999997277e-05, 5.9612000000000553e-05, 5.9514000000000095e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.604" endtime="20201112 10:15:16.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.599" endtime="20201112 10:15:16.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.609" endtime="20201112 10:15:16.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.612" endtime="20201112 10:15:16.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.611" endtime="20201112 10:15:16.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.607" endtime="20201112 10:15:16.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.242" endtime="20201112 10:15:16.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.241" endtime="20201112 10:15:16.633"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.641" endtime="20201112 10:15:16.658"></status>
</kw>
<msg timestamp="20201112 10:15:16.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.640" endtime="20201112 10:15:16.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.660" endtime="20201112 10:15:16.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.662" endtime="20201112 10:15:16.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.637" endtime="20201112 10:15:16.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.635" endtime="20201112 10:15:16.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.672" endtime="20201112 10:15:16.957"></status>
</kw>
<msg timestamp="20201112 10:15:16.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:16.671" endtime="20201112 10:15:16.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:16.961" endtime="20201112 10:15:16.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.969" endtime="20201112 10:15:16.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.668" endtime="20201112 10:15:16.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.666" endtime="20201112 10:15:16.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.976" level="INFO">${RESULT} = [{'time': 0.0219595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0764000000001345e-05, 'source_diff': 6.0764000000001345e-05}, {'time': 0.022022528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:16.972" endtime="20201112 10:15:16.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.989" level="INFO">${ACCURACY} = {'source_diff': [6.0764000000001345e-05, 6.0806000000000054e-05, 6.036100000000183e-05, 6.0819999999999624e-05, 6.068099999999993e-05, 6.045900000000229e-05, 6.045899999999882e-05, 6.0528000000000665e...</msg>
<status status="PASS" starttime="20201112 10:15:16.977" endtime="20201112 10:15:16.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.994" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.993" endtime="20201112 10:15:16.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.996" level="INFO">VALUE: [6.0764000000001345e-05, 6.0806000000000054e-05, 6.036100000000183e-05, 6.0819999999999624e-05, 6.068099999999993e-05, 6.045900000000229e-05, 6.045899999999882e-05, 6.0528000000000665e-05, 6.065300000000079e-05, 6.0542000000000235e-05, 6.068099999999993e-05, 6.083299999999972e-05, 6.0749999999998305e-05, 6.0722000000002635e-05, 6.0528000000000665e-05, 6.061099999999861e-05, 6.0485999999998485e-05, 6.0694000000000026e-05, 6.0514000000001095e-05, 6.03750000000014e-05, 6.037499999999793e-05, 6.0680000000000456e-05, 6.0499999999998055e-05, 6.0471999999998916e-05, 6.033299999999922e-05, 6.0792000000000485e-05, 6.0735999999998735e-05, 6.0792000000000485e-05, 6.040300000000054e-05, 6.0500000000001525e-05, 6.061099999999861e-05, 6.0443999999999776e-05, 6.059699999999904e-05, 6.043099999999968e-05, 6.0514000000001095e-05, 6.0806000000000054e-05, 6.03889999999975e-05, 6.0612000000001554e-05, 6.068099999999993e-05, 6.055500000000033e-05, 6.0499999999998055e-05, 6.058299999999947e-05, 6.043099999999968e-05, 6.0722000000002635e-05, 6.0902000000001566e-05, 6.0179999999999956e-05, 6.0736000000002205e-05, 6.0542000000000235e-05, 6.0651999999997847e-05, 6.0555999999999804e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.995" endtime="20201112 10:15:16.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.990" endtime="20201112 10:15:16.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.000" endtime="20201112 10:15:17.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.003" endtime="20201112 10:15:17.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.002" endtime="20201112 10:15:17.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.998" endtime="20201112 10:15:17.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.634" endtime="20201112 10:15:17.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.633" endtime="20201112 10:15:17.024"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.033" endtime="20201112 10:15:17.050"></status>
</kw>
<msg timestamp="20201112 10:15:17.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.031" endtime="20201112 10:15:17.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.052" endtime="20201112 10:15:17.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.054" endtime="20201112 10:15:17.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.029" endtime="20201112 10:15:17.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.027" endtime="20201112 10:15:17.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.064" endtime="20201112 10:15:17.355"></status>
</kw>
<msg timestamp="20201112 10:15:17.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.062" endtime="20201112 10:15:17.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.359" endtime="20201112 10:15:17.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.368" endtime="20201112 10:15:17.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.060" endtime="20201112 10:15:17.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.058" endtime="20201112 10:15:17.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.374" level="INFO">${RESULT} = [{'time': 0.021971403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.172200000000017e-05, 'source_diff': 6.172200000000017e-05}, {'time': 0.022035431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:17.371" endtime="20201112 10:15:17.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.389" level="INFO">${ACCURACY} = {'source_diff': [6.172200000000017e-05, 6.188900000000247e-05, 6.154200000000123e-05, 6.158399999999994e-05, 6.134799999999926e-05, 6.141600000000164e-05, 6.158399999999994e-05, 6.176399999999888e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:17.375" endtime="20201112 10:15:17.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.393" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.392" endtime="20201112 10:15:17.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.396" level="INFO">VALUE: [6.172200000000017e-05, 6.188900000000247e-05, 6.154200000000123e-05, 6.158399999999994e-05, 6.134799999999926e-05, 6.141600000000164e-05, 6.158399999999994e-05, 6.176399999999888e-05, 6.172200000000017e-05, 6.167999999999799e-05, 6.172200000000017e-05, 6.162499999999918e-05, 6.15140000000021e-05, 6.159700000000004e-05, 6.163899999999875e-05, 6.15560000000008e-05, 6.159700000000004e-05, 6.16950000000005e-05, 6.161099999999961e-05, 6.165299999999832e-05, 6.173599999999974e-05, 6.161099999999961e-05, 6.145899999999982e-05, 6.141700000000111e-05, 6.130600000000055e-05, 6.140200000000207e-05, 6.145899999999982e-05, 6.182000000000062e-05, 6.154099999999829e-05, 6.158300000000047e-05, 6.154200000000123e-05, 6.17629999999994e-05, 6.152700000000219e-05, 6.17499999999993e-05, 6.113799999999878e-05, 6.119400000000053e-05, 6.140300000000154e-05, 6.193100000000118e-05, 6.144400000000078e-05, 6.172200000000017e-05, 6.129100000000151e-05, 6.165299999999832e-05, 6.180599999999759e-05, 6.149999999999906e-05, 6.176399999999888e-05, 6.145899999999982e-05, 6.165300000000179e-05, 6.143099999999721e-05, 6.183300000000072e-05, 6.155599999999734e-05]</msg>
<status status="PASS" starttime="20201112 10:15:17.394" endtime="20201112 10:15:17.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.390" endtime="20201112 10:15:17.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.399" endtime="20201112 10:15:17.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.403" endtime="20201112 10:15:17.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.401" endtime="20201112 10:15:17.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.398" endtime="20201112 10:15:17.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.025" endtime="20201112 10:15:17.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.024" endtime="20201112 10:15:17.423"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.432" endtime="20201112 10:15:17.448"></status>
</kw>
<msg timestamp="20201112 10:15:17.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.430" endtime="20201112 10:15:17.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.450" endtime="20201112 10:15:17.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.452" endtime="20201112 10:15:17.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.428" endtime="20201112 10:15:17.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.426" endtime="20201112 10:15:17.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.462" endtime="20201112 10:15:17.746"></status>
</kw>
<msg timestamp="20201112 10:15:17.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:17.461" endtime="20201112 10:15:17.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:17.750" endtime="20201112 10:15:17.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.759" endtime="20201112 10:15:17.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.458" endtime="20201112 10:15:17.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.456" endtime="20201112 10:15:17.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.765" level="INFO">${RESULT} = [{'time': 0.02192675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.265299999999932e-05, 'source_diff': 6.265299999999932e-05}, {'time': 0.021991708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:17.762" endtime="20201112 10:15:17.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.779" level="INFO">${ACCURACY} = {'source_diff': [6.265299999999932e-05, 6.280499999999911e-05, 6.281900000000215e-05, 6.272200000000117e-05, 6.242999999999874e-05, 6.279199999999902e-05, 6.287500000000043e-05, 6.212499999999968e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:17.766" endtime="20201112 10:15:17.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.783" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.782" endtime="20201112 10:15:17.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.786" level="INFO">VALUE: [6.265299999999932e-05, 6.280499999999911e-05, 6.281900000000215e-05, 6.272200000000117e-05, 6.242999999999874e-05, 6.279199999999902e-05, 6.287500000000043e-05, 6.212499999999968e-05, 6.272200000000117e-05, 6.24439999999983e-05, 6.24439999999983e-05, 6.284700000000129e-05, 6.276399999999988e-05, 6.250000000000006e-05, 6.269399999999856e-05, 6.250000000000006e-05, 6.25279999999992e-05, 6.263899999999975e-05, 6.258400000000094e-05, 6.237499999999993e-05, 6.286100000000086e-05, 6.272200000000117e-05, 6.291599999999967e-05, 6.290299999999957e-05, 6.247299999999692e-05, 6.250000000000006e-05, 6.267999999999899e-05, 6.280500000000258e-05, 6.27630000000004e-05, 6.237499999999993e-05, 6.233299999999775e-05, 6.237499999999993e-05, 6.263899999999975e-05, 6.256899999999843e-05, 6.263899999999975e-05, 6.250000000000006e-05, 6.250000000000006e-05, 6.24439999999983e-05, 6.233300000000122e-05, 6.27500000000003e-05, 6.262500000000018e-05, 6.272200000000117e-05, 6.237499999999993e-05, 6.27500000000003e-05, 6.251399999999963e-05, 6.25279999999992e-05, 6.241699999999864e-05, 6.22080000000011e-05, 6.276399999999988e-05, 6.288799999999706e-05]</msg>
<status status="PASS" starttime="20201112 10:15:17.785" endtime="20201112 10:15:17.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.780" endtime="20201112 10:15:17.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.789" endtime="20201112 10:15:17.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.793" endtime="20201112 10:15:17.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.791" endtime="20201112 10:15:17.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.788" endtime="20201112 10:15:17.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.424" endtime="20201112 10:15:17.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.424" endtime="20201112 10:15:17.814"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.822" endtime="20201112 10:15:17.838"></status>
</kw>
<msg timestamp="20201112 10:15:17.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.821" endtime="20201112 10:15:17.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.840" endtime="20201112 10:15:17.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.842" endtime="20201112 10:15:17.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.818" endtime="20201112 10:15:17.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.816" endtime="20201112 10:15:17.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.852" endtime="20201112 10:15:18.137"></status>
</kw>
<msg timestamp="20201112 10:15:18.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02187975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:17.851" endtime="20201112 10:15:18.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02187975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:18.141" endtime="20201112 10:15:18.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.150" endtime="20201112 10:15:18.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.848" endtime="20201112 10:15:18.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.847" endtime="20201112 10:15:18.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.156" level="INFO">${RESULT} = [{'time': 0.02187975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.383299999999925e-05, 'source_diff': 6.383299999999925e-05}, {'time': 0.021945778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:18.153" endtime="20201112 10:15:18.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.170" level="INFO">${ACCURACY} = {'source_diff': [6.383299999999925e-05, 6.377800000000045e-05, 6.347199999999845e-05, 6.338899999999703e-05, 6.35280000000002e-05, 6.387499999999796e-05, 6.343099999999921e-05, 6.344499999999878e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:18.157" endtime="20201112 10:15:18.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.174" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.173" endtime="20201112 10:15:18.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.177" level="INFO">VALUE: [6.383299999999925e-05, 6.377800000000045e-05, 6.347199999999845e-05, 6.338899999999703e-05, 6.35280000000002e-05, 6.387499999999796e-05, 6.343099999999921e-05, 6.344499999999878e-05, 6.342999999999974e-05, 6.374999999999784e-05, 6.33479999999978e-05, 6.39159999999972e-05, 6.356899999999943e-05, 6.348599999999802e-05, 6.384700000000229e-05, 6.39159999999972e-05, 6.3582999999999e-05, 6.336099999999789e-05, 6.363899999999728e-05, 6.347200000000192e-05, 6.365300000000032e-05, 6.373599999999827e-05, 6.362499999999771e-05, 6.345800000000235e-05, 6.337500000000093e-05, 6.370900000000207e-05, 6.379200000000002e-05, 6.343100000000268e-05, 6.388899999999753e-05, 6.345900000000182e-05, 6.352799999999673e-05, 6.373700000000121e-05, 6.313900000000025e-05, 6.347200000000192e-05, 6.344499999999878e-05, 6.348600000000149e-05, 6.336200000000083e-05, 6.391600000000067e-05, 6.342999999999974e-05, 6.390300000000057e-05, 6.341600000000017e-05, 6.386099999999839e-05, 6.380500000000011e-05, 6.383299999999925e-05, 6.35280000000002e-05, 6.390300000000057e-05, 6.359700000000204e-05, 6.370799999999913e-05, 6.355599999999934e-05, 6.336099999999789e-05]</msg>
<status status="PASS" starttime="20201112 10:15:18.175" endtime="20201112 10:15:18.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.171" endtime="20201112 10:15:18.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.180" endtime="20201112 10:15:18.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.184" endtime="20201112 10:15:18.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.182" endtime="20201112 10:15:18.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.179" endtime="20201112 10:15:18.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.814" endtime="20201112 10:15:18.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.814" endtime="20201112 10:15:18.205"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.213" endtime="20201112 10:15:18.229"></status>
</kw>
<msg timestamp="20201112 10:15:18.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.211" endtime="20201112 10:15:18.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.231" endtime="20201112 10:15:18.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.233" endtime="20201112 10:15:18.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.209" endtime="20201112 10:15:18.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.207" endtime="20201112 10:15:18.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.243" endtime="20201112 10:15:18.529"></status>
</kw>
<msg timestamp="20201112 10:15:18.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914458, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:15:18.242" endtime="20201112 10:15:18.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914458, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:15:18.533" endtime="20201112 10:15:18.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.541" endtime="20201112 10:15:18.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.239" endtime="20201112 10:15:18.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.238" endtime="20201112 10:15:18.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.548" level="INFO">${RESULT} = [{'time': 0.021914458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.445799999999988e-05, 'source_diff': 6.445799999999988e-05}, {'time': 0.021981458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:18.544" endtime="20201112 10:15:18.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.561" level="INFO">${ACCURACY} = {'source_diff': [6.445799999999988e-05, 6.436099999999889e-05, 6.440300000000107e-05, 6.477700000000197e-05, 6.44159999999977e-05, 6.466699999999742e-05, 6.447199999999945e-05, 6.456900000000043e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:18.549" endtime="20201112 10:15:18.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.566" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.565" endtime="20201112 10:15:18.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.568" level="INFO">VALUE: [6.445799999999988e-05, 6.436099999999889e-05, 6.440300000000107e-05, 6.477700000000197e-05, 6.44159999999977e-05, 6.466699999999742e-05, 6.447199999999945e-05, 6.456900000000043e-05, 6.455499999999739e-05, 6.465300000000132e-05, 6.468100000000046e-05, 6.450000000000206e-05, 6.49029999999981e-05, 6.438899999999803e-05, 6.487499999999896e-05, 6.450000000000206e-05, 6.488899999999853e-05, 6.429200000000052e-05, 6.448600000000249e-05, 6.462499999999871e-05, 6.447299999999892e-05, 6.477700000000197e-05, 6.437499999999846e-05, 6.459699999999957e-05, 6.450000000000206e-05, 6.44440000000003e-05, 6.43479999999988e-05, 6.436099999999889e-05, 6.44020000000016e-05, 6.440300000000107e-05, 6.487499999999896e-05, 6.469400000000056e-05, 6.430500000000061e-05, 6.450000000000206e-05, 6.470800000000013e-05, 6.462499999999871e-05, 6.462499999999871e-05, 6.448599999999902e-05, 6.45280000000012e-05, 6.448599999999902e-05, 6.466699999999742e-05, 6.479200000000102e-05, 6.443100000000021e-05, 6.490300000000157e-05, 6.452799999999773e-05, 6.487499999999896e-05, 6.483399999999973e-05, 6.466600000000142e-05, 6.43479999999988e-05, 6.495799999999691e-05]</msg>
<status status="PASS" starttime="20201112 10:15:18.567" endtime="20201112 10:15:18.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.562" endtime="20201112 10:15:18.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.572" endtime="20201112 10:15:18.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.575" endtime="20201112 10:15:18.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.573" endtime="20201112 10:15:18.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.570" endtime="20201112 10:15:18.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.205" endtime="20201112 10:15:18.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.205" endtime="20201112 10:15:18.596"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.604" endtime="20201112 10:15:18.622"></status>
</kw>
<msg timestamp="20201112 10:15:18.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.603" endtime="20201112 10:15:18.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.624" endtime="20201112 10:15:18.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.626" endtime="20201112 10:15:18.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.600" endtime="20201112 10:15:18.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.598" endtime="20201112 10:15:18.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.636" endtime="20201112 10:15:18.921"></status>
</kw>
<msg timestamp="20201112 10:15:18.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.635" endtime="20201112 10:15:18.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.925" endtime="20201112 10:15:18.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.933" endtime="20201112 10:15:18.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.632" endtime="20201112 10:15:18.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.631" endtime="20201112 10:15:18.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.940" level="INFO">${RESULT} = [{'time': 0.021895958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.581900000000168e-05, 'source_diff': 6.581900000000168e-05}, {'time': 0.021963972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:18.936" endtime="20201112 10:15:18.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.954" level="INFO">${ACCURACY} = {'source_diff': [6.581900000000168e-05, 6.554099999999882e-05, 6.551399999999916e-05, 6.547199999999698e-05, 6.562500000000318e-05, 6.563899999999928e-05, 6.580500000000211e-05, 6.579199999999855e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:18.941" endtime="20201112 10:15:18.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.959" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.958" endtime="20201112 10:15:18.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.961" level="INFO">VALUE: [6.581900000000168e-05, 6.554099999999882e-05, 6.551399999999916e-05, 6.547199999999698e-05, 6.562500000000318e-05, 6.563899999999928e-05, 6.580500000000211e-05, 6.579199999999855e-05, 6.544399999999784e-05, 6.548600000000002e-05, 6.533299999999728e-05, 6.563899999999928e-05, 6.533300000000075e-05, 6.545900000000035e-05, 6.551299999999968e-05, 6.573600000000027e-05, 6.57639999999994e-05, 6.537500000000293e-05, 6.58480000000003e-05, 6.548699999999949e-05, 6.561100000000014e-05, 6.59159999999992e-05, 6.534700000000032e-05, 6.587499999999996e-05, 6.561100000000014e-05, 6.541699999999817e-05, 6.580499999999864e-05, 6.545800000000088e-05, 6.561100000000014e-05, 6.583300000000125e-05, 6.534700000000032e-05, 6.583300000000125e-05, 6.579199999999855e-05, 6.569500000000103e-05, 6.513899999999878e-05, 6.537499999999946e-05, 6.547200000000045e-05, 6.582000000000116e-05, 6.562499999999971e-05, 6.577800000000245e-05, 6.554200000000177e-05, 6.569499999999756e-05, 6.565300000000232e-05, 6.561100000000014e-05, 6.532000000000066e-05, 6.566599999999895e-05, 6.561100000000014e-05, 6.57220000000007e-05, 6.562500000000318e-05, 6.580499999999864e-05]</msg>
<status status="PASS" starttime="20201112 10:15:18.960" endtime="20201112 10:15:18.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.955" endtime="20201112 10:15:18.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.965" endtime="20201112 10:15:18.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.968" endtime="20201112 10:15:18.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.966" endtime="20201112 10:15:18.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.963" endtime="20201112 10:15:18.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.597" endtime="20201112 10:15:18.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.596" endtime="20201112 10:15:18.989"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.997" endtime="20201112 10:15:19.015"></status>
</kw>
<msg timestamp="20201112 10:15:19.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.996" endtime="20201112 10:15:19.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.016" endtime="20201112 10:15:19.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.019" endtime="20201112 10:15:19.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.993" endtime="20201112 10:15:19.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.991" endtime="20201112 10:15:19.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.029" endtime="20201112 10:15:19.314"></status>
</kw>
<msg timestamp="20201112 10:15:19.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.027" endtime="20201112 10:15:19.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.318" endtime="20201112 10:15:19.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.326" endtime="20201112 10:15:19.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.025" endtime="20201112 10:15:19.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.023" endtime="20201112 10:15:19.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.333" level="INFO">${RESULT} = [{'time': 0.022193014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665299999999985e-05, 'source_diff': 6.665299999999985e-05}, {'time': 0.022262042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:19.329" endtime="20201112 10:15:19.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.346" level="INFO">${ACCURACY} = {'source_diff': [6.665299999999985e-05, 6.67640000000004e-05, 6.652799999999973e-05, 6.670800000000213e-05, 6.666699999999942e-05, 6.650000000000059e-05, 6.682000000000216e-05, 6.665299999999985e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:19.334" endtime="20201112 10:15:19.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.351" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.350" endtime="20201112 10:15:19.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.353" level="INFO">VALUE: [6.665299999999985e-05, 6.67640000000004e-05, 6.652799999999973e-05, 6.670800000000213e-05, 6.666699999999942e-05, 6.650000000000059e-05, 6.682000000000216e-05, 6.665299999999985e-05, 6.668099999999899e-05, 6.675000000000084e-05, 6.662500000000071e-05, 6.674999999999737e-05, 6.683300000000225e-05, 6.665299999999985e-05, 6.670800000000213e-05, 6.667999999999952e-05, 6.669399999999909e-05, 6.669399999999909e-05, 6.681900000000268e-05, 6.651400000000016e-05, 6.680499999999964e-05, 6.69030000000001e-05, 6.683299999999878e-05, 6.645799999999841e-05, 6.663900000000028e-05, 6.680599999999912e-05, 6.682000000000216e-05, 6.654099999999982e-05, 6.65700000000019e-05, 6.637500000000046e-05, 6.669499999999856e-05, 6.662500000000071e-05, 6.684699999999835e-05, 6.680499999999964e-05, 6.688900000000053e-05, 6.654099999999982e-05, 6.681999999999869e-05, 6.637499999999699e-05, 6.651299999999721e-05, 6.679100000000007e-05, 6.641600000000317e-05, 6.680499999999964e-05, 6.680499999999964e-05, 6.665299999999985e-05, 6.684699999999835e-05, 6.67640000000004e-05, 6.655600000000234e-05, 6.658299999999853e-05, 6.641699999999917e-05, 6.665299999999985e-05]</msg>
<status status="PASS" starttime="20201112 10:15:19.352" endtime="20201112 10:15:19.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.347" endtime="20201112 10:15:19.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.357" endtime="20201112 10:15:19.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.361" endtime="20201112 10:15:19.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.359" endtime="20201112 10:15:19.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.355" endtime="20201112 10:15:19.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.990" endtime="20201112 10:15:19.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.989" endtime="20201112 10:15:19.382"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.390" endtime="20201112 10:15:19.408"></status>
</kw>
<msg timestamp="20201112 10:15:19.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.389" endtime="20201112 10:15:19.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.409" endtime="20201112 10:15:19.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.412" endtime="20201112 10:15:19.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.386" endtime="20201112 10:15:19.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.384" endtime="20201112 10:15:19.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.422" endtime="20201112 10:15:19.707"></status>
</kw>
<msg timestamp="20201112 10:15:19.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.420" endtime="20201112 10:15:19.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.711" endtime="20201112 10:15:19.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.720" endtime="20201112 10:15:19.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.418" endtime="20201112 10:15:19.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.416" endtime="20201112 10:15:19.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.726" level="INFO">${RESULT} = [{'time': 0.022398542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.709800000000155e-05, 'source_diff': 6.709800000000155e-05}, {'time': 0.022468556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:19.723" endtime="20201112 10:15:19.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.740" level="INFO">${ACCURACY} = {'source_diff': [6.709800000000155e-05, 6.781999999999969e-05, 6.74030000000006e-05, 6.75969999999991e-05, 6.765199999999791e-05, 6.783299999999978e-05, 6.752800000000073e-05, 6.777800000000098e-05, 6...</msg>
<status status="PASS" starttime="20201112 10:15:19.727" endtime="20201112 10:15:19.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.744" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.743" endtime="20201112 10:15:19.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.747" level="INFO">VALUE: [6.709800000000155e-05, 6.781999999999969e-05, 6.74030000000006e-05, 6.75969999999991e-05, 6.765199999999791e-05, 6.783299999999978e-05, 6.752800000000073e-05, 6.777800000000098e-05, 6.754100000000082e-05, 6.77640000000014e-05, 6.736099999999842e-05, 6.738899999999756e-05, 6.750000000000159e-05, 6.791700000000067e-05, 6.784699999999935e-05, 6.777800000000098e-05, 6.755499999999692e-05, 6.751400000000116e-05, 6.756999999999944e-05, 6.786099999999892e-05, 6.765300000000085e-05, 6.744499999999931e-05, 6.729200000000005e-05, 6.736100000000189e-05, 6.786099999999892e-05, 6.782000000000316e-05, 6.744499999999931e-05, 6.747199999999898e-05, 6.763900000000128e-05, 6.761100000000214e-05, 6.736200000000137e-05, 6.79160000000012e-05, 6.777699999999803e-05, 6.763899999999781e-05, 6.781900000000021e-05, 6.769400000000009e-05, 6.743000000000027e-05, 6.738900000000103e-05, 6.779200000000055e-05, 6.77220000000027e-05, 6.786099999999892e-05, 6.749999999999812e-05, 6.783299999999978e-05, 6.77359999999988e-05, 6.7583000000003e-05, 6.751300000000168e-05, 6.737499999999799e-05, 6.775000000000184e-05, 6.780500000000064e-05, 6.749999999999812e-05]</msg>
<status status="PASS" starttime="20201112 10:15:19.745" endtime="20201112 10:15:19.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.741" endtime="20201112 10:15:19.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.750" endtime="20201112 10:15:19.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.753" endtime="20201112 10:15:19.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.752" endtime="20201112 10:15:19.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.749" endtime="20201112 10:15:19.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.383" endtime="20201112 10:15:19.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.382" endtime="20201112 10:15:19.774"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.783" endtime="20201112 10:15:19.801"></status>
</kw>
<msg timestamp="20201112 10:15:19.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.781" endtime="20201112 10:15:19.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.802" endtime="20201112 10:15:19.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.804" endtime="20201112 10:15:19.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.779" endtime="20201112 10:15:19.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.777" endtime="20201112 10:15:19.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.814" endtime="20201112 10:15:20.100"></status>
</kw>
<msg timestamp="20201112 10:15:20.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.813" endtime="20201112 10:15:20.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.104" endtime="20201112 10:15:20.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.112" endtime="20201112 10:15:20.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.810" endtime="20201112 10:15:20.114"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.809" endtime="20201112 10:15:20.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.119" level="INFO">${RESULT} = [{'time': 0.022042208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.858300000000053e-05, 'source_diff': 6.858300000000053e-05}, {'time': 0.022113236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:20.115" endtime="20201112 10:15:20.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.132" level="INFO">${ACCURACY} = {'source_diff': [6.858300000000053e-05, 6.851400000000216e-05, 6.837499999999899e-05, 6.855500000000139e-05, 6.847199999999998e-05, 6.851400000000216e-05, 6.887500000000296e-05, 6.874999999999937e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:20.120" endtime="20201112 10:15:20.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.136" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.135" endtime="20201112 10:15:20.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.139" level="INFO">VALUE: [6.858300000000053e-05, 6.851400000000216e-05, 6.837499999999899e-05, 6.855500000000139e-05, 6.847199999999998e-05, 6.851400000000216e-05, 6.887500000000296e-05, 6.874999999999937e-05, 6.883299999999731e-05, 6.862499999999924e-05, 6.884700000000035e-05, 6.862500000000271e-05, 6.888899999999906e-05, 6.888899999999906e-05, 6.87359999999998e-05, 6.89030000000021e-05, 6.855600000000087e-05, 6.888900000000253e-05, 6.832000000000019e-05, 6.852700000000225e-05, 6.857000000000044e-05, 6.880499999999817e-05, 6.874999999999937e-05, 6.881899999999774e-05, 6.870800000000066e-05, 6.867999999999805e-05, 6.850000000000259e-05, 6.863899999999881e-05, 6.837500000000246e-05, 6.852800000000173e-05, 6.837499999999899e-05, 6.884700000000035e-05, 6.834699999999985e-05, 6.836099999999942e-05, 6.851399999999869e-05, 6.843100000000074e-05, 6.852799999999826e-05, 6.886099999999992e-05, 6.858300000000053e-05, 6.863899999999881e-05, 6.866599999999848e-05, 6.89160000000022e-05, 6.837499999999899e-05, 6.858300000000053e-05, 6.834699999999985e-05, 6.856900000000096e-05, 6.837499999999899e-05, 6.887499999999949e-05, 6.812500000000221e-05, 6.84299999999978e-05]</msg>
<status status="PASS" starttime="20201112 10:15:20.138" endtime="20201112 10:15:20.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.133" endtime="20201112 10:15:20.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.142" endtime="20201112 10:15:20.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.146" endtime="20201112 10:15:20.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.144" endtime="20201112 10:15:20.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.141" endtime="20201112 10:15:20.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.775" endtime="20201112 10:15:20.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.775" endtime="20201112 10:15:20.167"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.175" endtime="20201112 10:15:20.192"></status>
</kw>
<msg timestamp="20201112 10:15:20.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.174" endtime="20201112 10:15:20.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.194" endtime="20201112 10:15:20.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.196" endtime="20201112 10:15:20.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.171" endtime="20201112 10:15:20.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.169" endtime="20201112 10:15:20.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.206" endtime="20201112 10:15:20.492"></status>
</kw>
<msg timestamp="20201112 10:15:20.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.205" endtime="20201112 10:15:20.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.496" endtime="20201112 10:15:20.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.504" endtime="20201112 10:15:20.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.202" endtime="20201112 10:15:20.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.200" endtime="20201112 10:15:20.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.511" level="INFO">${RESULT} = [{'time': 0.021983167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.957000000000144e-05, 'source_diff': 6.957000000000144e-05}, {'time': 0.02205525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:20.507" endtime="20201112 10:15:20.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.525" level="INFO">${ACCURACY} = {'source_diff': [6.957000000000144e-05, 6.99169999999992e-05, 6.969500000000156e-05, 6.99299999999993e-05, 6.97360000000008e-05, 6.977700000000003e-05, 6.977700000000003e-05, 6.958300000000153e-05, 6....</msg>
<status status="PASS" starttime="20201112 10:15:20.511" endtime="20201112 10:15:20.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.529" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.528" endtime="20201112 10:15:20.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.532" level="INFO">VALUE: [6.957000000000144e-05, 6.99169999999992e-05, 6.969500000000156e-05, 6.99299999999993e-05, 6.97360000000008e-05, 6.977700000000003e-05, 6.977700000000003e-05, 6.958300000000153e-05, 6.933300000000128e-05, 6.945799999999794e-05, 6.948599999999708e-05, 6.979199999999908e-05, 6.981899999999874e-05, 6.968100000000199e-05, 6.966700000000242e-05, 6.987500000000049e-05, 6.952799999999926e-05, 6.951399999999969e-05, 6.986099999999745e-05, 6.969499999999809e-05, 6.931899999999824e-05, 6.95970000000011e-05, 6.933400000000076e-05, 6.981999999999822e-05, 6.986099999999745e-05, 6.962500000000024e-05, 6.957000000000144e-05, 6.980599999999865e-05, 6.976399999999994e-05, 6.954099999999935e-05, 6.940199999999966e-05, 6.94160000000027e-05, 6.970800000000166e-05, 6.991599999999973e-05, 6.913799999999984e-05, 6.970800000000166e-05, 6.94299999999988e-05, 6.970800000000166e-05, 6.955500000000239e-05, 6.961100000000067e-05, 6.987500000000049e-05, 6.938899999999956e-05, 6.968100000000199e-05, 6.970899999999766e-05, 6.963899999999981e-05, 6.990299999999963e-05, 6.947200000000098e-05, 6.944499999999784e-05, 6.952799999999926e-05, 6.961200000000015e-05]</msg>
<status status="PASS" starttime="20201112 10:15:20.531" endtime="20201112 10:15:20.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.526" endtime="20201112 10:15:20.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.542" endtime="20201112 10:15:20.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.545" endtime="20201112 10:15:20.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.544" endtime="20201112 10:15:20.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.540" endtime="20201112 10:15:20.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.167" endtime="20201112 10:15:20.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.167" endtime="20201112 10:15:20.566"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.575" endtime="20201112 10:15:20.592"></status>
</kw>
<msg timestamp="20201112 10:15:20.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.573" endtime="20201112 10:15:20.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.594" endtime="20201112 10:15:20.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.596" endtime="20201112 10:15:20.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.570" endtime="20201112 10:15:20.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.568" endtime="20201112 10:15:20.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.606" endtime="20201112 10:15:20.891"></status>
</kw>
<msg timestamp="20201112 10:15:20.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.605" endtime="20201112 10:15:20.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.895" endtime="20201112 10:15:20.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.903" endtime="20201112 10:15:20.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.602" endtime="20201112 10:15:20.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.600" endtime="20201112 10:15:20.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.910" level="INFO">${RESULT} = [{'time': 0.022256306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.037500000000099e-05, 'source_diff': 7.037500000000099e-05}, {'time': 0.022329319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:20.907" endtime="20201112 10:15:20.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.924" level="INFO">${ACCURACY} = {'source_diff': [7.037500000000099e-05, 7.041600000000023e-05, 7.066699999999995e-05, 7.076400000000094e-05, 7.065200000000091e-05, 7.088900000000106e-05, 7.037500000000099e-05, 7.037500000000099e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:20.911" endtime="20201112 10:15:20.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.928" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.927" endtime="20201112 10:15:20.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.931" level="INFO">VALUE: [7.037500000000099e-05, 7.041600000000023e-05, 7.066699999999995e-05, 7.076400000000094e-05, 7.065200000000091e-05, 7.088900000000106e-05, 7.037500000000099e-05, 7.037500000000099e-05, 7.086099999999845e-05, 7.087499999999802e-05, 7.036100000000142e-05, 7.065300000000038e-05, 7.075000000000137e-05, 7.079200000000008e-05, 7.069499999999909e-05, 7.059699999999863e-05, 7.088900000000106e-05, 7.043099999999927e-05, 7.066699999999995e-05, 7.047299999999798e-05, 7.068099999999952e-05, 7.051400000000069e-05, 7.088900000000106e-05, 7.050000000000112e-05, 7.052800000000026e-05, 7.036100000000142e-05, 7.077800000000051e-05, 7.04299999999998e-05, 7.076400000000094e-05, 7.069399999999962e-05, 7.031899999999924e-05, 7.069399999999962e-05, 7.07499999999979e-05, 7.076400000000094e-05, 7.065300000000038e-05, 7.076400000000094e-05, 7.066699999999995e-05, 7.070799999999919e-05, 7.047200000000198e-05, 7.056999999999897e-05, 7.033400000000176e-05, 7.04169999999997e-05, 7.036100000000142e-05, 7.087499999999802e-05, 7.045900000000188e-05, 7.077700000000103e-05, 7.036100000000142e-05, 7.091600000000073e-05, 7.07230000000017e-05, 7.047199999999851e-05]</msg>
<status status="PASS" starttime="20201112 10:15:20.929" endtime="20201112 10:15:20.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.925" endtime="20201112 10:15:20.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.934" endtime="20201112 10:15:20.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.938" endtime="20201112 10:15:20.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.936" endtime="20201112 10:15:20.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.932" endtime="20201112 10:15:20.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.567" endtime="20201112 10:15:20.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.566" endtime="20201112 10:15:20.958"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.967" endtime="20201112 10:15:20.984"></status>
</kw>
<msg timestamp="20201112 10:15:20.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.966" endtime="20201112 10:15:20.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.985" endtime="20201112 10:15:20.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.988" endtime="20201112 10:15:20.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.963" endtime="20201112 10:15:20.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.961" endtime="20201112 10:15:20.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.998" endtime="20201112 10:15:21.283"></status>
</kw>
<msg timestamp="20201112 10:15:21.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.996" endtime="20201112 10:15:21.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.287" endtime="20201112 10:15:21.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.295" endtime="20201112 10:15:21.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.993" endtime="20201112 10:15:21.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.992" endtime="20201112 10:15:21.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.302" level="INFO">${RESULT} = [{'time': 0.021923625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.177799999999804e-05, 'source_diff': 7.177799999999804e-05}, {'time': 0.021997667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:21.299" endtime="20201112 10:15:21.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:21.315" level="INFO">${ACCURACY} = {'source_diff': [7.177799999999804e-05, 7.149999999999865e-05, 7.136099999999895e-05, 7.19170000000012e-05, 7.170899999999966e-05, 7.172199999999976e-05, 7.182000000000022e-05, 7.18620000000024e-05, 7...</msg>
<status status="PASS" starttime="20201112 10:15:21.303" endtime="20201112 10:15:21.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.320" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 10:15:21.319" endtime="20201112 10:15:21.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.322" level="INFO">VALUE: [7.177799999999804e-05, 7.149999999999865e-05, 7.136099999999895e-05, 7.19170000000012e-05, 7.170899999999966e-05, 7.172199999999976e-05, 7.182000000000022e-05, 7.18620000000024e-05, 7.147299999999898e-05, 7.186099999999945e-05, 7.144499999999984e-05, 7.181899999999727e-05, 7.183300000000031e-05, 7.154200000000083e-05, 7.134699999999938e-05, 7.177799999999804e-05, 7.172199999999976e-05, 7.15970000000031e-05, 7.169400000000062e-05, 7.186099999999945e-05, 7.137500000000199e-05, 7.159699999999963e-05, 7.19170000000012e-05, 7.168100000000052e-05, 7.151399999999822e-05, 7.145899999999941e-05, 7.143100000000027e-05, 7.154200000000083e-05, 7.183399999999979e-05, 7.152799999999779e-05, 7.162499999999877e-05, 7.191600000000173e-05, 7.138899999999809e-05, 7.166600000000148e-05, 7.173700000000227e-05, 7.163899999999834e-05, 7.154100000000135e-05, 7.148599999999908e-05, 7.154200000000083e-05, 7.156999999999997e-05, 7.144400000000037e-05, 7.147199999999951e-05, 7.166699999999748e-05, 7.186099999999945e-05, 7.136100000000242e-05, 7.151400000000169e-05, 7.166700000000095e-05, 7.118100000000002e-05, 7.134699999999938e-05, 7.154200000000083e-05]</msg>
<status status="PASS" starttime="20201112 10:15:21.321" endtime="20201112 10:15:21.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.316" endtime="20201112 10:15:21.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.326" endtime="20201112 10:15:21.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.329" endtime="20201112 10:15:21.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.328" endtime="20201112 10:15:21.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.324" endtime="20201112 10:15:21.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.959" endtime="20201112 10:15:21.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.959" endtime="20201112 10:15:21.350"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.359" endtime="20201112 10:15:21.375"></status>
</kw>
<msg timestamp="20201112 10:15:21.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.357" endtime="20201112 10:15:21.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.377" endtime="20201112 10:15:21.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.379" endtime="20201112 10:15:21.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.355" endtime="20201112 10:15:21.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.352" endtime="20201112 10:15:21.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.390" endtime="20201112 10:15:21.675"></status>
</kw>
<msg timestamp="20201112 10:15:21.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.388" endtime="20201112 10:15:21.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.679" endtime="20201112 10:15:21.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.687" endtime="20201112 10:15:21.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.385" endtime="20201112 10:15:21.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.383" endtime="20201112 10:15:21.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.694" level="INFO">${RESULT} = [{'time': 0.021904028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.265299999999891e-05, 'source_diff': 7.265299999999891e-05}, {'time': 0.021979056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:21.691" endtime="20201112 10:15:21.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:21.708" level="INFO">${ACCURACY} = {'source_diff': [7.265299999999891e-05, 7.268100000000152e-05, 7.254199999999836e-05, 7.240200000000266e-05, 7.288899999999959e-05, 7.25829999999976e-05, 7.240199999999919e-05, 7.270799999999772e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:21.695" endtime="20201112 10:15:21.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.712" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 10:15:21.711" endtime="20201112 10:15:21.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.714" level="INFO">VALUE: [7.265299999999891e-05, 7.268100000000152e-05, 7.254199999999836e-05, 7.240200000000266e-05, 7.288899999999959e-05, 7.25829999999976e-05, 7.240199999999919e-05, 7.270799999999772e-05, 7.263899999999934e-05, 7.259700000000063e-05, 7.25690000000015e-05, 7.291599999999926e-05, 7.23049999999982e-05, 7.281900000000174e-05, 7.262499999999977e-05, 7.238900000000256e-05, 7.255499999999845e-05, 7.259700000000063e-05, 7.277800000000251e-05, 7.237499999999952e-05, 7.254200000000183e-05, 7.255599999999793e-05, 7.279200000000208e-05, 7.258400000000054e-05, 7.276400000000294e-05, 7.251299999999974e-05, 7.244499999999737e-05, 7.247200000000051e-05, 7.279199999999861e-05, 7.286100000000045e-05, 7.269500000000109e-05, 7.272199999999729e-05, 7.248600000000008e-05, 7.26110000000002e-05, 7.213900000000231e-05, 7.29439999999984e-05, 7.287500000000002e-05, 7.288899999999959e-05, 7.276399999999947e-05, 7.241699999999823e-05, 7.269399999999815e-05, 7.247200000000051e-05, 7.238899999999909e-05, 7.236099999999995e-05, 7.241699999999823e-05, 7.276399999999947e-05, 7.237499999999952e-05, 7.272300000000023e-05, 7.240299999999866e-05, 7.255599999999793e-05]</msg>
<status status="PASS" starttime="20201112 10:15:21.713" endtime="20201112 10:15:21.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.708" endtime="20201112 10:15:21.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.718" endtime="20201112 10:15:21.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.721" endtime="20201112 10:15:21.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.720" endtime="20201112 10:15:21.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.716" endtime="20201112 10:15:21.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.351" endtime="20201112 10:15:21.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.350" endtime="20201112 10:15:21.742"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.751" endtime="20201112 10:15:21.769"></status>
</kw>
<msg timestamp="20201112 10:15:21.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.749" endtime="20201112 10:15:21.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.771" endtime="20201112 10:15:21.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.773" endtime="20201112 10:15:21.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.747" endtime="20201112 10:15:21.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.745" endtime="20201112 10:15:21.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.783" endtime="20201112 10:15:22.069"></status>
</kw>
<msg timestamp="20201112 10:15:22.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:21.782" endtime="20201112 10:15:22.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:22.073" endtime="20201112 10:15:22.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.081" endtime="20201112 10:15:22.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.779" endtime="20201112 10:15:22.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.777" endtime="20201112 10:15:22.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:22.088" level="INFO">${RESULT} = [{'time': 0.0222575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.404199999999986e-05, 'source_diff': 7.404199999999986e-05}, {'time': 0.022333514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:22.085" endtime="20201112 10:15:22.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.102" level="INFO">${ACCURACY} = {'source_diff': [7.404199999999986e-05, 7.386099999999798e-05, 7.347199999999804e-05, 7.368100000000252e-05, 7.388900000000059e-05, 7.388900000000059e-05, 7.381999999999875e-05, 7.377800000000004e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:22.089" endtime="20201112 10:15:22.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.107" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.106" endtime="20201112 10:15:22.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.109" level="INFO">VALUE: [7.404199999999986e-05, 7.386099999999798e-05, 7.347199999999804e-05, 7.368100000000252e-05, 7.388900000000059e-05, 7.388900000000059e-05, 7.381999999999875e-05, 7.377800000000004e-05, 7.379199999999961e-05, 7.367999999999958e-05, 7.362500000000077e-05, 7.383300000000231e-05, 7.358300000000206e-05, 7.386100000000145e-05, 7.366699999999948e-05, 7.340299999999966e-05, 7.377800000000004e-05, 7.37500000000009e-05, 7.37500000000009e-05, 7.317999999999908e-05, 7.348600000000108e-05, 7.39309999999993e-05, 7.387499999999755e-05, 7.379199999999961e-05, 7.388900000000059e-05, 7.340200000000019e-05, 7.387500000000102e-05, 7.345899999999794e-05, 7.338900000000009e-05, 7.383399999999832e-05, 7.348599999999761e-05, 7.357000000000197e-05, 7.380600000000265e-05, 7.362500000000077e-05, 7.386200000000093e-05, 7.387499999999755e-05, 7.354099999999988e-05, 7.380500000000317e-05, 7.391699999999973e-05, 7.363900000000034e-05, 7.341699999999923e-05, 7.384699999999841e-05, 7.356899999999902e-05, 7.372199999999829e-05, 7.356899999999902e-05, 7.351400000000022e-05, 7.365299999999991e-05, 7.380599999999918e-05, 7.351400000000022e-05, 7.363900000000034e-05]</msg>
<status status="PASS" starttime="20201112 10:15:22.108" endtime="20201112 10:15:22.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.103" endtime="20201112 10:15:22.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.113" endtime="20201112 10:15:22.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.116" endtime="20201112 10:15:22.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.115" endtime="20201112 10:15:22.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.111" endtime="20201112 10:15:22.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.743" endtime="20201112 10:15:22.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.743" endtime="20201112 10:15:22.137"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.146" endtime="20201112 10:15:22.163"></status>
</kw>
<msg timestamp="20201112 10:15:22.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.144" endtime="20201112 10:15:22.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.165" endtime="20201112 10:15:22.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.167" endtime="20201112 10:15:22.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.141" endtime="20201112 10:15:22.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.139" endtime="20201112 10:15:22.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.177" endtime="20201112 10:15:22.463"></status>
</kw>
<msg timestamp="20201112 10:15:22.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.176" endtime="20201112 10:15:22.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.468" endtime="20201112 10:15:22.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.476" endtime="20201112 10:15:22.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.173" endtime="20201112 10:15:22.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.172" endtime="20201112 10:15:22.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:22.482" level="INFO">${RESULT} = [{'time': 0.021939792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.497299999999901e-05, 'source_diff': 7.497299999999901e-05}, {'time': 0.022016833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:22.479" endtime="20201112 10:15:22.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.496" level="INFO">${ACCURACY} = {'source_diff': [7.497299999999901e-05, 7.448599999999861e-05, 7.448700000000155e-05, 7.486099999999898e-05, 7.45829999999996e-05, 7.447199999999904e-05, 7.481900000000027e-05, 7.477799999999757e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:22.483" endtime="20201112 10:15:22.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.500" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.499" endtime="20201112 10:15:22.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.503" level="INFO">VALUE: [7.497299999999901e-05, 7.448599999999861e-05, 7.448700000000155e-05, 7.486099999999898e-05, 7.45829999999996e-05, 7.447199999999904e-05, 7.481900000000027e-05, 7.477799999999757e-05, 7.463899999999787e-05, 7.451400000000122e-05, 7.440300000000066e-05, 7.44309999999998e-05, 7.44309999999998e-05, 7.480600000000018e-05, 7.462500000000177e-05, 7.451400000000122e-05, 7.438900000000109e-05, 7.461200000000168e-05, 7.487499999999855e-05, 7.46110000000022e-05, 7.437499999999805e-05, 7.479100000000113e-05, 7.413900000000084e-05, 7.465200000000144e-05, 7.443000000000033e-05, 7.441600000000076e-05, 7.469399999999668e-05, 7.491599999999779e-05, 7.455500000000045e-05, 7.451399999999775e-05, 7.437500000000152e-05, 7.490300000000116e-05, 7.455599999999993e-05, 7.481999999999975e-05, 7.454200000000036e-05, 7.459699999999916e-05, 7.441700000000023e-05, 7.444499999999937e-05, 7.450000000000165e-05, 7.49310000000003e-05, 7.466699999999701e-05, 7.487499999999855e-05, 7.438900000000109e-05, 7.466600000000101e-05, 7.479200000000061e-05, 7.465200000000144e-05, 7.463899999999787e-05, 7.443000000000033e-05, 7.459699999999916e-05, 7.484699999999941e-05]</msg>
<status status="PASS" starttime="20201112 10:15:22.501" endtime="20201112 10:15:22.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.497" endtime="20201112 10:15:22.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.506" endtime="20201112 10:15:22.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.510" endtime="20201112 10:15:22.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.508" endtime="20201112 10:15:22.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.505" endtime="20201112 10:15:22.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.138" endtime="20201112 10:15:22.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.137" endtime="20201112 10:15:22.530"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.539" endtime="20201112 10:15:22.557"></status>
</kw>
<msg timestamp="20201112 10:15:22.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.537" endtime="20201112 10:15:22.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.559" endtime="20201112 10:15:22.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.561" endtime="20201112 10:15:22.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.535" endtime="20201112 10:15:22.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.533" endtime="20201112 10:15:22.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.571" endtime="20201112 10:15:22.856"></status>
</kw>
<msg timestamp="20201112 10:15:22.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.569" endtime="20201112 10:15:22.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.860" endtime="20201112 10:15:22.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.868" endtime="20201112 10:15:22.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.567" endtime="20201112 10:15:22.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.565" endtime="20201112 10:15:22.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:22.875" level="INFO">${RESULT} = [{'time': 0.022441681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597300000000001e-05, 'source_diff': 7.597300000000001e-05}, {'time': 0.022519722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:22.872" endtime="20201112 10:15:22.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.888" level="INFO">${ACCURACY} = {'source_diff': [7.597300000000001e-05, 7.567999999999811e-05, 7.568000000000158e-05, 7.548599999999961e-05, 7.540300000000166e-05, 7.584699999999694e-05, 7.574999999999943e-05, 7.552800000000179e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:22.876" endtime="20201112 10:15:22.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.893" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.892" endtime="20201112 10:15:22.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.895" level="INFO">VALUE: [7.597300000000001e-05, 7.567999999999811e-05, 7.568000000000158e-05, 7.548599999999961e-05, 7.540300000000166e-05, 7.584699999999694e-05, 7.574999999999943e-05, 7.552800000000179e-05, 7.547200000000004e-05, 7.540300000000166e-05, 7.551399999999875e-05, 7.554200000000136e-05, 7.570800000000072e-05, 7.549999999999918e-05, 7.53890000000021e-05, 7.586099999999998e-05, 7.566699999999801e-05, 7.579199999999814e-05, 7.551400000000222e-05, 7.574999999999943e-05, 7.574999999999943e-05, 7.556899999999755e-05, 7.559799999999964e-05, 7.570799999999725e-05, 7.552699999999885e-05, 7.563900000000234e-05, 7.579099999999866e-05, 7.573599999999986e-05, 7.545800000000047e-05, 7.587499999999955e-05, 7.579099999999866e-05, 7.569500000000062e-05, 7.541699999999776e-05, 7.587499999999955e-05, 7.54310000000008e-05, 7.59449999999974e-05, 7.533300000000034e-05, 7.579199999999814e-05, 7.532000000000025e-05, 7.545899999999994e-05, 7.559700000000016e-05, 7.577700000000256e-05, 7.534799999999939e-05, 7.554100000000188e-05, 7.533300000000034e-05, 7.517999999999761e-05, 7.540200000000219e-05, 7.547200000000004e-05, 7.569499999999715e-05, 7.58890000000026e-05]</msg>
<status status="PASS" starttime="20201112 10:15:22.894" endtime="20201112 10:15:22.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.889" endtime="20201112 10:15:22.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.899" endtime="20201112 10:15:22.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.902" endtime="20201112 10:15:22.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.901" endtime="20201112 10:15:22.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.897" endtime="20201112 10:15:22.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.531" endtime="20201112 10:15:22.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.531" endtime="20201112 10:15:22.923"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.932" endtime="20201112 10:15:22.949"></status>
</kw>
<msg timestamp="20201112 10:15:22.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.930" endtime="20201112 10:15:22.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.950" endtime="20201112 10:15:22.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.953" endtime="20201112 10:15:22.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.928" endtime="20201112 10:15:22.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.926" endtime="20201112 10:15:22.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.963" endtime="20201112 10:15:23.248"></status>
</kw>
<msg timestamp="20201112 10:15:23.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.961" endtime="20201112 10:15:23.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.252" endtime="20201112 10:15:23.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.260" endtime="20201112 10:15:23.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.959" endtime="20201112 10:15:23.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.957" endtime="20201112 10:15:23.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.267" level="INFO">${RESULT} = [{'time': 0.022016333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.702700000000035e-05, 'source_diff': 7.702700000000035e-05}, {'time': 0.022095375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:23.264" endtime="20201112 10:15:23.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.281" level="INFO">${ACCURACY} = {'source_diff': [7.702700000000035e-05, 7.659700000000116e-05, 7.663899999999987e-05, 7.644399999999843e-05, 7.666699999999901e-05, 7.619399999999818e-05, 7.688900000000012e-05, 7.645800000000147e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:23.268" endtime="20201112 10:15:23.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.285" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.284" endtime="20201112 10:15:23.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.287" level="INFO">VALUE: [7.702700000000035e-05, 7.659700000000116e-05, 7.663899999999987e-05, 7.644399999999843e-05, 7.666699999999901e-05, 7.619399999999818e-05, 7.688900000000012e-05, 7.645800000000147e-05, 7.652799999999932e-05, 7.648600000000061e-05, 7.6457999999998e-05, 7.672200000000129e-05, 7.682000000000175e-05, 7.619500000000112e-05, 7.65700000000015e-05, 7.654199999999889e-05, 7.688900000000012e-05, 7.667999999999911e-05, 7.665199999999997e-05, 7.669399999999868e-05, 7.644399999999843e-05, 7.681900000000227e-05, 7.655499999999898e-05, 7.648600000000061e-05, 7.686099999999751e-05, 7.672300000000076e-05, 7.672200000000129e-05, 7.682000000000175e-05, 7.641699999999876e-05, 7.638899999999962e-05, 7.654199999999889e-05, 7.684800000000089e-05, 7.661099999999726e-05, 7.641699999999876e-05, 7.670799999999825e-05, 7.659800000000064e-05, 7.672300000000076e-05, 7.650000000000018e-05, 7.688900000000012e-05, 7.659700000000116e-05, 7.641700000000223e-05, 7.633299999999787e-05, 7.679199999999914e-05, 7.651399999999975e-05, 7.666700000000248e-05, 7.673599999999739e-05, 7.655499999999898e-05, 7.650000000000018e-05, 7.680599999999871e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201112 10:15:23.286" endtime="20201112 10:15:23.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.281" endtime="20201112 10:15:23.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.291" endtime="20201112 10:15:23.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.294" endtime="20201112 10:15:23.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.293" endtime="20201112 10:15:23.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.289" endtime="20201112 10:15:23.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.924" endtime="20201112 10:15:23.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.923" endtime="20201112 10:15:23.315"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.324" endtime="20201112 10:15:23.342"></status>
</kw>
<msg timestamp="20201112 10:15:23.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.322" endtime="20201112 10:15:23.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.343" endtime="20201112 10:15:23.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.346" endtime="20201112 10:15:23.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.320" endtime="20201112 10:15:23.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.318" endtime="20201112 10:15:23.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.356" endtime="20201112 10:15:23.640"></status>
</kw>
<msg timestamp="20201112 10:15:23.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.354" endtime="20201112 10:15:23.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.645" endtime="20201112 10:15:23.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.653" endtime="20201112 10:15:23.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.352" endtime="20201112 10:15:23.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.350" endtime="20201112 10:15:23.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.659" level="INFO">${RESULT} = [{'time': 0.022117708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.761099999999826e-05, 'source_diff': 7.761099999999826e-05}, {'time': 0.022197694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:23.656" endtime="20201112 10:15:23.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.674" level="INFO">${ACCURACY} = {'source_diff': [7.761099999999826e-05, 7.761100000000173e-05, 7.765300000000044e-05, 7.758299999999912e-05, 7.776300000000153e-05, 7.748600000000161e-05, 7.780500000000024e-05, 7.755599999999946e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:23.660" endtime="20201112 10:15:23.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.678" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.677" endtime="20201112 10:15:23.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.681" level="INFO">VALUE: [7.761099999999826e-05, 7.761100000000173e-05, 7.765300000000044e-05, 7.758299999999912e-05, 7.776300000000153e-05, 7.748600000000161e-05, 7.780500000000024e-05, 7.755599999999946e-05, 7.758299999999912e-05, 7.75969999999987e-05, 7.738900000000062e-05, 7.773600000000186e-05, 7.743099999999933e-05, 7.769499999999915e-05, 7.733300000000234e-05, 7.768099999999958e-05, 7.766600000000054e-05, 7.773600000000186e-05, 7.733400000000182e-05, 7.787500000000155e-05, 7.766700000000001e-05, 7.742999999999986e-05, 7.761200000000121e-05, 7.75830000000026e-05, 7.763799999999793e-05, 7.751400000000075e-05, 7.740199999999725e-05, 7.775000000000143e-05, 7.783299999999937e-05, 7.784799999999842e-05, 7.772199999999882e-05, 7.745800000000247e-05, 7.761099999999826e-05, 7.74310000000028e-05, 7.776399999999753e-05, 7.782000000000275e-05, 7.755599999999946e-05, 7.751400000000075e-05, 7.783399999999885e-05, 7.765300000000044e-05, 7.756999999999903e-05, 7.786199999999799e-05, 7.731999999999878e-05, 7.761099999999826e-05, 7.763799999999793e-05, 7.765300000000044e-05, 7.740299999999672e-05, 7.754199999999989e-05, 7.76250000000013e-05, 7.755499999999999e-05]</msg>
<status status="PASS" starttime="20201112 10:15:23.680" endtime="20201112 10:15:23.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.675" endtime="20201112 10:15:23.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.684" endtime="20201112 10:15:23.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.688" endtime="20201112 10:15:23.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.686" endtime="20201112 10:15:23.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.683" endtime="20201112 10:15:23.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.316" endtime="20201112 10:15:23.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.316" endtime="20201112 10:15:23.709"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.717" endtime="20201112 10:15:23.735"></status>
</kw>
<msg timestamp="20201112 10:15:23.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.716" endtime="20201112 10:15:23.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.736" endtime="20201112 10:15:23.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.739" endtime="20201112 10:15:23.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.713" endtime="20201112 10:15:23.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.711" endtime="20201112 10:15:23.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.749" endtime="20201112 10:15:24.033"></status>
</kw>
<msg timestamp="20201112 10:15:24.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02181625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:23.747" endtime="20201112 10:15:24.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02181625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:24.038" endtime="20201112 10:15:24.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.046" endtime="20201112 10:15:24.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.745" endtime="20201112 10:15:24.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.743" endtime="20201112 10:15:24.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.052" level="INFO">${RESULT} = [{'time': 0.021894889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.863900000000187e-05, 'source_diff': 7.863900000000187e-05}, {'time': 0.021974931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:24.049" endtime="20201112 10:15:24.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:24.066" level="INFO">${ACCURACY} = {'source_diff': [7.863900000000187e-05, 7.816700000000051e-05, 7.843100000000033e-05, 7.886099999999951e-05, 7.873599999999939e-05, 7.861099999999926e-05, 7.84449999999999e-05, 7.86519999999985e-05, 7...</msg>
<status status="PASS" starttime="20201112 10:15:24.053" endtime="20201112 10:15:24.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.070" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 10:15:24.069" endtime="20201112 10:15:24.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.073" level="INFO">VALUE: [7.863900000000187e-05, 7.816700000000051e-05, 7.843100000000033e-05, 7.886099999999951e-05, 7.873599999999939e-05, 7.861099999999926e-05, 7.84449999999999e-05, 7.86519999999985e-05, 7.888900000000212e-05, 7.877800000000157e-05, 7.88190000000008e-05, 7.877800000000157e-05, 7.880499999999777e-05, 7.858300000000012e-05, 7.854100000000142e-05, 7.891700000000126e-05, 7.870800000000025e-05, 7.887499999999908e-05, 7.861100000000273e-05, 7.855600000000046e-05, 7.863900000000187e-05, 7.862499999999883e-05, 7.834699999999944e-05, 7.836099999999901e-05, 7.861099999999926e-05, 7.859800000000264e-05, 7.847299999999904e-05, 7.870800000000025e-05, 7.875000000000243e-05, 7.8764000000002e-05, 7.837499999999858e-05, 7.834699999999944e-05, 7.873599999999939e-05, 7.861099999999926e-05, 7.843000000000086e-05, 7.837500000000205e-05, 7.880500000000124e-05, 7.873599999999939e-05, 7.88190000000008e-05, 7.883400000000332e-05, 7.855600000000046e-05, 7.870899999999972e-05, 7.84169999999973e-05, 7.894400000000093e-05, 7.865300000000144e-05, 7.870899999999972e-05, 7.87779999999981e-05, 7.852700000000185e-05, 7.859800000000264e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201112 10:15:24.071" endtime="20201112 10:15:24.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.067" endtime="20201112 10:15:24.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.076" endtime="20201112 10:15:24.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.080" endtime="20201112 10:15:24.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.078" endtime="20201112 10:15:24.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.075" endtime="20201112 10:15:24.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.710" endtime="20201112 10:15:24.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.709" endtime="20201112 10:15:24.100"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.109" endtime="20201112 10:15:24.127"></status>
</kw>
<msg timestamp="20201112 10:15:24.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.108" endtime="20201112 10:15:24.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.129" endtime="20201112 10:15:24.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.131" endtime="20201112 10:15:24.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.105" endtime="20201112 10:15:24.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.103" endtime="20201112 10:15:24.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.141" endtime="20201112 10:15:24.427"></status>
</kw>
<msg timestamp="20201112 10:15:24.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.140" endtime="20201112 10:15:24.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.431" endtime="20201112 10:15:24.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.440" endtime="20201112 10:15:24.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.137" endtime="20201112 10:15:24.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.135" endtime="20201112 10:15:24.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.447" level="INFO">${RESULT} = [{'time': 0.022322917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.909799999999967e-05, 'source_diff': 7.909799999999967e-05}, {'time': 0.022404944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:24.443" endtime="20201112 10:15:24.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:24.460" level="INFO">${ACCURACY} = {'source_diff': [7.909799999999967e-05, 7.944399999999796e-05, 7.955600000000146e-05, 7.947200000000057e-05, 7.980499999999877e-05, 7.961100000000026e-05, 7.98329999999979e-05, 7.970800000000125e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:24.448" endtime="20201112 10:15:24.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.465" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 10:15:24.464" endtime="20201112 10:15:24.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.467" level="INFO">VALUE: [7.909799999999967e-05, 7.944399999999796e-05, 7.955600000000146e-05, 7.947200000000057e-05, 7.980499999999877e-05, 7.961100000000026e-05, 7.98329999999979e-05, 7.970800000000125e-05, 7.936100000000001e-05, 7.942999999999839e-05, 7.965300000000244e-05, 7.944499999999743e-05, 7.969399999999821e-05, 7.976399999999953e-05, 7.94169999999983e-05, 7.940299999999872e-05, 7.974999999999996e-05, 7.979199999999867e-05, 7.980499999999877e-05, 7.970800000000125e-05, 7.966700000000201e-05, 7.919400000000118e-05, 7.949999999999971e-05, 7.942999999999839e-05, 7.96519999999995e-05, 7.97909999999992e-05, 7.951400000000275e-05, 7.919399999999771e-05, 7.980599999999824e-05, 7.976399999999953e-05, 7.940299999999872e-05, 7.99169999999988e-05, 7.969500000000115e-05, 7.973600000000039e-05, 7.966699999999854e-05, 7.95970000000007e-05, 7.95970000000007e-05, 7.947300000000004e-05, 7.986100000000051e-05, 7.954199999999842e-05, 7.99030000000027e-05, 7.967999999999864e-05, 7.9458999999997e-05, 7.9458000000001e-05, 7.974999999999996e-05, 7.918000000000161e-05, 7.936100000000001e-05, 7.966699999999854e-05, 7.930499999999827e-05, 7.973600000000039e-05]</msg>
<status status="PASS" starttime="20201112 10:15:24.466" endtime="20201112 10:15:24.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.461" endtime="20201112 10:15:24.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.471" endtime="20201112 10:15:24.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.474" endtime="20201112 10:15:24.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.473" endtime="20201112 10:15:24.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.469" endtime="20201112 10:15:24.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.101" endtime="20201112 10:15:24.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.101" endtime="20201112 10:15:24.495"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.504" endtime="20201112 10:15:24.522"></status>
</kw>
<msg timestamp="20201112 10:15:24.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.502" endtime="20201112 10:15:24.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.523" endtime="20201112 10:15:24.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.526" endtime="20201112 10:15:24.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.500" endtime="20201112 10:15:24.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.498" endtime="20201112 10:15:24.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.536" endtime="20201112 10:15:24.820"></status>
</kw>
<msg timestamp="20201112 10:15:24.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.534" endtime="20201112 10:15:24.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.824" endtime="20201112 10:15:24.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.832" endtime="20201112 10:15:24.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.531" endtime="20201112 10:15:24.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.530" endtime="20201112 10:15:24.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.839" level="INFO">${RESULT} = [{'time': 0.022015403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.031999999999831e-05, 'source_diff': 8.031999999999831e-05}, {'time': 0.022098431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:24.836" endtime="20201112 10:15:24.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:24.852" level="INFO">${ACCURACY} = {'source_diff': [8.031999999999831e-05, 8.038900000000015e-05, 8.061200000000074e-05, 8.080499999999977e-05, 8.080599999999924e-05, 8.06520000000005e-05, 8.058300000000213e-05, 8.054099999999995e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:24.840" endtime="20201112 10:15:24.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.857" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 10:15:24.856" endtime="20201112 10:15:24.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.859" level="INFO">VALUE: [8.031999999999831e-05, 8.038900000000015e-05, 8.061200000000074e-05, 8.080499999999977e-05, 8.080599999999924e-05, 8.06520000000005e-05, 8.058300000000213e-05, 8.054099999999995e-05, 8.042999999999939e-05, 8.062500000000083e-05, 8.090300000000022e-05, 8.076400000000053e-05, 8.075000000000096e-05, 8.043099999999886e-05, 8.043099999999886e-05, 8.093099999999936e-05, 8.045799999999853e-05, 8.044499999999843e-05, 8.031999999999831e-05, 8.090200000000075e-05, 8.054200000000289e-05, 8.075000000000096e-05, 8.030599999999874e-05, 8.073599999999792e-05, 8.050000000000071e-05, 8.056899999999909e-05, 8.075000000000096e-05, 8.047200000000157e-05, 8.066600000000007e-05, 8.055599999999899e-05, 8.052700000000038e-05, 8.072199999999835e-05, 8.070799999999878e-05, 8.049999999999724e-05, 8.076400000000053e-05, 8.086100000000151e-05, 8.079199999999967e-05, 8.083400000000185e-05, 8.073600000000139e-05, 8.044499999999843e-05, 8.052799999999985e-05, 8.081999999999881e-05, 8.080599999999924e-05, 8.07910000000002e-05, 8.047200000000157e-05, 8.084700000000195e-05, 8.029199999999917e-05, 8.062500000000083e-05, 8.07910000000002e-05, 8.056999999999856e-05]</msg>
<status status="PASS" starttime="20201112 10:15:24.858" endtime="20201112 10:15:24.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.853" endtime="20201112 10:15:24.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.863" endtime="20201112 10:15:24.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.866" endtime="20201112 10:15:24.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.865" endtime="20201112 10:15:24.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.861" endtime="20201112 10:15:24.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.496" endtime="20201112 10:15:24.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.496" endtime="20201112 10:15:24.887"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.896" endtime="20201112 10:15:24.913"></status>
</kw>
<msg timestamp="20201112 10:15:24.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.894" endtime="20201112 10:15:24.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.915" endtime="20201112 10:15:24.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.917" endtime="20201112 10:15:24.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.892" endtime="20201112 10:15:24.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.890" endtime="20201112 10:15:24.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.927" endtime="20201112 10:15:25.212"></status>
</kw>
<msg timestamp="20201112 10:15:25.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021888486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.926" endtime="20201112 10:15:25.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021888486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.216" endtime="20201112 10:15:25.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.224" endtime="20201112 10:15:25.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.923" endtime="20201112 10:15:25.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.921" endtime="20201112 10:15:25.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.231" level="INFO">${RESULT} = [{'time': 0.021888486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.122199999999885e-05, 'source_diff': 8.122199999999885e-05}, {'time': 0.021972528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:25.228" endtime="20201112 10:15:25.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.246" level="INFO">${ACCURACY} = {'source_diff': [8.122199999999885e-05, 8.157000000000303e-05, 8.174999999999849e-05, 8.183399999999938e-05, 8.170799999999978e-05, 8.16520000000015e-05, 8.134699999999898e-05, 8.144499999999943e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:25.232" endtime="20201112 10:15:25.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.250" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.249" endtime="20201112 10:15:25.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.252" level="INFO">VALUE: [8.122199999999885e-05, 8.157000000000303e-05, 8.174999999999849e-05, 8.183399999999938e-05, 8.170799999999978e-05, 8.16520000000015e-05, 8.134699999999898e-05, 8.144499999999943e-05, 8.169499999999968e-05, 8.172299999999882e-05, 8.156999999999956e-05, 8.158299999999966e-05, 8.163899999999794e-05, 8.191599999999785e-05, 8.158299999999966e-05, 8.188899999999819e-05, 8.16520000000015e-05, 8.143000000000039e-05, 8.163899999999794e-05, 8.152799999999738e-05, 8.130500000000027e-05, 8.176400000000153e-05, 8.176400000000153e-05, 8.143099999999986e-05, 8.184699999999948e-05, 8.184699999999948e-05, 8.186099999999905e-05, 8.163899999999794e-05, 8.16390000000014e-05, 8.154100000000095e-05, 8.137499999999812e-05, 8.151400000000128e-05, 8.183399999999938e-05, 8.149999999999824e-05, 8.141600000000082e-05, 8.140300000000072e-05, 8.15269999999979e-05, 8.187499999999862e-05, 8.13329999999994e-05, 8.155500000000052e-05, 8.158299999999966e-05, 8.176299999999859e-05, 8.172199999999935e-05, 8.166699999999708e-05, 8.18329999999999e-05, 8.163899999999794e-05, 8.186100000000252e-05, 8.17780000000011e-05, 8.144499999999943e-05, 8.173600000000239e-05]</msg>
<status status="PASS" starttime="20201112 10:15:25.251" endtime="20201112 10:15:25.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.246" endtime="20201112 10:15:25.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.256" endtime="20201112 10:15:25.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.259" endtime="20201112 10:15:25.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.258" endtime="20201112 10:15:25.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.254" endtime="20201112 10:15:25.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.888" endtime="20201112 10:15:25.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.888" endtime="20201112 10:15:25.280"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.289" endtime="20201112 10:15:25.306"></status>
</kw>
<msg timestamp="20201112 10:15:25.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.287" endtime="20201112 10:15:25.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.308" endtime="20201112 10:15:25.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.310" endtime="20201112 10:15:25.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.285" endtime="20201112 10:15:25.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.283" endtime="20201112 10:15:25.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.320" endtime="20201112 10:15:25.607"></status>
</kw>
<msg timestamp="20201112 10:15:25.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.319" endtime="20201112 10:15:25.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.611" endtime="20201112 10:15:25.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.620" endtime="20201112 10:15:25.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.316" endtime="20201112 10:15:25.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.314" endtime="20201112 10:15:25.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.626" level="INFO">${RESULT} = [{'time': 0.022032931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.232000000000031e-05, 'source_diff': 8.232000000000031e-05}, {'time': 0.022117917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:25.623" endtime="20201112 10:15:25.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.640" level="INFO">${ACCURACY} = {'source_diff': [8.232000000000031e-05, 8.24170000000013e-05, 8.247299999999957e-05, 8.255599999999752e-05, 8.24309999999974e-05, 8.259700000000023e-05, 8.240299999999826e-05, 8.273599999999992e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:25.627" endtime="20201112 10:15:25.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.644" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.643" endtime="20201112 10:15:25.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.647" level="INFO">VALUE: [8.232000000000031e-05, 8.24170000000013e-05, 8.247299999999957e-05, 8.255599999999752e-05, 8.24309999999974e-05, 8.259700000000023e-05, 8.240299999999826e-05, 8.273599999999992e-05, 8.234699999999998e-05, 8.237499999999912e-05, 8.277699999999916e-05, 8.244400000000096e-05, 8.287499999999962e-05, 8.290299999999876e-05, 8.236099999999955e-05, 8.290299999999876e-05, 8.268100000000111e-05, 8.266699999999808e-05, 8.27780000000021e-05, 8.283400000000038e-05, 8.243100000000086e-05, 8.294399999999799e-05, 8.276399999999906e-05, 8.236199999999902e-05, 8.280599999999777e-05, 8.240199999999878e-05, 8.280599999999777e-05, 8.286100000000005e-05, 8.294500000000093e-05, 8.276399999999906e-05, 8.244400000000096e-05, 8.290299999999876e-05, 8.24720000000001e-05, 8.240299999999826e-05, 8.276400000000253e-05, 8.279200000000167e-05, 8.282000000000081e-05, 8.252800000000185e-05, 8.276399999999906e-05, 8.240299999999826e-05, 8.288899999999919e-05, 8.280600000000124e-05, 8.255600000000099e-05, 8.286100000000005e-05, 8.242999999999792e-05, 8.274999999999949e-05, 8.276299999999959e-05, 8.241600000000182e-05, 8.23049999999978e-05, 8.269400000000121e-05]</msg>
<status status="PASS" starttime="20201112 10:15:25.645" endtime="20201112 10:15:25.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.641" endtime="20201112 10:15:25.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.661" endtime="20201112 10:15:25.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.664" endtime="20201112 10:15:25.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.663" endtime="20201112 10:15:25.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.659" endtime="20201112 10:15:25.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.281" endtime="20201112 10:15:25.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.280" endtime="20201112 10:15:25.685"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.694" endtime="20201112 10:15:25.711"></status>
</kw>
<msg timestamp="20201112 10:15:25.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.692" endtime="20201112 10:15:25.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.713" endtime="20201112 10:15:25.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.715" endtime="20201112 10:15:25.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.690" endtime="20201112 10:15:25.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.688" endtime="20201112 10:15:25.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.725" endtime="20201112 10:15:26.010"></status>
</kw>
<msg timestamp="20201112 10:15:26.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.724" endtime="20201112 10:15:26.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.014" endtime="20201112 10:15:26.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.022" endtime="20201112 10:15:26.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.721" endtime="20201112 10:15:26.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.719" endtime="20201112 10:15:26.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.029" level="INFO">${RESULT} = [{'time': 0.021966417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.355599999999852e-05, 'source_diff': 8.355599999999852e-05}, {'time': 0.022052444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:26.026" endtime="20201112 10:15:26.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.043" level="INFO">${ACCURACY} = {'source_diff': [8.355599999999852e-05, 8.372200000000135e-05, 8.351399999999981e-05, 8.341599999999935e-05, 8.338800000000021e-05, 8.392999999999942e-05, 8.351300000000034e-05, 8.3846999999998e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:26.030" endtime="20201112 10:15:26.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.047" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.046" endtime="20201112 10:15:26.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.049" level="INFO">VALUE: [8.355599999999852e-05, 8.372200000000135e-05, 8.351399999999981e-05, 8.341599999999935e-05, 8.338800000000021e-05, 8.392999999999942e-05, 8.351300000000034e-05, 8.3846999999998e-05, 8.356899999999862e-05, 8.390299999999976e-05, 8.351399999999981e-05, 8.37919999999992e-05, 8.351399999999981e-05, 8.39309999999989e-05, 8.383299999999844e-05, 8.39309999999989e-05, 8.36390000000034e-05, 8.388900000000019e-05, 8.331999999999784e-05, 8.372300000000082e-05, 8.334800000000045e-05, 8.388900000000019e-05, 8.355599999999852e-05, 8.38049999999993e-05, 8.334700000000098e-05, 8.319399999999824e-05, 8.354200000000242e-05, 8.394399999999899e-05, 8.37919999999992e-05, 8.352799999999938e-05, 8.38049999999993e-05, 8.373600000000092e-05, 8.386100000000105e-05, 8.372199999999788e-05, 8.336099999999708e-05, 8.36110000000008e-05, 8.344500000000143e-05, 8.34729999999971e-05, 8.336200000000002e-05, 8.334800000000045e-05, 8.37919999999992e-05, 8.356900000000209e-05, 8.377700000000016e-05, 8.372200000000135e-05, 8.36659999999996e-05, 8.367999999999917e-05, 8.386100000000105e-05, 8.367999999999917e-05, 8.388900000000019e-05, 8.379200000000267e-05]</msg>
<status status="PASS" starttime="20201112 10:15:26.048" endtime="20201112 10:15:26.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.043" endtime="20201112 10:15:26.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.053" endtime="20201112 10:15:26.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.056" endtime="20201112 10:15:26.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.055" endtime="20201112 10:15:26.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.051" endtime="20201112 10:15:26.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.686" endtime="20201112 10:15:26.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.686" endtime="20201112 10:15:26.077"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.086" endtime="20201112 10:15:26.105"></status>
</kw>
<msg timestamp="20201112 10:15:26.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.084" endtime="20201112 10:15:26.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.107" endtime="20201112 10:15:26.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.109" endtime="20201112 10:15:26.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.082" endtime="20201112 10:15:26.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.080" endtime="20201112 10:15:26.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.119" endtime="20201112 10:15:26.404"></status>
</kw>
<msg timestamp="20201112 10:15:26.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.117" endtime="20201112 10:15:26.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.409" endtime="20201112 10:15:26.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.417" endtime="20201112 10:15:26.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.115" endtime="20201112 10:15:26.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.113" endtime="20201112 10:15:26.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.423" level="INFO">${RESULT} = [{'time': 0.022090653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.461099999999833e-05, 'source_diff': 8.461099999999833e-05}, {'time': 0.022177681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:26.420" endtime="20201112 10:15:26.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.437" level="INFO">${ACCURACY} = {'source_diff': [8.461099999999833e-05, 8.468099999999965e-05, 8.441699999999983e-05, 8.488900000000119e-05, 8.481999999999934e-05, 8.481899999999987e-05, 8.46249999999979e-05, 8.437499999999765e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:26.424" endtime="20201112 10:15:26.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.441" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.440" endtime="20201112 10:15:26.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.444" level="INFO">VALUE: [8.461099999999833e-05, 8.468099999999965e-05, 8.441699999999983e-05, 8.488900000000119e-05, 8.481999999999934e-05, 8.481899999999987e-05, 8.46249999999979e-05, 8.437499999999765e-05, 8.472199999999888e-05, 8.472199999999888e-05, 8.43469999999985e-05, 8.44859999999982e-05, 8.46530000000005e-05, 8.487499999999815e-05, 8.468000000000017e-05, 8.455599999999952e-05, 8.444399999999949e-05, 8.480599999999977e-05, 8.444499999999897e-05, 8.490299999999729e-05, 8.456999999999909e-05, 8.490300000000076e-05, 8.476400000000106e-05, 8.487500000000162e-05, 8.463900000000094e-05, 8.451300000000134e-05, 8.441699999999983e-05, 8.442999999999992e-05, 8.452699999999744e-05, 8.438900000000069e-05, 8.48050000000003e-05, 8.486100000000205e-05, 8.452799999999691e-05, 8.469399999999974e-05, 8.472299999999836e-05, 8.437500000000112e-05, 8.472199999999888e-05, 8.443100000000286e-05, 8.46530000000005e-05, 8.477799999999716e-05, 8.447199999999863e-05, 8.459799999999823e-05, 8.433399999999841e-05, 8.491599999999738e-05, 8.47920000000002e-05, 8.481899999999987e-05, 8.445899999999854e-05, 8.459699999999876e-05, 8.431899999999937e-05, 8.455500000000005e-05]</msg>
<status status="PASS" starttime="20201112 10:15:26.442" endtime="20201112 10:15:26.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.438" endtime="20201112 10:15:26.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.447" endtime="20201112 10:15:26.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.451" endtime="20201112 10:15:26.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.449" endtime="20201112 10:15:26.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.446" endtime="20201112 10:15:26.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.078" endtime="20201112 10:15:26.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.078" endtime="20201112 10:15:26.479"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.488" endtime="20201112 10:15:26.505"></status>
</kw>
<msg timestamp="20201112 10:15:26.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.486" endtime="20201112 10:15:26.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.507" endtime="20201112 10:15:26.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.509" endtime="20201112 10:15:26.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.483" endtime="20201112 10:15:26.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.481" endtime="20201112 10:15:26.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.519" endtime="20201112 10:15:26.805"></status>
</kw>
<msg timestamp="20201112 10:15:26.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029492597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029577958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.518" endtime="20201112 10:15:26.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029492597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029577958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.809" endtime="20201112 10:15:26.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.817" endtime="20201112 10:15:26.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.515" endtime="20201112 10:15:26.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.513" endtime="20201112 10:15:26.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.824" level="INFO">${RESULT} = [{'time': 0.029577958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.536100000000255e-05, 'source_diff': 8.536100000000255e-05}, {'time': 0.029665972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:26.821" endtime="20201112 10:15:26.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.839" level="INFO">${ACCURACY} = {'source_diff': [8.536100000000255e-05, 8.559699999999976e-05, 8.536099999999908e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.551399999999834e-05, 8.538900000000169e-05, 8.588900000000219e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:26.825" endtime="20201112 10:15:26.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.843" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.842" endtime="20201112 10:15:26.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.845" level="INFO">VALUE: [8.536100000000255e-05, 8.559699999999976e-05, 8.536099999999908e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.551399999999834e-05, 8.538900000000169e-05, 8.588900000000219e-05, 8.583300000000044e-05, 8.56530000000015e-05, 8.558300000000019e-05, 8.588899999999872e-05, 8.53469999999995e-05, 8.587500000000262e-05, 8.537499999999865e-05, 8.572299999999936e-05, 8.587500000000262e-05, 8.54859999999992e-05, 8.573699999999893e-05, 8.572199999999641e-05, 8.552700000000191e-05, 8.54999999999953e-05, 8.544399999999702e-05, 8.56249999999989e-05, 8.540299999999779e-05, 8.59590000000035e-05, 8.580600000000077e-05, 8.577800000000163e-05, 8.552799999999444e-05, 8.538899999999822e-05, 8.550000000000224e-05, 8.520900000000275e-05, 8.580600000000077e-05, 8.591699999999786e-05, 8.583399999999991e-05, 8.597199999999666e-05, 8.534799999999898e-05, 8.576400000000206e-05, 8.547300000000257e-05, 8.555500000000105e-05, 8.561099999999933e-05, 8.561099999999933e-05, 8.586099999999958e-05, 8.575000000000249e-05, 8.583300000000044e-05, 8.558300000000019e-05, 8.583300000000044e-05, 8.568099999999718e-05, 8.552800000000138e-05, 8.536099999999908e-05]</msg>
<status status="PASS" starttime="20201112 10:15:26.844" endtime="20201112 10:15:26.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.839" endtime="20201112 10:15:26.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.849" endtime="20201112 10:15:26.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.852" endtime="20201112 10:15:26.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.851" endtime="20201112 10:15:26.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.847" endtime="20201112 10:15:26.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.480" endtime="20201112 10:15:26.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.479" endtime="20201112 10:15:26.873"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.882" endtime="20201112 10:15:26.900"></status>
</kw>
<msg timestamp="20201112 10:15:26.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.880" endtime="20201112 10:15:26.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.902" endtime="20201112 10:15:26.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.904" endtime="20201112 10:15:26.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.878" endtime="20201112 10:15:26.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.876" endtime="20201112 10:15:26.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.914" endtime="20201112 10:15:27.198"></status>
</kw>
<msg timestamp="20201112 10:15:27.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.912" endtime="20201112 10:15:27.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.202" endtime="20201112 10:15:27.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.210" endtime="20201112 10:15:27.212"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.910" endtime="20201112 10:15:27.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.908" endtime="20201112 10:15:27.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:27.217" level="INFO">${RESULT} = [{'time': 0.021868944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.63050000000018e-05, 'source_diff': 8.63050000000018e-05}, {'time': 0.021957958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:27.214" endtime="20201112 10:15:27.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:27.230" level="INFO">${ACCURACY} = {'source_diff': [8.63050000000018e-05, 8.63470000000005e-05, 8.683299999999797e-05, 8.665299999999904e-05, 8.641599999999888e-05, 8.644400000000149e-05, 8.665299999999904e-05, 8.66530000000025e-05, 8....</msg>
<status status="PASS" starttime="20201112 10:15:27.218" endtime="20201112 10:15:27.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.235" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 10:15:27.234" endtime="20201112 10:15:27.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.238" level="INFO">VALUE: [8.63050000000018e-05, 8.63470000000005e-05, 8.683299999999797e-05, 8.665299999999904e-05, 8.641599999999888e-05, 8.644400000000149e-05, 8.665299999999904e-05, 8.66530000000025e-05, 8.66249999999999e-05, 8.647199999999716e-05, 8.63470000000005e-05, 8.672200000000088e-05, 8.645900000000054e-05, 8.691699999999886e-05, 8.649999999999977e-05, 8.66249999999999e-05, 8.637499999999965e-05, 8.669399999999827e-05, 8.665299999999904e-05, 8.661100000000033e-05, 8.641600000000235e-05, 8.644399999999802e-05, 8.634699999999704e-05, 8.688899999999972e-05, 8.636100000000008e-05, 8.619500000000072e-05, 8.658299999999772e-05, 8.61669999999981e-05, 8.638899999999922e-05, 8.665299999999904e-05, 8.68189999999984e-05, 8.670900000000079e-05, 8.665299999999904e-05, 8.680600000000177e-05, 8.637499999999965e-05, 8.656899999999815e-05, 8.677799999999916e-05, 8.677699999999969e-05, 8.641699999999836e-05, 8.655500000000205e-05, 8.637499999999965e-05, 8.68050000000023e-05, 8.677799999999916e-05, 8.655599999999805e-05, 8.6847000000001e-05, 8.693099999999843e-05, 8.637499999999965e-05, 8.686100000000058e-05, 8.68050000000023e-05, 8.680499999999883e-05]</msg>
<status status="PASS" starttime="20201112 10:15:27.236" endtime="20201112 10:15:27.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.231" endtime="20201112 10:15:27.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.241" endtime="20201112 10:15:27.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.244" endtime="20201112 10:15:27.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.243" endtime="20201112 10:15:27.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.239" endtime="20201112 10:15:27.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.874" endtime="20201112 10:15:27.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.873" endtime="20201112 10:15:27.265"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.274" endtime="20201112 10:15:27.292"></status>
</kw>
<msg timestamp="20201112 10:15:27.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.272" endtime="20201112 10:15:27.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.294" endtime="20201112 10:15:27.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.296" endtime="20201112 10:15:27.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.270" endtime="20201112 10:15:27.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.268" endtime="20201112 10:15:27.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.306" endtime="20201112 10:15:27.591"></status>
</kw>
<msg timestamp="20201112 10:15:27.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.304" endtime="20201112 10:15:27.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.596" endtime="20201112 10:15:27.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.604" endtime="20201112 10:15:27.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.302" endtime="20201112 10:15:27.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.300" endtime="20201112 10:15:27.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:27.610" level="INFO">${RESULT} = [{'time': 0.021962431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.76669999999996e-05, 'source_diff': 8.76669999999996e-05}, {'time': 0.022052458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:27.607" endtime="20201112 10:15:27.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:27.624" level="INFO">${ACCURACY} = {'source_diff': [8.76669999999996e-05, 8.78189999999994e-05, 8.769399999999927e-05, 8.736100000000108e-05, 8.787500000000115e-05, 8.769399999999927e-05, 8.779199999999973e-05, 8.798599999999823e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:27.611" endtime="20201112 10:15:27.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.628" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 10:15:27.627" endtime="20201112 10:15:27.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.631" level="INFO">VALUE: [8.76669999999996e-05, 8.78189999999994e-05, 8.769399999999927e-05, 8.736100000000108e-05, 8.787500000000115e-05, 8.769399999999927e-05, 8.779199999999973e-05, 8.798599999999823e-05, 8.740300000000326e-05, 8.769500000000222e-05, 8.779199999999973e-05, 8.768099999999918e-05, 8.74449999999985e-05, 8.745899999999807e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.78059999999993e-05, 8.737500000000065e-05, 8.788900000000072e-05, 8.741599999999988e-05, 8.750000000000077e-05, 8.758299999999872e-05, 8.766600000000013e-05, 8.748599999999773e-05, 8.742999999999945e-05, 8.738900000000022e-05, 8.765299999999657e-05, 8.783399999999844e-05, 8.78059999999993e-05, 8.7944999999999e-05, 8.747200000000163e-05, 8.768099999999918e-05, 8.756999999999862e-05, 8.787499999999768e-05, 8.761099999999786e-05, 8.755499999999958e-05, 8.74860000000012e-05, 8.754100000000001e-05, 8.736100000000108e-05, 8.763900000000047e-05, 8.787500000000115e-05, 8.773599999999798e-05, 8.754100000000001e-05, 8.747199999999816e-05, 8.759699999999829e-05, 8.783300000000244e-05, 8.76669999999996e-05, 8.784700000000201e-05, 8.779100000000026e-05, 8.74860000000012e-05]</msg>
<status status="PASS" starttime="20201112 10:15:27.629" endtime="20201112 10:15:27.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.625" endtime="20201112 10:15:27.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.634" endtime="20201112 10:15:27.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.638" endtime="20201112 10:15:27.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.636" endtime="20201112 10:15:27.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.633" endtime="20201112 10:15:27.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.266" endtime="20201112 10:15:27.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.266" endtime="20201112 10:15:27.659"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.667" endtime="20201112 10:15:27.686"></status>
</kw>
<msg timestamp="20201112 10:15:27.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.666" endtime="20201112 10:15:27.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.687" endtime="20201112 10:15:27.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.690" endtime="20201112 10:15:27.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.663" endtime="20201112 10:15:27.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.661" endtime="20201112 10:15:27.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.699" endtime="20201112 10:15:27.984"></status>
</kw>
<msg timestamp="20201112 10:15:27.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.698" endtime="20201112 10:15:27.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.988" endtime="20201112 10:15:27.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.996" endtime="20201112 10:15:27.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.695" endtime="20201112 10:15:27.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.694" endtime="20201112 10:15:27.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.003" level="INFO">${RESULT} = [{'time': 0.022030139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.81670000000001e-05, 'source_diff': 8.81670000000001e-05}, {'time': 0.022121181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:28.000" endtime="20201112 10:15:28.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.017" level="INFO">${ACCURACY} = {'source_diff': [8.81670000000001e-05, 8.851400000000134e-05, 8.876400000000159e-05, 8.884699999999954e-05, 8.838900000000122e-05, 8.880500000000083e-05, 8.894400000000052e-05, 8.894400000000052e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:28.004" endtime="20201112 10:15:28.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.021" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.020" endtime="20201112 10:15:28.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.023" level="INFO">VALUE: [8.81670000000001e-05, 8.851400000000134e-05, 8.876400000000159e-05, 8.884699999999954e-05, 8.838900000000122e-05, 8.880500000000083e-05, 8.894400000000052e-05, 8.894400000000052e-05, 8.86250000000019e-05, 8.883299999999997e-05, 8.845799999999959e-05, 8.873599999999898e-05, 8.844400000000002e-05, 8.870799999999984e-05, 8.886099999999911e-05, 8.845799999999959e-05, 8.883299999999997e-05, 8.847299999999864e-05, 8.855600000000005e-05, 8.872300000000236e-05, 8.869499999999975e-05, 8.869499999999975e-05, 8.855600000000005e-05, 8.858399999999919e-05, 8.855600000000005e-05, 8.838799999999827e-05, 8.838799999999827e-05, 8.844400000000002e-05, 8.859699999999929e-05, 8.872199999999941e-05, 8.869400000000027e-05, 8.863900000000147e-05, 8.836099999999861e-05, 8.893100000000043e-05, 8.84860000000022e-05, 8.856999999999962e-05, 8.88190000000004e-05, 8.876399999999812e-05, 8.856999999999962e-05, 8.851400000000134e-05, 8.859700000000276e-05, 8.869400000000027e-05, 8.833399999999894e-05, 8.841600000000088e-05, 8.854100000000101e-05, 8.84860000000022e-05, 8.852700000000144e-05, 8.876399999999812e-05, 8.865299999999757e-05, 8.843099999999993e-05]</msg>
<status status="PASS" starttime="20201112 10:15:28.022" endtime="20201112 10:15:28.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.017" endtime="20201112 10:15:28.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.027" endtime="20201112 10:15:28.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.030" endtime="20201112 10:15:28.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.029" endtime="20201112 10:15:28.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.025" endtime="20201112 10:15:28.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.660" endtime="20201112 10:15:28.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.659" endtime="20201112 10:15:28.051"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.060" endtime="20201112 10:15:28.078"></status>
</kw>
<msg timestamp="20201112 10:15:28.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.058" endtime="20201112 10:15:28.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.079" endtime="20201112 10:15:28.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.082" endtime="20201112 10:15:28.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.056" endtime="20201112 10:15:28.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.054" endtime="20201112 10:15:28.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.092" endtime="20201112 10:15:28.377"></status>
</kw>
<msg timestamp="20201112 10:15:28.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.090" endtime="20201112 10:15:28.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.381" endtime="20201112 10:15:28.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.390" endtime="20201112 10:15:28.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.088" endtime="20201112 10:15:28.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.086" endtime="20201112 10:15:28.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.396" level="INFO">${RESULT} = [{'time': 0.022108903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.988899999999925e-05, 'source_diff': 8.988899999999925e-05}, {'time': 0.022200931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:28.393" endtime="20201112 10:15:28.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.411" level="INFO">${ACCURACY} = {'source_diff': [8.988899999999925e-05, 8.976399999999912e-05, 8.969499999999728e-05, 8.954100000000201e-05, 8.972200000000041e-05, 8.970800000000084e-05, 8.9332999999997e-05, 8.968099999999771e-05, 8...</msg>
<status status="PASS" starttime="20201112 10:15:28.397" endtime="20201112 10:15:28.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.415" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.414" endtime="20201112 10:15:28.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.418" level="INFO">VALUE: [8.988899999999925e-05, 8.976399999999912e-05, 8.969499999999728e-05, 8.954100000000201e-05, 8.972200000000041e-05, 8.970800000000084e-05, 8.9332999999997e-05, 8.968099999999771e-05, 8.944400000000102e-05, 8.94999999999993e-05, 8.966600000000213e-05, 8.994499999999753e-05, 8.948599999999973e-05, 8.974999999999955e-05, 8.983300000000097e-05, 8.959700000000029e-05, 8.965300000000204e-05, 8.979199999999826e-05, 8.945800000000059e-05, 8.979200000000173e-05, 8.965299999999857e-05, 8.945800000000059e-05, 8.957000000000062e-05, 8.959700000000029e-05, 8.944400000000102e-05, 8.961099999999986e-05, 8.972200000000041e-05, 8.990299999999882e-05, 8.969400000000127e-05, 8.940300000000179e-05, 8.933300000000047e-05, 8.990299999999882e-05, 8.972200000000041e-05, 8.987499999999968e-05, 8.947200000000016e-05, 8.959799999999976e-05, 8.966699999999814e-05, 8.958400000000019e-05, 8.969500000000075e-05, 8.976400000000259e-05, 8.984800000000001e-05, 8.961099999999986e-05, 8.96800000000017e-05, 8.937499999999918e-05, 8.987499999999968e-05, 8.973599999999998e-05, 8.929100000000176e-05, 8.957000000000062e-05, 8.983300000000097e-05, 8.976400000000259e-05]</msg>
<status status="PASS" starttime="20201112 10:15:28.416" endtime="20201112 10:15:28.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.412" endtime="20201112 10:15:28.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.421" endtime="20201112 10:15:28.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.425" endtime="20201112 10:15:28.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.423" endtime="20201112 10:15:28.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.420" endtime="20201112 10:15:28.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.052" endtime="20201112 10:15:28.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.052" endtime="20201112 10:15:28.446"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.454" endtime="20201112 10:15:28.472"></status>
</kw>
<msg timestamp="20201112 10:15:28.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.452" endtime="20201112 10:15:28.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.474" endtime="20201112 10:15:28.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.476" endtime="20201112 10:15:28.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.450" endtime="20201112 10:15:28.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.448" endtime="20201112 10:15:28.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.486" endtime="20201112 10:15:28.771"></status>
</kw>
<msg timestamp="20201112 10:15:28.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.484" endtime="20201112 10:15:28.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.776" endtime="20201112 10:15:28.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.784" endtime="20201112 10:15:28.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.482" endtime="20201112 10:15:28.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.480" endtime="20201112 10:15:28.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.791" level="INFO">${RESULT} = [{'time': 0.022028736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030499999999886e-05, 'source_diff': 9.030499999999886e-05}, {'time': 0.022121764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:28.787" endtime="20201112 10:15:28.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.804" level="INFO">${ACCURACY} = {'source_diff': [9.030499999999886e-05, 9.091699999999939e-05, 9.08329999999985e-05, 9.073600000000098e-05, 9.040299999999932e-05, 9.041700000000236e-05, 9.084699999999807e-05, 9.062500000000043e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:28.792" endtime="20201112 10:15:28.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.809" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.808" endtime="20201112 10:15:28.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.811" level="INFO">VALUE: [9.030499999999886e-05, 9.091699999999939e-05, 9.08329999999985e-05, 9.073600000000098e-05, 9.040299999999932e-05, 9.041700000000236e-05, 9.084699999999807e-05, 9.062500000000043e-05, 9.065299999999957e-05, 9.079099999999979e-05, 9.065299999999957e-05, 9.091599999999991e-05, 9.081899999999893e-05, 9.045799999999812e-05, 9.052699999999997e-05, 9.092999999999948e-05, 9.045800000000159e-05, 9.086099999999764e-05, 9.06670000000026e-05, 9.073600000000098e-05, 9.036100000000061e-05, 9.079199999999926e-05, 9.06670000000026e-05, 9.084800000000101e-05, 9.033400000000094e-05, 9.041699999999889e-05, 9.017999999999873e-05, 9.045799999999812e-05, 9.065299999999957e-05, 9.084700000000154e-05, 9.083300000000197e-05, 9.067999999999923e-05, 9.044399999999855e-05, 9.038900000000322e-05, 9.048600000000073e-05, 9.062500000000043e-05, 9.06939999999988e-05, 9.057000000000162e-05, 9.088900000000025e-05, 9.062500000000043e-05, 9.0332999999998e-05, 9.037500000000018e-05, 9.054099999999954e-05, 9.072300000000089e-05, 9.056999999999815e-05, 9.047199999999769e-05, 9.029200000000223e-05, 9.065299999999957e-05, 9.061100000000086e-05, 9.091599999999991e-05]</msg>
<status status="PASS" starttime="20201112 10:15:28.810" endtime="20201112 10:15:28.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.805" endtime="20201112 10:15:28.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.815" endtime="20201112 10:15:28.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.819" endtime="20201112 10:15:28.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.817" endtime="20201112 10:15:28.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.813" endtime="20201112 10:15:28.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.446" endtime="20201112 10:15:28.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.446" endtime="20201112 10:15:28.839"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.848" endtime="20201112 10:15:28.866"></status>
</kw>
<msg timestamp="20201112 10:15:28.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.847" endtime="20201112 10:15:28.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.868" endtime="20201112 10:15:28.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.870" endtime="20201112 10:15:28.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.844" endtime="20201112 10:15:28.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.842" endtime="20201112 10:15:28.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.880" endtime="20201112 10:15:29.166"></status>
</kw>
<msg timestamp="20201112 10:15:29.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.879" endtime="20201112 10:15:29.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.170" endtime="20201112 10:15:29.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.180" endtime="20201112 10:15:29.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.876" endtime="20201112 10:15:29.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.874" endtime="20201112 10:15:29.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.186" level="INFO">${RESULT} = [{'time': 0.022163403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.13060000000028e-05, 'source_diff': 9.13060000000028e-05}, {'time': 0.022257431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:29.183" endtime="20201112 10:15:29.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.200" level="INFO">${ACCURACY} = {'source_diff': [9.13060000000028e-05, 9.165300000000057e-05, 9.159800000000176e-05, 9.186100000000211e-05, 9.14589999999986e-05, 9.155500000000011e-05, 9.161099999999839e-05, 9.184699999999907e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:15:29.187" endtime="20201112 10:15:29.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.204" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.203" endtime="20201112 10:15:29.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.207" level="INFO">VALUE: [9.13060000000028e-05, 9.165300000000057e-05, 9.159800000000176e-05, 9.186100000000211e-05, 9.14589999999986e-05, 9.155500000000011e-05, 9.161099999999839e-05, 9.184699999999907e-05, 9.142999999999998e-05, 9.156899999999968e-05, 9.142999999999998e-05, 9.172199999999894e-05, 9.134699999999857e-05, 9.147200000000216e-05, 9.137500000000118e-05, 9.140300000000032e-05, 9.176400000000112e-05, 9.152800000000044e-05, 9.169499999999928e-05, 9.188800000000177e-05, 9.138900000000075e-05, 9.16939999999998e-05, 9.168000000000023e-05, 9.191600000000091e-05, 9.168000000000023e-05, 9.147200000000216e-05, 9.163899999999753e-05, 9.170799999999937e-05, 9.159699999999882e-05, 9.193099999999996e-05, 9.113899999999703e-05, 9.191700000000039e-05, 9.186100000000211e-05, 9.145900000000207e-05, 9.163899999999753e-05, 9.142999999999998e-05, 9.151400000000087e-05, 9.154200000000001e-05, 9.136099999999814e-05, 9.159699999999882e-05, 9.179100000000079e-05, 9.161099999999839e-05, 9.179100000000079e-05, 9.187500000000168e-05, 9.168099999999971e-05, 9.165300000000057e-05, 9.172200000000241e-05, 9.148600000000173e-05, 9.187500000000168e-05, 9.172199999999894e-05]</msg>
<status status="PASS" starttime="20201112 10:15:29.205" endtime="20201112 10:15:29.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.201" endtime="20201112 10:15:29.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.210" endtime="20201112 10:15:29.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.214" endtime="20201112 10:15:29.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.212" endtime="20201112 10:15:29.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.209" endtime="20201112 10:15:29.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.840" endtime="20201112 10:15:29.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.840" endtime="20201112 10:15:29.235"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.245" endtime="20201112 10:15:29.264"></status>
</kw>
<msg timestamp="20201112 10:15:29.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.243" endtime="20201112 10:15:29.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.265" endtime="20201112 10:15:29.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.268" endtime="20201112 10:15:29.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.240" endtime="20201112 10:15:29.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.238" endtime="20201112 10:15:29.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.278" endtime="20201112 10:15:29.564"></status>
</kw>
<msg timestamp="20201112 10:15:29.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024335056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.276" endtime="20201112 10:15:29.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024335056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.568" endtime="20201112 10:15:29.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.577" endtime="20201112 10:15:29.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.274" endtime="20201112 10:15:29.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.272" endtime="20201112 10:15:29.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.584" level="INFO">${RESULT} = [{'time': 0.024427833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.277699999999875e-05, 'source_diff': 9.277699999999875e-05}, {'time': 0.024522875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:29.581" endtime="20201112 10:15:29.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.597" level="INFO">${ACCURACY} = {'source_diff': [9.277699999999875e-05, 9.238899999999828e-05, 9.236100000000261e-05, 9.274999999999908e-05, 9.244400000000055e-05, 9.269500000000028e-05, 9.276399999999865e-05, 9.280600000000083e-05,...</msg>
<status status="PASS" starttime="20201112 10:15:29.585" endtime="20201112 10:15:29.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.602" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.601" endtime="20201112 10:15:29.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.604" level="INFO">VALUE: [9.277699999999875e-05, 9.238899999999828e-05, 9.236100000000261e-05, 9.274999999999908e-05, 9.244400000000055e-05, 9.269500000000028e-05, 9.276399999999865e-05, 9.280600000000083e-05, 9.262499999999896e-05, 9.240300000000132e-05, 9.254200000000101e-05, 9.258300000000025e-05, 9.249999999999883e-05, 9.29720000000002e-05, 9.240300000000132e-05, 9.26659999999982e-05, 9.272299999999942e-05, 9.2639000000002e-05, 9.286099999999964e-05, 9.24719999999997e-05, 9.251400000000187e-05, 9.274999999999908e-05, 9.272199999999994e-05, 9.283399999999997e-05, 9.279199999999779e-05, 9.274999999999908e-05, 9.241699999999742e-05, 9.286100000000311e-05, 9.272199999999994e-05, 9.261199999999886e-05, 9.243100000000046e-05, 9.258300000000025e-05, 9.233400000000294e-05, 9.241600000000141e-05, 9.277800000000169e-05, 9.276400000000212e-05, 9.237499999999871e-05, 9.240300000000132e-05, 9.286099999999964e-05, 9.293099999999749e-05, 9.25139999999984e-05, 9.238900000000175e-05, 9.281899999999746e-05, 9.269500000000028e-05, 9.288900000000225e-05, 9.257000000000015e-05, 9.240299999999785e-05, 9.263899999999853e-05, 9.241699999999742e-05, 9.243000000000098e-05]</msg>
<status status="PASS" starttime="20201112 10:15:29.603" endtime="20201112 10:15:29.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.598" endtime="20201112 10:15:29.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.608" endtime="20201112 10:15:29.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.611" endtime="20201112 10:15:29.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.610" endtime="20201112 10:15:29.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.606" endtime="20201112 10:15:29.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.236" endtime="20201112 10:15:29.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.235" endtime="20201112 10:15:29.632"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.641" endtime="20201112 10:15:29.659"></status>
</kw>
<msg timestamp="20201112 10:15:29.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.639" endtime="20201112 10:15:29.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.661" endtime="20201112 10:15:29.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.663" endtime="20201112 10:15:29.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.637" endtime="20201112 10:15:29.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.634" endtime="20201112 10:15:29.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.673" endtime="20201112 10:15:29.961"></status>
</kw>
<msg timestamp="20201112 10:15:29.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.671" endtime="20201112 10:15:29.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.965" endtime="20201112 10:15:29.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.973" endtime="20201112 10:15:29.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.669" endtime="20201112 10:15:29.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.667" endtime="20201112 10:15:29.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.981" level="INFO">${RESULT} = [{'time': 0.022246389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309699999999685e-05, 'source_diff': 9.309699999999685e-05}, {'time': 0.022342431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:29.978" endtime="20201112 10:15:29.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.995" level="INFO">${ACCURACY} = {'source_diff': [9.309699999999685e-05, 9.337499999999971e-05, 9.348600000000026e-05, 9.381900000000193e-05, 9.35139999999994e-05, 9.352700000000297e-05, 9.341600000000241e-05, 9.338899999999928e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:29.982" endtime="20201112 10:15:29.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.000" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.999" endtime="20201112 10:15:30.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.002" level="INFO">VALUE: [9.309699999999685e-05, 9.337499999999971e-05, 9.348600000000026e-05, 9.381900000000193e-05, 9.35139999999994e-05, 9.352700000000297e-05, 9.341600000000241e-05, 9.338899999999928e-05, 9.355499999999864e-05, 9.384700000000107e-05, 9.337499999999971e-05, 9.387500000000021e-05, 9.380499999999889e-05, 9.373600000000051e-05, 9.387500000000021e-05, 9.372199999999747e-05, 9.362499999999996e-05, 9.338899999999928e-05, 9.370899999999738e-05, 9.380499999999889e-05, 9.343099999999799e-05, 9.33879999999998e-05, 9.372300000000042e-05, 9.354199999999854e-05, 9.358400000000072e-05, 9.36659999999992e-05, 9.363800000000005e-05, 9.373600000000051e-05, 9.330499999999839e-05, 9.348600000000026e-05, 9.338899999999928e-05, 9.380600000000183e-05, 9.362499999999996e-05, 9.319500000000078e-05, 9.355600000000158e-05, 9.369499999999781e-05, 9.333400000000047e-05, 9.336199999999961e-05, 9.357000000000115e-05, 9.372200000000094e-05, 9.354199999999854e-05, 9.341600000000241e-05, 9.365199999999962e-05, 9.374999999999661e-05, 9.351400000000287e-05, 9.376399999999965e-05, 9.354200000000201e-05, 9.391699999999892e-05, 9.311099999999989e-05, 9.38880000000003e-05]</msg>
<status status="PASS" starttime="20201112 10:15:30.001" endtime="20201112 10:15:30.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.996" endtime="20201112 10:15:30.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.006" endtime="20201112 10:15:30.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:30.009" endtime="20201112 10:15:30.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.008" endtime="20201112 10:15:30.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.004" endtime="20201112 10:15:30.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.633" endtime="20201112 10:15:30.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.632" endtime="20201112 10:15:30.030"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.039" endtime="20201112 10:15:30.057"></status>
</kw>
<msg timestamp="20201112 10:15:30.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.037" endtime="20201112 10:15:30.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.059" endtime="20201112 10:15:30.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.061" endtime="20201112 10:15:30.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.035" endtime="20201112 10:15:30.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.033" endtime="20201112 10:15:30.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.071" endtime="20201112 10:15:30.357"></status>
</kw>
<msg timestamp="20201112 10:15:30.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.070" endtime="20201112 10:15:30.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.361" endtime="20201112 10:15:30.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.369" endtime="20201112 10:15:30.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.067" endtime="20201112 10:15:30.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.065" endtime="20201112 10:15:30.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:30.376" level="INFO">${RESULT} = [{'time': 0.021952986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.500000000000133e-05, 'source_diff': 9.500000000000133e-05}, {'time': 0.022050014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:30.372" endtime="20201112 10:15:30.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:30.390" level="INFO">${ACCURACY} = {'source_diff': [9.500000000000133e-05, 9.477800000000022e-05, 9.440299999999985e-05, 9.470899999999838e-05, 9.481999999999893e-05, 9.45140000000004e-05, 9.462499999999749e-05, 9.45140000000004e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:15:30.378" endtime="20201112 10:15:30.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.395" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 10:15:30.394" endtime="20201112 10:15:30.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.397" level="INFO">VALUE: [9.500000000000133e-05, 9.477800000000022e-05, 9.440299999999985e-05, 9.470899999999838e-05, 9.481999999999893e-05, 9.45140000000004e-05, 9.462499999999749e-05, 9.45140000000004e-05, 9.465299999999663e-05, 9.469500000000228e-05, 9.451300000000093e-05, 9.459699999999835e-05, 9.470900000000185e-05, 9.447199999999822e-05, 9.481899999999946e-05, 9.47079999999989e-05, 9.438900000000028e-05, 9.416700000000264e-05, 9.462500000000096e-05, 9.48469999999986e-05, 9.437500000000071e-05, 9.493099999999949e-05, 9.487500000000121e-05, 9.49720000000022e-05, 9.447199999999822e-05, 9.493100000000296e-05, 9.44590000000016e-05, 9.448700000000074e-05, 9.45140000000004e-05, 9.456899999999921e-05, 9.450000000000083e-05, 9.493000000000001e-05, 9.46660000000002e-05, 9.455499999999964e-05, 9.48469999999986e-05, 9.452800000000344e-05, 9.481899999999946e-05, 9.461100000000139e-05, 9.463899999999706e-05, 9.466699999999967e-05, 9.469399999999933e-05, 9.491699999999992e-05, 9.459699999999835e-05, 9.461199999999739e-05, 9.455599999999911e-05, 9.463900000000053e-05, 9.459799999999782e-05, 9.443000000000298e-05, 9.433400000000147e-05, 9.454199999999954e-05]</msg>
<status status="PASS" starttime="20201112 10:15:30.396" endtime="20201112 10:15:30.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.391" endtime="20201112 10:15:30.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.401" endtime="20201112 10:15:30.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:30.404" endtime="20201112 10:15:30.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.402" endtime="20201112 10:15:30.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.399" endtime="20201112 10:15:30.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.031" endtime="20201112 10:15:30.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.031" endtime="20201112 10:15:30.425"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.433" endtime="20201112 10:15:30.452"></status>
</kw>
<msg timestamp="20201112 10:15:30.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.432" endtime="20201112 10:15:30.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.454" endtime="20201112 10:15:30.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.456" endtime="20201112 10:15:30.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.429" endtime="20201112 10:15:30.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.427" endtime="20201112 10:15:30.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.466" endtime="20201112 10:15:30.753"></status>
</kw>
<msg timestamp="20201112 10:15:30.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.465" endtime="20201112 10:15:30.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.757" endtime="20201112 10:15:30.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.766" endtime="20201112 10:15:30.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.462" endtime="20201112 10:15:30.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.460" endtime="20201112 10:15:30.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:30.773" level="INFO">${RESULT} = [{'time': 0.022451486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.559699999999935e-05, 'source_diff': 9.559699999999935e-05}, {'time': 0.022549514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:30.769" endtime="20201112 10:15:30.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:30.787" level="INFO">${ACCURACY} = {'source_diff': [9.559699999999935e-05, 9.547199999999922e-05, 9.56530000000011e-05, 9.573600000000251e-05, 9.536099999999867e-05, 9.590300000000135e-05, 9.563900000000153e-05, 9.588900000000178e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:30.774" endtime="20201112 10:15:30.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.792" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 10:15:30.790" endtime="20201112 10:15:30.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.794" level="INFO">VALUE: [9.559699999999935e-05, 9.547199999999922e-05, 9.56530000000011e-05, 9.573600000000251e-05, 9.536099999999867e-05, 9.590300000000135e-05, 9.563900000000153e-05, 9.588900000000178e-05, 9.549999999999836e-05, 9.53469999999991e-05, 9.558399999999925e-05, 9.559699999999935e-05, 9.550000000000183e-05, 9.568000000000076e-05, 9.54019999999979e-05, 9.57079999999999e-05, 9.540300000000085e-05, 9.576400000000165e-05, 9.573599999999904e-05, 9.549999999999836e-05, 9.581999999999993e-05, 9.545799999999965e-05, 9.541700000000042e-05, 9.566700000000067e-05, 9.561099999999892e-05, 9.588899999999831e-05, 9.577800000000122e-05, 9.540300000000085e-05, 9.569499999999981e-05, 9.574999999999861e-05, 9.541700000000042e-05, 9.543000000000051e-05, 9.541600000000094e-05, 9.58469999999996e-05, 9.569400000000033e-05, 9.57079999999999e-05, 9.515299999999713e-05, 9.551399999999793e-05, 9.55140000000014e-05, 9.576399999999818e-05, 9.533299999999953e-05, 9.563899999999806e-05, 9.559699999999935e-05, 9.545899999999913e-05, 9.552800000000097e-05, 9.56530000000011e-05, 9.544499999999956e-05, 9.565199999999816e-05, 9.590200000000187e-05, 9.548600000000226e-05]</msg>
<status status="PASS" starttime="20201112 10:15:30.793" endtime="20201112 10:15:30.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.788" endtime="20201112 10:15:30.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.803" endtime="20201112 10:15:30.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:30.807" endtime="20201112 10:15:30.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.805" endtime="20201112 10:15:30.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.801" endtime="20201112 10:15:30.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.426" endtime="20201112 10:15:30.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.425" endtime="20201112 10:15:30.828"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.837" endtime="20201112 10:15:30.856"></status>
</kw>
<msg timestamp="20201112 10:15:30.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.835" endtime="20201112 10:15:30.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.858" endtime="20201112 10:15:30.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.860" endtime="20201112 10:15:30.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.833" endtime="20201112 10:15:30.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.831" endtime="20201112 10:15:30.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.871" endtime="20201112 10:15:31.166"></status>
</kw>
<msg timestamp="20201112 10:15:31.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.869" endtime="20201112 10:15:31.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.176" endtime="20201112 10:15:31.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.196" endtime="20201112 10:15:31.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.867" endtime="20201112 10:15:31.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.865" endtime="20201112 10:15:31.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.211" level="INFO">${RESULT} = [{'time': 0.022587222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.676399999999918e-05, 'source_diff': 9.676399999999918e-05}, {'time': 0.02268625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:31.203" endtime="20201112 10:15:31.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.239" level="INFO">${ACCURACY} = {'source_diff': [9.676399999999918e-05, 9.656900000000121e-05, 9.64859999999998e-05, 9.670900000000038e-05, 9.681900000000146e-05, 9.668100000000124e-05, 9.661099999999992e-05, 9.645900000000013e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:31.213" endtime="20201112 10:15:31.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.244" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.243" endtime="20201112 10:15:31.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.247" level="INFO">VALUE: [9.676399999999918e-05, 9.656900000000121e-05, 9.64859999999998e-05, 9.670900000000038e-05, 9.681900000000146e-05, 9.668100000000124e-05, 9.661099999999992e-05, 9.645900000000013e-05, 9.630600000000086e-05, 9.69019999999994e-05, 9.632000000000043e-05, 9.663899999999906e-05, 9.677699999999928e-05, 9.662499999999949e-05, 9.68470000000006e-05, 9.647200000000022e-05, 9.66799999999983e-05, 9.681900000000146e-05, 9.64859999999998e-05, 9.673600000000004e-05, 9.659700000000035e-05, 9.66530000000021e-05, 9.640299999999838e-05, 9.649999999999936e-05, 9.649999999999936e-05, 9.65279999999985e-05, 9.654100000000207e-05, 9.683300000000103e-05, 9.655600000000111e-05, 9.655500000000164e-05, 9.672299999999995e-05, 9.637499999999924e-05, 9.645799999999718e-05, 9.690299999999888e-05, 9.645799999999718e-05, 9.64859999999998e-05, 9.6721999999997e-05, 9.652800000000197e-05, 9.640299999999838e-05, 9.683399999999703e-05, 9.662499999999949e-05, 9.662499999999949e-05, 9.641700000000142e-05, 9.665299999999863e-05, 9.64859999999998e-05, 9.672200000000047e-05, 9.681899999999799e-05, 9.633299999999706e-05, 9.663899999999906e-05, 9.655500000000164e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.245" endtime="20201112 10:15:31.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.240" endtime="20201112 10:15:31.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.250" endtime="20201112 10:15:31.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.254" endtime="20201112 10:15:31.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.252" endtime="20201112 10:15:31.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.249" endtime="20201112 10:15:31.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.829" endtime="20201112 10:15:31.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.828" endtime="20201112 10:15:31.275"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.284" endtime="20201112 10:15:31.303"></status>
</kw>
<msg timestamp="20201112 10:15:31.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.282" endtime="20201112 10:15:31.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.305" endtime="20201112 10:15:31.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.307" endtime="20201112 10:15:31.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.280" endtime="20201112 10:15:31.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.278" endtime="20201112 10:15:31.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.318" endtime="20201112 10:15:31.604"></status>
</kw>
<msg timestamp="20201112 10:15:31.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.316" endtime="20201112 10:15:31.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.608" endtime="20201112 10:15:31.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.616" endtime="20201112 10:15:31.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.313" endtime="20201112 10:15:31.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.311" endtime="20201112 10:15:31.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.623" level="INFO">${RESULT} = [{'time': 0.022687028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.747200000000122e-05, 'source_diff': 9.747200000000122e-05}, {'time': 0.022787056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:31.619" endtime="20201112 10:15:31.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.637" level="INFO">${ACCURACY} = {'source_diff': [9.747200000000122e-05, 9.777799999999975e-05, 9.75279999999995e-05, 9.718100000000174e-05, 9.732000000000143e-05, 9.737500000000024e-05, 9.784800000000107e-05, 9.752700000000003e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:31.624" endtime="20201112 10:15:31.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.642" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.641" endtime="20201112 10:15:31.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.644" level="INFO">VALUE: [9.747200000000122e-05, 9.777799999999975e-05, 9.75279999999995e-05, 9.718100000000174e-05, 9.732000000000143e-05, 9.737500000000024e-05, 9.784800000000107e-05, 9.752700000000003e-05, 9.765199999999669e-05, 9.737500000000024e-05, 9.761100000000092e-05, 9.791700000000292e-05, 9.738899999999981e-05, 9.78479999999976e-05, 9.779199999999932e-05, 9.78059999999989e-05, 9.75279999999995e-05, 9.793099999999902e-05, 9.758400000000125e-05, 9.783399999999803e-05, 9.776399999999671e-05, 9.755600000000211e-05, 9.727799999999925e-05, 9.71799999999988e-05, 9.770900000000138e-05, 9.74019999999999e-05, 9.786100000000117e-05, 9.742999999999905e-05, 9.748599999999732e-05, 9.762500000000049e-05, 9.758300000000178e-05, 9.769499999999834e-05, 9.765299999999963e-05, 9.78059999999989e-05, 9.787500000000074e-05, 9.740299999999938e-05, 9.751399999999993e-05, 9.78470000000016e-05, 9.738899999999981e-05, 9.765200000000016e-05, 9.788900000000031e-05, 9.793000000000301e-05, 9.738899999999981e-05, 9.78609999999977e-05, 9.781899999999899e-05, 9.758300000000178e-05, 9.780500000000289e-05, 9.759700000000135e-05, 9.750000000000036e-05, 9.745799999999818e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.643" endtime="20201112 10:15:31.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.638" endtime="20201112 10:15:31.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.648" endtime="20201112 10:15:31.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.651" endtime="20201112 10:15:31.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.650" endtime="20201112 10:15:31.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.646" endtime="20201112 10:15:31.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.276" endtime="20201112 10:15:31.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.275" endtime="20201112 10:15:31.672"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.681" endtime="20201112 10:15:31.700"></status>
</kw>
<msg timestamp="20201112 10:15:31.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.679" endtime="20201112 10:15:31.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.701" endtime="20201112 10:15:31.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.704" endtime="20201112 10:15:31.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.677" endtime="20201112 10:15:31.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.674" endtime="20201112 10:15:31.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.713" endtime="20201112 10:15:32.015"></status>
</kw>
<msg timestamp="20201112 10:15:32.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.712" endtime="20201112 10:15:32.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.025" endtime="20201112 10:15:32.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.044" endtime="20201112 10:15:32.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.709" endtime="20201112 10:15:32.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.708" endtime="20201112 10:15:32.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.052" level="INFO">${RESULT} = [{'time': 0.021900444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.879100000000085e-05, 'source_diff': 9.879100000000085e-05}, {'time': 0.022001486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:32.049" endtime="20201112 10:15:32.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.066" level="INFO">${ACCURACY} = {'source_diff': [9.879100000000085e-05, 9.870799999999944e-05, 9.877800000000075e-05, 9.881999999999946e-05, 9.872200000000247e-05, 9.886100000000217e-05, 9.85280000000005e-05, 9.887500000000174e-05, ...</msg>
<status status="PASS" starttime="20201112 10:15:32.053" endtime="20201112 10:15:32.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.071" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.070" endtime="20201112 10:15:32.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.073" level="INFO">VALUE: [9.879100000000085e-05, 9.870799999999944e-05, 9.877800000000075e-05, 9.881999999999946e-05, 9.872200000000247e-05, 9.886100000000217e-05, 9.85280000000005e-05, 9.887500000000174e-05, 9.86670000000002e-05, 9.84020000000009e-05, 9.837499999999777e-05, 9.861099999999845e-05, 9.838900000000081e-05, 9.851300000000146e-05, 9.85410000000006e-05, 9.841699999999995e-05, 9.886100000000217e-05, 9.861100000000192e-05, 9.856899999999974e-05, 9.893000000000055e-05, 9.862499999999802e-05, 9.881999999999946e-05, 9.891700000000045e-05, 9.838900000000081e-05, 9.829199999999982e-05, 9.879200000000032e-05, 9.847199999999875e-05, 9.893000000000055e-05, 9.890199999999794e-05, 9.870799999999944e-05, 9.856999999999921e-05, 9.858299999999931e-05, 9.863900000000106e-05, 9.887499999999827e-05, 9.877800000000075e-05, 9.855500000000017e-05, 9.870799999999944e-05, 9.838900000000081e-05, 9.876400000000118e-05, 9.875000000000161e-05, 9.861099999999845e-05, 9.875000000000161e-05, 9.840299999999691e-05, 9.861200000000139e-05, 9.83609999999982e-05, 9.869499999999934e-05, 9.886199999999817e-05, 9.845799999999919e-05, 9.840300000000038e-05, 9.83609999999982e-05]</msg>
<status status="PASS" starttime="20201112 10:15:32.072" endtime="20201112 10:15:32.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.067" endtime="20201112 10:15:32.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.077" endtime="20201112 10:15:32.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.081" endtime="20201112 10:15:32.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.079" endtime="20201112 10:15:32.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.075" endtime="20201112 10:15:32.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.673" endtime="20201112 10:15:32.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.672" endtime="20201112 10:15:32.102"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.110" endtime="20201112 10:15:32.129"></status>
</kw>
<msg timestamp="20201112 10:15:32.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.109" endtime="20201112 10:15:32.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.130" endtime="20201112 10:15:32.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.133" endtime="20201112 10:15:32.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.106" endtime="20201112 10:15:32.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.104" endtime="20201112 10:15:32.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.143" endtime="20201112 10:15:32.429"></status>
</kw>
<msg timestamp="20201112 10:15:32.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.142" endtime="20201112 10:15:32.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.433" endtime="20201112 10:15:32.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.442" endtime="20201112 10:15:32.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.139" endtime="20201112 10:15:32.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.137" endtime="20201112 10:15:32.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.449" level="INFO">${RESULT} = [{'time': 0.022644444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.988799999999937e-05, 'source_diff': 9.988799999999937e-05}, {'time': 0.022746472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:32.445" endtime="20201112 10:15:32.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.463" level="INFO">${ACCURACY} = {'source_diff': [9.988799999999937e-05, 9.973599999999957e-05, 9.94860000000028e-05, 9.96809999999973e-05, 9.940300000000138e-05, 9.941700000000095e-05, 9.991700000000145e-05, 9.968100000000077e-05, 9...</msg>
<status status="PASS" starttime="20201112 10:15:32.450" endtime="20201112 10:15:32.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.467" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.466" endtime="20201112 10:15:32.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.470" level="INFO">VALUE: [9.988799999999937e-05, 9.973599999999957e-05, 9.94860000000028e-05, 9.96809999999973e-05, 9.940300000000138e-05, 9.941700000000095e-05, 9.991700000000145e-05, 9.968100000000077e-05, 9.977799999999828e-05, 9.976399999999871e-05, 9.955600000000064e-05, 9.976400000000218e-05, 9.988899999999884e-05, 9.987499999999927e-05, 9.983400000000003e-05, 9.988899999999884e-05, 9.965200000000216e-05, 9.91800000000008e-05, 9.940199999999844e-05, 9.955500000000117e-05, 9.969400000000087e-05, 9.962500000000249e-05, 9.970800000000044e-05, 9.957000000000021e-05, 9.979199999999785e-05, 9.947199999999976e-05, 9.975000000000261e-05, 9.93609999999992e-05, 9.943100000000052e-05, 9.94020000000019e-05, 9.961199999999892e-05, 9.94999999999989e-05, 9.942999999999758e-05, 9.994400000000112e-05, 9.974999999999914e-05, 9.983300000000056e-05, 9.945899999999966e-05, 9.988899999999884e-05, 9.977799999999828e-05, 9.918100000000027e-05, 9.94999999999989e-05, 9.945899999999966e-05, 9.952799999999803e-05, 9.98479999999996e-05, 9.959699999999988e-05, 9.955500000000117e-05, 9.948599999999932e-05, 9.96800000000013e-05, 9.965299999999816e-05, 9.955500000000117e-05]</msg>
<status status="PASS" starttime="20201112 10:15:32.468" endtime="20201112 10:15:32.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.464" endtime="20201112 10:15:32.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.474" endtime="20201112 10:15:32.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.477" endtime="20201112 10:15:32.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.476" endtime="20201112 10:15:32.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.472" endtime="20201112 10:15:32.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.102" endtime="20201112 10:15:32.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.102" endtime="20201112 10:15:32.498"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.507" endtime="20201112 10:15:32.526"></status>
</kw>
<msg timestamp="20201112 10:15:32.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.506" endtime="20201112 10:15:32.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.528" endtime="20201112 10:15:32.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.530" endtime="20201112 10:15:32.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.503" endtime="20201112 10:15:32.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.501" endtime="20201112 10:15:32.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.541" endtime="20201112 10:15:32.848"></status>
</kw>
<msg timestamp="20201112 10:15:32.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.539" endtime="20201112 10:15:32.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.857" endtime="20201112 10:15:32.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.865" endtime="20201112 10:15:32.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.536" endtime="20201112 10:15:32.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.535" endtime="20201112 10:15:32.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.871" level="INFO">${RESULT} = [{'time': 0.022528375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010044399999999815, 'source_diff': 0.00010044399999999815}, {'time': 0.022631389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:32.868" endtime="20201112 10:15:32.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.885" level="INFO">${ACCURACY} = {'source_diff': [0.00010044399999999815, 0.00010076399999999971, 0.00010063899999999959, 0.00010076399999999971, 0.00010072199999999754, 0.00010051399999999946, 0.00010056999999999774, 0.0001003749999...</msg>
<status status="PASS" starttime="20201112 10:15:32.872" endtime="20201112 10:15:32.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.889" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.888" endtime="20201112 10:15:32.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.891" level="INFO">VALUE: [0.00010044399999999815, 0.00010076399999999971, 0.00010063899999999959, 0.00010076399999999971, 0.00010072199999999754, 0.00010051399999999946, 0.00010056999999999774, 0.00010037499999999977, 0.00010044500000000109, 0.00010092999999999908, 0.00010087500000000027, 0.00010044399999999815, 0.00010040199999999944, 0.00010069400000000187, 0.00010070799999999797, 0.00010048600000000033, 0.00010038899999999934, 0.00010063899999999959, 0.00010075000000000014, 0.00010088800000000037, 0.00010074999999999668, 0.00010057000000000121, 0.00010037499999999977, 0.00010041700000000195, 0.00010033400000000053, 0.00010075000000000014, 0.00010047300000000023, 0.0001008610000000007, 0.00010034700000000063, 0.00010040300000000238, 0.00010061100000000045, 0.00010047199999999729, 0.00010062500000000002, 0.00010083299999999809, 0.00010068100000000177, 0.00010041699999999848, 0.00010073600000000058, 0.00010072300000000048, 0.00010063800000000012, 0.00010082000000000146, 0.00010047300000000023, 0.00010081899999999852, 0.00010055599999999817, 0.00010047200000000076, 0.00010054200000000207, 0.00010043000000000205, 0.00010056900000000174, 0.00010067999999999883, 0.00010066600000000273, 0.00010061100000000045]</msg>
<status status="PASS" starttime="20201112 10:15:32.890" endtime="20201112 10:15:32.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.885" endtime="20201112 10:15:32.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.895" endtime="20201112 10:15:32.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.899" endtime="20201112 10:15:32.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.897" endtime="20201112 10:15:32.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.893" endtime="20201112 10:15:32.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.499" endtime="20201112 10:15:32.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.498" endtime="20201112 10:15:32.919"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.928" endtime="20201112 10:15:32.947"></status>
</kw>
<msg timestamp="20201112 10:15:32.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.926" endtime="20201112 10:15:32.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.949" endtime="20201112 10:15:32.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.951" endtime="20201112 10:15:32.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.924" endtime="20201112 10:15:32.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.922" endtime="20201112 10:15:32.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.961" endtime="20201112 10:15:33.247"></status>
</kw>
<msg timestamp="20201112 10:15:33.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.960" endtime="20201112 10:15:33.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.251" endtime="20201112 10:15:33.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.259" endtime="20201112 10:15:33.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.957" endtime="20201112 10:15:33.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.955" endtime="20201112 10:15:33.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.265" level="INFO">${RESULT} = [{'time': 0.022354472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001015549999999997, 'source_diff': 0.0001015549999999997}, {'time': 0.0224585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:33.262" endtime="20201112 10:15:33.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:33.280" level="INFO">${ACCURACY} = {'source_diff': [0.0001015549999999997, 0.0001015000000000009, 0.00010133299999999859, 0.00010188899999999737, 0.00010137500000000077, 0.00010169500000000234, 0.00010144500000000209, 0.000101639000000...</msg>
<status status="PASS" starttime="20201112 10:15:33.266" endtime="20201112 10:15:33.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.284" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 10:15:33.283" endtime="20201112 10:15:33.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.287" level="INFO">VALUE: [0.0001015549999999997, 0.0001015000000000009, 0.00010133299999999859, 0.00010188899999999737, 0.00010137500000000077, 0.00010169500000000234, 0.00010144500000000209, 0.00010163900000000059, 0.00010176400000000071, 0.00010180499999999995, 0.0001016809999999993, 0.00010144500000000209, 0.00010159800000000135, 0.0001019160000000005, 0.00010170799999999897, 0.00010172199999999854, 0.0001016939999999994, 0.0001015000000000009, 0.00010186099999999823, 0.00010147199999999829, 0.00010143100000000252, 0.00010176300000000124, 0.00010162500000000102, 0.00010163900000000059, 0.00010155599999999917, 0.00010186099999999823, 0.00010152800000000003, 0.00010184699999999866, 0.0001016809999999993, 0.00010147199999999829, 0.00010181899999999952, 0.00010145800000000219, 0.00010165300000000016, 0.00010170800000000244, 0.00010181899999999952, 0.00010137500000000077, 0.00010130499999999945, 0.00010183399999999856, 0.00010158299999999884, 0.0001013619999999972, 0.00010183399999999856, 0.00010176400000000071, 0.00010158300000000231, 0.00010148600000000133, 0.00010140299999999991, 0.00010141699999999948, 0.00010179100000000038, 0.00010176400000000071, 0.00010179100000000038, 0.00010162499999999755]</msg>
<status status="PASS" starttime="20201112 10:15:33.285" endtime="20201112 10:15:33.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.281" endtime="20201112 10:15:33.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.290" endtime="20201112 10:15:33.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.294" endtime="20201112 10:15:33.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.292" endtime="20201112 10:15:33.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.289" endtime="20201112 10:15:33.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.920" endtime="20201112 10:15:33.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.920" endtime="20201112 10:15:33.314"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.323" endtime="20201112 10:15:33.342"></status>
</kw>
<msg timestamp="20201112 10:15:33.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.321" endtime="20201112 10:15:33.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.344" endtime="20201112 10:15:33.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.346" endtime="20201112 10:15:33.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.319" endtime="20201112 10:15:33.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.317" endtime="20201112 10:15:33.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.356" endtime="20201112 10:15:33.642"></status>
</kw>
<msg timestamp="20201112 10:15:33.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.355" endtime="20201112 10:15:33.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.646" endtime="20201112 10:15:33.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.654" endtime="20201112 10:15:33.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.352" endtime="20201112 10:15:33.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.350" endtime="20201112 10:15:33.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.660" level="INFO">${RESULT} = [{'time': 0.022023333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010230500000000045, 'source_diff': 0.00010230500000000045}, {'time': 0.022128347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:33.657" endtime="20201112 10:15:33.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:33.674" level="INFO">${ACCURACY} = {'source_diff': [0.00010230500000000045, 0.00010243000000000058, 0.00010275000000000215, 0.0001023610000000022, 0.00010238900000000134, 0.00010274999999999868, 0.00010274999999999868, 0.00010244499999...</msg>
<status status="PASS" starttime="20201112 10:15:33.661" endtime="20201112 10:15:33.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.678" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 10:15:33.677" endtime="20201112 10:15:33.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.680" level="INFO">VALUE: [0.00010230500000000045, 0.00010243000000000058, 0.00010275000000000215, 0.0001023610000000022, 0.00010238900000000134, 0.00010274999999999868, 0.00010274999999999868, 0.00010244499999999962, 0.00010270799999999997, 0.00010249999999999843, 0.00010284799999999913, 0.0001023879999999984, 0.00010269499999999987, 0.00010262500000000202, 0.00010245899999999919, 0.00010272199999999954, 0.00010243000000000058, 0.00010283300000000009, 0.0001023610000000022, 0.00010247199999999929, 0.00010247199999999929, 0.00010281900000000052, 0.00010234700000000263, 0.00010252700000000156, 0.00010279200000000085, 0.00010258399999999931, 0.00010276400000000172, 0.00010283399999999956, 0.00010252799999999757, 0.00010243000000000058, 0.00010270899999999944, 0.00010293000000000108, 0.00010261100000000245, 0.00010275000000000215, 0.00010213899999999762, 0.00010254100000000113, 0.00010266700000000073, 0.00010281900000000052, 0.00010279200000000085, 0.00010294500000000012, 0.00010245799999999972, 0.00010277799999999782, 0.00010265300000000116, 0.00010245899999999919, 0.00010279199999999739, 0.00010241599999999754, 0.00010238900000000134, 0.0001028749999999988, 0.00010277799999999782, 0.00010270799999999997]</msg>
<status status="PASS" starttime="20201112 10:15:33.679" endtime="20201112 10:15:33.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.675" endtime="20201112 10:15:33.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.684" endtime="20201112 10:15:33.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.687" endtime="20201112 10:15:33.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.686" endtime="20201112 10:15:33.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.682" endtime="20201112 10:15:33.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.315" endtime="20201112 10:15:33.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.315" endtime="20201112 10:15:33.708"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.717" endtime="20201112 10:15:33.737"></status>
</kw>
<msg timestamp="20201112 10:15:33.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.715" endtime="20201112 10:15:33.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.738" endtime="20201112 10:15:33.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.741" endtime="20201112 10:15:33.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.713" endtime="20201112 10:15:33.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.711" endtime="20201112 10:15:33.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.751" endtime="20201112 10:15:34.037"></status>
</kw>
<msg timestamp="20201112 10:15:34.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.749" endtime="20201112 10:15:34.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.041" endtime="20201112 10:15:34.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.049" endtime="20201112 10:15:34.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.746" endtime="20201112 10:15:34.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.745" endtime="20201112 10:15:34.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.055" level="INFO">${RESULT} = [{'time': 0.022027847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010302799999999807, 'source_diff': 0.00010302799999999807}, {'time': 0.022133889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:34.052" endtime="20201112 10:15:34.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.069" level="INFO">${ACCURACY} = {'source_diff': [0.00010302799999999807, 0.0001036810000000013, 0.00010358300000000084, 0.00010354199999999814, 0.00010356999999999728, 0.000103820000000001, 0.00010368099999999783, 0.0001036249999999...</msg>
<status status="PASS" starttime="20201112 10:15:34.056" endtime="20201112 10:15:34.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.073" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.072" endtime="20201112 10:15:34.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.075" level="INFO">VALUE: [0.00010302799999999807, 0.0001036810000000013, 0.00010358300000000084, 0.00010354199999999814, 0.00010356999999999728, 0.000103820000000001, 0.00010368099999999783, 0.00010362499999999955, 0.00010357000000000074, 0.0001037360000000001, 0.00010362499999999955, 0.00010338900000000234, 0.00010312499999999905, 0.00010390299999999894, 0.00010380499999999848, 0.0001033749999999993, 0.00010359699999999694, 0.00010366699999999826, 0.00010341700000000148, 0.00010395899999999722, 0.00010376400000000272, 0.00010395800000000122, 0.00010341700000000148, 0.00010344500000000062, 0.00010351400000000247, 0.0001038749999999998, 0.00010338800000000287, 0.00010317999999999786, 0.00010386100000000023, 0.00010373599999999664, 0.0001036940000000014, 0.0001035000000000029, 0.00010368099999999783, 0.00010361099999999998, 0.00010336099999999973, 0.00010379200000000185, 0.00010383300000000109, 0.00010348599999999986, 0.00010372300000000001, 0.0001035000000000029, 0.00010345900000000019, 0.00010348599999999986, 0.00010357000000000074, 0.0001035000000000029, 0.0001033879999999994, 0.00010368000000000183, 0.00010355499999999823, 0.0001035420000000016, 0.00010384700000000066, 0.00010358400000000031]</msg>
<status status="PASS" starttime="20201112 10:15:34.074" endtime="20201112 10:15:34.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.069" endtime="20201112 10:15:34.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.079" endtime="20201112 10:15:34.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.082" endtime="20201112 10:15:34.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.081" endtime="20201112 10:15:34.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.077" endtime="20201112 10:15:34.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.709" endtime="20201112 10:15:34.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.709" endtime="20201112 10:15:34.103"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.112" endtime="20201112 10:15:34.131"></status>
</kw>
<msg timestamp="20201112 10:15:34.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.110" endtime="20201112 10:15:34.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.132" endtime="20201112 10:15:34.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.135" endtime="20201112 10:15:34.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.108" endtime="20201112 10:15:34.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.106" endtime="20201112 10:15:34.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.145" endtime="20201112 10:15:34.430"></status>
</kw>
<msg timestamp="20201112 10:15:34.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.143" endtime="20201112 10:15:34.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.434" endtime="20201112 10:15:34.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.442" endtime="20201112 10:15:34.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.141" endtime="20201112 10:15:34.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.139" endtime="20201112 10:15:34.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.448" level="INFO">${RESULT} = [{'time': 0.021979167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010495900000000169, 'source_diff': 0.00010495900000000169}, {'time': 0.022086181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:34.445" endtime="20201112 10:15:34.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.462" level="INFO">${ACCURACY} = {'source_diff': [0.00010495900000000169, 0.00010459800000000088, 0.00010447300000000076, 0.00010459699999999794, 0.00010437499999999683, 0.00010458300000000184, 0.00010454099999999966, 0.0001045549999...</msg>
<status status="PASS" starttime="20201112 10:15:34.450" endtime="20201112 10:15:34.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.466" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.465" endtime="20201112 10:15:34.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.469" level="INFO">VALUE: [0.00010495900000000169, 0.00010459800000000088, 0.00010447300000000076, 0.00010459699999999794, 0.00010437499999999683, 0.00010458300000000184, 0.00010454099999999966, 0.00010455499999999923, 0.00010411100000000048, 0.0001048620000000007, 0.00010481899999999905, 0.00010491699999999951, 0.00010466700000000273, 0.00010448600000000086, 0.00010450000000000043, 0.00010463899999999665, 0.00010461100000000098, 0.0001047360000000011, 0.00010490200000000047, 0.00010479099999999991, 0.00010440299999999944, 0.00010438899999999987, 0.0001048880000000009, 0.00010475000000000068, 0.00010462500000000055, 0.00010462500000000055, 0.0001045420000000026, 0.00010472299999999754, 0.00010444399999999868, 0.000104514, 0.00010452799999999957, 0.00010443099999999858, 0.00010441699999999901, 0.00010436100000000073, 0.000104514, 0.00010484700000000166, 0.00010455600000000217, 0.0001048750000000008, 0.00010461100000000098, 0.00010447200000000129, 0.0001046940000000024, 0.00010459700000000141, 0.0001043750000000003, 0.00010468099999999883, 0.00010459699999999794, 0.00010452799999999957, 0.00010483300000000209, 0.00010456999999999828, 0.00010476399999999678, 0.00010465299999999969]</msg>
<status status="PASS" starttime="20201112 10:15:34.467" endtime="20201112 10:15:34.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.463" endtime="20201112 10:15:34.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.472" endtime="20201112 10:15:34.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.476" endtime="20201112 10:15:34.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.474" endtime="20201112 10:15:34.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.471" endtime="20201112 10:15:34.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.104" endtime="20201112 10:15:34.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.103" endtime="20201112 10:15:34.496"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.505" endtime="20201112 10:15:34.525"></status>
</kw>
<msg timestamp="20201112 10:15:34.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.504" endtime="20201112 10:15:34.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.526" endtime="20201112 10:15:34.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.529" endtime="20201112 10:15:34.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.501" endtime="20201112 10:15:34.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.499" endtime="20201112 10:15:34.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.539" endtime="20201112 10:15:34.825"></status>
</kw>
<msg timestamp="20201112 10:15:34.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.537" endtime="20201112 10:15:34.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.829" endtime="20201112 10:15:34.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.837" endtime="20201112 10:15:34.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.534" endtime="20201112 10:15:34.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.533" endtime="20201112 10:15:34.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.844" level="INFO">${RESULT} = [{'time': 0.022068417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010513900000000062, 'source_diff': 0.00010513900000000062}, {'time': 0.022176431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:34.840" endtime="20201112 10:15:34.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.858" level="INFO">${ACCURACY} = {'source_diff': [0.00010513900000000062, 0.0001055559999999997, 0.00010545799999999925, 0.00010559699999999894, 0.00010577800000000082, 0.00010586100000000223, 0.00010566700000000026, 0.00010554200000...</msg>
<status status="PASS" starttime="20201112 10:15:34.845" endtime="20201112 10:15:34.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.863" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.862" endtime="20201112 10:15:34.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.865" level="INFO">VALUE: [0.00010513900000000062, 0.0001055559999999997, 0.00010545799999999925, 0.00010559699999999894, 0.00010577800000000082, 0.00010586100000000223, 0.00010566700000000026, 0.00010554200000000014, 0.00010586099999999876, 0.00010583299999999962, 0.000105514000000001, 0.00010554200000000014, 0.00010563900000000112, 0.00010559699999999894, 0.00010543099999999958, 0.00010559799999999842, 0.00010559800000000188, 0.00010563900000000112, 0.0001058620000000017, 0.00010544499999999915, 0.00010545799999999925, 0.00010545800000000272, 0.00010586099999999876, 0.00010552800000000057, 0.00010583299999999962, 0.00010536099999999826, 0.00010569399999999993, 0.00010562499999999808, 0.00010554200000000014, 0.00010568099999999983, 0.00010534700000000216, 0.00010559800000000188, 0.00010548600000000186, 0.00010593000000000061, 0.0001053620000000012, 0.00010566600000000079, 0.00010547199999999882, 0.00010591700000000051, 0.00010533299999999912, 0.00010572199999999907, 0.00010548599999999839, 0.00010547200000000229, 0.00010534699999999869, 0.0001055559999999997, 0.00010568099999999983, 0.0001058339999999991, 0.00010540300000000044, 0.00010593100000000008, 0.00010540300000000044, 0.00010540300000000044]</msg>
<status status="PASS" starttime="20201112 10:15:34.864" endtime="20201112 10:15:34.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.859" endtime="20201112 10:15:34.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.868" endtime="20201112 10:15:34.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.872" endtime="20201112 10:15:34.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.870" endtime="20201112 10:15:34.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.867" endtime="20201112 10:15:34.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.497" endtime="20201112 10:15:34.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.497" endtime="20201112 10:15:34.893"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.901" endtime="20201112 10:15:34.921"></status>
</kw>
<msg timestamp="20201112 10:15:34.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.900" endtime="20201112 10:15:34.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.922" endtime="20201112 10:15:34.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.925" endtime="20201112 10:15:34.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.897" endtime="20201112 10:15:34.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.895" endtime="20201112 10:15:34.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.935" endtime="20201112 10:15:35.220"></status>
</kw>
<msg timestamp="20201112 10:15:35.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.933" endtime="20201112 10:15:35.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.224" endtime="20201112 10:15:35.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.232" endtime="20201112 10:15:35.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.930" endtime="20201112 10:15:35.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.929" endtime="20201112 10:15:35.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.238" level="INFO">${RESULT} = [{'time': 0.022319639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010636099999999926, 'source_diff': 0.00010636099999999926}, {'time': 0.022428653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:35.235" endtime="20201112 10:15:35.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:35.251" level="INFO">${ACCURACY} = {'source_diff': [0.00010636099999999926, 0.00010668100000000083, 0.0001067360000000031, 0.00010692999999999814, 0.00010676400000000225, 0.00010672200000000007, 0.00010641699999999754, 0.00010662500000...</msg>
<status status="PASS" starttime="20201112 10:15:35.239" endtime="20201112 10:15:35.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.256" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.255" endtime="20201112 10:15:35.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.258" level="INFO">VALUE: [0.00010636099999999926, 0.00010668100000000083, 0.0001067360000000031, 0.00010692999999999814, 0.00010676400000000225, 0.00010672200000000007, 0.00010641699999999754, 0.00010662500000000255, 0.00010633300000000012, 0.00010669400000000093, 0.0001065690000000008, 0.00010661099999999951, 0.00010643000000000111, 0.00010645800000000025, 0.00010687499999999933, 0.00010663899999999865, 0.0001065829999999969, 0.00010665299999999822, 0.00010686099999999976, 0.00010647300000000276, 0.0001065560000000007, 0.00010645800000000025, 0.00010663899999999865, 0.00010643000000000111, 0.00010636100000000273, 0.00010654099999999819, 0.00010631900000000055, 0.0001065690000000008, 0.00010667999999999789, 0.0001067080000000005, 0.00010647299999999929, 0.0001067080000000005, 0.00010654200000000114, 0.0001068750000000028, 0.00010661099999999951, 0.00010657000000000028, 0.00010662499999999908, 0.00010637499999999883, 0.00010629200000000089, 0.00010691600000000204, 0.00010612499999999858, 0.00010677800000000182, 0.00010679200000000139, 0.0001065279999999981, 0.00010652800000000157, 0.00010669400000000093, 0.00010649999999999896, 0.00010684700000000019, 0.00010672200000000007, 0.00010636099999999926]</msg>
<status status="PASS" starttime="20201112 10:15:35.257" endtime="20201112 10:15:35.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.252" endtime="20201112 10:15:35.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.262" endtime="20201112 10:15:35.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:35.265" endtime="20201112 10:15:35.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.264" endtime="20201112 10:15:35.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.260" endtime="20201112 10:15:35.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.893" endtime="20201112 10:15:35.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.893" endtime="20201112 10:15:35.286"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.295" endtime="20201112 10:15:35.314"></status>
</kw>
<msg timestamp="20201112 10:15:35.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.293" endtime="20201112 10:15:35.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.316" endtime="20201112 10:15:35.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.318" endtime="20201112 10:15:35.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.291" endtime="20201112 10:15:35.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.288" endtime="20201112 10:15:35.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.328" endtime="20201112 10:15:35.621"></status>
</kw>
<msg timestamp="20201112 10:15:35.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.326" endtime="20201112 10:15:35.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.628" endtime="20201112 10:15:35.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.636" endtime="20201112 10:15:35.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.324" endtime="20201112 10:15:35.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.322" endtime="20201112 10:15:35.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.643" level="INFO">${RESULT} = [{'time': 0.022105889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010730600000000146, 'source_diff': 0.00010730600000000146}, {'time': 0.022215917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:35.639" endtime="20201112 10:15:35.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:35.656" level="INFO">${ACCURACY} = {'source_diff': [0.00010730600000000146, 0.0001077500000000002, 0.0001077500000000002, 0.0001077500000000002, 0.00010755599999999824, 0.0001077500000000002, 0.00010786100000000076, 0.00010783300000000...</msg>
<status status="PASS" starttime="20201112 10:15:35.643" endtime="20201112 10:15:35.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.660" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.659" endtime="20201112 10:15:35.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.663" level="INFO">VALUE: [0.00010730600000000146, 0.0001077500000000002, 0.0001077500000000002, 0.0001077500000000002, 0.00010755599999999824, 0.0001077500000000002, 0.00010786100000000076, 0.00010783300000000162, 0.00010791599999999957, 0.00010777799999999935, 0.00010765299999999922, 0.0001073889999999994, 0.00010776399999999978, 0.00010741700000000201, 0.00010762500000000008, 0.00010761199999999999, 0.0001076950000000014, 0.00010766599999999932, 0.00010727799999999885, 0.0001074019999999995, 0.00010749999999999996, 0.00010749999999999996, 0.00010743000000000211, 0.00010773599999999717, 0.00010757000000000128, 0.00010777799999999935, 0.00010787500000000033, 0.0001073889999999994, 0.00010781900000000205, 0.0001077500000000002, 0.00010741700000000201, 0.00010738799999999993, 0.00010758399999999738, 0.00010779199999999892, 0.00010768099999999836, 0.00010766599999999932, 0.0001075279999999991, 0.00010765199999999975, 0.00010765199999999975, 0.00010769400000000193, 0.00010733300000000112, 0.00010748600000000039, 0.00010763899999999965, 0.00010777799999999935, 0.00010747200000000082, 0.00010770900000000097, 0.00010784699999999772, 0.00010740299999999897, 0.00010741699999999854, 0.00010740300000000244]</msg>
<status status="PASS" starttime="20201112 10:15:35.661" endtime="20201112 10:15:35.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.657" endtime="20201112 10:15:35.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.666" endtime="20201112 10:15:35.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:35.670" endtime="20201112 10:15:35.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.668" endtime="20201112 10:15:35.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.665" endtime="20201112 10:15:35.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.287" endtime="20201112 10:15:35.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.286" endtime="20201112 10:15:35.694"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.712" endtime="20201112 10:15:35.734"></status>
</kw>
<msg timestamp="20201112 10:15:35.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.709" endtime="20201112 10:15:35.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.737" endtime="20201112 10:15:35.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.742" endtime="20201112 10:15:35.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.703" endtime="20201112 10:15:35.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.699" endtime="20201112 10:15:35.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.763" endtime="20201112 10:15:36.053"></status>
</kw>
<msg timestamp="20201112 10:15:36.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035923222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036031792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.760" endtime="20201112 10:15:36.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035923222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036031792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.057" endtime="20201112 10:15:36.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.066" endtime="20201112 10:15:36.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.754" endtime="20201112 10:15:36.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.750" endtime="20201112 10:15:36.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.072" level="INFO">${RESULT} = [{'time': 0.036031792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010857000000000228, 'source_diff': 0.00010857000000000228}, {'time': 0.036142819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:36.069" endtime="20201112 10:15:36.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.086" level="INFO">${ACCURACY} = {'source_diff': [0.00010857000000000228, 0.0001085549999999963, 0.00010859800000000142, 0.00010848599999999792, 0.00010830600000000246, 0.0001084020000000005, 0.00010866600000000032, 0.000108693999999...</msg>
<status status="PASS" starttime="20201112 10:15:36.073" endtime="20201112 10:15:36.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.091" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.090" endtime="20201112 10:15:36.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.093" level="INFO">VALUE: [0.00010857000000000228, 0.0001085549999999963, 0.00010859800000000142, 0.00010848599999999792, 0.00010830600000000246, 0.0001084020000000005, 0.00010866600000000032, 0.00010869399999999946, 0.00010866600000000032, 0.00010888800000000143, 0.00010840299999999997, 0.00010845799999999878, 0.00010862499999999414, 0.00010841699999999954, 0.00010847199999999835, 0.0001088340000000021, 0.00010876399999999731, 0.00010847300000000476, 0.00010859800000000142, 0.00010870800000000597, 0.00010859800000000142, 0.00010887500000000133, 0.00010870800000000597, 0.00010894399999999971, 0.0001087219999999986, 0.00010880600000000296, 0.0001087219999999986, 0.00010836100000000126, 0.00010831900000000255, 0.00010848599999999792, 0.00010862500000000108, 0.00010891600000000057, 0.00010830600000000246, 0.00010844399999999921, 0.00010840299999999997, 0.00010865300000000022, 0.00010884699999999525, 0.0001085549999999963, 0.00010856899999999586, 0.00010890300000000047, 0.00010849999999999749, 0.00010851399999999706, 0.00010831899999999561, 0.00010877799999999688, 0.00010834699999999475, 0.00010869500000000587, 0.00010841699999999954, 0.00010876400000000425, 0.00010887500000000133, 0.00010879100000000391]</msg>
<status status="PASS" starttime="20201112 10:15:36.092" endtime="20201112 10:15:36.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.087" endtime="20201112 10:15:36.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.101" endtime="20201112 10:15:36.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.105" endtime="20201112 10:15:36.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.103" endtime="20201112 10:15:36.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.099" endtime="20201112 10:15:36.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.695" endtime="20201112 10:15:36.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.694" endtime="20201112 10:15:36.126"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.135" endtime="20201112 10:15:36.154"></status>
</kw>
<msg timestamp="20201112 10:15:36.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.133" endtime="20201112 10:15:36.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.155" endtime="20201112 10:15:36.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.158" endtime="20201112 10:15:36.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.130" endtime="20201112 10:15:36.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.128" endtime="20201112 10:15:36.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.168" endtime="20201112 10:15:36.454"></status>
</kw>
<msg timestamp="20201112 10:15:36.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.167" endtime="20201112 10:15:36.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.459" endtime="20201112 10:15:36.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.467" endtime="20201112 10:15:36.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.164" endtime="20201112 10:15:36.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.162" endtime="20201112 10:15:36.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.473" level="INFO">${RESULT} = [{'time': 0.022680056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010966700000000079, 'source_diff': 0.00010966700000000079}, {'time': 0.022792056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:36.470" endtime="20201112 10:15:36.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.488" level="INFO">${ACCURACY} = {'source_diff': [0.00010966700000000079, 0.00010990300000000147, 0.00010983399999999963, 0.00010941700000000054, 0.00010977700000000187, 0.00010959699999999947, 0.00010961199999999852, 0.0001093890000...</msg>
<status status="PASS" starttime="20201112 10:15:36.475" endtime="20201112 10:15:36.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.493" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.492" endtime="20201112 10:15:36.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.497" level="INFO">VALUE: [0.00010966700000000079, 0.00010990300000000147, 0.00010983399999999963, 0.00010941700000000054, 0.00010977700000000187, 0.00010959699999999947, 0.00010961199999999852, 0.0001093890000000014, 0.00010944400000000021, 0.00010990300000000147, 0.00010986099999999929, 0.00010988899999999843, 0.00010987500000000233, 0.0001095280000000011, 0.00010941699999999707, 0.00010945899999999925, 0.00010976400000000178, 0.0001098479999999992, 0.00010972300000000254, 0.00010951299999999858, 0.00010958399999999938, 0.00010977700000000187, 0.00010986200000000224, 0.00010945799999999978, 0.00010969400000000046, 0.00010945900000000272, 0.00010966700000000079, 0.00010943100000000011, 0.00010931900000000008, 0.00010973599999999917, 0.00010951400000000153, 0.00010948600000000239, 0.00010955500000000076, 0.00010981899999999711, 0.00010933399999999913, 0.00010991600000000157, 0.00010961100000000251, 0.00010992999999999767, 0.00010981900000000058, 0.0001093890000000014, 0.00010933299999999965, 0.00010984699999999972, 0.00010959699999999947, 0.00010976399999999831, 0.00010986100000000276, 0.00010976400000000178, 0.00010968099999999689, 0.00010973599999999917, 0.00010958399999999938, 0.00010947199999999935]</msg>
<status status="PASS" starttime="20201112 10:15:36.494" endtime="20201112 10:15:36.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.489" endtime="20201112 10:15:36.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.505" endtime="20201112 10:15:36.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.512" endtime="20201112 10:15:36.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.509" endtime="20201112 10:15:36.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.501" endtime="20201112 10:15:36.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.127" endtime="20201112 10:15:36.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.126" endtime="20201112 10:15:36.538"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.557" endtime="20201112 10:15:36.580"></status>
</kw>
<msg timestamp="20201112 10:15:36.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.554" endtime="20201112 10:15:36.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.583" endtime="20201112 10:15:36.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.589" endtime="20201112 10:15:36.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.548" endtime="20201112 10:15:36.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.543" endtime="20201112 10:15:36.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.603" endtime="20201112 10:15:36.896"></status>
</kw>
<msg timestamp="20201112 10:15:36.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038434806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038545375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.602" endtime="20201112 10:15:36.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038434806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038545375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.900" endtime="20201112 10:15:36.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.908" endtime="20201112 10:15:36.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.599" endtime="20201112 10:15:36.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.597" endtime="20201112 10:15:36.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.915" level="INFO">${RESULT} = [{'time': 0.038545375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011056899999999786, 'source_diff': 0.00011056899999999786}, {'time': 0.038658403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:36.912" endtime="20201112 10:15:36.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.929" level="INFO">${ACCURACY} = {'source_diff': [0.00011056899999999786, 0.00011049999999999949, 0.00011058400000000385, 0.00011063900000000265, 0.00011040300000000197, 0.00011045800000000078, 0.0001103890000000024, 0.00011084699999...</msg>
<status status="PASS" starttime="20201112 10:15:36.916" endtime="20201112 10:15:36.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.934" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.933" endtime="20201112 10:15:36.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.937" level="INFO">VALUE: [0.00011056899999999786, 0.00011049999999999949, 0.00011058400000000385, 0.00011063900000000265, 0.00011040300000000197, 0.00011045800000000078, 0.0001103890000000024, 0.00011084699999999725, 0.00011068000000000189, 0.00011077799999999888, 0.00011030500000000498, 0.00011090299999999553, 0.0001105549999999983, 0.00011094500000000118, 0.00011036099999999632, 0.00011052799999999863, 0.00011058299999999743, 0.00011094500000000118, 0.0001103340000000036, 0.00011080499999999854, 0.00011043000000000164, 0.00011036100000000326, 0.0001105419999999982, 0.00011037499999999589, 0.00011081899999999811, 0.00011040300000000197, 0.00011015300000000172, 0.00011081899999999811, 0.00011031899999999761, 0.00011084700000000419, 0.0001105690000000048, 0.00011090299999999553, 0.00011080599999999802, 0.00011037500000000283, 0.00011084700000000419, 0.00011041599999999513, 0.00011084799999999673, 0.00011061100000000351, 0.00011038799999999599, 0.00011066699999999485, 0.00011063900000000265, 0.00011068000000000189, 0.00011048599999999992, 0.00011074999999999974, 0.00011056899999999786, 0.00011068100000000136, 0.00011062499999999614, 0.00011038899999999546, 0.00011066700000000179, 0.00011084700000000419]</msg>
<status status="PASS" starttime="20201112 10:15:36.935" endtime="20201112 10:15:36.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.930" endtime="20201112 10:15:36.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.940" endtime="20201112 10:15:36.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.944" endtime="20201112 10:15:36.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.942" endtime="20201112 10:15:36.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.939" endtime="20201112 10:15:36.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.540" endtime="20201112 10:15:36.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.539" endtime="20201112 10:15:36.965"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.974" endtime="20201112 10:15:36.993"></status>
</kw>
<msg timestamp="20201112 10:15:36.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.972" endtime="20201112 10:15:36.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.995" endtime="20201112 10:15:36.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.997" endtime="20201112 10:15:37.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.969" endtime="20201112 10:15:37.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.967" endtime="20201112 10:15:37.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.008" endtime="20201112 10:15:37.295"></status>
</kw>
<msg timestamp="20201112 10:15:37.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.006" endtime="20201112 10:15:37.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.299" endtime="20201112 10:15:37.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.312" endtime="20201112 10:15:37.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.004" endtime="20201112 10:15:37.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.002" endtime="20201112 10:15:37.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.327" level="INFO">${RESULT} = [{'time': 0.022687639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011156999999999834, 'source_diff': 0.00011156999999999834}, {'time': 0.022801667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:37.319" endtime="20201112 10:15:37.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:37.359" level="INFO">${ACCURACY} = {'source_diff': [0.00011156999999999834, 0.00011138899999999993, 0.00011181899999999911, 0.000111903, 0.00011187500000000086, 0.00011158299999999843, 0.00011143099999999864, 0.00011156900000000233, 0....</msg>
<status status="PASS" starttime="20201112 10:15:37.329" endtime="20201112 10:15:37.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.368" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 10:15:37.366" endtime="20201112 10:15:37.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.374" level="INFO">VALUE: [0.00011156999999999834, 0.00011138899999999993, 0.00011181899999999911, 0.000111903, 0.00011187500000000086, 0.00011158299999999843, 0.00011143099999999864, 0.00011156900000000233, 0.00011138899999999993, 0.000111596999999998, 0.00011166599999999985, 0.00011156900000000233, 0.00011180500000000301, 0.00011156999999999834, 0.00011156899999999886, 0.00011138899999999993, 0.00011168100000000236, 0.00011142999999999917, 0.00011148600000000092, 0.00011158399999999791, 0.00011148599999999745, 0.00011170800000000203, 0.00011150000000000049, 0.00011166599999999985, 0.00011151300000000058, 0.00011145799999999831, 0.00011166599999999985, 0.00011193099999999914, 0.00011136100000000079, 0.00011193099999999914, 0.00011155599999999877, 0.0001117090000000015, 0.00011169500000000193, 0.0001118480000000012, 0.00011147200000000135, 0.00011180599999999902, 0.00011151400000000006, 0.00011159700000000147, 0.00011184700000000172, 0.00011176400000000031, 0.00011131899999999861, 0.00011191700000000304, 0.00011143000000000264, 0.00011143099999999864, 0.00011151400000000006, 0.0001115280000000031, 0.00011154200000000267, 0.0001115700000000018, 0.00011168099999999889, 0.00011169399999999899]</msg>
<status status="PASS" starttime="20201112 10:15:37.371" endtime="20201112 10:15:37.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.361" endtime="20201112 10:15:37.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.382" endtime="20201112 10:15:37.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.389" endtime="20201112 10:15:37.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.386" endtime="20201112 10:15:37.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.378" endtime="20201112 10:15:37.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.966" endtime="20201112 10:15:37.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.965" endtime="20201112 10:15:37.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.788" endtime="20201112 10:15:37.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.420" endtime="20201112 10:15:37.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.418" endtime="20201112 10:15:37.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.417" endtime="20201112 10:15:37.440"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:57.713" endtime="20201112 10:15:37.441" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:16.870" endtime="20201112 10:15:37.446"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.507" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:15:37.515" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:15:38.616" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:15:37.506" endtime="20201112 10:15:38.616"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.619" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:15:38.617" endtime="20201112 10:15:38.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.504" endtime="20201112 10:15:38.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.622" endtime="20201112 10:15:38.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.620" endtime="20201112 10:15:38.808"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.821" endtime="20201112 10:15:38.844"></status>
</kw>
<msg timestamp="20201112 10:15:38.845" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.819" endtime="20201112 10:15:38.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.848" endtime="20201112 10:15:38.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.858" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:38.853" endtime="20201112 10:15:38.859"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:38.817" endtime="20201112 10:15:38.860"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:38.814" endtime="20201112 10:15:38.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.813" endtime="20201112 10:15:38.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:38.872" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:38.871" endtime="20201112 10:15:38.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.864" endtime="20201112 10:15:38.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.812" endtime="20201112 10:15:38.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.812" endtime="20201112 10:15:38.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.876" endtime="20201112 10:15:38.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.810" endtime="20201112 10:15:38.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.883" endtime="20201112 10:15:38.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.809" endtime="20201112 10:15:38.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.503" endtime="20201112 10:15:38.888"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.902" endtime="20201112 10:15:38.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.899" endtime="20201112 10:15:38.926"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.940" endtime="20201112 10:15:38.959"></status>
</kw>
<msg timestamp="20201112 10:15:38.959" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.938" endtime="20201112 10:15:38.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.962" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.961" endtime="20201112 10:15:38.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.965" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:38.963" endtime="20201112 10:15:38.965"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:38.935" endtime="20201112 10:15:38.966"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:38.933" endtime="20201112 10:15:38.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.931" endtime="20201112 10:15:38.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:38.971" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:38.970" endtime="20201112 10:15:38.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.968" endtime="20201112 10:15:38.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.931" endtime="20201112 10:15:38.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.930" endtime="20201112 10:15:38.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.973" endtime="20201112 10:15:38.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.928" endtime="20201112 10:15:38.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.927" endtime="20201112 10:15:38.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.896" endtime="20201112 10:15:38.976"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:38.980" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.990" endtime="20201112 10:15:41.101"></status>
</kw>
<msg timestamp="20201112 10:15:41.103" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 105198159, 'wakeups': [105208166, 105218164, 105228165, 105238165, 105...</msg>
<status status="PASS" starttime="20201112 10:15:38.988" endtime="20201112 10:15:41.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 105198159, 'wakeups': [105208166, 105218164, 105228165, 105238165, 105...</msg>
<status status="PASS" starttime="20201112 10:15:41.105" endtime="20201112 10:15:41.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.119" endtime="20201112 10:15:41.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.985" endtime="20201112 10:15:41.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.982" endtime="20201112 10:15:41.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.131" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 105198159, 'wakeups': [105208166, 105218164, 105228165, 105238165, 105248164, 105258165, 105268165, 105278165, 105288164, 105298165, 105308165...</msg>
<status status="PASS" starttime="20201112 10:15:41.126" endtime="20201112 10:15:41.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.140" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:41.137" endtime="20201112 10:15:41.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.144" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:41.142" endtime="20201112 10:15:41.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.132" endtime="20201112 10:15:41.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.155" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:41.153" endtime="20201112 10:15:41.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.159" level="INFO">VALUE: 105198159</msg>
<status status="PASS" starttime="20201112 10:15:41.157" endtime="20201112 10:15:41.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.147" endtime="20201112 10:15:41.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.170" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:41.168" endtime="20201112 10:15:41.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.175" level="INFO">VALUE: [105208166, 105218164, 105228165, 105238165, 105248164, 105258165, 105268165, 105278165, 105288164, 105298165, 105308165, 105318165, 105328165, 105338165, 105348164, 105358165, 105368165, 105378165, 105388165, 105398165, 105408165, 105418165, 105428165, 105438165, 105448164, 105458165, 105468165, 105478165, 105488165, 105498165, 105508165, 105518165, 105528165, 105538165, 105548164, 105558165, 105568165, 105578165, 105588165, 105598165, 105608165, 105618165, 105628165, 105638165, 105648164, 105658165, 105668165, 105678165, 105688165, 105698165, 105708165, 105718165, 105728165, 105738165, 105748164, 105758165, 105768165, 105778165, 105788165, 105798165, 105808165, 105818165, 105828165, 105838165, 105848164, 105858165, 105868165, 105878165, 105888165, 105898165, 105908165, 105918165, 105928165, 105938165, 105948164, 105958165, 105968165, 105978165, 105988165, 105998165, 106008165, 106018165, 106028165, 106038165, 106048164, 106058165, 106068165, 106078165, 106088165, 106098165, 106108165, 106118165, 106128165, 106138165, 106148164, 106158165, 106168165, 106178165, 106188165, 106198165]</msg>
<status status="PASS" starttime="20201112 10:15:41.173" endtime="20201112 10:15:41.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.163" endtime="20201112 10:15:41.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.192" endtime="20201112 10:15:41.491"></status>
</kw>
<msg timestamp="20201112 10:15:41.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076915194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.086922681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.188" endtime="20201112 10:15:41.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076915194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.086922681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.495" endtime="20201112 10:15:41.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.502" endtime="20201112 10:15:41.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.182" endtime="20201112 10:15:41.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.179" endtime="20201112 10:15:41.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.531" level="INFO">${RESULT} = {'source_diff': [0, 0.010007486999999995, 0.009999596999999999, 0.010001346999999994, 0.010000653000000012, 0.009999888999999998, 0.010001679999999985, 0.010001028000000023, 0.010000360999999985, 0.00...</msg>
<status status="PASS" starttime="20201112 10:15:41.506" endtime="20201112 10:15:41.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.536" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:41.535" endtime="20201112 10:15:41.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.538" level="INFO">VALUE: 0.076915194</msg>
<status status="PASS" starttime="20201112 10:15:41.537" endtime="20201112 10:15:41.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.532" endtime="20201112 10:15:41.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.543" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:41.542" endtime="20201112 10:15:41.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.546" level="INFO">VALUE: [0.086922681, 0.096922278, 0.106923625, 0.116924278, 0.126924167, 0.136925847, 0.146926875, 0.156927236, 0.166927014, 0.176928806, 0.186929653, 0.196930444, 0.206931028, 0.216931625, 0.226931514, 0.236933222, 0.246934208, 0.256934597, 0.266935403, 0.276936083, 0.286937, 0.296937806, 0.306938389, 0.316938986, 0.326938875, 0.336940583, 0.346941569, 0.356941972, 0.366942736, 0.376943458, 0.386944361, 0.396945181, 0.40694575, 0.416946375, 0.426946292, 0.436947986, 0.446948944, 0.456949319, 0.466950083, 0.476950806, 0.486951694, 0.4969525, 0.506953056, 0.516953667, 0.526953542, 0.536955292, 0.546956222, 0.556956625, 0.566957375, 0.576958097, 0.586958986, 0.596959847, 0.606960361, 0.616960958, 0.626960861, 0.636962542, 0.646963514, 0.656963903, 0.666964681, 0.676965403, 0.686966278, 0.696967097, 0.706967667, 0.716968292, 0.726968139, 0.736969847, 0.746970819, 0.756971264, 0.766972014, 0.776972708, 0.786973583, 0.796974403, 0.806974972, 0.816975569, 0.826975444, 0.836977153, 0.846978139, 0.856978514, 0.866979292, 0.876980014, 0.886980917, 0.896981736, 0.906982292, 0.916982875, 0.926982792, 0.936984458, 0.946985444, 0.956985847, 0.966986625, 0.976987333, 0.986988208, 0.996989042, 1.006989597, 1.016990208, 1.026990069, 1.036991764, 1.04699275, 1.056993139, 1.066993931, 1.076994694] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:41.544" endtime="20201112 10:15:41.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.539" endtime="20201112 10:15:41.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.549" endtime="20201112 10:15:41.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:41.552" endtime="20201112 10:15:41.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.551" endtime="20201112 10:15:41.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.547" endtime="20201112 10:15:41.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.980" endtime="20201112 10:15:41.573"></status>
</kw>
<msg timestamp="20201112 10:15:41.573" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.582" endtime="20201112 10:15:43.693"></status>
</kw>
<msg timestamp="20201112 10:15:43.694" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 107790255, 'wakeups': [107800262, 107810260, 107820261, 107830261, 107...</msg>
<status status="PASS" starttime="20201112 10:15:41.580" endtime="20201112 10:15:43.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.701" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 107790255, 'wakeups': [107800262, 107810260, 107820261, 107830261, 107...</msg>
<status status="PASS" starttime="20201112 10:15:43.697" endtime="20201112 10:15:43.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.703" endtime="20201112 10:15:43.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.577" endtime="20201112 10:15:43.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.575" endtime="20201112 10:15:43.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.715" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 107790255, 'wakeups': [107800262, 107810260, 107820261, 107830261, 107840260, 107850261, 107860261, 107870261, 107880260, 107890261, 107900261...</msg>
<status status="PASS" starttime="20201112 10:15:43.710" endtime="20201112 10:15:43.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.726" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:43.721" endtime="20201112 10:15:43.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.730" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:43.728" endtime="20201112 10:15:43.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.716" endtime="20201112 10:15:43.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.742" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:43.740" endtime="20201112 10:15:43.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.744" level="INFO">VALUE: 107790255</msg>
<status status="PASS" starttime="20201112 10:15:43.743" endtime="20201112 10:15:43.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.734" endtime="20201112 10:15:43.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.749" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:43.748" endtime="20201112 10:15:43.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.751" level="INFO">VALUE: [107800262, 107810260, 107820261, 107830261, 107840260, 107850261, 107860261, 107870261, 107880260, 107890261, 107900261, 107910261, 107920261, 107930261, 107940260, 107950261, 107960261, 107970261, 107980261, 107990261, 108000261, 108010261, 108020261, 108030261, 108040260, 108050261, 108060261, 108070261, 108080261, 108090261, 108100261, 108110261, 108120261, 108130261, 108140260, 108150261, 108160261, 108170261, 108180261, 108190261, 108200261, 108210261, 108220261, 108230261, 108240260, 108250261, 108260261, 108270261, 108280261, 108290261, 108300261, 108310261, 108320261, 108330261, 108340260, 108350261, 108360261, 108370261, 108380261, 108390261, 108400261, 108410261, 108420261, 108430261, 108440260, 108450261, 108460261, 108470261, 108480261, 108490261, 108500261, 108510261, 108520261, 108530261, 108540260, 108550261, 108560261, 108570261, 108580261, 108590261, 108600261, 108610261, 108620261, 108630261, 108640260, 108650261, 108660261, 108670261, 108680261, 108690261, 108700261, 108710261, 108720261, 108730261, 108740260, 108750261, 108760261, 108770261, 108780261, 108790261]</msg>
<status status="PASS" starttime="20201112 10:15:43.750" endtime="20201112 10:15:43.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.745" endtime="20201112 10:15:43.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.760" endtime="20201112 10:15:44.051"></status>
</kw>
<msg timestamp="20201112 10:15:44.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029588944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.758" endtime="20201112 10:15:44.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029588944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.055" endtime="20201112 10:15:44.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.062" endtime="20201112 10:15:44.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.755" endtime="20201112 10:15:44.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.753" endtime="20201112 10:15:44.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.088" level="INFO">${RESULT} = {'source_diff': [0, 0.010007486, 0.00999957, 0.010001389, 0.010000653000000005, 0.009999874999999991, 0.010001679999999999, 0.010001056000000008, 0.010000346999999993, 0.009999778, 0.01000170800000001...</msg>
<status status="PASS" starttime="20201112 10:15:44.065" endtime="20201112 10:15:44.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.093" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:44.092" endtime="20201112 10:15:44.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.096" level="INFO">VALUE: 0.019581458</msg>
<status status="PASS" starttime="20201112 10:15:44.095" endtime="20201112 10:15:44.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.089" endtime="20201112 10:15:44.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.101" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:44.100" endtime="20201112 10:15:44.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.103" level="INFO">VALUE: [0.029588944, 0.039588514, 0.049589903, 0.059590556, 0.069590431, 0.079592111, 0.089593167, 0.099593514, 0.109593292, 0.119595, 0.129595903, 0.139596708, 0.149597292, 0.159597889, 0.169597792, 0.179599486, 0.189600472, 0.199600875, 0.209601639, 0.219602361, 0.229603278, 0.239604083, 0.249604667, 0.25960525, 0.269605139, 0.279606875, 0.289607875, 0.299608222, 0.309609, 0.319609736, 0.329610639, 0.339611431, 0.349612014, 0.359612625, 0.3696125, 0.379614208, 0.389615194, 0.399615583, 0.409616361, 0.419617139, 0.429617972, 0.439618778, 0.449619389, 0.459619944, 0.469619917, 0.479621514, 0.489622514, 0.499622917, 0.509623667, 0.519624403, 0.529625264, 0.539626083, 0.549626653, 0.55962725, 0.569627125, 0.579628819, 0.589629806, 0.599630222, 0.609630972, 0.619631708, 0.629632653, 0.639633389, 0.649633944, 0.659634556, 0.669634431, 0.679636139, 0.689637111, 0.699637514, 0.709638319, 0.719638986, 0.729639875, 0.739640681, 0.74964125, 0.759641875, 0.769641736, 0.779643431, 0.789644417, 0.799644819, 0.809645583, 0.819646292, 0.829647181, 0.839648014, 0.849648569, 0.859649167, 0.869649042, 0.87965075, 0.889651736, 0.899652125, 0.909652931, 0.919653597, 0.929654556, 0.939655319, 0.949655875, 0.959656569, 0.969656375, 0.979658069, 0.989659056, 0.999659431, 1.009660222, 1.019660917] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:44.102" endtime="20201112 10:15:44.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.097" endtime="20201112 10:15:44.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.106" endtime="20201112 10:15:44.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.110" endtime="20201112 10:15:44.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.108" endtime="20201112 10:15:44.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.105" endtime="20201112 10:15:44.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.574" endtime="20201112 10:15:44.130"></status>
</kw>
<msg timestamp="20201112 10:15:44.131" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.138" endtime="20201112 10:15:46.249"></status>
</kw>
<msg timestamp="20201112 10:15:46.250" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 110346861, 'wakeups': [110356868, 110366866, 110376867, 110386867, 110...</msg>
<status status="PASS" starttime="20201112 10:15:44.137" endtime="20201112 10:15:46.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.256" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 110346861, 'wakeups': [110356868, 110366866, 110376867, 110386867, 110...</msg>
<status status="PASS" starttime="20201112 10:15:46.252" endtime="20201112 10:15:46.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.258" endtime="20201112 10:15:46.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.134" endtime="20201112 10:15:46.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.132" endtime="20201112 10:15:46.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.268" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 110346861, 'wakeups': [110356868, 110366866, 110376867, 110386867, 110396866, 110406867, 110416867, 110426867, 110436866, 110446867, 110456867...</msg>
<status status="PASS" starttime="20201112 10:15:46.265" endtime="20201112 10:15:46.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.277" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:46.275" endtime="20201112 10:15:46.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.281" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:46.279" endtime="20201112 10:15:46.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.270" endtime="20201112 10:15:46.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.291" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:46.289" endtime="20201112 10:15:46.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.295" level="INFO">VALUE: 110346861</msg>
<status status="PASS" starttime="20201112 10:15:46.293" endtime="20201112 10:15:46.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.284" endtime="20201112 10:15:46.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.302" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:46.301" endtime="20201112 10:15:46.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.305" level="INFO">VALUE: [110356868, 110366866, 110376867, 110386867, 110396866, 110406867, 110416867, 110426867, 110436866, 110446867, 110456867, 110466867, 110476867, 110486867, 110496866, 110506867, 110516867, 110526867, 110536867, 110546867, 110556867, 110566867, 110576867, 110586867, 110596866, 110606867, 110616867, 110626867, 110636867, 110646867, 110656867, 110666867, 110676867, 110686867, 110696866, 110706867, 110716867, 110726867, 110736867, 110746867, 110756867, 110766867, 110776867, 110786867, 110796866, 110806867, 110816867, 110826867, 110836867, 110846867, 110856867, 110866867, 110876867, 110886867, 110896866, 110906867, 110916867, 110926867, 110936867, 110946867, 110956867, 110966867, 110976867, 110986867, 110996866, 111006867, 111016867, 111026867, 111036867, 111046867, 111056867, 111066867, 111076867, 111086867, 111096866, 111106867, 111116867, 111126867, 111136867, 111146867, 111156867, 111166867, 111176867, 111186867, 111196866, 111206867, 111216867, 111226867, 111236867, 111246867, 111256867, 111266867, 111276867, 111286867, 111296866, 111306867, 111316867, 111326867, 111336867, 111346867]</msg>
<status status="PASS" starttime="20201112 10:15:46.303" endtime="20201112 10:15:46.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.298" endtime="20201112 10:15:46.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.317" endtime="20201112 10:15:46.609"></status>
</kw>
<msg timestamp="20201112 10:15:46.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028872042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:46.315" endtime="20201112 10:15:46.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028872042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:46.613" endtime="20201112 10:15:46.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.620" endtime="20201112 10:15:46.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.312" endtime="20201112 10:15:46.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.310" endtime="20201112 10:15:46.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.647" level="INFO">${RESULT} = {'source_diff': [0, 0.010007542000000001, 0.009999514000000001, 0.010001402, 0.010000652999999998, 0.009999861000000006, 0.010001680999999998, 0.010001041000000002, 0.010000347999999992, 0.00999979100...</msg>
<status status="PASS" starttime="20201112 10:15:46.623" endtime="20201112 10:15:46.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.651" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:46.650" endtime="20201112 10:15:46.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.653" level="INFO">VALUE: 0.0188645</msg>
<status status="PASS" starttime="20201112 10:15:46.652" endtime="20201112 10:15:46.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.648" endtime="20201112 10:15:46.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.658" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:46.657" endtime="20201112 10:15:46.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.660" level="INFO">VALUE: [0.028872042, 0.038871556, 0.048872958, 0.058873611, 0.068873472, 0.078875153, 0.088876194, 0.098876542, 0.108876333, 0.118878042, 0.128878944, 0.138879764, 0.148880347, 0.158880958, 0.168880833, 0.178882542, 0.188883528, 0.198883958, 0.208884708, 0.218885403, 0.228886319, 0.238887125, 0.248887694, 0.258888319, 0.268888181, 0.278889889, 0.288890875, 0.298891278, 0.308892083, 0.31889275, 0.328893653, 0.338894458, 0.348895056, 0.358895625, 0.368895514, 0.378897236, 0.388898181, 0.398898569, 0.408899347, 0.418900069, 0.428900944, 0.438901792, 0.448902347, 0.458902917, 0.468902819, 0.478904514, 0.488905486, 0.498905875, 0.508906639, 0.518907347, 0.528908292, 0.538909056, 0.548909625, 0.558910222, 0.568910111, 0.578911819, 0.588912792, 0.598913167, 0.608913944, 0.618914667, 0.628915542, 0.638916361, 0.648916931, 0.658917542, 0.668917403, 0.678919111, 0.688920097, 0.6989205, 0.70892125, 0.718921972, 0.728922861, 0.738923667, 0.748924236, 0.758924847, 0.768924736, 0.778926417, 0.788927403, 0.798927806, 0.808928556, 0.818929264, 0.828930167, 0.838930986, 0.848931556, 0.858932139, 0.868932042, 0.878933736, 0.888934708, 0.898935097, 0.908935875, 0.918936625, 0.928937486, 0.938938319, 0.948938847, 0.958939472, 0.968939333, 0.978941028, 0.988942014, 0.998942417, 1.008943181, 1.018943903] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:46.659" endtime="20201112 10:15:46.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.655" endtime="20201112 10:15:46.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.664" endtime="20201112 10:15:46.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.667" endtime="20201112 10:15:46.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.665" endtime="20201112 10:15:46.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.662" endtime="20201112 10:15:46.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.131" endtime="20201112 10:15:46.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.978" endtime="20201112 10:15:46.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.977" endtime="20201112 10:15:46.688"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:46.690" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.700" endtime="20201112 10:15:48.811"></status>
</kw>
<msg timestamp="20201112 10:15:48.812" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 112908338, 'wakeups': [112918349, 112928349, 112938347, 112948348, 112...</msg>
<status status="PASS" starttime="20201112 10:15:46.698" endtime="20201112 10:15:48.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 112908338, 'wakeups': [112918349, 112928349, 112938347, 112948348, 112...</msg>
<status status="PASS" starttime="20201112 10:15:48.814" endtime="20201112 10:15:48.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.820" endtime="20201112 10:15:48.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.695" endtime="20201112 10:15:48.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.692" endtime="20201112 10:15:48.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:48.831" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 112908338, 'wakeups': [112918349, 112928349, 112938347, 112948348, 112958348, 112968348, 112978348, 112988348, 112998348, 113008348, 113018348...</msg>
<status status="PASS" starttime="20201112 10:15:48.827" endtime="20201112 10:15:48.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.839" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:48.837" endtime="20201112 10:15:48.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.843" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:48.842" endtime="20201112 10:15:48.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.832" endtime="20201112 10:15:48.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.854" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:48.851" endtime="20201112 10:15:48.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.858" level="INFO">VALUE: 112908338</msg>
<status status="PASS" starttime="20201112 10:15:48.856" endtime="20201112 10:15:48.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.846" endtime="20201112 10:15:48.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.866" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:48.865" endtime="20201112 10:15:48.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.869" level="INFO">VALUE: [112918349, 112928349, 112938347, 112948348, 112958348, 112968348, 112978348, 112988348, 112998348, 113008348, 113018348, 113028348, 113038348, 113048348, 113058348, 113068348, 113078348, 113088348, 113098348, 113108348, 113118348, 113128348, 113138348, 113148348, 113158348, 113168348, 113178348, 113188348, 113198348, 113208348, 113218348, 113228348, 113238348, 113248348, 113258348, 113268348, 113278348, 113288348, 113298348, 113308348, 113318348, 113328348, 113338348, 113348348, 113358348, 113368348, 113378348, 113388348, 113398348, 113408348, 113418348, 113428348, 113438348, 113448348, 113458348, 113468348, 113478348, 113488348, 113498348, 113508348, 113518348, 113528348, 113538348, 113548348, 113558348, 113568348, 113578348, 113588348, 113598348, 113608348, 113618348, 113628348, 113638348, 113648348, 113658348, 113668348, 113678348, 113688348, 113698348, 113708348, 113718348, 113728348, 113738348, 113748348, 113758348, 113768348, 113778348, 113788348, 113798348, 113808348, 113818348, 113828348, 113838348, 113848348, 113858348, 113868348, 113878348, 113888348, 113898348, 113908348]</msg>
<status status="PASS" starttime="20201112 10:15:48.868" endtime="20201112 10:15:48.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.861" endtime="20201112 10:15:48.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.877" endtime="20201112 10:15:49.167"></status>
</kw>
<msg timestamp="20201112 10:15:49.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02311025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03312225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:48.875" endtime="20201112 10:15:49.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02311025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03312225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:49.171" endtime="20201112 10:15:49.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.180" endtime="20201112 10:15:49.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.872" endtime="20201112 10:15:49.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.870" endtime="20201112 10:15:49.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.207" level="INFO">${RESULT} = {'source_diff': [0, 0.010012, 0.010000528000000002, 0.009999610999999999, 0.010001611, 0.010000791999999994, 0.010000722000000004, 0.010000792000000008, 0.010000624999999999, 0.010000805000000001, 0.0...</msg>
<status status="PASS" starttime="20201112 10:15:49.183" endtime="20201112 10:15:49.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.211" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:49.210" endtime="20201112 10:15:49.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.213" level="INFO">VALUE: 0.02311025</msg>
<status status="PASS" starttime="20201112 10:15:49.212" endtime="20201112 10:15:49.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.208" endtime="20201112 10:15:49.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.219" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:49.218" endtime="20201112 10:15:49.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.221" level="INFO">VALUE: [0.03312225, 0.043122778, 0.053122389, 0.063124, 0.073124792, 0.083125514, 0.093126306, 0.103126931, 0.113127736, 0.123128458, 0.133129264, 0.143129875, 0.153130681, 0.163131417, 0.173132222, 0.183132819, 0.193133625, 0.203134361, 0.213135167, 0.223135806, 0.233136583, 0.243137306, 0.253138181, 0.263138736, 0.273139528, 0.283140264, 0.293141056, 0.303141681, 0.313142458, 0.323143181, 0.333143972, 0.343144583, 0.353145403, 0.363146139, 0.373146903, 0.3831475, 0.393148319, 0.403149028, 0.413149819, 0.423150431, 0.433151236, 0.443151958, 0.45315275, 0.463153375, 0.473154208, 0.483154889, 0.493155667, 0.503156278, 0.513157097, 0.523157806, 0.533158625, 0.543159208, 0.553160014, 0.563160736, 0.573161528, 0.583162139, 0.593162931, 0.603163653, 0.613164458, 0.623165069, 0.633165861, 0.643166611, 0.653167375, 0.663168, 0.673168792, 0.683169514, 0.693170319, 0.703170917, 0.713171722, 0.723172444, 0.733173236, 0.743173861, 0.753174653, 0.763175375, 0.773176167, 0.783176792, 0.793177583, 0.803178319, 0.813179111, 0.823179708, 0.833180514, 0.843181236, 0.853182028, 0.863182639, 0.873183444, 0.883184167, 0.893184958, 0.903185569, 0.913186375, 0.923187097, 0.933187903, 0.9431885, 0.953189292, 0.963190028, 0.973190903, 0.983191431, 0.993192222, 1.003192944, 1.013193736, 1.023194375] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:49.220" endtime="20201112 10:15:49.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.215" endtime="20201112 10:15:49.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.224" endtime="20201112 10:15:49.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.227" endtime="20201112 10:15:49.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.226" endtime="20201112 10:15:49.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.222" endtime="20201112 10:15:49.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.691" endtime="20201112 10:15:49.248"></status>
</kw>
<msg timestamp="20201112 10:15:49.248" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.256" endtime="20201112 10:15:51.367"></status>
</kw>
<msg timestamp="20201112 10:15:51.368" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 115464441, 'wakeups': [115474453, 115484452, 115494450, 115504451, 115...</msg>
<status status="PASS" starttime="20201112 10:15:49.255" endtime="20201112 10:15:51.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.374" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 115464441, 'wakeups': [115474453, 115484452, 115494450, 115504451, 115...</msg>
<status status="PASS" starttime="20201112 10:15:51.370" endtime="20201112 10:15:51.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.376" endtime="20201112 10:15:51.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.252" endtime="20201112 10:15:51.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.250" endtime="20201112 10:15:51.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.388" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 115464441, 'wakeups': [115474453, 115484452, 115494450, 115504451, 115514451, 115524451, 115534451, 115544451, 115554451, 115564451, 115574451...</msg>
<status status="PASS" starttime="20201112 10:15:51.384" endtime="20201112 10:15:51.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.403" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:51.401" endtime="20201112 10:15:51.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.408" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:51.406" endtime="20201112 10:15:51.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.396" endtime="20201112 10:15:51.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.419" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:51.416" endtime="20201112 10:15:51.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.421" level="INFO">VALUE: 115464441</msg>
<status status="PASS" starttime="20201112 10:15:51.420" endtime="20201112 10:15:51.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.410" endtime="20201112 10:15:51.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.426" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:51.425" endtime="20201112 10:15:51.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.428" level="INFO">VALUE: [115474453, 115484452, 115494450, 115504451, 115514451, 115524451, 115534451, 115544451, 115554451, 115564451, 115574451, 115584451, 115594451, 115604451, 115614451, 115624451, 115634451, 115644451, 115654451, 115664451, 115674451, 115684451, 115694451, 115704451, 115714451, 115724451, 115734451, 115744451, 115754451, 115764451, 115774451, 115784451, 115794451, 115804451, 115814451, 115824451, 115834451, 115844451, 115854451, 115864451, 115874451, 115884451, 115894451, 115904451, 115914451, 115924451, 115934451, 115944451, 115954451, 115964451, 115974451, 115984451, 115994451, 116004451, 116014451, 116024451, 116034451, 116044451, 116054451, 116064451, 116074451, 116084451, 116094451, 116104451, 116114451, 116124451, 116134451, 116144451, 116154451, 116164451, 116174451, 116184451, 116194451, 116204451, 116214451, 116224451, 116234451, 116244451, 116254451, 116264451, 116274451, 116284451, 116294451, 116304451, 116314451, 116324451, 116334451, 116344451, 116354451, 116364451, 116374451, 116384451, 116394451, 116404451, 116414451, 116424451, 116434451, 116444451, 116454451, 116464451]</msg>
<status status="PASS" starttime="20201112 10:15:51.427" endtime="20201112 10:15:51.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.423" endtime="20201112 10:15:51.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.436" endtime="20201112 10:15:51.727"></status>
</kw>
<msg timestamp="20201112 10:15:51.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018808333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028820986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.434" endtime="20201112 10:15:51.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018808333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028820986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.731" endtime="20201112 10:15:51.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.739" endtime="20201112 10:15:51.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.432" endtime="20201112 10:15:51.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.430" endtime="20201112 10:15:51.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.765" level="INFO">${RESULT} = {'source_diff': [0, 0.010012653, 0.009999542, 0.009999569, 0.010001625, 0.010000833999999993, 0.010000694000000004, 0.010000806000000001, 0.010000611000000006, 0.010000818999999994, 0.0100007079999999...</msg>
<status status="PASS" starttime="20201112 10:15:51.742" endtime="20201112 10:15:51.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.770" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:51.769" endtime="20201112 10:15:51.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.772" level="INFO">VALUE: 0.018808333</msg>
<status status="PASS" starttime="20201112 10:15:51.771" endtime="20201112 10:15:51.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.766" endtime="20201112 10:15:51.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.779" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:51.777" endtime="20201112 10:15:51.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.782" level="INFO">VALUE: [0.028820986, 0.038820528, 0.048820097, 0.058821722, 0.068822556, 0.07882325, 0.088824056, 0.098824667, 0.108825486, 0.118826194, 0.128827028, 0.138827611, 0.148828417, 0.158829181, 0.168829944, 0.178830569, 0.188831375, 0.198832097, 0.208832931, 0.218833514, 0.228834306, 0.238835042, 0.248835875, 0.258836458, 0.268837264, 0.278837986, 0.288838792, 0.298839417, 0.308840222, 0.318840931, 0.328841736, 0.338842361, 0.348843153, 0.358843903, 0.368844722, 0.378845319, 0.388846125, 0.398846875, 0.408847667, 0.41884825, 0.428849056, 0.438849861, 0.448850597, 0.458851222, 0.468852014, 0.47885275, 0.488853542, 0.498854153, 0.508854944, 0.518855667, 0.528856458, 0.538857069, 0.548857903, 0.558858611, 0.568859389, 0.578860056, 0.588860792, 0.598861514, 0.608862306, 0.618862972, 0.628863722, 0.638864444, 0.648865236, 0.658865847, 0.668866681, 0.678867375, 0.688868181, 0.698868778, 0.708869569, 0.718870292, 0.728871083, 0.738871694, 0.7488725, 0.758873222, 0.768874028, 0.778874639, 0.788875444, 0.798876153, 0.808876944, 0.818877597, 0.828878375, 0.838879083, 0.848879889, 0.858880486, 0.868881278, 0.878882, 0.888882806, 0.898883431, 0.908884222, 0.918884944, 0.928885806, 0.938886347, 0.948887139, 0.958887875, 0.968888653, 0.978889292, 0.988890083, 0.998890792, 1.008891597, 1.018892208] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:51.781" endtime="20201112 10:15:51.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.773" endtime="20201112 10:15:51.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.785" endtime="20201112 10:15:51.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.788" endtime="20201112 10:15:51.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.787" endtime="20201112 10:15:51.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.783" endtime="20201112 10:15:51.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.249" endtime="20201112 10:15:51.809"></status>
</kw>
<msg timestamp="20201112 10:15:51.809" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.817" endtime="20201112 10:15:53.928"></status>
</kw>
<msg timestamp="20201112 10:15:53.929" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 118025675, 'wakeups': [118035687, 118045686, 118055684, 118065685, 118...</msg>
<status status="PASS" starttime="20201112 10:15:51.816" endtime="20201112 10:15:53.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.935" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 118025675, 'wakeups': [118035687, 118045686, 118055684, 118065685, 118...</msg>
<status status="PASS" starttime="20201112 10:15:53.932" endtime="20201112 10:15:53.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.938" endtime="20201112 10:15:53.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.813" endtime="20201112 10:15:53.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.811" endtime="20201112 10:15:53.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:53.949" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 118025675, 'wakeups': [118035687, 118045686, 118055684, 118065685, 118075685, 118085685, 118095685, 118105685, 118115685, 118125685, 118135685...</msg>
<status status="PASS" starttime="20201112 10:15:53.945" endtime="20201112 10:15:53.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.957" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:53.955" endtime="20201112 10:15:53.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.962" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:53.960" endtime="20201112 10:15:53.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.950" endtime="20201112 10:15:53.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.973" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:53.970" endtime="20201112 10:15:53.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.978" level="INFO">VALUE: 118025675</msg>
<status status="PASS" starttime="20201112 10:15:53.975" endtime="20201112 10:15:53.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.965" endtime="20201112 10:15:53.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.990" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:53.987" endtime="20201112 10:15:53.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.995" level="INFO">VALUE: [118035687, 118045686, 118055684, 118065685, 118075685, 118085685, 118095685, 118105685, 118115685, 118125685, 118135685, 118145685, 118155685, 118165685, 118175685, 118185685, 118195685, 118205685, 118215685, 118225685, 118235685, 118245685, 118255685, 118265685, 118275685, 118285685, 118295685, 118305685, 118315685, 118325685, 118335685, 118345685, 118355685, 118365685, 118375685, 118385685, 118395685, 118405685, 118415685, 118425685, 118435685, 118445685, 118455685, 118465685, 118475685, 118485685, 118495685, 118505685, 118515685, 118525685, 118535685, 118545685, 118555685, 118565685, 118575685, 118585685, 118595685, 118605685, 118615685, 118625685, 118635685, 118645685, 118655685, 118665685, 118675685, 118685685, 118695685, 118705685, 118715685, 118725685, 118735685, 118745685, 118755685, 118765685, 118775685, 118785685, 118795685, 118805685, 118815685, 118825685, 118835685, 118845685, 118855685, 118865685, 118875685, 118885685, 118895685, 118905685, 118915685, 118925685, 118935685, 118945685, 118955685, 118965685, 118975685, 118985685, 118995685, 119005685, 119015685, 119025685]</msg>
<status status="PASS" starttime="20201112 10:15:53.992" endtime="20201112 10:15:53.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.981" endtime="20201112 10:15:53.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.011" endtime="20201112 10:15:54.310"></status>
</kw>
<msg timestamp="20201112 10:15:54.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019057833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0290705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:54.007" endtime="20201112 10:15:54.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019057833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0290705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:54.314" endtime="20201112 10:15:54.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.322" endtime="20201112 10:15:54.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.002" endtime="20201112 10:15:54.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.998" endtime="20201112 10:15:54.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.348" level="INFO">${RESULT} = {'source_diff': [0, 0.010012667, 0.009999583, 0.009999514000000001, 0.010001625, 0.01000082, 0.010000707999999997, 0.010000792000000008, 0.010000624999999999, 0.010000818999999994, 0.01000077800000000...</msg>
<status status="PASS" starttime="20201112 10:15:54.325" endtime="20201112 10:15:54.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.352" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:54.351" endtime="20201112 10:15:54.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.354" level="INFO">VALUE: 0.019057833</msg>
<status status="PASS" starttime="20201112 10:15:54.353" endtime="20201112 10:15:54.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.349" endtime="20201112 10:15:54.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.359" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:54.358" endtime="20201112 10:15:54.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.361" level="INFO">VALUE: [0.0290705, 0.039070083, 0.049069597, 0.059071222, 0.069072042, 0.07907275, 0.089073542, 0.099074167, 0.109074986, 0.119075764, 0.129076569, 0.139077111, 0.149077917, 0.159078653, 0.169079458, 0.179080097, 0.189080875, 0.199081611, 0.209082403, 0.219083028, 0.229083806, 0.239084542, 0.249085333, 0.259085972, 0.26908675, 0.279087486, 0.289088278, 0.299088903, 0.309089708, 0.319090444, 0.329091222, 0.339091847, 0.349092653, 0.359093375, 0.369094181, 0.379094792, 0.389095597, 0.399096361, 0.409097139, 0.419097722, 0.429098528, 0.439099236, 0.449100028, 0.459100653, 0.469101444, 0.479102181, 0.489102958, 0.499103583, 0.509104361, 0.519105111, 0.529105875, 0.539106486, 0.549107278, 0.559108, 0.569108806, 0.579109403, 0.589110264, 0.599110931, 0.609111736, 0.619112333, 0.629113139, 0.639113847, 0.649114667, 0.65911525, 0.669116097, 0.679116778, 0.689117569, 0.699118181, 0.709119014, 0.719119708, 0.7291205, 0.739121111, 0.749121917, 0.759122639, 0.769123431, 0.779124042, 0.789124847, 0.799125556, 0.809126347, 0.819126972, 0.829127778, 0.839128486, 0.849129278, 0.859129903, 0.869130722, 0.879131417, 0.889132236, 0.899132833, 0.909133639, 0.919134361, 0.929135139, 0.939135778, 0.949136556, 0.959137278, 0.969138069, 0.979138736, 0.989139486, 0.999140222, 1.009141014, 1.019141625] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:54.360" endtime="20201112 10:15:54.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.355" endtime="20201112 10:15:54.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.365" endtime="20201112 10:15:54.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.368" endtime="20201112 10:15:54.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.367" endtime="20201112 10:15:54.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.363" endtime="20201112 10:15:54.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.810" endtime="20201112 10:15:54.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.689" endtime="20201112 10:15:54.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.688" endtime="20201112 10:15:54.389"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:54.392" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.401" endtime="20201112 10:15:56.511"></status>
</kw>
<msg timestamp="20201112 10:15:56.512" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 120609148, 'wakeups': [120619163, 120629162, 120639162, 120649162, 120...</msg>
<status status="PASS" starttime="20201112 10:15:54.399" endtime="20201112 10:15:56.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.518" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 120609148, 'wakeups': [120619163, 120629162, 120639162, 120649162, 120...</msg>
<status status="PASS" starttime="20201112 10:15:56.515" endtime="20201112 10:15:56.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.521" endtime="20201112 10:15:56.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.396" endtime="20201112 10:15:56.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.394" endtime="20201112 10:15:56.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.531" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 120609148, 'wakeups': [120619163, 120629162, 120639162, 120649162, 120659162, 120669162, 120679162, 120689162, 120699162, 120709162, 120719162...</msg>
<status status="PASS" starttime="20201112 10:15:56.527" endtime="20201112 10:15:56.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.540" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:56.538" endtime="20201112 10:15:56.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.544" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:56.542" endtime="20201112 10:15:56.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.533" endtime="20201112 10:15:56.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.554" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:56.552" endtime="20201112 10:15:56.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.558" level="INFO">VALUE: 120609148</msg>
<status status="PASS" starttime="20201112 10:15:56.556" endtime="20201112 10:15:56.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.547" endtime="20201112 10:15:56.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.568" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:56.566" endtime="20201112 10:15:56.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.573" level="INFO">VALUE: [120619163, 120629162, 120639162, 120649162, 120659162, 120669162, 120679162, 120689162, 120699162, 120709162, 120719162, 120729162, 120739162, 120749162, 120759162, 120769162, 120779162, 120789162, 120799162, 120809162, 120819162, 120829162, 120839162, 120849162, 120859162, 120869162, 120879162, 120889162, 120899162, 120909162, 120919162, 120929162, 120939162, 120949162, 120959162, 120969162, 120979162, 120989162, 120999162, 121009162, 121019162, 121029162, 121039162, 121049162, 121059162, 121069162, 121079162, 121089162, 121099162, 121109162, 121119162, 121129162, 121139162, 121149162, 121159162, 121169162, 121179162, 121189162, 121199162, 121209162, 121219162, 121229162, 121239162, 121249162, 121259162, 121269162, 121279162, 121289162, 121299162, 121309162, 121319162, 121329162, 121339162, 121349162, 121359162, 121369162, 121379162, 121389162, 121399162, 121409162, 121419162, 121429162, 121439162, 121449162, 121459162, 121469162, 121479162, 121489162, 121499162, 121509162, 121519162, 121529162, 121539162, 121549162, 121559162, 121569162, 121579162, 121589162, 121599162, 121609162]</msg>
<status status="PASS" starttime="20201112 10:15:56.570" endtime="20201112 10:15:56.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.561" endtime="20201112 10:15:56.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.593" endtime="20201112 10:15:56.888"></status>
</kw>
<msg timestamp="20201112 10:15:56.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022503083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032519653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.590" endtime="20201112 10:15:56.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022503083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032519653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.892" endtime="20201112 10:15:56.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.899" endtime="20201112 10:15:56.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.584" endtime="20201112 10:15:56.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.580" endtime="20201112 10:15:56.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.927" level="INFO">${RESULT} = {'source_diff': [0, 0.010016570000000002, 0.009999805, 0.010000402999999998, 0.01000057, 0.010000818999999994, 0.010000708000000011, 0.010000819999999994, 0.010000597, 0.010000818999999994, 0.01000070...</msg>
<status status="PASS" starttime="20201112 10:15:56.903" endtime="20201112 10:15:56.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.931" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:56.930" endtime="20201112 10:15:56.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.933" level="INFO">VALUE: 0.022503083</msg>
<status status="PASS" starttime="20201112 10:15:56.932" endtime="20201112 10:15:56.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.928" endtime="20201112 10:15:56.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.939" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:56.938" endtime="20201112 10:15:56.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.941" level="INFO">VALUE: [0.032519653, 0.042519458, 0.052519861, 0.062520431, 0.07252125, 0.082521958, 0.092522778, 0.102523375, 0.112524194, 0.122524903, 0.132525722, 0.142526333, 0.152527125, 0.162527861, 0.172528653, 0.182529264, 0.192530069, 0.202530806, 0.212531597, 0.222532222, 0.232533014, 0.24253375, 0.252534611, 0.262535153, 0.272535958, 0.282536708, 0.292537528, 0.302538139, 0.312538917, 0.322539639, 0.332540458, 0.342541056, 0.352541889, 0.362542597, 0.372543389, 0.382544028, 0.392544806, 0.402545528, 0.412546333, 0.422547, 0.43254775, 0.442548486, 0.452549333, 0.462549875, 0.472550722, 0.482551458, 0.492552181, 0.502552792, 0.512553597, 0.522554319, 0.532555111, 0.542555778, 0.552556528, 0.562557292, 0.572558028, 0.582558667, 0.592559458, 0.602560194, 0.612560972, 0.622561639, 0.632562375, 0.642563083, 0.652563875, 0.6625645, 0.672565292, 0.682566014, 0.692566806, 0.7025675, 0.712568208, 0.722568931, 0.732569722, 0.742570333, 0.752571153, 0.762571875, 0.772572681, 0.782573264, 0.792574069, 0.802574792, 0.812575597, 0.822576194, 0.832577014, 0.84257775, 0.852578583, 0.862579125, 0.872579972, 0.882580667, 0.892581444, 0.902582042, 0.912582847, 0.922583569, 0.932584417, 0.942584972, 0.952585778, 0.962586514, 0.972587306, 0.982587903, 0.992588708, 1.002589431, 1.012590222, 1.022590847] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:56.940" endtime="20201112 10:15:56.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.935" endtime="20201112 10:15:56.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.944" endtime="20201112 10:15:56.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.947" endtime="20201112 10:15:56.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.946" endtime="20201112 10:15:56.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.942" endtime="20201112 10:15:56.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.393" endtime="20201112 10:15:56.968"></status>
</kw>
<msg timestamp="20201112 10:15:56.968" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.976" endtime="20201112 10:15:59.086"></status>
</kw>
<msg timestamp="20201112 10:15:59.088" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 123184387, 'wakeups': [123194403, 123204401, 123214401, 123224401, 123...</msg>
<status status="PASS" starttime="20201112 10:15:56.974" endtime="20201112 10:15:59.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.094" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 123184387, 'wakeups': [123194403, 123204401, 123214401, 123224401, 123...</msg>
<status status="PASS" starttime="20201112 10:15:59.090" endtime="20201112 10:15:59.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.096" endtime="20201112 10:15:59.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.972" endtime="20201112 10:15:59.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.970" endtime="20201112 10:15:59.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.108" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 123184387, 'wakeups': [123194403, 123204401, 123214401, 123224401, 123234401, 123244401, 123254401, 123264401, 123274401, 123284401, 123294401...</msg>
<status status="PASS" starttime="20201112 10:15:59.104" endtime="20201112 10:15:59.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.117" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:59.115" endtime="20201112 10:15:59.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.121" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:59.119" endtime="20201112 10:15:59.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.110" endtime="20201112 10:15:59.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.133" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:59.131" endtime="20201112 10:15:59.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.137" level="INFO">VALUE: 123184387</msg>
<status status="PASS" starttime="20201112 10:15:59.135" endtime="20201112 10:15:59.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.124" endtime="20201112 10:15:59.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.147" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:59.145" endtime="20201112 10:15:59.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.152" level="INFO">VALUE: [123194403, 123204401, 123214401, 123224401, 123234401, 123244401, 123254401, 123264401, 123274401, 123284401, 123294401, 123304401, 123314401, 123324401, 123334401, 123344401, 123354401, 123364401, 123374401, 123384401, 123394401, 123404401, 123414401, 123424401, 123434401, 123444401, 123454401, 123464401, 123474401, 123484401, 123494401, 123504401, 123514401, 123524401, 123534401, 123544401, 123554401, 123564401, 123574401, 123584401, 123594401, 123604401, 123614401, 123624401, 123634401, 123644401, 123654401, 123664401, 123674401, 123684401, 123694401, 123704401, 123714401, 123724401, 123734401, 123744401, 123754401, 123764401, 123774401, 123784401, 123794401, 123804401, 123814401, 123824401, 123834401, 123844401, 123854401, 123864401, 123874401, 123884401, 123894401, 123904401, 123914401, 123924401, 123934401, 123944401, 123954401, 123964401, 123974401, 123984401, 123994401, 124004401, 124014401, 124024401, 124034401, 124044401, 124054401, 124064401, 124074401, 124084401, 124094401, 124104401, 124114401, 124124401, 124134401, 124144401, 124154401, 124164401, 124174401, 124184401]</msg>
<status status="PASS" starttime="20201112 10:15:59.150" endtime="20201112 10:15:59.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.140" endtime="20201112 10:15:59.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.167" endtime="20201112 10:15:59.460"></status>
</kw>
<msg timestamp="20201112 10:15:59.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019087708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029104931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.164" endtime="20201112 10:15:59.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019087708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029104931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.464" endtime="20201112 10:15:59.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.471" endtime="20201112 10:15:59.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.159" endtime="20201112 10:15:59.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.155" endtime="20201112 10:15:59.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.498" level="INFO">${RESULT} = {'source_diff': [0, 0.010017223000000002, 0.009998818999999999, 0.010000416999999998, 0.010000583, 0.010000778000000002, 0.010000722000000004, 0.010000806000000001, 0.010000624999999999, 0.010000833, ...</msg>
<status status="PASS" starttime="20201112 10:15:59.475" endtime="20201112 10:15:59.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.502" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:59.501" endtime="20201112 10:15:59.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.504" level="INFO">VALUE: 0.019087708</msg>
<status status="PASS" starttime="20201112 10:15:59.503" endtime="20201112 10:15:59.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.499" endtime="20201112 10:15:59.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.510" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:59.509" endtime="20201112 10:15:59.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.512" level="INFO">VALUE: [0.029104931, 0.03910375, 0.049104167, 0.05910475, 0.069105528, 0.07910625, 0.089107056, 0.099107681, 0.109108514, 0.119109194, 0.129110028, 0.139110653, 0.149111431, 0.159112139, 0.169112931, 0.179113569, 0.189114375, 0.199115083, 0.209115875, 0.219116514, 0.229117306, 0.239118028, 0.249118819, 0.259119444, 0.269120264, 0.279120972, 0.289121778, 0.299122389, 0.309123222, 0.319123917, 0.329124722, 0.339125333, 0.349126153, 0.359126889, 0.369127736, 0.379128278, 0.389129083, 0.399129819, 0.409130611, 0.419131319, 0.429132056, 0.439132778, 0.449133583, 0.459134181, 0.469134986, 0.479135708, 0.489136514, 0.499137125, 0.509137931, 0.519138667, 0.529139458, 0.539140069, 0.549140875, 0.559141625, 0.569142417, 0.579143056, 0.589143889, 0.599144556, 0.609145333, 0.619145944, 0.629146778, 0.639147528, 0.649148333, 0.659148861, 0.669149694, 0.679150389, 0.689151194, 0.699151792, 0.709152583, 0.719153306, 0.729154111, 0.739154722, 0.749155528, 0.75915625, 0.769157028, 0.779157708, 0.789158444, 0.799159167, 0.809159944, 0.819160556, 0.829161361, 0.839162097, 0.849162889, 0.859163486, 0.869164306, 0.879165, 0.889165806, 0.899166417, 0.909167222, 0.919167986, 0.929168722, 0.939169347, 0.949170139, 0.959170861, 0.969171694, 0.979172278, 0.989173069, 0.999173792, 1.009174583, 1.019175194] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:59.511" endtime="20201112 10:15:59.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.506" endtime="20201112 10:15:59.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.516" endtime="20201112 10:15:59.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:59.519" endtime="20201112 10:15:59.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.517" endtime="20201112 10:15:59.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.514" endtime="20201112 10:15:59.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.969" endtime="20201112 10:15:59.540"></status>
</kw>
<msg timestamp="20201112 10:15:59.540" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.548" endtime="20201112 10:16:01.658"></status>
</kw>
<msg timestamp="20201112 10:16:01.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 125756108, 'wakeups': [125766123, 125776122, 125786122, 125796122, 125...</msg>
<status status="PASS" starttime="20201112 10:15:59.546" endtime="20201112 10:16:01.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.665" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 125756108, 'wakeups': [125766123, 125776122, 125786122, 125796122, 125...</msg>
<status status="PASS" starttime="20201112 10:16:01.661" endtime="20201112 10:16:01.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.667" endtime="20201112 10:16:01.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.544" endtime="20201112 10:16:01.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.542" endtime="20201112 10:16:01.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.678" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 125756108, 'wakeups': [125766123, 125776122, 125786122, 125796122, 125806122, 125816122, 125826122, 125836122, 125846122, 125856122, 125866122...</msg>
<status status="PASS" starttime="20201112 10:16:01.674" endtime="20201112 10:16:01.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.691" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:01.689" endtime="20201112 10:16:01.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.696" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:01.694" endtime="20201112 10:16:01.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.680" endtime="20201112 10:16:01.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.706" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:01.704" endtime="20201112 10:16:01.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.710" level="INFO">VALUE: 125756108</msg>
<status status="PASS" starttime="20201112 10:16:01.708" endtime="20201112 10:16:01.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.699" endtime="20201112 10:16:01.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.720" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:01.718" endtime="20201112 10:16:01.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.724" level="INFO">VALUE: [125766123, 125776122, 125786122, 125796122, 125806122, 125816122, 125826122, 125836122, 125846122, 125856122, 125866122, 125876122, 125886122, 125896122, 125906122, 125916122, 125926122, 125936122, 125946122, 125956122, 125966122, 125976122, 125986122, 125996122, 126006122, 126016122, 126026122, 126036122, 126046122, 126056122, 126066122, 126076122, 126086122, 126096122, 126106122, 126116122, 126126122, 126136122, 126146122, 126156122, 126166122, 126176122, 126186122, 126196122, 126206122, 126216122, 126226122, 126236122, 126246122, 126256122, 126266122, 126276122, 126286122, 126296122, 126306122, 126316122, 126326122, 126336122, 126346122, 126356122, 126366122, 126376122, 126386122, 126396122, 126406122, 126416122, 126426122, 126436122, 126446122, 126456122, 126466122, 126476122, 126486122, 126496122, 126506122, 126516122, 126526122, 126536122, 126546122, 126556122, 126566122, 126576122, 126586122, 126596122, 126606122, 126616122, 126626122, 126636122, 126646122, 126656122, 126666122, 126676122, 126686122, 126696122, 126706122, 126716122, 126726122, 126736122, 126746122, 126756122]</msg>
<status status="PASS" starttime="20201112 10:16:01.722" endtime="20201112 10:16:01.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.713" endtime="20201112 10:16:01.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.733" endtime="20201112 10:16:02.025"></status>
</kw>
<msg timestamp="20201112 10:16:02.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018898278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028914861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.730" endtime="20201112 10:16:02.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018898278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028914861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.028" endtime="20201112 10:16:02.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.036" endtime="20201112 10:16:02.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.728" endtime="20201112 10:16:02.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.726" endtime="20201112 10:16:02.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:02.062" level="INFO">${RESULT} = {'source_diff': [0, 0.010016582999999999, 0.009999806, 0.010000347, 0.010000652999999998, 0.010000776999999995, 0.010000792000000008, 0.010000735999999996, 0.010000611000000006, 0.010000806000000001, ...</msg>
<status status="PASS" starttime="20201112 10:16:02.039" endtime="20201112 10:16:02.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.067" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:02.066" endtime="20201112 10:16:02.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.069" level="INFO">VALUE: 0.018898278</msg>
<status status="PASS" starttime="20201112 10:16:02.068" endtime="20201112 10:16:02.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.063" endtime="20201112 10:16:02.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.074" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:02.073" endtime="20201112 10:16:02.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.077" level="INFO">VALUE: [0.028914861, 0.038914667, 0.048915014, 0.058915667, 0.068916444, 0.078917236, 0.088917972, 0.098918583, 0.108919389, 0.118920111, 0.128920931, 0.138921528, 0.148922333, 0.158923083, 0.168923931, 0.178924472, 0.188925278, 0.198926028, 0.208926819, 0.218927417, 0.228928292, 0.238928958, 0.24892975, 0.258930375, 0.268931181, 0.278931903, 0.288932694, 0.298933319, 0.308934125, 0.318934847, 0.328935653, 0.338936264, 0.348937056, 0.358937778, 0.368938556, 0.378939167, 0.38894, 0.398940708, 0.408941486, 0.418942097, 0.428942889, 0.438943625, 0.448944403, 0.458945014, 0.468945806, 0.478946542, 0.488947319, 0.498947931, 0.508948722, 0.518949444, 0.528950264, 0.538950861, 0.548951681, 0.558952375, 0.568953167, 0.578953792, 0.588954583, 0.598955306, 0.608956111, 0.618956694, 0.6289575, 0.638958222, 0.648959014, 0.658959625, 0.668960417, 0.678961153, 0.688961931, 0.698962597, 0.708963347, 0.718964069, 0.728964861, 0.738965472, 0.748966264, 0.758967, 0.768967806, 0.778968389, 0.788969194, 0.798969958, 0.808970708, 0.818971319, 0.828972125, 0.838972833, 0.848973694, 0.85897425, 0.868975069, 0.878975764, 0.888976556, 0.898977167, 0.908977986, 0.918978708, 0.928979486, 0.938980125, 0.948980889, 0.958981611, 0.968982417, 0.978983014, 0.988983875, 0.998984542, 1.008985333, 1.018985944] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:02.076" endtime="20201112 10:16:02.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.070" endtime="20201112 10:16:02.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.080" endtime="20201112 10:16:02.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.083" endtime="20201112 10:16:02.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.082" endtime="20201112 10:16:02.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.078" endtime="20201112 10:16:02.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.540" endtime="20201112 10:16:02.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.391" endtime="20201112 10:16:02.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.390" endtime="20201112 10:16:02.104"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:02.107" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.116" endtime="20201112 10:16:04.226"></status>
</kw>
<msg timestamp="20201112 10:16:04.227" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 128323963, 'wakeups': [128333985, 128343984, 128353982, 128363982, 128...</msg>
<status status="PASS" starttime="20201112 10:16:02.113" endtime="20201112 10:16:04.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.233" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 128323963, 'wakeups': [128333985, 128343984, 128353982, 128363982, 128...</msg>
<status status="PASS" starttime="20201112 10:16:04.229" endtime="20201112 10:16:04.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.236" endtime="20201112 10:16:04.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.111" endtime="20201112 10:16:04.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.109" endtime="20201112 10:16:04.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.247" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 128323963, 'wakeups': [128333985, 128343984, 128353982, 128363982, 128373982, 128383982, 128393982, 128403982, 128413982, 128423982, 128433982...</msg>
<status status="PASS" starttime="20201112 10:16:04.243" endtime="20201112 10:16:04.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.256" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:04.254" endtime="20201112 10:16:04.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.260" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:04.258" endtime="20201112 10:16:04.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.249" endtime="20201112 10:16:04.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.270" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:04.268" endtime="20201112 10:16:04.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.275" level="INFO">VALUE: 128323963</msg>
<status status="PASS" starttime="20201112 10:16:04.273" endtime="20201112 10:16:04.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.263" endtime="20201112 10:16:04.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.285" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:04.283" endtime="20201112 10:16:04.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.288" level="INFO">VALUE: [128333985, 128343984, 128353982, 128363982, 128373982, 128383982, 128393982, 128403982, 128413982, 128423982, 128433982, 128443982, 128453982, 128463982, 128473982, 128483982, 128493982, 128503982, 128513982, 128523982, 128533982, 128543982, 128553982, 128563982, 128573982, 128583982, 128593982, 128603982, 128613982, 128623982, 128633982, 128643982, 128653982, 128663982, 128673982, 128683982, 128693982, 128703982, 128713982, 128723982, 128733982, 128743982, 128753982, 128763982, 128773982, 128783982, 128793982, 128803982, 128813982, 128823982, 128833982, 128843982, 128853982, 128863982, 128873982, 128883982, 128893982, 128903982, 128913982, 128923982, 128933982, 128943982, 128953982, 128963982, 128973982, 128983982, 128993982, 129003982, 129013982, 129023982, 129033982, 129043982, 129053982, 129063982, 129073982, 129083982, 129093982, 129103982, 129113982, 129123982, 129133982, 129143982, 129153982, 129163982, 129173982, 129183982, 129193982, 129203982, 129213982, 129223982, 129233982, 129243982, 129253982, 129263982, 129273982, 129283982, 129293982, 129303982, 129313982, 129323982]</msg>
<status status="PASS" starttime="20201112 10:16:04.287" endtime="20201112 10:16:04.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.277" endtime="20201112 10:16:04.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.295" endtime="20201112 10:16:04.587"></status>
</kw>
<msg timestamp="20201112 10:16:04.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032618028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.294" endtime="20201112 10:16:04.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032618028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.591" endtime="20201112 10:16:04.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.598" endtime="20201112 10:16:04.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.291" endtime="20201112 10:16:04.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.289" endtime="20201112 10:16:04.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.625" level="INFO">${RESULT} = {'source_diff': [0, 0.010022791999999999, 0.009999514000000001, 0.009999374999999998, 0.010000611000000006, 0.010000804999999988, 0.010000792000000008, 0.010000735999999996, 0.010000611000000006, 0.01...</msg>
<status status="PASS" starttime="20201112 10:16:04.601" endtime="20201112 10:16:04.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.629" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:04.628" endtime="20201112 10:16:04.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.631" level="INFO">VALUE: 0.022595236</msg>
<status status="PASS" starttime="20201112 10:16:04.630" endtime="20201112 10:16:04.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.626" endtime="20201112 10:16:04.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.637" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:04.636" endtime="20201112 10:16:04.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.639" level="INFO">VALUE: [0.032618028, 0.042617542, 0.052616917, 0.062617528, 0.072618333, 0.082619125, 0.092619861, 0.102620472, 0.112621278, 0.122622014, 0.132622792, 0.142623417, 0.152624222, 0.162624958, 0.172625764, 0.182626361, 0.192627167, 0.202627903, 0.212628694, 0.222629306, 0.232630167, 0.242630833, 0.252631708, 0.26263225, 0.272633056, 0.282633778, 0.292634569, 0.30263525, 0.312636, 0.322636722, 0.332637528, 0.342638139, 0.352638958, 0.362639667, 0.372640486, 0.382641083, 0.392641889, 0.402642639, 0.412643403, 0.422644028, 0.432644819, 0.442645542, 0.452646347, 0.462646931, 0.47264775, 0.482648458, 0.492649306, 0.502649861, 0.512650667, 0.522651389, 0.532652167, 0.542652778, 0.552653569, 0.562654292, 0.572655083, 0.582655694, 0.5926565, 0.602657222, 0.612658014, 0.622658611, 0.632659417, 0.642660139, 0.652660931, 0.662661542, 0.672662375, 0.682663056, 0.692663847, 0.702664472, 0.712665264, 0.722665986, 0.732666778, 0.742667403, 0.752668236, 0.762668972, 0.772669694, 0.782670306, 0.792671125, 0.802671861, 0.812672625, 0.822673236, 0.832674042, 0.842674764, 0.852675556, 0.862676167, 0.872676986, 0.88267775, 0.892678486, 0.902679083, 0.912679903, 0.922680625, 0.932681403, 0.942682083, 0.952682819, 0.962683556, 0.972684333, 0.982684944, 0.992685778, 1.0026865, 1.012687264, 1.022687861] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:04.638" endtime="20201112 10:16:04.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.633" endtime="20201112 10:16:04.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.642" endtime="20201112 10:16:04.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:04.646" endtime="20201112 10:16:04.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.644" endtime="20201112 10:16:04.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.640" endtime="20201112 10:16:04.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.107" endtime="20201112 10:16:04.666"></status>
</kw>
<msg timestamp="20201112 10:16:04.667" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.675" endtime="20201112 10:16:06.784"></status>
</kw>
<msg timestamp="20201112 10:16:06.786" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 130882814, 'wakeups': [130892835, 130902835, 130912833, 130922833, 130...</msg>
<status status="PASS" starttime="20201112 10:16:04.673" endtime="20201112 10:16:06.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.791" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 130882814, 'wakeups': [130892835, 130902835, 130912833, 130922833, 130...</msg>
<status status="PASS" starttime="20201112 10:16:06.788" endtime="20201112 10:16:06.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.794" endtime="20201112 10:16:06.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.670" endtime="20201112 10:16:06.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.669" endtime="20201112 10:16:06.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:06.804" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 130882814, 'wakeups': [130892835, 130902835, 130912833, 130922833, 130932833, 130942833, 130952833, 130962833, 130972833, 130982833, 130992833...</msg>
<status status="PASS" starttime="20201112 10:16:06.801" endtime="20201112 10:16:06.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.813" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:06.811" endtime="20201112 10:16:06.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.817" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:06.815" endtime="20201112 10:16:06.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.806" endtime="20201112 10:16:06.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.827" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:06.825" endtime="20201112 10:16:06.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.833" level="INFO">VALUE: 130882814</msg>
<status status="PASS" starttime="20201112 10:16:06.831" endtime="20201112 10:16:06.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.820" endtime="20201112 10:16:06.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.842" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:06.841" endtime="20201112 10:16:06.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.844" level="INFO">VALUE: [130892835, 130902835, 130912833, 130922833, 130932833, 130942833, 130952833, 130962833, 130972833, 130982833, 130992833, 131002833, 131012833, 131022833, 131032833, 131042833, 131052833, 131062833, 131072833, 131082833, 131092833, 131102833, 131112833, 131122833, 131132833, 131142833, 131152833, 131162833, 131172833, 131182833, 131192833, 131202833, 131212833, 131222833, 131232833, 131242833, 131252833, 131262833, 131272833, 131282833, 131292833, 131302833, 131312833, 131322833, 131332833, 131342833, 131352833, 131362833, 131372833, 131382833, 131392833, 131402833, 131412833, 131422833, 131432833, 131442833, 131452833, 131462833, 131472833, 131482833, 131492833, 131502833, 131512833, 131522833, 131532833, 131542833, 131552833, 131562833, 131572833, 131582833, 131592833, 131602833, 131612833, 131622833, 131632833, 131642833, 131652833, 131662833, 131672833, 131682833, 131692833, 131702833, 131712833, 131722833, 131732833, 131742833, 131752833, 131762833, 131772833, 131782833, 131792833, 131802833, 131812833, 131822833, 131832833, 131842833, 131852833, 131862833, 131872833, 131882833]</msg>
<status status="PASS" starttime="20201112 10:16:06.843" endtime="20201112 10:16:06.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.836" endtime="20201112 10:16:06.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.852" endtime="20201112 10:16:07.144"></status>
</kw>
<msg timestamp="20201112 10:16:07.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018843389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028865472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.851" endtime="20201112 10:16:07.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018843389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028865472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.148" endtime="20201112 10:16:07.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.155" endtime="20201112 10:16:07.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.848" endtime="20201112 10:16:07.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.846" endtime="20201112 10:16:07.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:07.182" level="INFO">${RESULT} = {'source_diff': [0, 0.010022083000000001, 0.010000513999999999, 0.009999361000000005, 0.010000624999999999, 0.010000861, 0.010000695000000004, 0.010000777999999988, 0.010000611000000006, 0.01000081899...</msg>
<status status="PASS" starttime="20201112 10:16:07.159" endtime="20201112 10:16:07.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.187" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:07.186" endtime="20201112 10:16:07.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.189" level="INFO">VALUE: 0.018843389</msg>
<status status="PASS" starttime="20201112 10:16:07.188" endtime="20201112 10:16:07.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.183" endtime="20201112 10:16:07.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.194" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:07.193" endtime="20201112 10:16:07.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.197" level="INFO">VALUE: [0.028865472, 0.038865986, 0.048865347, 0.058865972, 0.068866833, 0.078867528, 0.088868306, 0.098868917, 0.108869736, 0.118870444, 0.12887125, 0.138871847, 0.148872667, 0.158873389, 0.168874181, 0.178874792, 0.188875611, 0.198876319, 0.208877139, 0.21887775, 0.228878542, 0.238879264, 0.248880069, 0.258880694, 0.2688815, 0.278882208, 0.288883014, 0.298883625, 0.308884444, 0.318885153, 0.328885958, 0.338886583, 0.348887389, 0.358888097, 0.368888903, 0.378889528, 0.388890333, 0.398891056, 0.408891861, 0.418892458, 0.428893264, 0.438894, 0.448894792, 0.458895403, 0.468896222, 0.478896958, 0.488897736, 0.498898347, 0.508899153, 0.518899889, 0.528900653, 0.538901264, 0.548902056, 0.558902792, 0.568903583, 0.578904264, 0.588904986, 0.598905708, 0.6089065, 0.618907097, 0.628907931, 0.638908639, 0.648909417, 0.658910028, 0.668910833, 0.678911556, 0.688912333, 0.698912972, 0.708913736, 0.718914458, 0.728915264, 0.738915875, 0.748916681, 0.758917403, 0.768918181, 0.778918833, 0.788919611, 0.798920306, 0.808921097, 0.818921708, 0.828922528, 0.838923236, 0.848924042, 0.858924653, 0.868925431, 0.878926167, 0.888926972, 0.898927556, 0.908928375, 0.918929125, 0.928929944, 0.938930486, 0.948931292, 0.958932069, 0.968932889, 0.978933431, 0.988934208, 0.998935014, 1.008935722, 1.018936347] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:07.196" endtime="20201112 10:16:07.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.190" endtime="20201112 10:16:07.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.200" endtime="20201112 10:16:07.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:07.203" endtime="20201112 10:16:07.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.202" endtime="20201112 10:16:07.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.198" endtime="20201112 10:16:07.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.667" endtime="20201112 10:16:07.224"></status>
</kw>
<msg timestamp="20201112 10:16:07.224" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.232" endtime="20201112 10:16:09.342"></status>
</kw>
<msg timestamp="20201112 10:16:09.343" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 133440165, 'wakeups': [133450187, 133460186, 133470184, 133480184, 133...</msg>
<status status="PASS" starttime="20201112 10:16:07.230" endtime="20201112 10:16:09.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.350" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 133440165, 'wakeups': [133450187, 133460186, 133470184, 133480184, 133...</msg>
<status status="PASS" starttime="20201112 10:16:09.346" endtime="20201112 10:16:09.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.352" endtime="20201112 10:16:09.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.228" endtime="20201112 10:16:09.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.226" endtime="20201112 10:16:09.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.364" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 133440165, 'wakeups': [133450187, 133460186, 133470184, 133480184, 133490184, 133500184, 133510184, 133520184, 133530184, 133540184, 133550184...</msg>
<status status="PASS" starttime="20201112 10:16:09.360" endtime="20201112 10:16:09.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.374" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:09.372" endtime="20201112 10:16:09.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.380" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:09.377" endtime="20201112 10:16:09.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.366" endtime="20201112 10:16:09.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.391" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:09.388" endtime="20201112 10:16:09.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.395" level="INFO">VALUE: 133440165</msg>
<status status="PASS" starttime="20201112 10:16:09.393" endtime="20201112 10:16:09.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.383" endtime="20201112 10:16:09.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.405" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:09.403" endtime="20201112 10:16:09.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.409" level="INFO">VALUE: [133450187, 133460186, 133470184, 133480184, 133490184, 133500184, 133510184, 133520184, 133530184, 133540184, 133550184, 133560184, 133570184, 133580184, 133590184, 133600184, 133610184, 133620184, 133630184, 133640184, 133650184, 133660184, 133670184, 133680184, 133690184, 133700184, 133710184, 133720184, 133730184, 133740184, 133750184, 133760184, 133770184, 133780184, 133790184, 133800184, 133810184, 133820184, 133830184, 133840184, 133850184, 133860184, 133870184, 133880184, 133890184, 133900184, 133910184, 133920184, 133930184, 133940184, 133950184, 133960184, 133970184, 133980184, 133990184, 134000184, 134010184, 134020184, 134030184, 134040184, 134050184, 134060184, 134070184, 134080184, 134090184, 134100184, 134110184, 134120184, 134130184, 134140184, 134150184, 134160184, 134170184, 134180184, 134190184, 134200184, 134210184, 134220184, 134230184, 134240184, 134250184, 134260184, 134270184, 134280184, 134290184, 134300184, 134310184, 134320184, 134330184, 134340184, 134350184, 134360184, 134370184, 134380184, 134390184, 134400184, 134410184, 134420184, 134430184, 134440184]</msg>
<status status="PASS" starttime="20201112 10:16:09.407" endtime="20201112 10:16:09.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.398" endtime="20201112 10:16:09.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.425" endtime="20201112 10:16:09.725"></status>
</kw>
<msg timestamp="20201112 10:16:09.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018871667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028894417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.422" endtime="20201112 10:16:09.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018871667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028894417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.729" endtime="20201112 10:16:09.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.736" endtime="20201112 10:16:09.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.417" endtime="20201112 10:16:09.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.412" endtime="20201112 10:16:09.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.762" level="INFO">${RESULT} = {'source_diff': [0, 0.010022749999999997, 0.009999514000000001, 0.009999346999999999, 0.010000638999999999, 0.010000791000000002, 0.010000735999999996, 0.010000834, 0.010000569, 0.010000792000000008, ...</msg>
<status status="PASS" starttime="20201112 10:16:09.739" endtime="20201112 10:16:09.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.767" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:09.766" endtime="20201112 10:16:09.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.769" level="INFO">VALUE: 0.018871667</msg>
<status status="PASS" starttime="20201112 10:16:09.768" endtime="20201112 10:16:09.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.763" endtime="20201112 10:16:09.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.774" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:09.773" endtime="20201112 10:16:09.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.776" level="INFO">VALUE: [0.028894417, 0.038893931, 0.048893278, 0.058893917, 0.068894708, 0.078895444, 0.088896278, 0.098896847, 0.108897639, 0.118898389, 0.128899181, 0.138899778, 0.148900625, 0.158901319, 0.168902125, 0.178902722, 0.188903556, 0.198904264, 0.208905111, 0.218905667, 0.228906472, 0.238907222, 0.248907986, 0.258908611, 0.268909458, 0.278910139, 0.288910931, 0.298911556, 0.308912389, 0.318913083, 0.328913875, 0.338914514, 0.348915306, 0.358916042, 0.368916819, 0.378917472, 0.38891825, 0.398918972, 0.408919792, 0.418920458, 0.428921194, 0.438921931, 0.448922736, 0.458923333, 0.468924153, 0.478924861, 0.488925639, 0.498926264, 0.508927056, 0.518927764, 0.528928556, 0.538929194, 0.548929986, 0.558930681, 0.568931472, 0.578932097, 0.588932889, 0.598933597, 0.608934403, 0.618935, 0.628935819, 0.638936569, 0.648937306, 0.658937931, 0.668938722, 0.678939458, 0.688940236, 0.698940833, 0.708941653, 0.718942361, 0.728943153, 0.738943778, 0.748944611, 0.758945278, 0.768946069, 0.778946681, 0.788947486, 0.798948208, 0.808948986, 0.818949597, 0.828950458, 0.838951139, 0.848951917, 0.858952542, 0.868953319, 0.878954042, 0.888954833, 0.898955444, 0.90895625, 0.918956972, 0.928957764, 0.938958389, 0.948959167, 0.958959889, 0.968960694, 0.978961292, 0.988962097, 0.998962819, 1.008963611, 1.018964222] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:09.775" endtime="20201112 10:16:09.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.770" endtime="20201112 10:16:09.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.779" endtime="20201112 10:16:09.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:09.783" endtime="20201112 10:16:09.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.781" endtime="20201112 10:16:09.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.778" endtime="20201112 10:16:09.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.225" endtime="20201112 10:16:09.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.105" endtime="20201112 10:16:09.804"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.105" endtime="20201112 10:16:09.804"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:09.806" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.815" endtime="20201112 10:16:11.925"></status>
</kw>
<msg timestamp="20201112 10:16:11.926" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 136023525, 'wakeups': [136033552, 136043550, 136053550, 136063551, 136...</msg>
<status status="PASS" starttime="20201112 10:16:09.813" endtime="20201112 10:16:11.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 136023525, 'wakeups': [136033552, 136043550, 136053550, 136063551, 136...</msg>
<status status="PASS" starttime="20201112 10:16:11.928" endtime="20201112 10:16:11.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.934" endtime="20201112 10:16:11.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.810" endtime="20201112 10:16:11.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.808" endtime="20201112 10:16:11.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:11.945" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 136023525, 'wakeups': [136033552, 136043550, 136053550, 136063551, 136073551, 136083551, 136093551, 136103551, 136113551, 136123551, 136133551...</msg>
<status status="PASS" starttime="20201112 10:16:11.941" endtime="20201112 10:16:11.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.960" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:11.958" endtime="20201112 10:16:11.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.965" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:11.963" endtime="20201112 10:16:11.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.953" endtime="20201112 10:16:11.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.975" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:11.973" endtime="20201112 10:16:11.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.979" level="INFO">VALUE: 136023525</msg>
<status status="PASS" starttime="20201112 10:16:11.977" endtime="20201112 10:16:11.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.968" endtime="20201112 10:16:11.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.989" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:11.987" endtime="20201112 10:16:11.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.993" level="INFO">VALUE: [136033552, 136043550, 136053550, 136063551, 136073551, 136083551, 136093551, 136103551, 136113551, 136123551, 136133551, 136143551, 136153551, 136163551, 136173551, 136183551, 136193551, 136203551, 136213551, 136223551, 136233551, 136243551, 136253551, 136263551, 136273551, 136283551, 136293551, 136303551, 136313551, 136323551, 136333551, 136343551, 136353551, 136363551, 136373551, 136383551, 136393551, 136403551, 136413551, 136423551, 136433551, 136443551, 136453551, 136463551, 136473551, 136483551, 136493551, 136503551, 136513551, 136523551, 136533551, 136543551, 136553551, 136563551, 136573551, 136583551, 136593551, 136603551, 136613551, 136623551, 136633551, 136643551, 136653551, 136663551, 136673551, 136683551, 136693551, 136703551, 136713551, 136723551, 136733551, 136743551, 136753551, 136763551, 136773551, 136783551, 136793551, 136803551, 136813551, 136823551, 136833551, 136843551, 136853551, 136863551, 136873551, 136883551, 136893551, 136903551, 136913551, 136923551, 136933551, 136943551, 136953551, 136963551, 136973551, 136983551, 136993551, 137003551, 137013551, 137023551]</msg>
<status status="PASS" starttime="20201112 10:16:11.991" endtime="20201112 10:16:11.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.982" endtime="20201112 10:16:11.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.009" endtime="20201112 10:16:12.306"></status>
</kw>
<msg timestamp="20201112 10:16:12.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032842347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.005" endtime="20201112 10:16:12.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032842347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.309" endtime="20201112 10:16:12.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.317" endtime="20201112 10:16:12.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.000" endtime="20201112 10:16:12.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.996" endtime="20201112 10:16:12.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:12.344" level="INFO">${RESULT} = {'source_diff': [0, 0.010028125000000002, 0.009998569999999998, 0.010001083000000001, 0.010001639000000007, 0.010000791999999994, 0.010000722000000004, 0.010000805000000001, 0.010000610999999993, 0.01...</msg>
<status status="PASS" starttime="20201112 10:16:12.320" endtime="20201112 10:16:12.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.349" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:12.348" endtime="20201112 10:16:12.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.351" level="INFO">VALUE: 0.022814222</msg>
<status status="PASS" starttime="20201112 10:16:12.350" endtime="20201112 10:16:12.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.345" endtime="20201112 10:16:12.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.356" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:12.355" endtime="20201112 10:16:12.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.359" level="INFO">VALUE: [0.032842347, 0.042840917, 0.052842, 0.062843639, 0.072844431, 0.082845153, 0.092845958, 0.102846569, 0.112847375, 0.122848097, 0.132848889, 0.142849514, 0.152850319, 0.162851042, 0.172851847, 0.182852444, 0.19285325, 0.202854042, 0.212854778, 0.222855389, 0.232856194, 0.242856944, 0.252857736, 0.262858333, 0.272859153, 0.282859875, 0.292860667, 0.302861278, 0.312862111, 0.322862806, 0.332863611, 0.342864222, 0.352865028, 0.36286575, 0.372866556, 0.382867208, 0.392867986, 0.402868681, 0.412869472, 0.422870083, 0.432870889, 0.442871667, 0.452872389, 0.462873, 0.472873806, 0.482874556, 0.492875361, 0.502875917, 0.512876722, 0.522877444, 0.532878222, 0.542878847, 0.552879639, 0.562880361, 0.572881153, 0.582881764, 0.592882556, 0.602883278, 0.612884069, 0.622884681, 0.632885472, 0.642886194, 0.652887, 0.662887611, 0.672888403, 0.682889125, 0.692889917, 0.702890528, 0.712891319, 0.722892056, 0.732892833, 0.742893444, 0.75289425, 0.762894958, 0.77289575, 0.782896361, 0.792897194, 0.802897931, 0.812898681, 0.822899306, 0.832900083, 0.842900806, 0.852901597, 0.862902208, 0.872903014, 0.882903736, 0.892904528, 0.902905139, 0.912905931, 0.922906653, 0.932907444, 0.942908056, 0.952908861, 0.962909583, 0.972910444, 0.982911, 0.992911778, 1.0029125, 1.012913333, 1.022913917] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:12.358" endtime="20201112 10:16:12.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.352" endtime="20201112 10:16:12.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.362" endtime="20201112 10:16:12.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:12.365" endtime="20201112 10:16:12.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.364" endtime="20201112 10:16:12.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.360" endtime="20201112 10:16:12.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.807" endtime="20201112 10:16:12.386"></status>
</kw>
<msg timestamp="20201112 10:16:12.386" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.394" endtime="20201112 10:16:14.504"></status>
</kw>
<msg timestamp="20201112 10:16:14.506" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 138602249, 'wakeups': [138612275, 138622274, 138632274, 138642275, 138...</msg>
<status status="PASS" starttime="20201112 10:16:12.392" endtime="20201112 10:16:14.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.512" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 138602249, 'wakeups': [138612275, 138622274, 138632274, 138642275, 138...</msg>
<status status="PASS" starttime="20201112 10:16:14.508" endtime="20201112 10:16:14.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.514" endtime="20201112 10:16:14.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.390" endtime="20201112 10:16:14.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.388" endtime="20201112 10:16:14.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.525" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 138602249, 'wakeups': [138612275, 138622274, 138632274, 138642275, 138652275, 138662275, 138672275, 138682275, 138692275, 138702275, 138712275...</msg>
<status status="PASS" starttime="20201112 10:16:14.521" endtime="20201112 10:16:14.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.534" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:14.531" endtime="20201112 10:16:14.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.538" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:14.536" endtime="20201112 10:16:14.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.527" endtime="20201112 10:16:14.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.550" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:14.548" endtime="20201112 10:16:14.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.554" level="INFO">VALUE: 138602249</msg>
<status status="PASS" starttime="20201112 10:16:14.552" endtime="20201112 10:16:14.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.541" endtime="20201112 10:16:14.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.564" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:14.562" endtime="20201112 10:16:14.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.570" level="INFO">VALUE: [138612275, 138622274, 138632274, 138642275, 138652275, 138662275, 138672275, 138682275, 138692275, 138702275, 138712275, 138722275, 138732275, 138742275, 138752275, 138762275, 138772275, 138782275, 138792275, 138802275, 138812275, 138822275, 138832275, 138842275, 138852275, 138862275, 138872275, 138882275, 138892275, 138902275, 138912275, 138922275, 138932275, 138942275, 138952275, 138962275, 138972275, 138982275, 138992275, 139002275, 139012275, 139022275, 139032275, 139042275, 139052275, 139062275, 139072275, 139082275, 139092275, 139102275, 139112275, 139122275, 139132275, 139142275, 139152275, 139162275, 139172275, 139182275, 139192275, 139202275, 139212275, 139222275, 139232275, 139242275, 139252275, 139262275, 139272275, 139282275, 139292275, 139302275, 139312275, 139322275, 139332275, 139342275, 139352275, 139362275, 139372275, 139382275, 139392275, 139402275, 139412275, 139422275, 139432275, 139442275, 139452275, 139462275, 139472275, 139482275, 139492275, 139502275, 139512275, 139522275, 139532275, 139542275, 139552275, 139562275, 139572275, 139582275, 139592275, 139602275]</msg>
<status status="PASS" starttime="20201112 10:16:14.567" endtime="20201112 10:16:14.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.557" endtime="20201112 10:16:14.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.585" endtime="20201112 10:16:14.878"></status>
</kw>
<msg timestamp="20201112 10:16:14.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019007292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029035083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.582" endtime="20201112 10:16:14.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019007292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029035083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.881" endtime="20201112 10:16:14.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.889" endtime="20201112 10:16:14.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.576" endtime="20201112 10:16:14.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.573" endtime="20201112 10:16:14.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.915" level="INFO">${RESULT} = {'source_diff': [0, 0.010027791000000001, 0.009999598000000002, 0.010001083000000001, 0.010001639, 0.010000778000000002, 0.010000750000000003, 0.010000790999999995, 0.010000597, 0.010000834, 0.0100007...</msg>
<status status="PASS" starttime="20201112 10:16:14.892" endtime="20201112 10:16:14.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.919" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:14.918" endtime="20201112 10:16:14.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.921" level="INFO">VALUE: 0.019007292</msg>
<status status="PASS" starttime="20201112 10:16:14.920" endtime="20201112 10:16:14.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.916" endtime="20201112 10:16:14.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.927" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:14.926" endtime="20201112 10:16:14.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.930" level="INFO">VALUE: [0.029035083, 0.039034681, 0.049035764, 0.059037403, 0.069038181, 0.079038931, 0.089039722, 0.099040319, 0.109041153, 0.119041875, 0.129042722, 0.139043264, 0.149044069, 0.159044806, 0.169045597, 0.179046208, 0.189047014, 0.19904775, 0.209048556, 0.219049167, 0.229049972, 0.239050694, 0.249051528, 0.259052097, 0.269052903, 0.279053625, 0.289054417, 0.299055028, 0.309055833, 0.319056556, 0.329057347, 0.339057972, 0.349058778, 0.359059486, 0.369060292, 0.379060903, 0.389061694, 0.399062444, 0.409063222, 0.419063819, 0.429064653, 0.439065347, 0.449066153, 0.45906675, 0.469067556, 0.479068292, 0.489069069, 0.499069694, 0.5090705, 0.519071222, 0.529072069, 0.539072625, 0.549073417, 0.559074153, 0.569074958, 0.579075639, 0.589076361, 0.599077083, 0.609077875, 0.619078486, 0.629079306, 0.639080028, 0.649080819, 0.659081431, 0.669082222, 0.679082972, 0.689083764, 0.699084389, 0.709085181, 0.719085889, 0.729086681, 0.739087306, 0.749088139, 0.759088833, 0.769089667, 0.779090236, 0.789091042, 0.799091764, 0.809092569, 0.819093194, 0.829093986, 0.839094694, 0.8490955, 0.859096111, 0.869096958, 0.879097639, 0.889098431, 0.899099083, 0.909099847, 0.919100611, 0.929101375, 0.939101986, 0.949102792, 0.959103514, 0.969104319, 0.979104917, 0.989105722, 0.999106444, 1.00910725, 1.019107847] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:14.929" endtime="20201112 10:16:14.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.923" endtime="20201112 10:16:14.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.933" endtime="20201112 10:16:14.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:14.936" endtime="20201112 10:16:14.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.935" endtime="20201112 10:16:14.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.931" endtime="20201112 10:16:14.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.387" endtime="20201112 10:16:14.957"></status>
</kw>
<msg timestamp="20201112 10:16:14.957" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.965" endtime="20201112 10:16:17.075"></status>
</kw>
<msg timestamp="20201112 10:16:17.077" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 141173475, 'wakeups': [141183502, 141193500, 141203500, 141213501, 141...</msg>
<status status="PASS" starttime="20201112 10:16:14.964" endtime="20201112 10:16:17.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.082" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 141173475, 'wakeups': [141183502, 141193500, 141203500, 141213501, 141...</msg>
<status status="PASS" starttime="20201112 10:16:17.079" endtime="20201112 10:16:17.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.085" endtime="20201112 10:16:17.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.961" endtime="20201112 10:16:17.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.959" endtime="20201112 10:16:17.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.095" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 141173475, 'wakeups': [141183502, 141193500, 141203500, 141213501, 141223501, 141233501, 141243501, 141253501, 141263501, 141273501, 141283501...</msg>
<status status="PASS" starttime="20201112 10:16:17.091" endtime="20201112 10:16:17.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.104" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:17.102" endtime="20201112 10:16:17.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.108" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:17.106" endtime="20201112 10:16:17.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.097" endtime="20201112 10:16:17.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.118" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:17.116" endtime="20201112 10:16:17.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.122" level="INFO">VALUE: 141173475</msg>
<status status="PASS" starttime="20201112 10:16:17.120" endtime="20201112 10:16:17.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.111" endtime="20201112 10:16:17.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.132" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:17.130" endtime="20201112 10:16:17.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.137" level="INFO">VALUE: [141183502, 141193500, 141203500, 141213501, 141223501, 141233501, 141243501, 141253501, 141263501, 141273501, 141283501, 141293501, 141303501, 141313501, 141323501, 141333501, 141343501, 141353501, 141363501, 141373501, 141383501, 141393501, 141403501, 141413501, 141423501, 141433501, 141443501, 141453501, 141463501, 141473501, 141483501, 141493501, 141503501, 141513501, 141523501, 141533501, 141543501, 141553501, 141563501, 141573501, 141583501, 141593501, 141603501, 141613501, 141623501, 141633501, 141643501, 141653501, 141663501, 141673501, 141683501, 141693501, 141703501, 141713501, 141723501, 141733501, 141743501, 141753501, 141763501, 141773501, 141783501, 141793501, 141803501, 141813501, 141823501, 141833501, 141843501, 141853501, 141863501, 141873501, 141883501, 141893501, 141903501, 141913501, 141923501, 141933501, 141943501, 141953501, 141963501, 141973501, 141983501, 141993501, 142003501, 142013501, 142023501, 142033501, 142043501, 142053501, 142063501, 142073501, 142083501, 142093501, 142103501, 142113501, 142123501, 142133501, 142143501, 142153501, 142163501, 142173501]</msg>
<status status="PASS" starttime="20201112 10:16:17.134" endtime="20201112 10:16:17.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.125" endtime="20201112 10:16:17.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.157" endtime="20201112 10:16:17.452"></status>
</kw>
<msg timestamp="20201112 10:16:17.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018842792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028870917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.149" endtime="20201112 10:16:17.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018842792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028870917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.455" endtime="20201112 10:16:17.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.463" endtime="20201112 10:16:17.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.143" endtime="20201112 10:16:17.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.140" endtime="20201112 10:16:17.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.489" level="INFO">${RESULT} = {'source_diff': [0, 0.010028124999999999, 0.009998597000000001, 0.010001069000000001, 0.010001666999999999, 0.010000778000000002, 0.010000722000000004, 0.010000791999999994, 0.010000639000000006, 0.01...</msg>
<status status="PASS" starttime="20201112 10:16:17.466" endtime="20201112 10:16:17.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.493" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:17.492" endtime="20201112 10:16:17.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.495" level="INFO">VALUE: 0.018842792</msg>
<status status="PASS" starttime="20201112 10:16:17.494" endtime="20201112 10:16:17.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.490" endtime="20201112 10:16:17.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.500" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:17.499" endtime="20201112 10:16:17.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.502" level="INFO">VALUE: [0.028870917, 0.038869514, 0.048870583, 0.05887225, 0.068873028, 0.07887375, 0.088874542, 0.098875181, 0.108875972, 0.118876694, 0.128877556, 0.138878111, 0.148878917, 0.158879653, 0.168880472, 0.178881069, 0.188881861, 0.198882597, 0.208883403, 0.218884, 0.228884806, 0.238885542, 0.248886333, 0.258886944, 0.26888775, 0.278888486, 0.288889278, 0.298889917, 0.308890736, 0.318891431, 0.328892236, 0.338892847, 0.348893653, 0.358894403, 0.368895181, 0.378895819, 0.388896597, 0.398897375, 0.408898139, 0.418898792, 0.428899528, 0.43890025, 0.448901111, 0.458901653, 0.468902444, 0.478903181, 0.488903972, 0.498904597, 0.508905375, 0.518906097, 0.528906931, 0.5389075, 0.548908306, 0.558909097, 0.568909875, 0.578910444, 0.588911222, 0.598911944, 0.608912736, 0.618913347, 0.628914181, 0.638914875, 0.648915667, 0.658916292, 0.668917083, 0.678917806, 0.688918597, 0.698919236, 0.708920014, 0.718920736, 0.728921528, 0.738922125, 0.748922931, 0.758923667, 0.768924444, 0.778925056, 0.788925861, 0.798926583, 0.808927375, 0.818927986, 0.828928792, 0.838929528, 0.848930306, 0.858930931, 0.86893175, 0.878932444, 0.88893325, 0.898933875, 0.908934681, 0.918935403, 0.928936167, 0.938936792, 0.948937611, 0.958938306, 0.968939097, 0.978939708, 0.988940528, 0.998941236, 1.008942042, 1.018942639] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:17.502" endtime="20201112 10:16:17.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.497" endtime="20201112 10:16:17.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.506" endtime="20201112 10:16:17.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:17.509" endtime="20201112 10:16:17.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.508" endtime="20201112 10:16:17.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.504" endtime="20201112 10:16:17.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.958" endtime="20201112 10:16:17.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.805" endtime="20201112 10:16:17.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.804" endtime="20201112 10:16:17.530"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:17.533" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.542" endtime="20201112 10:16:19.652"></status>
</kw>
<msg timestamp="20201112 10:16:19.653" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 143750457, 'wakeups': [143760490, 143770489, 143780488, 143790488, 143...</msg>
<status status="PASS" starttime="20201112 10:16:17.541" endtime="20201112 10:16:19.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.660" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 143750457, 'wakeups': [143760490, 143770489, 143780488, 143790488, 143...</msg>
<status status="PASS" starttime="20201112 10:16:19.656" endtime="20201112 10:16:19.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.663" endtime="20201112 10:16:19.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.536" endtime="20201112 10:16:19.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.535" endtime="20201112 10:16:19.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:19.673" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 143750457, 'wakeups': [143760490, 143770489, 143780488, 143790488, 143800488, 143810488, 143820488, 143830488, 143840488, 143850488, 143860488...</msg>
<status status="PASS" starttime="20201112 10:16:19.669" endtime="20201112 10:16:19.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.682" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:19.680" endtime="20201112 10:16:19.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.686" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:19.684" endtime="20201112 10:16:19.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.675" endtime="20201112 10:16:19.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.696" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:19.694" endtime="20201112 10:16:19.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.700" level="INFO">VALUE: 143750457</msg>
<status status="PASS" starttime="20201112 10:16:19.698" endtime="20201112 10:16:19.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.689" endtime="20201112 10:16:19.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.706" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:19.705" endtime="20201112 10:16:19.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.708" level="INFO">VALUE: [143760490, 143770489, 143780488, 143790488, 143800488, 143810488, 143820488, 143830488, 143840488, 143850488, 143860488, 143870488, 143880488, 143890488, 143900488, 143910488, 143920488, 143930488, 143940488, 143950488, 143960488, 143970488, 143980488, 143990488, 144000488, 144010488, 144020488, 144030488, 144040488, 144050488, 144060488, 144070488, 144080488, 144090488, 144100488, 144110488, 144120488, 144130488, 144140488, 144150488, 144160488, 144170488, 144180488, 144190488, 144200488, 144210488, 144220488, 144230488, 144240488, 144250488, 144260488, 144270488, 144280488, 144290488, 144300488, 144310488, 144320488, 144330488, 144340488, 144350488, 144360488, 144370488, 144380488, 144390488, 144400488, 144410488, 144420488, 144430488, 144440488, 144450488, 144460488, 144470488, 144480488, 144490488, 144500488, 144510488, 144520488, 144530488, 144540488, 144550488, 144560488, 144570488, 144580488, 144590488, 144600488, 144610488, 144620488, 144630488, 144640488, 144650488, 144660488, 144670488, 144680488, 144690488, 144700488, 144710488, 144720488, 144730488, 144740488, 144750488]</msg>
<status status="PASS" starttime="20201112 10:16:19.707" endtime="20201112 10:16:19.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.702" endtime="20201112 10:16:19.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.715" endtime="20201112 10:16:20.007"></status>
</kw>
<msg timestamp="20201112 10:16:20.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023334542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033369, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:16:19.713" endtime="20201112 10:16:20.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023334542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033369, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:16:20.010" endtime="20201112 10:16:20.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.018" endtime="20201112 10:16:20.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.711" endtime="20201112 10:16:20.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.709" endtime="20201112 10:16:20.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:20.045" level="INFO">${RESULT} = {'source_diff': [0, 0.010034458000000003, 0.009999485999999995, 0.009999792, 0.010000638999999999, 0.010000805000000001, 0.010000722000000004, 0.010000806000000001, 0.010000597, 0.010000806000000001, ...</msg>
<status status="PASS" starttime="20201112 10:16:20.021" endtime="20201112 10:16:20.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.050" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:20.049" endtime="20201112 10:16:20.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.051" level="INFO">VALUE: 0.023334542</msg>
<status status="PASS" starttime="20201112 10:16:20.051" endtime="20201112 10:16:20.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.046" endtime="20201112 10:16:20.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.057" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:20.056" endtime="20201112 10:16:20.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.059" level="INFO">VALUE: [0.033369, 0.043368486, 0.053368278, 0.063368917, 0.073369722, 0.083370444, 0.09337125, 0.103371847, 0.113372653, 0.123373389, 0.133374181, 0.143374819, 0.153375611, 0.163376333, 0.173377125, 0.183377764, 0.193378556, 0.203379292, 0.213380083, 0.223380694, 0.2333815, 0.243382222, 0.253383014, 0.263383694, 0.273384458, 0.283385194, 0.293386, 0.303386611, 0.313387417, 0.323388181, 0.333388931, 0.343389542, 0.353390347, 0.363391069, 0.373391875, 0.383392472, 0.393393292, 0.403394014, 0.413394819, 0.423395431, 0.433396236, 0.443396972, 0.453397764, 0.463398389, 0.473399181, 0.483399903, 0.493400694, 0.503401306, 0.513402153, 0.523402833, 0.533403681, 0.543404222, 0.553405042, 0.563405736, 0.573406556, 0.583407139, 0.593407944, 0.603408667, 0.613409486, 0.623410069, 0.633410861, 0.643411611, 0.653412375, 0.663413, 0.673413792, 0.683414556, 0.693415333, 0.703415917, 0.713416708, 0.723417458, 0.733418222, 0.743418861, 0.753419639, 0.763420375, 0.773421153, 0.783421764, 0.793422569, 0.803423292, 0.813424097, 0.823424708, 0.8334255, 0.843426222, 0.853427014, 0.863427639, 0.873428431, 0.883429181, 0.893429958, 0.903430569, 0.913431347, 0.923432097, 0.933432861, 0.943433486, 0.953434292, 0.963435, 0.973435806, 0.983436417, 0.993437208, 1.003437931, 1.013438722, 1.023439361] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:20.058" endtime="20201112 10:16:20.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.053" endtime="20201112 10:16:20.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.062" endtime="20201112 10:16:20.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:20.065" endtime="20201112 10:16:20.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.064" endtime="20201112 10:16:20.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.060" endtime="20201112 10:16:20.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.533" endtime="20201112 10:16:20.086"></status>
</kw>
<msg timestamp="20201112 10:16:20.086" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.094" endtime="20201112 10:16:22.204"></status>
</kw>
<msg timestamp="20201112 10:16:22.206" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 146302305, 'wakeups': [146312338, 146322337, 146332336, 146342336, 146...</msg>
<status status="PASS" starttime="20201112 10:16:20.093" endtime="20201112 10:16:22.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.211" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 146302305, 'wakeups': [146312338, 146322337, 146332336, 146342336, 146...</msg>
<status status="PASS" starttime="20201112 10:16:22.208" endtime="20201112 10:16:22.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.214" endtime="20201112 10:16:22.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.090" endtime="20201112 10:16:22.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.088" endtime="20201112 10:16:22.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:22.224" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 146302305, 'wakeups': [146312338, 146322337, 146332336, 146342336, 146352336, 146362336, 146372336, 146382336, 146392336, 146402336, 146412336...</msg>
<status status="PASS" starttime="20201112 10:16:22.220" endtime="20201112 10:16:22.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.233" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:22.231" endtime="20201112 10:16:22.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.244" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:22.241" endtime="20201112 10:16:22.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.226" endtime="20201112 10:16:22.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.254" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:22.252" endtime="20201112 10:16:22.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.260" level="INFO">VALUE: 146302305</msg>
<status status="PASS" starttime="20201112 10:16:22.258" endtime="20201112 10:16:22.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.247" endtime="20201112 10:16:22.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.265" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:22.264" endtime="20201112 10:16:22.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.267" level="INFO">VALUE: [146312338, 146322337, 146332336, 146342336, 146352336, 146362336, 146372336, 146382336, 146392336, 146402336, 146412336, 146422336, 146432336, 146442336, 146452336, 146462336, 146472336, 146482336, 146492336, 146502336, 146512336, 146522336, 146532336, 146542336, 146552336, 146562336, 146572336, 146582336, 146592336, 146602336, 146612336, 146622336, 146632336, 146642336, 146652336, 146662336, 146672336, 146682336, 146692336, 146702336, 146712336, 146722336, 146732336, 146742336, 146752336, 146762336, 146772336, 146782336, 146792336, 146802336, 146812336, 146822336, 146832336, 146842336, 146852336, 146862336, 146872336, 146882336, 146892336, 146902336, 146912336, 146922336, 146932336, 146942336, 146952336, 146962336, 146972336, 146982336, 146992336, 147002336, 147012336, 147022336, 147032336, 147042336, 147052336, 147062336, 147072336, 147082336, 147092336, 147102336, 147112336, 147122336, 147132336, 147142336, 147152336, 147162336, 147172336, 147182336, 147192336, 147202336, 147212336, 147222336, 147232336, 147242336, 147252336, 147262336, 147272336, 147282336, 147292336, 147302336]</msg>
<status status="PASS" starttime="20201112 10:16:22.266" endtime="20201112 10:16:22.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.262" endtime="20201112 10:16:22.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.275" endtime="20201112 10:16:22.566"></status>
</kw>
<msg timestamp="20201112 10:16:22.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018897347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028931819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.273" endtime="20201112 10:16:22.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018897347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028931819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.570" endtime="20201112 10:16:22.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.577" endtime="20201112 10:16:22.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.270" endtime="20201112 10:16:22.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.269" endtime="20201112 10:16:22.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:22.604" level="INFO">${RESULT} = {'source_diff': [0, 0.010034472000000003, 0.009999486999999998, 0.009999777000000001, 0.010000652999999998, 0.010000792000000008, 0.01000072199999999, 0.010000792000000008, 0.010000638999999992, 0.010...</msg>
<status status="PASS" starttime="20201112 10:16:22.581" endtime="20201112 10:16:22.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.608" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:22.607" endtime="20201112 10:16:22.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.610" level="INFO">VALUE: 0.018897347</msg>
<status status="PASS" starttime="20201112 10:16:22.609" endtime="20201112 10:16:22.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.604" endtime="20201112 10:16:22.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.615" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:22.614" endtime="20201112 10:16:22.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.618" level="INFO">VALUE: [0.028931819, 0.038931306, 0.048931083, 0.058931736, 0.068932528, 0.07893325, 0.088934042, 0.098934681, 0.1089355, 0.118936194, 0.128937, 0.138937611, 0.148938403, 0.158939139, 0.168939972, 0.178940569, 0.188941375, 0.198942083, 0.208942875, 0.218943514, 0.228944347, 0.238945028, 0.248945819, 0.258946444, 0.268947264, 0.278947972, 0.288948778, 0.298949431, 0.308950194, 0.318950931, 0.328951722, 0.338952361, 0.348953139, 0.358953875, 0.368954681, 0.378955264, 0.388956069, 0.398956806, 0.408957625, 0.418958194, 0.428959028, 0.438959708, 0.448960514, 0.458961167, 0.468961917, 0.478962639, 0.488963431, 0.498964028, 0.508964833, 0.518965556, 0.528966347, 0.538966958, 0.548967764, 0.558968472, 0.568969292, 0.578969875, 0.588970681, 0.598971444, 0.608972208, 0.618972819, 0.628973597, 0.638974333, 0.648975111, 0.658975736, 0.668976528, 0.678977264, 0.688978056, 0.698978653, 0.708979458, 0.718980194, 0.728980972, 0.738981583, 0.748982375, 0.758983097, 0.768983944, 0.7789845, 0.788985333, 0.798986042, 0.808986819, 0.818987431, 0.82898825, 0.838988958, 0.848989819, 0.858990361, 0.868991181, 0.878991875, 0.888992681, 0.898993292, 0.908994083, 0.918994819, 0.928995625, 0.938996292, 0.948997014, 0.95899775, 0.968998528, 0.978999139, 0.988999958, 0.999000681, 1.009001458, 1.019002069] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:22.617" endtime="20201112 10:16:22.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.611" endtime="20201112 10:16:22.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.622" endtime="20201112 10:16:22.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:22.625" endtime="20201112 10:16:22.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.624" endtime="20201112 10:16:22.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.620" endtime="20201112 10:16:22.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.087" endtime="20201112 10:16:22.646"></status>
</kw>
<msg timestamp="20201112 10:16:22.646" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.654" endtime="20201112 10:16:24.764"></status>
</kw>
<msg timestamp="20201112 10:16:24.765" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 148862161, 'wakeups': [148872194, 148882193, 148892192, 148902192, 148...</msg>
<status status="PASS" starttime="20201112 10:16:22.652" endtime="20201112 10:16:24.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.771" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 148862161, 'wakeups': [148872194, 148882193, 148892192, 148902192, 148...</msg>
<status status="PASS" starttime="20201112 10:16:24.767" endtime="20201112 10:16:24.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.774" endtime="20201112 10:16:24.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.650" endtime="20201112 10:16:24.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.648" endtime="20201112 10:16:24.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:24.785" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 148862161, 'wakeups': [148872194, 148882193, 148892192, 148902192, 148912192, 148922192, 148932192, 148942192, 148952192, 148962192, 148972192...</msg>
<status status="PASS" starttime="20201112 10:16:24.781" endtime="20201112 10:16:24.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.794" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:24.792" endtime="20201112 10:16:24.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.798" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:24.796" endtime="20201112 10:16:24.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.787" endtime="20201112 10:16:24.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.808" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:24.806" endtime="20201112 10:16:24.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.813" level="INFO">VALUE: 148862161</msg>
<status status="PASS" starttime="20201112 10:16:24.811" endtime="20201112 10:16:24.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.801" endtime="20201112 10:16:24.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.823" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:24.821" endtime="20201112 10:16:24.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.826" level="INFO">VALUE: [148872194, 148882193, 148892192, 148902192, 148912192, 148922192, 148932192, 148942192, 148952192, 148962192, 148972192, 148982192, 148992192, 149002192, 149012192, 149022192, 149032192, 149042192, 149052192, 149062192, 149072192, 149082192, 149092192, 149102192, 149112192, 149122192, 149132192, 149142192, 149152192, 149162192, 149172192, 149182192, 149192192, 149202192, 149212192, 149222192, 149232192, 149242192, 149252192, 149262192, 149272192, 149282192, 149292192, 149302192, 149312192, 149322192, 149332192, 149342192, 149352192, 149362192, 149372192, 149382192, 149392192, 149402192, 149412192, 149422192, 149432192, 149442192, 149452192, 149462192, 149472192, 149482192, 149492192, 149502192, 149512192, 149522192, 149532192, 149542192, 149552192, 149562192, 149572192, 149582192, 149592192, 149602192, 149612192, 149622192, 149632192, 149642192, 149652192, 149662192, 149672192, 149682192, 149692192, 149702192, 149712192, 149722192, 149732192, 149742192, 149752192, 149762192, 149772192, 149782192, 149792192, 149802192, 149812192, 149822192, 149832192, 149842192, 149852192, 149862192]</msg>
<status status="PASS" starttime="20201112 10:16:24.825" endtime="20201112 10:16:24.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.816" endtime="20201112 10:16:24.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.833" endtime="20201112 10:16:25.127"></status>
</kw>
<msg timestamp="20201112 10:16:25.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018897972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028932431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:24.832" endtime="20201112 10:16:25.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018897972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028932431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:25.131" endtime="20201112 10:16:25.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.138" endtime="20201112 10:16:25.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.829" endtime="20201112 10:16:25.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.828" endtime="20201112 10:16:25.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:25.164" level="INFO">${RESULT} = {'source_diff': [0, 0.010034459000000003, 0.009999486000000002, 0.009999790999999994, 0.010000639000000006, 0.010000805999999994, 0.010000735999999996, 0.010000778000000002, 0.010000611000000006, 0.01...</msg>
<status status="PASS" starttime="20201112 10:16:25.142" endtime="20201112 10:16:25.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.169" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:25.168" endtime="20201112 10:16:25.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.171" level="INFO">VALUE: 0.018897972</msg>
<status status="PASS" starttime="20201112 10:16:25.170" endtime="20201112 10:16:25.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.165" endtime="20201112 10:16:25.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.176" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:25.175" endtime="20201112 10:16:25.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.178" level="INFO">VALUE: [0.028932431, 0.038931917, 0.048931708, 0.058932347, 0.068933153, 0.078933889, 0.088934667, 0.098935278, 0.108936097, 0.118936847, 0.128937625, 0.13893825, 0.148939042, 0.158939764, 0.168940556, 0.178941181, 0.188941986, 0.198942708, 0.208943514, 0.218944153, 0.228944931, 0.238945667, 0.248946458, 0.258947083, 0.268947903, 0.278948611, 0.288949431, 0.298950014, 0.308950819, 0.318951542, 0.328952333, 0.338952944, 0.348953736, 0.358954458, 0.36895525, 0.378955875, 0.388956667, 0.398957375, 0.408958167, 0.418958806, 0.428959583, 0.438960306, 0.448961153, 0.458961722, 0.468962542, 0.478963222, 0.488964056, 0.498964625, 0.508965431, 0.518966153, 0.528966958, 0.538967556, 0.548968361, 0.558969083, 0.568969861, 0.578970472, 0.588971278, 0.598971986, 0.608972833, 0.618973403, 0.628974236, 0.638974917, 0.648975722, 0.658976361, 0.668977125, 0.678977847, 0.688978653, 0.69897925, 0.708980042, 0.718980778, 0.728981556, 0.738982181, 0.748982986, 0.758983708, 0.768984486, 0.778985097, 0.788985903, 0.798986639, 0.808987444, 0.818988042, 0.828988833, 0.838989556, 0.848990375, 0.858990944, 0.86899175, 0.878992486, 0.888993264, 0.898993889, 0.908994667, 0.918995403, 0.928996194, 0.938996819, 0.948997597, 0.958998319, 0.968999125, 0.978999722, 0.989000528, 0.99900125, 1.009002042, 1.019002681] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:25.177" endtime="20201112 10:16:25.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.172" endtime="20201112 10:16:25.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.181" endtime="20201112 10:16:25.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:25.185" endtime="20201112 10:16:25.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.183" endtime="20201112 10:16:25.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.180" endtime="20201112 10:16:25.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.647" endtime="20201112 10:16:25.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.531" endtime="20201112 10:16:25.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.530" endtime="20201112 10:16:25.206"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:25.208" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.218" endtime="20201112 10:16:27.328"></status>
</kw>
<msg timestamp="20201112 10:16:27.329" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 151425761, 'wakeups': [151435800, 151445799, 151455799, 151465799, 151...</msg>
<status status="PASS" starttime="20201112 10:16:25.216" endtime="20201112 10:16:27.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.335" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 151425761, 'wakeups': [151435800, 151445799, 151455799, 151465799, 151...</msg>
<status status="PASS" starttime="20201112 10:16:27.331" endtime="20201112 10:16:27.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.337" endtime="20201112 10:16:27.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.212" endtime="20201112 10:16:27.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.210" endtime="20201112 10:16:27.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.348" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 151425761, 'wakeups': [151435800, 151445799, 151455799, 151465799, 151475799, 151485799, 151495799, 151505799, 151515799, 151525799, 151535799...</msg>
<status status="PASS" starttime="20201112 10:16:27.344" endtime="20201112 10:16:27.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.356" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:27.354" endtime="20201112 10:16:27.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.361" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:27.359" endtime="20201112 10:16:27.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.350" endtime="20201112 10:16:27.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.371" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:27.369" endtime="20201112 10:16:27.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.375" level="INFO">VALUE: 151425761</msg>
<status status="PASS" starttime="20201112 10:16:27.373" endtime="20201112 10:16:27.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.364" endtime="20201112 10:16:27.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.385" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:27.383" endtime="20201112 10:16:27.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.389" level="INFO">VALUE: [151435800, 151445799, 151455799, 151465799, 151475799, 151485799, 151495799, 151505799, 151515799, 151525799, 151535799, 151545799, 151555799, 151565799, 151575799, 151585799, 151595799, 151605799, 151615799, 151625799, 151635799, 151645799, 151655799, 151665799, 151675799, 151685799, 151695799, 151705799, 151715799, 151725799, 151735799, 151745799, 151755799, 151765799, 151775799, 151785799, 151795799, 151805799, 151815799, 151825799, 151835799, 151845799, 151855799, 151865799, 151875799, 151885799, 151895799, 151905799, 151915799, 151925799, 151935799, 151945799, 151955799, 151965799, 151975799, 151985799, 151995799, 152005799, 152015799, 152025799, 152035799, 152045799, 152055799, 152065799, 152075799, 152085799, 152095799, 152105799, 152115799, 152125799, 152135799, 152145799, 152155799, 152165799, 152175799, 152185799, 152195799, 152205799, 152215799, 152225799, 152235799, 152245799, 152255799, 152265799, 152275799, 152285799, 152295799, 152305799, 152315799, 152325799, 152335799, 152345799, 152355799, 152365799, 152375799, 152385799, 152395799, 152405799, 152415799, 152425799]</msg>
<status status="PASS" starttime="20201112 10:16:27.387" endtime="20201112 10:16:27.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.378" endtime="20201112 10:16:27.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.405" endtime="20201112 10:16:27.700"></status>
</kw>
<msg timestamp="20201112 10:16:27.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032988319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.401" endtime="20201112 10:16:27.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032988319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.704" endtime="20201112 10:16:27.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.712" endtime="20201112 10:16:27.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.396" endtime="20201112 10:16:27.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.392" endtime="20201112 10:16:27.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.739" level="INFO">${RESULT} = {'source_diff': [0, 0.010040402, 0.009999624999999998, 0.010000556, 0.010000860999999993, 0.010000792000000008, 0.010000569, 0.010000791999999994, 0.010000778000000002, 0.010000805000000001, 0.0100005...</msg>
<status status="PASS" starttime="20201112 10:16:27.715" endtime="20201112 10:16:27.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.743" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:27.742" endtime="20201112 10:16:27.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.745" level="INFO">VALUE: 0.022947917</msg>
<status status="PASS" starttime="20201112 10:16:27.744" endtime="20201112 10:16:27.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.740" endtime="20201112 10:16:27.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.751" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:27.750" endtime="20201112 10:16:27.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.753" level="INFO">VALUE: [0.032988319, 0.042987944, 0.0529885, 0.062989361, 0.072990153, 0.082990722, 0.092991514, 0.102992292, 0.112993097, 0.122993639, 0.132994403, 0.142995236, 0.152996056, 0.162996556, 0.172997347, 0.182998181, 0.192999, 0.202999514, 0.213000306, 0.223001181, 0.233001944, 0.243002458, 0.253003306, 0.263004097, 0.273004889, 0.283005403, 0.293006222, 0.303007042, 0.313007819, 0.323008403, 0.333009139, 0.343009958, 0.353010778, 0.363011319, 0.373012056, 0.383012889, 0.393013681, 0.403014181, 0.413015, 0.423015819, 0.433016597, 0.443017167, 0.453017917, 0.463018722, 0.473019528, 0.483020056, 0.493020833, 0.503021681, 0.513022472, 0.523022958, 0.533023736, 0.543024569, 0.553025375, 0.563025889, 0.573026653, 0.583027486, 0.593028292, 0.603028792, 0.613029583, 0.623030431, 0.633031208, 0.643031722, 0.653032514, 0.663033347, 0.673034153, 0.683034667, 0.693035444, 0.703036264, 0.713037069, 0.723037597, 0.733038361, 0.743039264, 0.753039986, 0.763040486, 0.773041292, 0.783042111, 0.793043, 0.803043431, 0.813044208, 0.823045042, 0.833045889, 0.843046361, 0.853047139, 0.863047986, 0.873048819, 0.883049278, 0.893050083, 0.903050889, 0.913051722, 0.923052208, 0.933052986, 0.943053875, 0.953054625, 0.963055125, 0.973055917, 0.98305675, 0.993057569, 1.003058069, 1.013058917, 1.023059681] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:27.752" endtime="20201112 10:16:27.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.747" endtime="20201112 10:16:27.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.756" endtime="20201112 10:16:27.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:27.759" endtime="20201112 10:16:27.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.758" endtime="20201112 10:16:27.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.754" endtime="20201112 10:16:27.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.209" endtime="20201112 10:16:27.780"></status>
</kw>
<msg timestamp="20201112 10:16:27.780" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.788" endtime="20201112 10:16:29.898"></status>
</kw>
<msg timestamp="20201112 10:16:29.899" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 153996242, 'wakeups': [154006281, 154016280, 154026280, 154036280, 154...</msg>
<status status="PASS" starttime="20201112 10:16:27.787" endtime="20201112 10:16:29.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.905" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 153996242, 'wakeups': [154006281, 154016280, 154026280, 154036280, 154...</msg>
<status status="PASS" starttime="20201112 10:16:29.902" endtime="20201112 10:16:29.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.908" endtime="20201112 10:16:29.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.784" endtime="20201112 10:16:29.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.782" endtime="20201112 10:16:29.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:29.920" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 153996242, 'wakeups': [154006281, 154016280, 154026280, 154036280, 154046280, 154056280, 154066280, 154076280, 154086280, 154096280, 154106280...</msg>
<status status="PASS" starttime="20201112 10:16:29.916" endtime="20201112 10:16:29.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.929" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:29.927" endtime="20201112 10:16:29.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.934" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:29.932" endtime="20201112 10:16:29.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.922" endtime="20201112 10:16:29.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.946" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:29.944" endtime="20201112 10:16:29.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.951" level="INFO">VALUE: 153996242</msg>
<status status="PASS" starttime="20201112 10:16:29.949" endtime="20201112 10:16:29.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.939" endtime="20201112 10:16:29.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.961" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:29.959" endtime="20201112 10:16:29.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.965" level="INFO">VALUE: [154006281, 154016280, 154026280, 154036280, 154046280, 154056280, 154066280, 154076280, 154086280, 154096280, 154106280, 154116280, 154126280, 154136280, 154146280, 154156280, 154166280, 154176280, 154186280, 154196280, 154206280, 154216280, 154226280, 154236280, 154246280, 154256280, 154266280, 154276280, 154286280, 154296280, 154306280, 154316280, 154326280, 154336280, 154346280, 154356280, 154366280, 154376280, 154386280, 154396280, 154406280, 154416280, 154426280, 154436280, 154446280, 154456280, 154466280, 154476280, 154486280, 154496280, 154506280, 154516280, 154526280, 154536280, 154546280, 154556280, 154566280, 154576280, 154586280, 154596280, 154606280, 154616280, 154626280, 154636280, 154646280, 154656280, 154666280, 154676280, 154686280, 154696280, 154706280, 154716280, 154726280, 154736280, 154746280, 154756280, 154766280, 154776280, 154786280, 154796280, 154806280, 154816280, 154826280, 154836280, 154846280, 154856280, 154866280, 154876280, 154886280, 154896280, 154906280, 154916280, 154926280, 154936280, 154946280, 154956280, 154966280, 154976280, 154986280, 154996280]</msg>
<status status="PASS" starttime="20201112 10:16:29.963" endtime="20201112 10:16:29.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.954" endtime="20201112 10:16:29.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.981" endtime="20201112 10:16:30.278"></status>
</kw>
<msg timestamp="20201112 10:16:30.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019107972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029148028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:29.977" endtime="20201112 10:16:30.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019107972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029148028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:30.281" endtime="20201112 10:16:30.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.289" endtime="20201112 10:16:30.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.972" endtime="20201112 10:16:30.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.968" endtime="20201112 10:16:30.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:30.315" level="INFO">${RESULT} = {'source_diff': [0, 0.010040055999999999, 0.009999583, 0.010000624999999999, 0.010000792000000001, 0.010000804999999995, 0.010000514000000002, 0.010000792000000008, 0.010000833, 0.010000806000000001, ...</msg>
<status status="PASS" starttime="20201112 10:16:30.292" endtime="20201112 10:16:30.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.321" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:30.319" endtime="20201112 10:16:30.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.323" level="INFO">VALUE: 0.019107972</msg>
<status status="PASS" starttime="20201112 10:16:30.322" endtime="20201112 10:16:30.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.316" endtime="20201112 10:16:30.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.328" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:30.327" endtime="20201112 10:16:30.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.330" level="INFO">VALUE: [0.029148028, 0.039147611, 0.049148236, 0.059149028, 0.069149833, 0.079150347, 0.089151139, 0.099151972, 0.109152778, 0.119153278, 0.129154111, 0.139154917, 0.149155722, 0.159156236, 0.169157042, 0.179157875, 0.189158653, 0.199159194, 0.209159972, 0.219160792, 0.229161681, 0.239162167, 0.249162917, 0.259163764, 0.269164569, 0.279165056, 0.289165861, 0.299166764, 0.3091675, 0.319168028, 0.329168806, 0.339169625, 0.349170431, 0.359170931, 0.369171708, 0.379172569, 0.389173333, 0.399173847, 0.409174625, 0.419175458, 0.429176264, 0.439176764, 0.449177556, 0.459178431, 0.469179181, 0.479179694, 0.489180472, 0.499181319, 0.509182097, 0.519182597, 0.529183403, 0.539184236, 0.549185014, 0.559185542, 0.569186306, 0.579187139, 0.589187944, 0.599188458, 0.609189236, 0.619190069, 0.629190875, 0.639191375, 0.649192181, 0.659192986, 0.669193778, 0.679194292, 0.689195083, 0.699195972, 0.709196708, 0.719197208, 0.729198014, 0.739198833, 0.749199639, 0.759200139, 0.769200931, 0.779201778, 0.789202556, 0.799203097, 0.809203847, 0.819204681, 0.829205486, 0.839206, 0.849206778, 0.859207611, 0.869208431, 0.879208931, 0.889209708, 0.899210528, 0.909211333, 0.919211847, 0.929212639, 0.939213458, 0.949214264, 0.959214764, 0.969215556, 0.979216389, 0.989217236, 0.999217681, 1.0092185, 1.019219306] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:30.329" endtime="20201112 10:16:30.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.324" endtime="20201112 10:16:30.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.333" endtime="20201112 10:16:30.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:30.337" endtime="20201112 10:16:30.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.335" endtime="20201112 10:16:30.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.332" endtime="20201112 10:16:30.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.781" endtime="20201112 10:16:30.358"></status>
</kw>
<msg timestamp="20201112 10:16:30.358" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.366" endtime="20201112 10:16:32.476"></status>
</kw>
<msg timestamp="20201112 10:16:32.477" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 156573969, 'wakeups': [156584008, 156594007, 156604007, 156614007, 156...</msg>
<status status="PASS" starttime="20201112 10:16:30.364" endtime="20201112 10:16:32.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.483" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 156573969, 'wakeups': [156584008, 156594007, 156604007, 156614007, 156...</msg>
<status status="PASS" starttime="20201112 10:16:32.479" endtime="20201112 10:16:32.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.485" endtime="20201112 10:16:32.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.362" endtime="20201112 10:16:32.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.360" endtime="20201112 10:16:32.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.496" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 156573969, 'wakeups': [156584008, 156594007, 156604007, 156614007, 156624007, 156634007, 156644007, 156654007, 156664007, 156674007, 156684007...</msg>
<status status="PASS" starttime="20201112 10:16:32.492" endtime="20201112 10:16:32.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.504" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:32.502" endtime="20201112 10:16:32.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.509" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:32.507" endtime="20201112 10:16:32.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.498" endtime="20201112 10:16:32.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.519" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:32.517" endtime="20201112 10:16:32.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.523" level="INFO">VALUE: 156573969</msg>
<status status="PASS" starttime="20201112 10:16:32.521" endtime="20201112 10:16:32.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.511" endtime="20201112 10:16:32.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.533" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:32.531" endtime="20201112 10:16:32.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.538" level="INFO">VALUE: [156584008, 156594007, 156604007, 156614007, 156624007, 156634007, 156644007, 156654007, 156664007, 156674007, 156684007, 156694007, 156704007, 156714007, 156724007, 156734007, 156744007, 156754007, 156764007, 156774007, 156784007, 156794007, 156804007, 156814007, 156824007, 156834007, 156844007, 156854007, 156864007, 156874007, 156884007, 156894007, 156904007, 156914007, 156924007, 156934007, 156944007, 156954007, 156964007, 156974007, 156984007, 156994007, 157004007, 157014007, 157024007, 157034007, 157044007, 157054007, 157064007, 157074007, 157084007, 157094007, 157104007, 157114007, 157124007, 157134007, 157144007, 157154007, 157164007, 157174007, 157184007, 157194007, 157204007, 157214007, 157224007, 157234007, 157244007, 157254007, 157264007, 157274007, 157284007, 157294007, 157304007, 157314007, 157324007, 157334007, 157344007, 157354007, 157364007, 157374007, 157384007, 157394007, 157404007, 157414007, 157424007, 157434007, 157444007, 157454007, 157464007, 157474007, 157484007, 157494007, 157504007, 157514007, 157524007, 157534007, 157544007, 157554007, 157564007, 157574007]</msg>
<status status="PASS" starttime="20201112 10:16:32.536" endtime="20201112 10:16:32.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.526" endtime="20201112 10:16:32.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.555" endtime="20201112 10:16:32.850"></status>
</kw>
<msg timestamp="20201112 10:16:32.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019034431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029074819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.552" endtime="20201112 10:16:32.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019034431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029074819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.854" endtime="20201112 10:16:32.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.862" endtime="20201112 10:16:32.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.545" endtime="20201112 10:16:32.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.541" endtime="20201112 10:16:32.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.888" level="INFO">${RESULT} = {'source_diff': [0, 0.010040387999999997, 0.009999625000000002, 0.010000556, 0.010000847, 0.010000791999999994, 0.010000542000000001, 0.010000777000000002, 0.010000888999999999, 0.010000735999999996, ...</msg>
<status status="PASS" starttime="20201112 10:16:32.865" endtime="20201112 10:16:32.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.892" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:32.891" endtime="20201112 10:16:32.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.894" level="INFO">VALUE: 0.019034431</msg>
<status status="PASS" starttime="20201112 10:16:32.893" endtime="20201112 10:16:32.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.889" endtime="20201112 10:16:32.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.899" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:32.898" endtime="20201112 10:16:32.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.901" level="INFO">VALUE: [0.029074819, 0.039074444, 0.049075, 0.059075847, 0.069076639, 0.079077181, 0.089077958, 0.099078847, 0.109079583, 0.119080097, 0.129080889, 0.139081722, 0.149082528, 0.159083028, 0.169083833, 0.179084667, 0.189085458, 0.199085986, 0.209086792, 0.219087611, 0.229088417, 0.239088917, 0.249089736, 0.259090556, 0.269091431, 0.279091861, 0.289092694, 0.299093514, 0.309094306, 0.319094819, 0.329095611, 0.339096444, 0.349097264, 0.35909775, 0.369098556, 0.379099375, 0.389100194, 0.399100681, 0.409101472, 0.419102347, 0.429103111, 0.439103611, 0.449104389, 0.459105208, 0.469106014, 0.479106514, 0.489107306, 0.499108139, 0.509108944, 0.519109431, 0.52911025, 0.539111056, 0.549111847, 0.559112361, 0.569113139, 0.579113972, 0.589114833, 0.599115278, 0.609116083, 0.619116903, 0.629117694, 0.639118194, 0.649118986, 0.659119819, 0.669120611, 0.679121125, 0.689121931, 0.69912275, 0.709123542, 0.719124083, 0.729124833, 0.739125667, 0.749126472, 0.759126958, 0.769127764, 0.779128583, 0.789129403, 0.799129903, 0.809130681, 0.819131514, 0.829132333, 0.839132819, 0.849133611, 0.859134444, 0.869135236, 0.879135736, 0.889136528, 0.899137375, 0.909138167, 0.919138667, 0.929139444, 0.939140306, 0.949141097, 0.959141583, 0.969142375, 0.979143222, 0.989144014, 0.999144514, 1.009145306, 1.019146153] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:32.900" endtime="20201112 10:16:32.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.896" endtime="20201112 10:16:32.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.905" endtime="20201112 10:16:32.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:32.912" endtime="20201112 10:16:32.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.911" endtime="20201112 10:16:32.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.903" endtime="20201112 10:16:32.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.358" endtime="20201112 10:16:32.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.207" endtime="20201112 10:16:32.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.206" endtime="20201112 10:16:32.934"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:32.936" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.945" endtime="20201112 10:16:35.056"></status>
</kw>
<msg timestamp="20201112 10:16:35.057" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 159153195, 'wakeups': [159163241, 159173241, 159183240, 159193240, 159...</msg>
<status status="PASS" starttime="20201112 10:16:32.943" endtime="20201112 10:16:35.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.063" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 159153195, 'wakeups': [159163241, 159173241, 159183240, 159193240, 159...</msg>
<status status="PASS" starttime="20201112 10:16:35.059" endtime="20201112 10:16:35.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.066" endtime="20201112 10:16:35.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.941" endtime="20201112 10:16:35.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.938" endtime="20201112 10:16:35.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:35.077" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 159153195, 'wakeups': [159163241, 159173241, 159183240, 159193240, 159203240, 159213240, 159223240, 159233240, 159243240, 159253240, 159263240...</msg>
<status status="PASS" starttime="20201112 10:16:35.073" endtime="20201112 10:16:35.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.085" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:35.083" endtime="20201112 10:16:35.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.089" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:35.088" endtime="20201112 10:16:35.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.079" endtime="20201112 10:16:35.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.100" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:35.098" endtime="20201112 10:16:35.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.104" level="INFO">VALUE: 159153195</msg>
<status status="PASS" starttime="20201112 10:16:35.102" endtime="20201112 10:16:35.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.092" endtime="20201112 10:16:35.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.114" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:35.112" endtime="20201112 10:16:35.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.118" level="INFO">VALUE: [159163241, 159173241, 159183240, 159193240, 159203240, 159213240, 159223240, 159233240, 159243240, 159253240, 159263240, 159273240, 159283240, 159293240, 159303240, 159313240, 159323240, 159333240, 159343240, 159353240, 159363240, 159373240, 159383240, 159393240, 159403240, 159413240, 159423240, 159433240, 159443240, 159453240, 159463240, 159473240, 159483240, 159493240, 159503240, 159513240, 159523240, 159533240, 159543240, 159553240, 159563240, 159573240, 159583240, 159593240, 159603240, 159613240, 159623240, 159633240, 159643240, 159653240, 159663240, 159673240, 159683240, 159693240, 159703240, 159713240, 159723240, 159733240, 159743240, 159753240, 159763240, 159773240, 159783240, 159793240, 159803240, 159813240, 159823240, 159833240, 159843240, 159853240, 159863240, 159873240, 159883240, 159893240, 159903240, 159913240, 159923240, 159933240, 159943240, 159953240, 159963240, 159973240, 159983240, 159993240, 160003240, 160013240, 160023240, 160033240, 160043240, 160053240, 160063240, 160073240, 160083240, 160093240, 160103240, 160113240, 160123240, 160133240, 160143240, 160153240]</msg>
<status status="PASS" starttime="20201112 10:16:35.116" endtime="20201112 10:16:35.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.107" endtime="20201112 10:16:35.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.130" endtime="20201112 10:16:35.423"></status>
</kw>
<msg timestamp="20201112 10:16:35.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032766222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:35.129" endtime="20201112 10:16:35.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032766222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:35.426" endtime="20201112 10:16:35.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.434" endtime="20201112 10:16:35.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.126" endtime="20201112 10:16:35.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.122" endtime="20201112 10:16:35.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:35.461" level="INFO">${RESULT} = {'source_diff': [0, 0.010047263999999997, 0.010000695000000004, 0.009999764000000001, 0.010000638, 0.010000791999999994, 0.010000806000000001, 0.010000861, 0.010000458000000004, 0.010000806000000001, ...</msg>
<status status="PASS" starttime="20201112 10:16:35.437" endtime="20201112 10:16:35.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.466" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:35.465" endtime="20201112 10:16:35.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.468" level="INFO">VALUE: 0.022718958</msg>
<status status="PASS" starttime="20201112 10:16:35.467" endtime="20201112 10:16:35.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.462" endtime="20201112 10:16:35.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.473" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:35.472" endtime="20201112 10:16:35.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.475" level="INFO">VALUE: [0.032766222, 0.042766917, 0.052766681, 0.062767319, 0.072768111, 0.082768917, 0.092769778, 0.102770236, 0.112771042, 0.122771667, 0.132772583, 0.142773208, 0.152774, 0.162774819, 0.172775625, 0.182776167, 0.192776958, 0.202777569, 0.212778486, 0.222779083, 0.232779917, 0.242780514, 0.252781514, 0.262782056, 0.272782847, 0.282783458, 0.292784458, 0.302785, 0.312785792, 0.322786389, 0.332787417, 0.342787944, 0.352788764, 0.362789347, 0.372790278, 0.382790903, 0.392791708, 0.402792569, 0.412793319, 0.422793833, 0.432794611, 0.442795222, 0.452796139, 0.46279675, 0.472797556, 0.482798139, 0.492799153, 0.502799667, 0.512800542, 0.522801069, 0.532802083, 0.542802597, 0.552803389, 0.562803986, 0.572805, 0.582805514, 0.592806319, 0.602806917, 0.612807833, 0.622808472, 0.63280925, 0.642810139, 0.652810847, 0.662811417, 0.672812167, 0.682812792, 0.692813708, 0.702814306, 0.712815097, 0.722815694, 0.732816722, 0.742817319, 0.752818028, 0.762818625, 0.772819639, 0.782820153, 0.792820958, 0.802821556, 0.812822569, 0.822823097, 0.832823889, 0.8428245, 0.852825403, 0.862826028, 0.872826833, 0.882827639, 0.892828431, 0.902828944, 0.91282975, 0.922830361, 0.932831278, 0.942831944, 0.952832681, 0.962833278, 0.972834306, 0.982834861, 0.992835611, 1.002836208, 1.012837236, 1.022837736] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:35.474" endtime="20201112 10:16:35.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.469" endtime="20201112 10:16:35.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.478" endtime="20201112 10:16:35.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:35.481" endtime="20201112 10:16:35.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.480" endtime="20201112 10:16:35.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.476" endtime="20201112 10:16:35.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.937" endtime="20201112 10:16:35.502"></status>
</kw>
<msg timestamp="20201112 10:16:35.502" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.510" endtime="20201112 10:16:37.621"></status>
</kw>
<msg timestamp="20201112 10:16:37.623" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 161718303, 'wakeups': [161728349, 161738349, 161748348, 161758348, 161...</msg>
<status status="PASS" starttime="20201112 10:16:35.509" endtime="20201112 10:16:37.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.629" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 161718303, 'wakeups': [161728349, 161738349, 161748348, 161758348, 161...</msg>
<status status="PASS" starttime="20201112 10:16:37.625" endtime="20201112 10:16:37.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.631" endtime="20201112 10:16:37.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.506" endtime="20201112 10:16:37.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.504" endtime="20201112 10:16:37.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:37.642" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 161718303, 'wakeups': [161728349, 161738349, 161748348, 161758348, 161768348, 161778348, 161788348, 161798348, 161808348, 161818348, 161828348...</msg>
<status status="PASS" starttime="20201112 10:16:37.638" endtime="20201112 10:16:37.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.652" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:37.650" endtime="20201112 10:16:37.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.656" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:37.654" endtime="20201112 10:16:37.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.644" endtime="20201112 10:16:37.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.666" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:37.664" endtime="20201112 10:16:37.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.671" level="INFO">VALUE: 161718303</msg>
<status status="PASS" starttime="20201112 10:16:37.669" endtime="20201112 10:16:37.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.659" endtime="20201112 10:16:37.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.680" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:37.678" endtime="20201112 10:16:37.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.685" level="INFO">VALUE: [161728349, 161738349, 161748348, 161758348, 161768348, 161778348, 161788348, 161798348, 161808348, 161818348, 161828348, 161838348, 161848348, 161858348, 161868348, 161878348, 161888348, 161898348, 161908348, 161918348, 161928348, 161938348, 161948348, 161958348, 161968348, 161978348, 161988348, 161998348, 162008348, 162018348, 162028348, 162038348, 162048348, 162058348, 162068348, 162078348, 162088348, 162098348, 162108348, 162118348, 162128348, 162138348, 162148348, 162158348, 162168348, 162178348, 162188348, 162198348, 162208348, 162218348, 162228348, 162238348, 162248348, 162258348, 162268348, 162278348, 162288348, 162298348, 162308348, 162318348, 162328348, 162338348, 162348348, 162358348, 162368348, 162378348, 162388348, 162398348, 162408348, 162418348, 162428348, 162438348, 162448348, 162458348, 162468348, 162478348, 162488348, 162498348, 162508348, 162518348, 162528348, 162538348, 162548348, 162558348, 162568348, 162578348, 162588348, 162598348, 162608348, 162618348, 162628348, 162638348, 162648348, 162658348, 162668348, 162678348, 162688348, 162698348, 162708348, 162718348]</msg>
<status status="PASS" starttime="20201112 10:16:37.683" endtime="20201112 10:16:37.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.673" endtime="20201112 10:16:37.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.696" endtime="20201112 10:16:37.987"></status>
</kw>
<msg timestamp="20201112 10:16:37.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018999097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029046361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:37.694" endtime="20201112 10:16:37.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018999097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029046361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:37.991" endtime="20201112 10:16:37.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.998" endtime="20201112 10:16:38.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.692" endtime="20201112 10:16:38.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.688" endtime="20201112 10:16:38.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:38.029" level="INFO">${RESULT} = {'source_diff': [0, 0.010047264, 0.010000750000000003, 0.009999707999999996, 0.010000624999999999, 0.010000806000000008, 0.010000861, 0.010000749999999989, 0.010000556000000008, 0.010000790999999995, ...</msg>
<status status="PASS" starttime="20201112 10:16:38.006" endtime="20201112 10:16:38.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.034" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:38.033" endtime="20201112 10:16:38.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.036" level="INFO">VALUE: 0.018999097</msg>
<status status="PASS" starttime="20201112 10:16:38.035" endtime="20201112 10:16:38.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.030" endtime="20201112 10:16:38.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.041" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:38.040" endtime="20201112 10:16:38.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.043" level="INFO">VALUE: [0.029046361, 0.039047111, 0.049046819, 0.059047444, 0.06904825, 0.079049111, 0.089049861, 0.099050417, 0.109051208, 0.119051806, 0.129052722, 0.139053361, 0.149054139, 0.159054958, 0.16905575, 0.179056292, 0.189057083, 0.199057708, 0.209058611, 0.219059236, 0.229060056, 0.239060639, 0.249061667, 0.259062194, 0.269062986, 0.279063583, 0.289064611, 0.299065125, 0.309065931, 0.319066542, 0.329067611, 0.339068083, 0.349068903, 0.359069514, 0.369070417, 0.379071042, 0.389071847, 0.399072653, 0.409073472, 0.419073986, 0.429074778, 0.439075389, 0.449076389, 0.459076931, 0.469077722, 0.479078319, 0.489079333, 0.499079847, 0.509080653, 0.51908125, 0.52908225, 0.539082764, 0.549083597, 0.559084236, 0.569085222, 0.579085694, 0.589086528, 0.599087097, 0.609088014, 0.619088639, 0.629089514, 0.639090236, 0.649091028, 0.659091556, 0.669092361, 0.679092958, 0.689093875, 0.699094472, 0.709095278, 0.719095889, 0.729096889, 0.739097417, 0.749098208, 0.759098806, 0.769099875, 0.779100333, 0.789101125, 0.799101736, 0.80910275, 0.819103264, 0.829104083, 0.839104653, 0.849105611, 0.859106194, 0.869107014, 0.879107819, 0.889108611, 0.899109153, 0.909109972, 0.919110556, 0.929111444, 0.939112056, 0.949112861, 0.959113458, 0.969114542, 0.979114986, 0.989115778, 0.999116389, 1.009117389, 1.019117917] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:38.042" endtime="20201112 10:16:38.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.037" endtime="20201112 10:16:38.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.046" endtime="20201112 10:16:38.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:38.050" endtime="20201112 10:16:38.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.048" endtime="20201112 10:16:38.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.045" endtime="20201112 10:16:38.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.503" endtime="20201112 10:16:38.070"></status>
</kw>
<msg timestamp="20201112 10:16:38.070" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.078" endtime="20201112 10:16:40.189"></status>
</kw>
<msg timestamp="20201112 10:16:40.190" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 164286409, 'wakeups': [164296456, 164306455, 164316454, 164326454, 164...</msg>
<status status="PASS" starttime="20201112 10:16:38.077" endtime="20201112 10:16:40.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.196" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 164286409, 'wakeups': [164296456, 164306455, 164316454, 164326454, 164...</msg>
<status status="PASS" starttime="20201112 10:16:40.192" endtime="20201112 10:16:40.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.198" endtime="20201112 10:16:40.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.074" endtime="20201112 10:16:40.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.072" endtime="20201112 10:16:40.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:40.210" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 164286409, 'wakeups': [164296456, 164306455, 164316454, 164326454, 164336454, 164346454, 164356454, 164366454, 164376454, 164386454, 164396454...</msg>
<status status="PASS" starttime="20201112 10:16:40.206" endtime="20201112 10:16:40.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.219" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:40.217" endtime="20201112 10:16:40.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.223" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:40.222" endtime="20201112 10:16:40.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.212" endtime="20201112 10:16:40.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.233" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:40.231" endtime="20201112 10:16:40.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.238" level="INFO">VALUE: 164286409</msg>
<status status="PASS" starttime="20201112 10:16:40.236" endtime="20201112 10:16:40.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.226" endtime="20201112 10:16:40.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.244" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:40.243" endtime="20201112 10:16:40.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.247" level="INFO">VALUE: [164296456, 164306455, 164316454, 164326454, 164336454, 164346454, 164356454, 164366454, 164376454, 164386454, 164396454, 164406454, 164416454, 164426454, 164436454, 164446454, 164456454, 164466454, 164476454, 164486454, 164496454, 164506454, 164516454, 164526454, 164536454, 164546454, 164556454, 164566454, 164576454, 164586454, 164596454, 164606454, 164616454, 164626454, 164636454, 164646454, 164656454, 164666454, 164676454, 164686454, 164696454, 164706454, 164716454, 164726454, 164736454, 164746454, 164756454, 164766454, 164776454, 164786454, 164796454, 164806454, 164816454, 164826454, 164836454, 164846454, 164856454, 164866454, 164876454, 164886454, 164896454, 164906454, 164916454, 164926454, 164936454, 164946454, 164956454, 164966454, 164976454, 164986454, 164996454, 165006454, 165016454, 165026454, 165036454, 165046454, 165056454, 165066454, 165076454, 165086454, 165096454, 165106454, 165116454, 165126454, 165136454, 165146454, 165156454, 165166454, 165176454, 165186454, 165196454, 165206454, 165216454, 165226454, 165236454, 165246454, 165256454, 165266454, 165276454, 165286454]</msg>
<status status="PASS" starttime="20201112 10:16:40.245" endtime="20201112 10:16:40.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.240" endtime="20201112 10:16:40.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.254" endtime="20201112 10:16:40.546"></status>
</kw>
<msg timestamp="20201112 10:16:40.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018949653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028997236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.253" endtime="20201112 10:16:40.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018949653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028997236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.550" endtime="20201112 10:16:40.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.557" endtime="20201112 10:16:40.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.250" endtime="20201112 10:16:40.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.249" endtime="20201112 10:16:40.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:40.584" level="INFO">${RESULT} = {'source_diff': [0, 0.010047582999999999, 0.009999681, 0.009999750000000002, 0.010000638999999999, 0.010000805000000001, 0.010000806000000001, 0.010000790999999995, 0.010000528000000009, 0.01000080600...</msg>
<status status="PASS" starttime="20201112 10:16:40.561" endtime="20201112 10:16:40.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.588" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:40.587" endtime="20201112 10:16:40.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.590" level="INFO">VALUE: 0.018949653</msg>
<status status="PASS" starttime="20201112 10:16:40.589" endtime="20201112 10:16:40.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.585" endtime="20201112 10:16:40.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.596" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:40.595" endtime="20201112 10:16:40.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.598" level="INFO">VALUE: [0.028997236, 0.038996917, 0.048996667, 0.058997306, 0.068998111, 0.078998917, 0.088999708, 0.099000236, 0.109001042, 0.119001653, 0.129002597, 0.139003181, 0.149004, 0.159004806, 0.169005597, 0.179006125, 0.189006931, 0.199007528, 0.209008458, 0.219009097, 0.229009903, 0.239010472, 0.249011486, 0.259012014, 0.269012806, 0.279013417, 0.289014417, 0.299014944, 0.30901575, 0.319016347, 0.329017347, 0.339017875, 0.349018681, 0.359019264, 0.369020181, 0.379020806, 0.389021597, 0.399022417, 0.409023222, 0.419023792, 0.429024528, 0.439025125, 0.449026056, 0.459026681, 0.469027514, 0.479028056, 0.489029097, 0.499029597, 0.509030403, 0.519031, 0.529032, 0.539032528, 0.549033347, 0.559033944, 0.569034944, 0.579035458, 0.589036264, 0.599036861, 0.609037806, 0.619038417, 0.629039194, 0.639040028, 0.649040833, 0.659041347, 0.669042167, 0.679042736, 0.689043653, 0.699044292, 0.709045069, 0.719045667, 0.729046681, 0.739047208, 0.749048014, 0.759048611, 0.769049611, 0.779050194, 0.789050958, 0.799051542, 0.809052597, 0.819053097, 0.829053958, 0.839054486, 0.849055431, 0.859056014, 0.869056833, 0.879057639, 0.889058444, 0.899058944, 0.90905975, 0.919060347, 0.929061278, 0.939061889, 0.949062736, 0.959063292, 0.969064319, 0.979064833, 0.989065625, 0.999066236, 1.009067292, 1.01906775] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:40.597" endtime="20201112 10:16:40.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.592" endtime="20201112 10:16:40.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.601" endtime="20201112 10:16:40.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:40.605" endtime="20201112 10:16:40.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.603" endtime="20201112 10:16:40.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.600" endtime="20201112 10:16:40.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.071" endtime="20201112 10:16:40.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.935" endtime="20201112 10:16:40.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.934" endtime="20201112 10:16:40.627"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:40.629" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.637" endtime="20201112 10:16:42.747"></status>
</kw>
<msg timestamp="20201112 10:16:42.749" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 166845130, 'wakeups': [166855184, 166865181, 166875182, 166885182, 166...</msg>
<status status="PASS" starttime="20201112 10:16:40.636" endtime="20201112 10:16:42.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.754" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 166845130, 'wakeups': [166855184, 166865181, 166875182, 166885182, 166...</msg>
<status status="PASS" starttime="20201112 10:16:42.751" endtime="20201112 10:16:42.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.757" endtime="20201112 10:16:42.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.633" endtime="20201112 10:16:42.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.631" endtime="20201112 10:16:42.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:42.767" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 166845130, 'wakeups': [166855184, 166865181, 166875182, 166885182, 166895182, 166905182, 166915182, 166925182, 166935182, 166945182, 166955182...</msg>
<status status="PASS" starttime="20201112 10:16:42.763" endtime="20201112 10:16:42.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.776" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:42.774" endtime="20201112 10:16:42.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.780" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:42.778" endtime="20201112 10:16:42.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.769" endtime="20201112 10:16:42.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.789" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:42.788" endtime="20201112 10:16:42.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.792" level="INFO">VALUE: 166845130</msg>
<status status="PASS" starttime="20201112 10:16:42.791" endtime="20201112 10:16:42.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.783" endtime="20201112 10:16:42.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.797" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:42.796" endtime="20201112 10:16:42.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.799" level="INFO">VALUE: [166855184, 166865181, 166875182, 166885182, 166895182, 166905182, 166915182, 166925182, 166935182, 166945182, 166955182, 166965182, 166975182, 166985182, 166995182, 167005182, 167015182, 167025182, 167035182, 167045182, 167055182, 167065182, 167075182, 167085182, 167095182, 167105182, 167115182, 167125182, 167135182, 167145182, 167155182, 167165182, 167175182, 167185182, 167195182, 167205182, 167215182, 167225182, 167235182, 167245182, 167255182, 167265182, 167275182, 167285182, 167295182, 167305182, 167315182, 167325182, 167335182, 167345182, 167355182, 167365182, 167375182, 167385182, 167395182, 167405182, 167415182, 167425182, 167435182, 167445182, 167455182, 167465182, 167475182, 167485182, 167495182, 167505182, 167515182, 167525182, 167535182, 167545182, 167555182, 167565182, 167575182, 167585182, 167595182, 167605182, 167615182, 167625182, 167635182, 167645182, 167655182, 167665182, 167675182, 167685182, 167695182, 167705182, 167715182, 167725182, 167735182, 167745182, 167755182, 167765182, 167775182, 167785182, 167795182, 167805182, 167815182, 167825182, 167835182, 167845182]</msg>
<status status="PASS" starttime="20201112 10:16:42.798" endtime="20201112 10:16:42.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.793" endtime="20201112 10:16:42.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.806" endtime="20201112 10:16:43.099"></status>
</kw>
<msg timestamp="20201112 10:16:43.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021599056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031654458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:42.805" endtime="20201112 10:16:43.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021599056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031654458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:43.103" endtime="20201112 10:16:43.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.111" endtime="20201112 10:16:43.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.802" endtime="20201112 10:16:43.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.800" endtime="20201112 10:16:43.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:43.137" level="INFO">${RESULT} = {'source_diff': [0, 0.010055402000000005, 0.009997430999999994, 0.010002069000000002, 0.010000652999999998, 0.010000806000000001, 0.010000902000000006, 0.010000624999999999, 0.010000624999999999, 0.01...</msg>
<status status="PASS" starttime="20201112 10:16:43.114" endtime="20201112 10:16:43.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.141" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:43.140" endtime="20201112 10:16:43.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.143" level="INFO">VALUE: 0.021599056</msg>
<status status="PASS" starttime="20201112 10:16:43.142" endtime="20201112 10:16:43.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.138" endtime="20201112 10:16:43.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.148" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:43.147" endtime="20201112 10:16:43.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.150" level="INFO">VALUE: [0.031654458, 0.041651889, 0.051653958, 0.061654611, 0.071655417, 0.081656319, 0.091656944, 0.101657569, 0.111658347, 0.121659083, 0.131659875, 0.141660486, 0.151661292, 0.161662208, 0.171662833, 0.181663458, 0.19166425, 0.201664986, 0.211665764, 0.221666389, 0.231667181, 0.241668125, 0.251668722, 0.261669347, 0.271670153, 0.281670875, 0.291671667, 0.301672306, 0.311673083, 0.321674, 0.331674611, 0.341675278, 0.351676042, 0.36167675, 0.371677569, 0.381678153, 0.391678931, 0.401679847, 0.411680458, 0.421681069, 0.431681875, 0.441682597, 0.451683375, 0.461684, 0.471684792, 0.481685694, 0.491686306, 0.501686917, 0.511687722, 0.521688431, 0.531689236, 0.541689833, 0.551690639, 0.561691542, 0.571692181, 0.581692764, 0.591693556, 0.601694278, 0.611695069, 0.621695681, 0.631696486, 0.641697389, 0.651698069, 0.661698625, 0.671699417, 0.681700153, 0.691700944, 0.701701569, 0.711702347, 0.72170325, 0.731703861, 0.741704472, 0.751705278, 0.761705986, 0.771706778, 0.781707389, 0.791708208, 0.801709111, 0.811709708, 0.821710319, 0.831711125, 0.841711861, 0.851712653, 0.861713292, 0.871714069, 0.881714986, 0.891715569, 0.901716181, 0.911716986, 0.921717708, 0.931718486, 0.941719111, 0.951719903, 0.961720819, 0.971721431, 0.981722056, 0.991722847, 1.001723556, 1.011724347, 1.021725014] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:43.149" endtime="20201112 10:16:43.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.144" endtime="20201112 10:16:43.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.158" endtime="20201112 10:16:43.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:43.162" endtime="20201112 10:16:43.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.160" endtime="20201112 10:16:43.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.152" endtime="20201112 10:16:43.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.630" endtime="20201112 10:16:43.182"></status>
</kw>
<msg timestamp="20201112 10:16:43.183" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.191" endtime="20201112 10:16:45.301"></status>
</kw>
<msg timestamp="20201112 10:16:45.302" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 169399483, 'wakeups': [169409537, 169419534, 169429535, 169439535, 169...</msg>
<status status="PASS" starttime="20201112 10:16:43.189" endtime="20201112 10:16:45.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.308" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 169399483, 'wakeups': [169409537, 169419534, 169429535, 169439535, 169...</msg>
<status status="PASS" starttime="20201112 10:16:45.305" endtime="20201112 10:16:45.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.310" endtime="20201112 10:16:45.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.187" endtime="20201112 10:16:45.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.185" endtime="20201112 10:16:45.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:45.322" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 169399483, 'wakeups': [169409537, 169419534, 169429535, 169439535, 169449535, 169459535, 169469535, 169479535, 169489535, 169499535, 169509535...</msg>
<status status="PASS" starttime="20201112 10:16:45.318" endtime="20201112 10:16:45.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.331" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:45.329" endtime="20201112 10:16:45.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.335" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:45.333" endtime="20201112 10:16:45.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.324" endtime="20201112 10:16:45.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.346" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:45.344" endtime="20201112 10:16:45.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.351" level="INFO">VALUE: 169399483</msg>
<status status="PASS" starttime="20201112 10:16:45.349" endtime="20201112 10:16:45.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.339" endtime="20201112 10:16:45.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.361" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:45.359" endtime="20201112 10:16:45.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.365" level="INFO">VALUE: [169409537, 169419534, 169429535, 169439535, 169449535, 169459535, 169469535, 169479535, 169489535, 169499535, 169509535, 169519535, 169529535, 169539535, 169549535, 169559535, 169569535, 169579535, 169589535, 169599535, 169609535, 169619535, 169629535, 169639535, 169649535, 169659535, 169669535, 169679535, 169689535, 169699535, 169709535, 169719535, 169729535, 169739535, 169749535, 169759535, 169769535, 169779535, 169789535, 169799535, 169809535, 169819535, 169829535, 169839535, 169849535, 169859535, 169869535, 169879535, 169889535, 169899535, 169909535, 169919535, 169929535, 169939535, 169949535, 169959535, 169969535, 169979535, 169989535, 169999535, 170009535, 170019535, 170029535, 170039535, 170049535, 170059535, 170069535, 170079535, 170089535, 170099535, 170109535, 170119535, 170129535, 170139535, 170149535, 170159535, 170169535, 170179535, 170189535, 170199535, 170209535, 170219535, 170229535, 170239535, 170249535, 170259535, 170269535, 170279535, 170289535, 170299535, 170309535, 170319535, 170329535, 170339535, 170349535, 170359535, 170369535, 170379535, 170389535, 170399535]</msg>
<status status="PASS" starttime="20201112 10:16:45.363" endtime="20201112 10:16:45.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.354" endtime="20201112 10:16:45.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.374" endtime="20201112 10:16:45.665"></status>
</kw>
<msg timestamp="20201112 10:16:45.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029813986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.372" endtime="20201112 10:16:45.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029813986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.669" endtime="20201112 10:16:45.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.676" endtime="20201112 10:16:45.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.369" endtime="20201112 10:16:45.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.367" endtime="20201112 10:16:45.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:45.704" level="INFO">${RESULT} = {'source_diff': [0, 0.010055722, 0.009997445, 0.010002054999999996, 0.010000653000000005, 0.010000805000000001, 0.010000902999999992, 0.010000611000000006, 0.010000652999999998, 0.010000763999999995, ...</msg>
<status status="PASS" starttime="20201112 10:16:45.680" endtime="20201112 10:16:45.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.708" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:45.707" endtime="20201112 10:16:45.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.710" level="INFO">VALUE: 0.019758264</msg>
<status status="PASS" starttime="20201112 10:16:45.709" endtime="20201112 10:16:45.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.705" endtime="20201112 10:16:45.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.716" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:45.715" endtime="20201112 10:16:45.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.718" level="INFO">VALUE: [0.029813986, 0.039811431, 0.049813486, 0.059814139, 0.069814944, 0.079815847, 0.089816458, 0.099817111, 0.109817875, 0.119818597, 0.129819389, 0.139820028, 0.149820819, 0.159821736, 0.169822347, 0.179822972, 0.189823764, 0.1998245, 0.209825278, 0.219825903, 0.229826722, 0.239827625, 0.249828236, 0.259828847, 0.269829681, 0.279830389, 0.289831181, 0.299831792, 0.309832597, 0.319833514, 0.329834194, 0.33983475, 0.349835556, 0.359836278, 0.369837139, 0.379837708, 0.389838569, 0.399839431, 0.409840042, 0.419840667, 0.429841458, 0.439842222, 0.449842958, 0.459843556, 0.469844389, 0.479845292, 0.489845875, 0.499846486, 0.509847278, 0.519848, 0.529848792, 0.539849417, 0.549850194, 0.559851111, 0.569851708, 0.579852333, 0.589853125, 0.599853875, 0.609854639, 0.61985525, 0.629856042, 0.639856958, 0.649857597, 0.659858181, 0.669858972, 0.67985975, 0.689860486, 0.699861125, 0.709861889, 0.719862819, 0.729863431, 0.739864028, 0.749864819, 0.759865556, 0.769866347, 0.779866958, 0.789867764, 0.799868667, 0.809869278, 0.819869889, 0.829870722, 0.839871403, 0.849872222, 0.859872806, 0.869873597, 0.879874569, 0.889875125, 0.899875778, 0.909876569, 0.919877278, 0.929878056, 0.939878681, 0.949879458, 0.959880375, 0.969880972, 0.979881625, 0.989882403, 0.999883167, 1.009883903, 1.019884514] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:45.717" endtime="20201112 10:16:45.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.712" endtime="20201112 10:16:45.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.721" endtime="20201112 10:16:45.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:45.724" endtime="20201112 10:16:45.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.723" endtime="20201112 10:16:45.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.719" endtime="20201112 10:16:45.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.183" endtime="20201112 10:16:45.745"></status>
</kw>
<msg timestamp="20201112 10:16:45.745" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.753" endtime="20201112 10:16:47.864"></status>
</kw>
<msg timestamp="20201112 10:16:47.865" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 171961089, 'wakeups': [171971144, 171981140, 171991141, 172001141, 172...</msg>
<status status="PASS" starttime="20201112 10:16:45.751" endtime="20201112 10:16:47.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 171961089, 'wakeups': [171971144, 171981140, 171991141, 172001141, 172...</msg>
<status status="PASS" starttime="20201112 10:16:47.868" endtime="20201112 10:16:47.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.874" endtime="20201112 10:16:47.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.749" endtime="20201112 10:16:47.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.747" endtime="20201112 10:16:47.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:47.885" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 171961089, 'wakeups': [171971144, 171981140, 171991141, 172001141, 172011141, 172021141, 172031141, 172041141, 172051141, 172061141, 172071141...</msg>
<status status="PASS" starttime="20201112 10:16:47.881" endtime="20201112 10:16:47.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.893" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:47.891" endtime="20201112 10:16:47.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.897" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:47.895" endtime="20201112 10:16:47.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.887" endtime="20201112 10:16:47.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.907" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:47.905" endtime="20201112 10:16:47.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.914" level="INFO">VALUE: 171961089</msg>
<status status="PASS" starttime="20201112 10:16:47.910" endtime="20201112 10:16:47.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.900" endtime="20201112 10:16:47.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.924" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:47.922" endtime="20201112 10:16:47.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.928" level="INFO">VALUE: [171971144, 171981140, 171991141, 172001141, 172011141, 172021141, 172031141, 172041141, 172051141, 172061141, 172071141, 172081141, 172091141, 172101141, 172111141, 172121141, 172131141, 172141141, 172151141, 172161141, 172171141, 172181141, 172191141, 172201141, 172211141, 172221141, 172231141, 172241141, 172251141, 172261141, 172271141, 172281141, 172291141, 172301141, 172311141, 172321141, 172331141, 172341141, 172351141, 172361141, 172371141, 172381141, 172391141, 172401141, 172411141, 172421141, 172431141, 172441141, 172451141, 172461141, 172471141, 172481141, 172491141, 172501141, 172511141, 172521141, 172531141, 172541141, 172551141, 172561141, 172571141, 172581141, 172591141, 172601141, 172611141, 172621141, 172631141, 172641141, 172651141, 172661141, 172671141, 172681141, 172691141, 172701141, 172711141, 172721141, 172731141, 172741141, 172751141, 172761141, 172771141, 172781141, 172791141, 172801141, 172811141, 172821141, 172831141, 172841141, 172851141, 172861141, 172871141, 172881141, 172891141, 172901141, 172911141, 172921141, 172931141, 172941141, 172951141, 172961141]</msg>
<status status="PASS" starttime="20201112 10:16:47.926" endtime="20201112 10:16:47.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.917" endtime="20201112 10:16:47.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.944" endtime="20201112 10:16:48.241"></status>
</kw>
<msg timestamp="20201112 10:16:48.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018976278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029032361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:47.940" endtime="20201112 10:16:48.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018976278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029032361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:48.245" endtime="20201112 10:16:48.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.252" endtime="20201112 10:16:48.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.935" endtime="20201112 10:16:48.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.931" endtime="20201112 10:16:48.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:48.282" level="INFO">${RESULT} = {'source_diff': [0, 0.010056083, 0.009996417, 0.010002069000000002, 0.010000624999999999, 0.010000806000000001, 0.010000929999999991, 0.010000611000000006, 0.010000598, 0.010000861, 0.0100006799999999...</msg>
<status status="PASS" starttime="20201112 10:16:48.256" endtime="20201112 10:16:48.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.287" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:48.286" endtime="20201112 10:16:48.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.289" level="INFO">VALUE: 0.018976278</msg>
<status status="PASS" starttime="20201112 10:16:48.288" endtime="20201112 10:16:48.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.283" endtime="20201112 10:16:48.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.294" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:48.293" endtime="20201112 10:16:48.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.297" level="INFO">VALUE: [0.029032361, 0.039028778, 0.049030847, 0.059031472, 0.069032278, 0.079033208, 0.089033819, 0.099034417, 0.109035278, 0.119035958, 0.129036736, 0.139037361, 0.149038167, 0.159039111, 0.169039694, 0.179040319, 0.189041194, 0.199041833, 0.209042681, 0.219043264, 0.229044056, 0.239044972, 0.249045597, 0.259046208, 0.269047014, 0.279047736, 0.289048528, 0.299049139, 0.309049944, 0.319050861, 0.329051472, 0.339052083, 0.349052889, 0.359053694, 0.369054417, 0.379055042, 0.389055833, 0.399056833, 0.409057375, 0.419057972, 0.429058778, 0.439059542, 0.449060278, 0.459060889, 0.469061681, 0.479062653, 0.489063222, 0.499063833, 0.509064611, 0.519065333, 0.529066139, 0.539066778, 0.549067528, 0.5590685, 0.569069069, 0.579069653, 0.589070458, 0.599071194, 0.609071972, 0.619072583, 0.629073375, 0.639074292, 0.649074903, 0.6590755, 0.669076319, 0.679077028, 0.689077806, 0.699078444, 0.709079236, 0.719080153, 0.729080736, 0.739081389, 0.749082153, 0.759082875, 0.769083722, 0.779084278, 0.789085083, 0.799086, 0.809086597, 0.819087208, 0.829088, 0.839088778, 0.849089583, 0.859090125, 0.869090986, 0.879091847, 0.889092472, 0.899093069, 0.909093903, 0.919094583, 0.929095375, 0.939096, 0.949096778, 0.959097694, 0.969098306, 0.979098917, 0.989099722, 0.999100444, 1.009101236, 1.019101847] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:48.296" endtime="20201112 10:16:48.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.290" endtime="20201112 10:16:48.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.300" endtime="20201112 10:16:48.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:48.304" endtime="20201112 10:16:48.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.302" endtime="20201112 10:16:48.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.299" endtime="20201112 10:16:48.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.746" endtime="20201112 10:16:48.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.628" endtime="20201112 10:16:48.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.627" endtime="20201112 10:16:48.325"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:48.327" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.335" endtime="20201112 10:16:50.446"></status>
</kw>
<msg timestamp="20201112 10:16:50.447" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 174543290, 'wakeups': [174553351, 174563351, 174573349, 174583349, 1...</msg>
<status status="PASS" starttime="20201112 10:16:48.333" endtime="20201112 10:16:50.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 174543290, 'wakeups': [174553351, 174563351, 174573349, 174583349, 1...</msg>
<status status="PASS" starttime="20201112 10:16:50.449" endtime="20201112 10:16:50.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.455" endtime="20201112 10:16:50.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.331" endtime="20201112 10:16:50.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.329" endtime="20201112 10:16:50.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:50.467" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 174543290, 'wakeups': [174553351, 174563351, 174573349, 174583349, 174593349, 174603349, 174613349, 174623349, 174633349, 174643349, 17465334...</msg>
<status status="PASS" starttime="20201112 10:16:50.463" endtime="20201112 10:16:50.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.476" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:50.474" endtime="20201112 10:16:50.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.481" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:50.479" endtime="20201112 10:16:50.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.469" endtime="20201112 10:16:50.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.491" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:50.489" endtime="20201112 10:16:50.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.495" level="INFO">VALUE: 174543290</msg>
<status status="PASS" starttime="20201112 10:16:50.493" endtime="20201112 10:16:50.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.484" endtime="20201112 10:16:50.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.505" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:50.503" endtime="20201112 10:16:50.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.510" level="INFO">VALUE: [174553351, 174563351, 174573349, 174583349, 174593349, 174603349, 174613349, 174623349, 174633349, 174643349, 174653349, 174663349, 174673349, 174683350, 174693349, 174703349, 174713349, 174723349, 174733349, 174743349, 174753349, 174763349, 174773349, 174783349, 174793349, 174803349, 174813349, 174823349, 174833349, 174843349, 174853349, 174863349, 174873349, 174883349, 174893349, 174903349, 174913349, 174923349, 174933349, 174943349, 174953349, 174963349, 174973349, 174983349, 174993349, 175003349, 175013349, 175023349, 175033349, 175043349, 175053349, 175063349, 175073349, 175083349, 175093349, 175103349, 175113349, 175123349, 175133349, 175143349, 175153349, 175163349, 175173349, 175183349, 175193349, 175203349, 175213349, 175223349, 175233349, 175243349, 175253349, 175263349, 175273349, 175283349, 175293349, 175303349, 175313349, 175323349, 175333349, 175343349, 175353349, 175363349, 175373349, 175383349, 175393349, 175403349, 175413349, 175423349, 175433349, 175443349, 175453349, 175463349, 175473349, 175483349, 175493349, 175503349, 175513349, 175523349, 175533349, 175543349]</msg>
<status status="PASS" starttime="20201112 10:16:50.508" endtime="20201112 10:16:50.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.498" endtime="20201112 10:16:50.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.527" endtime="20201112 10:16:50.822"></status>
</kw>
<msg timestamp="20201112 10:16:50.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031914083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:50.522" endtime="20201112 10:16:50.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031914083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:50.826" endtime="20201112 10:16:50.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.833" endtime="20201112 10:16:50.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.517" endtime="20201112 10:16:50.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.513" endtime="20201112 10:16:50.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:50.860" level="INFO">${RESULT} = {'source_diff': [0, 0.010062958000000004, 0.009999792, 0.009999443999999996, 0.010000638999999999, 0.010000861000000007, 0.010000652999999998, 0.010000791999999994, 0.010000639000000006, 0.01000084699...</msg>
<status status="PASS" starttime="20201112 10:16:50.837" endtime="20201112 10:16:50.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.865" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:50.864" endtime="20201112 10:16:50.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.867" level="INFO">VALUE: 0.021851125</msg>
<status status="PASS" starttime="20201112 10:16:50.866" endtime="20201112 10:16:50.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.861" endtime="20201112 10:16:50.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.872" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:50.871" endtime="20201112 10:16:50.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.875" level="INFO">VALUE: [0.031914083, 0.041913875, 0.051913319, 0.061913958, 0.071914819, 0.081915472, 0.091916264, 0.101916903, 0.11191775, 0.121918417, 0.131919222, 0.141919833, 0.151920653, 0.161921944, 0.171922167, 0.181922792, 0.191923597, 0.201924306, 0.211925097, 0.221925722, 0.231926583, 0.24192725, 0.251928097, 0.261928681, 0.271929472, 0.281930208, 0.291931028, 0.301931611, 0.311932431, 0.321933208, 0.331933944, 0.341934569, 0.351935375, 0.361936097, 0.371936903, 0.3819375, 0.391938319, 0.401939097, 0.411939819, 0.421940431, 0.431941236, 0.441941944, 0.451942736, 0.461943375, 0.471944167, 0.481944861, 0.491945653, 0.501946264, 0.511947056, 0.521947778, 0.531948569, 0.541949222, 0.551950014, 0.561950708, 0.571951528, 0.581952097, 0.591952903, 0.601953625, 0.611954472, 0.621955028, 0.631955833, 0.641956542, 0.651957347, 0.661957958, 0.67195875, 0.681959472, 0.691960264, 0.701960944, 0.711961667, 0.721962403, 0.731963194, 0.741963792, 0.751964597, 0.761965333, 0.771966111, 0.781966722, 0.791967528, 0.801968264, 0.811969028, 0.821969653, 0.831970458, 0.841971167, 0.851971958, 0.861972569, 0.871973389, 0.881974111, 0.891974889, 0.9019755, 0.911976319, 0.921977042, 0.931977819, 0.941978458, 0.951979222, 0.961979944, 0.97198075, 0.981981347, 0.991982153, 1.001982917, 1.011983708, 1.021984278] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:50.873" endtime="20201112 10:16:50.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.868" endtime="20201112 10:16:50.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.878" endtime="20201112 10:16:50.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:50.881" endtime="20201112 10:16:50.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.879" endtime="20201112 10:16:50.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.876" endtime="20201112 10:16:50.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.328" endtime="20201112 10:16:50.902"></status>
</kw>
<msg timestamp="20201112 10:16:50.902" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.911" endtime="20201112 10:16:53.021"></status>
</kw>
<msg timestamp="20201112 10:16:53.022" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 177118893, 'wakeups': [177128954, 177138954, 177148952, 177158952, 1...</msg>
<status status="PASS" starttime="20201112 10:16:50.908" endtime="20201112 10:16:53.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.028" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 177118893, 'wakeups': [177128954, 177138954, 177148952, 177158952, 1...</msg>
<status status="PASS" starttime="20201112 10:16:53.024" endtime="20201112 10:16:53.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.030" endtime="20201112 10:16:53.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.906" endtime="20201112 10:16:53.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.904" endtime="20201112 10:16:53.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:53.041" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 177118893, 'wakeups': [177128954, 177138954, 177148952, 177158952, 177168952, 177178952, 177188952, 177198952, 177208952, 177218952, 17722895...</msg>
<status status="PASS" starttime="20201112 10:16:53.037" endtime="20201112 10:16:53.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.049" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:53.047" endtime="20201112 10:16:53.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.054" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:53.052" endtime="20201112 10:16:53.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.043" endtime="20201112 10:16:53.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.064" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:53.062" endtime="20201112 10:16:53.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.068" level="INFO">VALUE: 177118893</msg>
<status status="PASS" starttime="20201112 10:16:53.066" endtime="20201112 10:16:53.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.057" endtime="20201112 10:16:53.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.078" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:53.076" endtime="20201112 10:16:53.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.083" level="INFO">VALUE: [177128954, 177138954, 177148952, 177158952, 177168952, 177178952, 177188952, 177198952, 177208952, 177218952, 177228952, 177238952, 177248952, 177258953, 177268952, 177278952, 177288952, 177298952, 177308952, 177318952, 177328952, 177338952, 177348952, 177358952, 177368952, 177378952, 177388952, 177398952, 177408952, 177418952, 177428952, 177438952, 177448952, 177458952, 177468952, 177478952, 177488952, 177498952, 177508952, 177518952, 177528952, 177538952, 177548952, 177558952, 177568952, 177578952, 177588952, 177598952, 177608952, 177618952, 177628952, 177638952, 177648952, 177658952, 177668952, 177678952, 177688952, 177698952, 177708952, 177718952, 177728952, 177738952, 177748952, 177758952, 177768952, 177778952, 177788952, 177798952, 177808952, 177818952, 177828952, 177838952, 177848952, 177858952, 177868952, 177878952, 177888952, 177898952, 177908952, 177918952, 177928952, 177938952, 177948952, 177958952, 177968952, 177978952, 177988952, 177998952, 178008952, 178018952, 178028952, 178038952, 178048952, 178058952, 178068952, 178078952, 178088952, 178098952, 178108952, 178118952]</msg>
<status status="PASS" starttime="20201112 10:16:53.081" endtime="20201112 10:16:53.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.071" endtime="20201112 10:16:53.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.099" endtime="20201112 10:16:53.393"></status>
</kw>
<msg timestamp="20201112 10:16:53.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030082972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:53.095" endtime="20201112 10:16:53.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030082972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:53.397" endtime="20201112 10:16:53.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.404" endtime="20201112 10:16:53.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.090" endtime="20201112 10:16:53.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.086" endtime="20201112 10:16:53.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:53.431" level="INFO">${RESULT} = {'source_diff': [0, 0.010062583, 0.009999833999999999, 0.009999444000000003, 0.010000638999999999, 0.010000791999999994, 0.01000073600000001, 0.010000805000000001, 0.010000597, 0.010000819999999994, 0...</msg>
<status status="PASS" starttime="20201112 10:16:53.408" endtime="20201112 10:16:53.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.436" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:53.435" endtime="20201112 10:16:53.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.438" level="INFO">VALUE: 0.020020389</msg>
<status status="PASS" starttime="20201112 10:16:53.437" endtime="20201112 10:16:53.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.432" endtime="20201112 10:16:53.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.443" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:53.442" endtime="20201112 10:16:53.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.445" level="INFO">VALUE: [0.030082972, 0.040082806, 0.05008225, 0.060082889, 0.070083681, 0.080084417, 0.090085222, 0.100085819, 0.110086639, 0.120087375, 0.130088153, 0.140088778, 0.150089583, 0.160090889, 0.170091111, 0.180091736, 0.190092514, 0.200093264, 0.210094056, 0.220094653, 0.230095472, 0.240096208, 0.250097056, 0.260097597, 0.270098417, 0.280099139, 0.290099931, 0.300100569, 0.310101361, 0.320102139, 0.330102875, 0.3401035, 0.350104319, 0.360105028, 0.370105833, 0.380106444, 0.390107264, 0.400107972, 0.410108764, 0.420109458, 0.430110167, 0.440110903, 0.450111694, 0.460112292, 0.470113097, 0.480113806, 0.490114597, 0.500115208, 0.510116028, 0.520116736, 0.530117514, 0.540118139, 0.550119, 0.560119694, 0.570120444, 0.580121056, 0.590121847, 0.600122597, 0.610123403, 0.620123972, 0.630124764, 0.6401255, 0.650126278, 0.660126889, 0.670127694, 0.680128417, 0.690129208, 0.700129819, 0.710130625, 0.720131333, 0.730132125, 0.740132736, 0.750133556, 0.760134264, 0.770135069, 0.780135681, 0.790136458, 0.800137181, 0.810137972, 0.820138583, 0.830139389, 0.840140125, 0.850140903, 0.860141528, 0.870142306, 0.880143042, 0.890143819, 0.900144431, 0.91014525, 0.920145958, 0.930146764, 0.940147361, 0.950148167, 0.960148917, 0.970149694, 0.980150292, 0.990151097, 1.000151819, 1.010152597, 1.020153208] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:53.444" endtime="20201112 10:16:53.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.439" endtime="20201112 10:16:53.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.448" endtime="20201112 10:16:53.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:53.456" endtime="20201112 10:16:53.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.454" endtime="20201112 10:16:53.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.447" endtime="20201112 10:16:53.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.902" endtime="20201112 10:16:53.477"></status>
</kw>
<msg timestamp="20201112 10:16:53.477" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.485" endtime="20201112 10:16:55.595"></status>
</kw>
<msg timestamp="20201112 10:16:55.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 179693248, 'wakeups': [179703310, 179713309, 179723307, 179733307, 1...</msg>
<status status="PASS" starttime="20201112 10:16:53.484" endtime="20201112 10:16:55.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 179693248, 'wakeups': [179703310, 179713309, 179723307, 179733307, 1...</msg>
<status status="PASS" starttime="20201112 10:16:55.599" endtime="20201112 10:16:55.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.605" endtime="20201112 10:16:55.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.481" endtime="20201112 10:16:55.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.479" endtime="20201112 10:16:55.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:55.617" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 179693248, 'wakeups': [179703310, 179713309, 179723307, 179733307, 179743307, 179753307, 179763307, 179773307, 179783307, 179793307, 17980330...</msg>
<status status="PASS" starttime="20201112 10:16:55.613" endtime="20201112 10:16:55.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.625" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:55.623" endtime="20201112 10:16:55.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.630" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:55.628" endtime="20201112 10:16:55.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.619" endtime="20201112 10:16:55.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.640" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:55.638" endtime="20201112 10:16:55.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.646" level="INFO">VALUE: 179693248</msg>
<status status="PASS" starttime="20201112 10:16:55.642" endtime="20201112 10:16:55.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.633" endtime="20201112 10:16:55.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.656" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:55.654" endtime="20201112 10:16:55.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.661" level="INFO">VALUE: [179703310, 179713309, 179723307, 179733307, 179743307, 179753307, 179763307, 179773307, 179783307, 179793307, 179803307, 179813307, 179823307, 179833308, 179843307, 179853307, 179863307, 179873307, 179883307, 179893307, 179903307, 179913307, 179923307, 179933307, 179943307, 179953307, 179963307, 179973307, 179983307, 179993307, 180003307, 180013307, 180023307, 180033307, 180043307, 180053307, 180063307, 180073307, 180083307, 180093307, 180103307, 180113307, 180123307, 180133307, 180143307, 180153307, 180163307, 180173307, 180183307, 180193307, 180203307, 180213307, 180223307, 180233307, 180243307, 180253307, 180263307, 180273307, 180283307, 180293307, 180303307, 180313307, 180323307, 180333307, 180343307, 180353307, 180363307, 180373307, 180383307, 180393307, 180403307, 180413307, 180423307, 180433307, 180443307, 180453307, 180463307, 180473307, 180483307, 180493307, 180503307, 180513307, 180523307, 180533307, 180543307, 180553307, 180563307, 180573307, 180583307, 180593307, 180603307, 180613307, 180623307, 180633307, 180643307, 180653307, 180663307, 180673307, 180683307, 180693307]</msg>
<status status="PASS" starttime="20201112 10:16:55.659" endtime="20201112 10:16:55.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.649" endtime="20201112 10:16:55.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.671" endtime="20201112 10:16:55.961"></status>
</kw>
<msg timestamp="20201112 10:16:55.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029141028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:55.669" endtime="20201112 10:16:55.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029141028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:55.965" endtime="20201112 10:16:55.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.972" endtime="20201112 10:16:55.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.666" endtime="20201112 10:16:55.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.664" endtime="20201112 10:16:55.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:55.999" level="INFO">${RESULT} = {'source_diff': [0, 0.010063291999999998, 0.009998791, 0.009999445000000003, 0.010000624999999999, 0.010000805000000001, 0.010000750000000003, 0.010000777999999988, 0.010000611000000006, 0.01000081999...</msg>
<status status="PASS" starttime="20201112 10:16:55.976" endtime="20201112 10:16:56.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.004" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:56.003" endtime="20201112 10:16:56.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.006" level="INFO">VALUE: 0.019077736</msg>
<status status="PASS" starttime="20201112 10:16:56.005" endtime="20201112 10:16:56.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.000" endtime="20201112 10:16:56.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.011" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:56.010" endtime="20201112 10:16:56.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.014" level="INFO">VALUE: [0.029141028, 0.039139819, 0.049139264, 0.059139889, 0.069140694, 0.079141444, 0.089142222, 0.099142833, 0.109143653, 0.119144361, 0.129145167, 0.139145778, 0.149146597, 0.159147903, 0.169148181, 0.179148736, 0.189149528, 0.19915025, 0.209151069, 0.219151681, 0.229152486, 0.239153194, 0.249154014, 0.259154611, 0.269155417, 0.279156139, 0.289156931, 0.299157556, 0.309158361, 0.319159083, 0.329159903, 0.339160514, 0.349161306, 0.359162069, 0.369162833, 0.379163458, 0.389164264, 0.399164972, 0.409165819, 0.419166389, 0.429167194, 0.439167944, 0.449168708, 0.459169306, 0.469170125, 0.479170847, 0.489171625, 0.499172236, 0.509173028, 0.519173764, 0.529174542, 0.539175153, 0.549175944, 0.559176667, 0.569177514, 0.579178083, 0.589178875, 0.599179611, 0.609180375, 0.619180986, 0.629181806, 0.6391825, 0.649183306, 0.659183903, 0.669184708, 0.679185431, 0.689186236, 0.699186833, 0.709187625, 0.719188361, 0.729189139, 0.73918975, 0.749190556, 0.759191278, 0.769192056, 0.779192667, 0.789193472, 0.799194194, 0.809195, 0.819195597, 0.829196389, 0.839197111, 0.849197903, 0.859198514, 0.869199319, 0.879200042, 0.889200903, 0.899201458, 0.909202236, 0.919202958, 0.929203764, 0.939204403, 0.949205167, 0.959205917, 0.969206681, 0.979207292, 0.989208111, 0.999208819, 1.009209611, 1.019210222] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:56.013" endtime="20201112 10:16:56.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.007" endtime="20201112 10:16:56.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:56.017" endtime="20201112 10:16:56.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:56.021" endtime="20201112 10:16:56.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.019" endtime="20201112 10:16:56.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.015" endtime="20201112 10:16:56.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.478" endtime="20201112 10:16:56.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.326" endtime="20201112 10:16:56.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.325" endtime="20201112 10:16:56.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.977" endtime="20201112 10:16:56.042"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 10:15:38.889" endtime="20201112 10:16:56.042" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:15:37.459" endtime="20201112 10:16:56.046"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 10:13:54.675" endtime="20201112 10:16:56.061"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
